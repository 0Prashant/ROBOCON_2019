ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_GPIO_EXTI_Callback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LFB126:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.c ****   * inserted by the user or by software development tools
  11:Core/Src/main.c ****   * are owned by their respective copyright owners.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.c ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.c ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.c ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.c ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.c ****   *      without specific prior written permission.
  25:Core/Src/main.c ****   *
  26:Core/Src/main.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 2


  32:Core/Src/main.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.c ****   *
  37:Core/Src/main.c ****   ******************************************************************************
  38:Core/Src/main.c ****   */
  39:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  40:Core/Src/main.c **** #include "main.h"
  41:Core/Src/main.c **** #include "stm32f4xx_hal.h"
  42:Core/Src/main.c **** #include "adc.h"
  43:Core/Src/main.c **** #include "tim.h"
  44:Core/Src/main.c **** #include "usart.h"
  45:Core/Src/main.c **** #include "gpio.h"
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  48:Core/Src/main.c **** #include "defines.h"
  49:Core/Src/main.c **** #include "robo_init.h"
  50:Core/Src/main.c **** #include "robot.h"
  51:Core/Src/main.c **** /* USER CODE END Includes */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** int16_t pulses[4];
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  73:Core/Src/main.c **** {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  74:Core/Src/main.c ****         switch (GPIO_Pin) {
  38              		.loc 1 74 0
  39 0002 8028     		cmp	r0, #128
  40 0004 26D0     		beq	.L3
  41 0006 12D9     		bls	.L13
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 3


  42 0008 B0F5006F 		cmp	r0, #2048
  43 000c 33D0     		beq	.L6
  44 000e B0F5005F 		cmp	r0, #8192
  45 0012 0BD1     		bne	.L1
  75:Core/Src/main.c ****                 case GPIO_PIN_1 : {             // PA1
  76:Core/Src/main.c ****                         if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0))
  77:Core/Src/main.c ****                         {
  78:Core/Src/main.c ****                                 ++pulses[0];
  79:Core/Src/main.c ****                         }
  80:Core/Src/main.c ****                         else
  81:Core/Src/main.c ****                         {
  82:Core/Src/main.c ****                                 --pulses[0];
  83:Core/Src/main.c ****                         }
  84:Core/Src/main.c ****                 } break;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****                 case GPIO_PIN_7 : {             // PA7
  87:Core/Src/main.c ****                         if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6))
  88:Core/Src/main.c ****                         {
  89:Core/Src/main.c ****                                 ++pulses[1];
  90:Core/Src/main.c ****                         }
  91:Core/Src/main.c ****                         else
  92:Core/Src/main.c ****                         {
  93:Core/Src/main.c ****                                 --pulses[1];
  94:Core/Src/main.c ****                         }
  95:Core/Src/main.c ****                 } break;
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****                 case GPIO_PIN_11 : {            // PE11
  98:Core/Src/main.c ****                         if (HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_9))
  99:Core/Src/main.c ****                         {
 100:Core/Src/main.c ****                                 ++pulses[2];
 101:Core/Src/main.c ****                         }
 102:Core/Src/main.c ****                         else
 103:Core/Src/main.c ****                         {
 104:Core/Src/main.c ****                                 --pulses[2];
 105:Core/Src/main.c ****                         }
 106:Core/Src/main.c ****                 } break;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****                 case GPIO_PIN_13 : {            // PD13
 109:Core/Src/main.c ****                         if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_12))
  46              		.loc 1 109 0
  47 0014 4FF48051 		mov	r1, #4096
  48 0018 2348     		ldr	r0, .L15
  49              	.LVL1:
  50 001a FFF7FEFF 		bl	HAL_GPIO_ReadPin
  51              	.LVL2:
  52 001e 0028     		cmp	r0, #0
  53 0020 3BD1     		bne	.L14
 110:Core/Src/main.c ****                         {
 111:Core/Src/main.c ****                                 ++pulses[3];
 112:Core/Src/main.c ****                         }
 113:Core/Src/main.c ****                         else
 114:Core/Src/main.c ****                         {
 115:Core/Src/main.c ****                                 --pulses[3];
  54              		.loc 1 115 0
  55 0022 224A     		ldr	r2, .L15+4
  56 0024 B2F90630 		ldrsh	r3, [r2, #6]
  57 0028 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 4


  58 002a D380     		strh	r3, [r2, #6]	@ movhi
  59              	.L1:
 116:Core/Src/main.c ****                         }
 117:Core/Src/main.c ****                 } break;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****                 default : {
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****                 }
 122:Core/Src/main.c ****         }
 123:Core/Src/main.c **** }
  60              		.loc 1 123 0
  61 002c 08BD     		pop	{r3, pc}
  62              	.LVL3:
  63              	.L13:
  74:Core/Src/main.c ****                 case GPIO_PIN_1 : {             // PA1
  64              		.loc 1 74 0
  65 002e 0228     		cmp	r0, #2
  66 0030 FCD1     		bne	.L1
  76:Core/Src/main.c ****                         {
  67              		.loc 1 76 0
  68 0032 0121     		movs	r1, #1
  69 0034 1E48     		ldr	r0, .L15+8
  70              	.LVL4:
  71 0036 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  72              	.LVL5:
  73 003a 28B1     		cbz	r0, .L8
  78:Core/Src/main.c ****                         }
  74              		.loc 1 78 0
  75 003c 1B4A     		ldr	r2, .L15+4
  76 003e B2F90030 		ldrsh	r3, [r2]
  77 0042 0133     		adds	r3, r3, #1
  78 0044 1380     		strh	r3, [r2]	@ movhi
  79 0046 F1E7     		b	.L1
  80              	.L8:
  82:Core/Src/main.c ****                         }
  81              		.loc 1 82 0
  82 0048 184A     		ldr	r2, .L15+4
  83 004a B2F90030 		ldrsh	r3, [r2]
  84 004e 013B     		subs	r3, r3, #1
  85 0050 1380     		strh	r3, [r2]	@ movhi
  86 0052 EBE7     		b	.L1
  87              	.LVL6:
  88              	.L3:
  87:Core/Src/main.c ****                         {
  89              		.loc 1 87 0
  90 0054 4021     		movs	r1, #64
  91 0056 1648     		ldr	r0, .L15+8
  92              	.LVL7:
  93 0058 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  94              	.LVL8:
  95 005c 28B1     		cbz	r0, .L9
  89:Core/Src/main.c ****                         }
  96              		.loc 1 89 0
  97 005e 134A     		ldr	r2, .L15+4
  98 0060 B2F90230 		ldrsh	r3, [r2, #2]
  99 0064 0133     		adds	r3, r3, #1
 100 0066 5380     		strh	r3, [r2, #2]	@ movhi
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 5


 101 0068 E0E7     		b	.L1
 102              	.L9:
  93:Core/Src/main.c ****                         }
 103              		.loc 1 93 0
 104 006a 104A     		ldr	r2, .L15+4
 105 006c B2F90230 		ldrsh	r3, [r2, #2]
 106 0070 013B     		subs	r3, r3, #1
 107 0072 5380     		strh	r3, [r2, #2]	@ movhi
 108 0074 DAE7     		b	.L1
 109              	.LVL9:
 110              	.L6:
  98:Core/Src/main.c ****                         {
 111              		.loc 1 98 0
 112 0076 4FF40071 		mov	r1, #512
 113 007a 0E48     		ldr	r0, .L15+12
 114              	.LVL10:
 115 007c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 116              	.LVL11:
 117 0080 28B1     		cbz	r0, .L10
 100:Core/Src/main.c ****                         }
 118              		.loc 1 100 0
 119 0082 0A4A     		ldr	r2, .L15+4
 120 0084 B2F90430 		ldrsh	r3, [r2, #4]
 121 0088 0133     		adds	r3, r3, #1
 122 008a 9380     		strh	r3, [r2, #4]	@ movhi
 123 008c CEE7     		b	.L1
 124              	.L10:
 104:Core/Src/main.c ****                         }
 125              		.loc 1 104 0
 126 008e 074A     		ldr	r2, .L15+4
 127 0090 B2F90430 		ldrsh	r3, [r2, #4]
 128 0094 013B     		subs	r3, r3, #1
 129 0096 9380     		strh	r3, [r2, #4]	@ movhi
 130 0098 C8E7     		b	.L1
 131              	.L14:
 111:Core/Src/main.c ****                         }
 132              		.loc 1 111 0
 133 009a 044A     		ldr	r2, .L15+4
 134 009c B2F90630 		ldrsh	r3, [r2, #6]
 135 00a0 0133     		adds	r3, r3, #1
 136 00a2 D380     		strh	r3, [r2, #6]	@ movhi
 137 00a4 C2E7     		b	.L1
 138              	.L16:
 139 00a6 00BF     		.align	2
 140              	.L15:
 141 00a8 000C0240 		.word	1073875968
 142 00ac 00000000 		.word	pulses
 143 00b0 00000240 		.word	1073872896
 144 00b4 00100240 		.word	1073876992
 145              		.cfi_endproc
 146              	.LFE126:
 148              		.section	.text._Error_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	_Error_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 6


 154              		.fpu fpv4-sp-d16
 156              	_Error_Handler:
 157              	.LFB129:
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /* USER CODE END 0 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /**
 128:Core/Src/main.c ****   * @brief  The application entry point.
 129:Core/Src/main.c ****   *
 130:Core/Src/main.c ****   * @retval None
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** int main(void)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****         /* USER CODE BEGIN 1 */
 135:Core/Src/main.c ****         int16_t pulse_buffer[4] = { 0 };
 136:Core/Src/main.c ****         int16_t d1_pb[3] = { 0 };
 137:Core/Src/main.c ****         int16_t d2_pb[2] = { 0 };
 138:Core/Src/main.c ****         int16_t d3_pb;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****         float last_omega;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****         uint32_t update_tick, tick;
 143:Core/Src/main.c ****         /* USER CODE END 1 */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****         /* MCU Configuration----------------------------------------------------------*/
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 148:Core/Src/main.c ****         HAL_Init();
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****         /* USER CODE BEGIN Init */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****         /* USER CODE END Init */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****         /* Configure the system clock */
 155:Core/Src/main.c ****         SystemClock_Config();
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****         /* USER CODE BEGIN SysInit */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****         /* USER CODE END SysInit */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****         /* Initialize all configured peripherals */
 162:Core/Src/main.c ****         MX_GPIO_Init();
 163:Core/Src/main.c ****         MX_ADC1_Init();
 164:Core/Src/main.c ****         MX_TIM8_Init();
 165:Core/Src/main.c ****         MX_USART1_UART_Init();
 166:Core/Src/main.c ****         MX_USART3_UART_Init();
 167:Core/Src/main.c ****         MX_TIM14_Init();
 168:Core/Src/main.c ****         /* USER CODE BEGIN 2 */
 169:Core/Src/main.c ****         // sHAL_Delay(1000);
 170:Core/Src/main.c ****         HAL_TIM_Base_Start(&htim8);
 171:Core/Src/main.c ****         wheel_init();
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_1);
 174:Core/Src/main.c ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 175:Core/Src/main.c ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_3);
 176:Core/Src/main.c ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_4);
 177:Core/Src/main.c **** 
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 7


 178:Core/Src/main.c ****         // HAL_TIM_Base_Start_IT(&htim14);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****         // calculate_robot_velocity(0.1, 0.1);
 181:Core/Src/main.c ****         // run_CurrentConfig();
 182:Core/Src/main.c ****         set_Direction(&Wheel_arr[0], DIR_AHEAD);
 183:Core/Src/main.c ****         set_DutyCycle(&Wheel_arr[0], 65535);
 184:Core/Src/main.c ****         printf("%d\n", 0);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****         update_tick = HAL_GetTick();
 187:Core/Src/main.c ****         tick = update_tick;
 188:Core/Src/main.c ****         uint32_t dt = 10L;
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****         int32_t i_omega;
 191:Core/Src/main.c ****         /* USER CODE END 2 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****         /* Infinite loop */
 194:Core/Src/main.c ****         /* USER CODE BEGIN WHILE */
 195:Core/Src/main.c ****         while (1)
 196:Core/Src/main.c ****         {
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****                 /* USER CODE END WHILE */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****                 /* USER CODE BEGIN 3 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****                 if (HAL_GetTick() - update_tick > dt) {
 203:Core/Src/main.c ****                         update_tick = HAL_GetTick();
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****                         for (uint8_t i = 0; i < 3; ++i) {
 206:Core/Src/main.c ****                                 pulse_buffer[i] = pulse_buffer[i+1];
 207:Core/Src/main.c ****                         }
 208:Core/Src/main.c ****                         pulse_buffer[3] = pulses[0];
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****                         for (uint8_t i = 0; i < 2; ++i) {
 211:Core/Src/main.c ****                                 d1_pb[i] = d1_pb[i+1];
 212:Core/Src/main.c ****                         }
 213:Core/Src/main.c ****                         d1_pb[2] = pulse_buffer[3] - pulse_buffer[2];
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****                         d2_pb[0] = d2_pb[1];
 216:Core/Src/main.c ****                         d2_pb[1] = d1_pb[2] - d1_pb[0];
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****                         d3_pb = d2_pb[1] - d2_pb[0];
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****                         last_omega = ((25.173) / dt) * (d1_pb[2] + d2_pb[1]/2.0 + d3_pb / 3.0);
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****                         i_omega = last_omega * 1000;
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****                         printf("%ld\n", i_omega);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****                         // printf("%d\n", pulses[0]);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****                 }
 229:Core/Src/main.c ****                 
 230:Core/Src/main.c ****                 if (HAL_GetTick() - tick > 4000) {
 231:Core/Src/main.c ****                         break;
 232:Core/Src/main.c ****                 }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****         }
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 8


 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****         for (uint16_t i = 65000; i > 1000; i -= 1000) {
 237:Core/Src/main.c ****                 set_DutyCycle(&Wheel_arr[0], i);
 238:Core/Src/main.c ****                 HAL_Delay(100);
 239:Core/Src/main.c ****         }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****         set_DutyCycle(&Wheel_arr[0], 0);
 242:Core/Src/main.c ****         set_Direction(&Wheel_arr[0], DIR_HALT);
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****         while(1);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****         /* USER CODE END 3 */
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief System Clock Configuration
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** void SystemClock_Config(void)
 254:Core/Src/main.c **** {
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****         RCC_OscInitTypeDef RCC_OscInitStruct;
 257:Core/Src/main.c ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****         /**Configure the main internal regulator output voltage 
 260:Core/Src/main.c ****     */
 261:Core/Src/main.c ****         __HAL_RCC_PWR_CLK_ENABLE();
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****         /**Initializes the CPU, AHB and APB busses clocks 
 266:Core/Src/main.c ****     */
 267:Core/Src/main.c ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 268:Core/Src/main.c ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 269:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 270:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 271:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLM = 8;
 272:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLN = 336;
 273:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 274:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 275:Core/Src/main.c ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 276:Core/Src/main.c ****         {
 277:Core/Src/main.c ****                 _Error_Handler(__FILE__, __LINE__);
 278:Core/Src/main.c ****         }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****         /**Initializes the CPU, AHB and APB busses clocks 
 281:Core/Src/main.c ****     */
 282:Core/Src/main.c ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
 283:Core/Src/main.c ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 284:Core/Src/main.c ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 285:Core/Src/main.c ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 286:Core/Src/main.c ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 289:Core/Src/main.c ****         {
 290:Core/Src/main.c ****                 _Error_Handler(__FILE__, __LINE__);
 291:Core/Src/main.c ****         }
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 9


 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****         /**Configure the Systick interrupt time 
 294:Core/Src/main.c ****     */
 295:Core/Src/main.c ****         HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****         /**Configure the Systick 
 298:Core/Src/main.c ****     */
 299:Core/Src/main.c ****         HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****         /* SysTick_IRQn interrupt configuration */
 302:Core/Src/main.c ****         HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 303:Core/Src/main.c **** }
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /* USER CODE END 4 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /**
 310:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 311:Core/Src/main.c ****   * @param  file: The file name as string.
 312:Core/Src/main.c ****   * @param  line: The line in file as a number.
 313:Core/Src/main.c ****   * @retval None
 314:Core/Src/main.c ****   */
 315:Core/Src/main.c **** void _Error_Handler(char *file, int line)
 316:Core/Src/main.c **** {
 158              		.loc 1 316 0
 159              		.cfi_startproc
 160              		@ Volatile: function does not return.
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL12:
 165              	.L18:
 166 0000 FEE7     		b	.L18
 167              		.cfi_endproc
 168              	.LFE129:
 170              		.section	.text.SystemClock_Config,"ax",%progbits
 171              		.align	1
 172              		.global	SystemClock_Config
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	SystemClock_Config:
 179              	.LFB128:
 254:Core/Src/main.c **** 
 180              		.loc 1 254 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 80
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Core/Src/main.c **** 
 184              		.loc 1 254 0
 185 0000 00B5     		push	{lr}
 186              	.LCFI1:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 14, -4
 189 0002 95B0     		sub	sp, sp, #84
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 10


 190              	.LCFI2:
 191              		.cfi_def_cfa_offset 88
 192              	.LBB2:
 261:Core/Src/main.c **** 
 193              		.loc 1 261 0
 194 0004 0021     		movs	r1, #0
 195 0006 0191     		str	r1, [sp, #4]
 196 0008 2C4B     		ldr	r3, .L25
 197 000a 1A6C     		ldr	r2, [r3, #64]
 198 000c 42F08052 		orr	r2, r2, #268435456
 199 0010 1A64     		str	r2, [r3, #64]
 200 0012 1B6C     		ldr	r3, [r3, #64]
 201 0014 03F08053 		and	r3, r3, #268435456
 202 0018 0193     		str	r3, [sp, #4]
 203 001a 019B     		ldr	r3, [sp, #4]
 204              	.LBE2:
 205              	.LBB3:
 263:Core/Src/main.c **** 
 206              		.loc 1 263 0
 207 001c 0291     		str	r1, [sp, #8]
 208 001e 284B     		ldr	r3, .L25+4
 209 0020 1A68     		ldr	r2, [r3]
 210 0022 42F48042 		orr	r2, r2, #16384
 211 0026 1A60     		str	r2, [r3]
 212 0028 1B68     		ldr	r3, [r3]
 213 002a 03F48043 		and	r3, r3, #16384
 214 002e 0293     		str	r3, [sp, #8]
 215 0030 029B     		ldr	r3, [sp, #8]
 216              	.LBE3:
 267:Core/Src/main.c ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 217              		.loc 1 267 0
 218 0032 0123     		movs	r3, #1
 219 0034 0893     		str	r3, [sp, #32]
 268:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 220              		.loc 1 268 0
 221 0036 4FF48033 		mov	r3, #65536
 222 003a 0993     		str	r3, [sp, #36]
 269:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 223              		.loc 1 269 0
 224 003c 0223     		movs	r3, #2
 225 003e 0E93     		str	r3, [sp, #56]
 270:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLM = 8;
 226              		.loc 1 270 0
 227 0040 4FF48002 		mov	r2, #4194304
 228 0044 0F92     		str	r2, [sp, #60]
 271:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLN = 336;
 229              		.loc 1 271 0
 230 0046 0822     		movs	r2, #8
 231 0048 1092     		str	r2, [sp, #64]
 272:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 232              		.loc 1 272 0
 233 004a 4FF4A872 		mov	r2, #336
 234 004e 1192     		str	r2, [sp, #68]
 273:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 235              		.loc 1 273 0
 236 0050 1293     		str	r3, [sp, #72]
 274:Core/Src/main.c ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 11


 237              		.loc 1 274 0
 238 0052 0423     		movs	r3, #4
 239 0054 1393     		str	r3, [sp, #76]
 275:Core/Src/main.c ****         {
 240              		.loc 1 275 0
 241 0056 08A8     		add	r0, sp, #32
 242 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 243              	.LVL13:
 244 005c 20BB     		cbnz	r0, .L23
 282:Core/Src/main.c ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 245              		.loc 1 282 0
 246 005e 0F23     		movs	r3, #15
 247 0060 0393     		str	r3, [sp, #12]
 283:Core/Src/main.c ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248              		.loc 1 283 0
 249 0062 0223     		movs	r3, #2
 250 0064 0493     		str	r3, [sp, #16]
 284:Core/Src/main.c ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 251              		.loc 1 284 0
 252 0066 0023     		movs	r3, #0
 253 0068 0593     		str	r3, [sp, #20]
 285:Core/Src/main.c ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 254              		.loc 1 285 0
 255 006a 4FF4A053 		mov	r3, #5120
 256 006e 0693     		str	r3, [sp, #24]
 286:Core/Src/main.c **** 
 257              		.loc 1 286 0
 258 0070 4FF48053 		mov	r3, #4096
 259 0074 0793     		str	r3, [sp, #28]
 288:Core/Src/main.c ****         {
 260              		.loc 1 288 0
 261 0076 0521     		movs	r1, #5
 262 0078 03A8     		add	r0, sp, #12
 263 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 264              	.LVL14:
 265 007e C0B9     		cbnz	r0, .L24
 295:Core/Src/main.c **** 
 266              		.loc 1 295 0
 267 0080 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 268              	.LVL15:
 269 0084 0F4B     		ldr	r3, .L25+8
 270 0086 A3FB0030 		umull	r3, r0, r3, r0
 271 008a 8009     		lsrs	r0, r0, #6
 272 008c FFF7FEFF 		bl	HAL_SYSTICK_Config
 273              	.LVL16:
 299:Core/Src/main.c **** 
 274              		.loc 1 299 0
 275 0090 0420     		movs	r0, #4
 276 0092 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 277              	.LVL17:
 302:Core/Src/main.c **** }
 278              		.loc 1 302 0
 279 0096 0022     		movs	r2, #0
 280 0098 1146     		mov	r1, r2
 281 009a 4FF0FF30 		mov	r0, #-1
 282 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 283              	.LVL18:
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 12


 303:Core/Src/main.c **** 
 284              		.loc 1 303 0
 285 00a2 15B0     		add	sp, sp, #84
 286              	.LCFI3:
 287              		.cfi_remember_state
 288              		.cfi_def_cfa_offset 4
 289              		@ sp needed
 290 00a4 5DF804FB 		ldr	pc, [sp], #4
 291              	.L23:
 292              	.LCFI4:
 293              		.cfi_restore_state
 277:Core/Src/main.c ****         }
 294              		.loc 1 277 0
 295 00a8 40F21511 		movw	r1, #277
 296 00ac 0648     		ldr	r0, .L25+12
 297 00ae FFF7FEFF 		bl	_Error_Handler
 298              	.LVL19:
 299              	.L24:
 290:Core/Src/main.c ****         }
 300              		.loc 1 290 0
 301 00b2 4FF49171 		mov	r1, #290
 302 00b6 0448     		ldr	r0, .L25+12
 303 00b8 FFF7FEFF 		bl	_Error_Handler
 304              	.LVL20:
 305              	.L26:
 306              		.align	2
 307              	.L25:
 308 00bc 00380240 		.word	1073887232
 309 00c0 00700040 		.word	1073770496
 310 00c4 D34D6210 		.word	274877907
 311 00c8 00000000 		.word	.LC0
 312              		.cfi_endproc
 313              	.LFE128:
 315              		.global	__aeabi_i2d
 316              		.global	__aeabi_dmul
 317              		.global	__aeabi_dadd
 318              		.global	__aeabi_ddiv
 319              		.global	__aeabi_d2f
 320              		.section	.text.main,"ax",%progbits
 321              		.align	1
 322              		.global	main
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	main:
 329              	.LFB127:
 133:Core/Src/main.c ****         /* USER CODE BEGIN 1 */
 330              		.loc 1 133 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 24
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 335              	.LCFI5:
 336              		.cfi_def_cfa_offset 28
 337              		.cfi_offset 4, -28
 338              		.cfi_offset 5, -24
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 13


 339              		.cfi_offset 6, -20
 340              		.cfi_offset 7, -16
 341              		.cfi_offset 8, -12
 342              		.cfi_offset 9, -8
 343              		.cfi_offset 14, -4
 344 0004 87B0     		sub	sp, sp, #28
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 56
 135:Core/Src/main.c ****         int16_t d1_pb[3] = { 0 };
 347              		.loc 1 135 0
 348 0006 0024     		movs	r4, #0
 349 0008 0494     		str	r4, [sp, #16]
 350 000a 0594     		str	r4, [sp, #20]
 136:Core/Src/main.c ****         int16_t d2_pb[2] = { 0 };
 351              		.loc 1 136 0
 352 000c 0294     		str	r4, [sp, #8]
 353 000e ADF80C40 		strh	r4, [sp, #12]	@ movhi
 137:Core/Src/main.c ****         int16_t d3_pb;
 354              		.loc 1 137 0
 355 0012 0194     		str	r4, [sp, #4]
 148:Core/Src/main.c **** 
 356              		.loc 1 148 0
 357 0014 FFF7FEFF 		bl	HAL_Init
 358              	.LVL21:
 155:Core/Src/main.c **** 
 359              		.loc 1 155 0
 360 0018 FFF7FEFF 		bl	SystemClock_Config
 361              	.LVL22:
 162:Core/Src/main.c ****         MX_ADC1_Init();
 362              		.loc 1 162 0
 363 001c FFF7FEFF 		bl	MX_GPIO_Init
 364              	.LVL23:
 163:Core/Src/main.c ****         MX_TIM8_Init();
 365              		.loc 1 163 0
 366 0020 FFF7FEFF 		bl	MX_ADC1_Init
 367              	.LVL24:
 164:Core/Src/main.c ****         MX_USART1_UART_Init();
 368              		.loc 1 164 0
 369 0024 FFF7FEFF 		bl	MX_TIM8_Init
 370              	.LVL25:
 165:Core/Src/main.c ****         MX_USART3_UART_Init();
 371              		.loc 1 165 0
 372 0028 FFF7FEFF 		bl	MX_USART1_UART_Init
 373              	.LVL26:
 166:Core/Src/main.c ****         MX_TIM14_Init();
 374              		.loc 1 166 0
 375 002c FFF7FEFF 		bl	MX_USART3_UART_Init
 376              	.LVL27:
 167:Core/Src/main.c ****         /* USER CODE BEGIN 2 */
 377              		.loc 1 167 0
 378 0030 FFF7FEFF 		bl	MX_TIM14_Init
 379              	.LVL28:
 170:Core/Src/main.c ****         wheel_init();
 380              		.loc 1 170 0
 381 0034 604D     		ldr	r5, .L40+8
 382 0036 2846     		mov	r0, r5
 383 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 14


 384              	.LVL29:
 171:Core/Src/main.c **** 
 385              		.loc 1 171 0
 386 003c FFF7FEFF 		bl	wheel_init
 387              	.LVL30:
 173:Core/Src/main.c ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 388              		.loc 1 173 0
 389 0040 2146     		mov	r1, r4
 390 0042 2846     		mov	r0, r5
 391 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 392              	.LVL31:
 174:Core/Src/main.c ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_3);
 393              		.loc 1 174 0
 394 0048 0421     		movs	r1, #4
 395 004a 2846     		mov	r0, r5
 396 004c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 397              	.LVL32:
 175:Core/Src/main.c ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_4);
 398              		.loc 1 175 0
 399 0050 0821     		movs	r1, #8
 400 0052 2846     		mov	r0, r5
 401 0054 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 402              	.LVL33:
 176:Core/Src/main.c **** 
 403              		.loc 1 176 0
 404 0058 0C21     		movs	r1, #12
 405 005a 2846     		mov	r0, r5
 406 005c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 407              	.LVL34:
 182:Core/Src/main.c ****         set_DutyCycle(&Wheel_arr[0], 65535);
 408              		.loc 1 182 0
 409 0060 564D     		ldr	r5, .L40+12
 410 0062 2146     		mov	r1, r4
 411 0064 2846     		mov	r0, r5
 412 0066 FFF7FEFF 		bl	set_Direction
 413              	.LVL35:
 183:Core/Src/main.c ****         printf("%d\n", 0);
 414              		.loc 1 183 0
 415 006a 4FF6FF71 		movw	r1, #65535
 416 006e 2846     		mov	r0, r5
 417 0070 FFF7FEFF 		bl	set_DutyCycle
 418              	.LVL36:
 184:Core/Src/main.c **** 
 419              		.loc 1 184 0
 420 0074 2146     		mov	r1, r4
 421 0076 5248     		ldr	r0, .L40+16
 422 0078 FFF7FEFF 		bl	printf
 423              	.LVL37:
 186:Core/Src/main.c ****         tick = update_tick;
 424              		.loc 1 186 0
 425 007c FFF7FEFF 		bl	HAL_GetTick
 426              	.LVL38:
 427 0080 0646     		mov	r6, r0
 428              	.LVL39:
 429 0082 0546     		mov	r5, r0
 430              	.LVL40:
 431              	.L34:
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 15


 202:Core/Src/main.c ****                         update_tick = HAL_GetTick();
 432              		.loc 1 202 0
 433 0084 FFF7FEFF 		bl	HAL_GetTick
 434              	.LVL41:
 435 0088 401B     		subs	r0, r0, r5
 436 008a 0A28     		cmp	r0, #10
 437 008c 08D8     		bhi	.L39
 438              	.L28:
 230:Core/Src/main.c ****                         break;
 439              		.loc 1 230 0
 440 008e FFF7FEFF 		bl	HAL_GetTick
 441              	.LVL42:
 442 0092 801B     		subs	r0, r0, r6
 443 0094 B0F57A6F 		cmp	r0, #4000
 444 0098 F4D9     		bls	.L34
 445              	.LBB4:
 236:Core/Src/main.c ****                 set_DutyCycle(&Wheel_arr[0], i);
 446              		.loc 1 236 0
 447 009a 4FF6E854 		movw	r4, #65000
 448 009e 78E0     		b	.L33
 449              	.L39:
 450              	.LBE4:
 203:Core/Src/main.c **** 
 451              		.loc 1 203 0
 452 00a0 FFF7FEFF 		bl	HAL_GetTick
 453              	.LVL43:
 454 00a4 0546     		mov	r5, r0
 455              	.LVL44:
 456              	.LBB5:
 205:Core/Src/main.c ****                                 pulse_buffer[i] = pulse_buffer[i+1];
 457              		.loc 1 205 0
 458 00a6 0023     		movs	r3, #0
 459 00a8 0BE0     		b	.L29
 460              	.LVL45:
 461              	.L30:
 206:Core/Src/main.c ****                         }
 462              		.loc 1 206 0 discriminator 3
 463 00aa 5A1C     		adds	r2, r3, #1
 464 00ac 06A9     		add	r1, sp, #24
 465 00ae 01EB4201 		add	r1, r1, r2, lsl #1
 466 00b2 31F9081C 		ldrsh	r1, [r1, #-8]
 467 00b6 06A8     		add	r0, sp, #24
 468 00b8 00EB4303 		add	r3, r0, r3, lsl #1
 469              	.LVL46:
 470 00bc 23F8081C 		strh	r1, [r3, #-8]	@ movhi
 205:Core/Src/main.c ****                                 pulse_buffer[i] = pulse_buffer[i+1];
 471              		.loc 1 205 0 discriminator 3
 472 00c0 D3B2     		uxtb	r3, r2
 473              	.LVL47:
 474              	.L29:
 205:Core/Src/main.c ****                                 pulse_buffer[i] = pulse_buffer[i+1];
 475              		.loc 1 205 0 is_stmt 0 discriminator 1
 476 00c2 022B     		cmp	r3, #2
 477 00c4 F1D9     		bls	.L30
 478              	.LBE5:
 208:Core/Src/main.c **** 
 479              		.loc 1 208 0 is_stmt 1
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 16


 480 00c6 3F4B     		ldr	r3, .L40+20
 481              	.LVL48:
 482 00c8 B3F90030 		ldrsh	r3, [r3]
 483 00cc ADF81630 		strh	r3, [sp, #22]	@ movhi
 484              	.LVL49:
 485              	.LBB6:
 210:Core/Src/main.c ****                                 d1_pb[i] = d1_pb[i+1];
 486              		.loc 1 210 0
 487 00d0 0022     		movs	r2, #0
 488 00d2 0BE0     		b	.L31
 489              	.LVL50:
 490              	.L32:
 211:Core/Src/main.c ****                         }
 491              		.loc 1 211 0 discriminator 3
 492 00d4 511C     		adds	r1, r2, #1
 493 00d6 06A8     		add	r0, sp, #24
 494 00d8 00EB4100 		add	r0, r0, r1, lsl #1
 495 00dc 30F9100C 		ldrsh	r0, [r0, #-16]
 496 00e0 06AC     		add	r4, sp, #24
 497 00e2 04EB4202 		add	r2, r4, r2, lsl #1
 498              	.LVL51:
 499 00e6 22F8100C 		strh	r0, [r2, #-16]	@ movhi
 210:Core/Src/main.c ****                                 d1_pb[i] = d1_pb[i+1];
 500              		.loc 1 210 0 discriminator 3
 501 00ea CAB2     		uxtb	r2, r1
 502              	.LVL52:
 503              	.L31:
 210:Core/Src/main.c ****                                 d1_pb[i] = d1_pb[i+1];
 504              		.loc 1 210 0 is_stmt 0 discriminator 1
 505 00ec 012A     		cmp	r2, #1
 506 00ee F1D9     		bls	.L32
 507              	.LBE6:
 213:Core/Src/main.c **** 
 508              		.loc 1 213 0 is_stmt 1
 509 00f0 9BB2     		uxth	r3, r3
 510 00f2 BDF81420 		ldrh	r2, [sp, #20]
 511              	.LVL53:
 512 00f6 9B1A     		subs	r3, r3, r2
 513 00f8 9BB2     		uxth	r3, r3
 514 00fa 1FB2     		sxth	r7, r3
 515 00fc ADF80C70 		strh	r7, [sp, #12]	@ movhi
 215:Core/Src/main.c ****                         d2_pb[1] = d1_pb[2] - d1_pb[0];
 516              		.loc 1 215 0
 517 0100 BDF90640 		ldrsh	r4, [sp, #6]
 216:Core/Src/main.c **** 
 518              		.loc 1 216 0
 519 0104 BDF80820 		ldrh	r2, [sp, #8]
 520 0108 9B1A     		subs	r3, r3, r2
 521 010a 9BB2     		uxth	r3, r3
 522 010c 18B2     		sxth	r0, r3
 523 010e ADF80600 		strh	r0, [sp, #6]	@ movhi
 218:Core/Src/main.c **** 
 524              		.loc 1 218 0
 525 0112 A4B2     		uxth	r4, r4
 526 0114 1B1B     		subs	r3, r3, r4
 527 0116 1CB2     		sxth	r4, r3
 528              	.LVL54:
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 17


 220:Core/Src/main.c **** 
 529              		.loc 1 220 0
 530 0118 FFF7FEFF 		bl	__aeabi_i2d
 531              	.LVL55:
 532 011c 0022     		movs	r2, #0
 533 011e 2A4B     		ldr	r3, .L40+24
 534 0120 FFF7FEFF 		bl	__aeabi_dmul
 535              	.LVL56:
 536 0124 8046     		mov	r8, r0
 537 0126 8946     		mov	r9, r1
 538 0128 3846     		mov	r0, r7
 539 012a FFF7FEFF 		bl	__aeabi_i2d
 540              	.LVL57:
 541 012e 4246     		mov	r2, r8
 542 0130 4B46     		mov	r3, r9
 543 0132 FFF7FEFF 		bl	__aeabi_dadd
 544              	.LVL58:
 545 0136 8046     		mov	r8, r0
 546 0138 8946     		mov	r9, r1
 547 013a 2046     		mov	r0, r4
 548 013c FFF7FEFF 		bl	__aeabi_i2d
 549              	.LVL59:
 550 0140 0022     		movs	r2, #0
 551 0142 224B     		ldr	r3, .L40+28
 552 0144 FFF7FEFF 		bl	__aeabi_ddiv
 553              	.LVL60:
 554 0148 0246     		mov	r2, r0
 555 014a 0B46     		mov	r3, r1
 556 014c 4046     		mov	r0, r8
 557 014e 4946     		mov	r1, r9
 558 0150 FFF7FEFF 		bl	__aeabi_dadd
 559              	.LVL61:
 560 0154 16A3     		adr	r3, .L40
 561 0156 D3E90023 		ldrd	r2, [r3]
 562 015a FFF7FEFF 		bl	__aeabi_dmul
 563              	.LVL62:
 564 015e FFF7FEFF 		bl	__aeabi_d2f
 565              	.LVL63:
 222:Core/Src/main.c **** 
 566              		.loc 1 222 0
 567 0162 DFED1B7A 		vldr.32	s15, .L40+32
 568 0166 07EE100A 		vmov	s14, r0
 569 016a 67EE277A 		vmul.f32	s15, s14, s15
 570              	.LVL64:
 224:Core/Src/main.c **** 
 571              		.loc 1 224 0
 572 016e FDEEE77A 		vcvt.s32.f32	s15, s15
 573              	.LVL65:
 574 0172 17EE901A 		vmov	r1, s15	@ int
 575 0176 1748     		ldr	r0, .L40+36
 576              	.LVL66:
 577 0178 FFF7FEFF 		bl	printf
 578              	.LVL67:
 579 017c 87E7     		b	.L28
 580              	.LVL68:
 581              	.L35:
 582              	.LBB7:
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 18


 237:Core/Src/main.c ****                 HAL_Delay(100);
 583              		.loc 1 237 0 discriminator 3
 584 017e 2146     		mov	r1, r4
 585 0180 0E48     		ldr	r0, .L40+12
 586 0182 FFF7FEFF 		bl	set_DutyCycle
 587              	.LVL69:
 238:Core/Src/main.c ****         }
 588              		.loc 1 238 0 discriminator 3
 589 0186 6420     		movs	r0, #100
 590 0188 FFF7FEFF 		bl	HAL_Delay
 591              	.LVL70:
 236:Core/Src/main.c ****                 set_DutyCycle(&Wheel_arr[0], i);
 592              		.loc 1 236 0 discriminator 3
 593 018c A4F57A74 		sub	r4, r4, #1000
 594              	.LVL71:
 595 0190 A4B2     		uxth	r4, r4
 596              	.LVL72:
 597              	.L33:
 236:Core/Src/main.c ****                 set_DutyCycle(&Wheel_arr[0], i);
 598              		.loc 1 236 0 is_stmt 0 discriminator 1
 599 0192 B4F57A7F 		cmp	r4, #1000
 600 0196 F2D8     		bhi	.L35
 601              	.LBE7:
 241:Core/Src/main.c ****         set_Direction(&Wheel_arr[0], DIR_HALT);
 602              		.loc 1 241 0 is_stmt 1
 603 0198 084C     		ldr	r4, .L40+12
 604              	.LVL73:
 605 019a 0021     		movs	r1, #0
 606 019c 2046     		mov	r0, r4
 607 019e FFF7FEFF 		bl	set_DutyCycle
 608              	.LVL74:
 242:Core/Src/main.c **** 
 609              		.loc 1 242 0
 610 01a2 0221     		movs	r1, #2
 611 01a4 2046     		mov	r0, r4
 612 01a6 FFF7FEFF 		bl	set_Direction
 613              	.LVL75:
 614              	.L36:
 615 01aa FEE7     		b	.L36
 616              	.L41:
 617 01ac AFF30080 		.align	3
 618              	.L40:
 619 01b0 32C4B12E 		.word	783402034
 620 01b4 6E230440 		.word	1074013038
 621 01b8 00000000 		.word	htim8
 622 01bc 00000000 		.word	Wheel_arr
 623 01c0 00000000 		.word	.LC1
 624 01c4 00000000 		.word	pulses
 625 01c8 0000E03F 		.word	1071644672
 626 01cc 00000840 		.word	1074266112
 627 01d0 00007A44 		.word	1148846080
 628 01d4 04000000 		.word	.LC2
 629              		.cfi_endproc
 630              	.LFE127:
 632              		.section	.text.assert_failed,"ax",%progbits
 633              		.align	1
 634              		.global	assert_failed
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 19


 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	assert_failed:
 641              	.LFB130:
 317:Core/Src/main.c ****         /* USER CODE BEGIN Error_Handler_Debug */
 318:Core/Src/main.c ****         /* User can add his own implementation to report the HAL error return state */
 319:Core/Src/main.c ****         while (1)
 320:Core/Src/main.c ****         {
 321:Core/Src/main.c ****         }
 322:Core/Src/main.c ****         /* USER CODE END Error_Handler_Debug */
 323:Core/Src/main.c **** }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** #ifdef USE_FULL_ASSERT
 326:Core/Src/main.c **** /**
 327:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 328:Core/Src/main.c ****   *         where the assert_param error has occurred.
 329:Core/Src/main.c ****   * @param  file: pointer to the source file name
 330:Core/Src/main.c ****   * @param  line: assert_param error line source number
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 334:Core/Src/main.c **** {
 642              		.loc 1 334 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647              	.LVL76:
 335:Core/Src/main.c ****         /* USER CODE BEGIN 6 */
 336:Core/Src/main.c ****         /* User can add his own implementation to report the file name and line number,
 337:Core/Src/main.c ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 338:Core/Src/main.c ****         /* USER CODE END 6 */
 339:Core/Src/main.c **** }
 648              		.loc 1 339 0
 649 0000 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE130:
 653              		.comm	pulses,8,4
 654              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 655              		.align	2
 656              	.LC0:
 657 0000 436F7265 		.ascii	"Core/Src/main.c\000"
 657      2F537263 
 657      2F6D6169 
 657      6E2E6300 
 658              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 659              		.align	2
 660              	.LC1:
 661 0000 25640A00 		.ascii	"%d\012\000"
 662              	.LC2:
 663 0004 256C640A 		.ascii	"%ld\012\000"
 663      00
 664              		.text
 665              	.Letext0:
 666              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 20


 667              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 668              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 669              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 670              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 671              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 672              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 673              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 674              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 675              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 676              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 677              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 678              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 679              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 680              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 681              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 682              		.file 18 "Core/Inc/adc.h"
 683              		.file 19 "Core/Inc/tim.h"
 684              		.file 20 "Core/Inc/usart.h"
 685              		.file 21 "Core/Inc/wheel.h"
 686              		.file 22 "Core/Inc/robo_init.h"
 687              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 688              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 689              		.file 25 "Core/Inc/gpio.h"
 690              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 691              		.file 27 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:18     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:141    .text.HAL_GPIO_EXTI_Callback:000000a8 $d
                            *COM*:00000008 pulses
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:149    .text._Error_Handler:00000000 $t
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:156    .text._Error_Handler:00000000 _Error_Handler
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:171    .text.SystemClock_Config:00000000 $t
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:178    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:308    .text.SystemClock_Config:000000bc $d
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:321    .text.main:00000000 $t
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:328    .text.main:00000000 main
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:619    .text.main:000001b0 $d
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:633    .text.assert_failed:00000000 $t
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:640    .text.assert_failed:00000000 assert_failed
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:655    .rodata.SystemClock_Config.str1.4:00000000 $d
C:\Users\n-is\AppData\Local\Temp\cckkj5oN.s:659    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_ddiv
__aeabi_d2f
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_TIM8_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_TIM14_Init
HAL_TIM_Base_Start
wheel_init
HAL_TIM_PWM_Start
set_Direction
set_DutyCycle
printf
HAL_GetTick
HAL_Delay
htim8
Wheel_arr
