ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB137:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** 
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.cpp ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.cpp ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.cpp ****   * inserted by the user or by software development tools
  11:Core/Src/main.cpp ****   * are owned by their respective copyright owners.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.cpp ****   *
  15:Core/Src/main.cpp ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.cpp ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.cpp ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.cpp ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.cpp ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.cpp ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.cpp ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.cpp ****   *      without specific prior written permission.
  25:Core/Src/main.cpp ****   *
  26:Core/Src/main.cpp ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.cpp ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.cpp ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.cpp ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.cpp ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.cpp ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 2


  32:Core/Src/main.cpp ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.cpp ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.cpp ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.cpp ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.cpp ****   *
  37:Core/Src/main.cpp ****   ******************************************************************************
  38:Core/Src/main.cpp ****   */
  39:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  40:Core/Src/main.cpp **** #include "main.h"
  41:Core/Src/main.cpp **** #include "stm32f4xx_hal.h"
  42:Core/Src/main.cpp **** #include "adc.h"
  43:Core/Src/main.cpp **** #include "dma.h"
  44:Core/Src/main.cpp **** #include "tim.h"
  45:Core/Src/main.cpp **** #include "usart.h"
  46:Core/Src/main.cpp **** #include "gpio.h"
  47:Core/Src/main.cpp **** 
  48:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  49:Core/Src/main.cpp **** #include "robot/robo_init.h"
  50:Core/Src/main.cpp **** #include "robot/play.h"
  51:Core/Src/main.cpp **** /* USER CODE END Includes */
  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  56:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  57:Core/Src/main.cpp **** 
  58:Core/Src/main.cpp **** /* USER CODE END PV */
  59:Core/Src/main.cpp **** 
  60:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.cpp **** void SystemClock_Config(void);
  62:Core/Src/main.cpp **** 
  63:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.cpp **** 
  66:Core/Src/main.cpp **** /* USER CODE END PFP */
  67:Core/Src/main.cpp **** 
  68:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.cpp **** bool gSendDataFlagReceived = false;
  70:Core/Src/main.cpp **** 
  71:Core/Src/main.cpp **** #ifdef __cplusplus
  72:Core/Src/main.cpp **** extern "C" {
  73:Core/Src/main.cpp **** #endif // __cplusplus
  74:Core/Src/main.cpp **** 
  75:Core/Src/main.cpp **** extern void send_AllData();
  76:Core/Src/main.cpp **** 
  77:Core/Src/main.cpp **** #ifdef __cplusplus
  78:Core/Src/main.cpp **** }
  79:Core/Src/main.cpp **** #endif // __cplusplus
  80:Core/Src/main.cpp **** 
  81:Core/Src/main.cpp **** /* USER CODE END 0 */
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp **** /**
  84:Core/Src/main.cpp ****   * @brief  The application entry point.
  85:Core/Src/main.cpp ****   *
  86:Core/Src/main.cpp ****   * @retval None
  87:Core/Src/main.cpp ****   */
  88:Core/Src/main.cpp **** int main(void)
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 3


  89:Core/Src/main.cpp **** {
  90:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
  91:Core/Src/main.cpp **** 
  92:Core/Src/main.cpp ****         /* USER CODE END 1 */
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****         /* MCU Configuration----------------------------------------------------------*/
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.cpp ****         HAL_Init();
  98:Core/Src/main.cpp **** 
  99:Core/Src/main.cpp ****         /* USER CODE BEGIN Init */
 100:Core/Src/main.cpp **** 
 101:Core/Src/main.cpp ****         /* USER CODE END Init */
 102:Core/Src/main.cpp **** 
 103:Core/Src/main.cpp ****         /* Configure the system clock */
 104:Core/Src/main.cpp ****         SystemClock_Config();
 105:Core/Src/main.cpp **** 
 106:Core/Src/main.cpp ****         /* USER CODE BEGIN SysInit */
 107:Core/Src/main.cpp **** 
 108:Core/Src/main.cpp ****         /* USER CODE END SysInit */
 109:Core/Src/main.cpp **** 
 110:Core/Src/main.cpp ****         /* Initialize all configured peripherals */
 111:Core/Src/main.cpp ****         MX_GPIO_Init();
 112:Core/Src/main.cpp ****         MX_DMA_Init();
 113:Core/Src/main.cpp ****         MX_TIM3_Init();
 114:Core/Src/main.cpp ****         MX_TIM2_Init();
 115:Core/Src/main.cpp ****         MX_TIM1_Init();
 116:Core/Src/main.cpp ****         MX_TIM4_Init();
 117:Core/Src/main.cpp ****         MX_TIM8_Init();
 118:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 119:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 120:Core/Src/main.cpp ****         MX_ADC1_Init();
 121:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 122:Core/Src/main.cpp **** 
 123:Core/Src/main.cpp ****         robo_Init();
 124:Core/Src/main.cpp **** 
 125:Core/Src/main.cpp ****         printf("Hello World!!\n");
 126:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 127:Core/Src/main.cpp **** 
 128:Core/Src/main.cpp ****         float set_points[4] = { 0, 0, 0, 0 };
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****         /* USER CODE END 2 */
 131:Core/Src/main.cpp **** 
 132:Core/Src/main.cpp ****         /* Infinite loop */
 133:Core/Src/main.cpp ****         /* USER CODE BEGIN WHILE */
 134:Core/Src/main.cpp ****         const uint32_t sampling_period = 10;
 135:Core/Src/main.cpp ****         const uint32_t updating_period = 12;
 136:Core/Src/main.cpp ****         const uint32_t brake_period = 3000;
 137:Core/Src/main.cpp ****         uint32_t sample_time = HAL_GetTick();
 138:Core/Src/main.cpp ****         uint32_t update_time = HAL_GetTick();
 139:Core/Src/main.cpp ****         uint32_t brake_time = HAL_GetTick();
 140:Core/Src/main.cpp ****         while (1)
 141:Core/Src/main.cpp ****         {
 142:Core/Src/main.cpp ****                 /* USER CODE END WHILE */
 143:Core/Src/main.cpp ****                 if (HAL_GetTick() - update_time > updating_period) {
 144:Core/Src/main.cpp ****                         update_time = HAL_GetTick();
 145:Core/Src/main.cpp ****                         update(set_points);
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 4


 146:Core/Src/main.cpp ****                 }
 147:Core/Src/main.cpp **** 
 148:Core/Src/main.cpp ****                 if (HAL_GetTick() - sample_time > sampling_period) {
 149:Core/Src/main.cpp ****                         sample_time = HAL_GetTick();
 150:Core/Src/main.cpp ****                         tune(set_points, sampling_period);
 151:Core/Src/main.cpp ****                 }
 152:Core/Src/main.cpp **** 
 153:Core/Src/main.cpp ****                 // if (gSendDataFlagReceived) {
 154:Core/Src/main.cpp ****                 //         break;
 155:Core/Src/main.cpp ****                 // }
 156:Core/Src/main.cpp **** 
 157:Core/Src/main.cpp ****                 // if (HAL_GetTick() - brake_time > brake_period) {
 158:Core/Src/main.cpp ****                 //         ramp_down(sampling_period);
 159:Core/Src/main.cpp ****                 //         break;
 160:Core/Src/main.cpp ****                 // }
 161:Core/Src/main.cpp ****                 /* USER CODE BEGIN 3 */
 162:Core/Src/main.cpp ****         }
 163:Core/Src/main.cpp ****         // send_AllData();
 164:Core/Src/main.cpp ****         while(1);
 165:Core/Src/main.cpp ****         /* USER CODE END 3 */
 166:Core/Src/main.cpp **** }
 167:Core/Src/main.cpp **** 
 168:Core/Src/main.cpp **** /**
 169:Core/Src/main.cpp ****   * @brief System Clock Configuration
 170:Core/Src/main.cpp ****   * @retval None
 171:Core/Src/main.cpp ****   */
 172:Core/Src/main.cpp **** void SystemClock_Config(void)
 173:Core/Src/main.cpp **** {
 174:Core/Src/main.cpp **** 
 175:Core/Src/main.cpp ****         RCC_OscInitTypeDef RCC_OscInitStruct;
 176:Core/Src/main.cpp ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 177:Core/Src/main.cpp **** 
 178:Core/Src/main.cpp ****         /**Configure the main internal regulator output voltage 
 179:Core/Src/main.cpp ****     */
 180:Core/Src/main.cpp ****         __HAL_RCC_PWR_CLK_ENABLE();
 181:Core/Src/main.cpp **** 
 182:Core/Src/main.cpp ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 183:Core/Src/main.cpp **** 
 184:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 185:Core/Src/main.cpp ****     */
 186:Core/Src/main.cpp ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 187:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 188:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 189:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 190:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
 191:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
 192:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 193:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 194:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 195:Core/Src/main.cpp ****         {
 196:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 197:Core/Src/main.cpp ****         }
 198:Core/Src/main.cpp **** 
 199:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 200:Core/Src/main.cpp ****     */
 201:Core/Src/main.cpp ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
 202:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 5


 203:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 204:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 205:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 206:Core/Src/main.cpp **** 
 207:Core/Src/main.cpp ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 208:Core/Src/main.cpp ****         {
 209:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 210:Core/Src/main.cpp ****         }
 211:Core/Src/main.cpp **** 
 212:Core/Src/main.cpp ****         /**Configure the Systick interrupt time 
 213:Core/Src/main.cpp ****     */
 214:Core/Src/main.cpp ****         HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 215:Core/Src/main.cpp **** 
 216:Core/Src/main.cpp ****         /**Configure the Systick 
 217:Core/Src/main.cpp ****     */
 218:Core/Src/main.cpp ****         HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 219:Core/Src/main.cpp **** 
 220:Core/Src/main.cpp ****         /* SysTick_IRQn interrupt configuration */
 221:Core/Src/main.cpp ****         HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 222:Core/Src/main.cpp **** }
 223:Core/Src/main.cpp **** 
 224:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 225:Core/Src/main.cpp **** 
 226:Core/Src/main.cpp **** /* USER CODE END 4 */
 227:Core/Src/main.cpp **** 
 228:Core/Src/main.cpp **** /**
 229:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 230:Core/Src/main.cpp ****   * @param  file: The file name as string.
 231:Core/Src/main.cpp ****   * @param  line: The line in file as a number.
 232:Core/Src/main.cpp ****   * @retval None
 233:Core/Src/main.cpp ****   */
 234:Core/Src/main.cpp **** void _Error_Handler(const char *file, int line)
 235:Core/Src/main.cpp **** {
  28              		.loc 1 235 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE137:
  40              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  41              		.align	1
  42              		.global	_Z18SystemClock_Configv
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z18SystemClock_Configv:
  49              	.LFB136:
 173:Core/Src/main.cpp **** 
  50              		.loc 1 173 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 6


  53              		@ frame_needed = 0, uses_anonymous_args = 0
 173:Core/Src/main.cpp **** 
  54              		.loc 1 173 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 180:Core/Src/main.cpp **** 
  63              		.loc 1 180 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2A4B     		ldr	r3, .L9
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 182:Core/Src/main.cpp **** 
  76              		.loc 1 182 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 264B     		ldr	r3, .L9+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F48042 		orr	r2, r2, #16384
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F48043 		and	r3, r3, #16384
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
 186:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 186 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 187:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 187 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 188:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 188 0
  94 003c 0222     		movs	r2, #2
  95 003e 0E92     		str	r2, [sp, #56]
 189:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
  96              		.loc 1 189 0
  97 0040 4FF48003 		mov	r3, #4194304
  98 0044 0F93     		str	r3, [sp, #60]
 190:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
  99              		.loc 1 190 0
 100 0046 0423     		movs	r3, #4
 101 0048 1093     		str	r3, [sp, #64]
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 7


 191:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 191 0
 103 004a A821     		movs	r1, #168
 104 004c 1191     		str	r1, [sp, #68]
 192:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 192 0
 106 004e 1292     		str	r2, [sp, #72]
 193:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 193 0
 108 0050 1393     		str	r3, [sp, #76]
 194:Core/Src/main.cpp ****         {
 109              		.loc 1 194 0
 110 0052 08A8     		add	r0, sp, #32
 111 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 112              	.LVL1:
 113 0058 20BB     		cbnz	r0, .L7
 201:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 114              		.loc 1 201 0
 115 005a 0F23     		movs	r3, #15
 116 005c 0393     		str	r3, [sp, #12]
 202:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 202 0
 118 005e 0223     		movs	r3, #2
 119 0060 0493     		str	r3, [sp, #16]
 203:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 120              		.loc 1 203 0
 121 0062 0023     		movs	r3, #0
 122 0064 0593     		str	r3, [sp, #20]
 204:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 123              		.loc 1 204 0
 124 0066 4FF4A053 		mov	r3, #5120
 125 006a 0693     		str	r3, [sp, #24]
 205:Core/Src/main.cpp **** 
 126              		.loc 1 205 0
 127 006c 4FF48053 		mov	r3, #4096
 128 0070 0793     		str	r3, [sp, #28]
 207:Core/Src/main.cpp ****         {
 129              		.loc 1 207 0
 130 0072 0521     		movs	r1, #5
 131 0074 03A8     		add	r0, sp, #12
 132 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 134 007a B8B9     		cbnz	r0, .L8
 214:Core/Src/main.cpp **** 
 135              		.loc 1 214 0
 136 007c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 137              	.LVL3:
 138 0080 0E4B     		ldr	r3, .L9+8
 139 0082 A3FB0030 		umull	r3, r0, r3, r0
 140 0086 8009     		lsrs	r0, r0, #6
 141 0088 FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL4:
 218:Core/Src/main.cpp **** 
 143              		.loc 1 218 0
 144 008c 0420     		movs	r0, #4
 145 008e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 146              	.LVL5:
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 8


 221:Core/Src/main.cpp **** }
 147              		.loc 1 221 0
 148 0092 0022     		movs	r2, #0
 149 0094 1146     		mov	r1, r2
 150 0096 4FF0FF30 		mov	r0, #-1
 151 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 152              	.LVL6:
 222:Core/Src/main.cpp **** 
 153              		.loc 1 222 0
 154 009e 15B0     		add	sp, sp, #84
 155              	.LCFI2:
 156              		.cfi_remember_state
 157              		.cfi_def_cfa_offset 4
 158              		@ sp needed
 159 00a0 5DF804FB 		ldr	pc, [sp], #4
 160              	.L7:
 161              	.LCFI3:
 162              		.cfi_restore_state
 196:Core/Src/main.cpp ****         }
 163              		.loc 1 196 0
 164 00a4 C421     		movs	r1, #196
 165 00a6 0648     		ldr	r0, .L9+12
 166 00a8 FFF7FEFF 		bl	_Error_Handler
 167              	.LVL7:
 168              	.L8:
 209:Core/Src/main.cpp ****         }
 169              		.loc 1 209 0
 170 00ac D121     		movs	r1, #209
 171 00ae 0448     		ldr	r0, .L9+12
 172 00b0 FFF7FEFF 		bl	_Error_Handler
 173              	.LVL8:
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 00b4 00380240 		.word	1073887232
 178 00b8 00700040 		.word	1073770496
 179 00bc D34D6210 		.word	274877907
 180 00c0 00000000 		.word	.LC0
 181              		.cfi_endproc
 182              	.LFE136:
 184              		.section	.text.main,"ax",%progbits
 185              		.align	1
 186              		.global	main
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	main:
 193              	.LFB135:
  89:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
 194              		.loc 1 89 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 16
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 30B5     		push	{r4, r5, lr}
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 9


 201              		.cfi_offset 4, -12
 202              		.cfi_offset 5, -8
 203              		.cfi_offset 14, -4
 204 0002 85B0     		sub	sp, sp, #20
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 32
  97:Core/Src/main.cpp **** 
 207              		.loc 1 97 0
 208 0004 FFF7FEFF 		bl	HAL_Init
 209              	.LVL9:
 104:Core/Src/main.cpp **** 
 210              		.loc 1 104 0
 211 0008 FFF7FEFF 		bl	_Z18SystemClock_Configv
 212              	.LVL10:
 111:Core/Src/main.cpp ****         MX_DMA_Init();
 213              		.loc 1 111 0
 214 000c FFF7FEFF 		bl	MX_GPIO_Init
 215              	.LVL11:
 112:Core/Src/main.cpp ****         MX_TIM3_Init();
 216              		.loc 1 112 0
 217 0010 FFF7FEFF 		bl	MX_DMA_Init
 218              	.LVL12:
 113:Core/Src/main.cpp ****         MX_TIM2_Init();
 219              		.loc 1 113 0
 220 0014 FFF7FEFF 		bl	MX_TIM3_Init
 221              	.LVL13:
 114:Core/Src/main.cpp ****         MX_TIM1_Init();
 222              		.loc 1 114 0
 223 0018 FFF7FEFF 		bl	MX_TIM2_Init
 224              	.LVL14:
 115:Core/Src/main.cpp ****         MX_TIM4_Init();
 225              		.loc 1 115 0
 226 001c FFF7FEFF 		bl	MX_TIM1_Init
 227              	.LVL15:
 116:Core/Src/main.cpp ****         MX_TIM8_Init();
 228              		.loc 1 116 0
 229 0020 FFF7FEFF 		bl	MX_TIM4_Init
 230              	.LVL16:
 117:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 231              		.loc 1 117 0
 232 0024 FFF7FEFF 		bl	MX_TIM8_Init
 233              	.LVL17:
 118:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 234              		.loc 1 118 0
 235 0028 FFF7FEFF 		bl	MX_USART1_UART_Init
 236              	.LVL18:
 119:Core/Src/main.cpp ****         MX_ADC1_Init();
 237              		.loc 1 119 0
 238 002c FFF7FEFF 		bl	MX_USART3_UART_Init
 239              	.LVL19:
 120:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 240              		.loc 1 120 0
 241 0030 FFF7FEFF 		bl	MX_ADC1_Init
 242              	.LVL20:
 123:Core/Src/main.cpp **** 
 243              		.loc 1 123 0
 244 0034 FFF7FEFF 		bl	_Z9robo_Initv
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 10


 245              	.LVL21:
 125:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 246              		.loc 1 125 0
 247 0038 1448     		ldr	r0, .L17
 248 003a FFF7FEFF 		bl	puts
 249              	.LVL22:
 128:Core/Src/main.cpp **** 
 250              		.loc 1 128 0
 251 003e 0023     		movs	r3, #0
 252 0040 0093     		str	r3, [sp]
 253 0042 0193     		str	r3, [sp, #4]
 254 0044 0293     		str	r3, [sp, #8]
 255 0046 0393     		str	r3, [sp, #12]
 256              	.LVL23:
 137:Core/Src/main.cpp ****         uint32_t update_time = HAL_GetTick();
 257              		.loc 1 137 0
 258 0048 FFF7FEFF 		bl	HAL_GetTick
 259              	.LVL24:
 260 004c 0446     		mov	r4, r0
 261              	.LVL25:
 138:Core/Src/main.cpp ****         uint32_t brake_time = HAL_GetTick();
 262              		.loc 1 138 0
 263 004e FFF7FEFF 		bl	HAL_GetTick
 264              	.LVL26:
 265 0052 0546     		mov	r5, r0
 266              	.LVL27:
 139:Core/Src/main.cpp ****         while (1)
 267              		.loc 1 139 0
 268 0054 FFF7FEFF 		bl	HAL_GetTick
 269              	.LVL28:
 270              	.L12:
 143:Core/Src/main.cpp ****                         update_time = HAL_GetTick();
 271              		.loc 1 143 0
 272 0058 FFF7FEFF 		bl	HAL_GetTick
 273              	.LVL29:
 274 005c 401B     		subs	r0, r0, r5
 275 005e 0C28     		cmp	r0, #12
 276 0060 0CD8     		bhi	.L16
 277              	.L13:
 148:Core/Src/main.cpp ****                         sample_time = HAL_GetTick();
 278              		.loc 1 148 0
 279 0062 FFF7FEFF 		bl	HAL_GetTick
 280              	.LVL30:
 281 0066 001B     		subs	r0, r0, r4
 282 0068 0A28     		cmp	r0, #10
 283 006a F5D9     		bls	.L12
 149:Core/Src/main.cpp ****                         tune(set_points, sampling_period);
 284              		.loc 1 149 0
 285 006c FFF7FEFF 		bl	HAL_GetTick
 286              	.LVL31:
 287 0070 0446     		mov	r4, r0
 288              	.LVL32:
 150:Core/Src/main.cpp ****                 }
 289              		.loc 1 150 0
 290 0072 0A21     		movs	r1, #10
 291 0074 6846     		mov	r0, sp
 292              	.LVL33:
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 11


 293 0076 FFF7FEFF 		bl	_Z4tunePfm
 294              	.LVL34:
 295 007a EDE7     		b	.L12
 296              	.L16:
 144:Core/Src/main.cpp ****                         update(set_points);
 297              		.loc 1 144 0
 298 007c FFF7FEFF 		bl	HAL_GetTick
 299              	.LVL35:
 300 0080 0546     		mov	r5, r0
 301              	.LVL36:
 145:Core/Src/main.cpp ****                 }
 302              		.loc 1 145 0
 303 0082 6846     		mov	r0, sp
 304              	.LVL37:
 305 0084 FFF7FEFF 		bl	_Z6updatePf
 306              	.LVL38:
 307 0088 EBE7     		b	.L13
 308              	.L18:
 309 008a 00BF     		.align	2
 310              	.L17:
 311 008c 00000000 		.word	.LC1
 312              		.cfi_endproc
 313              	.LFE135:
 315              		.section	.text.assert_failed,"ax",%progbits
 316              		.align	1
 317              		.global	assert_failed
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	assert_failed:
 324              	.LFB138:
 236:Core/Src/main.cpp ****         /* USER CODE BEGIN Error_Handler_Debug */
 237:Core/Src/main.cpp ****         /* User can add his own implementation to report the HAL error return state */
 238:Core/Src/main.cpp ****         while (1)
 239:Core/Src/main.cpp ****         {
 240:Core/Src/main.cpp ****         }
 241:Core/Src/main.cpp ****         /* USER CODE END Error_Handler_Debug */
 242:Core/Src/main.cpp **** }
 243:Core/Src/main.cpp **** 
 244:Core/Src/main.cpp **** #ifdef USE_FULL_ASSERT
 245:Core/Src/main.cpp **** /**
 246:Core/Src/main.cpp ****   * @brief  Reports the name of the source file and the source line number
 247:Core/Src/main.cpp ****   *         where the assert_param error has occurred.
 248:Core/Src/main.cpp ****   * @param  file: pointer to the source file name
 249:Core/Src/main.cpp ****   * @param  line: assert_param error line source number
 250:Core/Src/main.cpp ****   * @retval None
 251:Core/Src/main.cpp ****   */
 252:Core/Src/main.cpp **** void assert_failed(uint8_t *file, uint32_t line)
 253:Core/Src/main.cpp **** {
 325              		.loc 1 253 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL39:
 254:Core/Src/main.cpp ****         /* USER CODE BEGIN 6 */
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 12


 255:Core/Src/main.cpp ****         /* User can add his own implementation to report the file name and line number,
 256:Core/Src/main.cpp ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 257:Core/Src/main.cpp ****         /* USER CODE END 6 */
 258:Core/Src/main.cpp **** }
 331              		.loc 1 258 0
 332 0000 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE138:
 336              		.global	gSendDataFlagReceived
 337              		.section	.bss.gSendDataFlagReceived,"aw",%nobits
 340              	gSendDataFlagReceived:
 341 0000 00       		.space	1
 342              		.section	.rodata._Z18SystemClock_Configv.str1.4,"aMS",%progbits,1
 343              		.align	2
 344              	.LC0:
 345 0000 436F7265 		.ascii	"Core/Src/main.cpp\000"
 345      2F537263 
 345      2F6D6169 
 345      6E2E6370 
 345      7000
 346              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 347              		.align	2
 348              	.LC1:
 349 0000 48656C6C 		.ascii	"Hello World!!\000"
 349      6F20576F 
 349      726C6421 
 349      2100
 350              		.text
 351              	.Letext0:
 352              		.file 2 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/STM32F
 353              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 354              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 355              		.file 5 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core_cm4
 356              		.file 6 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/STM32F
 357              		.file 7 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/STM32F
 358              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 359              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 360              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 361              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 362              		.file 12 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 363              		.file 13 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 364              		.file 14 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 365              		.file 15 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 366              		.file 16 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 367              		.file 17 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 368              		.file 18 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 369              		.file 19 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 370              		.file 20 "Core/Inc\\periphs/adc.h"
 371              		.file 21 "Core/Inc\\periphs/tim.h"
 372              		.file 22 "Core/Inc\\periphs/usart.h"
 373              		.file 23 "Core/Inc\\devs/wheel.h"
 374              		.file 24 "Core/Inc/robot/robo_init.h"
 375              		.file 25 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/
 376              		.file 26 "Core/Inc\\periphs/gpio.h"
 377              		.file 27 "Core/Inc\\periphs/dma.h"
 378              		.file 28 "Core/Inc/robot/play.h"
ARM GAS  C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:18     .text._Error_Handler:00000000 $t
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:25     .text._Error_Handler:00000000 _Error_Handler
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:41     .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:48     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:177    .text._Z18SystemClock_Configv:000000b4 $d
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:185    .text.main:00000000 $t
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:192    .text.main:00000000 main
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:311    .text.main:0000008c $d
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:316    .text.assert_failed:00000000 $t
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:323    .text.assert_failed:00000000 assert_failed
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:340    .bss.gSendDataFlagReceived:00000000 gSendDataFlagReceived
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:341    .bss.gSendDataFlagReceived:00000000 $d
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:343    .rodata._Z18SystemClock_Configv.str1.4:00000000 $d
C:\Users\Nischal Nepal\AppData\Local\Temp\ccfnIEoF.s:347    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM3_Init
MX_TIM2_Init
MX_TIM1_Init
MX_TIM4_Init
MX_TIM8_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_ADC1_Init
_Z9robo_Initv
puts
HAL_GetTick
_Z4tunePfm
_Z6updatePf
