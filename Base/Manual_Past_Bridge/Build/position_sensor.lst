ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"position_sensor.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN14PositionSensorD2Ev,"axG",%progbits,_ZN14PositionSensorD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN14PositionSensorD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN14PositionSensorD2Ev:
  26              	.LFB417:
  27              		.file 1 "Core/Inc/parts/sensors/position_sensor.h"
   1:Core/Inc/parts/sensors/position_sensor.h **** /*
   2:Core/Inc/parts/sensors/position_sensor.h ****  * position_sensor.h
   3:Core/Inc/parts/sensors/position_sensor.h ****  * 
   4:Core/Inc/parts/sensors/position_sensor.h ****  * Created : 11/29/2018
   5:Core/Inc/parts/sensors/position_sensor.h ****  *  Author : n-is
   6:Core/Inc/parts/sensors/position_sensor.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/parts/sensors/position_sensor.h ****  */
   8:Core/Inc/parts/sensors/position_sensor.h **** 
   9:Core/Inc/parts/sensors/position_sensor.h **** #ifndef _POSITION_SENSOR_H_
  10:Core/Inc/parts/sensors/position_sensor.h **** #define _POSITION_SENSOR_H_
  11:Core/Inc/parts/sensors/position_sensor.h **** 
  12:Core/Inc/parts/sensors/position_sensor.h **** #include "vec3.h"
  13:Core/Inc/parts/sensors/position_sensor.h **** #include "sensor.h"
  14:Core/Inc/parts/sensors/position_sensor.h **** #include "kalman.h"
  15:Core/Inc/parts/sensors/position_sensor.h **** 
  16:Core/Inc/parts/sensors/position_sensor.h **** struct State_Vars;
  17:Core/Inc/parts/sensors/position_sensor.h **** enum class Field;
  18:Core/Inc/parts/sensors/position_sensor.h **** 
  19:Core/Inc/parts/sensors/position_sensor.h **** #define MAX_POSITION_SENSORS    (4)
  20:Core/Inc/parts/sensors/position_sensor.h **** 
  21:Core/Inc/parts/sensors/position_sensor.h **** extern Kalman_Vars gEncoders_KV;
  22:Core/Inc/parts/sensors/position_sensor.h **** extern Kalman_Vars gXLidarEncoder_KV;
  23:Core/Inc/parts/sensors/position_sensor.h **** 
  24:Core/Inc/parts/sensors/position_sensor.h **** int init_XLidarEncoderKalman(uint32_t dt_millis);
  25:Core/Inc/parts/sensors/position_sensor.h **** int init_EncodersKalman(uint32_t dt_millis);
  26:Core/Inc/parts/sensors/position_sensor.h **** 
  27:Core/Inc/parts/sensors/position_sensor.h **** 
  28:Core/Inc/parts/sensors/position_sensor.h **** class PositionSensor
  29:Core/Inc/parts/sensors/position_sensor.h **** {
  30:Core/Inc/parts/sensors/position_sensor.h **** public:
  31:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor(PositionSensor &&) = default;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 2


  32:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor(const PositionSensor &) = default;
  33:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor &operator=(PositionSensor &&) = default;
  34:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor &operator=(const PositionSensor &) = default;
  35:Core/Inc/parts/sensors/position_sensor.h ****         ~PositionSensor() { }
  28              		.loc 1 35 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 35 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE417:
  39              		.weak	_ZN14PositionSensorD1Ev
  40              		.thumb_set _ZN14PositionSensorD1Ev,_ZN14PositionSensorD2Ev
  41              		.section	.text._ZN10Exp_SmoothD2Ev,"axG",%progbits,_ZN10Exp_SmoothD5Ev,comdat
  42              		.align	1
  43              		.weak	_ZN10Exp_SmoothD2Ev
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZN10Exp_SmoothD2Ev:
  50              	.LFB429:
  51              		.file 2 "Core/Inc/utils\\filter/smoothing_algorithm.h"
   1:Core/Inc/utils\filter/smoothing_algorithm.h **** 
   2:Core/Inc/utils\filter/smoothing_algorithm.h **** #ifndef _SMOOTHING_ALGORITHM_H_
   3:Core/Inc/utils\filter/smoothing_algorithm.h **** #define _SMOOTHING_ALGORITHM_H_
   4:Core/Inc/utils\filter/smoothing_algorithm.h **** 
   5:Core/Inc/utils\filter/smoothing_algorithm.h **** #include "vec3.h"
   6:Core/Inc/utils\filter/smoothing_algorithm.h **** 
   7:Core/Inc/utils\filter/smoothing_algorithm.h **** class Smoothing_Algorithm
   8:Core/Inc/utils\filter/smoothing_algorithm.h **** {
   9:Core/Inc/utils\filter/smoothing_algorithm.h **** public:
  10:Core/Inc/utils\filter/smoothing_algorithm.h ****         virtual float smooth(const float &input) = 0;
  11:Core/Inc/utils\filter/smoothing_algorithm.h ****         virtual ~Smoothing_Algorithm() { }
  12:Core/Inc/utils\filter/smoothing_algorithm.h **** };
  13:Core/Inc/utils\filter/smoothing_algorithm.h **** 
  14:Core/Inc/utils\filter/smoothing_algorithm.h **** class Exp_Smooth : public Smoothing_Algorithm
  15:Core/Inc/utils\filter/smoothing_algorithm.h **** {
  16:Core/Inc/utils\filter/smoothing_algorithm.h **** public:
  17:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth();
  18:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth(float alpha);
  19:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth(Exp_Smooth &&) = default;
  20:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth(const Exp_Smooth &) = default;
  21:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth &operator=(Exp_Smooth &&) = default;
  22:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth &operator=(const Exp_Smooth &) = default;
  23:Core/Inc/utils\filter/smoothing_algorithm.h ****         ~Exp_Smooth() { }
  52              		.loc 2 23 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
  58              		.loc 2 23 0
  59 0000 7047     		bx	lr
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 3


  60              		.cfi_endproc
  61              	.LFE429:
  63              		.weak	_ZN10Exp_SmoothD1Ev
  64              		.thumb_set _ZN10Exp_SmoothD1Ev,_ZN10Exp_SmoothD2Ev
  65              		.section	.text._Z19init_EncodersKalmanm,"ax",%progbits
  66              		.align	1
  67              		.global	_Z19init_EncodersKalmanm
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	_Z19init_EncodersKalmanm:
  74              	.LFB537:
  75              		.file 3 "Core/Src/parts/sensors/position_sensor.cpp"
   1:Core/Src/parts/sensors/position_sensor.cpp **** /*
   2:Core/Src/parts/sensors/position_sensor.cpp ****  * position_sensor.h
   3:Core/Src/parts/sensors/position_sensor.cpp ****  * 
   4:Core/Src/parts/sensors/position_sensor.cpp ****  * Created : 1/5/2018
   5:Core/Src/parts/sensors/position_sensor.cpp ****  *  Author : n-is
   6:Core/Src/parts/sensors/position_sensor.cpp ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Src/parts/sensors/position_sensor.cpp ****  */
   8:Core/Src/parts/sensors/position_sensor.cpp **** 
   9:Core/Src/parts/sensors/position_sensor.cpp **** #include "position_sensor.h"
  10:Core/Src/parts/sensors/position_sensor.cpp **** #include "smoothing_algorithm.h"
  11:Core/Src/parts/sensors/position_sensor.cpp **** 
  12:Core/Src/parts/sensors/position_sensor.cpp **** #include "devs_config.h"
  13:Core/Src/parts/sensors/position_sensor.cpp **** 
  14:Core/Src/parts/sensors/position_sensor.cpp **** #include "error.h"
  15:Core/Src/parts/sensors/position_sensor.cpp **** 
  16:Core/Src/parts/sensors/position_sensor.cpp **** #include "robo_states.h"
  17:Core/Src/parts/sensors/position_sensor.cpp **** 
  18:Core/Src/parts/sensors/position_sensor.cpp **** static Exp_Smooth gXLidarAlpha35(0.35);
  19:Core/Src/parts/sensors/position_sensor.cpp **** static Exp_Smooth gYLidarAlpha35(0.35);
  20:Core/Src/parts/sensors/position_sensor.cpp **** 
  21:Core/Src/parts/sensors/position_sensor.cpp **** // Starting Y-Position
  22:Core/Src/parts/sensors/position_sensor.cpp **** float gLast_YEncoderValue = 400;
  23:Core/Src/parts/sensors/position_sensor.cpp **** // Starting X-Position
  24:Core/Src/parts/sensors/position_sensor.cpp **** float gLast_XEncoderValue = 390;
  25:Core/Src/parts/sensors/position_sensor.cpp **** 
  26:Core/Src/parts/sensors/position_sensor.cpp **** float gXLidar_Bias = 260;
  27:Core/Src/parts/sensors/position_sensor.cpp **** float gYLidar_Bias = 0;
  28:Core/Src/parts/sensors/position_sensor.cpp **** 
  29:Core/Src/parts/sensors/position_sensor.cpp **** // Last Position
  30:Core/Src/parts/sensors/position_sensor.cpp **** Vec3<float> gLastPosition(gLast_XEncoderValue, gLast_YEncoderValue, 0);
  31:Core/Src/parts/sensors/position_sensor.cpp **** 
  32:Core/Src/parts/sensors/position_sensor.cpp **** Kalman_Vars gEncoders_KV;
  33:Core/Src/parts/sensors/position_sensor.cpp **** Kalman_Vars gXLidarEncoder_KV;
  34:Core/Src/parts/sensors/position_sensor.cpp **** 
  35:Core/Src/parts/sensors/position_sensor.cpp **** 
  36:Core/Src/parts/sensors/position_sensor.cpp **** PositionSensor& PositionSensor::get_Instance()
  37:Core/Src/parts/sensors/position_sensor.cpp **** {
  38:Core/Src/parts/sensors/position_sensor.cpp ****         static PositionSensor gPSensor_Instance;
  39:Core/Src/parts/sensors/position_sensor.cpp **** 
  40:Core/Src/parts/sensors/position_sensor.cpp ****         return gPSensor_Instance;
  41:Core/Src/parts/sensors/position_sensor.cpp **** }
  42:Core/Src/parts/sensors/position_sensor.cpp **** 
  43:Core/Src/parts/sensors/position_sensor.cpp **** int PositionSensor::init(uint32_t dt_millis)
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 4


  44:Core/Src/parts/sensors/position_sensor.cpp **** {
  45:Core/Src/parts/sensors/position_sensor.cpp ****         Encoders_Init();
  46:Core/Src/parts/sensors/position_sensor.cpp **** 
  47:Core/Src/parts/sensors/position_sensor.cpp ****         gXEncoder.init();
  48:Core/Src/parts/sensors/position_sensor.cpp ****         gYEncoder.init();
  49:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidar.init();
  50:Core/Src/parts/sensors/position_sensor.cpp **** 
  51:Core/Src/parts/sensors/position_sensor.cpp ****         return 0;
  52:Core/Src/parts/sensors/position_sensor.cpp **** }
  53:Core/Src/parts/sensors/position_sensor.cpp **** 
  54:Core/Src/parts/sensors/position_sensor.cpp **** Vec3<float> PositionSensor::read_Position(Vec3<float> ori, Vec3<float> base_state, const State_Vars
  55:Core/Src/parts/sensors/position_sensor.cpp **** {
  56:Core/Src/parts/sensors/position_sensor.cpp ****         // First Collect Data from all available position sensors
  57:Core/Src/parts/sensors/position_sensor.cpp ****         // 0 -> x, 1 -> y
  58:Core/Src/parts/sensors/position_sensor.cpp ****         Vec3<float> free_wheel;
  59:Core/Src/parts/sensors/position_sensor.cpp ****         float lidar[2];
  60:Core/Src/parts/sensors/position_sensor.cpp **** 
  61:Core/Src/parts/sensors/position_sensor.cpp ****         bool x_lidar_used(false), y_lidar_used(false);
  62:Core/Src/parts/sensors/position_sensor.cpp ****         bool x_enc_used(false), y_enc_used(false);
  63:Core/Src/parts/sensors/position_sensor.cpp **** 
  64:Core/Src/parts/sensors/position_sensor.cpp ****         for (uint8_t i = 0; i < sensor_count_; ++i) {
  65:Core/Src/parts/sensors/position_sensor.cpp ****                 if (p_sensors_[i]->get_Name() == SensorName::XEncoder) {
  66:Core/Src/parts/sensors/position_sensor.cpp ****                         free_wheel.setX(p_sensors_[i]->read());
  67:Core/Src/parts/sensors/position_sensor.cpp ****                         x_enc_used = true;
  68:Core/Src/parts/sensors/position_sensor.cpp ****                 }
  69:Core/Src/parts/sensors/position_sensor.cpp ****                 else if (p_sensors_[i]->get_Name() == SensorName::YEncoder) {
  70:Core/Src/parts/sensors/position_sensor.cpp ****                         free_wheel.setY(p_sensors_[i]->read());
  71:Core/Src/parts/sensors/position_sensor.cpp ****                         y_enc_used = true;
  72:Core/Src/parts/sensors/position_sensor.cpp ****                 }
  73:Core/Src/parts/sensors/position_sensor.cpp ****                 else if (p_sensors_[i]->get_Name() == SensorName::XLidar) {
  74:Core/Src/parts/sensors/position_sensor.cpp ****                         lidar[0] = p_sensors_[i]->read() + gXLidar_Bias;
  75:Core/Src/parts/sensors/position_sensor.cpp ****                         x_lidar_used = true;
  76:Core/Src/parts/sensors/position_sensor.cpp ****                         // printf("%ld\n", (int32_t)(lidar[0]));
  77:Core/Src/parts/sensors/position_sensor.cpp ****                 }
  78:Core/Src/parts/sensors/position_sensor.cpp ****                 else if (p_sensors_[i]->get_Name() == SensorName::YLidar) {
  79:Core/Src/parts/sensors/position_sensor.cpp ****                         lidar[1] = p_sensors_[i]->read() + gYLidar_Bias;
  80:Core/Src/parts/sensors/position_sensor.cpp ****                         y_lidar_used = true;
  81:Core/Src/parts/sensors/position_sensor.cpp ****                 }
  82:Core/Src/parts/sensors/position_sensor.cpp ****         }
  83:Core/Src/parts/sensors/position_sensor.cpp ****         if (!(x_lidar_used || x_enc_used)) {
  84:Core/Src/parts/sensors/position_sensor.cpp ****                 error(Error::DEVICE_ERROR);
  85:Core/Src/parts/sensors/position_sensor.cpp ****                 printf("No Data Available on x-direction!!\n");
  86:Core/Src/parts/sensors/position_sensor.cpp ****         }
  87:Core/Src/parts/sensors/position_sensor.cpp ****         if (!(y_lidar_used || y_enc_used)) {
  88:Core/Src/parts/sensors/position_sensor.cpp ****                 error(Error::DEVICE_ERROR);
  89:Core/Src/parts/sensors/position_sensor.cpp ****                 printf("No Data Available on y-direction!!\n");
  90:Core/Src/parts/sensors/position_sensor.cpp ****         }
  91:Core/Src/parts/sensors/position_sensor.cpp **** 
  92:Core/Src/parts/sensors/position_sensor.cpp ****         // Smooth Lidar Data if used else clear the smoothie
  93:Core/Src/parts/sensors/position_sensor.cpp ****         if (x_lidar_used) {
  94:Core/Src/parts/sensors/position_sensor.cpp ****                 lidar[0] = gXLidarAlpha35.smooth(lidar[0]);
  95:Core/Src/parts/sensors/position_sensor.cpp ****         }
  96:Core/Src/parts/sensors/position_sensor.cpp ****         else {
  97:Core/Src/parts/sensors/position_sensor.cpp ****                 gXLidarAlpha35.clear();
  98:Core/Src/parts/sensors/position_sensor.cpp ****         }
  99:Core/Src/parts/sensors/position_sensor.cpp ****         // if (y_lidar_used) {
 100:Core/Src/parts/sensors/position_sensor.cpp **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 5


 101:Core/Src/parts/sensors/position_sensor.cpp ****         // }
 102:Core/Src/parts/sensors/position_sensor.cpp ****         // else {
 103:Core/Src/parts/sensors/position_sensor.cpp **** 
 104:Core/Src/parts/sensors/position_sensor.cpp ****         // }
 105:Core/Src/parts/sensors/position_sensor.cpp ****         if (x_lidar_used || y_lidar_used) {
 106:Core/Src/parts/sensors/position_sensor.cpp ****                 process_LidarData(lidar, sv);
 107:Core/Src/parts/sensors/position_sensor.cpp ****         }
 108:Core/Src/parts/sensors/position_sensor.cpp **** 
 109:Core/Src/parts/sensors/position_sensor.cpp ****         // float dt = (float)(dt_millis) / 1000.0;
 110:Core/Src/parts/sensors/position_sensor.cpp ****         // Calculate the movement of the body with respect to the body frame
 111:Core/Src/parts/sensors/position_sensor.cpp **** 
 112:Core/Src/parts/sensors/position_sensor.cpp ****         // Rotate the movement to the navigation frame
 113:Core/Src/parts/sensors/position_sensor.cpp ****         // yaw-pitch-roll
 114:Core/Src/parts/sensors/position_sensor.cpp ****         float roll = ori.getX() / 57.3;
 115:Core/Src/parts/sensors/position_sensor.cpp ****         float pitch = ori.getY() / 57.3;
 116:Core/Src/parts/sensors/position_sensor.cpp ****         float yaw = ori.getZ() / 57.3;
 117:Core/Src/parts/sensors/position_sensor.cpp **** 
 118:Core/Src/parts/sensors/position_sensor.cpp ****         float s_r = sin(roll);
 119:Core/Src/parts/sensors/position_sensor.cpp ****         float c_r = cos(roll);
 120:Core/Src/parts/sensors/position_sensor.cpp ****         float s_p = sin(pitch);
 121:Core/Src/parts/sensors/position_sensor.cpp ****         float c_p = cos(pitch);
 122:Core/Src/parts/sensors/position_sensor.cpp ****         float s_y = sin(yaw);
 123:Core/Src/parts/sensors/position_sensor.cpp ****         float c_y = cos(yaw);
 124:Core/Src/parts/sensors/position_sensor.cpp **** 
 125:Core/Src/parts/sensors/position_sensor.cpp ****         // https://ocw.mit.edu/courses/mechanical-engineering/2-017j-design-of-electromechanical-ro
 126:Core/Src/parts/sensors/position_sensor.cpp ****         // R(r, p, y)
 127:Core/Src/parts/sensors/position_sensor.cpp ****         float R[3][3] = { { c_p*c_r,                c_p*s_r,               -s_p},
 128:Core/Src/parts/sensors/position_sensor.cpp ****                           {-c_y*s_r + s_y*s_p*c_r,  c_y*c_r + s_y*s_p*s_r,  s_y*c_p},
 129:Core/Src/parts/sensors/position_sensor.cpp ****                           { s_y*s_r + c_y*s_p*c_r, -s_y*c_r + c_y*s_p*s_r,  c_y*c_p}, };
 130:Core/Src/parts/sensors/position_sensor.cpp **** 
 131:Core/Src/parts/sensors/position_sensor.cpp ****         Mat Rm(R);
 132:Core/Src/parts/sensors/position_sensor.cpp **** 
 133:Core/Src/parts/sensors/position_sensor.cpp ****         Mat d_pos = Rm.trans() * free_wheel;
 134:Core/Src/parts/sensors/position_sensor.cpp **** 
 135:Core/Src/parts/sensors/position_sensor.cpp ****         Vec3<float> del_pos(d_pos.at(0,0), d_pos.at(1,0), d_pos.at(2,0));
 136:Core/Src/parts/sensors/position_sensor.cpp **** 
 137:Core/Src/parts/sensors/position_sensor.cpp ****         // float ex = del_pos.getX();
 138:Core/Src/parts/sensors/position_sensor.cpp ****         // float ey = del_pos.getY();
 139:Core/Src/parts/sensors/position_sensor.cpp **** 
 140:Core/Src/parts/sensors/position_sensor.cpp ****         float ex = free_wheel.getX();
 141:Core/Src/parts/sensors/position_sensor.cpp ****         float ey = free_wheel.getY();
 142:Core/Src/parts/sensors/position_sensor.cpp **** 
 143:Core/Src/parts/sensors/position_sensor.cpp ****         // Fuse the data with the data from lidar that gives movement with
 144:Core/Src/parts/sensors/position_sensor.cpp ****         // respect to the navigation frame
 145:Core/Src/parts/sensors/position_sensor.cpp **** 
 146:Core/Src/parts/sensors/position_sensor.cpp ****         float x(0), y(0);
 147:Core/Src/parts/sensors/position_sensor.cpp ****         if (!x_lidar_used) {
 148:Core/Src/parts/sensors/position_sensor.cpp ****                 x = gLastPosition.getX() + ex;
 149:Core/Src/parts/sensors/position_sensor.cpp ****                 xlidar_enc_fuser_.clear();
 150:Core/Src/parts/sensors/position_sensor.cpp ****         }
 151:Core/Src/parts/sensors/position_sensor.cpp ****         else {
 152:Core/Src/parts/sensors/position_sensor.cpp ****                 x = xlidar_enc_fuser_.filter(lidar[0], del_pos.getX(), dt_millis);
 153:Core/Src/parts/sensors/position_sensor.cpp ****         }
 154:Core/Src/parts/sensors/position_sensor.cpp **** 
 155:Core/Src/parts/sensors/position_sensor.cpp ****         // y lidar not used
 156:Core/Src/parts/sensors/position_sensor.cpp ****         if (!y_lidar_used) {
 157:Core/Src/parts/sensors/position_sensor.cpp ****                 y = gLastPosition.getY() + ey;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 6


 158:Core/Src/parts/sensors/position_sensor.cpp ****                 // ylidar_enc_fuser_.clear();
 159:Core/Src/parts/sensors/position_sensor.cpp ****         }
 160:Core/Src/parts/sensors/position_sensor.cpp ****         else {
 161:Core/Src/parts/sensors/position_sensor.cpp ****                 // x = xlidar_enc_fuser_.filter(lidar[0], del_pos.getX(), dt_millis);
 162:Core/Src/parts/sensors/position_sensor.cpp ****         }
 163:Core/Src/parts/sensors/position_sensor.cpp **** 
 164:Core/Src/parts/sensors/position_sensor.cpp ****         gLastPosition.set_Values(x, y, 0);
 165:Core/Src/parts/sensors/position_sensor.cpp **** 
 166:Core/Src/parts/sensors/position_sensor.cpp ****         // gLastPosition.print();
 167:Core/Src/parts/sensors/position_sensor.cpp ****         // printf("\n");
 168:Core/Src/parts/sensors/position_sensor.cpp **** 
 169:Core/Src/parts/sensors/position_sensor.cpp ****         return gLastPosition;
 170:Core/Src/parts/sensors/position_sensor.cpp **** }
 171:Core/Src/parts/sensors/position_sensor.cpp **** 
 172:Core/Src/parts/sensors/position_sensor.cpp **** void PositionSensor::process_LidarData(float lidar[2], const State_Vars *sv)
 173:Core/Src/parts/sensors/position_sensor.cpp **** {
 174:Core/Src/parts/sensors/position_sensor.cpp ****         // Process Lidar Data according to the field the robot is in
 175:Core/Src/parts/sensors/position_sensor.cpp **** 
 176:Core/Src/parts/sensors/position_sensor.cpp ****         // Assumptions:
 177:Core/Src/parts/sensors/position_sensor.cpp ****         // lidar[0] => XLidar Data
 178:Core/Src/parts/sensors/position_sensor.cpp ****         // lidar[1] => YLidar Data
 179:Core/Src/parts/sensors/position_sensor.cpp **** 
 180:Core/Src/parts/sensors/position_sensor.cpp ****         Field id = sv->id;
 181:Core/Src/parts/sensors/position_sensor.cpp **** 
 182:Core/Src/parts/sensors/position_sensor.cpp ****         // Processing XLidar data
 183:Core/Src/parts/sensors/position_sensor.cpp ****         if ((int)id > (int)(Field::FIELD_J)) {
 184:Core/Src/parts/sensors/position_sensor.cpp ****                 // The fence is at most 2000 mm from robot
 185:Core/Src/parts/sensors/position_sensor.cpp ****                 if (lidar[0] < 2000) {
 186:Core/Src/parts/sensors/position_sensor.cpp ****                         // Lower Fence distance
 187:Core/Src/parts/sensors/position_sensor.cpp ****                         lidar[0] += 2500;
 188:Core/Src/parts/sensors/position_sensor.cpp ****                 }
 189:Core/Src/parts/sensors/position_sensor.cpp ****         }
 190:Core/Src/parts/sensors/position_sensor.cpp **** }
 191:Core/Src/parts/sensors/position_sensor.cpp **** 
 192:Core/Src/parts/sensors/position_sensor.cpp **** 
 193:Core/Src/parts/sensors/position_sensor.cpp **** int init_XLidarEncoderKalman(uint32_t dt_millis)
 194:Core/Src/parts/sensors/position_sensor.cpp **** {
 195:Core/Src/parts/sensors/position_sensor.cpp ****         // This is for data fusion of lidar and encoder
 196:Core/Src/parts/sensors/position_sensor.cpp ****         Mat state_model(2,2);
 197:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(0,0) = 1;
 198:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(0,1) = -1;
 199:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(1,0) = 0;
 200:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(1,1) = 1;
 201:Core/Src/parts/sensors/position_sensor.cpp **** 
 202:Core/Src/parts/sensors/position_sensor.cpp ****         Mat control_model(2,1);
 203:Core/Src/parts/sensors/position_sensor.cpp ****         control_model.at(0,0) = 1;
 204:Core/Src/parts/sensors/position_sensor.cpp ****         control_model.at(1,0) = 0;
 205:Core/Src/parts/sensors/position_sensor.cpp ****         
 206:Core/Src/parts/sensors/position_sensor.cpp ****         Mat obs_model(1,2);
 207:Core/Src/parts/sensors/position_sensor.cpp ****         obs_model.at(0,0) = 1;
 208:Core/Src/parts/sensors/position_sensor.cpp ****         obs_model.at(0,1) = 0;
 209:Core/Src/parts/sensors/position_sensor.cpp **** 
 210:Core/Src/parts/sensors/position_sensor.cpp ****         Mat priori_error(2,2);
 211:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(0,0) = 500;
 212:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(0,1) = 0;
 213:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(1,0) = 0;
 214:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(1,1) = 500;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 7


 215:Core/Src/parts/sensors/position_sensor.cpp ****         
 216:Core/Src/parts/sensors/position_sensor.cpp ****         Mat process_error(2,2);
 217:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(0,0) = 0.001;
 218:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(0,1) = 0;
 219:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(1,0) = 0;
 220:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(1,1) = 0.003;
 221:Core/Src/parts/sensors/position_sensor.cpp ****         
 222:Core/Src/parts/sensors/position_sensor.cpp ****         Mat measure_error(1,1);
 223:Core/Src/parts/sensors/position_sensor.cpp ****         measure_error.at(0,0) = 200;
 224:Core/Src/parts/sensors/position_sensor.cpp **** 
 225:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidarEncoder_KV.set_F(state_model);
 226:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidarEncoder_KV.set_B(control_model);
 227:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidarEncoder_KV.set_H(obs_model);
 228:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidarEncoder_KV.set_I(2);
 229:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidarEncoder_KV.set_P(priori_error);
 230:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidarEncoder_KV.set_Q(process_error);
 231:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidarEncoder_KV.set_R(measure_error);
 232:Core/Src/parts/sensors/position_sensor.cpp **** 
 233:Core/Src/parts/sensors/position_sensor.cpp ****         return 0;
 234:Core/Src/parts/sensors/position_sensor.cpp **** }
 235:Core/Src/parts/sensors/position_sensor.cpp **** 
 236:Core/Src/parts/sensors/position_sensor.cpp **** int init_EncodersKalman(uint32_t dt_millis)
 237:Core/Src/parts/sensors/position_sensor.cpp **** {
  76              		.loc 3 237 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.LVL2:
 238:Core/Src/parts/sensors/position_sensor.cpp ****         return 0;
 239:Core/Src/parts/sensors/position_sensor.cpp **** }
  82              		.loc 3 239 0
  83 0000 0020     		movs	r0, #0
  84              	.LVL3:
  85 0002 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE537:
  89              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  90              		.align	1
  91              		.weak	_ZN4Vec3IfED2Ev
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv4-sp-d16
  97              	_ZN4Vec3IfED2Ev:
  98              	.LFB561:
  99              		.file 4 "Core/Inc/utils\\math/vec3.h"
   1:Core/Inc/utils\math/vec3.h **** /*
   2:Core/Inc/utils\math/vec3.h ****  * vec3.h
   3:Core/Inc/utils\math/vec3.h ****  * 
   4:Core/Inc/utils\math/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils\math/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils\math/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\math/vec3.h ****  */
   8:Core/Inc/utils\math/vec3.h **** 
   9:Core/Inc/utils\math/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils\math/vec3.h **** #define _VEC3_H_
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 8


  11:Core/Inc/utils\math/vec3.h **** 
  12:Core/Inc/utils\math/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils\math/vec3.h **** #include "main.h"
  14:Core/Inc/utils\math/vec3.h **** 
  15:Core/Inc/utils\math/vec3.h **** template <typename T>
  16:Core/Inc/utils\math/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils\math/vec3.h **** {
  18:Core/Inc/utils\math/vec3.h ****         T temp = first;
  19:Core/Inc/utils\math/vec3.h ****         first = second;
  20:Core/Inc/utils\math/vec3.h ****         second = temp;
  21:Core/Inc/utils\math/vec3.h **** }
  22:Core/Inc/utils\math/vec3.h **** 
  23:Core/Inc/utils\math/vec3.h **** template <class T>
  24:Core/Inc/utils\math/vec3.h **** class Vec3
  25:Core/Inc/utils\math/vec3.h **** {
  26:Core/Inc/utils\math/vec3.h **** public:
  27:Core/Inc/utils\math/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils\math/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils\math/vec3.h **** 
  30:Core/Inc/utils\math/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils\math/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils\math/vec3.h ****         ~Vec3() { }
 100              		.loc 4 32 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.LVL4:
 106              		.loc 4 32 0
 107 0000 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE561:
 111              		.weak	_ZN4Vec3IfED1Ev
 112              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
 113              		.section	.text._ZN11Kalman_VarsD2Ev,"axG",%progbits,_ZN11Kalman_VarsD5Ev,comdat
 114              		.align	1
 115              		.weak	_ZN11Kalman_VarsD2Ev
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	_ZN11Kalman_VarsD2Ev:
 122              	.LFB588:
 123              		.file 5 "Core/Inc/utils\\filter/kalman.h"
   1:Core/Inc/utils\filter/kalman.h **** /*
   2:Core/Inc/utils\filter/kalman.h ****  * kalman.h
   3:Core/Inc/utils\filter/kalman.h ****  * 
   4:Core/Inc/utils\filter/kalman.h ****  * Created : 11/13/2018
   5:Core/Inc/utils\filter/kalman.h ****  *  Author : n-is
   6:Core/Inc/utils\filter/kalman.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\filter/kalman.h ****  */
   8:Core/Inc/utils\filter/kalman.h **** 
   9:Core/Inc/utils\filter/kalman.h **** #ifndef _KALMAN_H_
  10:Core/Inc/utils\filter/kalman.h **** #define _KALMAN_H_
  11:Core/Inc/utils\filter/kalman.h **** 
  12:Core/Inc/utils\filter/kalman.h **** #include "mat.h"
  13:Core/Inc/utils\filter/kalman.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 9


  14:Core/Inc/utils\filter/kalman.h **** class Kalman_Filter;
  15:Core/Inc/utils\filter/kalman.h **** 
  16:Core/Inc/utils\filter/kalman.h **** struct Kalman_Vars
 124              		.loc 5 16 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LVL5:
 130              		.loc 5 16 0
 131 0000 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE588:
 135              		.weak	_ZN11Kalman_VarsD1Ev
 136              		.thumb_set _ZN11Kalman_VarsD1Ev,_ZN11Kalman_VarsD2Ev
 137              		.section	.text._Z24init_XLidarEncoderKalmanm,"ax",%progbits
 138              		.align	1
 139              		.global	_Z24init_XLidarEncoderKalmanm
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	_Z24init_XLidarEncoderKalmanm:
 146              	.LFB536:
 194:Core/Src/parts/sensors/position_sensor.cpp ****         // This is for data fusion of lidar and encoder
 147              		.loc 3 194 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 480
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL6:
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 F8B0     		sub	sp, sp, #480
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 488
 196:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(0,0) = 1;
 160              		.loc 3 196 0
 161 0004 0222     		movs	r2, #2
 162 0006 1146     		mov	r1, r2
 163 0008 67A8     		add	r0, sp, #412
 164              	.LVL7:
 165 000a FFF7FEFF 		bl	_ZN3MatC1Ehh
 166              	.LVL8:
 167              	.LBB536:
 168              	.LBB537:
 169              		.file 6 "Core/Inc/utils\\math/mat.h"
   1:Core/Inc/utils\math/mat.h **** /*
   2:Core/Inc/utils\math/mat.h ****  * mat.h
   3:Core/Inc/utils\math/mat.h ****  * 
   4:Core/Inc/utils\math/mat.h ****  * Created : 12/31/2018
   5:Core/Inc/utils\math/mat.h ****  *  Author : n-is
   6:Core/Inc/utils\math/mat.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\math/mat.h ****  */
   8:Core/Inc/utils\math/mat.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 10


   9:Core/Inc/utils\math/mat.h **** #ifndef _MAT_H_
  10:Core/Inc/utils\math/mat.h **** #define _MAT_H_
  11:Core/Inc/utils\math/mat.h **** 
  12:Core/Inc/utils\math/mat.h **** #include <math.h>
  13:Core/Inc/utils\math/mat.h **** #include "vec3.h"
  14:Core/Inc/utils\math/mat.h **** 
  15:Core/Inc/utils\math/mat.h **** #define MAX_MATRIX_ROWS         4
  16:Core/Inc/utils\math/mat.h **** #define MAX_MATRIX_COLS         4
  17:Core/Inc/utils\math/mat.h **** 
  18:Core/Inc/utils\math/mat.h **** class Mat
  19:Core/Inc/utils\math/mat.h **** {
  20:Core/Inc/utils\math/mat.h **** public:
  21:Core/Inc/utils\math/mat.h ****         Mat() : Mat(0,0) { }
  22:Core/Inc/utils\math/mat.h ****         
  23:Core/Inc/utils\math/mat.h ****         template <size_t M, size_t N>
  24:Core/Inc/utils\math/mat.h ****         Mat(const float (&mat)[M][N]) : Mat(M,N){
  25:Core/Inc/utils\math/mat.h ****                 fill(mat);
  26:Core/Inc/utils\math/mat.h ****         }
  27:Core/Inc/utils\math/mat.h **** 
  28:Core/Inc/utils\math/mat.h ****         Mat(uint8_t rows, uint8_t columns);
  29:Core/Inc/utils\math/mat.h ****         Mat(Mat &&) = default;
  30:Core/Inc/utils\math/mat.h ****         Mat &operator=(Mat &&) = default;
  31:Core/Inc/utils\math/mat.h ****         ~Mat() { }
  32:Core/Inc/utils\math/mat.h **** 
  33:Core/Inc/utils\math/mat.h ****         uint8_t rows() const { return rows_; }
  34:Core/Inc/utils\math/mat.h ****         uint8_t cols() const { return cols_; }
  35:Core/Inc/utils\math/mat.h **** 
  36:Core/Inc/utils\math/mat.h ****         inline float &at(uint8_t i, uint8_t j) {
  37:Core/Inc/utils\math/mat.h ****                 if (!(i < rows_ && j < cols_)) {
 170              		.loc 6 37 0
 171 000e 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 172 0012 13B1     		cbz	r3, .L7
 173 0014 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 174 0018 1BB9     		cbnz	r3, .L8
 175              	.L7:
  38:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 176              		.loc 6 38 0
 177 001a 2621     		movs	r1, #38
 178 001c 9C48     		ldr	r0, .L42
 179 001e FFF7FEFF 		bl	_Error_Handler
 180              	.LVL9:
 181              	.L8:
 182              	.LBE537:
 183              	.LBE536:
 197:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(0,1) = -1;
 184              		.loc 3 197 0
 185 0022 4FF07E53 		mov	r3, #1065353216
 186 0026 6793     		str	r3, [sp, #412]	@ float
 187              	.LVL10:
 188              	.LBB538:
 189              	.LBB539:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 190              		.loc 6 37 0
 191 0028 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 192 002c 1BB1     		cbz	r3, .L9
 193 002e 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 194 0032 012B     		cmp	r3, #1
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 11


 195 0034 03D8     		bhi	.L10
 196              	.L9:
 197              		.loc 6 38 0
 198 0036 2621     		movs	r1, #38
 199 0038 9548     		ldr	r0, .L42
 200 003a FFF7FEFF 		bl	_Error_Handler
 201              	.LVL11:
 202              	.L10:
 203              	.LBE539:
 204              	.LBE538:
 198:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(1,0) = 0;
 205              		.loc 3 198 0
 206 003e 954B     		ldr	r3, .L42+4
 207 0040 6893     		str	r3, [sp, #416]	@ float
 208              	.LVL12:
 209              	.LBB540:
 210              	.LBB541:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 211              		.loc 6 37 0
 212 0042 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 213 0046 012B     		cmp	r3, #1
 214 0048 02D9     		bls	.L11
 215 004a 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 216 004e 1BB9     		cbnz	r3, .L12
 217              	.L11:
 218              		.loc 6 38 0
 219 0050 2621     		movs	r1, #38
 220 0052 8F48     		ldr	r0, .L42
 221 0054 FFF7FEFF 		bl	_Error_Handler
 222              	.LVL13:
 223              	.L12:
 224              	.LBE541:
 225              	.LBE540:
 199:Core/Src/parts/sensors/position_sensor.cpp ****         state_model.at(1,1) = 1;
 226              		.loc 3 199 0
 227 0058 0023     		movs	r3, #0
 228 005a 6B93     		str	r3, [sp, #428]	@ float
 229              	.LVL14:
 230              	.LBB542:
 231              	.LBB543:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 232              		.loc 6 37 0
 233 005c 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 234 0060 012B     		cmp	r3, #1
 235 0062 40F20681 		bls	.L13
 236 0066 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 237 006a 012B     		cmp	r3, #1
 238 006c 40F20181 		bls	.L13
 239              	.L14:
 240              	.LVL15:
 241              	.LBE543:
 242              	.LBE542:
 200:Core/Src/parts/sensors/position_sensor.cpp **** 
 243              		.loc 3 200 0
 244 0070 4FF07E53 		mov	r3, #1065353216
 245 0074 6C93     		str	r3, [sp, #432]	@ float
 202:Core/Src/parts/sensors/position_sensor.cpp ****         control_model.at(0,0) = 1;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 12


 246              		.loc 3 202 0
 247 0076 0122     		movs	r2, #1
 248 0078 0221     		movs	r1, #2
 249 007a 56A8     		add	r0, sp, #344
 250 007c FFF7FEFF 		bl	_ZN3MatC1Ehh
 251              	.LVL16:
 252              	.LBB545:
 253              	.LBB546:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 254              		.loc 6 37 0
 255 0080 9DF89831 		ldrb	r3, [sp, #408]	@ zero_extendqisi2
 256 0084 13B1     		cbz	r3, .L15
 257 0086 9DF89931 		ldrb	r3, [sp, #409]	@ zero_extendqisi2
 258 008a 1BB9     		cbnz	r3, .L16
 259              	.L15:
 260              		.loc 6 38 0
 261 008c 2621     		movs	r1, #38
 262 008e 8048     		ldr	r0, .L42
 263 0090 FFF7FEFF 		bl	_Error_Handler
 264              	.LVL17:
 265              	.L16:
 266              	.LBE546:
 267              	.LBE545:
 203:Core/Src/parts/sensors/position_sensor.cpp ****         control_model.at(1,0) = 0;
 268              		.loc 3 203 0
 269 0094 4FF07E53 		mov	r3, #1065353216
 270 0098 5693     		str	r3, [sp, #344]	@ float
 271              	.LVL18:
 272              	.LBB547:
 273              	.LBB548:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 274              		.loc 6 37 0
 275 009a 9DF89831 		ldrb	r3, [sp, #408]	@ zero_extendqisi2
 276 009e 012B     		cmp	r3, #1
 277 00a0 02D9     		bls	.L17
 278 00a2 9DF89931 		ldrb	r3, [sp, #409]	@ zero_extendqisi2
 279 00a6 1BB9     		cbnz	r3, .L18
 280              	.L17:
 281              		.loc 6 38 0
 282 00a8 2621     		movs	r1, #38
 283 00aa 7948     		ldr	r0, .L42
 284 00ac FFF7FEFF 		bl	_Error_Handler
 285              	.LVL19:
 286              	.L18:
 287              	.LBE548:
 288              	.LBE547:
 204:Core/Src/parts/sensors/position_sensor.cpp ****         
 289              		.loc 3 204 0
 290 00b0 0023     		movs	r3, #0
 291 00b2 5A93     		str	r3, [sp, #360]	@ float
 206:Core/Src/parts/sensors/position_sensor.cpp ****         obs_model.at(0,0) = 1;
 292              		.loc 3 206 0
 293 00b4 0222     		movs	r2, #2
 294 00b6 0121     		movs	r1, #1
 295 00b8 45A8     		add	r0, sp, #276
 296 00ba FFF7FEFF 		bl	_ZN3MatC1Ehh
 297              	.LVL20:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 13


 298              	.LBB549:
 299              	.LBB550:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 300              		.loc 6 37 0
 301 00be 9DF85431 		ldrb	r3, [sp, #340]	@ zero_extendqisi2
 302 00c2 13B1     		cbz	r3, .L19
 303 00c4 9DF85531 		ldrb	r3, [sp, #341]	@ zero_extendqisi2
 304 00c8 1BB9     		cbnz	r3, .L20
 305              	.L19:
 306              		.loc 6 38 0
 307 00ca 2621     		movs	r1, #38
 308 00cc 7048     		ldr	r0, .L42
 309 00ce FFF7FEFF 		bl	_Error_Handler
 310              	.LVL21:
 311              	.L20:
 312              	.LBE550:
 313              	.LBE549:
 207:Core/Src/parts/sensors/position_sensor.cpp ****         obs_model.at(0,1) = 0;
 314              		.loc 3 207 0
 315 00d2 4FF07E53 		mov	r3, #1065353216
 316 00d6 4593     		str	r3, [sp, #276]	@ float
 317              	.LVL22:
 318              	.LBB551:
 319              	.LBB552:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 320              		.loc 6 37 0
 321 00d8 9DF85431 		ldrb	r3, [sp, #340]	@ zero_extendqisi2
 322 00dc 1BB1     		cbz	r3, .L21
 323 00de 9DF85531 		ldrb	r3, [sp, #341]	@ zero_extendqisi2
 324 00e2 012B     		cmp	r3, #1
 325 00e4 03D8     		bhi	.L22
 326              	.L21:
 327              		.loc 6 38 0
 328 00e6 2621     		movs	r1, #38
 329 00e8 6948     		ldr	r0, .L42
 330 00ea FFF7FEFF 		bl	_Error_Handler
 331              	.LVL23:
 332              	.L22:
 333              	.LBE552:
 334              	.LBE551:
 208:Core/Src/parts/sensors/position_sensor.cpp **** 
 335              		.loc 3 208 0
 336 00ee 0023     		movs	r3, #0
 337 00f0 4693     		str	r3, [sp, #280]	@ float
 210:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(0,0) = 500;
 338              		.loc 3 210 0
 339 00f2 0222     		movs	r2, #2
 340 00f4 1146     		mov	r1, r2
 341 00f6 34A8     		add	r0, sp, #208
 342 00f8 FFF7FEFF 		bl	_ZN3MatC1Ehh
 343              	.LVL24:
 344              	.LBB553:
 345              	.LBB554:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 346              		.loc 6 37 0
 347 00fc 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 348 0100 13B1     		cbz	r3, .L23
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 14


 349 0102 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 350 0106 1BB9     		cbnz	r3, .L24
 351              	.L23:
 352              		.loc 6 38 0
 353 0108 2621     		movs	r1, #38
 354 010a 6148     		ldr	r0, .L42
 355 010c FFF7FEFF 		bl	_Error_Handler
 356              	.LVL25:
 357              	.L24:
 358              	.LBE554:
 359              	.LBE553:
 211:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(0,1) = 0;
 360              		.loc 3 211 0
 361 0110 614B     		ldr	r3, .L42+8
 362 0112 3493     		str	r3, [sp, #208]	@ float
 363              	.LVL26:
 364              	.LBB555:
 365              	.LBB556:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 366              		.loc 6 37 0
 367 0114 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 368 0118 1BB1     		cbz	r3, .L25
 369 011a 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 370 011e 012B     		cmp	r3, #1
 371 0120 03D8     		bhi	.L26
 372              	.L25:
 373              		.loc 6 38 0
 374 0122 2621     		movs	r1, #38
 375 0124 5A48     		ldr	r0, .L42
 376 0126 FFF7FEFF 		bl	_Error_Handler
 377              	.LVL27:
 378              	.L26:
 379              	.LBE556:
 380              	.LBE555:
 212:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(1,0) = 0;
 381              		.loc 3 212 0
 382 012a 0023     		movs	r3, #0
 383 012c 3593     		str	r3, [sp, #212]	@ float
 384              	.LVL28:
 385              	.LBB557:
 386              	.LBB558:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 387              		.loc 6 37 0
 388 012e 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 389 0132 012B     		cmp	r3, #1
 390 0134 02D9     		bls	.L27
 391 0136 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 392 013a 1BB9     		cbnz	r3, .L28
 393              	.L27:
 394              		.loc 6 38 0
 395 013c 2621     		movs	r1, #38
 396 013e 5448     		ldr	r0, .L42
 397 0140 FFF7FEFF 		bl	_Error_Handler
 398              	.LVL29:
 399              	.L28:
 400              	.LBE558:
 401              	.LBE557:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 15


 213:Core/Src/parts/sensors/position_sensor.cpp ****         priori_error.at(1,1) = 500;
 402              		.loc 3 213 0
 403 0144 0023     		movs	r3, #0
 404 0146 3893     		str	r3, [sp, #224]	@ float
 405              	.LVL30:
 406              	.LBB559:
 407              	.LBB560:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 408              		.loc 6 37 0
 409 0148 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 410 014c 012B     		cmp	r3, #1
 411 014e 40F29580 		bls	.L29
 412 0152 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 413 0156 012B     		cmp	r3, #1
 414 0158 40F29080 		bls	.L29
 415              	.L30:
 416              	.LVL31:
 417              	.LBE560:
 418              	.LBE559:
 214:Core/Src/parts/sensors/position_sensor.cpp ****         
 419              		.loc 3 214 0
 420 015c 4E4B     		ldr	r3, .L42+8
 421 015e 3993     		str	r3, [sp, #228]	@ float
 216:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(0,0) = 0.001;
 422              		.loc 3 216 0
 423 0160 0222     		movs	r2, #2
 424 0162 1146     		mov	r1, r2
 425 0164 23A8     		add	r0, sp, #140
 426 0166 FFF7FEFF 		bl	_ZN3MatC1Ehh
 427              	.LVL32:
 428              	.LBB562:
 429              	.LBB563:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 430              		.loc 6 37 0
 431 016a 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 432 016e 13B1     		cbz	r3, .L31
 433 0170 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 434 0174 1BB9     		cbnz	r3, .L32
 435              	.L31:
 436              		.loc 6 38 0
 437 0176 2621     		movs	r1, #38
 438 0178 4548     		ldr	r0, .L42
 439 017a FFF7FEFF 		bl	_Error_Handler
 440              	.LVL33:
 441              	.L32:
 442              	.LBE563:
 443              	.LBE562:
 217:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(0,1) = 0;
 444              		.loc 3 217 0
 445 017e 474B     		ldr	r3, .L42+12
 446 0180 2393     		str	r3, [sp, #140]	@ float
 447              	.LVL34:
 448              	.LBB564:
 449              	.LBB565:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 450              		.loc 6 37 0
 451 0182 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 16


 452 0186 1BB1     		cbz	r3, .L33
 453 0188 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 454 018c 012B     		cmp	r3, #1
 455 018e 03D8     		bhi	.L34
 456              	.L33:
 457              		.loc 6 38 0
 458 0190 2621     		movs	r1, #38
 459 0192 3F48     		ldr	r0, .L42
 460 0194 FFF7FEFF 		bl	_Error_Handler
 461              	.LVL35:
 462              	.L34:
 463              	.LBE565:
 464              	.LBE564:
 218:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(1,0) = 0;
 465              		.loc 3 218 0
 466 0198 0023     		movs	r3, #0
 467 019a 2493     		str	r3, [sp, #144]	@ float
 468              	.LVL36:
 469              	.LBB566:
 470              	.LBB567:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 471              		.loc 6 37 0
 472 019c 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 473 01a0 012B     		cmp	r3, #1
 474 01a2 02D9     		bls	.L35
 475 01a4 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 476 01a8 1BB9     		cbnz	r3, .L36
 477              	.L35:
 478              		.loc 6 38 0
 479 01aa 2621     		movs	r1, #38
 480 01ac 3848     		ldr	r0, .L42
 481 01ae FFF7FEFF 		bl	_Error_Handler
 482              	.LVL37:
 483              	.L36:
 484              	.LBE567:
 485              	.LBE566:
 219:Core/Src/parts/sensors/position_sensor.cpp ****         process_error.at(1,1) = 0.003;
 486              		.loc 3 219 0
 487 01b2 0023     		movs	r3, #0
 488 01b4 2793     		str	r3, [sp, #156]	@ float
 489              	.LVL38:
 490              	.LBB568:
 491              	.LBB569:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 492              		.loc 6 37 0
 493 01b6 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 494 01ba 012B     		cmp	r3, #1
 495 01bc 63D9     		bls	.L37
 496 01be 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 497 01c2 012B     		cmp	r3, #1
 498 01c4 5FD9     		bls	.L37
 499              	.L38:
 500              	.LVL39:
 501              	.LBE569:
 502              	.LBE568:
 220:Core/Src/parts/sensors/position_sensor.cpp ****         
 503              		.loc 3 220 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 17


 504 01c6 364B     		ldr	r3, .L42+16
 505 01c8 2893     		str	r3, [sp, #160]	@ float
 222:Core/Src/parts/sensors/position_sensor.cpp ****         measure_error.at(0,0) = 200;
 506              		.loc 3 222 0
 507 01ca 0122     		movs	r2, #1
 508 01cc 1146     		mov	r1, r2
 509 01ce 12A8     		add	r0, sp, #72
 510 01d0 FFF7FEFF 		bl	_ZN3MatC1Ehh
 511              	.LVL40:
 512              	.LBB571:
 513              	.LBB572:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 514              		.loc 6 37 0
 515 01d4 9DF88830 		ldrb	r3, [sp, #136]	@ zero_extendqisi2
 516 01d8 13B1     		cbz	r3, .L39
 517 01da 9DF88930 		ldrb	r3, [sp, #137]	@ zero_extendqisi2
 518 01de 1BB9     		cbnz	r3, .L40
 519              	.L39:
 520              		.loc 6 38 0
 521 01e0 2621     		movs	r1, #38
 522 01e2 2B48     		ldr	r0, .L42
 523 01e4 FFF7FEFF 		bl	_Error_Handler
 524              	.LVL41:
 525              	.L40:
 526              	.LBE572:
 527              	.LBE571:
 223:Core/Src/parts/sensors/position_sensor.cpp **** 
 528              		.loc 3 223 0
 529 01e8 2E4B     		ldr	r3, .L42+20
 530 01ea 1293     		str	r3, [sp, #72]	@ float
 531              	.LVL42:
 532              	.LBB573:
 533              	.LBB574:
 534              	.LBB575:
  39:Core/Inc/utils\math/mat.h ****                 }
  40:Core/Inc/utils\math/mat.h ****                 return matrix_[i][j];
  41:Core/Inc/utils\math/mat.h ****         }
  42:Core/Inc/utils\math/mat.h **** 
  43:Core/Inc/utils\math/mat.h **** 
  44:Core/Inc/utils\math/mat.h ****         Mat(const Mat &m);
  45:Core/Inc/utils\math/mat.h **** 
  46:Core/Inc/utils\math/mat.h ****         Mat &operator=(const Mat &m) {
  47:Core/Inc/utils\math/mat.h ****                 Mat temp(m);
 535              		.loc 6 47 0
 536 01ec 67A9     		add	r1, sp, #412
 537              	.LVL43:
 538 01ee 01A8     		add	r0, sp, #4
 539 01f0 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 540              	.LVL44:
  48:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 541              		.loc 6 48 0
 542 01f4 2C4C     		ldr	r4, .L42+24
 543 01f6 01A9     		add	r1, sp, #4
 544 01f8 2046     		mov	r0, r4
 545 01fa FFF7FEFF 		bl	_Z4swapR3MatS0_
 546              	.LVL45:
 547              	.LBE575:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 18


 548              	.LBE574:
 549              	.LBE573:
 550              	.LBB576:
 551              	.LBB577:
 552              	.LBB578:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 553              		.loc 6 47 0
 554 01fe 56A9     		add	r1, sp, #344
 555              	.LVL46:
 556 0200 01A8     		add	r0, sp, #4
 557 0202 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 558              	.LVL47:
 559              		.loc 6 48 0
 560 0206 01A9     		add	r1, sp, #4
 561 0208 04F14400 		add	r0, r4, #68
 562 020c FFF7FEFF 		bl	_Z4swapR3MatS0_
 563              	.LVL48:
 564              	.LBE578:
 565              	.LBE577:
 566              	.LBE576:
 567              	.LBB579:
 568              	.LBB580:
 569              	.LBB581:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 570              		.loc 6 47 0
 571 0210 45A9     		add	r1, sp, #276
 572              	.LVL49:
 573 0212 01A8     		add	r0, sp, #4
 574 0214 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 575              	.LVL50:
 576              		.loc 6 48 0
 577 0218 01A9     		add	r1, sp, #4
 578 021a 04F18800 		add	r0, r4, #136
 579 021e FFF7FEFF 		bl	_Z4swapR3MatS0_
 580              	.LVL51:
 581              	.LBE581:
 582              	.LBE580:
 583              	.LBE579:
 584              	.LBB582:
 585              	.LBB583:
  17:Core/Inc/utils\filter/kalman.h **** {
  18:Core/Inc/utils\filter/kalman.h **** public:
  19:Core/Inc/utils\filter/kalman.h ****         void set_F(const Mat &f) { F_ = f; }
  20:Core/Inc/utils\filter/kalman.h ****         void set_B(const Mat &b) { B_ = b; }
  21:Core/Inc/utils\filter/kalman.h ****         void set_H(const Mat &h) { H_ = h; }
  22:Core/Inc/utils\filter/kalman.h ****         void set_I(uint8_t n)    { I_ = Mat::eye(n); }
 586              		.loc 5 22 0
 587 0222 0221     		movs	r1, #2
 588 0224 01A8     		add	r0, sp, #4
 589 0226 FFF7FEFF 		bl	_ZN3Mat3eyeEh
 590              	.LVL52:
 591 022a 4222     		movs	r2, #66
 592 022c 01A9     		add	r1, sp, #4
 593 022e 04F1CC00 		add	r0, r4, #204
 594 0232 FFF7FEFF 		bl	memcpy
 595              	.LVL53:
 596              	.LBE583:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 19


 597              	.LBE582:
 598              	.LBB584:
 599              	.LBB585:
 600              	.LBB586:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 601              		.loc 6 47 0
 602 0236 34A9     		add	r1, sp, #208
 603              	.LVL54:
 604 0238 01A8     		add	r0, sp, #4
 605 023a FFF7FEFF 		bl	_ZN3MatC1ERKS_
 606              	.LVL55:
 607              		.loc 6 48 0
 608 023e 01A9     		add	r1, sp, #4
 609 0240 04F58870 		add	r0, r4, #272
 610 0244 FFF7FEFF 		bl	_Z4swapR3MatS0_
 611              	.LVL56:
 612              	.LBE586:
 613              	.LBE585:
 614              	.LBE584:
 615              	.LBB587:
 616              	.LBB588:
 617              	.LBB589:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 618              		.loc 6 47 0
 619 0248 23A9     		add	r1, sp, #140
 620              	.LVL57:
 621 024a 01A8     		add	r0, sp, #4
 622 024c FFF7FEFF 		bl	_ZN3MatC1ERKS_
 623              	.LVL58:
 624              		.loc 6 48 0
 625 0250 01A9     		add	r1, sp, #4
 626 0252 04F5AA70 		add	r0, r4, #340
 627 0256 FFF7FEFF 		bl	_Z4swapR3MatS0_
 628              	.LVL59:
 629              	.LBE589:
 630              	.LBE588:
 631              	.LBE587:
 632              	.LBB590:
 633              	.LBB591:
 634              	.LBB592:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 635              		.loc 6 47 0
 636 025a 12A9     		add	r1, sp, #72
 637              	.LVL60:
 638 025c 01A8     		add	r0, sp, #4
 639 025e FFF7FEFF 		bl	_ZN3MatC1ERKS_
 640              	.LVL61:
 641              		.loc 6 48 0
 642 0262 01A9     		add	r1, sp, #4
 643 0264 04F5CC70 		add	r0, r4, #408
 644 0268 FFF7FEFF 		bl	_Z4swapR3MatS0_
 645              	.LVL62:
 646              	.LBE592:
 647              	.LBE591:
 648              	.LBE590:
 234:Core/Src/parts/sensors/position_sensor.cpp **** 
 649              		.loc 3 234 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 20


 650 026c 0020     		movs	r0, #0
 651 026e 78B0     		add	sp, sp, #480
 652              	.LCFI2:
 653              		.cfi_remember_state
 654              		.cfi_def_cfa_offset 8
 655              		@ sp needed
 656 0270 10BD     		pop	{r4, pc}
 657              	.LVL63:
 658              	.L13:
 659              	.LCFI3:
 660              		.cfi_restore_state
 661              	.LBB593:
 662              	.LBB544:
  38:Core/Inc/utils\math/mat.h ****                 }
 663              		.loc 6 38 0
 664 0272 2621     		movs	r1, #38
 665 0274 0648     		ldr	r0, .L42
 666 0276 FFF7FEFF 		bl	_Error_Handler
 667              	.LVL64:
 668 027a F9E6     		b	.L14
 669              	.LVL65:
 670              	.L29:
 671              	.LBE544:
 672              	.LBE593:
 673              	.LBB594:
 674              	.LBB561:
 675 027c 2621     		movs	r1, #38
 676 027e 0448     		ldr	r0, .L42
 677 0280 FFF7FEFF 		bl	_Error_Handler
 678              	.LVL66:
 679 0284 6AE7     		b	.L30
 680              	.LVL67:
 681              	.L37:
 682              	.LBE561:
 683              	.LBE594:
 684              	.LBB595:
 685              	.LBB570:
 686 0286 2621     		movs	r1, #38
 687 0288 0148     		ldr	r0, .L42
 688 028a FFF7FEFF 		bl	_Error_Handler
 689              	.LVL68:
 690 028e 9AE7     		b	.L38
 691              	.L43:
 692              		.align	2
 693              	.L42:
 694 0290 00000000 		.word	.LC0
 695 0294 000080BF 		.word	-1082130432
 696 0298 0000FA43 		.word	1140457472
 697 029c 6F12833A 		.word	981668463
 698 02a0 A69B443B 		.word	994352038
 699 02a4 00004843 		.word	1128792064
 700 02a8 00000000 		.word	.LANCHOR0
 701              	.LBE570:
 702              	.LBE595:
 703              		.cfi_endproc
 704              	.LFE536:
 706              		.section	.text._ZN10Exp_SmoothD0Ev,"axG",%progbits,_ZN10Exp_SmoothD5Ev,comdat
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 21


 707              		.align	1
 708              		.weak	_ZN10Exp_SmoothD0Ev
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv4-sp-d16
 714              	_ZN10Exp_SmoothD0Ev:
 715              	.LFB431:
 716              		.loc 2 23 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              	.LVL69:
 721 0000 10B5     		push	{r4, lr}
 722              	.LCFI4:
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 4, -8
 725              		.cfi_offset 14, -4
 726 0002 0446     		mov	r4, r0
 727              		.loc 2 23 0
 728 0004 1021     		movs	r1, #16
 729 0006 FFF7FEFF 		bl	_ZdlPvj
 730              	.LVL70:
 731 000a 2046     		mov	r0, r4
 732 000c 10BD     		pop	{r4, pc}
 733              		.cfi_endproc
 734              	.LFE431:
 736              		.section	.text._ZN11Kalman_VarsC2Ev,"axG",%progbits,_ZN11Kalman_VarsC5Ev,comdat
 737              		.align	1
 738              		.weak	_ZN11Kalman_VarsC2Ev
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 742              		.fpu fpv4-sp-d16
 744              	_ZN11Kalman_VarsC2Ev:
 745              	.LFB530:
  16:Core/Inc/utils\filter/kalman.h **** {
 746              		.loc 5 16 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              	.LVL71:
 751 0000 10B5     		push	{r4, lr}
 752              	.LCFI5:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 4, -8
 755              		.cfi_offset 14, -4
 756 0002 0446     		mov	r4, r0
 757              	.LVL72:
 758              	.LBB596:
 759              	.LBB597:
 760              	.LBB598:
  21:Core/Inc/utils\math/mat.h ****         
 761              		.loc 6 21 0
 762 0004 0022     		movs	r2, #0
 763 0006 1146     		mov	r1, r2
 764 0008 FFF7FEFF 		bl	_ZN3MatC1Ehh
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 22


 765              	.LVL73:
 766              	.LBE598:
 767              	.LBE597:
 768              	.LBB599:
 769              	.LBB600:
 770 000c 0022     		movs	r2, #0
 771 000e 1146     		mov	r1, r2
 772 0010 04F14400 		add	r0, r4, #68
 773              	.LVL74:
 774 0014 FFF7FEFF 		bl	_ZN3MatC1Ehh
 775              	.LVL75:
 776              	.LBE600:
 777              	.LBE599:
 778              	.LBB601:
 779              	.LBB602:
 780 0018 0022     		movs	r2, #0
 781 001a 1146     		mov	r1, r2
 782 001c 04F18800 		add	r0, r4, #136
 783              	.LVL76:
 784 0020 FFF7FEFF 		bl	_ZN3MatC1Ehh
 785              	.LVL77:
 786              	.LBE602:
 787              	.LBE601:
 788              	.LBB603:
 789              	.LBB604:
 790 0024 0022     		movs	r2, #0
 791 0026 1146     		mov	r1, r2
 792 0028 04F1CC00 		add	r0, r4, #204
 793              	.LVL78:
 794 002c FFF7FEFF 		bl	_ZN3MatC1Ehh
 795              	.LVL79:
 796              	.LBE604:
 797              	.LBE603:
 798              	.LBB605:
 799              	.LBB606:
 800 0030 0022     		movs	r2, #0
 801 0032 1146     		mov	r1, r2
 802 0034 04F58870 		add	r0, r4, #272
 803              	.LVL80:
 804 0038 FFF7FEFF 		bl	_ZN3MatC1Ehh
 805              	.LVL81:
 806              	.LBE606:
 807              	.LBE605:
 808              	.LBB607:
 809              	.LBB608:
 810 003c 0022     		movs	r2, #0
 811 003e 1146     		mov	r1, r2
 812 0040 04F5AA70 		add	r0, r4, #340
 813              	.LVL82:
 814 0044 FFF7FEFF 		bl	_ZN3MatC1Ehh
 815              	.LVL83:
 816              	.LBE608:
 817              	.LBE607:
 818              	.LBB609:
 819              	.LBB610:
 820 0048 0022     		movs	r2, #0
 821 004a 1146     		mov	r1, r2
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 23


 822 004c 04F5CC70 		add	r0, r4, #408
 823              	.LVL84:
 824 0050 FFF7FEFF 		bl	_ZN3MatC1Ehh
 825              	.LVL85:
 826              	.LBE610:
 827              	.LBE609:
 828              	.LBE596:
  16:Core/Inc/utils\filter/kalman.h **** {
 829              		.loc 5 16 0
 830 0054 2046     		mov	r0, r4
 831 0056 10BD     		pop	{r4, pc}
 832              		.cfi_endproc
 833              	.LFE530:
 835              		.weak	_ZN11Kalman_VarsC1Ev
 836              		.thumb_set _ZN11Kalman_VarsC1Ev,_ZN11Kalman_VarsC2Ev
 837              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 838              		.align	1
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu fpv4-sp-d16
 844              	_Z41__static_initialization_and_destruction_0ii:
 845              	.LFB586:
 846              		.loc 3 239 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              	.LVL86:
 851 0000 0128     		cmp	r0, #1
 852 0002 00D0     		beq	.L54
 853              	.L51:
 854 0004 7047     		bx	lr
 855              	.L54:
 856              		.loc 3 239 0 is_stmt 0 discriminator 1
 857 0006 4FF6FF73 		movw	r3, #65535
 858 000a 9942     		cmp	r1, r3
 859 000c FAD1     		bne	.L51
 860              		.loc 3 239 0
 861 000e 70B5     		push	{r4, r5, r6, lr}
 862              	.LCFI6:
 863              		.cfi_def_cfa_offset 16
 864              		.cfi_offset 4, -16
 865              		.cfi_offset 5, -12
 866              		.cfi_offset 6, -8
 867              		.cfi_offset 14, -4
 868 0010 2DED028B 		vpush.64	{d8}
 869              	.LCFI7:
 870              		.cfi_def_cfa_offset 24
 871              		.cfi_offset 80, -24
 872              		.cfi_offset 81, -20
  18:Core/Src/parts/sensors/position_sensor.cpp **** static Exp_Smooth gYLidarAlpha35(0.35);
 873              		.loc 3 18 0 is_stmt 1
 874 0014 9FED1E8A 		vldr.32	s16, .L55
 875 0018 1E4D     		ldr	r5, .L55+4
 876 001a B0EE480A 		vmov.f32	s0, s16
 877 001e 2846     		mov	r0, r5
 878              	.LVL87:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 24


 879 0020 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 880              	.LVL88:
 881 0024 1C4C     		ldr	r4, .L55+8
 882 0026 1D4E     		ldr	r6, .L55+12
 883 0028 2246     		mov	r2, r4
 884 002a 3146     		mov	r1, r6
 885 002c 2846     		mov	r0, r5
 886 002e FFF7FEFF 		bl	__aeabi_atexit
 887              	.LVL89:
  19:Core/Src/parts/sensors/position_sensor.cpp **** 
 888              		.loc 3 19 0
 889 0032 1B4D     		ldr	r5, .L55+16
 890 0034 B0EE480A 		vmov.f32	s0, s16
 891 0038 2846     		mov	r0, r5
 892 003a FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 893              	.LVL90:
 894 003e 2246     		mov	r2, r4
 895 0040 3146     		mov	r1, r6
 896 0042 2846     		mov	r0, r5
 897 0044 FFF7FEFF 		bl	__aeabi_atexit
 898              	.LVL91:
  30:Core/Src/parts/sensors/position_sensor.cpp **** 
 899              		.loc 3 30 0
 900 0048 164B     		ldr	r3, .L55+20
 901 004a 1A68     		ldr	r2, [r3]	@ float
 902 004c 164B     		ldr	r3, .L55+24
 903 004e 1B68     		ldr	r3, [r3]	@ float
 904              	.LVL92:
 905              	.LBB611:
 906              	.LBB612:
 907              	.LBB613:
 908              	.LBB614:
 909              	.LBB615:
  33:Core/Inc/utils\math/vec3.h **** 
  34:Core/Inc/utils\math/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils\math/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils\math/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils\math/vec3.h ****         void setX(T x) { x_ = x; }
 910              		.loc 4 37 0
 911 0050 1648     		ldr	r0, .L55+28
 912 0052 0260     		str	r2, [r0]	@ float
 913              	.LVL93:
 914              	.LBE615:
 915              	.LBE614:
 916              	.LBB616:
 917              	.LBB617:
  38:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 918              		.loc 4 38 0
 919 0054 4360     		str	r3, [r0, #4]	@ float
 920              	.LVL94:
 921              	.LBE617:
 922              	.LBE616:
 923              	.LBB618:
 924              	.LBB619:
  39:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 925              		.loc 4 39 0
 926 0056 0023     		movs	r3, #0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 25


 927              	.LVL95:
 928 0058 8360     		str	r3, [r0, #8]	@ float
 929              	.LVL96:
 930              	.LBE619:
 931              	.LBE618:
 932              	.LBE613:
 933              	.LBE612:
 934              	.LBE611:
  30:Core/Src/parts/sensors/position_sensor.cpp **** 
 935              		.loc 3 30 0
 936 005a 2246     		mov	r2, r4
 937 005c 1449     		ldr	r1, .L55+32
 938 005e FFF7FEFF 		bl	__aeabi_atexit
 939              	.LVL97:
  32:Core/Src/parts/sensors/position_sensor.cpp **** Kalman_Vars gXLidarEncoder_KV;
 940              		.loc 3 32 0
 941 0062 144D     		ldr	r5, .L55+36
 942 0064 2846     		mov	r0, r5
 943 0066 FFF7FEFF 		bl	_ZN11Kalman_VarsC1Ev
 944              	.LVL98:
 945 006a 134E     		ldr	r6, .L55+40
 946 006c 2246     		mov	r2, r4
 947 006e 3146     		mov	r1, r6
 948 0070 2846     		mov	r0, r5
 949 0072 FFF7FEFF 		bl	__aeabi_atexit
 950              	.LVL99:
  33:Core/Src/parts/sensors/position_sensor.cpp **** 
 951              		.loc 3 33 0
 952 0076 114D     		ldr	r5, .L55+44
 953 0078 2846     		mov	r0, r5
 954 007a FFF7FEFF 		bl	_ZN11Kalman_VarsC1Ev
 955              	.LVL100:
 956 007e 2246     		mov	r2, r4
 957 0080 3146     		mov	r1, r6
 958 0082 2846     		mov	r0, r5
 959 0084 FFF7FEFF 		bl	__aeabi_atexit
 960              	.LVL101:
 961              		.loc 3 239 0
 962 0088 BDEC028B 		vldm	sp!, {d8}
 963              	.LCFI8:
 964              		.cfi_restore 80
 965              		.cfi_restore 81
 966              		.cfi_def_cfa_offset 16
 967 008c 70BD     		pop	{r4, r5, r6, pc}
 968              	.L56:
 969 008e 00BF     		.align	2
 970              	.L55:
 971 0090 3333B33E 		.word	1051931443
 972 0094 00000000 		.word	.LANCHOR1
 973 0098 00000000 		.word	__dso_handle
 974 009c 00000000 		.word	_ZN10Exp_SmoothD1Ev
 975 00a0 00000000 		.word	.LANCHOR2
 976 00a4 00000000 		.word	.LANCHOR3
 977 00a8 00000000 		.word	.LANCHOR4
 978 00ac 00000000 		.word	.LANCHOR5
 979 00b0 00000000 		.word	_ZN4Vec3IfED1Ev
 980 00b4 00000000 		.word	.LANCHOR6
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 26


 981 00b8 00000000 		.word	_ZN11Kalman_VarsD1Ev
 982 00bc 00000000 		.word	.LANCHOR0
 983              		.cfi_endproc
 984              	.LFE586:
 986              		.section	.text._ZN14PositionSensor12get_InstanceEv,"ax",%progbits
 987              		.align	1
 988              		.global	_ZN14PositionSensor12get_InstanceEv
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu fpv4-sp-d16
 994              	_ZN14PositionSensor12get_InstanceEv:
 995              	.LFB532:
  37:Core/Src/parts/sensors/position_sensor.cpp ****         static PositionSensor gPSensor_Instance;
 996              		.loc 3 37 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000 0000 38B5     		push	{r3, r4, r5, lr}
 1001              	.LCFI9:
 1002              		.cfi_def_cfa_offset 16
 1003              		.cfi_offset 3, -16
 1004              		.cfi_offset 4, -12
 1005              		.cfi_offset 5, -8
 1006              		.cfi_offset 14, -4
  38:Core/Src/parts/sensors/position_sensor.cpp **** 
 1007              		.loc 3 38 0
 1008 0002 2C4B     		ldr	r3, .L61
 1009 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 0006 BFF35B8F 		dmb	ish
 1011 000a 13F0010F 		tst	r3, #1
 1012 000e 01D0     		beq	.L60
 1013              	.L58:
  41:Core/Src/parts/sensors/position_sensor.cpp **** 
 1014              		.loc 3 41 0
 1015 0010 2948     		ldr	r0, .L61+4
 1016 0012 38BD     		pop	{r3, r4, r5, pc}
 1017              	.L60:
  38:Core/Src/parts/sensors/position_sensor.cpp **** 
 1018              		.loc 3 38 0 discriminator 1
 1019 0014 2748     		ldr	r0, .L61
 1020 0016 FFF7FEFF 		bl	__cxa_guard_acquire
 1021              	.LVL102:
 1022 001a 0028     		cmp	r0, #0
 1023 001c F8D0     		beq	.L58
 1024              	.LVL103:
 1025              	.LBB629:
 1026              	.LBB630:
 1027              	.LBB631:
 1028              	.LBB632:
 1029              	.LBB633:
 1030              	.LBB634:
  23:Core/Inc/utils\filter/kalman.h ****         void set_P(const Mat &p) { P_ = p; }
  24:Core/Inc/utils\filter/kalman.h ****         void set_Q(const Mat &q) { Q_ = q; }
  25:Core/Inc/utils\filter/kalman.h ****         void set_R(const Mat &r) { R_ = r; }
  26:Core/Inc/utils\filter/kalman.h **** 
  27:Core/Inc/utils\filter/kalman.h ****         friend class Kalman_Filter;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 27


  28:Core/Inc/utils\filter/kalman.h **** 
  29:Core/Inc/utils\filter/kalman.h **** private:
  30:Core/Inc/utils\filter/kalman.h ****         Mat F_, B_, H_, I_, P_, Q_, R_;
  31:Core/Inc/utils\filter/kalman.h **** };
  32:Core/Inc/utils\filter/kalman.h **** 
  33:Core/Inc/utils\filter/kalman.h **** // Trying a Simple Sensor Fusion : Gyroscope and (Accelerometer/Magnetometer)
  34:Core/Inc/utils\filter/kalman.h **** class Kalman_Filter
  35:Core/Inc/utils\filter/kalman.h **** {
  36:Core/Inc/utils\filter/kalman.h **** public:
  37:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter(Kalman_Vars *kv, int (*kv_init)(uint32_t)) :
  38:Core/Inc/utils\filter/kalman.h ****         x_(2,1), u_(1,1), z_(1,1), K_(2,1)
 1031              		.loc 5 38 0
 1032 001e 264C     		ldr	r4, .L61+4
 1033 0020 0122     		movs	r2, #1
 1034 0022 0221     		movs	r1, #2
 1035 0024 04F12000 		add	r0, r4, #32
 1036 0028 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1037              	.LVL104:
 1038 002c 0122     		movs	r2, #1
 1039 002e 1146     		mov	r1, r2
 1040 0030 04F16400 		add	r0, r4, #100
 1041 0034 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1042              	.LVL105:
 1043 0038 0122     		movs	r2, #1
 1044 003a 1146     		mov	r1, r2
 1045 003c 04F1A800 		add	r0, r4, #168
 1046 0040 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1047              	.LVL106:
 1048 0044 0122     		movs	r2, #1
 1049 0046 0221     		movs	r1, #2
 1050 0048 04F1EC00 		add	r0, r4, #236
 1051 004c FFF7FEFF 		bl	_ZN3MatC1Ehh
 1052              	.LVL107:
  39:Core/Inc/utils\filter/kalman.h ****         {
  40:Core/Inc/utils\filter/kalman.h ****                 is_first_ = true;
 1053              		.loc 5 40 0
 1054 0050 0125     		movs	r5, #1
 1055 0052 2576     		strb	r5, [r4, #24]
  41:Core/Inc/utils\filter/kalman.h ****                 kv_ = kv;
 1056              		.loc 5 41 0
 1057 0054 194B     		ldr	r3, .L61+8
 1058 0056 E361     		str	r3, [r4, #28]
  42:Core/Inc/utils\filter/kalman.h ****                 kv_init_ = kv_init;
 1059              		.loc 5 42 0
 1060 0058 194B     		ldr	r3, .L61+12
 1061 005a 6361     		str	r3, [r4, #20]
 1062              	.LVL108:
 1063              	.LBE634:
 1064              	.LBE633:
 1065              	.LBE632:
 1066              	.LBB635:
 1067              	.LBB636:
 1068              	.LBB637:
  38:Core/Inc/utils\filter/kalman.h ****         {
 1069              		.loc 5 38 0
 1070 005c 2A46     		mov	r2, r5
 1071 005e 0221     		movs	r1, #2
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 28


 1072 0060 04F59E70 		add	r0, r4, #316
 1073 0064 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1074              	.LVL109:
 1075 0068 2A46     		mov	r2, r5
 1076 006a 2946     		mov	r1, r5
 1077 006c 04F5C070 		add	r0, r4, #384
 1078 0070 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1079              	.LVL110:
 1080 0074 2A46     		mov	r2, r5
 1081 0076 2946     		mov	r1, r5
 1082 0078 04F5E270 		add	r0, r4, #452
 1083 007c FFF7FEFF 		bl	_ZN3MatC1Ehh
 1084              	.LVL111:
 1085 0080 2A46     		mov	r2, r5
 1086 0082 0221     		movs	r1, #2
 1087 0084 04F50270 		add	r0, r4, #520
 1088 0088 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1089              	.LVL112:
  40:Core/Inc/utils\filter/kalman.h ****                 kv_ = kv;
 1090              		.loc 5 40 0
 1091 008c 84F83451 		strb	r5, [r4, #308]
  41:Core/Inc/utils\filter/kalman.h ****                 kv_init_ = kv_init;
 1092              		.loc 5 41 0
 1093 0090 0C4B     		ldr	r3, .L61+16
 1094 0092 C4F83831 		str	r3, [r4, #312]
 1095              		.loc 5 42 0
 1096 0096 0C4B     		ldr	r3, .L61+20
 1097 0098 C4F83031 		str	r3, [r4, #304]
 1098              	.LVL113:
 1099              	.LBE637:
 1100              	.LBE636:
 1101              	.LBE635:
  36:Core/Inc/parts/sensors/position_sensor.h **** 
  37:Core/Inc/parts/sensors/position_sensor.h ****         static PositionSensor& get_Instance();
  38:Core/Inc/parts/sensors/position_sensor.h **** 
  39:Core/Inc/parts/sensors/position_sensor.h ****         int init(uint32_t dt_millis);
  40:Core/Inc/parts/sensors/position_sensor.h **** 
  41:Core/Inc/parts/sensors/position_sensor.h ****         // Add sensor so that it can be used for calculating position
  42:Core/Inc/parts/sensors/position_sensor.h ****         void add_Sensor(Sensor<float> *sen) {
  43:Core/Inc/parts/sensors/position_sensor.h ****                 for (uint8_t i = 0; i < sensor_count_; ++i) {
  44:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
  45:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
  46:Core/Inc/parts/sensors/position_sensor.h ****                         }
  47:Core/Inc/parts/sensors/position_sensor.h ****                 }
  48:Core/Inc/parts/sensors/position_sensor.h ****                 p_sensors_[sensor_count_++] = sen;
  49:Core/Inc/parts/sensors/position_sensor.h ****         }
  50:Core/Inc/parts/sensors/position_sensor.h ****         // Remove any Sensor from the next calculation
  51:Core/Inc/parts/sensors/position_sensor.h ****         void remove_Sensor(Sensor<float> *sen) {
  52:Core/Inc/parts/sensors/position_sensor.h ****                 for (uint8_t i = 0; i < sensor_count_; ++i) {
  53:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
  54:Core/Inc/parts/sensors/position_sensor.h ****                                 --sensor_count_;
  55:Core/Inc/parts/sensors/position_sensor.h ****                                 p_sensors_[i] = p_sensors_[sensor_count_];
  56:Core/Inc/parts/sensors/position_sensor.h ****                                 break;
  57:Core/Inc/parts/sensors/position_sensor.h ****                         }
  58:Core/Inc/parts/sensors/position_sensor.h ****                 }
  59:Core/Inc/parts/sensors/position_sensor.h ****         }
  60:Core/Inc/parts/sensors/position_sensor.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 29


  61:Core/Inc/parts/sensors/position_sensor.h ****         // Reads the position of the robot from the initial fences
  62:Core/Inc/parts/sensors/position_sensor.h ****         // using the available Sensors
  63:Core/Inc/parts/sensors/position_sensor.h ****         Vec3<float> read_Position(Vec3<float> ori, Vec3<float> base_state, const State_Vars *sv, ui
  64:Core/Inc/parts/sensors/position_sensor.h **** 
  65:Core/Inc/parts/sensors/position_sensor.h **** private:
  66:Core/Inc/parts/sensors/position_sensor.h ****         Sensor<float> *p_sensors_[MAX_POSITION_SENSORS];
  67:Core/Inc/parts/sensors/position_sensor.h ****         uint8_t sensor_count_;
  68:Core/Inc/parts/sensors/position_sensor.h **** 
  69:Core/Inc/parts/sensors/position_sensor.h ****         Kalman_Filter enc_fuser_;
  70:Core/Inc/parts/sensors/position_sensor.h ****         Kalman_Filter xlidar_enc_fuser_;
  71:Core/Inc/parts/sensors/position_sensor.h ****         
  72:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor() :
  73:Core/Inc/parts/sensors/position_sensor.h ****         enc_fuser_(&gEncoders_KV, init_EncodersKalman), xlidar_enc_fuser_(&gXLidarEncoder_KV, init_
  74:Core/Inc/parts/sensors/position_sensor.h ****         {
  75:Core/Inc/parts/sensors/position_sensor.h ****                 sensor_count_ = 0;
 1102              		.loc 1 75 0
 1103 009c 0023     		movs	r3, #0
 1104 009e 2374     		strb	r3, [r4, #16]
 1105              	.LVL114:
 1106              	.LBE631:
 1107              	.LBE630:
 1108              	.LBE629:
  38:Core/Src/parts/sensors/position_sensor.cpp **** 
 1109              		.loc 3 38 0
 1110 00a0 0448     		ldr	r0, .L61
 1111 00a2 FFF7FEFF 		bl	__cxa_guard_release
 1112              	.LVL115:
 1113 00a6 094A     		ldr	r2, .L61+24
 1114 00a8 0949     		ldr	r1, .L61+28
 1115 00aa 2046     		mov	r0, r4
 1116 00ac FFF7FEFF 		bl	__aeabi_atexit
 1117              	.LVL116:
 1118 00b0 AEE7     		b	.L58
 1119              	.L62:
 1120 00b2 00BF     		.align	2
 1121              	.L61:
 1122 00b4 00000000 		.word	.LANCHOR7
 1123 00b8 00000000 		.word	.LANCHOR8
 1124 00bc 00000000 		.word	.LANCHOR6
 1125 00c0 00000000 		.word	_Z19init_EncodersKalmanm
 1126 00c4 00000000 		.word	.LANCHOR0
 1127 00c8 00000000 		.word	_Z24init_XLidarEncoderKalmanm
 1128 00cc 00000000 		.word	__dso_handle
 1129 00d0 00000000 		.word	_ZN14PositionSensorD1Ev
 1130              		.cfi_endproc
 1131              	.LFE532:
 1133              		.section	.text._ZN14PositionSensor17process_LidarDataEPfPK10State_Vars,"ax",%progbits
 1134              		.align	1
 1135              		.global	_ZN14PositionSensor17process_LidarDataEPfPK10State_Vars
 1136              		.syntax unified
 1137              		.thumb
 1138              		.thumb_func
 1139              		.fpu fpv4-sp-d16
 1141              	_ZN14PositionSensor17process_LidarDataEPfPK10State_Vars:
 1142              	.LFB535:
 173:Core/Src/parts/sensors/position_sensor.cpp ****         // Process Lidar Data according to the field the robot is in
 1143              		.loc 3 173 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 30


 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              		@ link register save eliminated.
 1148              	.LVL117:
 180:Core/Src/parts/sensors/position_sensor.cpp **** 
 1149              		.loc 3 180 0
 1150 0000 1368     		ldr	r3, [r2]
 1151              	.LVL118:
 183:Core/Src/parts/sensors/position_sensor.cpp ****                 // The fence is at most 2000 mm from robot
 1152              		.loc 3 183 0
 1153 0002 092B     		cmp	r3, #9
 1154 0004 0EDD     		ble	.L63
 185:Core/Src/parts/sensors/position_sensor.cpp ****                         // Lower Fence distance
 1155              		.loc 3 185 0
 1156 0006 D1ED007A 		vldr.32	s15, [r1]
 1157 000a 9FED077A 		vldr.32	s14, .L67
 1158 000e F4EEC77A 		vcmpe.f32	s15, s14
 1159 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1160 0016 05D5     		bpl	.L63
 187:Core/Src/parts/sensors/position_sensor.cpp ****                 }
 1161              		.loc 3 187 0
 1162 0018 9FED047A 		vldr.32	s14, .L67+4
 1163 001c 77EE877A 		vadd.f32	s15, s15, s14
 1164 0020 C1ED007A 		vstr.32	s15, [r1]
 1165              	.L63:
 190:Core/Src/parts/sensors/position_sensor.cpp **** 
 1166              		.loc 3 190 0
 1167 0024 7047     		bx	lr
 1168              	.L68:
 1169 0026 00BF     		.align	2
 1170              	.L67:
 1171 0028 0000FA44 		.word	1157234688
 1172 002c 00401C45 		.word	1159479296
 1173              		.cfi_endproc
 1174              	.LFE535:
 1176              		.global	__aeabi_f2d
 1177              		.global	__aeabi_ddiv
 1178              		.global	__aeabi_d2f
 1179              		.section	.text._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm,"ax",%progbits
 1180              		.align	1
 1181              		.global	_ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm
 1182              		.syntax unified
 1183              		.thumb
 1184              		.thumb_func
 1185              		.fpu fpv4-sp-d16
 1187              	_ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm:
 1188              	.LFB534:
  55:Core/Src/parts/sensors/position_sensor.cpp ****         // First Collect Data from all available position sensors
 1189              		.loc 3 55 0
 1190              		.cfi_startproc
 1191              		@ args = 8, pretend = 0, frame = 872
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              	.LVL119:
 1194 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1195              	.LCFI10:
 1196              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 31


 1197              		.cfi_offset 4, -36
 1198              		.cfi_offset 5, -32
 1199              		.cfi_offset 6, -28
 1200              		.cfi_offset 7, -24
 1201              		.cfi_offset 8, -20
 1202              		.cfi_offset 9, -16
 1203              		.cfi_offset 10, -12
 1204              		.cfi_offset 11, -8
 1205              		.cfi_offset 14, -4
 1206 0004 2DED068B 		vpush.64	{d8, d9, d10}
 1207              	.LCFI11:
 1208              		.cfi_def_cfa_offset 60
 1209              		.cfi_offset 80, -60
 1210              		.cfi_offset 81, -56
 1211              		.cfi_offset 82, -52
 1212              		.cfi_offset 83, -48
 1213              		.cfi_offset 84, -44
 1214              		.cfi_offset 85, -40
 1215 0008 ADF55B7D 		sub	sp, sp, #876
 1216              	.LCFI12:
 1217              		.cfi_def_cfa_offset 936
 1218 000c 0646     		mov	r6, r0
 1219 000e 0C46     		mov	r4, r1
 1220 0010 9146     		mov	r9, r2
 1221              	.LVL120:
 1222              	.LBB801:
 1223              	.LBB802:
 1224              	.LBB803:
 1225              	.LBB804:
 1226              	.LBB805:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 1227              		.loc 4 37 0
 1228 0012 0023     		movs	r3, #0
 1229              	.LVL121:
 1230 0014 D793     		str	r3, [sp, #860]	@ float
 1231              	.LVL122:
 1232              	.LBE805:
 1233              	.LBE804:
 1234              	.LBB806:
 1235              	.LBB807:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 1236              		.loc 4 38 0
 1237 0016 D893     		str	r3, [sp, #864]	@ float
 1238              	.LVL123:
 1239              	.LBE807:
 1240              	.LBE806:
 1241              	.LBB808:
 1242              	.LBB809:
 1243              		.loc 4 39 0
 1244 0018 D993     		str	r3, [sp, #868]	@ float
 1245              	.LVL124:
 1246              	.LBE809:
 1247              	.LBE808:
 1248              	.LBE803:
 1249              	.LBE802:
 1250              	.LBE801:
 1251              	.LBB810:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 32


  64:Core/Src/parts/sensors/position_sensor.cpp ****                 if (p_sensors_[i]->get_Name() == SensorName::XEncoder) {
 1252              		.loc 3 64 0
 1253 001a 4FF00008 		mov	r8, #0
 1254              	.LBE810:
  62:Core/Src/parts/sensors/position_sensor.cpp **** 
 1255              		.loc 3 62 0
 1256 001e C346     		mov	fp, r8
 1257 0020 C246     		mov	r10, r8
  61:Core/Src/parts/sensors/position_sensor.cpp ****         bool x_enc_used(false), y_enc_used(false);
 1258              		.loc 3 61 0
 1259 0022 4746     		mov	r7, r8
 1260 0024 4546     		mov	r5, r8
 1261 0026 0AE0     		b	.L75
 1262              	.LVL125:
 1263              	.L112:
 1264              	.LBB817:
  66:Core/Src/parts/sensors/position_sensor.cpp ****                         x_enc_used = true;
 1265              		.loc 3 66 0
 1266 0028 0368     		ldr	r3, [r0]
 1267 002a DB68     		ldr	r3, [r3, #12]
 1268 002c 9847     		blx	r3
 1269              	.LVL126:
 1270              	.LBB811:
 1271              	.LBB812:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 1272              		.loc 4 37 0
 1273 002e 8DEDD70A 		vstr.32	s0, [sp, #860]
 1274              	.LVL127:
 1275              	.LBE812:
 1276              	.LBE811:
  67:Core/Src/parts/sensors/position_sensor.cpp ****                 }
 1277              		.loc 3 67 0
 1278 0032 4FF0010A 		mov	r10, #1
 1279              	.LVL128:
 1280              	.L72:
  64:Core/Src/parts/sensors/position_sensor.cpp ****                 if (p_sensors_[i]->get_Name() == SensorName::XEncoder) {
 1281              		.loc 3 64 0 discriminator 2
 1282 0036 08F10108 		add	r8, r8, #1
 1283              	.LVL129:
 1284 003a 5FFA88F8 		uxtb	r8, r8
 1285              	.LVL130:
 1286              	.L75:
  64:Core/Src/parts/sensors/position_sensor.cpp ****                 if (p_sensors_[i]->get_Name() == SensorName::XEncoder) {
 1287              		.loc 3 64 0 is_stmt 0 discriminator 1
 1288 003e 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1289 0040 4345     		cmp	r3, r8
 1290 0042 2AD9     		bls	.L70
  65:Core/Src/parts/sensors/position_sensor.cpp ****                         free_wheel.setX(p_sensors_[i]->read());
 1291              		.loc 3 65 0 is_stmt 1
 1292 0044 54F82800 		ldr	r0, [r4, r8, lsl #2]
 1293              	.LVL131:
 1294              	.LBB813:
 1295              	.LBB814:
 1296              		.file 7 "Core/Inc/parts/sensors/sensor.h"
   1:Core/Inc/parts/sensors/sensor.h **** /*
   2:Core/Inc/parts/sensors/sensor.h ****  * sensor.h
   3:Core/Inc/parts/sensors/sensor.h ****  * 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 33


   4:Core/Inc/parts/sensors/sensor.h ****  * Created : 11/29/2018
   5:Core/Inc/parts/sensors/sensor.h ****  *  Author : n-is
   6:Core/Inc/parts/sensors/sensor.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/parts/sensors/sensor.h ****  */
   8:Core/Inc/parts/sensors/sensor.h **** 
   9:Core/Inc/parts/sensors/sensor.h **** #ifndef _SENSOR_H_
  10:Core/Inc/parts/sensors/sensor.h **** #define _SENSOR_H_
  11:Core/Inc/parts/sensors/sensor.h **** 
  12:Core/Inc/parts/sensors/sensor.h **** enum class SensorName
  13:Core/Inc/parts/sensors/sensor.h **** {
  14:Core/Inc/parts/sensors/sensor.h ****         IMU1,
  15:Core/Inc/parts/sensors/sensor.h ****         Compass1,
  16:Core/Inc/parts/sensors/sensor.h **** 
  17:Core/Inc/parts/sensors/sensor.h ****         XEncoder,
  18:Core/Inc/parts/sensors/sensor.h ****         YEncoder,
  19:Core/Inc/parts/sensors/sensor.h ****         XLidar,
  20:Core/Inc/parts/sensors/sensor.h ****         YLidar
  21:Core/Inc/parts/sensors/sensor.h **** };
  22:Core/Inc/parts/sensors/sensor.h **** 
  23:Core/Inc/parts/sensors/sensor.h **** /**
  24:Core/Inc/parts/sensors/sensor.h ****  * @class : Sensor
  25:Core/Inc/parts/sensors/sensor.h ****  * @param T : The type of value read from the sensor
  26:Core/Inc/parts/sensors/sensor.h ****  * @brief : An abstract class from which all the sensors must implement
  27:Core/Inc/parts/sensors/sensor.h ****  */
  28:Core/Inc/parts/sensors/sensor.h **** template <class T>
  29:Core/Inc/parts/sensors/sensor.h **** class Sensor
  30:Core/Inc/parts/sensors/sensor.h **** {
  31:Core/Inc/parts/sensors/sensor.h **** public:
  32:Core/Inc/parts/sensors/sensor.h ****         Sensor() = default;
  33:Core/Inc/parts/sensors/sensor.h ****         Sensor(Sensor &&) = default;
  34:Core/Inc/parts/sensors/sensor.h ****         Sensor(const Sensor &) = default;
  35:Core/Inc/parts/sensors/sensor.h ****         Sensor &operator=(Sensor &&) = default;
  36:Core/Inc/parts/sensors/sensor.h ****         Sensor &operator=(const Sensor &) = default;
  37:Core/Inc/parts/sensors/sensor.h ****         virtual ~Sensor() { }
  38:Core/Inc/parts/sensors/sensor.h **** 
  39:Core/Inc/parts/sensors/sensor.h ****         virtual int init() = 0;
  40:Core/Inc/parts/sensors/sensor.h ****         SensorName get_Name() { return name_; }
 1297              		.loc 7 40 0
 1298 0048 4368     		ldr	r3, [r0, #4]
 1299              	.LVL132:
 1300              	.LBE814:
 1301              	.LBE813:
  65:Core/Src/parts/sensors/position_sensor.cpp ****                         free_wheel.setX(p_sensors_[i]->read());
 1302              		.loc 3 65 0
 1303 004a 022B     		cmp	r3, #2
 1304 004c ECD0     		beq	.L112
  69:Core/Src/parts/sensors/position_sensor.cpp ****                         free_wheel.setY(p_sensors_[i]->read());
 1305              		.loc 3 69 0
 1306 004e 032B     		cmp	r3, #3
 1307 0050 0FD0     		beq	.L113
  73:Core/Src/parts/sensors/position_sensor.cpp ****                         lidar[0] = p_sensors_[i]->read() + gXLidar_Bias;
 1308              		.loc 3 73 0
 1309 0052 042B     		cmp	r3, #4
 1310 0054 15D0     		beq	.L114
  78:Core/Src/parts/sensors/position_sensor.cpp ****                         lidar[1] = p_sensors_[i]->read() + gYLidar_Bias;
 1311              		.loc 3 78 0
 1312 0056 052B     		cmp	r3, #5
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 34


 1313 0058 EDD1     		bne	.L72
  79:Core/Src/parts/sensors/position_sensor.cpp ****                         y_lidar_used = true;
 1314              		.loc 3 79 0
 1315 005a 0368     		ldr	r3, [r0]
 1316 005c DB68     		ldr	r3, [r3, #12]
 1317 005e 9847     		blx	r3
 1318              	.LVL133:
 1319 0060 BD4B     		ldr	r3, .L119+8
 1320 0062 D3ED007A 		vldr.32	s15, [r3]
 1321 0066 30EE270A 		vadd.f32	s0, s0, s15
 1322 006a 8DEDD60A 		vstr.32	s0, [sp, #856]
 1323              	.LVL134:
  80:Core/Src/parts/sensors/position_sensor.cpp ****                 }
 1324              		.loc 3 80 0
 1325 006e 0127     		movs	r7, #1
 1326 0070 E1E7     		b	.L72
 1327              	.LVL135:
 1328              	.L113:
  70:Core/Src/parts/sensors/position_sensor.cpp ****                         y_enc_used = true;
 1329              		.loc 3 70 0
 1330 0072 0368     		ldr	r3, [r0]
 1331 0074 DB68     		ldr	r3, [r3, #12]
 1332 0076 9847     		blx	r3
 1333              	.LVL136:
 1334              	.LBB815:
 1335              	.LBB816:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 1336              		.loc 4 38 0
 1337 0078 8DEDD80A 		vstr.32	s0, [sp, #864]
 1338              	.LVL137:
 1339              	.LBE816:
 1340              	.LBE815:
  71:Core/Src/parts/sensors/position_sensor.cpp ****                 }
 1341              		.loc 3 71 0
 1342 007c 4FF0010B 		mov	fp, #1
 1343 0080 D9E7     		b	.L72
 1344              	.LVL138:
 1345              	.L114:
  74:Core/Src/parts/sensors/position_sensor.cpp ****                         x_lidar_used = true;
 1346              		.loc 3 74 0
 1347 0082 0368     		ldr	r3, [r0]
 1348 0084 DB68     		ldr	r3, [r3, #12]
 1349 0086 9847     		blx	r3
 1350              	.LVL139:
 1351 0088 B44B     		ldr	r3, .L119+12
 1352 008a D3ED007A 		vldr.32	s15, [r3]
 1353 008e 30EE270A 		vadd.f32	s0, s0, s15
 1354 0092 8DEDD50A 		vstr.32	s0, [sp, #852]
 1355              	.LVL140:
  75:Core/Src/parts/sensors/position_sensor.cpp ****                         // printf("%ld\n", (int32_t)(lidar[0]));
 1356              		.loc 3 75 0
 1357 0096 0125     		movs	r5, #1
 1358 0098 CDE7     		b	.L72
 1359              	.LVL141:
 1360              	.L70:
 1361              	.LBE817:
  83:Core/Src/parts/sensors/position_sensor.cpp ****                 error(Error::DEVICE_ERROR);
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 35


 1362              		.loc 3 83 0
 1363 009a 1DB9     		cbnz	r5, .L76
  83:Core/Src/parts/sensors/position_sensor.cpp ****                 error(Error::DEVICE_ERROR);
 1364              		.loc 3 83 0 is_stmt 0 discriminator 1
 1365 009c BAF1000F 		cmp	r10, #0
 1366 00a0 00F0A580 		beq	.L115
 1367              	.L76:
  87:Core/Src/parts/sensors/position_sensor.cpp ****                 error(Error::DEVICE_ERROR);
 1368              		.loc 3 87 0 is_stmt 1
 1369 00a4 1FB9     		cbnz	r7, .L77
  87:Core/Src/parts/sensors/position_sensor.cpp ****                 error(Error::DEVICE_ERROR);
 1370              		.loc 3 87 0 is_stmt 0 discriminator 1
 1371 00a6 BBF1000F 		cmp	fp, #0
 1372 00aa 00F0A780 		beq	.L116
 1373              	.L77:
  93:Core/Src/parts/sensors/position_sensor.cpp ****                 lidar[0] = gXLidarAlpha35.smooth(lidar[0]);
 1374              		.loc 3 93 0 is_stmt 1
 1375 00ae 002D     		cmp	r5, #0
 1376 00b0 00F0AB80 		beq	.L78
  94:Core/Src/parts/sensors/position_sensor.cpp ****         }
 1377              		.loc 3 94 0
 1378 00b4 D5A9     		add	r1, sp, #852
 1379 00b6 AA48     		ldr	r0, .L119+16
 1380 00b8 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 1381              	.LVL142:
 1382 00bc 8DEDD50A 		vstr.32	s0, [sp, #852]
 1383              	.L79:
 105:Core/Src/parts/sensors/position_sensor.cpp ****                 process_LidarData(lidar, sv);
 1384              		.loc 3 105 0
 1385 00c0 05B9     		cbnz	r5, .L80
 105:Core/Src/parts/sensors/position_sensor.cpp ****                 process_LidarData(lidar, sv);
 1386              		.loc 3 105 0 is_stmt 0 discriminator 1
 1387 00c2 27B1     		cbz	r7, .L81
 1388              	.L80:
 106:Core/Src/parts/sensors/position_sensor.cpp ****         }
 1389              		.loc 3 106 0 is_stmt 1
 1390 00c4 EA9A     		ldr	r2, [sp, #936]
 1391 00c6 D5A9     		add	r1, sp, #852
 1392 00c8 2046     		mov	r0, r4
 1393 00ca FFF7FEFF 		bl	_ZN14PositionSensor17process_LidarDataEPfPK10State_Vars
 1394              	.LVL143:
 1395              	.L81:
 114:Core/Src/parts/sensors/position_sensor.cpp ****         float pitch = ori.getY() / 57.3;
 1396              		.loc 3 114 0
 1397 00ce D9F80000 		ldr	r0, [r9]	@ float
 1398 00d2 FFF7FEFF 		bl	__aeabi_f2d
 1399              	.LVL144:
 1400 00d6 9EA3     		adr	r3, .L119
 1401 00d8 D3E90023 		ldrd	r2, [r3]
 1402 00dc FFF7FEFF 		bl	__aeabi_ddiv
 1403              	.LVL145:
 1404 00e0 FFF7FEFF 		bl	__aeabi_d2f
 1405              	.LVL146:
 1406 00e4 08EE900A 		vmov	s17, r0
 1407              	.LVL147:
 115:Core/Src/parts/sensors/position_sensor.cpp ****         float yaw = ori.getZ() / 57.3;
 1408              		.loc 3 115 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 36


 1409 00e8 D9F80400 		ldr	r0, [r9, #4]	@ float
 1410              	.LVL148:
 1411 00ec FFF7FEFF 		bl	__aeabi_f2d
 1412              	.LVL149:
 1413 00f0 97A3     		adr	r3, .L119
 1414 00f2 D3E90023 		ldrd	r2, [r3]
 1415 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 1416              	.LVL150:
 1417 00fa FFF7FEFF 		bl	__aeabi_d2f
 1418              	.LVL151:
 1419 00fe 08EE100A 		vmov	s16, r0
 1420              	.LVL152:
 116:Core/Src/parts/sensors/position_sensor.cpp **** 
 1421              		.loc 3 116 0
 1422 0102 D9F80800 		ldr	r0, [r9, #8]	@ float
 1423              	.LVL153:
 1424 0106 FFF7FEFF 		bl	__aeabi_f2d
 1425              	.LVL154:
 1426 010a 91A3     		adr	r3, .L119
 1427 010c D3E90023 		ldrd	r2, [r3]
 1428 0110 FFF7FEFF 		bl	__aeabi_ddiv
 1429              	.LVL155:
 1430 0114 FFF7FEFF 		bl	__aeabi_d2f
 1431              	.LVL156:
 1432 0118 0AEE900A 		vmov	s21, r0
 1433              	.LVL157:
 1434              	.LBB818:
 1435              	.LBB819:
 1436              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 37


  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 38


  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 39


 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 40


 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 244:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(long double __x)
 246:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 248:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 249:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 250:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 253:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 256:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::floor;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 41


 257:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 258:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   floor(float __x)
 261:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 263:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   floor(long double __x)
 265:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 267:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 268:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 269:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 272:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 275:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fmod;
 276:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 277:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 282:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 286:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 287:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 292:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 295:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 296:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::frexp;
 297:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 298:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 300:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 303:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 304:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 307:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 308:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 309:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 312:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 42


 314:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 315:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ldexp;
 316:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 317:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 322:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 326:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 327:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 328:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 331:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 334:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::log;
 335:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 336:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log(float __x)
 339:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 341:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log(long double __x)
 343:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 345:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 346:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 347:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 350:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     log(_Tp __x)
 351:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 353:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::log10;
 354:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 355:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log10(float __x)
 358:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 360:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log10(long double __x)
 362:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 364:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 365:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 366:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 369:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_log10(__x); }
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 43


 371:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 372:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::modf;
 373:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 374:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 376:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 379:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 380:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 383:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 384:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::pow;
 385:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 386:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 391:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 395:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline double
 399:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 402:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 403:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 406:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 407:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 410:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 411:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 412:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 417:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 420:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 421:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::sin;
 422:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 423:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   sin(float __x)
 426:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_sinf(__x); }
 1437              		.loc 8 426 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 44


 1438 011c B0EE680A 		vmov.f32	s0, s17
 1439 0120 FFF7FEFF 		bl	sinf
 1440              	.LVL158:
 1441 0124 B0EE409A 		vmov.f32	s18, s0
 1442              	.LVL159:
 1443              	.LBE819:
 1444              	.LBE818:
 1445              	.LBB820:
 1446              	.LBB821:
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 1447              		.loc 8 185 0
 1448 0128 B0EE680A 		vmov.f32	s0, s17
 1449 012c FFF7FEFF 		bl	cosf
 1450              	.LVL160:
 1451 0130 F0EE409A 		vmov.f32	s19, s0
 1452              	.LVL161:
 1453              	.LBE821:
 1454              	.LBE820:
 1455              	.LBB822:
 1456              	.LBB823:
 1457              		.loc 8 426 0
 1458 0134 B0EE480A 		vmov.f32	s0, s16
 1459 0138 FFF7FEFF 		bl	sinf
 1460              	.LVL162:
 1461 013c F0EE408A 		vmov.f32	s17, s0
 1462              	.LVL163:
 1463              	.LBE823:
 1464              	.LBE822:
 1465              	.LBB824:
 1466              	.LBB825:
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 1467              		.loc 8 185 0
 1468 0140 B0EE480A 		vmov.f32	s0, s16
 1469 0144 FFF7FEFF 		bl	cosf
 1470              	.LVL164:
 1471 0148 B0EE40AA 		vmov.f32	s20, s0
 1472              	.LVL165:
 1473              	.LBE825:
 1474              	.LBE824:
 1475              	.LBB826:
 1476              	.LBB827:
 1477              		.loc 8 426 0
 1478 014c B0EE6A0A 		vmov.f32	s0, s21
 1479 0150 FFF7FEFF 		bl	sinf
 1480              	.LVL166:
 1481 0154 B0EE408A 		vmov.f32	s16, s0
 1482              	.LVL167:
 1483              	.LBE827:
 1484              	.LBE826:
 1485              	.LBB828:
 1486              	.LBB829:
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 1487              		.loc 8 185 0
 1488 0158 B0EE6A0A 		vmov.f32	s0, s21
 1489 015c FFF7FEFF 		bl	cosf
 1490              	.LVL168:
 1491              	.LBE829:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 45


 1492              	.LBE828:
 127:Core/Src/parts/sensors/position_sensor.cpp ****                           {-c_y*s_r + s_y*s_p*c_r,  c_y*c_r + s_y*s_p*s_r,  s_y*c_p},
 1493              		.loc 3 127 0
 1494 0160 6AEE297A 		vmul.f32	s15, s20, s19
 129:Core/Src/parts/sensors/position_sensor.cpp **** 
 1495              		.loc 3 129 0
 1496 0164 CDEDCC7A 		vstr.32	s15, [sp, #816]
 127:Core/Src/parts/sensors/position_sensor.cpp ****                           {-c_y*s_r + s_y*s_p*c_r,  c_y*c_r + s_y*s_p*s_r,  s_y*c_p},
 1497              		.loc 3 127 0
 1498 0168 6AEE097A 		vmul.f32	s15, s20, s18
 129:Core/Src/parts/sensors/position_sensor.cpp **** 
 1499              		.loc 3 129 0
 1500 016c CDEDCD7A 		vstr.32	s15, [sp, #820]
 127:Core/Src/parts/sensors/position_sensor.cpp ****                           {-c_y*s_r + s_y*s_p*c_r,  c_y*c_r + s_y*s_p*s_r,  s_y*c_p},
 1501              		.loc 3 127 0
 1502 0170 F1EE687A 		vneg.f32	s15, s17
 129:Core/Src/parts/sensors/position_sensor.cpp **** 
 1503              		.loc 3 129 0
 1504 0174 CDEDCE7A 		vstr.32	s15, [sp, #824]
 128:Core/Src/parts/sensors/position_sensor.cpp ****                           { s_y*s_r + c_y*s_p*c_r, -s_y*c_r + c_y*s_p*s_r,  c_y*c_p}, };
 1505              		.loc 3 128 0
 1506 0178 20EE497A 		vnmul.f32	s14, s0, s18
 1507 017c 68EE287A 		vmul.f32	s15, s16, s17
 1508 0180 67EEA96A 		vmul.f32	s13, s15, s19
 1509 0184 37EE267A 		vadd.f32	s14, s14, s13
 129:Core/Src/parts/sensors/position_sensor.cpp **** 
 1510              		.loc 3 129 0
 1511 0188 8DEDCF7A 		vstr.32	s14, [sp, #828]
 128:Core/Src/parts/sensors/position_sensor.cpp ****                           { s_y*s_r + c_y*s_p*c_r, -s_y*c_r + c_y*s_p*s_r,  c_y*c_p}, };
 1512              		.loc 3 128 0
 1513 018c 20EE297A 		vmul.f32	s14, s0, s19
 1514 0190 67EE897A 		vmul.f32	s15, s15, s18
 1515 0194 77EE277A 		vadd.f32	s15, s14, s15
 129:Core/Src/parts/sensors/position_sensor.cpp **** 
 1516              		.loc 3 129 0
 1517 0198 CDEDD07A 		vstr.32	s15, [sp, #832]
 128:Core/Src/parts/sensors/position_sensor.cpp ****                           { s_y*s_r + c_y*s_p*c_r, -s_y*c_r + c_y*s_p*s_r,  c_y*c_p}, };
 1518              		.loc 3 128 0
 1519 019c 68EE0A7A 		vmul.f32	s15, s16, s20
 129:Core/Src/parts/sensors/position_sensor.cpp **** 
 1520              		.loc 3 129 0
 1521 01a0 CDEDD17A 		vstr.32	s15, [sp, #836]
 1522 01a4 68EE097A 		vmul.f32	s15, s16, s18
 1523 01a8 60EE288A 		vmul.f32	s17, s0, s17
 1524 01ac 28EEA97A 		vmul.f32	s14, s17, s19
 1525 01b0 77EE877A 		vadd.f32	s15, s15, s14
 1526 01b4 CDEDD27A 		vstr.32	s15, [sp, #840]
 1527 01b8 28EE698A 		vnmul.f32	s16, s16, s19
 1528 01bc 68EE898A 		vmul.f32	s17, s17, s18
 1529 01c0 38EE288A 		vadd.f32	s16, s16, s17
 1530 01c4 8DEDD38A 		vstr.32	s16, [sp, #844]
 1531 01c8 20EE0A0A 		vmul.f32	s0, s0, s20
 1532 01cc 8DEDD40A 		vstr.32	s0, [sp, #848]
 1533              	.LVL169:
 1534              	.LBB830:
 1535              	.LBB831:
 1536              	.LBB832:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 46


  24:Core/Inc/utils\math/mat.h ****                 fill(mat);
 1537              		.loc 6 24 0
 1538 01d0 0322     		movs	r2, #3
 1539 01d2 1146     		mov	r1, r2
 1540 01d4 BBA8     		add	r0, sp, #748
 1541              	.LVL170:
 1542 01d6 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1543              	.LVL171:
 1544              	.LBB833:
 1545              	.LBB834:
  49:Core/Inc/utils\math/mat.h **** 
  50:Core/Inc/utils\math/mat.h ****                 return *this;
  51:Core/Inc/utils\math/mat.h ****         }
  52:Core/Inc/utils\math/mat.h **** 
  53:Core/Inc/utils\math/mat.h ****         Mat &operator+=(const Mat &rhs);
  54:Core/Inc/utils\math/mat.h ****         Mat &operator-=(const Mat &rhs);
  55:Core/Inc/utils\math/mat.h ****         Mat &operator*=(const Mat &rhs);
  56:Core/Inc/utils\math/mat.h ****         Mat &operator*=(const Vec3<float> &rhs);
  57:Core/Inc/utils\math/mat.h **** 
  58:Core/Inc/utils\math/mat.h ****         friend Mat operator+(Mat lhs, const Mat &rhs) {
  59:Core/Inc/utils\math/mat.h ****                 lhs += rhs;
  60:Core/Inc/utils\math/mat.h ****                 return lhs;
  61:Core/Inc/utils\math/mat.h ****         }
  62:Core/Inc/utils\math/mat.h **** 
  63:Core/Inc/utils\math/mat.h ****         friend Mat operator-(Mat lhs, const Mat &rhs) {
  64:Core/Inc/utils\math/mat.h ****                 lhs -= rhs;
  65:Core/Inc/utils\math/mat.h ****                 return lhs;
  66:Core/Inc/utils\math/mat.h ****         }
  67:Core/Inc/utils\math/mat.h **** 
  68:Core/Inc/utils\math/mat.h ****         friend Mat operator*(Mat lhs, const Mat &rhs) {
  69:Core/Inc/utils\math/mat.h ****                 lhs *= rhs;
  70:Core/Inc/utils\math/mat.h ****                 return lhs;
  71:Core/Inc/utils\math/mat.h ****         }
  72:Core/Inc/utils\math/mat.h **** 
  73:Core/Inc/utils\math/mat.h ****         friend Mat operator*(Mat lhs, const Vec3<float> &rhs) {
  74:Core/Inc/utils\math/mat.h ****                 lhs *= rhs;
  75:Core/Inc/utils\math/mat.h ****                 return lhs;
  76:Core/Inc/utils\math/mat.h ****         }
  77:Core/Inc/utils\math/mat.h **** 
  78:Core/Inc/utils\math/mat.h ****         Mat mult(const Mat &m);
  79:Core/Inc/utils\math/mat.h ****         Mat mult_EW(float num);
  80:Core/Inc/utils\math/mat.h ****         Mat transpose();
  81:Core/Inc/utils\math/mat.h **** 
  82:Core/Inc/utils\math/mat.h ****         // Just an alias for getting transpose of a matrix
  83:Core/Inc/utils\math/mat.h ****         inline Mat trans() { return transpose(); }
  84:Core/Inc/utils\math/mat.h **** 
  85:Core/Inc/utils\math/mat.h ****         void fill(float num) {
  86:Core/Inc/utils\math/mat.h ****                 for (uint8_t i = 0; i < rows_; ++i) {
  87:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
  88:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
  89:Core/Inc/utils\math/mat.h ****                         }
  90:Core/Inc/utils\math/mat.h ****                 }
  91:Core/Inc/utils\math/mat.h ****         }
  92:Core/Inc/utils\math/mat.h **** 
  93:Core/Inc/utils\math/mat.h ****         template <size_t M, size_t N>
  94:Core/Inc/utils\math/mat.h ****         void fill(const float (&mat)[M][N]) {
  95:Core/Inc/utils\math/mat.h ****                 if (M != rows_ && N != cols_) {
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 47


 1546              		.loc 6 95 0
 1547 01da 9DF82C33 		ldrb	r3, [sp, #812]	@ zero_extendqisi2
 1548 01de 032B     		cmp	r3, #3
 1549 01e0 03D0     		beq	.L82
 1550 01e2 9DF82D33 		ldrb	r3, [sp, #813]	@ zero_extendqisi2
 1551 01e6 032B     		cmp	r3, #3
 1552 01e8 13D1     		bne	.L117
 1553              	.L82:
 1554              	.LBE834:
 1555              	.LBE833:
 1556              	.LBE832:
 1557              	.LBE831:
 1558              	.LBE830:
 1559              	.LBB841:
  80:Core/Src/parts/sensors/position_sensor.cpp ****                 }
 1560              		.loc 3 80 0
 1561 01ea 0021     		movs	r1, #0
 1562 01ec 18E0     		b	.L86
 1563              	.LVL172:
 1564              	.L115:
 1565              	.LBE841:
  84:Core/Src/parts/sensors/position_sensor.cpp ****                 printf("No Data Available on x-direction!!\n");
 1566              		.loc 3 84 0
 1567 01ee 0220     		movs	r0, #2
 1568 01f0 FFF7FEFF 		bl	_Z5error5Error
 1569              	.LVL173:
  85:Core/Src/parts/sensors/position_sensor.cpp ****         }
 1570              		.loc 3 85 0
 1571 01f4 5B48     		ldr	r0, .L119+20
 1572 01f6 FFF7FEFF 		bl	puts
 1573              	.LVL174:
 1574 01fa 53E7     		b	.L76
 1575              	.L116:
  88:Core/Src/parts/sensors/position_sensor.cpp ****                 printf("No Data Available on y-direction!!\n");
 1576              		.loc 3 88 0
 1577 01fc 0220     		movs	r0, #2
 1578 01fe FFF7FEFF 		bl	_Z5error5Error
 1579              	.LVL175:
  89:Core/Src/parts/sensors/position_sensor.cpp ****         }
 1580              		.loc 3 89 0
 1581 0202 5948     		ldr	r0, .L119+24
 1582 0204 FFF7FEFF 		bl	puts
 1583              	.LVL176:
 1584 0208 51E7     		b	.L77
 1585              	.L78:
  97:Core/Src/parts/sensors/position_sensor.cpp ****         }
 1586              		.loc 3 97 0
 1587 020a 5548     		ldr	r0, .L119+16
 1588 020c FFF7FEFF 		bl	_ZN10Exp_Smooth5clearEv
 1589              	.LVL177:
 1590 0210 56E7     		b	.L79
 1591              	.LVL178:
 1592              	.L117:
 1593              	.LBB842:
 1594              	.LBB840:
 1595              	.LBB839:
 1596              	.LBB838:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 48


 1597              	.LBB837:
  96:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 1598              		.loc 6 96 0
 1599 0212 6021     		movs	r1, #96
 1600 0214 5548     		ldr	r0, .L119+28
 1601 0216 FFF7FEFF 		bl	_Error_Handler
 1602              	.LVL179:
 1603 021a E6E7     		b	.L82
 1604              	.LVL180:
 1605              	.L84:
 1606              	.LBB835:
  97:Core/Inc/utils\math/mat.h ****                 }
  98:Core/Inc/utils\math/mat.h ****                 for (uint8_t i = 0; i < M; ++i) {
 1607              		.loc 6 98 0
 1608 021c 0131     		adds	r1, r1, #1
 1609              	.LVL181:
 1610 021e C9B2     		uxtb	r1, r1
 1611              	.LVL182:
 1612              	.L86:
 1613 0220 0229     		cmp	r1, #2
 1614 0222 15D8     		bhi	.L83
 1615              	.LBB836:
  99:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < N; ++j) {
 1616              		.loc 6 99 0
 1617 0224 0023     		movs	r3, #0
 1618              	.L85:
 1619              	.LVL183:
 1620 0226 022B     		cmp	r3, #2
 1621 0228 F8D8     		bhi	.L84
 100:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = mat[i][j];
 1622              		.loc 6 100 0
 1623 022a 01EB4102 		add	r2, r1, r1, lsl #1
 1624 022e 1A44     		add	r2, r2, r3
 1625 0230 DAA8     		add	r0, sp, #872
 1626 0232 00EB8202 		add	r2, r0, r2, lsl #2
 1627 0236 52F8380C 		ldr	r0, [r2, #-56]	@ float
 1628 023a 03EB8102 		add	r2, r3, r1, lsl #2
 1629 023e 0DF55A7C 		add	ip, sp, #872
 1630 0242 0CEB8202 		add	r2, ip, r2, lsl #2
 1631 0246 42F87C0C 		str	r0, [r2, #-124]	@ float
  99:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < N; ++j) {
 1632              		.loc 6 99 0
 1633 024a 0133     		adds	r3, r3, #1
 1634              	.LVL184:
 1635 024c DBB2     		uxtb	r3, r3
 1636              	.LVL185:
 1637 024e EAE7     		b	.L85
 1638              	.LVL186:
 1639              	.L83:
 1640              	.LBE836:
 1641              	.LBE835:
 1642              	.LBE837:
 1643              	.LBE838:
 1644              	.LBE839:
 1645              	.LBE840:
 1646              	.LBE842:
 1647              	.LBB843:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 49


 1648              	.LBB844:
  83:Core/Inc/utils\math/mat.h **** 
 1649              		.loc 6 83 0
 1650 0250 BBA9     		add	r1, sp, #748
 1651              	.LVL187:
 1652 0252 99A8     		add	r0, sp, #612
 1653 0254 FFF7FEFF 		bl	_ZN3Mat9transposeEv
 1654              	.LVL188:
 1655              	.LBE844:
 1656              	.LBE843:
 1657              	.LBB845:
 1658              	.LBB846:
  74:Core/Inc/utils\math/mat.h ****                 return lhs;
 1659              		.loc 6 74 0
 1660 0258 D7A9     		add	r1, sp, #860
 1661              	.LVL189:
 1662 025a 99A8     		add	r0, sp, #612
 1663              	.LVL190:
 1664 025c FFF7FEFF 		bl	_ZN3MatmLERK4Vec3IfE
 1665              	.LVL191:
  75:Core/Inc/utils\math/mat.h ****         }
 1666              		.loc 6 75 0
 1667 0260 4422     		movs	r2, #68
 1668 0262 99A9     		add	r1, sp, #612
 1669              	.LVL192:
 1670 0264 AAA8     		add	r0, sp, #680
 1671 0266 FFF7FEFF 		bl	memcpy
 1672              	.LVL193:
 1673              	.LBE846:
 1674              	.LBE845:
 1675              	.LBB847:
 1676              	.LBB848:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 1677              		.loc 6 37 0
 1678 026a 9DF8E882 		ldrb	r8, [sp, #744]	@ zero_extendqisi2
 1679              	.LVL194:
 1680 026e B8F1000F 		cmp	r8, #0
 1681 0272 02D0     		beq	.L87
 1682 0274 9DF8E932 		ldrb	r3, [sp, #745]	@ zero_extendqisi2
 1683 0278 1BB9     		cbnz	r3, .L88
 1684              	.L87:
  38:Core/Inc/utils\math/mat.h ****                 }
 1685              		.loc 6 38 0
 1686 027a 2621     		movs	r1, #38
 1687 027c 3B48     		ldr	r0, .L119+28
 1688 027e FFF7FEFF 		bl	_Error_Handler
 1689              	.LVL195:
 1690              	.L88:
 1691              	.LBE848:
 1692              	.LBE847:
 135:Core/Src/parts/sensors/position_sensor.cpp **** 
 1693              		.loc 3 135 0
 1694 0282 DDF8A892 		ldr	r9, [sp, #680]	@ float
 1695              	.LVL196:
 1696              	.LBB849:
 1697              	.LBB850:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 50


 1698              		.loc 6 37 0
 1699 0286 B8F1010F 		cmp	r8, #1
 1700 028a 02D9     		bls	.L89
 1701 028c 9DF8E932 		ldrb	r3, [sp, #745]	@ zero_extendqisi2
 1702 0290 1BB9     		cbnz	r3, .L90
 1703              	.L89:
  38:Core/Inc/utils\math/mat.h ****                 }
 1704              		.loc 6 38 0
 1705 0292 2621     		movs	r1, #38
 1706 0294 3548     		ldr	r0, .L119+28
 1707 0296 FFF7FEFF 		bl	_Error_Handler
 1708              	.LVL197:
 1709              	.L90:
 1710              	.LBE850:
 1711              	.LBE849:
 1712              	.LBB851:
 1713              	.LBB852:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 1714              		.loc 6 37 0
 1715 029a B8F1020F 		cmp	r8, #2
 1716 029e 02D9     		bls	.L91
 1717 02a0 9DF8E932 		ldrb	r3, [sp, #745]	@ zero_extendqisi2
 1718 02a4 1BB9     		cbnz	r3, .L92
 1719              	.L91:
  38:Core/Inc/utils\math/mat.h ****                 }
 1720              		.loc 6 38 0
 1721 02a6 2621     		movs	r1, #38
 1722 02a8 3048     		ldr	r0, .L119+28
 1723 02aa FFF7FEFF 		bl	_Error_Handler
 1724              	.LVL198:
 1725              	.L92:
 1726              	.LBE852:
 1727              	.LBE851:
 1728              	.LBB853:
 1729              	.LBB854:
  34:Core/Inc/utils\math/vec3.h ****         T getY() const { return y_; }
 1730              		.loc 4 34 0
 1731 02ae DDEDD77A 		vldr.32	s15, [sp, #860]
 1732              	.LVL199:
 1733              	.LBE854:
 1734              	.LBE853:
 1735              	.LBB855:
 1736              	.LBB856:
  35:Core/Inc/utils\math/vec3.h ****         T getZ() const { return z_; }
 1737              		.loc 4 35 0
 1738 02b2 9DEDD88A 		vldr.32	s16, [sp, #864]
 1739              	.LVL200:
 1740              	.LBE856:
 1741              	.LBE855:
 147:Core/Src/parts/sensors/position_sensor.cpp ****                 x = gLastPosition.getX() + ex;
 1742              		.loc 3 147 0
 1743 02b6 1DBB     		cbnz	r5, .L93
 1744              	.LVL201:
 1745              	.LBB857:
 1746              	.LBB858:
  34:Core/Inc/utils\math/vec3.h ****         T getY() const { return y_; }
 1747              		.loc 4 34 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 51


 1748 02b8 2D4B     		ldr	r3, .L119+32
 1749 02ba 93ED007A 		vldr.32	s14, [r3]
 1750              	.LVL202:
 1751              	.LBE858:
 1752              	.LBE857:
 148:Core/Src/parts/sensors/position_sensor.cpp ****                 xlidar_enc_fuser_.clear();
 1753              		.loc 3 148 0
 1754 02be 77EE877A 		vadd.f32	s15, s15, s14
 1755              	.LVL203:
 1756              	.LBB859:
 1757              	.LBB860:
  43:Core/Inc/utils\filter/kalman.h ****         }
  44:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter(Kalman_Filter &&) = default;
  45:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter(const Kalman_Filter &) = default;
  46:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter &operator=(Kalman_Filter &&) = default;
  47:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter &operator=(const Kalman_Filter &) = default;
  48:Core/Inc/utils\filter/kalman.h ****         ~Kalman_Filter() { }
  49:Core/Inc/utils\filter/kalman.h ****         
  50:Core/Inc/utils\filter/kalman.h ****         float filter(float measured, float control_input, uint32_t dt_millis) {
  51:Core/Inc/utils\filter/kalman.h ****                 // float dt = (float)dt_millis / 1000.0;
  52:Core/Inc/utils\filter/kalman.h ****                 // For first element of vector
  53:Core/Inc/utils\filter/kalman.h ****                 if (is_first_) {
  54:Core/Inc/utils\filter/kalman.h ****                         // Initiaize all the variables at the first call
  55:Core/Inc/utils\filter/kalman.h ****                         kv_init_(dt_millis);
  56:Core/Inc/utils\filter/kalman.h **** 
  57:Core/Inc/utils\filter/kalman.h ****                         is_first_ = false;
  58:Core/Inc/utils\filter/kalman.h ****                         x_.at(0,0) = measured;
  59:Core/Inc/utils\filter/kalman.h ****                         // u_.at(0,0) = control_input;
  60:Core/Inc/utils\filter/kalman.h ****                 }
  61:Core/Inc/utils\filter/kalman.h ****                 else {
  62:Core/Inc/utils\filter/kalman.h ****                         u_.at(0,0) = control_input;
  63:Core/Inc/utils\filter/kalman.h ****                         z_.at(0,0) = measured;
  64:Core/Inc/utils\filter/kalman.h **** 
  65:Core/Inc/utils\filter/kalman.h ****                         // Predict
  66:Core/Inc/utils\filter/kalman.h ****                         x_ = (kv_->F_)*(x_) + (kv_->B_)*(u_);
  67:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
  68:Core/Inc/utils\filter/kalman.h **** 
  69:Core/Inc/utils\filter/kalman.h ****                         // Update
  70:Core/Inc/utils\filter/kalman.h ****                         K_ = kv_->P_*(kv_->H_.trans())*(((kv_->H_*(kv_->P_)*(kv_->H_.trans())) + kv
  71:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
  72:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
  73:Core/Inc/utils\filter/kalman.h ****                 }
  74:Core/Inc/utils\filter/kalman.h **** 
  75:Core/Inc/utils\filter/kalman.h ****                 return x_.at(0,0);
  76:Core/Inc/utils\filter/kalman.h ****         }
  77:Core/Inc/utils\filter/kalman.h **** 
  78:Core/Inc/utils\filter/kalman.h ****         void clear() {
  79:Core/Inc/utils\filter/kalman.h ****                 is_first_ = true;
 1758              		.loc 5 79 0
 1759 02c2 0123     		movs	r3, #1
 1760 02c4 84F83431 		strb	r3, [r4, #308]
 1761              	.LVL204:
 1762              	.L94:
 1763              	.LBE860:
 1764              	.LBE859:
 156:Core/Src/parts/sensors/position_sensor.cpp ****                 y = gLastPosition.getY() + ey;
 1765              		.loc 3 156 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 52


 1766 02c8 002F     		cmp	r7, #0
 1767 02ca 40F09C81 		bne	.L110
 1768              	.LVL205:
 1769              	.LBB861:
 1770              	.LBB862:
  35:Core/Inc/utils\math/vec3.h ****         T getZ() const { return z_; }
 1771              		.loc 4 35 0
 1772 02ce 284B     		ldr	r3, .L119+32
 1773 02d0 93ED017A 		vldr.32	s14, [r3, #4]
 1774              	.LVL206:
 1775              	.LBE862:
 1776              	.LBE861:
 157:Core/Src/parts/sensors/position_sensor.cpp ****                 // ylidar_enc_fuser_.clear();
 1777              		.loc 3 157 0
 1778 02d4 38EE077A 		vadd.f32	s14, s16, s14
 1779              	.LVL207:
 1780              	.L109:
 1781              	.LBB863:
 1782              	.LBB864:
 1783              	.LBB865:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 1784              		.loc 4 37 0
 1785 02d8 254B     		ldr	r3, .L119+32
 1786 02da C3ED007A 		vstr.32	s15, [r3]
 1787              	.LVL208:
 1788              	.LBE865:
 1789              	.LBE864:
 1790              	.LBB866:
 1791              	.LBB867:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 1792              		.loc 4 38 0
 1793 02de 83ED017A 		vstr.32	s14, [r3, #4]
 1794              	.LVL209:
 1795              	.LBE867:
 1796              	.LBE866:
 1797              	.LBB868:
 1798              	.LBB869:
 1799              		.loc 4 39 0
 1800 02e2 0022     		movs	r2, #0
 1801 02e4 9A60     		str	r2, [r3, #8]	@ float
 1802              	.LVL210:
 1803              	.LBE869:
 1804              	.LBE868:
 1805              	.LBE863:
 1806              	.LBB870:
 1807              	.LBB871:
  40:Core/Inc/utils\math/vec3.h **** 
  41:Core/Inc/utils\math/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils\math/vec3.h ****                 setX(x);
  43:Core/Inc/utils\math/vec3.h ****                 setY(y);
  44:Core/Inc/utils\math/vec3.h ****                 setZ(z);
  45:Core/Inc/utils\math/vec3.h ****         }
  46:Core/Inc/utils\math/vec3.h **** 
  47:Core/Inc/utils\math/vec3.h **** 
  48:Core/Inc/utils\math/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils\math/vec3.h ****                 temp.x_ *= num;
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 53


  51:Core/Inc/utils\math/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils\math/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils\math/vec3.h **** 
  54:Core/Inc/utils\math/vec3.h ****                 return temp;
  55:Core/Inc/utils\math/vec3.h ****         }
  56:Core/Inc/utils\math/vec3.h **** 
  57:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  58:Core/Inc/utils\math/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils\math/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils\math/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils\math/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils\math/vec3.h **** 
  64:Core/Inc/utils\math/vec3.h ****                 return temp;
  65:Core/Inc/utils\math/vec3.h ****         }
  66:Core/Inc/utils\math/vec3.h **** 
  67:Core/Inc/utils\math/vec3.h **** 
  68:Core/Inc/utils\math/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils\math/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils\math/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils\math/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils\math/vec3.h **** 
  74:Core/Inc/utils\math/vec3.h ****                 return temp;
  75:Core/Inc/utils\math/vec3.h ****         }
  76:Core/Inc/utils\math/vec3.h **** 
  77:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  78:Core/Inc/utils\math/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils\math/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils\math/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils\math/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils\math/vec3.h **** 
  84:Core/Inc/utils\math/vec3.h ****                 return temp;
  85:Core/Inc/utils\math/vec3.h ****         }
  86:Core/Inc/utils\math/vec3.h **** 
  87:Core/Inc/utils\math/vec3.h **** 
  88:Core/Inc/utils\math/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils\math/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils\math/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils\math/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils\math/vec3.h **** 
  94:Core/Inc/utils\math/vec3.h ****                 return temp;
  95:Core/Inc/utils\math/vec3.h ****         }
  96:Core/Inc/utils\math/vec3.h **** 
  97:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  98:Core/Inc/utils\math/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils\math/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils\math/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils\math/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils\math/vec3.h **** 
 104:Core/Inc/utils\math/vec3.h ****                 return temp;
 105:Core/Inc/utils\math/vec3.h ****         }
 106:Core/Inc/utils\math/vec3.h **** 
 107:Core/Inc/utils\math/vec3.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 54


 108:Core/Inc/utils\math/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils\math/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils\math/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils\math/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils\math/vec3.h **** 
 114:Core/Inc/utils\math/vec3.h ****                 return temp;
 115:Core/Inc/utils\math/vec3.h ****         }
 116:Core/Inc/utils\math/vec3.h **** 
 117:Core/Inc/utils\math/vec3.h ****         template <typename T1>
 118:Core/Inc/utils\math/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils\math/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils\math/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils\math/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils\math/vec3.h **** 
 124:Core/Inc/utils\math/vec3.h ****                 return temp;
 125:Core/Inc/utils\math/vec3.h ****         }
 126:Core/Inc/utils\math/vec3.h **** 
 127:Core/Inc/utils\math/vec3.h ****         
 128:Core/Inc/utils\math/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils\math/vec3.h ****                 x_ = v.x_;
 1808              		.loc 4 129 0
 1809 02e6 C6ED007A 		vstr.32	s15, [r6]
 130:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 1810              		.loc 4 130 0
 1811 02ea 5A68     		ldr	r2, [r3, #4]	@ float
 1812 02ec 7260     		str	r2, [r6, #4]	@ float
 131:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 1813              		.loc 4 131 0
 1814 02ee 9B68     		ldr	r3, [r3, #8]	@ float
 1815 02f0 B360     		str	r3, [r6, #8]	@ float
 1816              	.LVL211:
 1817              	.LBE871:
 1818              	.LBE870:
 170:Core/Src/parts/sensors/position_sensor.cpp **** 
 1819              		.loc 3 170 0
 1820 02f2 3046     		mov	r0, r6
 1821 02f4 0DF55B7D 		add	sp, sp, #876
 1822              	.LCFI13:
 1823              		.cfi_remember_state
 1824              		.cfi_def_cfa_offset 60
 1825              		@ sp needed
 1826 02f8 BDEC068B 		vldm	sp!, {d8-d10}
 1827              	.LCFI14:
 1828              		.cfi_restore 84
 1829              		.cfi_restore 85
 1830              		.cfi_restore 82
 1831              		.cfi_restore 83
 1832              		.cfi_restore 80
 1833              		.cfi_restore 81
 1834              		.cfi_def_cfa_offset 36
 1835 02fc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1836              	.LVL212:
 1837              	.L93:
 1838              	.LCFI15:
 1839              		.cfi_restore_state
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 55


 152:Core/Src/parts/sensors/position_sensor.cpp ****         }
 1840              		.loc 3 152 0
 1841 0300 04F59875 		add	r5, r4, #304
 1842              	.LVL213:
 1843 0304 DDF85483 		ldr	r8, [sp, #852]	@ float
 1844              	.LVL214:
 1845              	.LBB872:
 1846              	.LBB873:
  53:Core/Inc/utils\filter/kalman.h ****                         // Initiaize all the variables at the first call
 1847              		.loc 5 53 0
 1848 0308 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 1849 030a 9BB3     		cbz	r3, .L95
  55:Core/Inc/utils\filter/kalman.h **** 
 1850              		.loc 5 55 0
 1851 030c D4F83031 		ldr	r3, [r4, #304]
 1852 0310 EB98     		ldr	r0, [sp, #940]
 1853 0312 9847     		blx	r3
 1854              	.LVL215:
  57:Core/Inc/utils\filter/kalman.h ****                         x_.at(0,0) = measured;
 1855              		.loc 5 57 0
 1856 0314 0023     		movs	r3, #0
 1857 0316 2B71     		strb	r3, [r5, #4]
 1858              	.LVL216:
 1859              	.LBB874:
 1860              	.LBB875:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 1861              		.loc 6 37 0
 1862 0318 95F84C30 		ldrb	r3, [r5, #76]	@ zero_extendqisi2
 1863 031c 13B1     		cbz	r3, .L96
 1864 031e 95F84D30 		ldrb	r3, [r5, #77]	@ zero_extendqisi2
 1865 0322 1BB9     		cbnz	r3, .L97
 1866              	.L96:
  38:Core/Inc/utils\math/mat.h ****                 }
 1867              		.loc 6 38 0
 1868 0324 2621     		movs	r1, #38
 1869 0326 1148     		ldr	r0, .L119+28
 1870 0328 FFF7FEFF 		bl	_Error_Handler
 1871              	.LVL217:
 1872              	.L97:
 1873              	.LBE875:
 1874              	.LBE874:
  58:Core/Inc/utils\filter/kalman.h ****                         // u_.at(0,0) = control_input;
 1875              		.loc 5 58 0
 1876 032c C5F80C80 		str	r8, [r5, #12]	@ float
 1877              	.LVL218:
 1878              	.L98:
 1879              	.LBB876:
 1880              	.LBB877:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 1881              		.loc 6 37 0
 1882 0330 95F84C30 		ldrb	r3, [r5, #76]	@ zero_extendqisi2
 1883 0334 13B1     		cbz	r3, .L107
 1884 0336 95F84D30 		ldrb	r3, [r5, #77]	@ zero_extendqisi2
 1885 033a 1BB9     		cbnz	r3, .L108
 1886              	.L107:
  38:Core/Inc/utils\math/mat.h ****                 }
 1887              		.loc 6 38 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 56


 1888 033c 2621     		movs	r1, #38
 1889 033e 0B48     		ldr	r0, .L119+28
 1890 0340 FFF7FEFF 		bl	_Error_Handler
 1891              	.LVL219:
 1892              	.L108:
 1893              	.LBE877:
 1894              	.LBE876:
  75:Core/Inc/utils\filter/kalman.h ****         }
 1895              		.loc 5 75 0
 1896 0344 D5ED037A 		vldr.32	s15, [r5, #12]
 1897              	.LVL220:
 1898 0348 BEE7     		b	.L94
 1899              	.L120:
 1900 034a 00BFAFF3 		.align	3
 1900      0080
 1901              	.L119:
 1902 0350 66666666 		.word	1717986918
 1903 0354 66A64C40 		.word	1078765158
 1904 0358 00000000 		.word	.LANCHOR10
 1905 035c 00000000 		.word	.LANCHOR9
 1906 0360 00000000 		.word	.LANCHOR1
 1907 0364 00000000 		.word	.LC1
 1908 0368 24000000 		.word	.LC2
 1909 036c 00000000 		.word	.LC0
 1910 0370 00000000 		.word	.LANCHOR5
 1911              	.LVL221:
 1912              	.L95:
 1913              	.LBB878:
 1914              	.LBB879:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 1915              		.loc 6 37 0
 1916 0374 95F89030 		ldrb	r3, [r5, #144]	@ zero_extendqisi2
 1917 0378 13B1     		cbz	r3, .L99
 1918 037a 95F89130 		ldrb	r3, [r5, #145]	@ zero_extendqisi2
 1919 037e 1BB9     		cbnz	r3, .L100
 1920              	.L99:
  38:Core/Inc/utils\math/mat.h ****                 }
 1921              		.loc 6 38 0
 1922 0380 2621     		movs	r1, #38
 1923 0382 A248     		ldr	r0, .L121
 1924 0384 FFF7FEFF 		bl	_Error_Handler
 1925              	.LVL222:
 1926              	.L100:
 1927              	.LBE879:
 1928              	.LBE878:
  62:Core/Inc/utils\filter/kalman.h ****                         z_.at(0,0) = measured;
 1929              		.loc 5 62 0
 1930 0388 C5F85090 		str	r9, [r5, #80]	@ float
 1931              	.LVL223:
 1932              	.LBB880:
 1933              	.LBB881:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 1934              		.loc 6 37 0
 1935 038c 95F8D430 		ldrb	r3, [r5, #212]	@ zero_extendqisi2
 1936 0390 13B1     		cbz	r3, .L101
 1937 0392 95F8D530 		ldrb	r3, [r5, #213]	@ zero_extendqisi2
 1938 0396 1BB9     		cbnz	r3, .L102
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 57


 1939              	.L101:
  38:Core/Inc/utils\math/mat.h ****                 }
 1940              		.loc 6 38 0
 1941 0398 2621     		movs	r1, #38
 1942 039a 9C48     		ldr	r0, .L121
 1943 039c FFF7FEFF 		bl	_Error_Handler
 1944              	.LVL224:
 1945              	.L102:
 1946              	.LBE881:
 1947              	.LBE880:
  63:Core/Inc/utils\filter/kalman.h **** 
 1948              		.loc 5 63 0
 1949 03a0 C5F89480 		str	r8, [r5, #148]	@ float
  66:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 1950              		.loc 5 66 0
 1951 03a4 A968     		ldr	r1, [r5, #8]
 1952 03a6 77A8     		add	r0, sp, #476
 1953 03a8 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1954              	.LVL225:
 1955 03ac 05F10C04 		add	r4, r5, #12
 1956              	.LVL226:
 1957              	.LBB882:
 1958              	.LBB883:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1959              		.loc 6 69 0
 1960 03b0 2146     		mov	r1, r4
 1961 03b2 77A8     		add	r0, sp, #476
 1962              	.LVL227:
 1963 03b4 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1964              	.LVL228:
  70:Core/Inc/utils\math/mat.h ****         }
 1965              		.loc 6 70 0
 1966 03b8 4FF04408 		mov	r8, #68
 1967              	.LVL229:
 1968 03bc 4246     		mov	r2, r8
 1969 03be 77A9     		add	r1, sp, #476
 1970              	.LVL230:
 1971 03c0 88A8     		add	r0, sp, #544
 1972 03c2 FFF7FEFF 		bl	memcpy
 1973              	.LVL231:
 1974              	.LBE883:
 1975              	.LBE882:
  66:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 1976              		.loc 5 66 0
 1977 03c6 A968     		ldr	r1, [r5, #8]
 1978 03c8 4144     		add	r1, r1, r8
 1979 03ca 55A8     		add	r0, sp, #340
 1980 03cc FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1981              	.LVL232:
 1982              	.LBB884:
 1983              	.LBB885:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1984              		.loc 6 69 0
 1985 03d0 05F15001 		add	r1, r5, #80
 1986              	.LVL233:
 1987 03d4 55A8     		add	r0, sp, #340
 1988              	.LVL234:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 58


 1989 03d6 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1990              	.LVL235:
  70:Core/Inc/utils\math/mat.h ****         }
 1991              		.loc 6 70 0
 1992 03da 4246     		mov	r2, r8
 1993 03dc 55A9     		add	r1, sp, #340
 1994              	.LVL236:
 1995 03de 66A8     		add	r0, sp, #408
 1996 03e0 FFF7FEFF 		bl	memcpy
 1997              	.LVL237:
 1998              	.LBE885:
 1999              	.LBE884:
 2000              	.LBB886:
 2001              	.LBB887:
  59:Core/Inc/utils\math/mat.h ****                 return lhs;
 2002              		.loc 6 59 0
 2003 03e4 66A9     		add	r1, sp, #408
 2004              	.LVL238:
 2005 03e6 88A8     		add	r0, sp, #544
 2006              	.LVL239:
 2007 03e8 FFF7FEFF 		bl	_ZN3MatpLERKS_
 2008              	.LVL240:
  60:Core/Inc/utils\math/mat.h ****         }
 2009              		.loc 6 60 0
 2010 03ec 4246     		mov	r2, r8
 2011 03ee 88A9     		add	r1, sp, #544
 2012              	.LVL241:
 2013 03f0 99A8     		add	r0, sp, #612
 2014 03f2 FFF7FEFF 		bl	memcpy
 2015              	.LVL242:
 2016              	.LBE887:
 2017              	.LBE886:
  66:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 2018              		.loc 5 66 0
 2019 03f6 4FF04209 		mov	r9, #66
 2020              	.LVL243:
 2021 03fa 4A46     		mov	r2, r9
 2022 03fc 99A9     		add	r1, sp, #612
 2023 03fe 2046     		mov	r0, r4
 2024 0400 FFF7FEFF 		bl	memcpy
 2025              	.LVL244:
  67:Core/Inc/utils\filter/kalman.h **** 
 2026              		.loc 5 67 0
 2027 0404 A968     		ldr	r1, [r5, #8]
 2028 0406 66A8     		add	r0, sp, #408
 2029 0408 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2030              	.LVL245:
 2031 040c A968     		ldr	r1, [r5, #8]
 2032              	.LVL246:
 2033              	.LBB888:
 2034              	.LBB889:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2035              		.loc 6 69 0
 2036 040e 01F58871 		add	r1, r1, #272
 2037              	.LVL247:
 2038 0412 66A8     		add	r0, sp, #408
 2039              	.LVL248:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 59


 2040 0414 FFF7FEFF 		bl	_ZN3MatmLERKS_
 2041              	.LVL249:
  70:Core/Inc/utils\math/mat.h ****         }
 2042              		.loc 6 70 0
 2043 0418 4246     		mov	r2, r8
 2044 041a 66A9     		add	r1, sp, #408
 2045              	.LVL250:
 2046 041c 77A8     		add	r0, sp, #476
 2047 041e FFF7FEFF 		bl	memcpy
 2048              	.LVL251:
 2049              	.LBE889:
 2050              	.LBE888:
 2051              	.LBB890:
 2052              	.LBB891:
  83:Core/Inc/utils\math/mat.h **** 
 2053              		.loc 6 83 0
 2054 0422 A968     		ldr	r1, [r5, #8]
 2055 0424 55A8     		add	r0, sp, #340
 2056 0426 FFF7FEFF 		bl	_ZN3Mat9transposeEv
 2057              	.LVL252:
 2058              	.LBE891:
 2059              	.LBE890:
 2060              	.LBB892:
 2061              	.LBB893:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2062              		.loc 6 69 0
 2063 042a 55A9     		add	r1, sp, #340
 2064              	.LVL253:
 2065 042c 77A8     		add	r0, sp, #476
 2066              	.LVL254:
 2067 042e FFF7FEFF 		bl	_ZN3MatmLERKS_
 2068              	.LVL255:
  70:Core/Inc/utils\math/mat.h ****         }
 2069              		.loc 6 70 0
 2070 0432 4246     		mov	r2, r8
 2071 0434 77A9     		add	r1, sp, #476
 2072              	.LVL256:
 2073 0436 88A8     		add	r0, sp, #544
 2074 0438 FFF7FEFF 		bl	memcpy
 2075              	.LVL257:
 2076              	.LBE893:
 2077              	.LBE892:
  67:Core/Inc/utils\filter/kalman.h **** 
 2078              		.loc 5 67 0
 2079 043c A968     		ldr	r1, [r5, #8]
 2080              	.LVL258:
 2081              	.LBB894:
 2082              	.LBB895:
  59:Core/Inc/utils\math/mat.h ****                 return lhs;
 2083              		.loc 6 59 0
 2084 043e 01F5AA71 		add	r1, r1, #340
 2085              	.LVL259:
 2086 0442 88A8     		add	r0, sp, #544
 2087              	.LVL260:
 2088 0444 FFF7FEFF 		bl	_ZN3MatpLERKS_
 2089              	.LVL261:
  60:Core/Inc/utils\math/mat.h ****         }
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 60


 2090              		.loc 6 60 0
 2091 0448 4246     		mov	r2, r8
 2092 044a 88A9     		add	r1, sp, #544
 2093              	.LVL262:
 2094 044c 99A8     		add	r0, sp, #612
 2095 044e FFF7FEFF 		bl	memcpy
 2096              	.LVL263:
 2097              	.LBE895:
 2098              	.LBE894:
  67:Core/Inc/utils\filter/kalman.h **** 
 2099              		.loc 5 67 0
 2100 0452 A868     		ldr	r0, [r5, #8]
 2101 0454 4A46     		mov	r2, r9
 2102 0456 99A9     		add	r1, sp, #612
 2103 0458 00F58870 		add	r0, r0, #272
 2104 045c FFF7FEFF 		bl	memcpy
 2105              	.LVL264:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 2106              		.loc 5 70 0
 2107 0460 A968     		ldr	r1, [r5, #8]
 2108 0462 01F58871 		add	r1, r1, #272
 2109 0466 77A8     		add	r0, sp, #476
 2110 0468 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2111              	.LVL265:
 2112 046c A968     		ldr	r1, [r5, #8]
 2113              	.LVL266:
 2114              	.LBB896:
 2115              	.LBB897:
  83:Core/Inc/utils\math/mat.h **** 
 2116              		.loc 6 83 0
 2117 046e 8831     		adds	r1, r1, #136
 2118              	.LVL267:
 2119 0470 66A8     		add	r0, sp, #408
 2120 0472 FFF7FEFF 		bl	_ZN3Mat9transposeEv
 2121              	.LVL268:
 2122              	.LBE897:
 2123              	.LBE896:
 2124              	.LBB898:
 2125              	.LBB899:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2126              		.loc 6 69 0
 2127 0476 66A9     		add	r1, sp, #408
 2128              	.LVL269:
 2129 0478 77A8     		add	r0, sp, #476
 2130              	.LVL270:
 2131 047a FFF7FEFF 		bl	_ZN3MatmLERKS_
 2132              	.LVL271:
  70:Core/Inc/utils\math/mat.h ****         }
 2133              		.loc 6 70 0
 2134 047e 4246     		mov	r2, r8
 2135 0480 77A9     		add	r1, sp, #476
 2136              	.LVL272:
 2137 0482 88A8     		add	r0, sp, #544
 2138 0484 FFF7FEFF 		bl	memcpy
 2139              	.LVL273:
 2140              	.LBE899:
 2141              	.LBE898:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 61


  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 2142              		.loc 5 70 0
 2143 0488 A968     		ldr	r1, [r5, #8]
 2144 048a 8831     		adds	r1, r1, #136
 2145 048c 0DEB0800 		add	r0, sp, r8
 2146 0490 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2147              	.LVL274:
 2148 0494 A968     		ldr	r1, [r5, #8]
 2149              	.LVL275:
 2150              	.LBB900:
 2151              	.LBB901:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2152              		.loc 6 69 0
 2153 0496 01F58871 		add	r1, r1, #272
 2154              	.LVL276:
 2155 049a 0DEB0800 		add	r0, sp, r8
 2156 049e FFF7FEFF 		bl	_ZN3MatmLERKS_
 2157              	.LVL277:
  70:Core/Inc/utils\math/mat.h ****         }
 2158              		.loc 6 70 0
 2159 04a2 4246     		mov	r2, r8
 2160 04a4 0DEB0801 		add	r1, sp, r8
 2161 04a8 22A8     		add	r0, sp, #136
 2162 04aa FFF7FEFF 		bl	memcpy
 2163              	.LVL278:
 2164              	.LBE901:
 2165              	.LBE900:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 2166              		.loc 5 70 0
 2167 04ae A968     		ldr	r1, [r5, #8]
 2168              	.LVL279:
 2169              	.LBB902:
 2170              	.LBB903:
  83:Core/Inc/utils\math/mat.h **** 
 2171              		.loc 6 83 0
 2172 04b0 8831     		adds	r1, r1, #136
 2173              	.LVL280:
 2174 04b2 6846     		mov	r0, sp
 2175 04b4 FFF7FEFF 		bl	_ZN3Mat9transposeEv
 2176              	.LVL281:
 2177              	.LBE903:
 2178              	.LBE902:
 2179              	.LBB904:
 2180              	.LBB905:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2181              		.loc 6 69 0
 2182 04b8 6946     		mov	r1, sp
 2183 04ba 22A8     		add	r0, sp, #136
 2184              	.LVL282:
 2185 04bc FFF7FEFF 		bl	_ZN3MatmLERKS_
 2186              	.LVL283:
  70:Core/Inc/utils\math/mat.h ****         }
 2187              		.loc 6 70 0
 2188 04c0 4246     		mov	r2, r8
 2189 04c2 22A9     		add	r1, sp, #136
 2190              	.LVL284:
 2191 04c4 33A8     		add	r0, sp, #204
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 62


 2192 04c6 FFF7FEFF 		bl	memcpy
 2193              	.LVL285:
 2194              	.LBE905:
 2195              	.LBE904:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 2196              		.loc 5 70 0
 2197 04ca A968     		ldr	r1, [r5, #8]
 2198              	.LVL286:
 2199              	.LBB906:
 2200              	.LBB907:
  59:Core/Inc/utils\math/mat.h ****                 return lhs;
 2201              		.loc 6 59 0
 2202 04cc 01F5CC71 		add	r1, r1, #408
 2203              	.LVL287:
 2204 04d0 33A8     		add	r0, sp, #204
 2205              	.LVL288:
 2206 04d2 FFF7FEFF 		bl	_ZN3MatpLERKS_
 2207              	.LVL289:
  60:Core/Inc/utils\math/mat.h ****         }
 2208              		.loc 6 60 0
 2209 04d6 4246     		mov	r2, r8
 2210 04d8 33A9     		add	r1, sp, #204
 2211              	.LVL290:
 2212 04da 44A8     		add	r0, sp, #272
 2213 04dc FFF7FEFF 		bl	memcpy
 2214              	.LVL291:
 2215              	.LBE907:
 2216              	.LBE906:
 2217              	.LBB908:
 2218              	.LBB909:
 101:Core/Inc/utils\math/mat.h ****                         }
 102:Core/Inc/utils\math/mat.h ****                 }
 103:Core/Inc/utils\math/mat.h ****         }
 104:Core/Inc/utils\math/mat.h **** 
 105:Core/Inc/utils\math/mat.h ****         void add_Rows(uint8_t r) {
 106:Core/Inc/utils\math/mat.h ****                 if (r + rows_ <= MAX_MATRIX_ROWS) {
 107:Core/Inc/utils\math/mat.h ****                         rows_ += r;
 108:Core/Inc/utils\math/mat.h ****                 }
 109:Core/Inc/utils\math/mat.h ****         }
 110:Core/Inc/utils\math/mat.h **** 
 111:Core/Inc/utils\math/mat.h ****         void add_Cols(uint8_t c) {
 112:Core/Inc/utils\math/mat.h ****                 if (c + cols_ <= MAX_MATRIX_COLS) {
 113:Core/Inc/utils\math/mat.h ****                         cols_ += c;
 114:Core/Inc/utils\math/mat.h ****                 }
 115:Core/Inc/utils\math/mat.h ****         }
 116:Core/Inc/utils\math/mat.h **** 
 117:Core/Inc/utils\math/mat.h ****         static Mat eye(uint8_t n);
 118:Core/Inc/utils\math/mat.h **** 
 119:Core/Inc/utils\math/mat.h ****         bool is_Zero() const;
 120:Core/Inc/utils\math/mat.h ****         void swap_Rows(uint8_t a, uint8_t b);
 121:Core/Inc/utils\math/mat.h ****         void swap_Cols(size_t a, size_t b);        
 122:Core/Inc/utils\math/mat.h ****         bool inv(Mat &inv) const;
 123:Core/Inc/utils\math/mat.h **** 
 124:Core/Inc/utils\math/mat.h ****         Mat inv() const
 125:Core/Inc/utils\math/mat.h ****         {
 126:Core/Inc/utils\math/mat.h ****                 Mat i(rows_, cols_);
 2219              		.loc 6 126 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 63


 2220 04e0 9DF85121 		ldrb	r2, [sp, #337]	@ zero_extendqisi2
 2221 04e4 9DF85011 		ldrb	r1, [sp, #336]	@ zero_extendqisi2
 2222 04e8 55A8     		add	r0, sp, #340
 2223 04ea FFF7FEFF 		bl	_ZN3MatC1Ehh
 2224              	.LVL292:
 127:Core/Inc/utils\math/mat.h ****                 if(inv(i)) {
 2225              		.loc 6 127 0
 2226 04ee 55A9     		add	r1, sp, #340
 2227 04f0 44A8     		add	r0, sp, #272
 2228              	.LVL293:
 2229 04f2 FFF7FEFF 		bl	_ZNK3Mat3invERS_
 2230              	.LVL294:
 2231 04f6 0028     		cmp	r0, #0
 2232 04f8 7ED0     		beq	.L106
 2233              	.L103:
 2234              	.LVL295:
 2235              	.LBE909:
 2236              	.LBE908:
 2237              	.LBB915:
 2238              	.LBB916:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2239              		.loc 6 69 0
 2240 04fa 55A9     		add	r1, sp, #340
 2241              	.LVL296:
 2242 04fc 88A8     		add	r0, sp, #544
 2243              	.LVL297:
 2244 04fe FFF7FEFF 		bl	_ZN3MatmLERKS_
 2245              	.LVL298:
  70:Core/Inc/utils\math/mat.h ****         }
 2246              		.loc 6 70 0
 2247 0502 4FF04408 		mov	r8, #68
 2248 0506 4246     		mov	r2, r8
 2249 0508 88A9     		add	r1, sp, #544
 2250              	.LVL299:
 2251 050a 99A8     		add	r0, sp, #612
 2252 050c FFF7FEFF 		bl	memcpy
 2253              	.LVL300:
 2254              	.LBE916:
 2255              	.LBE915:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 2256              		.loc 5 70 0
 2257 0510 05F1D809 		add	r9, r5, #216
 2258 0514 4FF0420A 		mov	r10, #66
 2259              	.LVL301:
 2260 0518 5246     		mov	r2, r10
 2261 051a 99A9     		add	r1, sp, #612
 2262 051c 4846     		mov	r0, r9
 2263 051e FFF7FEFF 		bl	memcpy
 2264              	.LVL302:
  71:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
 2265              		.loc 5 71 0
 2266 0522 4946     		mov	r1, r9
 2267 0524 88A8     		add	r0, sp, #544
 2268 0526 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2269              	.LVL303:
 2270 052a 05F19401 		add	r1, r5, #148
 2271 052e 66A8     		add	r0, sp, #408
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 64


 2272 0530 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2273              	.LVL304:
 2274 0534 A968     		ldr	r1, [r5, #8]
 2275 0536 8831     		adds	r1, r1, #136
 2276 0538 44A8     		add	r0, sp, #272
 2277 053a FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2278              	.LVL305:
 2279              	.LBB917:
 2280              	.LBB918:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2281              		.loc 6 69 0
 2282 053e 2146     		mov	r1, r4
 2283 0540 44A8     		add	r0, sp, #272
 2284              	.LVL306:
 2285 0542 FFF7FEFF 		bl	_ZN3MatmLERKS_
 2286              	.LVL307:
  70:Core/Inc/utils\math/mat.h ****         }
 2287              		.loc 6 70 0
 2288 0546 4246     		mov	r2, r8
 2289 0548 44A9     		add	r1, sp, #272
 2290              	.LVL308:
 2291 054a 55A8     		add	r0, sp, #340
 2292 054c FFF7FEFF 		bl	memcpy
 2293              	.LVL309:
 2294              	.LBE918:
 2295              	.LBE917:
 2296              	.LBB919:
 2297              	.LBB920:
  64:Core/Inc/utils\math/mat.h ****                 return lhs;
 2298              		.loc 6 64 0
 2299 0550 55A9     		add	r1, sp, #340
 2300              	.LVL310:
 2301 0552 66A8     		add	r0, sp, #408
 2302              	.LVL311:
 2303 0554 FFF7FEFF 		bl	_ZN3MatmIERKS_
 2304              	.LVL312:
  65:Core/Inc/utils\math/mat.h ****         }
 2305              		.loc 6 65 0
 2306 0558 4246     		mov	r2, r8
 2307 055a 66A9     		add	r1, sp, #408
 2308              	.LVL313:
 2309 055c 77A8     		add	r0, sp, #476
 2310 055e FFF7FEFF 		bl	memcpy
 2311              	.LVL314:
 2312              	.LBE920:
 2313              	.LBE919:
 2314              	.LBB921:
 2315              	.LBB922:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2316              		.loc 6 69 0
 2317 0562 77A9     		add	r1, sp, #476
 2318              	.LVL315:
 2319 0564 88A8     		add	r0, sp, #544
 2320              	.LVL316:
 2321 0566 FFF7FEFF 		bl	_ZN3MatmLERKS_
 2322              	.LVL317:
  70:Core/Inc/utils\math/mat.h ****         }
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 65


 2323              		.loc 6 70 0
 2324 056a 4246     		mov	r2, r8
 2325 056c 88A9     		add	r1, sp, #544
 2326              	.LVL318:
 2327 056e 99A8     		add	r0, sp, #612
 2328 0570 FFF7FEFF 		bl	memcpy
 2329              	.LVL319:
 2330              	.LBE922:
 2331              	.LBE921:
  71:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
 2332              		.loc 5 71 0
 2333 0574 99A9     		add	r1, sp, #612
 2334 0576 2046     		mov	r0, r4
 2335 0578 FFF7FEFF 		bl	_ZN3MatpLERKS_
 2336              	.LVL320:
  72:Core/Inc/utils\filter/kalman.h ****                 }
 2337              		.loc 5 72 0
 2338 057c A968     		ldr	r1, [r5, #8]
 2339 057e CC31     		adds	r1, r1, #204
 2340 0580 77A8     		add	r0, sp, #476
 2341 0582 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2342              	.LVL321:
 2343 0586 4946     		mov	r1, r9
 2344 0588 55A8     		add	r0, sp, #340
 2345 058a FFF7FEFF 		bl	_ZN3MatC1ERKS_
 2346              	.LVL322:
 2347 058e A968     		ldr	r1, [r5, #8]
 2348              	.LVL323:
 2349              	.LBB923:
 2350              	.LBB924:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2351              		.loc 6 69 0
 2352 0590 8831     		adds	r1, r1, #136
 2353              	.LVL324:
 2354 0592 55A8     		add	r0, sp, #340
 2355              	.LVL325:
 2356 0594 FFF7FEFF 		bl	_ZN3MatmLERKS_
 2357              	.LVL326:
  70:Core/Inc/utils\math/mat.h ****         }
 2358              		.loc 6 70 0
 2359 0598 4246     		mov	r2, r8
 2360 059a 55A9     		add	r1, sp, #340
 2361              	.LVL327:
 2362 059c 66A8     		add	r0, sp, #408
 2363 059e FFF7FEFF 		bl	memcpy
 2364              	.LVL328:
 2365              	.LBE924:
 2366              	.LBE923:
 2367              	.LBB925:
 2368              	.LBB926:
  64:Core/Inc/utils\math/mat.h ****                 return lhs;
 2369              		.loc 6 64 0
 2370 05a2 66A9     		add	r1, sp, #408
 2371              	.LVL329:
 2372 05a4 77A8     		add	r0, sp, #476
 2373              	.LVL330:
 2374 05a6 FFF7FEFF 		bl	_ZN3MatmIERKS_
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 66


 2375              	.LVL331:
  65:Core/Inc/utils\math/mat.h ****         }
 2376              		.loc 6 65 0
 2377 05aa 4246     		mov	r2, r8
 2378 05ac 77A9     		add	r1, sp, #476
 2379              	.LVL332:
 2380 05ae 88A8     		add	r0, sp, #544
 2381 05b0 FFF7FEFF 		bl	memcpy
 2382              	.LVL333:
 2383              	.LBE926:
 2384              	.LBE925:
  72:Core/Inc/utils\filter/kalman.h ****                 }
 2385              		.loc 5 72 0
 2386 05b4 A968     		ldr	r1, [r5, #8]
 2387              	.LVL334:
 2388              	.LBB927:
 2389              	.LBB928:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 2390              		.loc 6 69 0
 2391 05b6 01F58871 		add	r1, r1, #272
 2392              	.LVL335:
 2393 05ba 88A8     		add	r0, sp, #544
 2394              	.LVL336:
 2395 05bc FFF7FEFF 		bl	_ZN3MatmLERKS_
 2396              	.LVL337:
  70:Core/Inc/utils\math/mat.h ****         }
 2397              		.loc 6 70 0
 2398 05c0 4246     		mov	r2, r8
 2399 05c2 88A9     		add	r1, sp, #544
 2400              	.LVL338:
 2401 05c4 99A8     		add	r0, sp, #612
 2402 05c6 FFF7FEFF 		bl	memcpy
 2403              	.LVL339:
 2404              	.LBE928:
 2405              	.LBE927:
  72:Core/Inc/utils\filter/kalman.h ****                 }
 2406              		.loc 5 72 0
 2407 05ca A868     		ldr	r0, [r5, #8]
 2408 05cc 5246     		mov	r2, r10
 2409 05ce 99A9     		add	r1, sp, #612
 2410 05d0 00F58870 		add	r0, r0, #272
 2411 05d4 FFF7FEFF 		bl	memcpy
 2412              	.LVL340:
 2413 05d8 AAE6     		b	.L98
 2414              	.LVL341:
 2415              	.L118:
 2416              	.LBB929:
 2417              	.LBB914:
 2418              	.LBB910:
 2419              	.LBB911:
 2420              	.LBB912:
  88:Core/Inc/utils\math/mat.h ****                         }
 2421              		.loc 6 88 0
 2422 05da 03EB8002 		add	r2, r3, r0, lsl #2
 2423 05de 55A9     		add	r1, sp, #340
 2424 05e0 01EB8202 		add	r2, r1, r2, lsl #2
 2425 05e4 0021     		movs	r1, #0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 67


 2426 05e6 1160     		str	r1, [r2]	@ float
  87:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
 2427              		.loc 6 87 0
 2428 05e8 0133     		adds	r3, r3, #1
 2429              	.LVL342:
 2430 05ea DBB2     		uxtb	r3, r3
 2431              	.LVL343:
 2432              	.L105:
 2433 05ec 9DF89521 		ldrb	r2, [sp, #405]	@ zero_extendqisi2
 2434 05f0 9A42     		cmp	r2, r3
 2435 05f2 F2D8     		bhi	.L118
 2436              	.LBE912:
  86:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
 2437              		.loc 6 86 0
 2438 05f4 0130     		adds	r0, r0, #1
 2439              	.LVL344:
 2440 05f6 C0B2     		uxtb	r0, r0
 2441              	.LVL345:
 2442              	.L106:
 2443 05f8 9DF89431 		ldrb	r3, [sp, #404]	@ zero_extendqisi2
 2444 05fc 8342     		cmp	r3, r0
 2445 05fe 7FF67CAF 		bls	.L103
 2446              	.LBB913:
  87:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
 2447              		.loc 6 87 0
 2448 0602 0023     		movs	r3, #0
 2449 0604 F2E7     		b	.L105
 2450              	.LVL346:
 2451              	.L110:
 2452              	.LBE913:
 2453              	.LBE911:
 2454              	.LBE910:
 2455              	.LBE914:
 2456              	.LBE929:
 2457              	.LBE873:
 2458              	.LBE872:
 146:Core/Src/parts/sensors/position_sensor.cpp ****         if (!x_lidar_used) {
 2459              		.loc 3 146 0
 2460 0606 9FED027A 		vldr.32	s14, .L121+4
 2461 060a 65E6     		b	.L109
 2462              	.L122:
 2463              		.align	2
 2464              	.L121:
 2465 060c 00000000 		.word	.LC0
 2466 0610 00000000 		.word	0
 2467              		.cfi_endproc
 2468              	.LFE534:
 2470              		.section	.text._GLOBAL__sub_I_gLast_YEncoderValue,"ax",%progbits
 2471              		.align	1
 2472              		.syntax unified
 2473              		.thumb
 2474              		.thumb_func
 2475              		.fpu fpv4-sp-d16
 2477              	_GLOBAL__sub_I_gLast_YEncoderValue:
 2478              	.LFB590:
 2479              		.loc 3 239 0
 2480              		.cfi_startproc
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 68


 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 0, uses_anonymous_args = 0
 2483 0000 08B5     		push	{r3, lr}
 2484              	.LCFI16:
 2485              		.cfi_def_cfa_offset 8
 2486              		.cfi_offset 3, -8
 2487              		.cfi_offset 14, -4
 2488              		.loc 3 239 0
 2489 0002 4FF6FF71 		movw	r1, #65535
 2490 0006 0120     		movs	r0, #1
 2491 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 2492              	.LVL347:
 2493 000c 08BD     		pop	{r3, pc}
 2494              		.cfi_endproc
 2495              	.LFE590:
 2497              		.section	.init_array,"aw",%init_array
 2498              		.align	2
 2499 0000 00000000 		.word	_GLOBAL__sub_I_gLast_YEncoderValue(target1)
 2500              		.section	.text._ZN14PositionSensor4initEm,"ax",%progbits
 2501              		.align	1
 2502              		.global	_ZN14PositionSensor4initEm
 2503              		.syntax unified
 2504              		.thumb
 2505              		.thumb_func
 2506              		.fpu fpv4-sp-d16
 2508              	_ZN14PositionSensor4initEm:
 2509              	.LFB533:
  44:Core/Src/parts/sensors/position_sensor.cpp ****         Encoders_Init();
 2510              		.loc 3 44 0
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 0
 2513              		@ frame_needed = 0, uses_anonymous_args = 0
 2514              	.LVL348:
 2515 0000 08B5     		push	{r3, lr}
 2516              	.LCFI17:
 2517              		.cfi_def_cfa_offset 8
 2518              		.cfi_offset 3, -8
 2519              		.cfi_offset 14, -4
  45:Core/Src/parts/sensors/position_sensor.cpp **** 
 2520              		.loc 3 45 0
 2521 0002 FFF7FEFF 		bl	_Z13Encoders_Initv
 2522              	.LVL349:
  47:Core/Src/parts/sensors/position_sensor.cpp ****         gYEncoder.init();
 2523              		.loc 3 47 0
 2524 0006 0548     		ldr	r0, .L127
 2525 0008 FFF7FEFF 		bl	_ZN7Encoder4initEv
 2526              	.LVL350:
  48:Core/Src/parts/sensors/position_sensor.cpp ****         gXLidar.init();
 2527              		.loc 3 48 0
 2528 000c 0448     		ldr	r0, .L127+4
 2529 000e FFF7FEFF 		bl	_ZN7Encoder4initEv
 2530              	.LVL351:
  49:Core/Src/parts/sensors/position_sensor.cpp **** 
 2531              		.loc 3 49 0
 2532 0012 0448     		ldr	r0, .L127+8
 2533 0014 FFF7FEFF 		bl	_ZN5Lidar4initEv
 2534              	.LVL352:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 69


  52:Core/Src/parts/sensors/position_sensor.cpp **** 
 2535              		.loc 3 52 0
 2536 0018 0020     		movs	r0, #0
 2537 001a 08BD     		pop	{r3, pc}
 2538              	.L128:
 2539              		.align	2
 2540              	.L127:
 2541 001c 00000000 		.word	gXEncoder
 2542 0020 00000000 		.word	gYEncoder
 2543 0024 00000000 		.word	gXLidar
 2544              		.cfi_endproc
 2545              	.LFE533:
 2547              		.global	gXLidarEncoder_KV
 2548              		.global	gEncoders_KV
 2549              		.global	gLastPosition
 2550              		.global	gYLidar_Bias
 2551              		.global	gXLidar_Bias
 2552              		.global	gLast_XEncoderValue
 2553              		.global	gLast_YEncoderValue
 2554              		.section	.bss._ZGVZN14PositionSensor12get_InstanceEvE17gPSensor_Instance,"aw",%nobits
 2555              		.align	2
 2556              		.set	.LANCHOR7,. + 0
 2559              	_ZGVZN14PositionSensor12get_InstanceEvE17gPSensor_Instance:
 2560 0000 00000000 		.space	4
 2561              		.section	.bss._ZL14gXLidarAlpha35,"aw",%nobits
 2562              		.align	2
 2563              		.set	.LANCHOR1,. + 0
 2566              	_ZL14gXLidarAlpha35:
 2567 0000 00000000 		.space	16
 2567      00000000 
 2567      00000000 
 2567      00000000 
 2568              		.section	.bss._ZL14gYLidarAlpha35,"aw",%nobits
 2569              		.align	2
 2570              		.set	.LANCHOR2,. + 0
 2573              	_ZL14gYLidarAlpha35:
 2574 0000 00000000 		.space	16
 2574      00000000 
 2574      00000000 
 2574      00000000 
 2575              		.section	.bss._ZZN14PositionSensor12get_InstanceEvE17gPSensor_Instance,"aw",%nobits
 2576              		.align	2
 2577              		.set	.LANCHOR8,. + 0
 2580              	_ZZN14PositionSensor12get_InstanceEvE17gPSensor_Instance:
 2581 0000 00000000 		.space	588
 2581      00000000 
 2581      00000000 
 2581      00000000 
 2581      00000000 
 2582              		.section	.bss.gEncoders_KV,"aw",%nobits
 2583              		.align	2
 2584              		.set	.LANCHOR6,. + 0
 2587              	gEncoders_KV:
 2588 0000 00000000 		.space	476
 2588      00000000 
 2588      00000000 
 2588      00000000 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 70


 2588      00000000 
 2589              		.section	.bss.gLastPosition,"aw",%nobits
 2590              		.align	2
 2591              		.set	.LANCHOR5,. + 0
 2594              	gLastPosition:
 2595 0000 00000000 		.space	12
 2595      00000000 
 2595      00000000 
 2596              		.section	.bss.gXLidarEncoder_KV,"aw",%nobits
 2597              		.align	2
 2598              		.set	.LANCHOR0,. + 0
 2601              	gXLidarEncoder_KV:
 2602 0000 00000000 		.space	476
 2602      00000000 
 2602      00000000 
 2602      00000000 
 2602      00000000 
 2603              		.section	.bss.gYLidar_Bias,"aw",%nobits
 2604              		.align	2
 2605              		.set	.LANCHOR10,. + 0
 2608              	gYLidar_Bias:
 2609 0000 00000000 		.space	4
 2610              		.section	.data.gLast_XEncoderValue,"aw",%progbits
 2611              		.align	2
 2612              		.set	.LANCHOR3,. + 0
 2615              	gLast_XEncoderValue:
 2616 0000 0000C343 		.word	1136852992
 2617              		.section	.data.gLast_YEncoderValue,"aw",%progbits
 2618              		.align	2
 2619              		.set	.LANCHOR4,. + 0
 2622              	gLast_YEncoderValue:
 2623 0000 0000C843 		.word	1137180672
 2624              		.section	.data.gXLidar_Bias,"aw",%progbits
 2625              		.align	2
 2626              		.set	.LANCHOR9,. + 0
 2629              	gXLidar_Bias:
 2630 0000 00008243 		.word	1132593152
 2631              		.section	.rodata._Z24init_XLidarEncoderKalmanm.str1.4,"aMS",%progbits,1
 2632              		.align	2
 2633              	.LC0:
 2634 0000 436F7265 		.ascii	"Core/Inc/utils\\math/mat.h\000"
 2634      2F496E63 
 2634      2F757469 
 2634      6C735C6D 
 2634      6174682F 
 2635              		.section	.rodata._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm.str1.4,"aMS",%progb
 2636              		.align	2
 2637              	.LC1:
 2638 0000 4E6F2044 		.ascii	"No Data Available on x-direction!!\000"
 2638      61746120 
 2638      41766169 
 2638      6C61626C 
 2638      65206F6E 
 2639 0023 00       		.space	1
 2640              	.LC2:
 2641 0024 4E6F2044 		.ascii	"No Data Available on y-direction!!\000"
 2641      61746120 
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 71


 2641      41766169 
 2641      6C61626C 
 2641      65206F6E 
 2642              		.text
 2643              	.Letext0:
 2644              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2645              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2646              		.file 11 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core_cm
 2647              		.file 12 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 2648              		.file 13 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 2649              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 2650              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2651              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2652              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2653              		.file 18 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 2654              		.file 19 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 2655              		.file 20 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 2656              		.file 21 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 2657              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2658              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2659              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2660              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2661              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2662              		.file 27 "Core/Inc/parts/processor/robo_states.h"
 2663              		.file 28 "Core/Inc/periphs/tim.h"
 2664              		.file 29 "Core/Inc/devs/a4988.h"
 2665              		.file 30 "Core/Inc/devs/freewheel.h"
 2666              		.file 31 "Core/Inc/periphs/i2c.h"
 2667              		.file 32 "Core/Inc/devs/hmc5883.h"
 2668              		.file 33 "Core/Inc/devs/mpu6050.h"
 2669              		.file 34 "Core/Inc/utils\\math/vec2.h"
 2670              		.file 35 "Core/Inc/parts/devs_config.h"
 2671              		.file 36 "Core/Inc/parts/sensors/encoder.h"
 2672              		.file 37 "Core/Inc/parts/sensors/lidar.h"
 2673              		.file 38 "Core/Inc/sys/error.h"
 2674              		.file 39 "<built-in>"
 2675              		.file 40 "Core/Inc/main.h"
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 72


DEFINED SYMBOLS
                            *ABS*:00000000 position_sensor.cpp
C:\Users\073be\AppData\Local\Temp\cckila64.s:18     .text._ZN14PositionSensorD2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:25     .text._ZN14PositionSensorD2Ev:00000000 _ZN14PositionSensorD2Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:25     .text._ZN14PositionSensorD2Ev:00000000 _ZN14PositionSensorD1Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:42     .text._ZN10Exp_SmoothD2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:49     .text._ZN10Exp_SmoothD2Ev:00000000 _ZN10Exp_SmoothD2Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:49     .text._ZN10Exp_SmoothD2Ev:00000000 _ZN10Exp_SmoothD1Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:66     .text._Z19init_EncodersKalmanm:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:73     .text._Z19init_EncodersKalmanm:00000000 _Z19init_EncodersKalmanm
C:\Users\073be\AppData\Local\Temp\cckila64.s:90     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:97     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:97     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:114    .text._ZN11Kalman_VarsD2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:121    .text._ZN11Kalman_VarsD2Ev:00000000 _ZN11Kalman_VarsD2Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:121    .text._ZN11Kalman_VarsD2Ev:00000000 _ZN11Kalman_VarsD1Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:138    .text._Z24init_XLidarEncoderKalmanm:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:145    .text._Z24init_XLidarEncoderKalmanm:00000000 _Z24init_XLidarEncoderKalmanm
C:\Users\073be\AppData\Local\Temp\cckila64.s:694    .text._Z24init_XLidarEncoderKalmanm:00000290 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:707    .text._ZN10Exp_SmoothD0Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:714    .text._ZN10Exp_SmoothD0Ev:00000000 _ZN10Exp_SmoothD0Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:737    .text._ZN11Kalman_VarsC2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:744    .text._ZN11Kalman_VarsC2Ev:00000000 _ZN11Kalman_VarsC2Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:744    .text._ZN11Kalman_VarsC2Ev:00000000 _ZN11Kalman_VarsC1Ev
C:\Users\073be\AppData\Local\Temp\cckila64.s:838    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:844    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\073be\AppData\Local\Temp\cckila64.s:971    .text._Z41__static_initialization_and_destruction_0ii:00000090 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:987    .text._ZN14PositionSensor12get_InstanceEv:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:994    .text._ZN14PositionSensor12get_InstanceEv:00000000 _ZN14PositionSensor12get_InstanceEv
C:\Users\073be\AppData\Local\Temp\cckila64.s:1122   .text._ZN14PositionSensor12get_InstanceEv:000000b4 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:1134   .text._ZN14PositionSensor17process_LidarDataEPfPK10State_Vars:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:1141   .text._ZN14PositionSensor17process_LidarDataEPfPK10State_Vars:00000000 _ZN14PositionSensor17process_LidarDataEPfPK10State_Vars
C:\Users\073be\AppData\Local\Temp\cckila64.s:1171   .text._ZN14PositionSensor17process_LidarDataEPfPK10State_Vars:00000028 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:1180   .text._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:1187   .text._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm:00000000 _ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm
C:\Users\073be\AppData\Local\Temp\cckila64.s:1902   .text._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm:00000350 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:1916   .text._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm:00000374 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:2465   .text._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm:0000060c $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2471   .text._GLOBAL__sub_I_gLast_YEncoderValue:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:2477   .text._GLOBAL__sub_I_gLast_YEncoderValue:00000000 _GLOBAL__sub_I_gLast_YEncoderValue
C:\Users\073be\AppData\Local\Temp\cckila64.s:2498   .init_array:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2501   .text._ZN14PositionSensor4initEm:00000000 $t
C:\Users\073be\AppData\Local\Temp\cckila64.s:2508   .text._ZN14PositionSensor4initEm:00000000 _ZN14PositionSensor4initEm
C:\Users\073be\AppData\Local\Temp\cckila64.s:2541   .text._ZN14PositionSensor4initEm:0000001c $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2601   .bss.gXLidarEncoder_KV:00000000 gXLidarEncoder_KV
C:\Users\073be\AppData\Local\Temp\cckila64.s:2587   .bss.gEncoders_KV:00000000 gEncoders_KV
C:\Users\073be\AppData\Local\Temp\cckila64.s:2594   .bss.gLastPosition:00000000 gLastPosition
C:\Users\073be\AppData\Local\Temp\cckila64.s:2608   .bss.gYLidar_Bias:00000000 gYLidar_Bias
C:\Users\073be\AppData\Local\Temp\cckila64.s:2629   .data.gXLidar_Bias:00000000 gXLidar_Bias
C:\Users\073be\AppData\Local\Temp\cckila64.s:2615   .data.gLast_XEncoderValue:00000000 gLast_XEncoderValue
C:\Users\073be\AppData\Local\Temp\cckila64.s:2622   .data.gLast_YEncoderValue:00000000 gLast_YEncoderValue
C:\Users\073be\AppData\Local\Temp\cckila64.s:2555   .bss._ZGVZN14PositionSensor12get_InstanceEvE17gPSensor_Instance:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2559   .bss._ZGVZN14PositionSensor12get_InstanceEvE17gPSensor_Instance:00000000 _ZGVZN14PositionSensor12get_InstanceEvE17gPSensor_Instance
C:\Users\073be\AppData\Local\Temp\cckila64.s:2562   .bss._ZL14gXLidarAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2566   .bss._ZL14gXLidarAlpha35:00000000 _ZL14gXLidarAlpha35
C:\Users\073be\AppData\Local\Temp\cckila64.s:2569   .bss._ZL14gYLidarAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2573   .bss._ZL14gYLidarAlpha35:00000000 _ZL14gYLidarAlpha35
ARM GAS  C:\Users\073be\AppData\Local\Temp\cckila64.s 			page 73


C:\Users\073be\AppData\Local\Temp\cckila64.s:2576   .bss._ZZN14PositionSensor12get_InstanceEvE17gPSensor_Instance:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2580   .bss._ZZN14PositionSensor12get_InstanceEvE17gPSensor_Instance:00000000 _ZZN14PositionSensor12get_InstanceEvE17gPSensor_Instance
C:\Users\073be\AppData\Local\Temp\cckila64.s:2583   .bss.gEncoders_KV:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2590   .bss.gLastPosition:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2597   .bss.gXLidarEncoder_KV:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2604   .bss.gYLidar_Bias:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2611   .data.gLast_XEncoderValue:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2618   .data.gLast_YEncoderValue:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2625   .data.gXLidar_Bias:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2632   .rodata._Z24init_XLidarEncoderKalmanm.str1.4:00000000 $d
C:\Users\073be\AppData\Local\Temp\cckila64.s:2636   .rodata._ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm.str1.4:00000000 $d
                           .group:00000000 _ZN14PositionSensorD5Ev
                           .group:00000000 _ZN10Exp_SmoothD5Ev
                           .group:00000000 _ZN4Vec3IfED5Ev
                           .group:00000000 _ZN11Kalman_VarsD5Ev
                           .group:00000000 _ZN11Kalman_VarsC5Ev

UNDEFINED SYMBOLS
_ZN3MatC1Ehh
_Error_Handler
_ZN3MatC1ERKS_
_Z4swapR3MatS0_
_ZN3Mat3eyeEh
memcpy
_ZdlPvj
_ZN10Exp_SmoothC1Ef
__aeabi_atexit
__dso_handle
__cxa_guard_acquire
__cxa_guard_release
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
_ZN10Exp_Smooth6smoothERKf
sinf
cosf
_Z5error5Error
puts
_ZN10Exp_Smooth5clearEv
_ZN3Mat9transposeEv
_ZN3MatmLERK4Vec3IfE
_ZN3MatmLERKS_
_ZN3MatpLERKS_
_ZNK3Mat3invERS_
_ZN3MatmIERKS_
_Z13Encoders_Initv
_ZN7Encoder4initEv
_ZN5Lidar4initEv
gXEncoder
gYEncoder
gXLidar
