ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_tasks.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_Z41__static_initialization_and_destruction_0ii:
  25              	.LFB641:
  26              		.file 1 "Core/Src/robo_tasks.cpp"
   1:Core/Src/robo_tasks.cpp **** /*
   2:Core/Src/robo_tasks.cpp ****  *
   3:Core/Src/robo_tasks.cpp ****  */
   4:Core/Src/robo_tasks.cpp **** 
   5:Core/Src/robo_tasks.cpp **** #include "FreeRTOS.h"
   6:Core/Src/robo_tasks.cpp **** #include "task.h"
   7:Core/Src/robo_tasks.cpp **** #include "main.h"
   8:Core/Src/robo_tasks.cpp **** #include "cmsis_os.h"
   9:Core/Src/robo_tasks.cpp **** #include "usb_device.h"
  10:Core/Src/robo_tasks.cpp **** 
  11:Core/Src/robo_tasks.cpp **** #include "queue.h"
  12:Core/Src/robo_tasks.cpp **** #include "robot.h"
  13:Core/Src/robo_tasks.cpp **** 
  14:Core/Src/robo_tasks.cpp **** /* Export Functions Used in C */
  15:Core/Src/robo_tasks.cpp **** extern "C" void StartDefaultTask(void const *argument);
  16:Core/Src/robo_tasks.cpp **** extern "C" void RobotThread(void const *argument);
  17:Core/Src/robo_tasks.cpp **** extern "C" void LoggingThread(void const *argument);
  18:Core/Src/robo_tasks.cpp **** extern "C" void MotorThread(void const *argument);
  19:Core/Src/robo_tasks.cpp **** 
  20:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_StartDefaultTask */
  21:Core/Src/robo_tasks.cpp **** /**
  22:Core/Src/robo_tasks.cpp ****   * @brief  Function implementing the defaultTask thread.
  23:Core/Src/robo_tasks.cpp ****   * @param  argument: Not used 
  24:Core/Src/robo_tasks.cpp ****   * @retval None
  25:Core/Src/robo_tasks.cpp ****   */
  26:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_StartDefaultTask */
  27:Core/Src/robo_tasks.cpp **** void StartDefaultTask(void const *argument)
  28:Core/Src/robo_tasks.cpp **** {
  29:Core/Src/robo_tasks.cpp ****         /* Init code for USB_DEVICE */
  30:Core/Src/robo_tasks.cpp ****         // MX_USB_DEVICE_Init();
  31:Core/Src/robo_tasks.cpp **** 
  32:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN StartDefaultTask */
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 2


  33:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
  34:Core/Src/robo_tasks.cpp ****         for (;;)
  35:Core/Src/robo_tasks.cpp ****         {
  36:Core/Src/robo_tasks.cpp ****                 osDelay(100000);
  37:Core/Src/robo_tasks.cpp ****         }
  38:Core/Src/robo_tasks.cpp ****         /* USER CODE END StartDefaultTask */
  39:Core/Src/robo_tasks.cpp **** }
  40:Core/Src/robo_tasks.cpp **** 
  41:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_RobotThread */
  42:Core/Src/robo_tasks.cpp **** /**
  43:Core/Src/robo_tasks.cpp ****  * @brief Function implementing the RoboSequence thread.
  44:Core/Src/robo_tasks.cpp ****  * @param argument: Not used
  45:Core/Src/robo_tasks.cpp ****  * @retval None
  46:Core/Src/robo_tasks.cpp ****  * 
  47:Core/Src/robo_tasks.cpp ****  * @note This thread is responsible for reading the current state of the robot.
  48:Core/Src/robo_tasks.cpp ****  * 
  49:Core/Src/robo_tasks.cpp ****  *
  50:Core/Src/robo_tasks.cpp ****  * <pre>
  51:Core/Src/robo_tasks.cpp ****  * Tasks performed by this thread :
  52:Core/Src/robo_tasks.cpp ****  * 1) Read orientation given by the OrientationSensor based on the State the
  53:Core/Src/robo_tasks.cpp ****  *    robot is in.
  54:Core/Src/robo_tasks.cpp ****  * 2) Read position given by the PositionSensor based on the State the robot is
  55:Core/Src/robo_tasks.cpp ****  *    in.
  56:Core/Src/robo_tasks.cpp ****  * 3) Filter Orientation data.
  57:Core/Src/robo_tasks.cpp ****  *      3.1) Filter roll
  58:Core/Src/robo_tasks.cpp ****  *      3.2) Filter roll compensated pitch
  59:Core/Src/robo_tasks.cpp ****  *      3.3) Filter tilt compensated pitch
  60:Core/Src/robo_tasks.cpp ****  * 4) Rotate the measured position from body frame to the field frame
  61:Core/Src/robo_tasks.cpp ****  * 5) Filter Position Data
  62:Core/Src/robo_tasks.cpp ****  * 
  63:Core/Src/robo_tasks.cpp ****  * 6) Find the robot's state based on it's current position
  64:Core/Src/robo_tasks.cpp ****  * 7) Calculate the robot's angle of attack to reach the next state
  65:Core/Src/robo_tasks.cpp ****  * 8) Calculate the robot's velocity according to it's state
  66:Core/Src/robo_tasks.cpp ****  * 9) Calculate the correction angular velocity of the robot
  67:Core/Src/robo_tasks.cpp ****  * 10) Calculate the omegas of each wheel
  68:Core/Src/robo_tasks.cpp ****  * 
  69:Core/Src/robo_tasks.cpp ****  * 11) Measure omega of each wheels
  70:Core/Src/robo_tasks.cpp ****  * 12) Compute error
  71:Core/Src/robo_tasks.cpp ****  * 13) Compute PID using available PID_Algorithm
  72:Core/Src/robo_tasks.cpp ****  * 14) set Omega of each wheel
  73:Core/Src/robo_tasks.cpp ****  * 15) update new omegas of all wheels at once
  74:Core/Src/robo_tasks.cpp ****  * </pre>
  75:Core/Src/robo_tasks.cpp ****  */
  76:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_RobotThread */
  77:Core/Src/robo_tasks.cpp **** #include "arduino.h"
  78:Core/Src/robo_tasks.cpp **** #include "usart.h"
  79:Core/Src/robo_tasks.cpp **** #include "error.h"
  80:Core/Src/robo_tasks.cpp **** #include "i2c.h"
  81:Core/Src/robo_tasks.cpp **** #include "devs_config.h"
  82:Core/Src/robo_tasks.cpp **** 
  83:Core/Src/robo_tasks.cpp **** //* This function prints all the available addresses in the specified I2C Bus.
  84:Core/Src/robo_tasks.cpp **** void print_I2C_Addresses(I2C_HandleTypeDef * hi2c)
  85:Core/Src/robo_tasks.cpp **** {
  86:Core/Src/robo_tasks.cpp ****         uint8_t devs_found = 0;
  87:Core/Src/robo_tasks.cpp ****         printf("Scanning...\n");
  88:Core/Src/robo_tasks.cpp ****         for (uint8_t i = 0; i < 255; ++i) {
  89:Core/Src/robo_tasks.cpp ****                 if (HAL_I2C_IsDeviceReady(hi2c, i, 2, 10) == HAL_OK) {
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 3


  90:Core/Src/robo_tasks.cpp ****                         ++devs_found;
  91:Core/Src/robo_tasks.cpp ****                         printf("Address : 0x%X\n", i);
  92:Core/Src/robo_tasks.cpp ****                         ++i;
  93:Core/Src/robo_tasks.cpp ****                 }
  94:Core/Src/robo_tasks.cpp ****                 HAL_Delay(10);
  95:Core/Src/robo_tasks.cpp ****         }
  96:Core/Src/robo_tasks.cpp ****         if (devs_found) {
  97:Core/Src/robo_tasks.cpp ****                 printf("%d devices detected", devs_found);
  98:Core/Src/robo_tasks.cpp ****         }
  99:Core/Src/robo_tasks.cpp ****         else {
 100:Core/Src/robo_tasks.cpp ****                 printf("No devices found");
 101:Core/Src/robo_tasks.cpp ****         }
 102:Core/Src/robo_tasks.cpp ****         printf(" on given I2C Bus\n");
 103:Core/Src/robo_tasks.cpp **** }
 104:Core/Src/robo_tasks.cpp **** 
 105:Core/Src/robo_tasks.cpp **** 
 106:Core/Src/robo_tasks.cpp **** Robot &Khangai_Robot = Robot::get_Instance();
 107:Core/Src/robo_tasks.cpp **** 
 108:Core/Src/robo_tasks.cpp **** void RobotThread(void const *argument)
 109:Core/Src/robo_tasks.cpp **** {
 110:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN RobotThread */
 111:Core/Src/robo_tasks.cpp ****         uint32_t sample_period = 10;
 112:Core/Src/robo_tasks.cpp ****         
 113:Core/Src/robo_tasks.cpp ****         print_I2C_Addresses(&hi2c1);
 114:Core/Src/robo_tasks.cpp ****         Khangai_Robot.init(sample_period);
 115:Core/Src/robo_tasks.cpp **** 
 116:Core/Src/robo_tasks.cpp ****         uint32_t dt = HAL_GetTick();
 117:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 118:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 119:Core/Src/robo_tasks.cpp ****         osDelay(sample_period);
 120:Core/Src/robo_tasks.cpp ****         HAL_GPIO_WritePin(B_OrangeLED_GPIO_Port, B_OrangeLED_Pin, GPIO_PIN_SET);
 121:Core/Src/robo_tasks.cpp **** 
 122:Core/Src/robo_tasks.cpp ****         // Khangai_Robot.check_Actuators();
 123:Core/Src/robo_tasks.cpp **** 
 124:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
 125:Core/Src/robo_tasks.cpp ****         for (;;)
 126:Core/Src/robo_tasks.cpp ****         {
 127:Core/Src/robo_tasks.cpp ****                 // Since this is the highest priority task, we can be sure that
 128:Core/Src/robo_tasks.cpp ****                 // another task won't start when this task is running
 129:Core/Src/robo_tasks.cpp ****                 dt_tmp = HAL_GetTick();
 130:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
 131:Core/Src/robo_tasks.cpp **** 
 132:Core/Src/robo_tasks.cpp ****                 Khangai_Robot.update(sample_period);
 133:Core/Src/robo_tasks.cpp **** 
 134:Core/Src/robo_tasks.cpp ****                 // for (uint32_t i = 0; i < 100; ++i) {
 135:Core/Src/robo_tasks.cpp ****                 //         printf("%ld, %ld\n", dt + last_run_time, i);
 136:Core/Src/robo_tasks.cpp ****                 // }
 137:Core/Src/robo_tasks.cpp ****   
 138:Core/Src/robo_tasks.cpp ****                 dt = HAL_GetTick();
 139:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
 140:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
 141:Core/Src/robo_tasks.cpp **** 
 142:Core/Src/robo_tasks.cpp ****                 // Check for timing Issues
 143:Core/Src/robo_tasks.cpp ****                 if (last_run_time > sample_period / 2) {
 144:Core/Src/robo_tasks.cpp ****                         // Timing Issue Occured since run time is more than half
 145:Core/Src/robo_tasks.cpp ****                         // of sample time
 146:Core/Src/robo_tasks.cpp ****                 }
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 4


 147:Core/Src/robo_tasks.cpp **** 
 148:Core/Src/robo_tasks.cpp ****                 // Sleep for remaining time of the sampling period if there is
 149:Core/Src/robo_tasks.cpp ****                 // time left
 150:Core/Src/robo_tasks.cpp ****                 if (dt_tmp < sample_period) {
 151:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 152:Core/Src/robo_tasks.cpp ****                 }
 153:Core/Src/robo_tasks.cpp ****         }
 154:Core/Src/robo_tasks.cpp ****         /* USER CODE END RobotThread */
 155:Core/Src/robo_tasks.cpp **** }
 156:Core/Src/robo_tasks.cpp **** 
 157:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_MotorThread */
 158:Core/Src/robo_tasks.cpp **** /**
 159:Core/Src/robo_tasks.cpp **** * @brief Function implementing the MotorSequence thread.
 160:Core/Src/robo_tasks.cpp **** * @param argument: Not used
 161:Core/Src/robo_tasks.cpp **** * @retval None
 162:Core/Src/robo_tasks.cpp **** */
 163:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_MotorThread */
 164:Core/Src/robo_tasks.cpp **** void MotorThread(void const *argument)
 165:Core/Src/robo_tasks.cpp **** {
 166:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN MotorThread */
 167:Core/Src/robo_tasks.cpp ****         uint32_t sample_period = 10;
 168:Core/Src/robo_tasks.cpp ****         
 169:Core/Src/robo_tasks.cpp **** 
 170:Core/Src/robo_tasks.cpp ****         uint32_t dt = HAL_GetTick();
 171:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 172:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 173:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
 174:Core/Src/robo_tasks.cpp ****         for (;;)
 175:Core/Src/robo_tasks.cpp ****         {
 176:Core/Src/robo_tasks.cpp ****                 if (Khangai_Robot.is_Initiated()) {
 177:Core/Src/robo_tasks.cpp ****                         // Since this is the highest priority task, we can be sure that
 178:Core/Src/robo_tasks.cpp ****                         // another task won't start when this task is running
 179:Core/Src/robo_tasks.cpp ****                         dt_tmp = HAL_GetTick();
 180:Core/Src/robo_tasks.cpp ****                         dt = dt_tmp - dt;
 181:Core/Src/robo_tasks.cpp **** 
 182:Core/Src/robo_tasks.cpp ****                         Khangai_Robot.run(sample_period);
 183:Core/Src/robo_tasks.cpp **** 
 184:Core/Src/robo_tasks.cpp ****                         // for (uint32_t i = 0; i < 100; ++i) {
 185:Core/Src/robo_tasks.cpp ****                         //         printf("%ld, %ld\n", dt + last_run_time, i);
 186:Core/Src/robo_tasks.cpp ****                         // }
 187:Core/Src/robo_tasks.cpp **** 
 188:Core/Src/robo_tasks.cpp ****                         dt = HAL_GetTick();
 189:Core/Src/robo_tasks.cpp ****                         dt_tmp = dt - dt_tmp;
 190:Core/Src/robo_tasks.cpp ****                         last_run_time = dt_tmp;
 191:Core/Src/robo_tasks.cpp **** 
 192:Core/Src/robo_tasks.cpp ****                         // Check for timing Issues
 193:Core/Src/robo_tasks.cpp ****                         if (last_run_time > sample_period / 2) {
 194:Core/Src/robo_tasks.cpp ****                                 // Timing Issue Occured since run time is more than half
 195:Core/Src/robo_tasks.cpp ****                                 // of sample time
 196:Core/Src/robo_tasks.cpp ****                         }
 197:Core/Src/robo_tasks.cpp **** 
 198:Core/Src/robo_tasks.cpp ****                         // Sleep for remaining time of the sampling period if there is
 199:Core/Src/robo_tasks.cpp ****                         // time left
 200:Core/Src/robo_tasks.cpp ****                         if (dt_tmp < sample_period) {
 201:Core/Src/robo_tasks.cpp ****                                 osDelay(sample_period - dt_tmp);
 202:Core/Src/robo_tasks.cpp ****                         }
 203:Core/Src/robo_tasks.cpp ****                 }
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 5


 204:Core/Src/robo_tasks.cpp ****         }
 205:Core/Src/robo_tasks.cpp ****         /* USER CODE END MotorThread */
 206:Core/Src/robo_tasks.cpp **** }
 207:Core/Src/robo_tasks.cpp **** 
 208:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_LoggingThread */
 209:Core/Src/robo_tasks.cpp **** /**
 210:Core/Src/robo_tasks.cpp **** * @brief Function implementing the logging thread.
 211:Core/Src/robo_tasks.cpp **** * @param argument: Not used
 212:Core/Src/robo_tasks.cpp **** * @retval None
 213:Core/Src/robo_tasks.cpp **** */
 214:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_LoggingThread */
 215:Core/Src/robo_tasks.cpp **** extern Queue<char, 32*1024> gPrintfData;
 216:Core/Src/robo_tasks.cpp **** void LoggingThread(void const *argument)
 217:Core/Src/robo_tasks.cpp **** {
 218:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN LoggingThread */
 219:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
 220:Core/Src/robo_tasks.cpp ****         for (;;)
 221:Core/Src/robo_tasks.cpp ****         {
 222:Core/Src/robo_tasks.cpp ****                 // if (!gPrintfData.is_Empty()) {
 223:Core/Src/robo_tasks.cpp ****                 //         ITM_SendChar(gPrintfData.lookup());
 224:Core/Src/robo_tasks.cpp ****                 // }
 225:Core/Src/robo_tasks.cpp ****                 // // Approximately 2uS delay to allow data transfer
 226:Core/Src/robo_tasks.cpp ****                 // for (uint32_t i = 0; i < 2*168; ++i) {
 227:Core/Src/robo_tasks.cpp ****                 //         asm volatile("nop");
 228:Core/Src/robo_tasks.cpp ****                 // }
 229:Core/Src/robo_tasks.cpp ****                 osDelay(1000);
 230:Core/Src/robo_tasks.cpp ****         }
 231:Core/Src/robo_tasks.cpp ****         /* USER CODE END LoggingThread */
 232:Core/Src/robo_tasks.cpp **** }
  27              		.loc 1 232 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 0128     		cmp	r0, #1
  33 0002 00D0     		beq	.L7
  34 0004 7047     		bx	lr
  35              	.L7:
  36              		.loc 1 232 0 is_stmt 0 discriminator 1
  37 0006 08B5     		push	{r3, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 232 0 is_stmt 1 discriminator 1
  43 0008 4FF6FF73 		movw	r3, #65535
  44 000c 9942     		cmp	r1, r3
  45 000e 00D0     		beq	.L8
  46              	.LVL1:
  47              	.L1:
  48              		.loc 1 232 0 is_stmt 0
  49 0010 08BD     		pop	{r3, pc}
  50              	.LVL2:
  51              	.L8:
 106:Core/Src/robo_tasks.cpp **** 
  52              		.loc 1 106 0 is_stmt 1
  53 0012 FFF7FEFF 		bl	_ZN5Robot12get_InstanceEv
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 6


  54              	.LVL3:
  55 0016 014B     		ldr	r3, .L9
  56 0018 1860     		str	r0, [r3]
  57              		.loc 1 232 0
  58 001a F9E7     		b	.L1
  59              	.L10:
  60              		.align	2
  61              	.L9:
  62 001c 00000000 		.word	.LANCHOR0
  63              		.cfi_endproc
  64              	.LFE641:
  66              		.section	.text.StartDefaultTask,"ax",%progbits
  67              		.align	1
  68              		.global	StartDefaultTask
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	StartDefaultTask:
  75              	.LFB573:
  28:Core/Src/robo_tasks.cpp ****         /* Init code for USB_DEVICE */
  76              		.loc 1 28 0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL4:
  82 0000 08B5     		push	{r3, lr}
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 3, -8
  86              		.cfi_offset 14, -4
  87              	.LVL5:
  88              	.L12:
  36:Core/Src/robo_tasks.cpp ****         }
  89              		.loc 1 36 0 discriminator 1
  90 0002 0248     		ldr	r0, .L14
  91 0004 FFF7FEFF 		bl	osDelay
  92              	.LVL6:
  93 0008 FBE7     		b	.L12
  94              	.L15:
  95 000a 00BF     		.align	2
  96              	.L14:
  97 000c A0860100 		.word	100000
  98              		.cfi_endproc
  99              	.LFE573:
 101              		.section	.text._Z19print_I2C_AddressesP17I2C_HandleTypeDef,"ax",%progbits
 102              		.align	1
 103              		.global	_Z19print_I2C_AddressesP17I2C_HandleTypeDef
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	_Z19print_I2C_AddressesP17I2C_HandleTypeDef:
 110              	.LFB603:
  85:Core/Src/robo_tasks.cpp ****         uint8_t devs_found = 0;
 111              		.loc 1 85 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 7


 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              	.LVL7:
 116 0000 70B5     		push	{r4, r5, r6, lr}
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 16
 119              		.cfi_offset 4, -16
 120              		.cfi_offset 5, -12
 121              		.cfi_offset 6, -8
 122              		.cfi_offset 14, -4
 123 0002 0646     		mov	r6, r0
 124              	.LVL8:
  87:Core/Src/robo_tasks.cpp ****         for (uint8_t i = 0; i < 255; ++i) {
 125              		.loc 1 87 0
 126 0004 1548     		ldr	r0, .L24
 127              	.LVL9:
 128 0006 FFF7FEFF 		bl	puts
 129              	.LVL10:
 130              	.LBB2:
  88:Core/Src/robo_tasks.cpp ****                 if (HAL_I2C_IsDeviceReady(hi2c, i, 2, 10) == HAL_OK) {
 131              		.loc 1 88 0
 132 000a 0024     		movs	r4, #0
 133              	.LBE2:
  86:Core/Src/robo_tasks.cpp ****         printf("Scanning...\n");
 134              		.loc 1 86 0
 135 000c 2546     		mov	r5, r4
 136 000e 04E0     		b	.L19
 137              	.LVL11:
 138              	.L18:
 139              	.LBB3:
  94:Core/Src/robo_tasks.cpp ****         }
 140              		.loc 1 94 0 discriminator 2
 141 0010 0A20     		movs	r0, #10
 142 0012 FFF7FEFF 		bl	HAL_Delay
 143              	.LVL12:
  88:Core/Src/robo_tasks.cpp ****                 if (HAL_I2C_IsDeviceReady(hi2c, i, 2, 10) == HAL_OK) {
 144              		.loc 1 88 0 discriminator 2
 145 0016 0134     		adds	r4, r4, #1
 146              	.LVL13:
 147 0018 E4B2     		uxtb	r4, r4
 148              	.LVL14:
 149              	.L19:
  88:Core/Src/robo_tasks.cpp ****                 if (HAL_I2C_IsDeviceReady(hi2c, i, 2, 10) == HAL_OK) {
 150              		.loc 1 88 0 is_stmt 0 discriminator 1
 151 001a FF2C     		cmp	r4, #255
 152 001c 10D0     		beq	.L17
  89:Core/Src/robo_tasks.cpp ****                         ++devs_found;
 153              		.loc 1 89 0 is_stmt 1
 154 001e 0A23     		movs	r3, #10
 155 0020 0222     		movs	r2, #2
 156 0022 2146     		mov	r1, r4
 157 0024 3046     		mov	r0, r6
 158 0026 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 159              	.LVL15:
 160 002a 0028     		cmp	r0, #0
 161 002c F0D1     		bne	.L18
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 8


  90:Core/Src/robo_tasks.cpp ****                         printf("Address : 0x%X\n", i);
 162              		.loc 1 90 0
 163 002e 0135     		adds	r5, r5, #1
 164              	.LVL16:
 165 0030 EDB2     		uxtb	r5, r5
 166              	.LVL17:
  91:Core/Src/robo_tasks.cpp ****                         ++i;
 167              		.loc 1 91 0
 168 0032 2146     		mov	r1, r4
 169 0034 0A48     		ldr	r0, .L24+4
 170 0036 FFF7FEFF 		bl	printf
 171              	.LVL18:
  92:Core/Src/robo_tasks.cpp ****                 }
 172              		.loc 1 92 0
 173 003a 0134     		adds	r4, r4, #1
 174              	.LVL19:
 175 003c E4B2     		uxtb	r4, r4
 176              	.LVL20:
 177 003e E7E7     		b	.L18
 178              	.L17:
 179              	.LBE3:
  96:Core/Src/robo_tasks.cpp ****                 printf("%d devices detected", devs_found);
 180              		.loc 1 96 0
 181 0040 35B9     		cbnz	r5, .L23
 100:Core/Src/robo_tasks.cpp ****         }
 182              		.loc 1 100 0
 183 0042 0848     		ldr	r0, .L24+8
 184 0044 FFF7FEFF 		bl	printf
 185              	.LVL21:
 186              	.L21:
 102:Core/Src/robo_tasks.cpp **** }
 187              		.loc 1 102 0
 188 0048 0748     		ldr	r0, .L24+12
 189 004a FFF7FEFF 		bl	puts
 190              	.LVL22:
 103:Core/Src/robo_tasks.cpp **** 
 191              		.loc 1 103 0
 192 004e 70BD     		pop	{r4, r5, r6, pc}
 193              	.LVL23:
 194              	.L23:
  97:Core/Src/robo_tasks.cpp ****         }
 195              		.loc 1 97 0
 196 0050 2946     		mov	r1, r5
 197 0052 0648     		ldr	r0, .L24+16
 198 0054 FFF7FEFF 		bl	printf
 199              	.LVL24:
 200 0058 F6E7     		b	.L21
 201              	.L25:
 202 005a 00BF     		.align	2
 203              	.L24:
 204 005c 00000000 		.word	.LC0
 205 0060 0C000000 		.word	.LC1
 206 0064 30000000 		.word	.LC3
 207 0068 44000000 		.word	.LC4
 208 006c 1C000000 		.word	.LC2
 209              		.cfi_endproc
 210              	.LFE603:
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 9


 212              		.section	.text.RobotThread,"ax",%progbits
 213              		.align	1
 214              		.global	RobotThread
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv4-sp-d16
 220              	RobotThread:
 221              	.LFB604:
 109:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN RobotThread */
 222              		.loc 1 109 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL25:
 227 0000 10B5     		push	{r4, lr}
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 14, -4
 232              	.LVL26:
 113:Core/Src/robo_tasks.cpp ****         Khangai_Robot.init(sample_period);
 233              		.loc 1 113 0
 234 0002 1348     		ldr	r0, .L30
 235              	.LVL27:
 236 0004 FFF7FEFF 		bl	_Z19print_I2C_AddressesP17I2C_HandleTypeDef
 237              	.LVL28:
 114:Core/Src/robo_tasks.cpp **** 
 238              		.loc 1 114 0
 239 0008 0A21     		movs	r1, #10
 240 000a 124B     		ldr	r3, .L30+4
 241 000c 1868     		ldr	r0, [r3]
 242 000e FFF7FEFF 		bl	_ZN5Robot4initEm
 243              	.LVL29:
 116:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 244              		.loc 1 116 0
 245 0012 FFF7FEFF 		bl	HAL_GetTick
 246              	.LVL30:
 117:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 247              		.loc 1 117 0
 248 0016 FFF7FEFF 		bl	HAL_GetTick
 249              	.LVL31:
 119:Core/Src/robo_tasks.cpp ****         HAL_GPIO_WritePin(B_OrangeLED_GPIO_Port, B_OrangeLED_Pin, GPIO_PIN_SET);
 250              		.loc 1 119 0
 251 001a 0A20     		movs	r0, #10
 252 001c FFF7FEFF 		bl	osDelay
 253              	.LVL32:
 120:Core/Src/robo_tasks.cpp **** 
 254              		.loc 1 120 0
 255 0020 0122     		movs	r2, #1
 256 0022 4FF40051 		mov	r1, #8192
 257 0026 0C48     		ldr	r0, .L30+8
 258 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 259              	.LVL33:
 260              	.L27:
 129:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
 261              		.loc 1 129 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 10


 262 002c FFF7FEFF 		bl	HAL_GetTick
 263              	.LVL34:
 264 0030 0446     		mov	r4, r0
 265              	.LVL35:
 132:Core/Src/robo_tasks.cpp **** 
 266              		.loc 1 132 0
 267 0032 0A21     		movs	r1, #10
 268 0034 074B     		ldr	r3, .L30+4
 269 0036 1868     		ldr	r0, [r3]
 270              	.LVL36:
 271 0038 FFF7FEFF 		bl	_ZN5Robot6updateEm
 272              	.LVL37:
 138:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
 273              		.loc 1 138 0
 274 003c FFF7FEFF 		bl	HAL_GetTick
 275              	.LVL38:
 139:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
 276              		.loc 1 139 0
 277 0040 001B     		subs	r0, r0, r4
 278              	.LVL39:
 150:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 279              		.loc 1 150 0
 280 0042 0928     		cmp	r0, #9
 281 0044 F2D8     		bhi	.L27
 151:Core/Src/robo_tasks.cpp ****                 }
 282              		.loc 1 151 0
 283 0046 C0F10A00 		rsb	r0, r0, #10
 284              	.LVL40:
 285 004a FFF7FEFF 		bl	osDelay
 286              	.LVL41:
 287 004e EDE7     		b	.L27
 288              	.L31:
 289              		.align	2
 290              	.L30:
 291 0050 00000000 		.word	hi2c1
 292 0054 00000000 		.word	.LANCHOR0
 293 0058 000C0240 		.word	1073875968
 294              		.cfi_endproc
 295              	.LFE604:
 297              		.section	.text.MotorThread,"ax",%progbits
 298              		.align	1
 299              		.global	MotorThread
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu fpv4-sp-d16
 305              	MotorThread:
 306              	.LFB605:
 165:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN MotorThread */
 307              		.loc 1 165 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL42:
 312 0000 10B5     		push	{r4, lr}
 313              	.LCFI4:
 314              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 11


 315              		.cfi_offset 4, -8
 316              		.cfi_offset 14, -4
 317              	.LVL43:
 170:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 318              		.loc 1 170 0
 319 0002 FFF7FEFF 		bl	HAL_GetTick
 320              	.LVL44:
 171:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 321              		.loc 1 171 0
 322 0006 FFF7FEFF 		bl	HAL_GetTick
 323              	.LVL45:
 324              	.L33:
 176:Core/Src/robo_tasks.cpp ****                         // Since this is the highest priority task, we can be sure that
 325              		.loc 1 176 0
 326 000a 0C4B     		ldr	r3, .L37
 327 000c 1868     		ldr	r0, [r3]
 328 000e FFF7FEFF 		bl	_ZNK5Robot12is_InitiatedEv
 329              	.LVL46:
 330 0012 0028     		cmp	r0, #0
 331 0014 F9D0     		beq	.L33
 179:Core/Src/robo_tasks.cpp ****                         dt = dt_tmp - dt;
 332              		.loc 1 179 0
 333 0016 FFF7FEFF 		bl	HAL_GetTick
 334              	.LVL47:
 335 001a 0446     		mov	r4, r0
 336              	.LVL48:
 182:Core/Src/robo_tasks.cpp **** 
 337              		.loc 1 182 0
 338 001c 0A21     		movs	r1, #10
 339 001e 074B     		ldr	r3, .L37
 340 0020 1868     		ldr	r0, [r3]
 341              	.LVL49:
 342 0022 FFF7FEFF 		bl	_ZN5Robot3runEm
 343              	.LVL50:
 188:Core/Src/robo_tasks.cpp ****                         dt_tmp = dt - dt_tmp;
 344              		.loc 1 188 0
 345 0026 FFF7FEFF 		bl	HAL_GetTick
 346              	.LVL51:
 189:Core/Src/robo_tasks.cpp ****                         last_run_time = dt_tmp;
 347              		.loc 1 189 0
 348 002a 001B     		subs	r0, r0, r4
 349              	.LVL52:
 200:Core/Src/robo_tasks.cpp ****                                 osDelay(sample_period - dt_tmp);
 350              		.loc 1 200 0
 351 002c 0928     		cmp	r0, #9
 352 002e ECD8     		bhi	.L33
 201:Core/Src/robo_tasks.cpp ****                         }
 353              		.loc 1 201 0
 354 0030 C0F10A00 		rsb	r0, r0, #10
 355              	.LVL53:
 356 0034 FFF7FEFF 		bl	osDelay
 357              	.LVL54:
 358 0038 E7E7     		b	.L33
 359              	.L38:
 360 003a 00BF     		.align	2
 361              	.L37:
 362 003c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 12


 363              		.cfi_endproc
 364              	.LFE605:
 366              		.section	.text.LoggingThread,"ax",%progbits
 367              		.align	1
 368              		.global	LoggingThread
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv4-sp-d16
 374              	LoggingThread:
 375              	.LFB606:
 217:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN LoggingThread */
 376              		.loc 1 217 0
 377              		.cfi_startproc
 378              		@ Volatile: function does not return.
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              	.LVL55:
 382 0000 08B5     		push	{r3, lr}
 383              	.LCFI5:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 3, -8
 386              		.cfi_offset 14, -4
 387              	.LVL56:
 388              	.L40:
 229:Core/Src/robo_tasks.cpp ****         }
 389              		.loc 1 229 0 discriminator 1
 390 0002 4FF47A70 		mov	r0, #1000
 391 0006 FFF7FEFF 		bl	osDelay
 392              	.LVL57:
 393 000a FAE7     		b	.L40
 394              		.cfi_endproc
 395              	.LFE606:
 397              		.section	.text._GLOBAL__sub_I_StartDefaultTask,"ax",%progbits
 398              		.align	1
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	_GLOBAL__sub_I_StartDefaultTask:
 405              	.LFB642:
 406              		.loc 1 232 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI6:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 415              		.loc 1 232 0
 416 0002 4FF6FF71 		movw	r1, #65535
 417 0006 0120     		movs	r0, #1
 418 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 419              	.LVL58:
 420 000c 08BD     		pop	{r3, pc}
 421              		.cfi_endproc
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 13


 422              	.LFE642:
 424              		.section	.init_array,"aw",%init_array
 425              		.align	2
 426 0000 00000000 		.word	_GLOBAL__sub_I_StartDefaultTask(target1)
 427              		.global	Khangai_Robot
 428              		.section	.bss.Khangai_Robot,"aw",%nobits
 429              		.align	2
 430              		.set	.LANCHOR0,. + 0
 433              	Khangai_Robot:
 434 0000 00000000 		.space	4
 435              		.section	.rodata._Z19print_I2C_AddressesP17I2C_HandleTypeDef.str1.4,"aMS",%progbits,1
 436              		.align	2
 437              	.LC0:
 438 0000 5363616E 		.ascii	"Scanning...\000"
 438      6E696E67 
 438      2E2E2E00 
 439              	.LC1:
 440 000c 41646472 		.ascii	"Address : 0x%X\012\000"
 440      65737320 
 440      3A203078 
 440      25580A00 
 441              	.LC2:
 442 001c 25642064 		.ascii	"%d devices detected\000"
 442      65766963 
 442      65732064 
 442      65746563 
 442      74656400 
 443              	.LC3:
 444 0030 4E6F2064 		.ascii	"No devices found\000"
 444      65766963 
 444      65732066 
 444      6F756E64 
 444      00
 445 0041 000000   		.space	3
 446              	.LC4:
 447 0044 206F6E20 		.ascii	" on given I2C Bus\000"
 447      67697665 
 447      6E204932 
 447      43204275 
 447      7300
 448              		.text
 449              	.Letext0:
 450              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 451              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 452              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 453              		.file 5 "Core/Inc/sys/FreeRTOSConfig.h"
 454              		.file 6 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core_cm4
 455              		.file 7 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32F
 456              		.file 8 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32F
 457              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 458              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 459              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 460              		.file 12 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 461              		.file 13 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 462              		.file 14 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 463              		.file 15 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 464              		.file 16 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 14


 465              		.file 17 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 466              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 467              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 468              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 469              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 470              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 471              		.file 23 "Core/Inc/periphs/tim.h"
 472              		.file 24 "Core/Inc/utils\\control/pid.h"
 473              		.file 25 "Core/Inc/utils\\control/pid_algorithms.h"
 474              		.file 26 "Core/Inc/devs/wheel.h"
 475              		.file 27 "Core/Inc/parts/actuator.h"
 476              		.file 28 "Core/Inc/utils\\math/vec3.h"
 477              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 478              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 479              		.file 31 "Core/Inc/utils\\math/mat.h"
 480              		.file 32 "Core/Inc/utils\\filter/kalman.h"
 481              		.file 33 "Core/Inc/parts/sensors/position_sensor.h"
 482              		.file 34 "Core/Inc/parts/sensors/sensor.h"
 483              		.file 35 "Core/Inc/parts/processor/robo_states.h"
 484              		.file 36 "Core/Inc/parts/state_sensor.h"
 485              		.file 37 "Core/Inc/utils\\math/vec2.h"
 486              		.file 38 "Core/Inc/parts/processor.h"
 487              		.file 39 "Core/Inc/robot/robot.h"
 488              		.file 40 "Core/Inc/periphs/usart.h"
 489              		.file 41 "Core/Inc/periphs/i2c.h"
 490              		.file 42 "Core/Inc/devs/a4988.h"
 491              		.file 43 "Core/Inc/devs/freewheel.h"
 492              		.file 44 "Core/Inc/devs/hmc5883.h"
 493              		.file 45 "Core/Inc/devs/mpu6050.h"
 494              		.file 46 "Core/Inc/parts/devs_config.h"
 495              		.file 47 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeR
 496              		.file 48 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 497              		.file 49 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 498              		.file 50 "<built-in>"
ARM GAS  C:\Users\073be\AppData\Local\Temp\cchsQzCV.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 robo_tasks.cpp
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:18     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:24     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:62     .text._Z41__static_initialization_and_destruction_0ii:0000001c $d
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:67     .text.StartDefaultTask:00000000 $t
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:74     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:97     .text.StartDefaultTask:0000000c $d
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:102    .text._Z19print_I2C_AddressesP17I2C_HandleTypeDef:00000000 $t
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:109    .text._Z19print_I2C_AddressesP17I2C_HandleTypeDef:00000000 _Z19print_I2C_AddressesP17I2C_HandleTypeDef
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:204    .text._Z19print_I2C_AddressesP17I2C_HandleTypeDef:0000005c $d
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:213    .text.RobotThread:00000000 $t
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:220    .text.RobotThread:00000000 RobotThread
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:291    .text.RobotThread:00000050 $d
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:298    .text.MotorThread:00000000 $t
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:305    .text.MotorThread:00000000 MotorThread
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:362    .text.MotorThread:0000003c $d
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:367    .text.LoggingThread:00000000 $t
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:374    .text.LoggingThread:00000000 LoggingThread
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:398    .text._GLOBAL__sub_I_StartDefaultTask:00000000 $t
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:404    .text._GLOBAL__sub_I_StartDefaultTask:00000000 _GLOBAL__sub_I_StartDefaultTask
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:425    .init_array:00000000 $d
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:433    .bss.Khangai_Robot:00000000 Khangai_Robot
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:429    .bss.Khangai_Robot:00000000 $d
C:\Users\073be\AppData\Local\Temp\cchsQzCV.s:436    .rodata._Z19print_I2C_AddressesP17I2C_HandleTypeDef.str1.4:00000000 $d

UNDEFINED SYMBOLS
_ZN5Robot12get_InstanceEv
osDelay
puts
HAL_Delay
HAL_I2C_IsDeviceReady
printf
_ZN5Robot4initEm
HAL_GetTick
HAL_GPIO_WritePin
_ZN5Robot6updateEm
hi2c1
_ZNK5Robot12is_InitiatedEv
_ZN5Robot3runEm
