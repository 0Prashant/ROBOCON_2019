ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB179:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** 
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.cpp ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.cpp ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.cpp ****   * inserted by the user or by software development tools
  11:Core/Src/main.cpp ****   * are owned by their respective copyright owners.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.cpp ****   *
  15:Core/Src/main.cpp ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.cpp ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.cpp ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.cpp ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.cpp ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.cpp ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.cpp ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.cpp ****   *      without specific prior written permission.
  25:Core/Src/main.cpp ****   *
  26:Core/Src/main.cpp ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.cpp ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.cpp ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.cpp ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.cpp ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.cpp ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 2


  32:Core/Src/main.cpp ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.cpp ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.cpp ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.cpp ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.cpp ****   *
  37:Core/Src/main.cpp ****   ******************************************************************************
  38:Core/Src/main.cpp ****   */
  39:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  40:Core/Src/main.cpp **** #include "main.h"
  41:Core/Src/main.cpp **** #include "stm32f4xx_hal.h"
  42:Core/Src/main.cpp **** #include "adc.h"
  43:Core/Src/main.cpp **** #include "dma.h"
  44:Core/Src/main.cpp **** #include "tim.h"
  45:Core/Src/main.cpp **** #include "usart.h"
  46:Core/Src/main.cpp **** #include "gpio.h"
  47:Core/Src/main.cpp **** 
  48:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  49:Core/Src/main.cpp **** #include "robot/robo_init.h"
  50:Core/Src/main.cpp **** #include "robot/play.h"
  51:Core/Src/main.cpp **** #include "utils/pid.h"
  52:Core/Src/main.cpp **** /* USER CODE END Includes */
  53:Core/Src/main.cpp **** 
  54:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.cpp **** 
  56:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  57:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.cpp **** 
  59:Core/Src/main.cpp **** /* USER CODE END PV */
  60:Core/Src/main.cpp **** 
  61:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.cpp **** void SystemClock_Config(void);
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.cpp **** 
  67:Core/Src/main.cpp **** /* USER CODE END PFP */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.cpp **** bool gSendDataFlagReceived = false;
  71:Core/Src/main.cpp **** extern Discrete_PID gDisc_PID[4];
  72:Core/Src/main.cpp **** 
  73:Core/Src/main.cpp **** #ifdef __cplusplus
  74:Core/Src/main.cpp **** extern "C" {
  75:Core/Src/main.cpp **** #endif // __cplusplus
  76:Core/Src/main.cpp **** 
  77:Core/Src/main.cpp **** extern void send_AllData();
  78:Core/Src/main.cpp **** 
  79:Core/Src/main.cpp **** #ifdef __cplusplus
  80:Core/Src/main.cpp **** }
  81:Core/Src/main.cpp **** #endif // __cplusplus
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp **** /* USER CODE END 0 */
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp **** /**
  86:Core/Src/main.cpp ****   * @brief  The application entry point.
  87:Core/Src/main.cpp ****   *
  88:Core/Src/main.cpp ****   * @retval None
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 3


  89:Core/Src/main.cpp ****   */
  90:Core/Src/main.cpp **** int main(void)
  91:Core/Src/main.cpp ****   {
  92:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****         /* USER CODE END 1 */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp ****         /* MCU Configuration----------------------------------------------------------*/
  97:Core/Src/main.cpp **** 
  98:Core/Src/main.cpp ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Core/Src/main.cpp ****         HAL_Init();
 100:Core/Src/main.cpp **** 
 101:Core/Src/main.cpp ****         /* USER CODE BEGIN Init */
 102:Core/Src/main.cpp **** 
 103:Core/Src/main.cpp ****         /* USER CODE END Init */
 104:Core/Src/main.cpp **** 
 105:Core/Src/main.cpp ****         /* Configure the system clock */
 106:Core/Src/main.cpp ****         SystemClock_Config();
 107:Core/Src/main.cpp **** 
 108:Core/Src/main.cpp ****         /* USER CODE BEGIN SysInit */
 109:Core/Src/main.cpp **** 
 110:Core/Src/main.cpp ****         /* USER CODE END SysInit */
 111:Core/Src/main.cpp **** 
 112:Core/Src/main.cpp ****         /* Initialize all configured peripherals */
 113:Core/Src/main.cpp ****         MX_GPIO_Init();
 114:Core/Src/main.cpp ****         MX_DMA_Init();
 115:Core/Src/main.cpp ****         MX_TIM3_Init();
 116:Core/Src/main.cpp ****         MX_TIM2_Init();
 117:Core/Src/main.cpp ****         MX_TIM1_Init();
 118:Core/Src/main.cpp ****         MX_TIM4_Init();
 119:Core/Src/main.cpp ****         MX_TIM8_Init();
 120:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 121:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 122:Core/Src/main.cpp ****         MX_ADC1_Init();
 123:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 124:Core/Src/main.cpp **** 
 125:Core/Src/main.cpp ****         robo_Init();
 126:Core/Src/main.cpp **** 
 127:Core/Src/main.cpp ****         printf("Hello World!!\n");
 128:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****         float set_points[4] = { -4, -4, 0, 0 };
 131:Core/Src/main.cpp **** 
 132:Core/Src/main.cpp ****         /* USER CODE END 2 */
 133:Core/Src/main.cpp **** 
 134:Core/Src/main.cpp ****         /* Infinite loop */
 135:Core/Src/main.cpp ****         /* USER CODE BEGIN WHILE */
 136:Core/Src/main.cpp ****         const uint32_t sampling_period = 15;
 137:Core/Src/main.cpp ****         // const uint32_t updating_period = 12;
 138:Core/Src/main.cpp ****         const uint32_t brake_period = 25000;
 139:Core/Src/main.cpp ****         uint32_t sample_time = HAL_GetTick();
 140:Core/Src/main.cpp ****         // uint32_t update_time = HAL_GetTick();
 141:Core/Src/main.cpp ****         uint32_t brake_time = HAL_GetTick();
 142:Core/Src/main.cpp **** 
 143:Core/Src/main.cpp ****         while (1)
 144:Core/Src/main.cpp ****         {
 145:Core/Src/main.cpp ****                 /* USER CODE END WHILE */
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 4


 146:Core/Src/main.cpp ****                 /*  if (HAL_GetTick() - update_time > updating_period) {
 147:Core/Src/main.cpp ****                         update_time = HAL_GetTick();
 148:Core/Src/main.cpp ****                         update(set_points);
 149:Core/Src/main.cpp ****                 }*/
 150:Core/Src/main.cpp **** 
 151:Core/Src/main.cpp ****                 if (HAL_GetTick() - sample_time > sampling_period) 
 152:Core/Src/main.cpp **** 		{
 153:Core/Src/main.cpp ****                         sample_time = HAL_GetTick();
 154:Core/Src/main.cpp **** 			for(int i=0; i<2; i++)
 155:Core/Src/main.cpp **** 			{
 156:Core/Src/main.cpp **** 				float _angle = gWheels[i].get_Angle(); 
 157:Core/Src/main.cpp **** 				if(i==0)
 158:Core/Src/main.cpp **** 				{
 159:Core/Src/main.cpp **** 					if((_angle>0) && (_angle<90))
 160:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.77932, 20*1.0738, 0);
 161:Core/Src/main.cpp **** 					else if((_angle>90) && (_angle<180))
 162:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(2.40851,20*1.4902, 0);
 163:Core/Src/main.cpp **** 					else if((_angle>180) && (_angle<270))
 164:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.55038,20*1.4667, 0);
 165:Core/Src/main.cpp **** 					else
 166:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.67138,20*0.7730434, 0);
 167:Core/Src/main.cpp **** 					printf("%ld   ", (int32_t)(_angle*1000));			
 168:Core/Src/main.cpp **** 				}
 169:Core/Src/main.cpp **** 				else
 170:Core/Src/main.cpp **** 				{
 171:Core/Src/main.cpp **** 					if((_angle>0) && (_angle<90))
 172:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.74393,20*0.9668973, 0);
 173:Core/Src/main.cpp **** 					else if((_angle>90) && (_angle<180))
 174:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.82590,20*0.7767059,0);
 175:Core/Src/main.cpp **** 					else if((_angle>180) && (_angle<270))
 176:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(2.52274,20*1.3564, 0);
 177:Core/Src/main.cpp **** 					else
 178:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.71653,20*0.8160, 0);
 179:Core/Src/main.cpp **** 					printf("%ld   ", (int32_t)(_angle*1000));			
 180:Core/Src/main.cpp **** 				}
 181:Core/Src/main.cpp **** 
 182:Core/Src/main.cpp **** 			}
 183:Core/Src/main.cpp **** 			printf("\t\t");
 184:Core/Src/main.cpp **** 			
 185:Core/Src/main.cpp **** 			tune(set_points, sampling_period);
 186:Core/Src/main.cpp ****                 }
 187:Core/Src/main.cpp ****                 if (HAL_GetTick() - brake_time > brake_period) 
 188:Core/Src/main.cpp **** 		{
 189:Core/Src/main.cpp ****                         ramp_down(sampling_period);
 190:Core/Src/main.cpp ****                         break;
 191:Core/Src/main.cpp ****                 }
 192:Core/Src/main.cpp ****                 /* USER CODE BEGIN 3 */
 193:Core/Src/main.cpp ****         }
 194:Core/Src/main.cpp ****         // send_AllData();
 195:Core/Src/main.cpp **** 	set_points[0] = 0;
 196:Core/Src/main.cpp **** 	set_points[1] = 0;
 197:Core/Src/main.cpp ****         while(1)
 198:Core/Src/main.cpp **** 	{
 199:Core/Src/main.cpp **** 		tune(set_points, sampling_period);
 200:Core/Src/main.cpp **** 	}
 201:Core/Src/main.cpp ****         /* USER CODE END 3 */
 202:Core/Src/main.cpp **** }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 5


 203:Core/Src/main.cpp **** 
 204:Core/Src/main.cpp **** /**
 205:Core/Src/main.cpp ****   * @brief System Clock Configuration
 206:Core/Src/main.cpp ****   * @retval None
 207:Core/Src/main.cpp ****   */
 208:Core/Src/main.cpp **** void SystemClock_Config(void)
 209:Core/Src/main.cpp **** {
 210:Core/Src/main.cpp **** 
 211:Core/Src/main.cpp ****         RCC_OscInitTypeDef RCC_OscInitStruct;
 212:Core/Src/main.cpp ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 213:Core/Src/main.cpp **** 
 214:Core/Src/main.cpp ****         /**Configure the main internal regulator output voltage 
 215:Core/Src/main.cpp ****     */
 216:Core/Src/main.cpp ****         __HAL_RCC_PWR_CLK_ENABLE();
 217:Core/Src/main.cpp **** 
 218:Core/Src/main.cpp ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 219:Core/Src/main.cpp **** 
 220:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 221:Core/Src/main.cpp ****     */
 222:Core/Src/main.cpp ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 223:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 224:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 225:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 226:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
 227:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
 228:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 229:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 230:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 231:Core/Src/main.cpp ****         {
 232:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 233:Core/Src/main.cpp ****         }
 234:Core/Src/main.cpp **** 
 235:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 236:Core/Src/main.cpp ****     */
 237:Core/Src/main.cpp ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
 238:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 239:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 240:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 241:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 242:Core/Src/main.cpp **** 
 243:Core/Src/main.cpp ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 244:Core/Src/main.cpp ****         {
 245:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 246:Core/Src/main.cpp ****         }
 247:Core/Src/main.cpp **** 
 248:Core/Src/main.cpp ****         /**Configure the Systick interrupt time 
 249:Core/Src/main.cpp ****     */
 250:Core/Src/main.cpp ****         HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 251:Core/Src/main.cpp **** 
 252:Core/Src/main.cpp ****         /**Configure the Systick 
 253:Core/Src/main.cpp ****     */
 254:Core/Src/main.cpp ****         HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 255:Core/Src/main.cpp **** 
 256:Core/Src/main.cpp ****         /* SysTick_IRQn interrupt configuration */
 257:Core/Src/main.cpp ****         HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 258:Core/Src/main.cpp **** }
 259:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 6


 260:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 261:Core/Src/main.cpp **** 
 262:Core/Src/main.cpp **** /* USER CODE END 4 */
 263:Core/Src/main.cpp **** 
 264:Core/Src/main.cpp **** /**
 265:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 266:Core/Src/main.cpp ****   * @param  file: The file name as string.
 267:Core/Src/main.cpp ****   * @param  line: The line in file as a number.
 268:Core/Src/main.cpp ****   * @retval None
 269:Core/Src/main.cpp ****   */
 270:Core/Src/main.cpp **** void _Error_Handler(const char *file, int line)
 271:Core/Src/main.cpp **** {
  28              		.loc 1 271 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE179:
  40              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  41              		.align	1
  42              		.global	_Z18SystemClock_Configv
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z18SystemClock_Configv:
  49              	.LFB178:
 209:Core/Src/main.cpp **** 
  50              		.loc 1 209 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 209:Core/Src/main.cpp **** 
  54              		.loc 1 209 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB77:
 216:Core/Src/main.cpp **** 
  63              		.loc 1 216 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2A4B     		ldr	r3, .L9
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 7


  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE77:
  75              	.LBB78:
 218:Core/Src/main.cpp **** 
  76              		.loc 1 218 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 264B     		ldr	r3, .L9+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F48042 		orr	r2, r2, #16384
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F48043 		and	r3, r3, #16384
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE78:
 222:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 222 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 223:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 223 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 224:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 224 0
  94 003c 0222     		movs	r2, #2
  95 003e 0E92     		str	r2, [sp, #56]
 225:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
  96              		.loc 1 225 0
  97 0040 4FF48003 		mov	r3, #4194304
  98 0044 0F93     		str	r3, [sp, #60]
 226:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
  99              		.loc 1 226 0
 100 0046 0423     		movs	r3, #4
 101 0048 1093     		str	r3, [sp, #64]
 227:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 227 0
 103 004a A821     		movs	r1, #168
 104 004c 1191     		str	r1, [sp, #68]
 228:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 228 0
 106 004e 1292     		str	r2, [sp, #72]
 229:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 229 0
 108 0050 1393     		str	r3, [sp, #76]
 230:Core/Src/main.cpp ****         {
 109              		.loc 1 230 0
 110 0052 08A8     		add	r0, sp, #32
 111 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 112              	.LVL1:
 113 0058 20BB     		cbnz	r0, .L7
 237:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 114              		.loc 1 237 0
 115 005a 0F23     		movs	r3, #15
 116 005c 0393     		str	r3, [sp, #12]
 238:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 8


 117              		.loc 1 238 0
 118 005e 0223     		movs	r3, #2
 119 0060 0493     		str	r3, [sp, #16]
 239:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 120              		.loc 1 239 0
 121 0062 0023     		movs	r3, #0
 122 0064 0593     		str	r3, [sp, #20]
 240:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 123              		.loc 1 240 0
 124 0066 4FF4A053 		mov	r3, #5120
 125 006a 0693     		str	r3, [sp, #24]
 241:Core/Src/main.cpp **** 
 126              		.loc 1 241 0
 127 006c 4FF48053 		mov	r3, #4096
 128 0070 0793     		str	r3, [sp, #28]
 243:Core/Src/main.cpp ****         {
 129              		.loc 1 243 0
 130 0072 0521     		movs	r1, #5
 131 0074 03A8     		add	r0, sp, #12
 132 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 134 007a B8B9     		cbnz	r0, .L8
 250:Core/Src/main.cpp **** 
 135              		.loc 1 250 0
 136 007c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 137              	.LVL3:
 138 0080 0E4B     		ldr	r3, .L9+8
 139 0082 A3FB0030 		umull	r3, r0, r3, r0
 140 0086 8009     		lsrs	r0, r0, #6
 141 0088 FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL4:
 254:Core/Src/main.cpp **** 
 143              		.loc 1 254 0
 144 008c 0420     		movs	r0, #4
 145 008e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 146              	.LVL5:
 257:Core/Src/main.cpp **** }
 147              		.loc 1 257 0
 148 0092 0022     		movs	r2, #0
 149 0094 1146     		mov	r1, r2
 150 0096 4FF0FF30 		mov	r0, #-1
 151 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 152              	.LVL6:
 258:Core/Src/main.cpp **** 
 153              		.loc 1 258 0
 154 009e 15B0     		add	sp, sp, #84
 155              	.LCFI2:
 156              		.cfi_remember_state
 157              		.cfi_def_cfa_offset 4
 158              		@ sp needed
 159 00a0 5DF804FB 		ldr	pc, [sp], #4
 160              	.L7:
 161              	.LCFI3:
 162              		.cfi_restore_state
 232:Core/Src/main.cpp ****         }
 163              		.loc 1 232 0
 164 00a4 E821     		movs	r1, #232
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 9


 165 00a6 0648     		ldr	r0, .L9+12
 166 00a8 FFF7FEFF 		bl	_Error_Handler
 167              	.LVL7:
 168              	.L8:
 245:Core/Src/main.cpp ****         }
 169              		.loc 1 245 0
 170 00ac F521     		movs	r1, #245
 171 00ae 0448     		ldr	r0, .L9+12
 172 00b0 FFF7FEFF 		bl	_Error_Handler
 173              	.LVL8:
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 00b4 00380240 		.word	1073887232
 178 00b8 00700040 		.word	1073770496
 179 00bc D34D6210 		.word	274877907
 180 00c0 00000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE178:
 184              		.section	.text.main,"ax",%progbits
 185              		.align	1
 186              		.global	main
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	main:
 193              	.LFB177:
  91:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
 194              		.loc 1 91 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 16
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 70B5     		push	{r4, r5, r6, lr}
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 6, -8
 204              		.cfi_offset 14, -4
 205 0002 84B0     		sub	sp, sp, #16
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 32
  99:Core/Src/main.cpp **** 
 208              		.loc 1 99 0
 209 0004 FFF7FEFF 		bl	HAL_Init
 210              	.LVL9:
 106:Core/Src/main.cpp **** 
 211              		.loc 1 106 0
 212 0008 FFF7FEFF 		bl	_Z18SystemClock_Configv
 213              	.LVL10:
 113:Core/Src/main.cpp ****         MX_DMA_Init();
 214              		.loc 1 113 0
 215 000c FFF7FEFF 		bl	MX_GPIO_Init
 216              	.LVL11:
 114:Core/Src/main.cpp ****         MX_TIM3_Init();
 217              		.loc 1 114 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 10


 218 0010 FFF7FEFF 		bl	MX_DMA_Init
 219              	.LVL12:
 115:Core/Src/main.cpp ****         MX_TIM2_Init();
 220              		.loc 1 115 0
 221 0014 FFF7FEFF 		bl	MX_TIM3_Init
 222              	.LVL13:
 116:Core/Src/main.cpp ****         MX_TIM1_Init();
 223              		.loc 1 116 0
 224 0018 FFF7FEFF 		bl	MX_TIM2_Init
 225              	.LVL14:
 117:Core/Src/main.cpp ****         MX_TIM4_Init();
 226              		.loc 1 117 0
 227 001c FFF7FEFF 		bl	MX_TIM1_Init
 228              	.LVL15:
 118:Core/Src/main.cpp ****         MX_TIM8_Init();
 229              		.loc 1 118 0
 230 0020 FFF7FEFF 		bl	MX_TIM4_Init
 231              	.LVL16:
 119:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 232              		.loc 1 119 0
 233 0024 FFF7FEFF 		bl	MX_TIM8_Init
 234              	.LVL17:
 120:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 235              		.loc 1 120 0
 236 0028 FFF7FEFF 		bl	MX_USART1_UART_Init
 237              	.LVL18:
 121:Core/Src/main.cpp ****         MX_ADC1_Init();
 238              		.loc 1 121 0
 239 002c FFF7FEFF 		bl	MX_USART3_UART_Init
 240              	.LVL19:
 122:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 241              		.loc 1 122 0
 242 0030 FFF7FEFF 		bl	MX_ADC1_Init
 243              	.LVL20:
 125:Core/Src/main.cpp **** 
 244              		.loc 1 125 0
 245 0034 FFF7FEFF 		bl	_Z9robo_Initv
 246              	.LVL21:
 127:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 247              		.loc 1 127 0
 248 0038 7C48     		ldr	r0, .L53
 249 003a FFF7FEFF 		bl	puts
 250              	.LVL22:
 130:Core/Src/main.cpp **** 
 251              		.loc 1 130 0
 252 003e 7C4B     		ldr	r3, .L53+4
 253 0040 0FCB     		ldm	r3, {r0, r1, r2, r3}
 254 0042 04AC     		add	r4, sp, #16
 255 0044 04E90F00 		stmdb	r4, {r0, r1, r2, r3}
 256              	.LVL23:
 139:Core/Src/main.cpp ****         // uint32_t update_time = HAL_GetTick();
 257              		.loc 1 139 0
 258 0048 FFF7FEFF 		bl	HAL_GetTick
 259              	.LVL24:
 260 004c 0546     		mov	r5, r0
 261              	.LVL25:
 141:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 11


 262              		.loc 1 141 0
 263 004e FFF7FEFF 		bl	HAL_GetTick
 264              	.LVL26:
 265 0052 0646     		mov	r6, r0
 266              	.LVL27:
 267              	.L37:
 268              	.LBB79:
 269              	.LBB80:
 151:Core/Src/main.cpp **** 		{
 270              		.loc 1 151 0
 271 0054 FFF7FEFF 		bl	HAL_GetTick
 272              	.LVL28:
 273 0058 401B     		subs	r0, r0, r5
 274 005a 0F28     		cmp	r0, #15
 275 005c 11D8     		bhi	.L52
 276              	.L12:
 277              	.LBE80:
 187:Core/Src/main.cpp **** 		{
 278              		.loc 1 187 0
 279 005e FFF7FEFF 		bl	HAL_GetTick
 280              	.LVL29:
 281 0062 801B     		subs	r0, r0, r6
 282 0064 46F2A813 		movw	r3, #25000
 283 0068 9842     		cmp	r0, r3
 284 006a F3D9     		bls	.L37
 189:Core/Src/main.cpp ****                         break;
 285              		.loc 1 189 0
 286 006c 0F20     		movs	r0, #15
 287 006e FFF7FEFF 		bl	_Z9ramp_downm
 288              	.LVL30:
 289              	.LBE79:
 195:Core/Src/main.cpp **** 	set_points[1] = 0;
 290              		.loc 1 195 0
 291 0072 0023     		movs	r3, #0
 292 0074 0093     		str	r3, [sp]	@ float
 196:Core/Src/main.cpp ****         while(1)
 293              		.loc 1 196 0
 294 0076 0193     		str	r3, [sp, #4]	@ float
 295              	.L38:
 199:Core/Src/main.cpp **** 	}
 296              		.loc 1 199 0 discriminator 1
 297 0078 0F21     		movs	r1, #15
 298 007a 6846     		mov	r0, sp
 299 007c FFF7FEFF 		bl	_Z4tunePfm
 300              	.LVL31:
 301 0080 FAE7     		b	.L38
 302              	.L52:
 303              	.LBB142:
 304              	.LBB141:
 305              	.LBB81:
 153:Core/Src/main.cpp **** 			for(int i=0; i<2; i++)
 306              		.loc 1 153 0
 307 0082 FFF7FEFF 		bl	HAL_GetTick
 308              	.LVL32:
 309 0086 0546     		mov	r5, r0
 310              	.LVL33:
 311              	.LBB82:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 12


 154:Core/Src/main.cpp **** 			{
 312              		.loc 1 154 0
 313 0088 0024     		movs	r4, #0
 314              	.LVL34:
 315              	.L36:
 154:Core/Src/main.cpp **** 			{
 316              		.loc 1 154 0 is_stmt 0 discriminator 1
 317 008a 012C     		cmp	r4, #1
 318 008c 00F3C680 		bgt	.L13
 319              	.LBB83:
 156:Core/Src/main.cpp **** 				if(i==0)
 320              		.loc 1 156 0 is_stmt 1
 321 0090 6848     		ldr	r0, .L53+8
 322 0092 00EB0410 		add	r0, r0, r4, lsl #4
 323 0096 FFF7FEFF 		bl	_ZN5Wheel9get_AngleEv
 324              	.LVL35:
 157:Core/Src/main.cpp **** 				{
 325              		.loc 1 157 0
 326 009a 002C     		cmp	r4, #0
 327 009c 5FD1     		bne	.L14
 159:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.77932, 20*1.0738, 0);
 328              		.loc 1 159 0
 329 009e B5EEC00A 		vcmpe.f32	s0, #0
 330 00a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 331 00a6 1DDD     		ble	.L15
 159:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.77932, 20*1.0738, 0);
 332              		.loc 1 159 0 is_stmt 0 discriminator 1
 333 00a8 DFED637A 		vldr.32	s15, .L53+12
 334 00ac B4EEE70A 		vcmpe.f32	s0, s15
 335 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 336 00b4 16D5     		bpl	.L15
 337              	.LVL36:
 338              	.LBB84:
 339              	.LBB85:
 340              	.LBB86:
 341              		.file 2 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h **** public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0,0,0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p,i,d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
 342              		.loc 2 11 0 is_stmt 1
 343 00b6 614A     		ldr	r2, .L53+16
 344 00b8 2423     		movs	r3, #36
 345 00ba 03FB0423 		mla	r3, r3, r4, r2
 346              	.LVL37:
 347 00be 604A     		ldr	r2, .L53+20
 348 00c0 5A60     		str	r2, [r3, #4]	@ float
 349              	.LVL38:
 350              	.LBE86:
 351              	.LBE85:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 13


 352              	.LBB87:
 353              	.LBB88:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 354              		.loc 2 12 0
 355 00c2 604A     		ldr	r2, .L53+24
 356 00c4 9A60     		str	r2, [r3, #8]	@ float
 357              	.LVL39:
 358              	.LBE88:
 359              	.LBE87:
 360              	.LBB89:
 361              	.LBB90:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 362              		.loc 2 13 0
 363 00c6 0022     		movs	r2, #0
 364 00c8 DA60     		str	r2, [r3, #12]	@ float
 365              	.LVL40:
 366              	.L18:
 367              	.LBE90:
 368              	.LBE89:
 369              	.LBE84:
 167:Core/Src/main.cpp **** 				}
 370              		.loc 1 167 0
 371 00ca DFED5F7A 		vldr.32	s15, .L53+28
 372 00ce 20EE270A 		vmul.f32	s0, s0, s15
 373              	.LVL41:
 374 00d2 FDEEC07A 		vcvt.s32.f32	s15, s0
 375 00d6 17EE901A 		vmov	r1, s15	@ int
 376 00da 5C48     		ldr	r0, .L53+32
 377 00dc FFF7FEFF 		bl	printf
 378              	.LVL42:
 379              	.L25:
 380              	.LBE83:
 154:Core/Src/main.cpp **** 			{
 381              		.loc 1 154 0 discriminator 2
 382 00e0 0134     		adds	r4, r4, #1
 383              	.LVL43:
 384 00e2 D2E7     		b	.L36
 385              	.LVL44:
 386              	.L15:
 387              	.LBB140:
 161:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(2.40851,20*1.4902, 0);
 388              		.loc 1 161 0
 389 00e4 DFED547A 		vldr.32	s15, .L53+12
 390 00e8 B4EEE70A 		vcmpe.f32	s0, s15
 391 00ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 392 00f0 11DD     		ble	.L19
 161:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(2.40851,20*1.4902, 0);
 393              		.loc 1 161 0 is_stmt 0 discriminator 1
 394 00f2 DFED577A 		vldr.32	s15, .L53+36
 395 00f6 B4EEE70A 		vcmpe.f32	s0, s15
 396 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 397 00fe 0AD5     		bpl	.L19
 398              	.LVL45:
 399              	.LBB91:
 400              	.LBB92:
 401              	.LBB93:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 14


 402              		.loc 2 11 0 is_stmt 1
 403 0100 4E4A     		ldr	r2, .L53+16
 404 0102 2423     		movs	r3, #36
 405 0104 03FB0423 		mla	r3, r3, r4, r2
 406              	.LVL46:
 407 0108 524A     		ldr	r2, .L53+40
 408 010a 5A60     		str	r2, [r3, #4]	@ float
 409              	.LVL47:
 410              	.LBE93:
 411              	.LBE92:
 412              	.LBB94:
 413              	.LBB95:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 414              		.loc 2 12 0
 415 010c 524A     		ldr	r2, .L53+44
 416 010e 9A60     		str	r2, [r3, #8]	@ float
 417              	.LVL48:
 418              	.LBE95:
 419              	.LBE94:
 420              	.LBB96:
 421              	.LBB97:
 422              		.loc 2 13 0
 423 0110 0022     		movs	r2, #0
 424 0112 DA60     		str	r2, [r3, #12]	@ float
 425              	.LVL49:
 426 0114 D9E7     		b	.L18
 427              	.LVL50:
 428              	.L19:
 429              	.LBE97:
 430              	.LBE96:
 431              	.LBE91:
 163:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.55038,20*1.4667, 0);
 432              		.loc 1 163 0
 433 0116 DFED4E7A 		vldr.32	s15, .L53+36
 434 011a B4EEE70A 		vcmpe.f32	s0, s15
 435 011e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 436 0122 11DD     		ble	.L22
 163:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.55038,20*1.4667, 0);
 437              		.loc 1 163 0 is_stmt 0 discriminator 1
 438 0124 DFED4D7A 		vldr.32	s15, .L53+48
 439 0128 B4EEE70A 		vcmpe.f32	s0, s15
 440 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 441 0130 0AD5     		bpl	.L22
 442              	.LVL51:
 443              	.LBB98:
 444              	.LBB99:
 445              	.LBB100:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 446              		.loc 2 11 0 is_stmt 1
 447 0132 424A     		ldr	r2, .L53+16
 448 0134 2423     		movs	r3, #36
 449 0136 03FB0423 		mla	r3, r3, r4, r2
 450              	.LVL52:
 451 013a 494A     		ldr	r2, .L53+52
 452 013c 5A60     		str	r2, [r3, #4]	@ float
 453              	.LVL53:
 454              	.LBE100:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 15


 455              	.LBE99:
 456              	.LBB101:
 457              	.LBB102:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 458              		.loc 2 12 0
 459 013e 494A     		ldr	r2, .L53+56
 460 0140 9A60     		str	r2, [r3, #8]	@ float
 461              	.LVL54:
 462              	.LBE102:
 463              	.LBE101:
 464              	.LBB103:
 465              	.LBB104:
 466              		.loc 2 13 0
 467 0142 0022     		movs	r2, #0
 468 0144 DA60     		str	r2, [r3, #12]	@ float
 469              	.LVL55:
 470 0146 C0E7     		b	.L18
 471              	.LVL56:
 472              	.L22:
 473              	.LBE104:
 474              	.LBE103:
 475              	.LBE98:
 476              	.LBB105:
 477              	.LBB106:
 478              	.LBB107:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 479              		.loc 2 11 0
 480 0148 3C4A     		ldr	r2, .L53+16
 481 014a 2423     		movs	r3, #36
 482 014c 03FB0423 		mla	r3, r3, r4, r2
 483              	.LVL57:
 484 0150 454A     		ldr	r2, .L53+60
 485 0152 5A60     		str	r2, [r3, #4]	@ float
 486              	.LVL58:
 487              	.LBE107:
 488              	.LBE106:
 489              	.LBB108:
 490              	.LBB109:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 491              		.loc 2 12 0
 492 0154 454A     		ldr	r2, .L53+64
 493 0156 9A60     		str	r2, [r3, #8]	@ float
 494              	.LVL59:
 495              	.LBE109:
 496              	.LBE108:
 497              	.LBB110:
 498              	.LBB111:
 499              		.loc 2 13 0
 500 0158 0022     		movs	r2, #0
 501 015a DA60     		str	r2, [r3, #12]	@ float
 502              	.LVL60:
 503 015c B5E7     		b	.L18
 504              	.LVL61:
 505              	.L14:
 506              	.LBE111:
 507              	.LBE110:
 508              	.LBE105:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 16


 171:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.74393,20*0.9668973, 0);
 509              		.loc 1 171 0
 510 015e B5EEC00A 		vcmpe.f32	s0, #0
 511 0162 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 512 0166 1CDD     		ble	.L26
 171:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.74393,20*0.9668973, 0);
 513              		.loc 1 171 0 is_stmt 0 discriminator 1
 514 0168 DFED337A 		vldr.32	s15, .L53+12
 515 016c B4EEE70A 		vcmpe.f32	s0, s15
 516 0170 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 517 0174 15D5     		bpl	.L26
 518              	.LVL62:
 519              	.LBB112:
 520              	.LBB113:
 521              	.LBB114:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 522              		.loc 2 11 0 is_stmt 1
 523 0176 314A     		ldr	r2, .L53+16
 524 0178 2423     		movs	r3, #36
 525 017a 03FB0423 		mla	r3, r3, r4, r2
 526              	.LVL63:
 527 017e 3C4A     		ldr	r2, .L53+68
 528 0180 5A60     		str	r2, [r3, #4]	@ float
 529              	.LVL64:
 530              	.LBE114:
 531              	.LBE113:
 532              	.LBB115:
 533              	.LBB116:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 534              		.loc 2 12 0
 535 0182 3C4A     		ldr	r2, .L53+72
 536 0184 9A60     		str	r2, [r3, #8]	@ float
 537              	.LVL65:
 538              	.LBE116:
 539              	.LBE115:
 540              	.LBB117:
 541              	.LBB118:
 542              		.loc 2 13 0
 543 0186 0022     		movs	r2, #0
 544 0188 DA60     		str	r2, [r3, #12]	@ float
 545              	.LVL66:
 546              	.L29:
 547              	.LBE118:
 548              	.LBE117:
 549              	.LBE112:
 179:Core/Src/main.cpp **** 				}
 550              		.loc 1 179 0
 551 018a DFED2F7A 		vldr.32	s15, .L53+28
 552 018e 20EE270A 		vmul.f32	s0, s0, s15
 553              	.LVL67:
 554 0192 FDEEC07A 		vcvt.s32.f32	s15, s0
 555 0196 17EE901A 		vmov	r1, s15	@ int
 556 019a 2C48     		ldr	r0, .L53+32
 557 019c FFF7FEFF 		bl	printf
 558              	.LVL68:
 559 01a0 9EE7     		b	.L25
 560              	.LVL69:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 17


 561              	.L26:
 173:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.82590,20*0.7767059,0);
 562              		.loc 1 173 0
 563 01a2 DFED257A 		vldr.32	s15, .L53+12
 564 01a6 B4EEE70A 		vcmpe.f32	s0, s15
 565 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 566 01ae 11DD     		ble	.L30
 173:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(1.82590,20*0.7767059,0);
 567              		.loc 1 173 0 is_stmt 0 discriminator 1
 568 01b0 DFED277A 		vldr.32	s15, .L53+36
 569 01b4 B4EEE70A 		vcmpe.f32	s0, s15
 570 01b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 571 01bc 0AD5     		bpl	.L30
 572              	.LVL70:
 573              	.LBB119:
 574              	.LBB120:
 575              	.LBB121:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 576              		.loc 2 11 0 is_stmt 1
 577 01be 1F4A     		ldr	r2, .L53+16
 578 01c0 2423     		movs	r3, #36
 579 01c2 03FB0423 		mla	r3, r3, r4, r2
 580              	.LVL71:
 581 01c6 2C4A     		ldr	r2, .L53+76
 582 01c8 5A60     		str	r2, [r3, #4]	@ float
 583              	.LVL72:
 584              	.LBE121:
 585              	.LBE120:
 586              	.LBB122:
 587              	.LBB123:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 588              		.loc 2 12 0
 589 01ca 2C4A     		ldr	r2, .L53+80
 590 01cc 9A60     		str	r2, [r3, #8]	@ float
 591              	.LVL73:
 592              	.LBE123:
 593              	.LBE122:
 594              	.LBB124:
 595              	.LBB125:
 596              		.loc 2 13 0
 597 01ce 0022     		movs	r2, #0
 598 01d0 DA60     		str	r2, [r3, #12]	@ float
 599              	.LVL74:
 600 01d2 DAE7     		b	.L29
 601              	.LVL75:
 602              	.L30:
 603              	.LBE125:
 604              	.LBE124:
 605              	.LBE119:
 175:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(2.52274,20*1.3564, 0);
 606              		.loc 1 175 0
 607 01d4 DFED1E7A 		vldr.32	s15, .L53+36
 608 01d8 B4EEE70A 		vcmpe.f32	s0, s15
 609 01dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 610 01e0 11DD     		ble	.L33
 175:Core/Src/main.cpp **** 						gDisc_PID[i].set_PID(2.52274,20*1.3564, 0);
 611              		.loc 1 175 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 18


 612 01e2 DFED1E7A 		vldr.32	s15, .L53+48
 613 01e6 B4EEE70A 		vcmpe.f32	s0, s15
 614 01ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 615 01ee 0AD5     		bpl	.L33
 616              	.LVL76:
 617              	.LBB126:
 618              	.LBB127:
 619              	.LBB128:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 620              		.loc 2 11 0 is_stmt 1
 621 01f0 124A     		ldr	r2, .L53+16
 622 01f2 2423     		movs	r3, #36
 623 01f4 03FB0423 		mla	r3, r3, r4, r2
 624              	.LVL77:
 625 01f8 214A     		ldr	r2, .L53+84
 626 01fa 5A60     		str	r2, [r3, #4]	@ float
 627              	.LVL78:
 628              	.LBE128:
 629              	.LBE127:
 630              	.LBB129:
 631              	.LBB130:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 632              		.loc 2 12 0
 633 01fc 214A     		ldr	r2, .L53+88
 634 01fe 9A60     		str	r2, [r3, #8]	@ float
 635              	.LVL79:
 636              	.LBE130:
 637              	.LBE129:
 638              	.LBB131:
 639              	.LBB132:
 640              		.loc 2 13 0
 641 0200 0022     		movs	r2, #0
 642 0202 DA60     		str	r2, [r3, #12]	@ float
 643              	.LVL80:
 644 0204 C1E7     		b	.L29
 645              	.LVL81:
 646              	.L33:
 647              	.LBE132:
 648              	.LBE131:
 649              	.LBE126:
 650              	.LBB133:
 651              	.LBB134:
 652              	.LBB135:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 653              		.loc 2 11 0
 654 0206 0D4A     		ldr	r2, .L53+16
 655 0208 2423     		movs	r3, #36
 656 020a 03FB0423 		mla	r3, r3, r4, r2
 657              	.LVL82:
 658 020e 1E4A     		ldr	r2, .L53+92
 659 0210 5A60     		str	r2, [r3, #4]	@ float
 660              	.LVL83:
 661              	.LBE135:
 662              	.LBE134:
 663              	.LBB136:
 664              	.LBB137:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 19


 665              		.loc 2 12 0
 666 0212 1E4A     		ldr	r2, .L53+96
 667 0214 9A60     		str	r2, [r3, #8]	@ float
 668              	.LVL84:
 669              	.LBE137:
 670              	.LBE136:
 671              	.LBB138:
 672              	.LBB139:
 673              		.loc 2 13 0
 674 0216 0022     		movs	r2, #0
 675 0218 DA60     		str	r2, [r3, #12]	@ float
 676              	.LVL85:
 677 021a B6E7     		b	.L29
 678              	.LVL86:
 679              	.L13:
 680              	.LBE139:
 681              	.LBE138:
 682              	.LBE133:
 683              	.LBE140:
 684              	.LBE82:
 183:Core/Src/main.cpp **** 			
 685              		.loc 1 183 0
 686 021c 1C48     		ldr	r0, .L53+100
 687 021e FFF7FEFF 		bl	printf
 688              	.LVL87:
 185:Core/Src/main.cpp ****                 }
 689              		.loc 1 185 0
 690 0222 0F21     		movs	r1, #15
 691 0224 6846     		mov	r0, sp
 692 0226 FFF7FEFF 		bl	_Z4tunePfm
 693              	.LVL88:
 694              	.LBE81:
 695 022a 18E7     		b	.L12
 696              	.L54:
 697              		.align	2
 698              	.L53:
 699 022c 00000000 		.word	.LC2
 700 0230 00000000 		.word	.LANCHOR0
 701 0234 00000000 		.word	gWheels
 702 0238 0000B442 		.word	1119092736
 703 023c 00000000 		.word	gDisc_PID
 704 0240 C2C0E33F 		.word	1071890626
 705 0244 D9CEAB41 		.word	1101778649
 706 0248 00007A44 		.word	1148846080
 707 024c 10000000 		.word	.LC3
 708 0250 00003443 		.word	1127481344
 709 0254 07251A40 		.word	1075455239
 710 0258 986EEE41 		.word	1106144920
 711 025c 00008743 		.word	1132920832
 712 0260 DA72C63F 		.word	1069970138
 713 0264 08ACEA41 		.word	1105898504
 714 0268 C8EFD53F 		.word	1070985160
 715 026c B75F7741 		.word	1098342327
 716 0270 1939DF3F 		.word	1071593753
 717 0274 1DB49A41 		.word	1100657693
 718 0278 17B7E93F 		.word	1072281367
 719 027c BF8B7841 		.word	1098419135
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 20


 720 0280 92742140 		.word	1075934354
 721 0284 2506D941 		.word	1104741925
 722 0288 41B7DB3F 		.word	1071363905
 723 028c 5C8F8241 		.word	1099075420
 724 0290 18000000 		.word	.LC4
 725              	.LBE141:
 726              	.LBE142:
 727              		.cfi_endproc
 728              	.LFE177:
 730              		.section	.text.assert_failed,"ax",%progbits
 731              		.align	1
 732              		.global	assert_failed
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv4-sp-d16
 738              	assert_failed:
 739              	.LFB180:
 272:Core/Src/main.cpp ****         /* USER CODE BEGIN Error_Handler_Debug */
 273:Core/Src/main.cpp ****         /* User can add his own implementation to report the HAL error return state */
 274:Core/Src/main.cpp ****         while (1)
 275:Core/Src/main.cpp ****         {
 276:Core/Src/main.cpp ****         }
 277:Core/Src/main.cpp ****         /* USER CODE END Error_Handler_Debug */
 278:Core/Src/main.cpp **** }
 279:Core/Src/main.cpp **** 
 280:Core/Src/main.cpp **** #ifdef USE_FULL_ASSERT
 281:Core/Src/main.cpp **** /**
 282:Core/Src/main.cpp ****   * @brief  Reports the name of the source file and the source line number
 283:Core/Src/main.cpp ****   *         where the assert_param error has occurred.
 284:Core/Src/main.cpp ****   * @param  file: pointer to the source file name
 285:Core/Src/main.cpp ****   * @param  line: assert_param error line source number
 286:Core/Src/main.cpp ****   * @retval None
 287:Core/Src/main.cpp ****   */
 288:Core/Src/main.cpp **** void assert_failed(uint8_t *file, uint32_t line)
 289:Core/Src/main.cpp **** {
 740              		.loc 1 289 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745              	.LVL89:
 290:Core/Src/main.cpp ****         /* USER CODE BEGIN 6 */
 291:Core/Src/main.cpp ****         /* User can add his own implementation to report the file name and line number,
 292:Core/Src/main.cpp ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 293:Core/Src/main.cpp ****         /* USER CODE END 6 */
 294:Core/Src/main.cpp **** }
 746              		.loc 1 294 0
 747 0000 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE180:
 751              		.global	gSendDataFlagReceived
 752              		.section	.rodata
 753              		.align	2
 754              		.set	.LANCHOR0,. + 0
 755              	.LC0:
 756 0000 000080C0 		.word	-1065353216
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 21


 757 0004 000080C0 		.word	-1065353216
 758 0008 00000000 		.word	0
 759 000c 00000000 		.word	0
 760              		.section	.bss.gSendDataFlagReceived,"aw",%nobits
 763              	gSendDataFlagReceived:
 764 0000 00       		.space	1
 765              		.section	.rodata._Z18SystemClock_Configv.str1.4,"aMS",%progbits,1
 766              		.align	2
 767              	.LC1:
 768 0000 436F7265 		.ascii	"Core/Src/main.cpp\000"
 768      2F537263 
 768      2F6D6169 
 768      6E2E6370 
 768      7000
 769              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 770              		.align	2
 771              	.LC2:
 772 0000 48656C6C 		.ascii	"Hello World!!\000"
 772      6F20576F 
 772      726C6421 
 772      2100
 773 000e 0000     		.space	2
 774              	.LC3:
 775 0010 256C6420 		.ascii	"%ld   \000"
 775      202000
 776 0017 00       		.space	1
 777              	.LC4:
 778 0018 090900   		.ascii	"\011\011\000"
 779              		.text
 780              	.Letext0:
 781              		.file 3 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 782              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 783              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 784              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core
 785              		.file 7 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 786              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 787              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 788              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 789              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 790              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 791              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 792              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 793              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 794              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 795              		.file 17 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 796              		.file 18 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 797              		.file 19 "Core/Inc\\periphs/adc.h"
 798              		.file 20 "Core/Inc\\periphs/tim.h"
 799              		.file 21 "Core/Inc\\periphs/usart.h"
 800              		.file 22 "Core/Inc\\devs/wheel.h"
 801              		.file 23 "Core/Inc/robot/robo_init.h"
 802              		.file 24 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 803              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 804              		.file 26 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 805              		.file 27 "Core/Inc\\periphs/gpio.h"
 806              		.file 28 "Core/Inc\\periphs/dma.h"
 807              		.file 29 "Core/Inc/robot/play.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 22


ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:18     .text._Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:25     .text._Error_Handler:00000000 _Error_Handler
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:41     .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:48     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:177    .text._Z18SystemClock_Configv:000000b4 $d
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:185    .text.main:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:192    .text.main:00000000 main
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:699    .text.main:0000022c $d
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:731    .text.assert_failed:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:738    .text.assert_failed:00000000 assert_failed
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:763    .bss.gSendDataFlagReceived:00000000 gSendDataFlagReceived
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:753    .rodata:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:764    .bss.gSendDataFlagReceived:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:766    .rodata._Z18SystemClock_Configv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccGoMmpa.s:770    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM3_Init
MX_TIM2_Init
MX_TIM1_Init
MX_TIM4_Init
MX_TIM8_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_ADC1_Init
_Z9robo_Initv
puts
HAL_GetTick
_Z9ramp_downm
_Z4tunePfm
_ZN5Wheel9get_AngleEv
printf
gWheels
gDisc_PID
