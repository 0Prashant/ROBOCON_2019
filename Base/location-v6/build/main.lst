ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB506:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** 
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.cpp ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.cpp ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.cpp ****   * inserted by the user or by software development tools
  11:Core/Src/main.cpp ****   * are owned by their respective copyright owners.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.cpp ****   *
  15:Core/Src/main.cpp ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.cpp ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.cpp ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.cpp ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.cpp ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.cpp ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.cpp ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.cpp ****   *      without specific prior written permission.
  25:Core/Src/main.cpp ****   *
  26:Core/Src/main.cpp ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.cpp ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.cpp ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.cpp ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.cpp ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.cpp ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 2


  32:Core/Src/main.cpp ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.cpp ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.cpp ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.cpp ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.cpp ****   *
  37:Core/Src/main.cpp ****   ******************************************************************************
  38:Core/Src/main.cpp ****   */
  39:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  40:Core/Src/main.cpp **** #include "main.h"
  41:Core/Src/main.cpp **** #include "stm32f4xx_hal.h"
  42:Core/Src/main.cpp **** //#include "adc.h"
  43:Core/Src/main.cpp **** #include "dma.h"
  44:Core/Src/main.cpp **** #include "i2c.h"
  45:Core/Src/main.cpp **** #include "spi.h"
  46:Core/Src/main.cpp **** #include "tim.h"
  47:Core/Src/main.cpp **** #include "usart.h"
  48:Core/Src/main.cpp **** #include "gpio.h"
  49:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  50:Core/Src/main.cpp **** #include "robot/play.h"
  51:Core/Src/main.cpp **** #include "robot/robo_init.h"
  52:Core/Src/main.cpp **** #include "utils/i2c_utils.h"
  53:Core/Src/main.cpp **** /* USER CODE END Includes */
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.cpp **** 
  57:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  58:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  59:Core/Src/main.cpp **** 
  60:Core/Src/main.cpp **** /* USER CODE END PV */
  61:Core/Src/main.cpp **** 
  62:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.cpp **** void SystemClock_Config(void);
  64:Core/Src/main.cpp **** 
  65:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/main.cpp **** 
  68:Core/Src/main.cpp **** /* USER CODE END PFP */
  69:Core/Src/main.cpp **** 
  70:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.cpp **** 
  72:Core/Src/main.cpp **** volatile bool gSendBufferDataFlag = false;
  73:Core/Src/main.cpp **** 
  74:Core/Src/main.cpp **** #ifdef __cplusplus
  75:Core/Src/main.cpp **** extern "C" {
  76:Core/Src/main.cpp **** #endif // __cplusplus
  77:Core/Src/main.cpp **** 
  78:Core/Src/main.cpp **** extern void send_AllData();
  79:Core/Src/main.cpp **** 
  80:Core/Src/main.cpp **** #ifdef __cplusplus
  81:Core/Src/main.cpp **** }
  82:Core/Src/main.cpp **** #endif // __cplusplus
  83:Core/Src/main.cpp **** 
  84:Core/Src/main.cpp **** /* USER CODE END 0 */
  85:Core/Src/main.cpp **** 
  86:Core/Src/main.cpp **** /**
  87:Core/Src/main.cpp ****   * @brief  The application entry point.
  88:Core/Src/main.cpp ****   *
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 3


  89:Core/Src/main.cpp ****   * @retval None  
  90:Core/Src/main.cpp ****   */
  91:Core/Src/main.cpp **** int main(void)
  92:Core/Src/main.cpp **** {
  93:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
  94:Core/Src/main.cpp **** 
  95:Core/Src/main.cpp ****         /* USER CODE END 1 */
  96:Core/Src/main.cpp **** 
  97:Core/Src/main.cpp ****         /* MCU Configuration----------------------------------------------------------*/
  98:Core/Src/main.cpp **** 
  99:Core/Src/main.cpp ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.cpp ****         HAL_Init();
 101:Core/Src/main.cpp **** 
 102:Core/Src/main.cpp ****         /* USER CODE BEGIN Init */
 103:Core/Src/main.cpp **** 
 104:Core/Src/main.cpp ****         /* USER CODE END Init */
 105:Core/Src/main.cpp **** 
 106:Core/Src/main.cpp ****         /* Configure the system clock */
 107:Core/Src/main.cpp ****         SystemClock_Config();
 108:Core/Src/main.cpp **** 
 109:Core/Src/main.cpp ****         /* USER CODE BEGIN SysInit */
 110:Core/Src/main.cpp **** 
 111:Core/Src/main.cpp ****         /* USER CODE END SysInit */
 112:Core/Src/main.cpp **** 
 113:Core/Src/main.cpp ****         /* Initialize all configured peripherals */
 114:Core/Src/main.cpp ****         MX_GPIO_Init();
 115:Core/Src/main.cpp ****         MX_DMA_Init();
 116:Core/Src/main.cpp ****         MX_I2C3_Init();
 117:Core/Src/main.cpp ****         MX_USART2_UART_Init();
 118:Core/Src/main.cpp ****         MX_I2C1_Init();
 119:Core/Src/main.cpp ****         MX_UART4_Init();
 120:Core/Src/main.cpp ****         //MX_ADC1_Init();
 121:Core/Src/main.cpp ****         MX_SPI1_Init();
 122:Core/Src/main.cpp ****         MX_I2C2_Init();
 123:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 124:Core/Src/main.cpp ****         MX_USART6_UART_Init();
 125:Core/Src/main.cpp ****         MX_TIM2_Init();
 126:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 127:Core/Src/main.cpp **** 
 128:Core/Src/main.cpp ****         const uint32_t sampling_period = 10; // milli-seconds
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****         HAL_Delay(100);
 131:Core/Src/main.cpp ****         if (HAL_I2C_IsDeviceReady(&hi2c1, 0x3C, 1, 10) != HAL_OK) {
 132:Core/Src/main.cpp ****                 HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
 133:Core/Src/main.cpp ****         }
 134:Core/Src/main.cpp ****         if (HAL_I2C_IsDeviceReady(&hi2c1, 0xD0, 1, 10) != HAL_OK) {
 135:Core/Src/main.cpp ****                 HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
 136:Core/Src/main.cpp ****         }
 137:Core/Src/main.cpp ****         // print_I2C_Addresses(&hi2c1);
 138:Core/Src/main.cpp ****         robo_Init(sampling_period);
 139:Core/Src/main.cpp **** 
 140:Core/Src/main.cpp ****         const char * greet = "timeStamp, x, y, z, yaw, velocity, angleOfAttack\n";
 141:Core/Src/main.cpp ****         printf(greet);
 142:Core/Src/main.cpp ****         HAL_Delay(2000);
 143:Core/Src/main.cpp ****         setup(sampling_period);
 144:Core/Src/main.cpp **** 
 145:Core/Src/main.cpp ****         HAL_Delay(100);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 4


 146:Core/Src/main.cpp ****         /* USER CODE END 2 */
 147:Core/Src/main.cpp **** 
 148:Core/Src/main.cpp ****         /* Infinite loop */
 149:Core/Src/main.cpp ****         /* USER CODE BEGIN WHILE */
 150:Core/Src/main.cpp ****         float null_data[] = {0, 0, 0, 0};
 151:Core/Src/main.cpp ****         uint32_t sample = HAL_GetTick();
 152:Core/Src/main.cpp ****         uint32_t brake = HAL_GetTick();
 153:Core/Src/main.cpp ****         HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
 154:Core/Src/main.cpp ****         while (1)
 155:Core/Src/main.cpp ****         {
 156:Core/Src/main.cpp ****                 /* USER CODE END WHILE */
 157:Core/Src/main.cpp **** 
 158:Core/Src/main.cpp ****                 /* USER CODE BEGIN 3 */
 159:Core/Src/main.cpp ****                 play(sampling_period);
 160:Core/Src/main.cpp ****                 /* if (HAL_GetTick() - sample > sampling_period) {
 161:Core/Src/main.cpp ****                         sample = HAL_GetTick();
 162:Core/Src/main.cpp ****                         play(sampling_period);
 163:Core/Src/main.cpp ****                         // printf("%ld\n", (int32_t)(HAL_GetTick() - sample));
 164:Core/Src/main.cpp ****                 }
 165:Core/Src/main.cpp **** 
 166:Core/Src/main.cpp ****                 if (HAL_GetTick() - brake > 12000) {
 167:Core/Src/main.cpp ****                         send_WheelerPack(null_data);
 168:Core/Src/main.cpp ****                         break;
 169:Core/Src/main.cpp ****                 }*/
 170:Core/Src/main.cpp ****                 send_WheelerPack(null_data);
 171:Core/Src/main.cpp ****                 HAL_Delay(10);
 172:Core/Src/main.cpp ****                 send_WheelerPack(null_data);
 173:Core/Src/main.cpp ****                 
 174:Core/Src/main.cpp ****                 while(1)
 175:Core/Src/main.cpp ****                 {
 176:Core/Src/main.cpp **** 
 177:Core/Src/main.cpp ****                 }
 178:Core/Src/main.cpp ****         }
 179:Core/Src/main.cpp ****         HAL_Delay(500);
 180:Core/Src/main.cpp ****         gSendBufferDataFlag = false;
 181:Core/Src/main.cpp ****         while (!gSendBufferDataFlag);
 182:Core/Src/main.cpp ****         send_AllData();
 183:Core/Src/main.cpp ****         while (1);
 184:Core/Src/main.cpp ****         /* USER CODE END 3 */
 185:Core/Src/main.cpp **** }
 186:Core/Src/main.cpp **** 
 187:Core/Src/main.cpp **** /**
 188:Core/Src/main.cpp ****   * @brief System Clock Configuration
 189:Core/Src/main.cpp ****   * @retval None
 190:Core/Src/main.cpp ****   */
 191:Core/Src/main.cpp **** void SystemClock_Config(void)
 192:Core/Src/main.cpp **** {
 193:Core/Src/main.cpp **** 
 194:Core/Src/main.cpp ****         RCC_OscInitTypeDef RCC_OscInitStruct;
 195:Core/Src/main.cpp ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 196:Core/Src/main.cpp **** 
 197:Core/Src/main.cpp ****         /**Configure the main internal regulator output voltage 
 198:Core/Src/main.cpp ****     */
 199:Core/Src/main.cpp ****         __HAL_RCC_PWR_CLK_ENABLE();
 200:Core/Src/main.cpp **** 
 201:Core/Src/main.cpp ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 202:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 5


 203:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 204:Core/Src/main.cpp ****     */
 205:Core/Src/main.cpp ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 206:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 207:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 208:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 209:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 8;
 210:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 336;
 211:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 212:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 213:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 214:Core/Src/main.cpp ****         {
 215:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 216:Core/Src/main.cpp ****         }
 217:Core/Src/main.cpp **** 
 218:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 219:Core/Src/main.cpp ****     */
 220:Core/Src/main.cpp ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
 221:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 222:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 223:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 224:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 225:Core/Src/main.cpp **** 
 226:Core/Src/main.cpp ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 227:Core/Src/main.cpp ****         {
 228:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 229:Core/Src/main.cpp ****         }
 230:Core/Src/main.cpp **** 
 231:Core/Src/main.cpp ****         /**Configure the Systick interrupt time 
 232:Core/Src/main.cpp ****     */
 233:Core/Src/main.cpp ****         HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 234:Core/Src/main.cpp **** 
 235:Core/Src/main.cpp ****         /**Configure the Systick 
 236:Core/Src/main.cpp ****     */
 237:Core/Src/main.cpp ****         HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 238:Core/Src/main.cpp **** 
 239:Core/Src/main.cpp ****         /* SysTick_IRQn interrupt configuration */
 240:Core/Src/main.cpp ****         HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 241:Core/Src/main.cpp **** }
 242:Core/Src/main.cpp **** 
 243:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 244:Core/Src/main.cpp **** /* USER CODE END 4 */
 245:Core/Src/main.cpp **** 
 246:Core/Src/main.cpp **** /**
 247:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 248:Core/Src/main.cpp ****   * @param  file: The file name as string.
 249:Core/Src/main.cpp ****   * @param  line: The line in file as a number.
 250:Core/Src/main.cpp ****   * @retval None
 251:Core/Src/main.cpp ****   */
 252:Core/Src/main.cpp **** void _Error_Handler(const char *file, int line)
 253:Core/Src/main.cpp **** {
  28              		.loc 1 253 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 6


  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 254:Core/Src/main.cpp ****         /* USER CODE BEGIN Error_Handler_Debug */
 255:Core/Src/main.cpp ****         /* User can add his own implementation to report the HAL error return state */
 256:Core/Src/main.cpp ****         printf(file);
  39              		.loc 1 256 0
  40 0002 FFF7FEFF 		bl	printf
  41              	.LVL1:
  42              	.L2:
  43 0006 FEE7     		b	.L2
  44              		.cfi_endproc
  45              	.LFE506:
  47              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  48              		.align	1
  49              		.global	_Z18SystemClock_Configv
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu fpv4-sp-d16
  55              	_Z18SystemClock_Configv:
  56              	.LFB505:
 192:Core/Src/main.cpp **** 
  57              		.loc 1 192 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 80
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 00B5     		push	{lr}
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 14, -4
  65 0002 95B0     		sub	sp, sp, #84
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 88
  68              	.LBB2:
 199:Core/Src/main.cpp **** 
  69              		.loc 1 199 0
  70 0004 0021     		movs	r1, #0
  71 0006 0191     		str	r1, [sp, #4]
  72 0008 2B4B     		ldr	r3, .L10
  73 000a 1A6C     		ldr	r2, [r3, #64]
  74 000c 42F08052 		orr	r2, r2, #268435456
  75 0010 1A64     		str	r2, [r3, #64]
  76 0012 1B6C     		ldr	r3, [r3, #64]
  77 0014 03F08053 		and	r3, r3, #268435456
  78 0018 0193     		str	r3, [sp, #4]
  79 001a 019B     		ldr	r3, [sp, #4]
  80              	.LBE2:
  81              	.LBB3:
 201:Core/Src/main.cpp **** 
  82              		.loc 1 201 0
  83 001c 0291     		str	r1, [sp, #8]
  84 001e 274B     		ldr	r3, .L10+4
  85 0020 1A68     		ldr	r2, [r3]
  86 0022 42F48042 		orr	r2, r2, #16384
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 7


  87 0026 1A60     		str	r2, [r3]
  88 0028 1B68     		ldr	r3, [r3]
  89 002a 03F48043 		and	r3, r3, #16384
  90 002e 0293     		str	r3, [sp, #8]
  91 0030 029B     		ldr	r3, [sp, #8]
  92              	.LBE3:
 205:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  93              		.loc 1 205 0
  94 0032 0123     		movs	r3, #1
  95 0034 0893     		str	r3, [sp, #32]
 206:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  96              		.loc 1 206 0
  97 0036 4FF48033 		mov	r3, #65536
  98 003a 0993     		str	r3, [sp, #36]
 207:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  99              		.loc 1 207 0
 100 003c 0223     		movs	r3, #2
 101 003e 0E93     		str	r3, [sp, #56]
 208:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 8;
 102              		.loc 1 208 0
 103 0040 4FF48002 		mov	r2, #4194304
 104 0044 0F92     		str	r2, [sp, #60]
 209:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 336;
 105              		.loc 1 209 0
 106 0046 0822     		movs	r2, #8
 107 0048 1092     		str	r2, [sp, #64]
 210:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 108              		.loc 1 210 0
 109 004a 4FF4A872 		mov	r2, #336
 110 004e 1192     		str	r2, [sp, #68]
 211:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 111              		.loc 1 211 0
 112 0050 1293     		str	r3, [sp, #72]
 212:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 113              		.loc 1 212 0
 114 0052 0423     		movs	r3, #4
 115 0054 1393     		str	r3, [sp, #76]
 213:Core/Src/main.cpp ****         {
 116              		.loc 1 213 0
 117 0056 08A8     		add	r0, sp, #32
 118 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 119              	.LVL2:
 120 005c 20BB     		cbnz	r0, .L8
 220:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 121              		.loc 1 220 0
 122 005e 0F23     		movs	r3, #15
 123 0060 0393     		str	r3, [sp, #12]
 221:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 124              		.loc 1 221 0
 125 0062 0223     		movs	r3, #2
 126 0064 0493     		str	r3, [sp, #16]
 222:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 127              		.loc 1 222 0
 128 0066 0023     		movs	r3, #0
 129 0068 0593     		str	r3, [sp, #20]
 223:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 130              		.loc 1 223 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 8


 131 006a 4FF4A053 		mov	r3, #5120
 132 006e 0693     		str	r3, [sp, #24]
 224:Core/Src/main.cpp **** 
 133              		.loc 1 224 0
 134 0070 4FF48053 		mov	r3, #4096
 135 0074 0793     		str	r3, [sp, #28]
 226:Core/Src/main.cpp ****         {
 136              		.loc 1 226 0
 137 0076 0521     		movs	r1, #5
 138 0078 03A8     		add	r0, sp, #12
 139 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 140              	.LVL3:
 141 007e B8B9     		cbnz	r0, .L9
 233:Core/Src/main.cpp **** 
 142              		.loc 1 233 0
 143 0080 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 144              	.LVL4:
 145 0084 0E4B     		ldr	r3, .L10+8
 146 0086 A3FB0030 		umull	r3, r0, r3, r0
 147 008a 8009     		lsrs	r0, r0, #6
 148 008c FFF7FEFF 		bl	HAL_SYSTICK_Config
 149              	.LVL5:
 237:Core/Src/main.cpp **** 
 150              		.loc 1 237 0
 151 0090 0420     		movs	r0, #4
 152 0092 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 153              	.LVL6:
 240:Core/Src/main.cpp **** }
 154              		.loc 1 240 0
 155 0096 0022     		movs	r2, #0
 156 0098 1146     		mov	r1, r2
 157 009a 4FF0FF30 		mov	r0, #-1
 158 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 159              	.LVL7:
 241:Core/Src/main.cpp **** 
 160              		.loc 1 241 0
 161 00a2 15B0     		add	sp, sp, #84
 162              	.LCFI3:
 163              		.cfi_remember_state
 164              		.cfi_def_cfa_offset 4
 165              		@ sp needed
 166 00a4 5DF804FB 		ldr	pc, [sp], #4
 167              	.L8:
 168              	.LCFI4:
 169              		.cfi_restore_state
 215:Core/Src/main.cpp ****         }
 170              		.loc 1 215 0
 171 00a8 D721     		movs	r1, #215
 172 00aa 0648     		ldr	r0, .L10+12
 173 00ac FFF7FEFF 		bl	_Error_Handler
 174              	.LVL8:
 175              	.L9:
 228:Core/Src/main.cpp ****         }
 176              		.loc 1 228 0
 177 00b0 E421     		movs	r1, #228
 178 00b2 0448     		ldr	r0, .L10+12
 179 00b4 FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 9


 180              	.LVL9:
 181              	.L11:
 182              		.align	2
 183              	.L10:
 184 00b8 00380240 		.word	1073887232
 185 00bc 00700040 		.word	1073770496
 186 00c0 D34D6210 		.word	274877907
 187 00c4 00000000 		.word	.LC0
 188              		.cfi_endproc
 189              	.LFE505:
 191              		.section	.text.main,"ax",%progbits
 192              		.align	1
 193              		.global	main
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	main:
 200              	.LFB504:
  92:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
 201              		.loc 1 92 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 16
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 00B5     		push	{lr}
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 14, -4
 209 0002 85B0     		sub	sp, sp, #20
 210              	.LCFI6:
 211              		.cfi_def_cfa_offset 24
 100:Core/Src/main.cpp **** 
 212              		.loc 1 100 0
 213 0004 FFF7FEFF 		bl	HAL_Init
 214              	.LVL10:
 107:Core/Src/main.cpp **** 
 215              		.loc 1 107 0
 216 0008 FFF7FEFF 		bl	_Z18SystemClock_Configv
 217              	.LVL11:
 114:Core/Src/main.cpp ****         MX_DMA_Init();
 218              		.loc 1 114 0
 219 000c FFF7FEFF 		bl	MX_GPIO_Init
 220              	.LVL12:
 115:Core/Src/main.cpp ****         MX_I2C3_Init();
 221              		.loc 1 115 0
 222 0010 FFF7FEFF 		bl	MX_DMA_Init
 223              	.LVL13:
 116:Core/Src/main.cpp ****         MX_USART2_UART_Init();
 224              		.loc 1 116 0
 225 0014 FFF7FEFF 		bl	MX_I2C3_Init
 226              	.LVL14:
 117:Core/Src/main.cpp ****         MX_I2C1_Init();
 227              		.loc 1 117 0
 228 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 229              	.LVL15:
 118:Core/Src/main.cpp ****         MX_UART4_Init();
 230              		.loc 1 118 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 10


 231 001c FFF7FEFF 		bl	MX_I2C1_Init
 232              	.LVL16:
 119:Core/Src/main.cpp ****         //MX_ADC1_Init();
 233              		.loc 1 119 0
 234 0020 FFF7FEFF 		bl	MX_UART4_Init
 235              	.LVL17:
 121:Core/Src/main.cpp ****         MX_I2C2_Init();
 236              		.loc 1 121 0
 237 0024 FFF7FEFF 		bl	MX_SPI1_Init
 238              	.LVL18:
 122:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 239              		.loc 1 122 0
 240 0028 FFF7FEFF 		bl	MX_I2C2_Init
 241              	.LVL19:
 123:Core/Src/main.cpp ****         MX_USART6_UART_Init();
 242              		.loc 1 123 0
 243 002c FFF7FEFF 		bl	MX_USART3_UART_Init
 244              	.LVL20:
 124:Core/Src/main.cpp ****         MX_TIM2_Init();
 245              		.loc 1 124 0
 246 0030 FFF7FEFF 		bl	MX_USART6_UART_Init
 247              	.LVL21:
 125:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 248              		.loc 1 125 0
 249 0034 FFF7FEFF 		bl	MX_TIM2_Init
 250              	.LVL22:
 130:Core/Src/main.cpp ****         if (HAL_I2C_IsDeviceReady(&hi2c1, 0x3C, 1, 10) != HAL_OK) {
 251              		.loc 1 130 0
 252 0038 6420     		movs	r0, #100
 253 003a FFF7FEFF 		bl	HAL_Delay
 254              	.LVL23:
 131:Core/Src/main.cpp ****                 HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
 255              		.loc 1 131 0
 256 003e 0A23     		movs	r3, #10
 257 0040 0122     		movs	r2, #1
 258 0042 3C21     		movs	r1, #60
 259 0044 2248     		ldr	r0, .L19
 260 0046 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 261              	.LVL24:
 262 004a 90BB     		cbnz	r0, .L17
 263              	.L13:
 134:Core/Src/main.cpp ****                 HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
 264              		.loc 1 134 0
 265 004c 0A23     		movs	r3, #10
 266 004e 0122     		movs	r2, #1
 267 0050 D021     		movs	r1, #208
 268 0052 1F48     		ldr	r0, .L19
 269 0054 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 270              	.LVL25:
 271 0058 90BB     		cbnz	r0, .L18
 272              	.L14:
 138:Core/Src/main.cpp **** 
 273              		.loc 1 138 0
 274 005a 0A20     		movs	r0, #10
 275 005c FFF7FEFF 		bl	_Z9robo_Initm
 276              	.LVL26:
 141:Core/Src/main.cpp ****         HAL_Delay(2000);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 11


 277              		.loc 1 141 0
 278 0060 1C48     		ldr	r0, .L19+4
 279 0062 FFF7FEFF 		bl	puts
 280              	.LVL27:
 142:Core/Src/main.cpp ****         setup(sampling_period);
 281              		.loc 1 142 0
 282 0066 4FF4FA60 		mov	r0, #2000
 283 006a FFF7FEFF 		bl	HAL_Delay
 284              	.LVL28:
 143:Core/Src/main.cpp **** 
 285              		.loc 1 143 0
 286 006e 0A20     		movs	r0, #10
 287 0070 FFF7FEFF 		bl	_Z5setupm
 288              	.LVL29:
 145:Core/Src/main.cpp ****         /* USER CODE END 2 */
 289              		.loc 1 145 0
 290 0074 6420     		movs	r0, #100
 291 0076 FFF7FEFF 		bl	HAL_Delay
 292              	.LVL30:
 150:Core/Src/main.cpp ****         uint32_t sample = HAL_GetTick();
 293              		.loc 1 150 0
 294 007a 0023     		movs	r3, #0
 295 007c 0093     		str	r3, [sp]
 296 007e 0193     		str	r3, [sp, #4]
 297 0080 0293     		str	r3, [sp, #8]
 298 0082 0393     		str	r3, [sp, #12]
 151:Core/Src/main.cpp ****         uint32_t brake = HAL_GetTick();
 299              		.loc 1 151 0
 300 0084 FFF7FEFF 		bl	HAL_GetTick
 301              	.LVL31:
 152:Core/Src/main.cpp ****         HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
 302              		.loc 1 152 0
 303 0088 FFF7FEFF 		bl	HAL_GetTick
 304              	.LVL32:
 153:Core/Src/main.cpp ****         while (1)
 305              		.loc 1 153 0
 306 008c 0122     		movs	r2, #1
 307 008e 4FF40041 		mov	r1, #32768
 308 0092 1148     		ldr	r0, .L19+8
 309 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 310              	.LVL33:
 159:Core/Src/main.cpp ****                 /* if (HAL_GetTick() - sample > sampling_period) {
 311              		.loc 1 159 0
 312 0098 0A20     		movs	r0, #10
 313 009a FFF7FEFF 		bl	_Z4playm
 314              	.LVL34:
 170:Core/Src/main.cpp ****                 HAL_Delay(10);
 315              		.loc 1 170 0
 316 009e 6846     		mov	r0, sp
 317 00a0 FFF7FEFF 		bl	_Z16send_WheelerPackPf
 318              	.LVL35:
 171:Core/Src/main.cpp ****                 send_WheelerPack(null_data);
 319              		.loc 1 171 0
 320 00a4 0A20     		movs	r0, #10
 321 00a6 FFF7FEFF 		bl	HAL_Delay
 322              	.LVL36:
 172:Core/Src/main.cpp ****                 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 12


 323              		.loc 1 172 0
 324 00aa 6846     		mov	r0, sp
 325 00ac FFF7FEFF 		bl	_Z16send_WheelerPackPf
 326              	.LVL37:
 327              	.L15:
 328 00b0 FEE7     		b	.L15
 329              	.LVL38:
 330              	.L17:
 132:Core/Src/main.cpp ****         }
 331              		.loc 1 132 0
 332 00b2 0122     		movs	r2, #1
 333 00b4 4FF48041 		mov	r1, #16384
 334 00b8 0748     		ldr	r0, .L19+8
 335 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 336              	.LVL39:
 337 00be C5E7     		b	.L13
 338              	.L18:
 135:Core/Src/main.cpp ****         }
 339              		.loc 1 135 0
 340 00c0 0122     		movs	r2, #1
 341 00c2 4FF48041 		mov	r1, #16384
 342 00c6 0448     		ldr	r0, .L19+8
 343 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 344              	.LVL40:
 345 00cc C5E7     		b	.L14
 346              	.L20:
 347 00ce 00BF     		.align	2
 348              	.L19:
 349 00d0 00000000 		.word	hi2c1
 350 00d4 00000000 		.word	.LC1
 351 00d8 000C0240 		.word	1073875968
 352              		.cfi_endproc
 353              	.LFE504:
 355              		.section	.text.assert_failed,"ax",%progbits
 356              		.align	1
 357              		.global	assert_failed
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu fpv4-sp-d16
 363              	assert_failed:
 364              	.LFB507:
 257:Core/Src/main.cpp ****         while (1)
 258:Core/Src/main.cpp ****         {
 259:Core/Src/main.cpp ****         }
 260:Core/Src/main.cpp ****         /* USER CODE END Error_Handler_Debug */
 261:Core/Src/main.cpp **** }
 262:Core/Src/main.cpp **** 
 263:Core/Src/main.cpp **** #ifdef USE_FULL_ASSERT
 264:Core/Src/main.cpp **** /**
 265:Core/Src/main.cpp ****   * @brief  Reports the name of the source file and the source line number
 266:Core/Src/main.cpp ****   *         where the assert_param error has occurred.
 267:Core/Src/main.cpp ****   * @param  file: pointer to the source file name
 268:Core/Src/main.cpp ****   * @param  line: assert_param error line source number
 269:Core/Src/main.cpp ****   * @retval None
 270:Core/Src/main.cpp ****   */
 271:Core/Src/main.cpp **** void assert_failed(uint8_t *file, uint32_t line)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 13


 272:Core/Src/main.cpp **** {
 365              		.loc 1 272 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370              	.LVL41:
 273:Core/Src/main.cpp ****         /* USER CODE BEGIN 6 */
 274:Core/Src/main.cpp ****         /* User can add his own implementation to report the file name and line number,
 275:Core/Src/main.cpp ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 276:Core/Src/main.cpp ****         /* USER CODE END 6 */
 277:Core/Src/main.cpp **** }
 371              		.loc 1 277 0
 372 0000 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE507:
 376              		.global	gSendBufferDataFlag
 377              		.section	.bss.gSendBufferDataFlag,"aw",%nobits
 380              	gSendBufferDataFlag:
 381 0000 00       		.space	1
 382              		.section	.rodata._Z18SystemClock_Configv.str1.4,"aMS",%progbits,1
 383              		.align	2
 384              	.LC0:
 385 0000 436F7265 		.ascii	"Core/Src/main.cpp\000"
 385      2F537263 
 385      2F6D6169 
 385      6E2E6370 
 385      7000
 386              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 387              		.align	2
 388              	.LC1:
 389 0000 74696D65 		.ascii	"timeStamp, x, y, z, yaw, velocity, angleOfAttack\000"
 389      5374616D 
 389      702C2078 
 389      2C20792C 
 389      207A2C20 
 390              		.text
 391              	.Letext0:
 392              		.file 2 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 393              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 394              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 395              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core
 396              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 397              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 398              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 399              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 400              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 401              		.file 11 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 402              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 403              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 404              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 405              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 406              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 407              		.file 17 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 408              		.file 18 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 409              		.file 19 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 410              		.file 20 "Core/Inc\\periphs/i2c.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 14


 411              		.file 21 "Core/Inc\\periphs/spi.h"
 412              		.file 22 "Core/Inc\\periphs/tim.h"
 413              		.file 23 "Core/Inc\\periphs/usart.h"
 414              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 415              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 416              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 417              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 418              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 419              		.file 29 "Core/Inc/utils/mat.h"
 420              		.file 30 "Core/Inc/utils/filter.h"
 421              		.file 31 "Core/Inc/utils/filter_algorithm.h"
 422              		.file 32 "Core/Inc/devs/mpu6050.h"
 423              		.file 33 "Core/Inc/utils/vec3.h"
 424              		.file 34 "Core/Inc/devs/a4988.h"
 425              		.file 35 "Core/Inc/devs/hmc5883.h"
 426              		.file 36 "Core/Inc/devs/encoder.h"
 427              		.file 37 "Core/Inc\\devs/wheeler.h"
 428              		.file 38 "Core/Inc/robot/devs_config.h"
 429              		.file 39 "Core/Inc/utils/kalman.h"
 430              		.file 40 "Core/Inc/robot/robo_init.h"
 431              		.file 41 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 432              		.file 42 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 433              		.file 43 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 434              		.file 44 "Core/Inc\\periphs/gpio.h"
 435              		.file 45 "Core/Inc\\periphs/dma.h"
 436              		.file 46 "Core/Inc/robot/play.h"
 437              		.file 47 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cclkl134.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:18     .text._Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:25     .text._Error_Handler:00000000 _Error_Handler
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:48     .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:55     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:184    .text._Z18SystemClock_Configv:000000b8 $d
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:192    .text.main:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:199    .text.main:00000000 main
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:349    .text.main:000000d0 $d
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:356    .text.assert_failed:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:363    .text.assert_failed:00000000 assert_failed
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:380    .bss.gSendBufferDataFlag:00000000 gSendBufferDataFlag
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:381    .bss.gSendBufferDataFlag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:383    .rodata._Z18SystemClock_Configv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cclkl134.s:387    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
printf
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C3_Init
MX_USART2_UART_Init
MX_I2C1_Init
MX_UART4_Init
MX_SPI1_Init
MX_I2C2_Init
MX_USART3_UART_Init
MX_USART6_UART_Init
MX_TIM2_Init
HAL_Delay
HAL_I2C_IsDeviceReady
_Z9robo_Initm
puts
_Z5setupm
HAL_GetTick
HAL_GPIO_WritePin
_Z4playm
_Z16send_WheelerPackPf
hi2c1
