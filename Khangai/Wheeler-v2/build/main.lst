ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB179:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** 
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.cpp ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.cpp ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.cpp ****   * inserted by the user or by software development tools
  11:Core/Src/main.cpp ****   * are owned by their respective copyright owners.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.cpp ****   *
  15:Core/Src/main.cpp ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.cpp ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.cpp ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.cpp ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.cpp ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.cpp ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.cpp ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.cpp ****   *      without specific prior written permission.
  25:Core/Src/main.cpp ****   *
  26:Core/Src/main.cpp ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.cpp ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.cpp ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.cpp ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.cpp ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.cpp ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 2


  32:Core/Src/main.cpp ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.cpp ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.cpp ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.cpp ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.cpp ****   *
  37:Core/Src/main.cpp ****   ******************************************************************************
  38:Core/Src/main.cpp ****   */
  39:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  40:Core/Src/main.cpp **** #include "main.h"
  41:Core/Src/main.cpp **** #include "stm32f4xx_hal.h"
  42:Core/Src/main.cpp **** #include "adc.h"
  43:Core/Src/main.cpp **** #include "dma.h"
  44:Core/Src/main.cpp **** #include "tim.h"
  45:Core/Src/main.cpp **** #include "usart.h"
  46:Core/Src/main.cpp **** #include "gpio.h"
  47:Core/Src/main.cpp **** 
  48:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  49:Core/Src/main.cpp **** #include "robot/robo_init.h"
  50:Core/Src/main.cpp **** #include "robot/play.h"
  51:Core/Src/main.cpp **** #include "utils/pid.h"
  52:Core/Src/main.cpp **** /* USER CODE END Includes */
  53:Core/Src/main.cpp **** 
  54:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.cpp **** 
  56:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  57:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.cpp **** 
  59:Core/Src/main.cpp **** /* USER CODE END PV */
  60:Core/Src/main.cpp **** 
  61:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.cpp **** void SystemClock_Config(void);
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.cpp **** 
  67:Core/Src/main.cpp **** /* USER CODE END PFP */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.cpp **** bool gSendDataFlagReceived = false;
  71:Core/Src/main.cpp **** extern Discrete_PID gDisc_PID[4];
  72:Core/Src/main.cpp **** 
  73:Core/Src/main.cpp **** #ifdef __cplusplus
  74:Core/Src/main.cpp **** extern "C" {
  75:Core/Src/main.cpp **** #endif // __cplusplus
  76:Core/Src/main.cpp **** 
  77:Core/Src/main.cpp **** extern void send_AllData();
  78:Core/Src/main.cpp **** 
  79:Core/Src/main.cpp **** #ifdef __cplusplus
  80:Core/Src/main.cpp **** }
  81:Core/Src/main.cpp **** #endif // __cplusplus
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp **** /* USER CODE END 0 */
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp **** /**
  86:Core/Src/main.cpp ****   * @brief  The application entry point.
  87:Core/Src/main.cpp ****   *
  88:Core/Src/main.cpp ****   * @retval None
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 3


  89:Core/Src/main.cpp ****   */ 
  90:Core/Src/main.cpp **** int main(void)
  91:Core/Src/main.cpp ****   {
  92:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****         /* USER CODE END 1 */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp ****         /* MCU Configuration----------------------------------------------------------*/
  97:Core/Src/main.cpp **** 
  98:Core/Src/main.cpp ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Core/Src/main.cpp ****         HAL_Init();
 100:Core/Src/main.cpp **** 
 101:Core/Src/main.cpp ****         /* USER CODE BEGIN Init */
 102:Core/Src/main.cpp **** 
 103:Core/Src/main.cpp ****         /* USER CODE END Init */
 104:Core/Src/main.cpp **** 
 105:Core/Src/main.cpp ****         /* Configure the system clock */
 106:Core/Src/main.cpp ****         SystemClock_Config();
 107:Core/Src/main.cpp **** 
 108:Core/Src/main.cpp ****         /* USER CODE BEGIN SysInit */
 109:Core/Src/main.cpp **** 
 110:Core/Src/main.cpp ****         /* USER CODE END SysInit */
 111:Core/Src/main.cpp **** 
 112:Core/Src/main.cpp ****         /* Initialize all configured peripherals */
 113:Core/Src/main.cpp ****         MX_GPIO_Init();
 114:Core/Src/main.cpp ****         MX_DMA_Init();
 115:Core/Src/main.cpp ****         MX_TIM3_Init();
 116:Core/Src/main.cpp ****         MX_TIM2_Init();
 117:Core/Src/main.cpp ****         MX_TIM1_Init();
 118:Core/Src/main.cpp ****         MX_TIM4_Init();
 119:Core/Src/main.cpp ****         MX_TIM8_Init();
 120:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 121:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 122:Core/Src/main.cpp ****         MX_ADC1_Init();
 123:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 124:Core/Src/main.cpp **** 
 125:Core/Src/main.cpp ****         robo_Init();
 126:Core/Src/main.cpp **** 
 127:Core/Src/main.cpp ****         printf("Hello World!!\n");
 128:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****         float set_points[4] = { -5, -5, 0, 0 };
 131:Core/Src/main.cpp **** 
 132:Core/Src/main.cpp ****         /* USER CODE END 2 */
 133:Core/Src/main.cpp **** 
 134:Core/Src/main.cpp ****         /* Infinite loop */
 135:Core/Src/main.cpp ****         /* USER CODE BEGIN WHILE */
 136:Core/Src/main.cpp ****         const uint32_t sampling_period = 15;
 137:Core/Src/main.cpp ****         // const uint32_t updating_period = 12;
 138:Core/Src/main.cpp ****         const uint32_t brake_period = 2000;
 139:Core/Src/main.cpp ****         uint32_t sample_time = HAL_GetTick();
 140:Core/Src/main.cpp ****         // uint32_t update_time = HAL_GetTick();
 141:Core/Src/main.cpp ****         uint32_t brake_time = HAL_GetTick();
 142:Core/Src/main.cpp **** 	uint8_t n = 5;
 143:Core/Src/main.cpp **** 	uint8_t o = 1;
 144:Core/Src/main.cpp **** 	uint8_t p = 3;
 145:Core/Src/main.cpp **** 	uint8_t q = 1;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 4


 146:Core/Src/main.cpp **** 	//uint8_t r = 10;
 147:Core/Src/main.cpp **** 	HAL_Delay(3000);
 148:Core/Src/main.cpp **** 
 149:Core/Src/main.cpp **** 	
 150:Core/Src/main.cpp ****         while (1)
 151:Core/Src/main.cpp ****         {
 152:Core/Src/main.cpp ****                 if (HAL_GetTick() - sample_time >= sampling_period) 
 153:Core/Src/main.cpp **** 		{
 154:Core/Src/main.cpp ****                         sample_time = HAL_GetTick();			
 155:Core/Src/main.cpp **** 			tune(set_points, sampling_period);
 156:Core/Src/main.cpp ****                 }
 157:Core/Src/main.cpp **** 		if(HAL_GetTick() - brake_time > brake_period)
 158:Core/Src/main.cpp **** 		{
 159:Core/Src/main.cpp **** 			set_points[0] = 5;
 160:Core/Src/main.cpp **** 			set_points[1] = 5;
 161:Core/Src/main.cpp **** 		}
 162:Core/Src/main.cpp **** 		/*if((gWheels[0].rounds==n) && (gWheels[1].rounds==n))
 163:Core/Src/main.cpp **** 		{
 164:Core/Src/main.cpp **** 			gWheels[0].rounds = 0;
 165:Core/Src/main.cpp **** 			gWheels[1].rounds = 0;
 166:Core/Src/main.cpp **** 			break;
 167:Core/Src/main.cpp **** 		}*/	
 168:Core/Src/main.cpp ****                 /* USER CODE BEGIN 3 */
 169:Core/Src/main.cpp ****         }
 170:Core/Src/main.cpp **** 	while(1)
 171:Core/Src/main.cpp **** 	{
 172:Core/Src/main.cpp **** 		
 173:Core/Src/main.cpp **** 	}
 174:Core/Src/main.cpp **** 	/*set_points[0] = 0;
 175:Core/Src/main.cpp **** 	set_points[1] = -5;
 176:Core/Src/main.cpp ****         while (1)
 177:Core/Src/main.cpp ****         {
 178:Core/Src/main.cpp ****                 if (HAL_GetTick() - sample_time > sampling_period) 
 179:Core/Src/main.cpp **** 		{
 180:Core/Src/main.cpp ****                         sample_time = HAL_GetTick();			
 181:Core/Src/main.cpp **** 			tune(set_points, sampling_period);
 182:Core/Src/main.cpp ****                 }
 183:Core/Src/main.cpp **** 		if((gWheels[0].rounds==o) && (gWheels[1].rounds==o))
 184:Core/Src/main.cpp **** 		{
 185:Core/Src/main.cpp **** 			gWheels[0].rounds = 0;
 186:Core/Src/main.cpp **** 			gWheels[1].rounds = 0;
 187:Core/Src/main.cpp **** 			break;
 188:Core/Src/main.cpp **** 		}	
 189:Core/Src/main.cpp ****         }
 190:Core/Src/main.cpp **** 	set_points[0] = -5;
 191:Core/Src/main.cpp **** 	set_points[1] = -5;
 192:Core/Src/main.cpp ****         while (1)
 193:Core/Src/main.cpp ****         {
 194:Core/Src/main.cpp ****                 if (HAL_GetTick() - sample_time > sampling_period) 
 195:Core/Src/main.cpp **** 		{
 196:Core/Src/main.cpp ****                         sample_time = HAL_GetTick();			
 197:Core/Src/main.cpp **** 			tune(set_points, sampling_period);
 198:Core/Src/main.cpp ****                 }
 199:Core/Src/main.cpp **** 		if((gWheels[0].rounds==p) && (gWheels[1].rounds==p))
 200:Core/Src/main.cpp **** 		{
 201:Core/Src/main.cpp **** 			gWheels[0].rounds = 0;
 202:Core/Src/main.cpp **** 			gWheels[1].rounds = 0;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 5


 203:Core/Src/main.cpp **** 			break;
 204:Core/Src/main.cpp **** 		}	
 205:Core/Src/main.cpp ****         }
 206:Core/Src/main.cpp **** 	set_points[0] = 0;
 207:Core/Src/main.cpp **** 	set_points[1] = -5;
 208:Core/Src/main.cpp ****         while (1)
 209:Core/Src/main.cpp ****         {
 210:Core/Src/main.cpp ****                 if (HAL_GetTick() - sample_time > sampling_period) 
 211:Core/Src/main.cpp **** 		{
 212:Core/Src/main.cpp ****                         sample_time = HAL_GetTick();			
 213:Core/Src/main.cpp **** 			tune(set_points, sampling_period);
 214:Core/Src/main.cpp ****                 }
 215:Core/Src/main.cpp **** 		if((gWheels[0].rounds==q) && (gWheels[1].rounds==q))
 216:Core/Src/main.cpp **** 		{
 217:Core/Src/main.cpp **** 			gWheels[0].rounds = 0;
 218:Core/Src/main.cpp **** 			gWheels[1].rounds = 0;
 219:Core/Src/main.cpp **** 			break;
 220:Core/Src/main.cpp **** 		}	
 221:Core/Src/main.cpp ****         }*/
 222:Core/Src/main.cpp **** 	ramp_down(sampling_period);
 223:Core/Src/main.cpp ****         // send_AllData();
 224:Core/Src/main.cpp ****         /* USER CODE END 3 */
 225:Core/Src/main.cpp **** }
 226:Core/Src/main.cpp **** 
 227:Core/Src/main.cpp **** 
 228:Core/Src/main.cpp **** /**
 229:Core/Src/main.cpp ****   * @brief System Clock Configuration
 230:Core/Src/main.cpp ****   * @retval None
 231:Core/Src/main.cpp ****   */
 232:Core/Src/main.cpp **** void SystemClock_Config(void)
 233:Core/Src/main.cpp **** {
 234:Core/Src/main.cpp **** 
 235:Core/Src/main.cpp ****         RCC_OscInitTypeDef RCC_OscInitStruct;
 236:Core/Src/main.cpp ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 237:Core/Src/main.cpp **** 
 238:Core/Src/main.cpp ****         /**Configure the main internal regulator output voltage 
 239:Core/Src/main.cpp ****     */
 240:Core/Src/main.cpp ****         __HAL_RCC_PWR_CLK_ENABLE();
 241:Core/Src/main.cpp **** 
 242:Core/Src/main.cpp ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 243:Core/Src/main.cpp **** 
 244:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 245:Core/Src/main.cpp ****     */
 246:Core/Src/main.cpp ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 247:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 248:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 249:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 250:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
 251:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
 252:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 253:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 254:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 255:Core/Src/main.cpp ****         {
 256:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 257:Core/Src/main.cpp ****         }
 258:Core/Src/main.cpp **** 
 259:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 6


 260:Core/Src/main.cpp ****     */
 261:Core/Src/main.cpp ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
 262:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 263:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 264:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 265:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 266:Core/Src/main.cpp **** 
 267:Core/Src/main.cpp ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 268:Core/Src/main.cpp ****         {
 269:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 270:Core/Src/main.cpp ****         }
 271:Core/Src/main.cpp **** 
 272:Core/Src/main.cpp ****         /**Configure the Systick interrupt time 
 273:Core/Src/main.cpp ****     */
 274:Core/Src/main.cpp ****         HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 275:Core/Src/main.cpp **** 
 276:Core/Src/main.cpp ****         /**Configure the Systick 
 277:Core/Src/main.cpp ****     */
 278:Core/Src/main.cpp ****         HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 279:Core/Src/main.cpp **** 
 280:Core/Src/main.cpp ****         /* SysTick_IRQn interrupt configuration */
 281:Core/Src/main.cpp ****         HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 282:Core/Src/main.cpp **** }
 283:Core/Src/main.cpp **** 
 284:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 285:Core/Src/main.cpp **** 
 286:Core/Src/main.cpp **** /* USER CODE END 4 */
 287:Core/Src/main.cpp **** 
 288:Core/Src/main.cpp **** /**
 289:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 290:Core/Src/main.cpp ****   * @param  file: The file name as string.
 291:Core/Src/main.cpp ****   * @param  line: The line in file as a number.
 292:Core/Src/main.cpp ****   * @retval None
 293:Core/Src/main.cpp ****   */
 294:Core/Src/main.cpp **** void _Error_Handler(const char *file, int line)
 295:Core/Src/main.cpp **** {
  28              		.loc 1 295 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE179:
  40              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  41              		.align	1
  42              		.global	_Z18SystemClock_Configv
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z18SystemClock_Configv:
  49              	.LFB178:
 233:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 7


  50              		.loc 1 233 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 233:Core/Src/main.cpp **** 
  54              		.loc 1 233 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 240:Core/Src/main.cpp **** 
  63              		.loc 1 240 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2B4B     		ldr	r3, .L9
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 242:Core/Src/main.cpp **** 
  76              		.loc 1 242 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 274B     		ldr	r3, .L9+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F48042 		orr	r2, r2, #16384
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F48043 		and	r3, r3, #16384
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
 246:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 246 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 247:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 247 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 248:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 248 0
  94 003c 0222     		movs	r2, #2
  95 003e 0E92     		str	r2, [sp, #56]
 249:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
  96              		.loc 1 249 0
  97 0040 4FF48003 		mov	r3, #4194304
  98 0044 0F93     		str	r3, [sp, #60]
 250:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 8


  99              		.loc 1 250 0
 100 0046 0423     		movs	r3, #4
 101 0048 1093     		str	r3, [sp, #64]
 251:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 251 0
 103 004a A821     		movs	r1, #168
 104 004c 1191     		str	r1, [sp, #68]
 252:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 252 0
 106 004e 1292     		str	r2, [sp, #72]
 253:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 253 0
 108 0050 1393     		str	r3, [sp, #76]
 254:Core/Src/main.cpp ****         {
 109              		.loc 1 254 0
 110 0052 08A8     		add	r0, sp, #32
 111 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 112              	.LVL1:
 113 0058 20BB     		cbnz	r0, .L7
 261:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 114              		.loc 1 261 0
 115 005a 0F23     		movs	r3, #15
 116 005c 0393     		str	r3, [sp, #12]
 262:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 262 0
 118 005e 0223     		movs	r3, #2
 119 0060 0493     		str	r3, [sp, #16]
 263:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 120              		.loc 1 263 0
 121 0062 0023     		movs	r3, #0
 122 0064 0593     		str	r3, [sp, #20]
 264:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 123              		.loc 1 264 0
 124 0066 4FF4A053 		mov	r3, #5120
 125 006a 0693     		str	r3, [sp, #24]
 265:Core/Src/main.cpp **** 
 126              		.loc 1 265 0
 127 006c 4FF48053 		mov	r3, #4096
 128 0070 0793     		str	r3, [sp, #28]
 267:Core/Src/main.cpp ****         {
 129              		.loc 1 267 0
 130 0072 0521     		movs	r1, #5
 131 0074 03A8     		add	r0, sp, #12
 132 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 134 007a C0B9     		cbnz	r0, .L8
 274:Core/Src/main.cpp **** 
 135              		.loc 1 274 0
 136 007c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 137              	.LVL3:
 138 0080 0F4B     		ldr	r3, .L9+8
 139 0082 A3FB0030 		umull	r3, r0, r3, r0
 140 0086 8009     		lsrs	r0, r0, #6
 141 0088 FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL4:
 278:Core/Src/main.cpp **** 
 143              		.loc 1 278 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 9


 144 008c 0420     		movs	r0, #4
 145 008e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 146              	.LVL5:
 281:Core/Src/main.cpp **** }
 147              		.loc 1 281 0
 148 0092 0022     		movs	r2, #0
 149 0094 1146     		mov	r1, r2
 150 0096 4FF0FF30 		mov	r0, #-1
 151 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 152              	.LVL6:
 282:Core/Src/main.cpp **** 
 153              		.loc 1 282 0
 154 009e 15B0     		add	sp, sp, #84
 155              	.LCFI2:
 156              		.cfi_remember_state
 157              		.cfi_def_cfa_offset 4
 158              		@ sp needed
 159 00a0 5DF804FB 		ldr	pc, [sp], #4
 160              	.L7:
 161              	.LCFI3:
 162              		.cfi_restore_state
 256:Core/Src/main.cpp ****         }
 163              		.loc 1 256 0
 164 00a4 4FF48071 		mov	r1, #256
 165 00a8 0648     		ldr	r0, .L9+12
 166 00aa FFF7FEFF 		bl	_Error_Handler
 167              	.LVL7:
 168              	.L8:
 269:Core/Src/main.cpp ****         }
 169              		.loc 1 269 0
 170 00ae 40F20D11 		movw	r1, #269
 171 00b2 0448     		ldr	r0, .L9+12
 172 00b4 FFF7FEFF 		bl	_Error_Handler
 173              	.LVL8:
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 00b8 00380240 		.word	1073887232
 178 00bc 00700040 		.word	1073770496
 179 00c0 D34D6210 		.word	274877907
 180 00c4 00000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE178:
 184              		.section	.text.main,"ax",%progbits
 185              		.align	1
 186              		.global	main
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	main:
 193              	.LFB177:
  91:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
 194              		.loc 1 91 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 16
 197              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 10


 198 0000 30B5     		push	{r4, r5, lr}
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 12
 201              		.cfi_offset 4, -12
 202              		.cfi_offset 5, -8
 203              		.cfi_offset 14, -4
 204 0002 85B0     		sub	sp, sp, #20
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 32
  99:Core/Src/main.cpp **** 
 207              		.loc 1 99 0
 208 0004 FFF7FEFF 		bl	HAL_Init
 209              	.LVL9:
 106:Core/Src/main.cpp **** 
 210              		.loc 1 106 0
 211 0008 FFF7FEFF 		bl	_Z18SystemClock_Configv
 212              	.LVL10:
 113:Core/Src/main.cpp ****         MX_DMA_Init();
 213              		.loc 1 113 0
 214 000c FFF7FEFF 		bl	MX_GPIO_Init
 215              	.LVL11:
 114:Core/Src/main.cpp ****         MX_TIM3_Init();
 216              		.loc 1 114 0
 217 0010 FFF7FEFF 		bl	MX_DMA_Init
 218              	.LVL12:
 115:Core/Src/main.cpp ****         MX_TIM2_Init();
 219              		.loc 1 115 0
 220 0014 FFF7FEFF 		bl	MX_TIM3_Init
 221              	.LVL13:
 116:Core/Src/main.cpp ****         MX_TIM1_Init();
 222              		.loc 1 116 0
 223 0018 FFF7FEFF 		bl	MX_TIM2_Init
 224              	.LVL14:
 117:Core/Src/main.cpp ****         MX_TIM4_Init();
 225              		.loc 1 117 0
 226 001c FFF7FEFF 		bl	MX_TIM1_Init
 227              	.LVL15:
 118:Core/Src/main.cpp ****         MX_TIM8_Init();
 228              		.loc 1 118 0
 229 0020 FFF7FEFF 		bl	MX_TIM4_Init
 230              	.LVL16:
 119:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 231              		.loc 1 119 0
 232 0024 FFF7FEFF 		bl	MX_TIM8_Init
 233              	.LVL17:
 120:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 234              		.loc 1 120 0
 235 0028 FFF7FEFF 		bl	MX_USART1_UART_Init
 236              	.LVL18:
 121:Core/Src/main.cpp ****         MX_ADC1_Init();
 237              		.loc 1 121 0
 238 002c FFF7FEFF 		bl	MX_USART3_UART_Init
 239              	.LVL19:
 122:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 240              		.loc 1 122 0
 241 0030 FFF7FEFF 		bl	MX_ADC1_Init
 242              	.LVL20:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 11


 125:Core/Src/main.cpp **** 
 243              		.loc 1 125 0
 244 0034 FFF7FEFF 		bl	_Z9robo_Initv
 245              	.LVL21:
 127:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 246              		.loc 1 127 0
 247 0038 1448     		ldr	r0, .L17
 248 003a FFF7FEFF 		bl	puts
 249              	.LVL22:
 130:Core/Src/main.cpp **** 
 250              		.loc 1 130 0
 251 003e 144B     		ldr	r3, .L17+4
 252 0040 0FCB     		ldm	r3, {r0, r1, r2, r3}
 253 0042 04AC     		add	r4, sp, #16
 254 0044 04E90F00 		stmdb	r4, {r0, r1, r2, r3}
 255              	.LVL23:
 139:Core/Src/main.cpp ****         // uint32_t update_time = HAL_GetTick();
 256              		.loc 1 139 0
 257 0048 FFF7FEFF 		bl	HAL_GetTick
 258              	.LVL24:
 259 004c 0446     		mov	r4, r0
 260              	.LVL25:
 141:Core/Src/main.cpp **** 	uint8_t n = 5;
 261              		.loc 1 141 0
 262 004e FFF7FEFF 		bl	HAL_GetTick
 263              	.LVL26:
 264 0052 0546     		mov	r5, r0
 265              	.LVL27:
 147:Core/Src/main.cpp **** 
 266              		.loc 1 147 0
 267 0054 40F6B830 		movw	r0, #3000
 268              	.LVL28:
 269 0058 FFF7FEFF 		bl	HAL_Delay
 270              	.LVL29:
 271              	.L12:
 152:Core/Src/main.cpp **** 		{
 272              		.loc 1 152 0
 273 005c FFF7FEFF 		bl	HAL_GetTick
 274              	.LVL30:
 275 0060 001B     		subs	r0, r0, r4
 276 0062 0E28     		cmp	r0, #14
 277 0064 09D8     		bhi	.L16
 278              	.L13:
 157:Core/Src/main.cpp **** 		{
 279              		.loc 1 157 0
 280 0066 FFF7FEFF 		bl	HAL_GetTick
 281              	.LVL31:
 282 006a 401B     		subs	r0, r0, r5
 283 006c B0F5FA6F 		cmp	r0, #2000
 284 0070 F4D9     		bls	.L12
 159:Core/Src/main.cpp **** 			set_points[1] = 5;
 285              		.loc 1 159 0
 286 0072 084B     		ldr	r3, .L17+8
 287 0074 0093     		str	r3, [sp]	@ float
 160:Core/Src/main.cpp **** 		}
 288              		.loc 1 160 0
 289 0076 0193     		str	r3, [sp, #4]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 12


 290 0078 F0E7     		b	.L12
 291              	.L16:
 154:Core/Src/main.cpp **** 			tune(set_points, sampling_period);
 292              		.loc 1 154 0
 293 007a FFF7FEFF 		bl	HAL_GetTick
 294              	.LVL32:
 295 007e 0446     		mov	r4, r0
 296              	.LVL33:
 155:Core/Src/main.cpp ****                 }
 297              		.loc 1 155 0
 298 0080 0F21     		movs	r1, #15
 299 0082 6846     		mov	r0, sp
 300              	.LVL34:
 301 0084 FFF7FEFF 		bl	_Z4tunePfm
 302              	.LVL35:
 303 0088 EDE7     		b	.L13
 304              	.L18:
 305 008a 00BF     		.align	2
 306              	.L17:
 307 008c 00000000 		.word	.LC2
 308 0090 00000000 		.word	.LANCHOR0
 309 0094 0000A040 		.word	1084227584
 310              		.cfi_endproc
 311              	.LFE177:
 313              		.section	.text.assert_failed,"ax",%progbits
 314              		.align	1
 315              		.global	assert_failed
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	assert_failed:
 322              	.LFB180:
 296:Core/Src/main.cpp ****         /* USER CODE BEGIN Error_Handler_Debug */
 297:Core/Src/main.cpp ****         /* User can add his own implementation to report the HAL error return state */
 298:Core/Src/main.cpp ****         while (1)
 299:Core/Src/main.cpp ****         {
 300:Core/Src/main.cpp ****         }
 301:Core/Src/main.cpp ****         /* USER CODE END Error_Handler_Debug */
 302:Core/Src/main.cpp **** }
 303:Core/Src/main.cpp **** 
 304:Core/Src/main.cpp **** #ifdef USE_FULL_ASSERT
 305:Core/Src/main.cpp **** /**
 306:Core/Src/main.cpp ****   * @brief  Reports the name of the source file and the source line number
 307:Core/Src/main.cpp ****   *         where the assert_param error has occurred.
 308:Core/Src/main.cpp ****   * @param  file: pointer to the source file name
 309:Core/Src/main.cpp ****   * @param  line: assert_param error line source number
 310:Core/Src/main.cpp ****   * @retval None
 311:Core/Src/main.cpp ****   */
 312:Core/Src/main.cpp **** void assert_failed(uint8_t *file, uint32_t line)
 313:Core/Src/main.cpp **** {
 323              		.loc 1 313 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL36:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 13


 314:Core/Src/main.cpp ****         /* USER CODE BEGIN 6 */
 315:Core/Src/main.cpp ****         /* User can add his own implementation to report the file name and line number,
 316:Core/Src/main.cpp ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 317:Core/Src/main.cpp ****         /* USER CODE END 6 */
 318:Core/Src/main.cpp **** }
 329              		.loc 1 318 0
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE180:
 334              		.global	gSendDataFlagReceived
 335              		.section	.rodata
 336              		.align	2
 337              		.set	.LANCHOR0,. + 0
 338              	.LC0:
 339 0000 0000A0C0 		.word	-1063256064
 340 0004 0000A0C0 		.word	-1063256064
 341 0008 00000000 		.word	0
 342 000c 00000000 		.word	0
 343              		.section	.bss.gSendDataFlagReceived,"aw",%nobits
 346              	gSendDataFlagReceived:
 347 0000 00       		.space	1
 348              		.section	.rodata._Z18SystemClock_Configv.str1.4,"aMS",%progbits,1
 349              		.align	2
 350              	.LC1:
 351 0000 436F7265 		.ascii	"Core/Src/main.cpp\000"
 351      2F537263 
 351      2F6D6169 
 351      6E2E6370 
 351      7000
 352              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 353              		.align	2
 354              	.LC2:
 355 0000 48656C6C 		.ascii	"Hello World!!\000"
 355      6F20576F 
 355      726C6421 
 355      2100
 356              		.text
 357              	.Letext0:
 358              		.file 2 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 359              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 360              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 361              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core
 362              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 363              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 364              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 365              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 366              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 367              		.file 11 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 368              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 369              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 370              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 371              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 372              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 373              		.file 17 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 374              		.file 18 "Core/Inc\\periphs/adc.h"
 375              		.file 19 "Core/Inc\\periphs/tim.h"
 376              		.file 20 "Core/Inc\\periphs/usart.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 14


 377              		.file 21 "Core/Inc\\devs/wheel.h"
 378              		.file 22 "Core/Inc/robot/robo_init.h"
 379              		.file 23 "Core/Inc/utils/pid_algorithms.h"
 380              		.file 24 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 381              		.file 25 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 382              		.file 26 "Core/Inc\\periphs/gpio.h"
 383              		.file 27 "Core/Inc\\periphs/dma.h"
 384              		.file 28 "Core/Inc/robot/play.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:18     .text._Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:25     .text._Error_Handler:00000000 _Error_Handler
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:41     .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:48     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:177    .text._Z18SystemClock_Configv:000000b8 $d
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:185    .text.main:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:192    .text.main:00000000 main
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:307    .text.main:0000008c $d
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:314    .text.assert_failed:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:321    .text.assert_failed:00000000 assert_failed
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:346    .bss.gSendDataFlagReceived:00000000 gSendDataFlagReceived
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:336    .rodata:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:347    .bss.gSendDataFlagReceived:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:349    .rodata._Z18SystemClock_Configv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccHo7YJ6.s:353    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM3_Init
MX_TIM2_Init
MX_TIM1_Init
MX_TIM4_Init
MX_TIM8_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_ADC1_Init
_Z9robo_Initv
puts
HAL_GetTick
HAL_Delay
_Z4tunePfm
