ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"state_sensor.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN13Kalman_FilterD2Ev,"axG",%progbits,_ZN13Kalman_FilterD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN13Kalman_FilterD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN13Kalman_FilterD2Ev:
  26              	.LFB412:
  27              		.file 1 "Core/Inc/utils\\filter/kalman.h"
   1:Core/Inc/utils\filter/kalman.h **** /*
   2:Core/Inc/utils\filter/kalman.h ****  * kalman.h
   3:Core/Inc/utils\filter/kalman.h ****  * 
   4:Core/Inc/utils\filter/kalman.h ****  * Created : 11/13/2018
   5:Core/Inc/utils\filter/kalman.h ****  *  Author : n-is
   6:Core/Inc/utils\filter/kalman.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\filter/kalman.h ****  */
   8:Core/Inc/utils\filter/kalman.h **** 
   9:Core/Inc/utils\filter/kalman.h **** #ifndef _KALMAN_H_
  10:Core/Inc/utils\filter/kalman.h **** #define _KALMAN_H_
  11:Core/Inc/utils\filter/kalman.h **** 
  12:Core/Inc/utils\filter/kalman.h **** #include "mat.h"
  13:Core/Inc/utils\filter/kalman.h **** 
  14:Core/Inc/utils\filter/kalman.h **** class Kalman_Filter;
  15:Core/Inc/utils\filter/kalman.h **** 
  16:Core/Inc/utils\filter/kalman.h **** struct Kalman_Vars
  17:Core/Inc/utils\filter/kalman.h **** {
  18:Core/Inc/utils\filter/kalman.h **** public:
  19:Core/Inc/utils\filter/kalman.h ****         void set_F(const Mat &f) { F_ = f; }
  20:Core/Inc/utils\filter/kalman.h ****         void set_B(const Mat &b) { B_ = b; }
  21:Core/Inc/utils\filter/kalman.h ****         void set_H(const Mat &h) { H_ = h; }
  22:Core/Inc/utils\filter/kalman.h ****         void set_I(uint8_t n)    { I_ = Mat::eye(n); }
  23:Core/Inc/utils\filter/kalman.h ****         void set_P(const Mat &p) { P_ = p; }
  24:Core/Inc/utils\filter/kalman.h ****         void set_Q(const Mat &q) { Q_ = q; }
  25:Core/Inc/utils\filter/kalman.h ****         void set_R(const Mat &r) { R_ = r; }
  26:Core/Inc/utils\filter/kalman.h **** 
  27:Core/Inc/utils\filter/kalman.h ****         friend class Kalman_Filter;
  28:Core/Inc/utils\filter/kalman.h **** 
  29:Core/Inc/utils\filter/kalman.h **** private:
  30:Core/Inc/utils\filter/kalman.h ****         Mat F_, B_, H_, I_, P_, Q_, R_;
  31:Core/Inc/utils\filter/kalman.h **** };
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 2


  32:Core/Inc/utils\filter/kalman.h **** 
  33:Core/Inc/utils\filter/kalman.h **** // Trying a Simple Sensor Fusion : Gyroscope and (Accelerometer/Magnetometer)
  34:Core/Inc/utils\filter/kalman.h **** class Kalman_Filter
  35:Core/Inc/utils\filter/kalman.h **** {
  36:Core/Inc/utils\filter/kalman.h **** public:
  37:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter(Kalman_Vars *kv, int (*kv_init)(uint32_t)) :
  38:Core/Inc/utils\filter/kalman.h ****         x_(2,1), u_(1,1), z_(1,1), K_(2,1)
  39:Core/Inc/utils\filter/kalman.h ****         {
  40:Core/Inc/utils\filter/kalman.h ****                 is_first_ = true;
  41:Core/Inc/utils\filter/kalman.h ****                 kv_ = kv;
  42:Core/Inc/utils\filter/kalman.h ****                 kv_init_ = kv_init;
  43:Core/Inc/utils\filter/kalman.h ****         }
  44:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter(Kalman_Filter &&) = default;
  45:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter(const Kalman_Filter &) = default;
  46:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter &operator=(Kalman_Filter &&) = default;
  47:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter &operator=(const Kalman_Filter &) = default;
  48:Core/Inc/utils\filter/kalman.h ****         ~Kalman_Filter() { }
  28              		.loc 1 48 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 48 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE412:
  39              		.weak	_ZN13Kalman_FilterD1Ev
  40              		.thumb_set _ZN13Kalman_FilterD1Ev,_ZN13Kalman_FilterD2Ev
  41              		.section	.text._ZN12State_SensorD2Ev,"axG",%progbits,_ZN12State_SensorD5Ev,comdat
  42              		.align	1
  43              		.weak	_ZN12State_SensorD2Ev
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZN12State_SensorD2Ev:
  50              	.LFB425:
  51              		.file 2 "Core/Inc/parts/state_sensor.h"
   1:Core/Inc/parts/state_sensor.h **** /*
   2:Core/Inc/parts/state_sensor.h ****  * state_sensor.h
   3:Core/Inc/parts/state_sensor.h ****  *
   4:Core/Inc/parts/state_sensor.h ****  * Created : 1/2/2019
   5:Core/Inc/parts/state_sensor.h ****  *  Author : n-is
   6:Core/Inc/parts/state_sensor.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/parts/state_sensor.h ****  */
   8:Core/Inc/parts/state_sensor.h **** 
   9:Core/Inc/parts/state_sensor.h **** #ifndef _STATE_SENSOR_H_
  10:Core/Inc/parts/state_sensor.h **** #define _STATE_SENSOR_H_
  11:Core/Inc/parts/state_sensor.h **** 
  12:Core/Inc/parts/state_sensor.h **** #include "vec3.h"
  13:Core/Inc/parts/state_sensor.h **** #include "position_sensor.h"
  14:Core/Inc/parts/state_sensor.h **** 
  15:Core/Inc/parts/state_sensor.h **** // SOme forward declarations
  16:Core/Inc/parts/state_sensor.h **** enum class Field;
  17:Core/Inc/parts/state_sensor.h **** struct State_Vars;
  18:Core/Inc/parts/state_sensor.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 3


  19:Core/Inc/parts/state_sensor.h **** class State_Sensor final
  20:Core/Inc/parts/state_sensor.h **** {
  21:Core/Inc/parts/state_sensor.h **** public:
  22:Core/Inc/parts/state_sensor.h ****         State_Sensor(State_Sensor &&) = default;
  23:Core/Inc/parts/state_sensor.h ****         State_Sensor(const State_Sensor &) = default;
  24:Core/Inc/parts/state_sensor.h ****         State_Sensor &operator=(State_Sensor &&) = default;
  25:Core/Inc/parts/state_sensor.h ****         State_Sensor &operator=(const State_Sensor &) = default;
  26:Core/Inc/parts/state_sensor.h ****         ~State_Sensor() { }
  52              		.loc 2 26 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
  58              		.loc 2 26 0
  59 0000 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE425:
  63              		.weak	_ZN12State_SensorD1Ev
  64              		.thumb_set _ZN12State_SensorD1Ev,_ZN12State_SensorD2Ev
  65              		.section	.text._ZN10Exp_SmoothD2Ev,"axG",%progbits,_ZN10Exp_SmoothD5Ev,comdat
  66              		.align	1
  67              		.weak	_ZN10Exp_SmoothD2Ev
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	_ZN10Exp_SmoothD2Ev:
  74              	.LFB437:
  75              		.file 3 "Core/Inc/utils\\filter/smoothing_algorithm.h"
   1:Core/Inc/utils\filter/smoothing_algorithm.h **** 
   2:Core/Inc/utils\filter/smoothing_algorithm.h **** #ifndef _SMOOTHING_ALGORITHM_H_
   3:Core/Inc/utils\filter/smoothing_algorithm.h **** #define _SMOOTHING_ALGORITHM_H_
   4:Core/Inc/utils\filter/smoothing_algorithm.h **** 
   5:Core/Inc/utils\filter/smoothing_algorithm.h **** #include "vec3.h"
   6:Core/Inc/utils\filter/smoothing_algorithm.h **** 
   7:Core/Inc/utils\filter/smoothing_algorithm.h **** class Smoothing_Algorithm
   8:Core/Inc/utils\filter/smoothing_algorithm.h **** {
   9:Core/Inc/utils\filter/smoothing_algorithm.h **** public:
  10:Core/Inc/utils\filter/smoothing_algorithm.h ****         virtual float smooth(const float &input) = 0;
  11:Core/Inc/utils\filter/smoothing_algorithm.h ****         virtual ~Smoothing_Algorithm() { }
  12:Core/Inc/utils\filter/smoothing_algorithm.h **** };
  13:Core/Inc/utils\filter/smoothing_algorithm.h **** 
  14:Core/Inc/utils\filter/smoothing_algorithm.h **** class Exp_Smooth : public Smoothing_Algorithm
  15:Core/Inc/utils\filter/smoothing_algorithm.h **** {
  16:Core/Inc/utils\filter/smoothing_algorithm.h **** public:
  17:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth();
  18:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth(float alpha);
  19:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth(Exp_Smooth &&) = default;
  20:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth(const Exp_Smooth &) = default;
  21:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth &operator=(Exp_Smooth &&) = default;
  22:Core/Inc/utils\filter/smoothing_algorithm.h ****         Exp_Smooth &operator=(const Exp_Smooth &) = default;
  23:Core/Inc/utils\filter/smoothing_algorithm.h ****         ~Exp_Smooth() { }
  76              		.loc 3 23 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 4


  80              		@ link register save eliminated.
  81              	.LVL2:
  82              		.loc 3 23 0
  83 0000 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE437:
  87              		.weak	_ZN10Exp_SmoothD1Ev
  88              		.thumb_set _ZN10Exp_SmoothD1Ev,_ZN10Exp_SmoothD2Ev
  89              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  90              		.align	1
  91              		.weak	_ZN4Vec3IfED2Ev
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv4-sp-d16
  97              	_ZN4Vec3IfED2Ev:
  98              	.LFB558:
  99              		.file 4 "Core/Inc/utils\\math/vec3.h"
   1:Core/Inc/utils\math/vec3.h **** /*
   2:Core/Inc/utils\math/vec3.h ****  * vec3.h
   3:Core/Inc/utils\math/vec3.h ****  * 
   4:Core/Inc/utils\math/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils\math/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils\math/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\math/vec3.h ****  */
   8:Core/Inc/utils\math/vec3.h **** 
   9:Core/Inc/utils\math/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils\math/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils\math/vec3.h **** 
  12:Core/Inc/utils\math/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils\math/vec3.h **** #include "main.h"
  14:Core/Inc/utils\math/vec3.h **** 
  15:Core/Inc/utils\math/vec3.h **** template <typename T>
  16:Core/Inc/utils\math/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils\math/vec3.h **** {
  18:Core/Inc/utils\math/vec3.h ****         T temp = first;
  19:Core/Inc/utils\math/vec3.h ****         first = second;
  20:Core/Inc/utils\math/vec3.h ****         second = temp;
  21:Core/Inc/utils\math/vec3.h **** }
  22:Core/Inc/utils\math/vec3.h **** 
  23:Core/Inc/utils\math/vec3.h **** template <class T>
  24:Core/Inc/utils\math/vec3.h **** class Vec3
  25:Core/Inc/utils\math/vec3.h **** {
  26:Core/Inc/utils\math/vec3.h **** public:
  27:Core/Inc/utils\math/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils\math/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils\math/vec3.h **** 
  30:Core/Inc/utils\math/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils\math/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils\math/vec3.h ****         ~Vec3() { }
 100              		.loc 4 32 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.LVL3:
 106              		.loc 4 32 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 5


 107 0000 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE558:
 111              		.weak	_ZN4Vec3IfED1Ev
 112              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
 113              		.section	.text._ZN11Kalman_VarsD2Ev,"axG",%progbits,_ZN11Kalman_VarsD5Ev,comdat
 114              		.align	1
 115              		.weak	_ZN11Kalman_VarsD2Ev
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	_ZN11Kalman_VarsD2Ev:
 122              	.LFB584:
  16:Core/Inc/utils\filter/kalman.h **** {
 123              		.loc 1 16 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.LVL4:
  16:Core/Inc/utils\filter/kalman.h **** {
 129              		.loc 1 16 0
 130 0000 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE584:
 134              		.weak	_ZN11Kalman_VarsD1Ev
 135              		.thumb_set _ZN11Kalman_VarsD1Ev,_ZN11Kalman_VarsD2Ev
 136              		.section	.text._Z15init_OriFiltersm,"ax",%progbits
 137              		.align	1
 138              		.global	_Z15init_OriFiltersm
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
 144              	_Z15init_OriFiltersm:
 145              	.LFB535:
 146              		.file 5 "Core/Src/parts/state_sensor.cpp"
   1:Core/Src/parts/state_sensor.cpp **** /*
   2:Core/Src/parts/state_sensor.cpp ****  * state_sensor.cpp
   3:Core/Src/parts/state_sensor.cpp ****  *
   4:Core/Src/parts/state_sensor.cpp ****  * Created : 1/2/2019
   5:Core/Src/parts/state_sensor.cpp ****  *  Author : n-is
   6:Core/Src/parts/state_sensor.cpp ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Src/parts/state_sensor.cpp ****  */
   8:Core/Src/parts/state_sensor.cpp **** 
   9:Core/Src/parts/state_sensor.cpp **** #include "state_sensor.h"
  10:Core/Src/parts/state_sensor.cpp **** #include "smoothing_algorithm.h"
  11:Core/Src/parts/state_sensor.cpp **** #include "kalman.h"
  12:Core/Src/parts/state_sensor.cpp **** #include "devs_config.h"
  13:Core/Src/parts/state_sensor.cpp **** #include "robo_states.h"
  14:Core/Src/parts/state_sensor.cpp **** 
  15:Core/Src/parts/state_sensor.cpp **** #include "error.h"
  16:Core/Src/parts/state_sensor.cpp **** 
  17:Core/Src/parts/state_sensor.cpp **** #define _ENABLE_I2C_ERROR_DETECTION
  18:Core/Src/parts/state_sensor.cpp **** 
  19:Core/Src/parts/state_sensor.cpp **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 6


  20:Core/Src/parts/state_sensor.cpp **** static Vec3<float> gOmega_Bias;
  21:Core/Src/parts/state_sensor.cpp **** 
  22:Core/Src/parts/state_sensor.cpp **** int init_OriFilters(uint32_t dt_millis);
  23:Core/Src/parts/state_sensor.cpp **** 
  24:Core/Src/parts/state_sensor.cpp **** State_Sensor& State_Sensor::get_Instance()
  25:Core/Src/parts/state_sensor.cpp **** {
  26:Core/Src/parts/state_sensor.cpp ****         static State_Sensor sState_Sensor_Instance;
  27:Core/Src/parts/state_sensor.cpp **** 
  28:Core/Src/parts/state_sensor.cpp ****         PositionSensor &p_sens = PositionSensor::get_Instance();
  29:Core/Src/parts/state_sensor.cpp ****         sState_Sensor_Instance.p_sensor_ = &p_sens;
  30:Core/Src/parts/state_sensor.cpp **** 
  31:Core/Src/parts/state_sensor.cpp ****         return sState_Sensor_Instance;
  32:Core/Src/parts/state_sensor.cpp **** }
  33:Core/Src/parts/state_sensor.cpp **** 
  34:Core/Src/parts/state_sensor.cpp **** 
  35:Core/Src/parts/state_sensor.cpp **** /**
  36:Core/Src/parts/state_sensor.cpp ****  * @brief Function that initializes all the required components for the robot's
  37:Core/Src/parts/state_sensor.cpp ****  *        State Sensor(x, y and yaw)
  38:Core/Src/parts/state_sensor.cpp ****  * @retval 0 if inititialized properly
  39:Core/Src/parts/state_sensor.cpp ****  * 
  40:Core/Src/parts/state_sensor.cpp ****  * 
  41:Core/Src/parts/state_sensor.cpp ****  * <pre>
  42:Core/Src/parts/state_sensor.cpp ****  * Tasks performed by this function
  43:Core/Src/parts/state_sensor.cpp ****  * 1) Call the devices initializations in correct order
  44:Core/Src/parts/state_sensor.cpp ****  * 2) Call the software initializations for utilities like smoothies and filters
  45:Core/Src/parts/state_sensor.cpp ****  * </pre>
  46:Core/Src/parts/state_sensor.cpp ****  */
  47:Core/Src/parts/state_sensor.cpp **** //! Not yet implemented
  48:Core/Src/parts/state_sensor.cpp **** int State_Sensor::init(uint32_t dt_millis)
  49:Core/Src/parts/state_sensor.cpp **** {
  50:Core/Src/parts/state_sensor.cpp ****         IMU_Init();
  51:Core/Src/parts/state_sensor.cpp ****         Stepper_Init();
  52:Core/Src/parts/state_sensor.cpp ****         Lidars_Init();
  53:Core/Src/parts/state_sensor.cpp ****         
  54:Core/Src/parts/state_sensor.cpp **** 
  55:Core/Src/parts/state_sensor.cpp ****         bool mpu_is_ready(false), hmc_is_ready(false);
  56:Core/Src/parts/state_sensor.cpp ****         
  57:Core/Src/parts/state_sensor.cpp ****         // Read MPU6050 if it is ready to be read
  58:Core/Src/parts/state_sensor.cpp ****         if (MPU6050_Read_NormAxes(&Body_IMU) == HAL_OK) {
  59:Core/Src/parts/state_sensor.cpp ****                 mpu_is_ready = true;
  60:Core/Src/parts/state_sensor.cpp ****         }
  61:Core/Src/parts/state_sensor.cpp **** 
  62:Core/Src/parts/state_sensor.cpp ****         // Read HMC5883 if it is ready to be read
  63:Core/Src/parts/state_sensor.cpp ****         if (HMC5883_Read(&Body_HMC) == HAL_OK) {
  64:Core/Src/parts/state_sensor.cpp ****                 hmc_is_ready = true;
  65:Core/Src/parts/state_sensor.cpp ****         }
  66:Core/Src/parts/state_sensor.cpp **** 
  67:Core/Src/parts/state_sensor.cpp ****         if (!mpu_is_ready || !hmc_is_ready) {
  68:Core/Src/parts/state_sensor.cpp ****                 //! Error Condition
  69:Core/Src/parts/state_sensor.cpp ****                 error(Error::PERIPHERAL_ERROR);
  70:Core/Src/parts/state_sensor.cpp ****         }
  71:Core/Src/parts/state_sensor.cpp **** 
  72:Core/Src/parts/state_sensor.cpp ****         // init_OriFilters(dt_millis);
  73:Core/Src/parts/state_sensor.cpp **** 
  74:Core/Src/parts/state_sensor.cpp ****         // Use all the available sensors initially
  75:Core/Src/parts/state_sensor.cpp ****         // Available Sensors : 
  76:Core/Src/parts/state_sensor.cpp ****         //              1. XEncoder
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 7


  77:Core/Src/parts/state_sensor.cpp ****         //              2. YEncoder
  78:Core/Src/parts/state_sensor.cpp ****         //              3. XLidar
  79:Core/Src/parts/state_sensor.cpp **** 
  80:Core/Src/parts/state_sensor.cpp ****         add_PSensor(&gXEncoder);
  81:Core/Src/parts/state_sensor.cpp ****         add_PSensor(&gYEncoder);
  82:Core/Src/parts/state_sensor.cpp ****         add_PSensor(&gXLidar);
  83:Core/Src/parts/state_sensor.cpp **** 
  84:Core/Src/parts/state_sensor.cpp ****         p_sensor_->init(dt_millis);
  85:Core/Src/parts/state_sensor.cpp ****         
  86:Core/Src/parts/state_sensor.cpp ****         gOmega_Bias = MPU6050_Calc_OmegaBias(&Body_IMU, 1000);
  87:Core/Src/parts/state_sensor.cpp ****         
  88:Core/Src/parts/state_sensor.cpp ****         return 0;
  89:Core/Src/parts/state_sensor.cpp **** }
  90:Core/Src/parts/state_sensor.cpp **** 
  91:Core/Src/parts/state_sensor.cpp **** 
  92:Core/Src/parts/state_sensor.cpp **** /**
  93:Core/Src/parts/state_sensor.cpp ****  * @brief Function that provides the state of the robot
  94:Core/Src/parts/state_sensor.cpp ****  * @param base_state This parameter is considered as one of the possible state
  95:Core/Src/parts/state_sensor.cpp ****  *                   of robot. This will be passed to both Orientation_Sensor
  96:Core/Src/parts/state_sensor.cpp ****  *                   and the Position_Sensor for further use.
  97:Core/Src/parts/state_sensor.cpp ****  * @param dt_millis : The time period at which this function is called periodically
  98:Core/Src/parts/state_sensor.cpp ****  * 
  99:Core/Src/parts/state_sensor.cpp ****  * @retval state of the robot
 100:Core/Src/parts/state_sensor.cpp ****  * 
 101:Core/Src/parts/state_sensor.cpp ****  * @note The state of our robot is defined by x,y distance from fences and the
 102:Core/Src/parts/state_sensor.cpp ****  *       Robot's heading
 103:Core/Src/parts/state_sensor.cpp ****  * 
 104:Core/Src/parts/state_sensor.cpp ****  * 
 105:Core/Src/parts/state_sensor.cpp ****  * <pre>
 106:Core/Src/parts/state_sensor.cpp ****  * Tasks performed by this function
 107:Core/Src/parts/state_sensor.cpp ****  * 1) Read Orientation of the robot with Orientation_Sensor
 108:Core/Src/parts/state_sensor.cpp ****  * 2) Read Position of the robot with Position_Sensor
 109:Core/Src/parts/state_sensor.cpp ****  * </pre>
 110:Core/Src/parts/state_sensor.cpp ****  */
 111:Core/Src/parts/state_sensor.cpp **** static Vec3<float> gFirst_Orientation;
 112:Core/Src/parts/state_sensor.cpp **** static bool gIsFirstOrientationReading = true;
 113:Core/Src/parts/state_sensor.cpp **** Vec3<float> State_Sensor::read_State(Vec3<float> base_state, const State_Vars *sv, uint32_t dt_mill
 114:Core/Src/parts/state_sensor.cpp **** {
 115:Core/Src/parts/state_sensor.cpp ****         Vec3<float> state;
 116:Core/Src/parts/state_sensor.cpp ****         Vec3<float> pos;
 117:Core/Src/parts/state_sensor.cpp **** 
 118:Core/Src/parts/state_sensor.cpp ****         Vec3<float> ori = read_Orientation(base_state, dt_millis);
 119:Core/Src/parts/state_sensor.cpp ****         // ori.print();
 120:Core/Src/parts/state_sensor.cpp ****         // printf("\n");
 121:Core/Src/parts/state_sensor.cpp **** 
 122:Core/Src/parts/state_sensor.cpp ****         if (gIsFirstOrientationReading) {
 123:Core/Src/parts/state_sensor.cpp ****                 gIsFirstOrientationReading = false;
 124:Core/Src/parts/state_sensor.cpp ****                 gFirst_Orientation = ori;
 125:Core/Src/parts/state_sensor.cpp ****         }
 126:Core/Src/parts/state_sensor.cpp ****         else {
 127:Core/Src/parts/state_sensor.cpp ****                 pos = p_sensor_->read_Position(ori - gFirst_Orientation, base_state, sv, dt_millis)
 128:Core/Src/parts/state_sensor.cpp ****         }
 129:Core/Src/parts/state_sensor.cpp **** 
 130:Core/Src/parts/state_sensor.cpp ****         state.set_Values(pos.getX(), pos.getY(), ori.getZ());
 131:Core/Src/parts/state_sensor.cpp **** 
 132:Core/Src/parts/state_sensor.cpp ****         return state;
 133:Core/Src/parts/state_sensor.cpp **** }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 8


 134:Core/Src/parts/state_sensor.cpp **** 
 135:Core/Src/parts/state_sensor.cpp **** 
 136:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gXAccelAlpha35(0.35);
 137:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gYAccelAlpha35(0.35);
 138:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gZAccelAlpha35(0.35);
 139:Core/Src/parts/state_sensor.cpp **** 
 140:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gXGyroAlpha35(0.35);
 141:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gYGyroAlpha35(0.35);
 142:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gZGyroAlpha35(0.35);
 143:Core/Src/parts/state_sensor.cpp **** 
 144:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gXMagAlpha35(0.35);
 145:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gYMagAlpha35(0.35);
 146:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gZMagAlpha35(0.35);
 147:Core/Src/parts/state_sensor.cpp **** 
 148:Core/Src/parts/state_sensor.cpp **** static Kalman_Vars gAccel_Gyro;
 149:Core/Src/parts/state_sensor.cpp **** 
 150:Core/Src/parts/state_sensor.cpp **** static Kalman_Filter gRoll_Filter(&gAccel_Gyro, init_OriFilters);
 151:Core/Src/parts/state_sensor.cpp **** static Kalman_Filter gPitch_Filter(&gAccel_Gyro, init_OriFilters);
 152:Core/Src/parts/state_sensor.cpp **** static Kalman_Filter gYaw_Filter(&gAccel_Gyro, init_OriFilters);
 153:Core/Src/parts/state_sensor.cpp **** 
 154:Core/Src/parts/state_sensor.cpp **** int init_OriFilters(uint32_t dt_millis)
 155:Core/Src/parts/state_sensor.cpp **** {
 147              		.loc 5 155 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 480
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL5:
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 2DED028B 		vpush.64	{d8}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 80, -16
 161              		.cfi_offset 81, -12
 162 0006 F8B0     		sub	sp, sp, #480
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 496
 156:Core/Src/parts/state_sensor.cpp **** 
 157:Core/Src/parts/state_sensor.cpp ****         float dt = (float)dt_millis / 1000.0;
 165              		.loc 5 157 0
 166 0008 07EE900A 		vmov	s15, r0	@ int
 167 000c B8EE677A 		vcvt.f32.u32	s14, s15
 168 0010 DFEDA67A 		vldr.32	s15, .L42
 169 0014 87EE278A 		vdiv.f32	s16, s14, s15
 170              	.LVL6:
 158:Core/Src/parts/state_sensor.cpp **** 
 159:Core/Src/parts/state_sensor.cpp ****         // For Orientation Purpose
 160:Core/Src/parts/state_sensor.cpp ****         Mat state_model(2,2);
 171              		.loc 5 160 0
 172 0018 0222     		movs	r2, #2
 173 001a 1146     		mov	r1, r2
 174 001c 67A8     		add	r0, sp, #412
 175              	.LVL7:
 176 001e FFF7FEFF 		bl	_ZN3MatC1Ehh
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 9


 177              	.LVL8:
 178              	.LBB784:
 179              	.LBB785:
 180              		.file 6 "Core/Inc/utils\\math/mat.h"
   1:Core/Inc/utils\math/mat.h **** /*
   2:Core/Inc/utils\math/mat.h ****  * mat.h
   3:Core/Inc/utils\math/mat.h ****  * 
   4:Core/Inc/utils\math/mat.h ****  * Created : 12/31/2018
   5:Core/Inc/utils\math/mat.h ****  *  Author : n-is
   6:Core/Inc/utils\math/mat.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\math/mat.h ****  */
   8:Core/Inc/utils\math/mat.h **** 
   9:Core/Inc/utils\math/mat.h **** #ifndef _MAT_H_
  10:Core/Inc/utils\math/mat.h **** #define _MAT_H_
  11:Core/Inc/utils\math/mat.h **** 
  12:Core/Inc/utils\math/mat.h **** #include <math.h>
  13:Core/Inc/utils\math/mat.h **** #include "vec3.h"
  14:Core/Inc/utils\math/mat.h **** 
  15:Core/Inc/utils\math/mat.h **** #define MAX_MATRIX_ROWS         4
  16:Core/Inc/utils\math/mat.h **** #define MAX_MATRIX_COLS         4
  17:Core/Inc/utils\math/mat.h **** 
  18:Core/Inc/utils\math/mat.h **** class Mat
  19:Core/Inc/utils\math/mat.h **** {
  20:Core/Inc/utils\math/mat.h **** public:
  21:Core/Inc/utils\math/mat.h ****         Mat() : Mat(0,0) { }
  22:Core/Inc/utils\math/mat.h ****         
  23:Core/Inc/utils\math/mat.h ****         template <size_t M, size_t N>
  24:Core/Inc/utils\math/mat.h ****         Mat(const float (&mat)[M][N]) : Mat(M,N){
  25:Core/Inc/utils\math/mat.h ****                 fill(mat);
  26:Core/Inc/utils\math/mat.h ****         }
  27:Core/Inc/utils\math/mat.h **** 
  28:Core/Inc/utils\math/mat.h ****         Mat(uint8_t rows, uint8_t columns);
  29:Core/Inc/utils\math/mat.h ****         Mat(Mat &&) = default;
  30:Core/Inc/utils\math/mat.h ****         Mat &operator=(Mat &&) = default;
  31:Core/Inc/utils\math/mat.h ****         ~Mat() { }
  32:Core/Inc/utils\math/mat.h **** 
  33:Core/Inc/utils\math/mat.h ****         uint8_t rows() const { return rows_; }
  34:Core/Inc/utils\math/mat.h ****         uint8_t cols() const { return cols_; }
  35:Core/Inc/utils\math/mat.h **** 
  36:Core/Inc/utils\math/mat.h ****         inline float &at(uint8_t i, uint8_t j) {
  37:Core/Inc/utils\math/mat.h ****                 if (!(i < rows_ && j < cols_)) {
 181              		.loc 6 37 0
 182 0022 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 183 0026 13B1     		cbz	r3, .L7
 184 0028 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 185 002c 1BB9     		cbnz	r3, .L8
 186              	.L7:
  38:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 187              		.loc 6 38 0
 188 002e 2621     		movs	r1, #38
 189 0030 9F48     		ldr	r0, .L42+4
 190 0032 FFF7FEFF 		bl	_Error_Handler
 191              	.LVL9:
 192              	.L8:
 193              	.LBE785:
 194              	.LBE784:
 161:Core/Src/parts/state_sensor.cpp ****         state_model.at(0,0) = 1;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 10


 195              		.loc 5 161 0
 196 0036 4FF07E53 		mov	r3, #1065353216
 197 003a 6793     		str	r3, [sp, #412]	@ float
 198              	.LVL10:
 199              	.LBB786:
 200              	.LBB787:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 201              		.loc 6 37 0
 202 003c 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 203 0040 1BB1     		cbz	r3, .L9
 204 0042 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 205 0046 012B     		cmp	r3, #1
 206 0048 03D8     		bhi	.L10
 207              	.L9:
 208              		.loc 6 38 0
 209 004a 2621     		movs	r1, #38
 210 004c 9848     		ldr	r0, .L42+4
 211 004e FFF7FEFF 		bl	_Error_Handler
 212              	.LVL11:
 213              	.L10:
 214              	.LBE787:
 215              	.LBE786:
 162:Core/Src/parts/state_sensor.cpp ****         state_model.at(0,1) = -dt;
 216              		.loc 5 162 0
 217 0052 F1EE487A 		vneg.f32	s15, s16
 218 0056 CDED687A 		vstr.32	s15, [sp, #416]
 219              	.LVL12:
 220              	.LBB788:
 221              	.LBB789:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 222              		.loc 6 37 0
 223 005a 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 224 005e 012B     		cmp	r3, #1
 225 0060 02D9     		bls	.L11
 226 0062 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 227 0066 1BB9     		cbnz	r3, .L12
 228              	.L11:
 229              		.loc 6 38 0
 230 0068 2621     		movs	r1, #38
 231 006a 9148     		ldr	r0, .L42+4
 232 006c FFF7FEFF 		bl	_Error_Handler
 233              	.LVL13:
 234              	.L12:
 235              	.LBE789:
 236              	.LBE788:
 163:Core/Src/parts/state_sensor.cpp ****         state_model.at(1,0) = 0;
 237              		.loc 5 163 0
 238 0070 0023     		movs	r3, #0
 239 0072 6B93     		str	r3, [sp, #428]	@ float
 240              	.LVL14:
 241              	.LBB790:
 242              	.LBB791:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 243              		.loc 6 37 0
 244 0074 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 245 0078 012B     		cmp	r3, #1
 246 007a 40F20781 		bls	.L13
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 11


 247 007e 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 248 0082 012B     		cmp	r3, #1
 249 0084 40F20281 		bls	.L13
 250              	.L14:
 251              	.LVL15:
 252              	.LBE791:
 253              	.LBE790:
 164:Core/Src/parts/state_sensor.cpp ****         state_model.at(1,1) = 1;
 254              		.loc 5 164 0
 255 0088 4FF07E53 		mov	r3, #1065353216
 256 008c 6C93     		str	r3, [sp, #432]	@ float
 165:Core/Src/parts/state_sensor.cpp **** 
 166:Core/Src/parts/state_sensor.cpp ****         Mat control_model(2,1);
 257              		.loc 5 166 0
 258 008e 0122     		movs	r2, #1
 259 0090 0221     		movs	r1, #2
 260 0092 56A8     		add	r0, sp, #344
 261 0094 FFF7FEFF 		bl	_ZN3MatC1Ehh
 262              	.LVL16:
 263              	.LBB793:
 264              	.LBB794:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 265              		.loc 6 37 0
 266 0098 9DF89831 		ldrb	r3, [sp, #408]	@ zero_extendqisi2
 267 009c 13B1     		cbz	r3, .L15
 268 009e 9DF89931 		ldrb	r3, [sp, #409]	@ zero_extendqisi2
 269 00a2 1BB9     		cbnz	r3, .L16
 270              	.L15:
 271              		.loc 6 38 0
 272 00a4 2621     		movs	r1, #38
 273 00a6 8248     		ldr	r0, .L42+4
 274 00a8 FFF7FEFF 		bl	_Error_Handler
 275              	.LVL17:
 276              	.L16:
 277              	.LBE794:
 278              	.LBE793:
 167:Core/Src/parts/state_sensor.cpp ****         control_model.at(0,0) = dt;
 279              		.loc 5 167 0
 280 00ac 8DED568A 		vstr.32	s16, [sp, #344]
 281              	.LVL18:
 282              	.LBB795:
 283              	.LBB796:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 284              		.loc 6 37 0
 285 00b0 9DF89831 		ldrb	r3, [sp, #408]	@ zero_extendqisi2
 286 00b4 012B     		cmp	r3, #1
 287 00b6 02D9     		bls	.L17
 288 00b8 9DF89931 		ldrb	r3, [sp, #409]	@ zero_extendqisi2
 289 00bc 1BB9     		cbnz	r3, .L18
 290              	.L17:
 291              		.loc 6 38 0
 292 00be 2621     		movs	r1, #38
 293 00c0 7B48     		ldr	r0, .L42+4
 294 00c2 FFF7FEFF 		bl	_Error_Handler
 295              	.LVL19:
 296              	.L18:
 297              	.LBE796:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 12


 298              	.LBE795:
 168:Core/Src/parts/state_sensor.cpp ****         control_model.at(1,0) = 0;
 299              		.loc 5 168 0
 300 00c6 0023     		movs	r3, #0
 301 00c8 5A93     		str	r3, [sp, #360]	@ float
 169:Core/Src/parts/state_sensor.cpp **** 
 170:Core/Src/parts/state_sensor.cpp ****         Mat obs_model(1,2);
 302              		.loc 5 170 0
 303 00ca 0222     		movs	r2, #2
 304 00cc 0121     		movs	r1, #1
 305 00ce 45A8     		add	r0, sp, #276
 306 00d0 FFF7FEFF 		bl	_ZN3MatC1Ehh
 307              	.LVL20:
 308              	.LBB797:
 309              	.LBB798:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 310              		.loc 6 37 0
 311 00d4 9DF85431 		ldrb	r3, [sp, #340]	@ zero_extendqisi2
 312 00d8 13B1     		cbz	r3, .L19
 313 00da 9DF85531 		ldrb	r3, [sp, #341]	@ zero_extendqisi2
 314 00de 1BB9     		cbnz	r3, .L20
 315              	.L19:
 316              		.loc 6 38 0
 317 00e0 2621     		movs	r1, #38
 318 00e2 7348     		ldr	r0, .L42+4
 319 00e4 FFF7FEFF 		bl	_Error_Handler
 320              	.LVL21:
 321              	.L20:
 322              	.LBE798:
 323              	.LBE797:
 171:Core/Src/parts/state_sensor.cpp ****         obs_model.at(0,0) = 1;
 324              		.loc 5 171 0
 325 00e8 4FF07E53 		mov	r3, #1065353216
 326 00ec 4593     		str	r3, [sp, #276]	@ float
 327              	.LVL22:
 328              	.LBB799:
 329              	.LBB800:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 330              		.loc 6 37 0
 331 00ee 9DF85431 		ldrb	r3, [sp, #340]	@ zero_extendqisi2
 332 00f2 1BB1     		cbz	r3, .L21
 333 00f4 9DF85531 		ldrb	r3, [sp, #341]	@ zero_extendqisi2
 334 00f8 012B     		cmp	r3, #1
 335 00fa 03D8     		bhi	.L22
 336              	.L21:
 337              		.loc 6 38 0
 338 00fc 2621     		movs	r1, #38
 339 00fe 6C48     		ldr	r0, .L42+4
 340 0100 FFF7FEFF 		bl	_Error_Handler
 341              	.LVL23:
 342              	.L22:
 343              	.LBE800:
 344              	.LBE799:
 172:Core/Src/parts/state_sensor.cpp ****         obs_model.at(0,1) = 0;
 345              		.loc 5 172 0
 346 0104 0023     		movs	r3, #0
 347 0106 4693     		str	r3, [sp, #280]	@ float
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 13


 173:Core/Src/parts/state_sensor.cpp **** 
 174:Core/Src/parts/state_sensor.cpp ****         Mat priori_error(2,2);
 348              		.loc 5 174 0
 349 0108 0222     		movs	r2, #2
 350 010a 1146     		mov	r1, r2
 351 010c 34A8     		add	r0, sp, #208
 352 010e FFF7FEFF 		bl	_ZN3MatC1Ehh
 353              	.LVL24:
 354              	.LBB801:
 355              	.LBB802:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 356              		.loc 6 37 0
 357 0112 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 358 0116 13B1     		cbz	r3, .L23
 359 0118 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 360 011c 1BB9     		cbnz	r3, .L24
 361              	.L23:
 362              		.loc 6 38 0
 363 011e 2621     		movs	r1, #38
 364 0120 6348     		ldr	r0, .L42+4
 365 0122 FFF7FEFF 		bl	_Error_Handler
 366              	.LVL25:
 367              	.L24:
 368              	.LBE802:
 369              	.LBE801:
 175:Core/Src/parts/state_sensor.cpp ****         priori_error.at(0,0) = 10;
 370              		.loc 5 175 0
 371 0126 634B     		ldr	r3, .L42+8
 372 0128 3493     		str	r3, [sp, #208]	@ float
 373              	.LVL26:
 374              	.LBB803:
 375              	.LBB804:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 376              		.loc 6 37 0
 377 012a 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 378 012e 1BB1     		cbz	r3, .L25
 379 0130 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 380 0134 012B     		cmp	r3, #1
 381 0136 03D8     		bhi	.L26
 382              	.L25:
 383              		.loc 6 38 0
 384 0138 2621     		movs	r1, #38
 385 013a 5D48     		ldr	r0, .L42+4
 386 013c FFF7FEFF 		bl	_Error_Handler
 387              	.LVL27:
 388              	.L26:
 389              	.LBE804:
 390              	.LBE803:
 176:Core/Src/parts/state_sensor.cpp ****         priori_error.at(0,1) = 0;
 391              		.loc 5 176 0
 392 0140 0023     		movs	r3, #0
 393 0142 3593     		str	r3, [sp, #212]	@ float
 394              	.LVL28:
 395              	.LBB805:
 396              	.LBB806:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 397              		.loc 6 37 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 14


 398 0144 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 399 0148 012B     		cmp	r3, #1
 400 014a 02D9     		bls	.L27
 401 014c 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 402 0150 1BB9     		cbnz	r3, .L28
 403              	.L27:
 404              		.loc 6 38 0
 405 0152 2621     		movs	r1, #38
 406 0154 5648     		ldr	r0, .L42+4
 407 0156 FFF7FEFF 		bl	_Error_Handler
 408              	.LVL29:
 409              	.L28:
 410              	.LBE806:
 411              	.LBE805:
 177:Core/Src/parts/state_sensor.cpp ****         priori_error.at(1,0) = 0;
 412              		.loc 5 177 0
 413 015a 0023     		movs	r3, #0
 414 015c 3893     		str	r3, [sp, #224]	@ float
 415              	.LVL30:
 416              	.LBB807:
 417              	.LBB808:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 418              		.loc 6 37 0
 419 015e 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 420 0162 012B     		cmp	r3, #1
 421 0164 40F29780 		bls	.L29
 422 0168 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 423 016c 012B     		cmp	r3, #1
 424 016e 40F29280 		bls	.L29
 425              	.L30:
 426              	.LVL31:
 427              	.LBE808:
 428              	.LBE807:
 178:Core/Src/parts/state_sensor.cpp ****         priori_error.at(1,1) = 10;
 429              		.loc 5 178 0
 430 0172 504B     		ldr	r3, .L42+8
 431 0174 3993     		str	r3, [sp, #228]	@ float
 179:Core/Src/parts/state_sensor.cpp **** 
 180:Core/Src/parts/state_sensor.cpp ****         Mat process_error(2,2);
 432              		.loc 5 180 0
 433 0176 0222     		movs	r2, #2
 434 0178 1146     		mov	r1, r2
 435 017a 23A8     		add	r0, sp, #140
 436 017c FFF7FEFF 		bl	_ZN3MatC1Ehh
 437              	.LVL32:
 438              	.LBB810:
 439              	.LBB811:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 440              		.loc 6 37 0
 441 0180 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 442 0184 13B1     		cbz	r3, .L31
 443 0186 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 444 018a 1BB9     		cbnz	r3, .L32
 445              	.L31:
 446              		.loc 6 38 0
 447 018c 2621     		movs	r1, #38
 448 018e 4848     		ldr	r0, .L42+4
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 15


 449 0190 FFF7FEFF 		bl	_Error_Handler
 450              	.LVL33:
 451              	.L32:
 452              	.LBE811:
 453              	.LBE810:
 181:Core/Src/parts/state_sensor.cpp ****         process_error.at(0,0) = 0.001;
 454              		.loc 5 181 0
 455 0194 484B     		ldr	r3, .L42+12
 456 0196 2393     		str	r3, [sp, #140]	@ float
 457              	.LVL34:
 458              	.LBB812:
 459              	.LBB813:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 460              		.loc 6 37 0
 461 0198 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 462 019c 1BB1     		cbz	r3, .L33
 463 019e 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 464 01a2 012B     		cmp	r3, #1
 465 01a4 03D8     		bhi	.L34
 466              	.L33:
 467              		.loc 6 38 0
 468 01a6 2621     		movs	r1, #38
 469 01a8 4148     		ldr	r0, .L42+4
 470 01aa FFF7FEFF 		bl	_Error_Handler
 471              	.LVL35:
 472              	.L34:
 473              	.LBE813:
 474              	.LBE812:
 182:Core/Src/parts/state_sensor.cpp ****         process_error.at(0,1) = 0;
 475              		.loc 5 182 0
 476 01ae 0023     		movs	r3, #0
 477 01b0 2493     		str	r3, [sp, #144]	@ float
 478              	.LVL36:
 479              	.LBB814:
 480              	.LBB815:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 481              		.loc 6 37 0
 482 01b2 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 483 01b6 012B     		cmp	r3, #1
 484 01b8 02D9     		bls	.L35
 485 01ba 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 486 01be 1BB9     		cbnz	r3, .L36
 487              	.L35:
 488              		.loc 6 38 0
 489 01c0 2621     		movs	r1, #38
 490 01c2 3B48     		ldr	r0, .L42+4
 491 01c4 FFF7FEFF 		bl	_Error_Handler
 492              	.LVL37:
 493              	.L36:
 494              	.LBE815:
 495              	.LBE814:
 183:Core/Src/parts/state_sensor.cpp ****         process_error.at(1,0) = 0;
 496              		.loc 5 183 0
 497 01c8 0023     		movs	r3, #0
 498 01ca 2793     		str	r3, [sp, #156]	@ float
 499              	.LVL38:
 500              	.LBB816:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 16


 501              	.LBB817:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 502              		.loc 6 37 0
 503 01cc 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 504 01d0 012B     		cmp	r3, #1
 505 01d2 65D9     		bls	.L37
 506 01d4 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 507 01d8 012B     		cmp	r3, #1
 508 01da 61D9     		bls	.L37
 509              	.L38:
 510              	.LVL39:
 511              	.LBE817:
 512              	.LBE816:
 184:Core/Src/parts/state_sensor.cpp ****         process_error.at(1,1) = 0.003;
 513              		.loc 5 184 0
 514 01dc 374B     		ldr	r3, .L42+16
 515 01de 2893     		str	r3, [sp, #160]	@ float
 185:Core/Src/parts/state_sensor.cpp ****         
 186:Core/Src/parts/state_sensor.cpp ****         Mat measure_error(1,1);
 516              		.loc 5 186 0
 517 01e0 0122     		movs	r2, #1
 518 01e2 1146     		mov	r1, r2
 519 01e4 12A8     		add	r0, sp, #72
 520 01e6 FFF7FEFF 		bl	_ZN3MatC1Ehh
 521              	.LVL40:
 522              	.LBB819:
 523              	.LBB820:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 524              		.loc 6 37 0
 525 01ea 9DF88830 		ldrb	r3, [sp, #136]	@ zero_extendqisi2
 526 01ee 13B1     		cbz	r3, .L39
 527 01f0 9DF88930 		ldrb	r3, [sp, #137]	@ zero_extendqisi2
 528 01f4 1BB9     		cbnz	r3, .L40
 529              	.L39:
 530              		.loc 6 38 0
 531 01f6 2621     		movs	r1, #38
 532 01f8 2D48     		ldr	r0, .L42+4
 533 01fa FFF7FEFF 		bl	_Error_Handler
 534              	.LVL41:
 535              	.L40:
 536              	.LBE820:
 537              	.LBE819:
 187:Core/Src/parts/state_sensor.cpp ****         measure_error.at(0,0) = 0.04;
 538              		.loc 5 187 0
 539 01fe 304B     		ldr	r3, .L42+20
 540 0200 1293     		str	r3, [sp, #72]	@ float
 541              	.LVL42:
 542              	.LBB821:
 543              	.LBB822:
 544              	.LBB823:
  39:Core/Inc/utils\math/mat.h ****                 }
  40:Core/Inc/utils\math/mat.h ****                 return matrix_[i][j];
  41:Core/Inc/utils\math/mat.h ****         }
  42:Core/Inc/utils\math/mat.h **** 
  43:Core/Inc/utils\math/mat.h **** 
  44:Core/Inc/utils\math/mat.h ****         Mat(const Mat &m);
  45:Core/Inc/utils\math/mat.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 17


  46:Core/Inc/utils\math/mat.h ****         Mat &operator=(const Mat &m) {
  47:Core/Inc/utils\math/mat.h ****                 Mat temp(m);
 545              		.loc 6 47 0
 546 0202 67A9     		add	r1, sp, #412
 547              	.LVL43:
 548 0204 01A8     		add	r0, sp, #4
 549 0206 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 550              	.LVL44:
  48:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 551              		.loc 6 48 0
 552 020a 2E4C     		ldr	r4, .L42+24
 553 020c 01A9     		add	r1, sp, #4
 554 020e 2046     		mov	r0, r4
 555 0210 FFF7FEFF 		bl	_Z4swapR3MatS0_
 556              	.LVL45:
 557              	.LBE823:
 558              	.LBE822:
 559              	.LBE821:
 560              	.LBB824:
 561              	.LBB825:
 562              	.LBB826:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 563              		.loc 6 47 0
 564 0214 56A9     		add	r1, sp, #344
 565              	.LVL46:
 566 0216 01A8     		add	r0, sp, #4
 567 0218 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 568              	.LVL47:
 569              		.loc 6 48 0
 570 021c 01A9     		add	r1, sp, #4
 571 021e 04F14400 		add	r0, r4, #68
 572 0222 FFF7FEFF 		bl	_Z4swapR3MatS0_
 573              	.LVL48:
 574              	.LBE826:
 575              	.LBE825:
 576              	.LBE824:
 577              	.LBB827:
 578              	.LBB828:
 579              	.LBB829:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 580              		.loc 6 47 0
 581 0226 45A9     		add	r1, sp, #276
 582              	.LVL49:
 583 0228 01A8     		add	r0, sp, #4
 584 022a FFF7FEFF 		bl	_ZN3MatC1ERKS_
 585              	.LVL50:
 586              		.loc 6 48 0
 587 022e 01A9     		add	r1, sp, #4
 588 0230 04F18800 		add	r0, r4, #136
 589 0234 FFF7FEFF 		bl	_Z4swapR3MatS0_
 590              	.LVL51:
 591              	.LBE829:
 592              	.LBE828:
 593              	.LBE827:
 594              	.LBB830:
 595              	.LBB831:
  22:Core/Inc/utils\filter/kalman.h ****         void set_P(const Mat &p) { P_ = p; }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 18


 596              		.loc 1 22 0
 597 0238 0221     		movs	r1, #2
 598 023a 01A8     		add	r0, sp, #4
 599 023c FFF7FEFF 		bl	_ZN3Mat3eyeEh
 600              	.LVL52:
 601 0240 4222     		movs	r2, #66
 602 0242 01A9     		add	r1, sp, #4
 603 0244 04F1CC00 		add	r0, r4, #204
 604 0248 FFF7FEFF 		bl	memcpy
 605              	.LVL53:
 606              	.LBE831:
 607              	.LBE830:
 608              	.LBB832:
 609              	.LBB833:
 610              	.LBB834:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 611              		.loc 6 47 0
 612 024c 34A9     		add	r1, sp, #208
 613              	.LVL54:
 614 024e 01A8     		add	r0, sp, #4
 615 0250 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 616              	.LVL55:
 617              		.loc 6 48 0
 618 0254 01A9     		add	r1, sp, #4
 619 0256 04F58870 		add	r0, r4, #272
 620 025a FFF7FEFF 		bl	_Z4swapR3MatS0_
 621              	.LVL56:
 622              	.LBE834:
 623              	.LBE833:
 624              	.LBE832:
 625              	.LBB835:
 626              	.LBB836:
 627              	.LBB837:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 628              		.loc 6 47 0
 629 025e 23A9     		add	r1, sp, #140
 630              	.LVL57:
 631 0260 01A8     		add	r0, sp, #4
 632 0262 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 633              	.LVL58:
 634              		.loc 6 48 0
 635 0266 01A9     		add	r1, sp, #4
 636 0268 04F5AA70 		add	r0, r4, #340
 637 026c FFF7FEFF 		bl	_Z4swapR3MatS0_
 638              	.LVL59:
 639              	.LBE837:
 640              	.LBE836:
 641              	.LBE835:
 642              	.LBB838:
 643              	.LBB839:
 644              	.LBB840:
  47:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
 645              		.loc 6 47 0
 646 0270 12A9     		add	r1, sp, #72
 647              	.LVL60:
 648 0272 01A8     		add	r0, sp, #4
 649 0274 FFF7FEFF 		bl	_ZN3MatC1ERKS_
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 19


 650              	.LVL61:
 651              		.loc 6 48 0
 652 0278 01A9     		add	r1, sp, #4
 653 027a 04F5CC70 		add	r0, r4, #408
 654 027e FFF7FEFF 		bl	_Z4swapR3MatS0_
 655              	.LVL62:
 656              	.LBE840:
 657              	.LBE839:
 658              	.LBE838:
 188:Core/Src/parts/state_sensor.cpp **** 
 189:Core/Src/parts/state_sensor.cpp ****         gAccel_Gyro.set_F(state_model);
 190:Core/Src/parts/state_sensor.cpp ****         gAccel_Gyro.set_B(control_model);
 191:Core/Src/parts/state_sensor.cpp ****         gAccel_Gyro.set_H(obs_model);
 192:Core/Src/parts/state_sensor.cpp ****         gAccel_Gyro.set_I(2);
 193:Core/Src/parts/state_sensor.cpp ****         gAccel_Gyro.set_P(priori_error);
 194:Core/Src/parts/state_sensor.cpp ****         gAccel_Gyro.set_Q(process_error);
 195:Core/Src/parts/state_sensor.cpp ****         gAccel_Gyro.set_R(measure_error);
 196:Core/Src/parts/state_sensor.cpp **** 
 197:Core/Src/parts/state_sensor.cpp ****         return 0;
 198:Core/Src/parts/state_sensor.cpp **** }
 659              		.loc 5 198 0
 660 0282 0020     		movs	r0, #0
 661 0284 78B0     		add	sp, sp, #480
 662              	.LCFI3:
 663              		.cfi_remember_state
 664              		.cfi_def_cfa_offset 16
 665              		@ sp needed
 666 0286 BDEC028B 		vldm	sp!, {d8}
 667              	.LCFI4:
 668              		.cfi_restore 80
 669              		.cfi_restore 81
 670              		.cfi_def_cfa_offset 8
 671              	.LVL63:
 672 028a 10BD     		pop	{r4, pc}
 673              	.LVL64:
 674              	.L13:
 675              	.LCFI5:
 676              		.cfi_restore_state
 677              	.LBB841:
 678              	.LBB792:
  38:Core/Inc/utils\math/mat.h ****                 }
 679              		.loc 6 38 0
 680 028c 2621     		movs	r1, #38
 681 028e 0848     		ldr	r0, .L42+4
 682 0290 FFF7FEFF 		bl	_Error_Handler
 683              	.LVL65:
 684 0294 F8E6     		b	.L14
 685              	.LVL66:
 686              	.L29:
 687              	.LBE792:
 688              	.LBE841:
 689              	.LBB842:
 690              	.LBB809:
 691 0296 2621     		movs	r1, #38
 692 0298 0548     		ldr	r0, .L42+4
 693 029a FFF7FEFF 		bl	_Error_Handler
 694              	.LVL67:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 20


 695 029e 68E7     		b	.L30
 696              	.LVL68:
 697              	.L37:
 698              	.LBE809:
 699              	.LBE842:
 700              	.LBB843:
 701              	.LBB818:
 702 02a0 2621     		movs	r1, #38
 703 02a2 0348     		ldr	r0, .L42+4
 704 02a4 FFF7FEFF 		bl	_Error_Handler
 705              	.LVL69:
 706 02a8 98E7     		b	.L38
 707              	.L43:
 708 02aa 00BF     		.align	2
 709              	.L42:
 710 02ac 00007A44 		.word	1148846080
 711 02b0 00000000 		.word	.LC0
 712 02b4 00002041 		.word	1092616192
 713 02b8 6F12833A 		.word	981668463
 714 02bc A69B443B 		.word	994352038
 715 02c0 0AD7233D 		.word	1025758986
 716 02c4 00000000 		.word	.LANCHOR0
 717              	.LBE818:
 718              	.LBE843:
 719              		.cfi_endproc
 720              	.LFE535:
 722              		.section	.text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE,"axG",%progbits,_ZN13Kalman_FilterC5EP11Ka
 723              		.align	1
 724              		.weak	_ZN13Kalman_FilterC2EP11Kalman_VarsPFimE
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu fpv4-sp-d16
 730              	_ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:
 731              	.LFB409:
  37:Core/Inc/utils\filter/kalman.h ****         x_(2,1), u_(1,1), z_(1,1), K_(2,1)
 732              		.loc 1 37 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL70:
 737 0000 70B5     		push	{r4, r5, r6, lr}
 738              	.LCFI6:
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 4, -16
 741              		.cfi_offset 5, -12
 742              		.cfi_offset 6, -8
 743              		.cfi_offset 14, -4
 744 0002 0446     		mov	r4, r0
 745 0004 0E46     		mov	r6, r1
 746 0006 1546     		mov	r5, r2
 747              	.LBB844:
  38:Core/Inc/utils\filter/kalman.h ****         {
 748              		.loc 1 38 0
 749 0008 0122     		movs	r2, #1
 750              	.LVL71:
 751 000a 0221     		movs	r1, #2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 21


 752              	.LVL72:
 753 000c 0C30     		adds	r0, r0, #12
 754              	.LVL73:
 755 000e FFF7FEFF 		bl	_ZN3MatC1Ehh
 756              	.LVL74:
 757 0012 0122     		movs	r2, #1
 758 0014 1146     		mov	r1, r2
 759 0016 04F15000 		add	r0, r4, #80
 760 001a FFF7FEFF 		bl	_ZN3MatC1Ehh
 761              	.LVL75:
 762 001e 0122     		movs	r2, #1
 763 0020 1146     		mov	r1, r2
 764 0022 04F19400 		add	r0, r4, #148
 765 0026 FFF7FEFF 		bl	_ZN3MatC1Ehh
 766              	.LVL76:
 767 002a 0122     		movs	r2, #1
 768 002c 0221     		movs	r1, #2
 769 002e 04F1D800 		add	r0, r4, #216
 770 0032 FFF7FEFF 		bl	_ZN3MatC1Ehh
 771              	.LVL77:
  40:Core/Inc/utils\filter/kalman.h ****                 kv_ = kv;
 772              		.loc 1 40 0
 773 0036 0123     		movs	r3, #1
 774 0038 2371     		strb	r3, [r4, #4]
  41:Core/Inc/utils\filter/kalman.h ****                 kv_init_ = kv_init;
 775              		.loc 1 41 0
 776 003a A660     		str	r6, [r4, #8]
  42:Core/Inc/utils\filter/kalman.h ****         }
 777              		.loc 1 42 0
 778 003c 2560     		str	r5, [r4]
 779              	.LBE844:
  43:Core/Inc/utils\filter/kalman.h ****         Kalman_Filter(Kalman_Filter &&) = default;
 780              		.loc 1 43 0
 781 003e 2046     		mov	r0, r4
 782 0040 70BD     		pop	{r4, r5, r6, pc}
 783              		.cfi_endproc
 784              	.LFE409:
 786              		.weak	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 787              		.thumb_set _ZN13Kalman_FilterC1EP11Kalman_VarsPFimE,_ZN13Kalman_FilterC2EP11Kalman_VarsPFimE
 788              		.section	.text._ZN13Kalman_Filter6filterEffm,"axG",%progbits,_ZN13Kalman_Filter6filterEffm,comdat
 789              		.align	1
 790              		.weak	_ZN13Kalman_Filter6filterEffm
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv4-sp-d16
 796              	_ZN13Kalman_Filter6filterEffm:
 797              	.LFB414:
  49:Core/Inc/utils\filter/kalman.h ****         
  50:Core/Inc/utils\filter/kalman.h ****         float filter(float measured, float control_input, uint32_t dt_millis) {
 798              		.loc 1 50 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 680
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL78:
 803 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 804              	.LCFI7:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 22


 805              		.cfi_def_cfa_offset 24
 806              		.cfi_offset 4, -24
 807              		.cfi_offset 5, -20
 808              		.cfi_offset 6, -16
 809              		.cfi_offset 7, -12
 810              		.cfi_offset 8, -8
 811              		.cfi_offset 14, -4
 812 0004 2DED028B 		vpush.64	{d8}
 813              	.LCFI8:
 814              		.cfi_def_cfa_offset 32
 815              		.cfi_offset 80, -32
 816              		.cfi_offset 81, -28
 817 0008 ADF52A7D 		sub	sp, sp, #680
 818              	.LCFI9:
 819              		.cfi_def_cfa_offset 712
 820 000c 0446     		mov	r4, r0
 821 000e B0EE408A 		vmov.f32	s16, s0
  51:Core/Inc/utils\filter/kalman.h ****                 // float dt = (float)dt_millis / 1000.0;
  52:Core/Inc/utils\filter/kalman.h ****                 // For first element of vector
  53:Core/Inc/utils\filter/kalman.h ****                 if (is_first_) {
 822              		.loc 1 53 0
 823 0012 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 824 0014 13B3     		cbz	r3, .L47
  54:Core/Inc/utils\filter/kalman.h ****                         // Initiaize all the variables at the first call
  55:Core/Inc/utils\filter/kalman.h ****                         kv_init_(dt_millis);
 825              		.loc 1 55 0
 826 0016 0368     		ldr	r3, [r0]
 827 0018 0846     		mov	r0, r1
 828              	.LVL79:
 829 001a 9847     		blx	r3
 830              	.LVL80:
  56:Core/Inc/utils\filter/kalman.h **** 
  57:Core/Inc/utils\filter/kalman.h ****                         is_first_ = false;
 831              		.loc 1 57 0
 832 001c 0023     		movs	r3, #0
 833 001e 2371     		strb	r3, [r4, #4]
 834              	.LVL81:
 835              	.LBB929:
 836              	.LBB930:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 837              		.loc 6 37 0
 838 0020 94F84C30 		ldrb	r3, [r4, #76]	@ zero_extendqisi2
 839 0024 13B1     		cbz	r3, .L48
 840 0026 94F84D30 		ldrb	r3, [r4, #77]	@ zero_extendqisi2
 841 002a 1BB9     		cbnz	r3, .L49
 842              	.L48:
  38:Core/Inc/utils\math/mat.h ****                 }
 843              		.loc 6 38 0
 844 002c 2621     		movs	r1, #38
 845 002e AF48     		ldr	r0, .L62
 846 0030 FFF7FEFF 		bl	_Error_Handler
 847              	.LVL82:
 848              	.L49:
 849              	.LBE930:
 850              	.LBE929:
  58:Core/Inc/utils\filter/kalman.h ****                         x_.at(0,0) = measured;
 851              		.loc 1 58 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 23


 852 0034 84ED038A 		vstr.32	s16, [r4, #12]
 853              	.L50:
 854              	.LVL83:
 855              	.LBB931:
 856              	.LBB932:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 857              		.loc 6 37 0
 858 0038 94F84C30 		ldrb	r3, [r4, #76]	@ zero_extendqisi2
 859 003c 13B1     		cbz	r3, .L59
 860 003e 94F84D30 		ldrb	r3, [r4, #77]	@ zero_extendqisi2
 861 0042 1BB9     		cbnz	r3, .L60
 862              	.L59:
  38:Core/Inc/utils\math/mat.h ****                 }
 863              		.loc 6 38 0
 864 0044 2621     		movs	r1, #38
 865 0046 A948     		ldr	r0, .L62
 866 0048 FFF7FEFF 		bl	_Error_Handler
 867              	.LVL84:
 868              	.L60:
 869              	.LBE932:
 870              	.LBE931:
  59:Core/Inc/utils\filter/kalman.h ****                         // u_.at(0,0) = control_input;
  60:Core/Inc/utils\filter/kalman.h ****                 }
  61:Core/Inc/utils\filter/kalman.h ****                 else {
  62:Core/Inc/utils\filter/kalman.h ****                         u_.at(0,0) = control_input;
  63:Core/Inc/utils\filter/kalman.h ****                         z_.at(0,0) = measured;
  64:Core/Inc/utils\filter/kalman.h **** 
  65:Core/Inc/utils\filter/kalman.h ****                         // Predict
  66:Core/Inc/utils\filter/kalman.h ****                         x_ = (kv_->F_)*(x_) + (kv_->B_)*(u_);
  67:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
  68:Core/Inc/utils\filter/kalman.h **** 
  69:Core/Inc/utils\filter/kalman.h ****                         // Update
  70:Core/Inc/utils\filter/kalman.h ****                         K_ = kv_->P_*(kv_->H_.trans())*(((kv_->H_*(kv_->P_)*(kv_->H_.trans())) + kv
  71:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
  72:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
  73:Core/Inc/utils\filter/kalman.h ****                 }
  74:Core/Inc/utils\filter/kalman.h **** 
  75:Core/Inc/utils\filter/kalman.h ****                 return x_.at(0,0);
  76:Core/Inc/utils\filter/kalman.h ****         }
 871              		.loc 1 76 0
 872 004c 94ED030A 		vldr.32	s0, [r4, #12]
 873 0050 0DF52A7D 		add	sp, sp, #680
 874              	.LCFI10:
 875              		.cfi_remember_state
 876              		.cfi_def_cfa_offset 32
 877              		@ sp needed
 878 0054 BDEC028B 		vldm	sp!, {d8}
 879              	.LCFI11:
 880              		.cfi_restore 80
 881              		.cfi_restore 81
 882              		.cfi_def_cfa_offset 24
 883              	.LVL85:
 884 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 885              	.LVL86:
 886              	.L47:
 887              	.LCFI12:
 888              		.cfi_restore_state
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 24


 889 005c F0EE608A 		vmov.f32	s17, s1
 890              	.LVL87:
 891              	.LBB933:
 892              	.LBB934:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 893              		.loc 6 37 0
 894 0060 90F89030 		ldrb	r3, [r0, #144]	@ zero_extendqisi2
 895 0064 13B1     		cbz	r3, .L51
 896 0066 90F89130 		ldrb	r3, [r0, #145]	@ zero_extendqisi2
 897 006a 1BB9     		cbnz	r3, .L52
 898              	.L51:
  38:Core/Inc/utils\math/mat.h ****                 }
 899              		.loc 6 38 0
 900 006c 2621     		movs	r1, #38
 901              	.LVL88:
 902 006e 9F48     		ldr	r0, .L62
 903              	.LVL89:
 904 0070 FFF7FEFF 		bl	_Error_Handler
 905              	.LVL90:
 906              	.L52:
 907              	.LBE934:
 908              	.LBE933:
  62:Core/Inc/utils\filter/kalman.h ****                         z_.at(0,0) = measured;
 909              		.loc 1 62 0
 910 0074 C4ED148A 		vstr.32	s17, [r4, #80]
 911              	.LVL91:
 912              	.LBB935:
 913              	.LBB936:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 914              		.loc 6 37 0
 915 0078 94F8D430 		ldrb	r3, [r4, #212]	@ zero_extendqisi2
 916 007c 13B1     		cbz	r3, .L53
 917 007e 94F8D530 		ldrb	r3, [r4, #213]	@ zero_extendqisi2
 918 0082 1BB9     		cbnz	r3, .L54
 919              	.L53:
  38:Core/Inc/utils\math/mat.h ****                 }
 920              		.loc 6 38 0
 921 0084 2621     		movs	r1, #38
 922 0086 9948     		ldr	r0, .L62
 923 0088 FFF7FEFF 		bl	_Error_Handler
 924              	.LVL92:
 925              	.L54:
 926              	.LBE936:
 927              	.LBE935:
  63:Core/Inc/utils\filter/kalman.h **** 
 928              		.loc 1 63 0
 929 008c 84ED258A 		vstr.32	s16, [r4, #148]
  66:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 930              		.loc 1 66 0
 931 0090 A168     		ldr	r1, [r4, #8]
 932 0092 55A8     		add	r0, sp, #340
 933 0094 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 934              	.LVL93:
 935 0098 04F10C05 		add	r5, r4, #12
 936              	.LVL94:
 937              	.LBB937:
 938              	.LBB938:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 25


  49:Core/Inc/utils\math/mat.h **** 
  50:Core/Inc/utils\math/mat.h ****                 return *this;
  51:Core/Inc/utils\math/mat.h ****         }
  52:Core/Inc/utils\math/mat.h **** 
  53:Core/Inc/utils\math/mat.h ****         Mat &operator+=(const Mat &rhs);
  54:Core/Inc/utils\math/mat.h ****         Mat &operator-=(const Mat &rhs);
  55:Core/Inc/utils\math/mat.h ****         Mat &operator*=(const Mat &rhs);
  56:Core/Inc/utils\math/mat.h ****         Mat &operator*=(const Vec3<float> &rhs);
  57:Core/Inc/utils\math/mat.h **** 
  58:Core/Inc/utils\math/mat.h ****         friend Mat operator+(Mat lhs, const Mat &rhs) {
  59:Core/Inc/utils\math/mat.h ****                 lhs += rhs;
  60:Core/Inc/utils\math/mat.h ****                 return lhs;
  61:Core/Inc/utils\math/mat.h ****         }
  62:Core/Inc/utils\math/mat.h **** 
  63:Core/Inc/utils\math/mat.h ****         friend Mat operator-(Mat lhs, const Mat &rhs) {
  64:Core/Inc/utils\math/mat.h ****                 lhs -= rhs;
  65:Core/Inc/utils\math/mat.h ****                 return lhs;
  66:Core/Inc/utils\math/mat.h ****         }
  67:Core/Inc/utils\math/mat.h **** 
  68:Core/Inc/utils\math/mat.h ****         friend Mat operator*(Mat lhs, const Mat &rhs) {
  69:Core/Inc/utils\math/mat.h ****                 lhs *= rhs;
 939              		.loc 6 69 0
 940 009c 2946     		mov	r1, r5
 941 009e 55A8     		add	r0, sp, #340
 942              	.LVL95:
 943 00a0 FFF7FEFF 		bl	_ZN3MatmLERKS_
 944              	.LVL96:
  70:Core/Inc/utils\math/mat.h ****                 return lhs;
 945              		.loc 6 70 0
 946 00a4 4426     		movs	r6, #68
 947 00a6 3246     		mov	r2, r6
 948 00a8 55A9     		add	r1, sp, #340
 949              	.LVL97:
 950 00aa 66A8     		add	r0, sp, #408
 951 00ac FFF7FEFF 		bl	memcpy
 952              	.LVL98:
 953              	.LBE938:
 954              	.LBE937:
  66:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 955              		.loc 1 66 0
 956 00b0 A168     		ldr	r1, [r4, #8]
 957 00b2 3144     		add	r1, r1, r6
 958 00b4 77A8     		add	r0, sp, #476
 959 00b6 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 960              	.LVL99:
 961              	.LBB939:
 962              	.LBB940:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 963              		.loc 6 69 0
 964 00ba 04F15001 		add	r1, r4, #80
 965              	.LVL100:
 966 00be 77A8     		add	r0, sp, #476
 967              	.LVL101:
 968 00c0 FFF7FEFF 		bl	_ZN3MatmLERKS_
 969              	.LVL102:
 970              		.loc 6 70 0
 971 00c4 3246     		mov	r2, r6
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 26


 972 00c6 77A9     		add	r1, sp, #476
 973              	.LVL103:
 974 00c8 88A8     		add	r0, sp, #544
 975 00ca FFF7FEFF 		bl	memcpy
 976              	.LVL104:
 977              	.LBE940:
 978              	.LBE939:
 979              	.LBB941:
 980              	.LBB942:
  59:Core/Inc/utils\math/mat.h ****                 return lhs;
 981              		.loc 6 59 0
 982 00ce 88A9     		add	r1, sp, #544
 983              	.LVL105:
 984 00d0 66A8     		add	r0, sp, #408
 985              	.LVL106:
 986 00d2 FFF7FEFF 		bl	_ZN3MatpLERKS_
 987              	.LVL107:
  60:Core/Inc/utils\math/mat.h ****         }
 988              		.loc 6 60 0
 989 00d6 3246     		mov	r2, r6
 990 00d8 66A9     		add	r1, sp, #408
 991              	.LVL108:
 992 00da 99A8     		add	r0, sp, #612
 993 00dc FFF7FEFF 		bl	memcpy
 994              	.LVL109:
 995              	.LBE942:
 996              	.LBE941:
  66:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 997              		.loc 1 66 0
 998 00e0 4227     		movs	r7, #66
 999 00e2 3A46     		mov	r2, r7
 1000 00e4 99A9     		add	r1, sp, #612
 1001 00e6 2846     		mov	r0, r5
 1002 00e8 FFF7FEFF 		bl	memcpy
 1003              	.LVL110:
  67:Core/Inc/utils\filter/kalman.h **** 
 1004              		.loc 1 67 0
 1005 00ec A168     		ldr	r1, [r4, #8]
 1006 00ee 55A8     		add	r0, sp, #340
 1007 00f0 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1008              	.LVL111:
 1009 00f4 A168     		ldr	r1, [r4, #8]
 1010              	.LVL112:
 1011              	.LBB943:
 1012              	.LBB944:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1013              		.loc 6 69 0
 1014 00f6 01F58871 		add	r1, r1, #272
 1015              	.LVL113:
 1016 00fa 55A8     		add	r0, sp, #340
 1017              	.LVL114:
 1018 00fc FFF7FEFF 		bl	_ZN3MatmLERKS_
 1019              	.LVL115:
 1020              		.loc 6 70 0
 1021 0100 3246     		mov	r2, r6
 1022 0102 55A9     		add	r1, sp, #340
 1023              	.LVL116:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 27


 1024 0104 66A8     		add	r0, sp, #408
 1025 0106 FFF7FEFF 		bl	memcpy
 1026              	.LVL117:
 1027              	.LBE944:
 1028              	.LBE943:
 1029              	.LBB945:
 1030              	.LBB946:
  71:Core/Inc/utils\math/mat.h ****         }
  72:Core/Inc/utils\math/mat.h **** 
  73:Core/Inc/utils\math/mat.h ****         friend Mat operator*(Mat lhs, const Vec3<float> &rhs) {
  74:Core/Inc/utils\math/mat.h ****                 lhs *= rhs;
  75:Core/Inc/utils\math/mat.h ****                 return lhs;
  76:Core/Inc/utils\math/mat.h ****         }
  77:Core/Inc/utils\math/mat.h **** 
  78:Core/Inc/utils\math/mat.h ****         Mat mult(const Mat &m);
  79:Core/Inc/utils\math/mat.h ****         Mat mult_EW(float num);
  80:Core/Inc/utils\math/mat.h ****         Mat transpose();
  81:Core/Inc/utils\math/mat.h **** 
  82:Core/Inc/utils\math/mat.h ****         // Just an alias for getting transpose of a matrix
  83:Core/Inc/utils\math/mat.h ****         inline Mat trans() { return transpose(); }
 1031              		.loc 6 83 0
 1032 010a A168     		ldr	r1, [r4, #8]
 1033 010c 77A8     		add	r0, sp, #476
 1034 010e FFF7FEFF 		bl	_ZN3Mat9transposeEv
 1035              	.LVL118:
 1036              	.LBE946:
 1037              	.LBE945:
 1038              	.LBB947:
 1039              	.LBB948:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1040              		.loc 6 69 0
 1041 0112 77A9     		add	r1, sp, #476
 1042              	.LVL119:
 1043 0114 66A8     		add	r0, sp, #408
 1044              	.LVL120:
 1045 0116 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1046              	.LVL121:
  70:Core/Inc/utils\math/mat.h ****         }
 1047              		.loc 6 70 0
 1048 011a 3246     		mov	r2, r6
 1049 011c 66A9     		add	r1, sp, #408
 1050              	.LVL122:
 1051 011e 88A8     		add	r0, sp, #544
 1052 0120 FFF7FEFF 		bl	memcpy
 1053              	.LVL123:
 1054              	.LBE948:
 1055              	.LBE947:
  67:Core/Inc/utils\filter/kalman.h **** 
 1056              		.loc 1 67 0
 1057 0124 A168     		ldr	r1, [r4, #8]
 1058              	.LVL124:
 1059              	.LBB949:
 1060              	.LBB950:
  59:Core/Inc/utils\math/mat.h ****                 return lhs;
 1061              		.loc 6 59 0
 1062 0126 01F5AA71 		add	r1, r1, #340
 1063              	.LVL125:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 28


 1064 012a 88A8     		add	r0, sp, #544
 1065              	.LVL126:
 1066 012c FFF7FEFF 		bl	_ZN3MatpLERKS_
 1067              	.LVL127:
  60:Core/Inc/utils\math/mat.h ****         }
 1068              		.loc 6 60 0
 1069 0130 3246     		mov	r2, r6
 1070 0132 88A9     		add	r1, sp, #544
 1071              	.LVL128:
 1072 0134 99A8     		add	r0, sp, #612
 1073 0136 FFF7FEFF 		bl	memcpy
 1074              	.LVL129:
 1075              	.LBE950:
 1076              	.LBE949:
  67:Core/Inc/utils\filter/kalman.h **** 
 1077              		.loc 1 67 0
 1078 013a A068     		ldr	r0, [r4, #8]
 1079 013c 3A46     		mov	r2, r7
 1080 013e 99A9     		add	r1, sp, #612
 1081 0140 00F58870 		add	r0, r0, #272
 1082 0144 FFF7FEFF 		bl	memcpy
 1083              	.LVL130:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1084              		.loc 1 70 0
 1085 0148 A168     		ldr	r1, [r4, #8]
 1086 014a 01F58871 		add	r1, r1, #272
 1087 014e 0DEB0600 		add	r0, sp, r6
 1088 0152 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1089              	.LVL131:
 1090 0156 A168     		ldr	r1, [r4, #8]
 1091              	.LVL132:
 1092              	.LBB951:
 1093              	.LBB952:
 1094              		.loc 6 83 0
 1095 0158 8831     		adds	r1, r1, #136
 1096              	.LVL133:
 1097 015a 6846     		mov	r0, sp
 1098 015c FFF7FEFF 		bl	_ZN3Mat9transposeEv
 1099              	.LVL134:
 1100              	.LBE952:
 1101              	.LBE951:
 1102              	.LBB953:
 1103              	.LBB954:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1104              		.loc 6 69 0
 1105 0160 6946     		mov	r1, sp
 1106 0162 0DEB0600 		add	r0, sp, r6
 1107 0166 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1108              	.LVL135:
  70:Core/Inc/utils\math/mat.h ****         }
 1109              		.loc 6 70 0
 1110 016a 3246     		mov	r2, r6
 1111 016c 0DEB0601 		add	r1, sp, r6
 1112 0170 22A8     		add	r0, sp, #136
 1113 0172 FFF7FEFF 		bl	memcpy
 1114              	.LVL136:
 1115              	.LBE954:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 29


 1116              	.LBE953:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1117              		.loc 1 70 0
 1118 0176 A168     		ldr	r1, [r4, #8]
 1119 0178 8831     		adds	r1, r1, #136
 1120 017a 33A8     		add	r0, sp, #204
 1121 017c FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1122              	.LVL137:
 1123 0180 A168     		ldr	r1, [r4, #8]
 1124              	.LVL138:
 1125              	.LBB955:
 1126              	.LBB956:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1127              		.loc 6 69 0
 1128 0182 01F58871 		add	r1, r1, #272
 1129              	.LVL139:
 1130 0186 33A8     		add	r0, sp, #204
 1131              	.LVL140:
 1132 0188 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1133              	.LVL141:
  70:Core/Inc/utils\math/mat.h ****         }
 1134              		.loc 6 70 0
 1135 018c 3246     		mov	r2, r6
 1136 018e 33A9     		add	r1, sp, #204
 1137              	.LVL142:
 1138 0190 44A8     		add	r0, sp, #272
 1139 0192 FFF7FEFF 		bl	memcpy
 1140              	.LVL143:
 1141              	.LBE956:
 1142              	.LBE955:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1143              		.loc 1 70 0
 1144 0196 A168     		ldr	r1, [r4, #8]
 1145              	.LVL144:
 1146              	.LBB957:
 1147              	.LBB958:
 1148              		.loc 6 83 0
 1149 0198 8831     		adds	r1, r1, #136
 1150              	.LVL145:
 1151 019a 55A8     		add	r0, sp, #340
 1152 019c FFF7FEFF 		bl	_ZN3Mat9transposeEv
 1153              	.LVL146:
 1154              	.LBE958:
 1155              	.LBE957:
 1156              	.LBB959:
 1157              	.LBB960:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1158              		.loc 6 69 0
 1159 01a0 55A9     		add	r1, sp, #340
 1160              	.LVL147:
 1161 01a2 44A8     		add	r0, sp, #272
 1162              	.LVL148:
 1163 01a4 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1164              	.LVL149:
  70:Core/Inc/utils\math/mat.h ****         }
 1165              		.loc 6 70 0
 1166 01a8 3246     		mov	r2, r6
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 30


 1167 01aa 44A9     		add	r1, sp, #272
 1168              	.LVL150:
 1169 01ac 66A8     		add	r0, sp, #408
 1170 01ae FFF7FEFF 		bl	memcpy
 1171              	.LVL151:
 1172              	.LBE960:
 1173              	.LBE959:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1174              		.loc 1 70 0
 1175 01b2 A168     		ldr	r1, [r4, #8]
 1176              	.LVL152:
 1177              	.LBB961:
 1178              	.LBB962:
  59:Core/Inc/utils\math/mat.h ****                 return lhs;
 1179              		.loc 6 59 0
 1180 01b4 01F5CC71 		add	r1, r1, #408
 1181              	.LVL153:
 1182 01b8 66A8     		add	r0, sp, #408
 1183              	.LVL154:
 1184 01ba FFF7FEFF 		bl	_ZN3MatpLERKS_
 1185              	.LVL155:
  60:Core/Inc/utils\math/mat.h ****         }
 1186              		.loc 6 60 0
 1187 01be 3246     		mov	r2, r6
 1188 01c0 66A9     		add	r1, sp, #408
 1189              	.LVL156:
 1190 01c2 77A8     		add	r0, sp, #476
 1191 01c4 FFF7FEFF 		bl	memcpy
 1192              	.LVL157:
 1193              	.LBE962:
 1194              	.LBE961:
 1195              	.LBB963:
 1196              	.LBB964:
  84:Core/Inc/utils\math/mat.h **** 
  85:Core/Inc/utils\math/mat.h ****         void fill(float num) {
  86:Core/Inc/utils\math/mat.h ****                 for (uint8_t i = 0; i < rows_; ++i) {
  87:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
  88:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
  89:Core/Inc/utils\math/mat.h ****                         }
  90:Core/Inc/utils\math/mat.h ****                 }
  91:Core/Inc/utils\math/mat.h ****         }
  92:Core/Inc/utils\math/mat.h **** 
  93:Core/Inc/utils\math/mat.h ****         template <size_t M, size_t N>
  94:Core/Inc/utils\math/mat.h ****         void fill(const float (&mat)[M][N]) {
  95:Core/Inc/utils\math/mat.h ****                 if (M != rows_ && N != cols_) {
  96:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
  97:Core/Inc/utils\math/mat.h ****                 }
  98:Core/Inc/utils\math/mat.h ****                 for (uint8_t i = 0; i < M; ++i) {
  99:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < N; ++j) {
 100:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = mat[i][j];
 101:Core/Inc/utils\math/mat.h ****                         }
 102:Core/Inc/utils\math/mat.h ****                 }
 103:Core/Inc/utils\math/mat.h ****         }
 104:Core/Inc/utils\math/mat.h **** 
 105:Core/Inc/utils\math/mat.h ****         void add_Rows(uint8_t r) {
 106:Core/Inc/utils\math/mat.h ****                 if (r + rows_ <= MAX_MATRIX_ROWS) {
 107:Core/Inc/utils\math/mat.h ****                         rows_ += r;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 31


 108:Core/Inc/utils\math/mat.h ****                 }
 109:Core/Inc/utils\math/mat.h ****         }
 110:Core/Inc/utils\math/mat.h **** 
 111:Core/Inc/utils\math/mat.h ****         void add_Cols(uint8_t c) {
 112:Core/Inc/utils\math/mat.h ****                 if (c + cols_ <= MAX_MATRIX_COLS) {
 113:Core/Inc/utils\math/mat.h ****                         cols_ += c;
 114:Core/Inc/utils\math/mat.h ****                 }
 115:Core/Inc/utils\math/mat.h ****         }
 116:Core/Inc/utils\math/mat.h **** 
 117:Core/Inc/utils\math/mat.h ****         static Mat eye(uint8_t n);
 118:Core/Inc/utils\math/mat.h **** 
 119:Core/Inc/utils\math/mat.h ****         bool is_Zero() const;
 120:Core/Inc/utils\math/mat.h ****         void swap_Rows(uint8_t a, uint8_t b);
 121:Core/Inc/utils\math/mat.h ****         void swap_Cols(size_t a, size_t b);        
 122:Core/Inc/utils\math/mat.h ****         bool inv(Mat &inv) const;
 123:Core/Inc/utils\math/mat.h **** 
 124:Core/Inc/utils\math/mat.h ****         Mat inv() const
 125:Core/Inc/utils\math/mat.h ****         {
 126:Core/Inc/utils\math/mat.h ****                 Mat i(rows_, cols_);
 1197              		.loc 6 126 0
 1198 01c8 9DF81D22 		ldrb	r2, [sp, #541]	@ zero_extendqisi2
 1199 01cc 9DF81C12 		ldrb	r1, [sp, #540]	@ zero_extendqisi2
 1200 01d0 88A8     		add	r0, sp, #544
 1201 01d2 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1202              	.LVL158:
 127:Core/Inc/utils\math/mat.h ****                 if(inv(i)) {
 1203              		.loc 6 127 0
 1204 01d6 88A9     		add	r1, sp, #544
 1205 01d8 77A8     		add	r0, sp, #476
 1206              	.LVL159:
 1207 01da FFF7FEFF 		bl	_ZNK3Mat3invERS_
 1208              	.LVL160:
 1209 01de 0028     		cmp	r0, #0
 1210 01e0 70D0     		beq	.L58
 1211              	.L55:
 1212              	.LVL161:
 1213              	.LBE964:
 1214              	.LBE963:
 1215              	.LBB969:
 1216              	.LBB970:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1217              		.loc 6 69 0
 1218 01e2 88A9     		add	r1, sp, #544
 1219              	.LVL162:
 1220 01e4 22A8     		add	r0, sp, #136
 1221              	.LVL163:
 1222 01e6 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1223              	.LVL164:
  70:Core/Inc/utils\math/mat.h ****         }
 1224              		.loc 6 70 0
 1225 01ea 4426     		movs	r6, #68
 1226 01ec 3246     		mov	r2, r6
 1227 01ee 22A9     		add	r1, sp, #136
 1228              	.LVL165:
 1229 01f0 99A8     		add	r0, sp, #612
 1230 01f2 FFF7FEFF 		bl	memcpy
 1231              	.LVL166:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 32


 1232              	.LBE970:
 1233              	.LBE969:
  70:Core/Inc/utils\filter/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1234              		.loc 1 70 0
 1235 01f6 04F1D807 		add	r7, r4, #216
 1236 01fa 4FF04208 		mov	r8, #66
 1237 01fe 4246     		mov	r2, r8
 1238 0200 99A9     		add	r1, sp, #612
 1239 0202 3846     		mov	r0, r7
 1240 0204 FFF7FEFF 		bl	memcpy
 1241              	.LVL167:
  71:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
 1242              		.loc 1 71 0
 1243 0208 3946     		mov	r1, r7
 1244 020a 88A8     		add	r0, sp, #544
 1245 020c FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1246              	.LVL168:
 1247 0210 04F19401 		add	r1, r4, #148
 1248 0214 66A8     		add	r0, sp, #408
 1249 0216 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1250              	.LVL169:
 1251 021a A168     		ldr	r1, [r4, #8]
 1252 021c 8831     		adds	r1, r1, #136
 1253 021e 44A8     		add	r0, sp, #272
 1254 0220 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1255              	.LVL170:
 1256              	.LBB971:
 1257              	.LBB972:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1258              		.loc 6 69 0
 1259 0224 2946     		mov	r1, r5
 1260 0226 44A8     		add	r0, sp, #272
 1261              	.LVL171:
 1262 0228 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1263              	.LVL172:
  70:Core/Inc/utils\math/mat.h ****         }
 1264              		.loc 6 70 0
 1265 022c 3246     		mov	r2, r6
 1266 022e 44A9     		add	r1, sp, #272
 1267              	.LVL173:
 1268 0230 55A8     		add	r0, sp, #340
 1269 0232 FFF7FEFF 		bl	memcpy
 1270              	.LVL174:
 1271              	.LBE972:
 1272              	.LBE971:
 1273              	.LBB973:
 1274              	.LBB974:
  64:Core/Inc/utils\math/mat.h ****                 return lhs;
 1275              		.loc 6 64 0
 1276 0236 55A9     		add	r1, sp, #340
 1277              	.LVL175:
 1278 0238 66A8     		add	r0, sp, #408
 1279              	.LVL176:
 1280 023a FFF7FEFF 		bl	_ZN3MatmIERKS_
 1281              	.LVL177:
  65:Core/Inc/utils\math/mat.h ****         }
 1282              		.loc 6 65 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 33


 1283 023e 3246     		mov	r2, r6
 1284 0240 66A9     		add	r1, sp, #408
 1285              	.LVL178:
 1286 0242 77A8     		add	r0, sp, #476
 1287 0244 FFF7FEFF 		bl	memcpy
 1288              	.LVL179:
 1289              	.LBE974:
 1290              	.LBE973:
 1291              	.LBB975:
 1292              	.LBB976:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1293              		.loc 6 69 0
 1294 0248 77A9     		add	r1, sp, #476
 1295              	.LVL180:
 1296 024a 88A8     		add	r0, sp, #544
 1297              	.LVL181:
 1298 024c FFF7FEFF 		bl	_ZN3MatmLERKS_
 1299              	.LVL182:
  70:Core/Inc/utils\math/mat.h ****         }
 1300              		.loc 6 70 0
 1301 0250 3246     		mov	r2, r6
 1302 0252 88A9     		add	r1, sp, #544
 1303              	.LVL183:
 1304 0254 99A8     		add	r0, sp, #612
 1305 0256 FFF7FEFF 		bl	memcpy
 1306              	.LVL184:
 1307              	.LBE976:
 1308              	.LBE975:
  71:Core/Inc/utils\filter/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
 1309              		.loc 1 71 0
 1310 025a 99A9     		add	r1, sp, #612
 1311 025c 2846     		mov	r0, r5
 1312 025e FFF7FEFF 		bl	_ZN3MatpLERKS_
 1313              	.LVL185:
  72:Core/Inc/utils\filter/kalman.h ****                 }
 1314              		.loc 1 72 0
 1315 0262 A168     		ldr	r1, [r4, #8]
 1316 0264 CC31     		adds	r1, r1, #204
 1317 0266 77A8     		add	r0, sp, #476
 1318 0268 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1319              	.LVL186:
 1320 026c 3946     		mov	r1, r7
 1321 026e 55A8     		add	r0, sp, #340
 1322 0270 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1323              	.LVL187:
 1324 0274 A168     		ldr	r1, [r4, #8]
 1325              	.LVL188:
 1326              	.LBB977:
 1327              	.LBB978:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1328              		.loc 6 69 0
 1329 0276 8831     		adds	r1, r1, #136
 1330              	.LVL189:
 1331 0278 55A8     		add	r0, sp, #340
 1332              	.LVL190:
 1333 027a FFF7FEFF 		bl	_ZN3MatmLERKS_
 1334              	.LVL191:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 34


  70:Core/Inc/utils\math/mat.h ****         }
 1335              		.loc 6 70 0
 1336 027e 3246     		mov	r2, r6
 1337 0280 55A9     		add	r1, sp, #340
 1338              	.LVL192:
 1339 0282 66A8     		add	r0, sp, #408
 1340 0284 FFF7FEFF 		bl	memcpy
 1341              	.LVL193:
 1342              	.LBE978:
 1343              	.LBE977:
 1344              	.LBB979:
 1345              	.LBB980:
  64:Core/Inc/utils\math/mat.h ****                 return lhs;
 1346              		.loc 6 64 0
 1347 0288 66A9     		add	r1, sp, #408
 1348              	.LVL194:
 1349 028a 77A8     		add	r0, sp, #476
 1350              	.LVL195:
 1351 028c FFF7FEFF 		bl	_ZN3MatmIERKS_
 1352              	.LVL196:
  65:Core/Inc/utils\math/mat.h ****         }
 1353              		.loc 6 65 0
 1354 0290 3246     		mov	r2, r6
 1355 0292 77A9     		add	r1, sp, #476
 1356              	.LVL197:
 1357 0294 88A8     		add	r0, sp, #544
 1358 0296 FFF7FEFF 		bl	memcpy
 1359              	.LVL198:
 1360              	.LBE980:
 1361              	.LBE979:
  72:Core/Inc/utils\filter/kalman.h ****                 }
 1362              		.loc 1 72 0
 1363 029a A168     		ldr	r1, [r4, #8]
 1364              	.LVL199:
 1365              	.LBB981:
 1366              	.LBB982:
  69:Core/Inc/utils\math/mat.h ****                 return lhs;
 1367              		.loc 6 69 0
 1368 029c 01F58871 		add	r1, r1, #272
 1369              	.LVL200:
 1370 02a0 88A8     		add	r0, sp, #544
 1371              	.LVL201:
 1372 02a2 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1373              	.LVL202:
  70:Core/Inc/utils\math/mat.h ****         }
 1374              		.loc 6 70 0
 1375 02a6 3246     		mov	r2, r6
 1376 02a8 88A9     		add	r1, sp, #544
 1377              	.LVL203:
 1378 02aa 99A8     		add	r0, sp, #612
 1379 02ac FFF7FEFF 		bl	memcpy
 1380              	.LVL204:
 1381              	.LBE982:
 1382              	.LBE981:
  72:Core/Inc/utils\filter/kalman.h ****                 }
 1383              		.loc 1 72 0
 1384 02b0 A068     		ldr	r0, [r4, #8]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 35


 1385 02b2 4246     		mov	r2, r8
 1386 02b4 99A9     		add	r1, sp, #612
 1387 02b6 00F58870 		add	r0, r0, #272
 1388 02ba FFF7FEFF 		bl	memcpy
 1389              	.LVL205:
 1390 02be BBE6     		b	.L50
 1391              	.LVL206:
 1392              	.L56:
 1393              	.LBB983:
 1394              	.LBB968:
 1395              	.LBB965:
 1396              	.LBB966:
  86:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
 1397              		.loc 6 86 0
 1398 02c0 0130     		adds	r0, r0, #1
 1399              	.LVL207:
 1400 02c2 C0B2     		uxtb	r0, r0
 1401              	.LVL208:
 1402              	.L58:
 1403 02c4 9DF86032 		ldrb	r3, [sp, #608]	@ zero_extendqisi2
 1404 02c8 8342     		cmp	r3, r0
 1405 02ca 8AD9     		bls	.L55
 1406              	.LBB967:
  87:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
 1407              		.loc 6 87 0
 1408 02cc 0023     		movs	r3, #0
 1409              	.L57:
 1410              	.LVL209:
 1411 02ce 9DF86122 		ldrb	r2, [sp, #609]	@ zero_extendqisi2
 1412 02d2 9A42     		cmp	r2, r3
 1413 02d4 F4D9     		bls	.L56
  88:Core/Inc/utils\math/mat.h ****                         }
 1414              		.loc 6 88 0
 1415 02d6 03EB8002 		add	r2, r3, r0, lsl #2
 1416 02da AAA9     		add	r1, sp, #680
 1417 02dc 01EB8202 		add	r2, r1, r2, lsl #2
 1418 02e0 0021     		movs	r1, #0
 1419 02e2 42F8881C 		str	r1, [r2, #-136]	@ float
  87:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
 1420              		.loc 6 87 0
 1421 02e6 0133     		adds	r3, r3, #1
 1422              	.LVL210:
 1423 02e8 DBB2     		uxtb	r3, r3
 1424              	.LVL211:
 1425 02ea F0E7     		b	.L57
 1426              	.L63:
 1427              		.align	2
 1428              	.L62:
 1429 02ec 00000000 		.word	.LC0
 1430              	.LBE967:
 1431              	.LBE966:
 1432              	.LBE965:
 1433              	.LBE968:
 1434              	.LBE983:
 1435              		.cfi_endproc
 1436              	.LFE414:
 1438              		.section	.text._ZN10Exp_SmoothD0Ev,"axG",%progbits,_ZN10Exp_SmoothD5Ev,comdat
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 36


 1439              		.align	1
 1440              		.weak	_ZN10Exp_SmoothD0Ev
 1441              		.syntax unified
 1442              		.thumb
 1443              		.thumb_func
 1444              		.fpu fpv4-sp-d16
 1446              	_ZN10Exp_SmoothD0Ev:
 1447              	.LFB439:
 1448              		.loc 3 23 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452              	.LVL212:
 1453 0000 10B5     		push	{r4, lr}
 1454              	.LCFI13:
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 14, -4
 1458 0002 0446     		mov	r4, r0
 1459              		.loc 3 23 0
 1460 0004 1021     		movs	r1, #16
 1461 0006 FFF7FEFF 		bl	_ZdlPvj
 1462              	.LVL213:
 1463 000a 2046     		mov	r0, r4
 1464 000c 10BD     		pop	{r4, pc}
 1465              		.cfi_endproc
 1466              	.LFE439:
 1468              		.section	.text._ZN12State_Sensor12get_InstanceEv,"ax",%progbits
 1469              		.align	1
 1470              		.global	_ZN12State_Sensor12get_InstanceEv
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1474              		.fpu fpv4-sp-d16
 1476              	_ZN12State_Sensor12get_InstanceEv:
 1477              	.LFB529:
  25:Core/Src/parts/state_sensor.cpp ****         static State_Sensor sState_Sensor_Instance;
 1478              		.loc 5 25 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482 0000 08B5     		push	{r3, lr}
 1483              	.LCFI14:
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 3, -8
 1486              		.cfi_offset 14, -4
  26:Core/Src/parts/state_sensor.cpp **** 
 1487              		.loc 5 26 0
 1488 0002 0D4B     		ldr	r3, .L70
 1489 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1490 0006 BFF35B8F 		dmb	ish
 1491 000a 13F0010F 		tst	r3, #1
 1492 000e 05D0     		beq	.L69
 1493              	.L67:
  28:Core/Src/parts/state_sensor.cpp ****         sState_Sensor_Instance.p_sensor_ = &p_sens;
 1494              		.loc 5 28 0
 1495 0010 FFF7FEFF 		bl	_ZN14PositionSensor12get_InstanceEv
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 37


 1496              	.LVL214:
  29:Core/Src/parts/state_sensor.cpp **** 
 1497              		.loc 5 29 0
 1498 0014 094B     		ldr	r3, .L70+4
 1499 0016 1860     		str	r0, [r3]
  32:Core/Src/parts/state_sensor.cpp **** 
 1500              		.loc 5 32 0
 1501 0018 1846     		mov	r0, r3
 1502              	.LVL215:
 1503 001a 08BD     		pop	{r3, pc}
 1504              	.LVL216:
 1505              	.L69:
  26:Core/Src/parts/state_sensor.cpp **** 
 1506              		.loc 5 26 0 discriminator 1
 1507 001c 0648     		ldr	r0, .L70
 1508 001e FFF7FEFF 		bl	__cxa_guard_acquire
 1509              	.LVL217:
 1510 0022 0028     		cmp	r0, #0
 1511 0024 F4D0     		beq	.L67
  26:Core/Src/parts/state_sensor.cpp **** 
 1512              		.loc 5 26 0 is_stmt 0 discriminator 2
 1513 0026 0448     		ldr	r0, .L70
 1514 0028 FFF7FEFF 		bl	__cxa_guard_release
 1515              	.LVL218:
 1516 002c 044A     		ldr	r2, .L70+8
 1517 002e 0549     		ldr	r1, .L70+12
 1518 0030 0248     		ldr	r0, .L70+4
 1519 0032 FFF7FEFF 		bl	__aeabi_atexit
 1520              	.LVL219:
 1521 0036 EBE7     		b	.L67
 1522              	.L71:
 1523              		.align	2
 1524              	.L70:
 1525 0038 00000000 		.word	.LANCHOR1
 1526 003c 00000000 		.word	.LANCHOR2
 1527 0040 00000000 		.word	__dso_handle
 1528 0044 00000000 		.word	_ZN12State_SensorD1Ev
 1529              		.cfi_endproc
 1530              	.LFE529:
 1532              		.section	.text._ZN12State_Sensor4initEm,"ax",%progbits
 1533              		.align	1
 1534              		.global	_ZN12State_Sensor4initEm
 1535              		.syntax unified
 1536              		.thumb
 1537              		.thumb_func
 1538              		.fpu fpv4-sp-d16
 1540              	_ZN12State_Sensor4initEm:
 1541              	.LFB530:
  49:Core/Src/parts/state_sensor.cpp ****         IMU_Init();
 1542              		.loc 5 49 0 is_stmt 1
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 16
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546              	.LVL220:
 1547 0000 70B5     		push	{r4, r5, r6, lr}
 1548              	.LCFI15:
 1549              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 38


 1550              		.cfi_offset 4, -16
 1551              		.cfi_offset 5, -12
 1552              		.cfi_offset 6, -8
 1553              		.cfi_offset 14, -4
 1554 0002 84B0     		sub	sp, sp, #16
 1555              	.LCFI16:
 1556              		.cfi_def_cfa_offset 32
 1557 0004 0446     		mov	r4, r0
 1558 0006 0D46     		mov	r5, r1
  50:Core/Src/parts/state_sensor.cpp ****         Stepper_Init();
 1559              		.loc 5 50 0
 1560 0008 FFF7FEFF 		bl	_Z8IMU_Initv
 1561              	.LVL221:
  51:Core/Src/parts/state_sensor.cpp ****         Lidars_Init();
 1562              		.loc 5 51 0
 1563 000c FFF7FEFF 		bl	_Z12Stepper_Initv
 1564              	.LVL222:
  52:Core/Src/parts/state_sensor.cpp ****         
 1565              		.loc 5 52 0
 1566 0010 FFF7FEFF 		bl	_Z11Lidars_Initv
 1567              	.LVL223:
  58:Core/Src/parts/state_sensor.cpp ****                 mpu_is_ready = true;
 1568              		.loc 5 58 0
 1569 0014 3048     		ldr	r0, .L89
 1570 0016 FFF7FEFF 		bl	_Z21MPU6050_Read_NormAxesP7MPU6050
 1571              	.LVL224:
 1572 001a C8B1     		cbz	r0, .L86
  55:Core/Src/parts/state_sensor.cpp ****         
 1573              		.loc 5 55 0
 1574 001c 0026     		movs	r6, #0
 1575              	.L73:
 1576              	.LVL225:
  63:Core/Src/parts/state_sensor.cpp ****                 hmc_is_ready = true;
 1577              		.loc 5 63 0
 1578 001e 2F48     		ldr	r0, .L89+4
 1579 0020 FFF7FEFF 		bl	_Z12HMC5883_ReadP7HMC5883
 1580              	.LVL226:
 1581 0024 B0B1     		cbz	r0, .L87
  55:Core/Src/parts/state_sensor.cpp ****         
 1582              		.loc 5 55 0
 1583 0026 0023     		movs	r3, #0
 1584              	.L74:
 1585              	.LVL227:
  67:Core/Src/parts/state_sensor.cpp ****                 //! Error Condition
 1586              		.loc 5 67 0
 1587 0028 06B1     		cbz	r6, .L75
  67:Core/Src/parts/state_sensor.cpp ****                 //! Error Condition
 1588              		.loc 5 67 0 is_stmt 0 discriminator 1
 1589 002a 13B9     		cbnz	r3, .L76
 1590              	.L75:
  69:Core/Src/parts/state_sensor.cpp ****         }
 1591              		.loc 5 69 0 is_stmt 1
 1592 002c 0120     		movs	r0, #1
 1593 002e FFF7FEFF 		bl	_Z5error5Error
 1594              	.LVL228:
 1595              	.L76:
 1596              	.LBB984:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 39


 1597              	.LBB985:
  27:Core/Inc/parts/state_sensor.h **** 
  28:Core/Inc/parts/state_sensor.h ****         static State_Sensor& get_Instance();
  29:Core/Inc/parts/state_sensor.h **** 
  30:Core/Inc/parts/state_sensor.h ****         int init(uint32_t dt_millis);
  31:Core/Inc/parts/state_sensor.h ****         Vec3<float> read_State(Vec3<float> base_state, const State_Vars *sv, uint32_t dt_millis);
  32:Core/Inc/parts/state_sensor.h **** 
  33:Core/Inc/parts/state_sensor.h ****         
  34:Core/Inc/parts/state_sensor.h ****         void add_PSensor(Sensor<float> *sen) { p_sensor_->add_Sensor(sen); }
 1598              		.loc 2 34 0
 1599 0032 2268     		ldr	r2, [r4]
 1600              	.LVL229:
 1601              	.LBB986:
 1602              	.LBB987:
 1603              	.LBB988:
 1604              		.file 7 "Core/Inc/parts/sensors/position_sensor.h"
   1:Core/Inc/parts/sensors/position_sensor.h **** /*
   2:Core/Inc/parts/sensors/position_sensor.h ****  * position_sensor.h
   3:Core/Inc/parts/sensors/position_sensor.h ****  * 
   4:Core/Inc/parts/sensors/position_sensor.h ****  * Created : 11/29/2018
   5:Core/Inc/parts/sensors/position_sensor.h ****  *  Author : n-is
   6:Core/Inc/parts/sensors/position_sensor.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/parts/sensors/position_sensor.h ****  */
   8:Core/Inc/parts/sensors/position_sensor.h **** 
   9:Core/Inc/parts/sensors/position_sensor.h **** #ifndef _POSITION_SENSOR_H_
  10:Core/Inc/parts/sensors/position_sensor.h **** #define _POSITION_SENSOR_H_
  11:Core/Inc/parts/sensors/position_sensor.h **** 
  12:Core/Inc/parts/sensors/position_sensor.h **** #include "vec3.h"
  13:Core/Inc/parts/sensors/position_sensor.h **** #include "sensor.h"
  14:Core/Inc/parts/sensors/position_sensor.h **** #include "kalman.h"
  15:Core/Inc/parts/sensors/position_sensor.h **** 
  16:Core/Inc/parts/sensors/position_sensor.h **** struct State_Vars;
  17:Core/Inc/parts/sensors/position_sensor.h **** enum class Field;
  18:Core/Inc/parts/sensors/position_sensor.h **** 
  19:Core/Inc/parts/sensors/position_sensor.h **** #define MAX_POSITION_SENSORS    (4)
  20:Core/Inc/parts/sensors/position_sensor.h **** 
  21:Core/Inc/parts/sensors/position_sensor.h **** extern Kalman_Vars gEncoders_KV;
  22:Core/Inc/parts/sensors/position_sensor.h **** extern Kalman_Vars gXLidarEncoder_KV;
  23:Core/Inc/parts/sensors/position_sensor.h **** 
  24:Core/Inc/parts/sensors/position_sensor.h **** int init_XLidarEncoderKalman(uint32_t dt_millis);
  25:Core/Inc/parts/sensors/position_sensor.h **** int init_EncodersKalman(uint32_t dt_millis);
  26:Core/Inc/parts/sensors/position_sensor.h **** 
  27:Core/Inc/parts/sensors/position_sensor.h **** 
  28:Core/Inc/parts/sensors/position_sensor.h **** class PositionSensor
  29:Core/Inc/parts/sensors/position_sensor.h **** {
  30:Core/Inc/parts/sensors/position_sensor.h **** public:
  31:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor(PositionSensor &&) = default;
  32:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor(const PositionSensor &) = default;
  33:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor &operator=(PositionSensor &&) = default;
  34:Core/Inc/parts/sensors/position_sensor.h ****         PositionSensor &operator=(const PositionSensor &) = default;
  35:Core/Inc/parts/sensors/position_sensor.h ****         ~PositionSensor() { }
  36:Core/Inc/parts/sensors/position_sensor.h **** 
  37:Core/Inc/parts/sensors/position_sensor.h ****         static PositionSensor& get_Instance();
  38:Core/Inc/parts/sensors/position_sensor.h **** 
  39:Core/Inc/parts/sensors/position_sensor.h ****         int init(uint32_t dt_millis);
  40:Core/Inc/parts/sensors/position_sensor.h **** 
  41:Core/Inc/parts/sensors/position_sensor.h ****         // Add sensor so that it can be used for calculating position
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 40


  42:Core/Inc/parts/sensors/position_sensor.h ****         void add_Sensor(Sensor<float> *sen) {
  43:Core/Inc/parts/sensors/position_sensor.h ****                 for (uint8_t i = 0; i < sensor_count_; ++i) {
 1605              		.loc 7 43 0
 1606 0034 0023     		movs	r3, #0
 1607              	.LVL230:
 1608              	.L79:
 1609 0036 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 1610 0038 9942     		cmp	r1, r3
 1611 003a 0DD9     		bls	.L77
  44:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 1612              		.loc 7 44 0
 1613 003c 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1614              	.LVL231:
 1615              	.LBB989:
 1616              	.LBB990:
 1617              		.file 8 "Core/Inc/parts/sensors/sensor.h"
   1:Core/Inc/parts/sensors/sensor.h **** /*
   2:Core/Inc/parts/sensors/sensor.h ****  * sensor.h
   3:Core/Inc/parts/sensors/sensor.h ****  * 
   4:Core/Inc/parts/sensors/sensor.h ****  * Created : 11/29/2018
   5:Core/Inc/parts/sensors/sensor.h ****  *  Author : n-is
   6:Core/Inc/parts/sensors/sensor.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/parts/sensors/sensor.h ****  */
   8:Core/Inc/parts/sensors/sensor.h **** 
   9:Core/Inc/parts/sensors/sensor.h **** #ifndef _SENSOR_H_
  10:Core/Inc/parts/sensors/sensor.h **** #define _SENSOR_H_
  11:Core/Inc/parts/sensors/sensor.h **** 
  12:Core/Inc/parts/sensors/sensor.h **** enum class SensorName
  13:Core/Inc/parts/sensors/sensor.h **** {
  14:Core/Inc/parts/sensors/sensor.h ****         IMU1,
  15:Core/Inc/parts/sensors/sensor.h ****         Compass1,
  16:Core/Inc/parts/sensors/sensor.h **** 
  17:Core/Inc/parts/sensors/sensor.h ****         XEncoder,
  18:Core/Inc/parts/sensors/sensor.h ****         YEncoder,
  19:Core/Inc/parts/sensors/sensor.h ****         XLidar,
  20:Core/Inc/parts/sensors/sensor.h ****         YLidar
  21:Core/Inc/parts/sensors/sensor.h **** };
  22:Core/Inc/parts/sensors/sensor.h **** 
  23:Core/Inc/parts/sensors/sensor.h **** /**
  24:Core/Inc/parts/sensors/sensor.h ****  * @class : Sensor
  25:Core/Inc/parts/sensors/sensor.h ****  * @param T : The type of value read from the sensor
  26:Core/Inc/parts/sensors/sensor.h ****  * @brief : An abstract class from which all the sensors must implement
  27:Core/Inc/parts/sensors/sensor.h ****  */
  28:Core/Inc/parts/sensors/sensor.h **** template <class T>
  29:Core/Inc/parts/sensors/sensor.h **** class Sensor
  30:Core/Inc/parts/sensors/sensor.h **** {
  31:Core/Inc/parts/sensors/sensor.h **** public:
  32:Core/Inc/parts/sensors/sensor.h ****         Sensor() = default;
  33:Core/Inc/parts/sensors/sensor.h ****         Sensor(Sensor &&) = default;
  34:Core/Inc/parts/sensors/sensor.h ****         Sensor(const Sensor &) = default;
  35:Core/Inc/parts/sensors/sensor.h ****         Sensor &operator=(Sensor &&) = default;
  36:Core/Inc/parts/sensors/sensor.h ****         Sensor &operator=(const Sensor &) = default;
  37:Core/Inc/parts/sensors/sensor.h ****         virtual ~Sensor() { }
  38:Core/Inc/parts/sensors/sensor.h **** 
  39:Core/Inc/parts/sensors/sensor.h ****         virtual int init() = 0;
  40:Core/Inc/parts/sensors/sensor.h ****         SensorName get_Name() { return name_; }
  41:Core/Inc/parts/sensors/sensor.h ****         virtual T read() = 0;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 41


  42:Core/Inc/parts/sensors/sensor.h ****         virtual bool available() = 0;
  43:Core/Inc/parts/sensors/sensor.h ****         virtual void denit() = 0;
  44:Core/Inc/parts/sensors/sensor.h **** 
  45:Core/Inc/parts/sensors/sensor.h ****         friend bool operator==(Sensor &sen1, Sensor &sen2) { return (sen1.name_ == sen2.name_); }
 1618              		.loc 8 45 0
 1619 0040 4868     		ldr	r0, [r1, #4]
 1620 0042 2749     		ldr	r1, .L89+8
 1621              	.LVL232:
 1622 0044 4968     		ldr	r1, [r1, #4]
 1623              	.LVL233:
 1624              	.LBE990:
 1625              	.LBE989:
 1626              		.loc 7 44 0
 1627 0046 8842     		cmp	r0, r1
 1628 0048 0BD0     		beq	.L78
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 1629              		.loc 7 43 0
 1630 004a 0133     		adds	r3, r3, #1
 1631              	.LVL234:
 1632 004c DBB2     		uxtb	r3, r3
 1633              	.LVL235:
 1634 004e F2E7     		b	.L79
 1635              	.LVL236:
 1636              	.L86:
 1637              	.LBE988:
 1638              	.LBE987:
 1639              	.LBE986:
 1640              	.LBE985:
 1641              	.LBE984:
  59:Core/Src/parts/state_sensor.cpp ****         }
 1642              		.loc 5 59 0
 1643 0050 0126     		movs	r6, #1
 1644 0052 E4E7     		b	.L73
 1645              	.LVL237:
 1646              	.L87:
  64:Core/Src/parts/state_sensor.cpp ****         }
 1647              		.loc 5 64 0
 1648 0054 0123     		movs	r3, #1
 1649 0056 E7E7     		b	.L74
 1650              	.LVL238:
 1651              	.L77:
 1652              	.LBB994:
 1653              	.LBB993:
 1654              	.LBB992:
 1655              	.LBB991:
  45:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
  46:Core/Inc/parts/sensors/position_sensor.h ****                         }
  47:Core/Inc/parts/sensors/position_sensor.h ****                 }
  48:Core/Inc/parts/sensors/position_sensor.h ****                 p_sensors_[sensor_count_++] = sen;
 1656              		.loc 7 48 0
 1657 0058 4B1C     		adds	r3, r1, #1
 1658              	.LVL239:
 1659 005a 1374     		strb	r3, [r2, #16]
 1660 005c 204B     		ldr	r3, .L89+8
 1661 005e 42F82130 		str	r3, [r2, r1, lsl #2]
 1662              	.L78:
 1663              	.LVL240:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 42


 1664              	.LBE991:
 1665              	.LBE992:
 1666              	.LBE993:
 1667              	.LBE994:
 1668              	.LBB995:
 1669              	.LBB996:
 1670              		.loc 2 34 0
 1671 0062 2268     		ldr	r2, [r4]
 1672              	.LVL241:
 1673              	.LBB997:
 1674              	.LBB998:
 1675              	.LBB999:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 1676              		.loc 7 43 0
 1677 0064 0023     		movs	r3, #0
 1678              	.LVL242:
 1679              	.L82:
 1680 0066 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 1681 0068 9942     		cmp	r1, r3
 1682 006a 09D9     		bls	.L80
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 1683              		.loc 7 44 0
 1684 006c 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1685              	.LVL243:
 1686              	.LBB1000:
 1687              	.LBB1001:
 1688              		.loc 8 45 0
 1689 0070 4868     		ldr	r0, [r1, #4]
 1690 0072 1C49     		ldr	r1, .L89+12
 1691              	.LVL244:
 1692 0074 4968     		ldr	r1, [r1, #4]
 1693              	.LVL245:
 1694              	.LBE1001:
 1695              	.LBE1000:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 1696              		.loc 7 44 0
 1697 0076 8842     		cmp	r0, r1
 1698 0078 07D0     		beq	.L81
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 1699              		.loc 7 43 0
 1700 007a 0133     		adds	r3, r3, #1
 1701              	.LVL246:
 1702 007c DBB2     		uxtb	r3, r3
 1703              	.LVL247:
 1704 007e F2E7     		b	.L82
 1705              	.L80:
 1706              	.LBE999:
 1707              		.loc 7 48 0
 1708 0080 4B1C     		adds	r3, r1, #1
 1709              	.LVL248:
 1710 0082 1374     		strb	r3, [r2, #16]
 1711 0084 174B     		ldr	r3, .L89+12
 1712 0086 42F82130 		str	r3, [r2, r1, lsl #2]
 1713              	.L81:
 1714              	.LVL249:
 1715              	.LBE998:
 1716              	.LBE997:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 43


 1717              	.LBE996:
 1718              	.LBE995:
 1719              	.LBB1002:
 1720              	.LBB1003:
 1721              		.loc 2 34 0
 1722 008a 2268     		ldr	r2, [r4]
 1723              	.LVL250:
 1724              	.LBB1004:
 1725              	.LBB1005:
 1726              	.LBB1006:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 1727              		.loc 7 43 0
 1728 008c 0023     		movs	r3, #0
 1729              	.LVL251:
 1730              	.L85:
 1731 008e 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 1732 0090 9942     		cmp	r1, r3
 1733 0092 09D9     		bls	.L83
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 1734              		.loc 7 44 0
 1735 0094 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1736              	.LVL252:
 1737              	.LBB1007:
 1738              	.LBB1008:
 1739              		.loc 8 45 0
 1740 0098 4868     		ldr	r0, [r1, #4]
 1741 009a 1349     		ldr	r1, .L89+16
 1742              	.LVL253:
 1743 009c 4968     		ldr	r1, [r1, #4]
 1744              	.LVL254:
 1745              	.LBE1008:
 1746              	.LBE1007:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 1747              		.loc 7 44 0
 1748 009e 8842     		cmp	r0, r1
 1749 00a0 07D0     		beq	.L84
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 1750              		.loc 7 43 0
 1751 00a2 0133     		adds	r3, r3, #1
 1752              	.LVL255:
 1753 00a4 DBB2     		uxtb	r3, r3
 1754              	.LVL256:
 1755 00a6 F2E7     		b	.L85
 1756              	.L83:
 1757              	.LBE1006:
 1758              		.loc 7 48 0
 1759 00a8 4B1C     		adds	r3, r1, #1
 1760              	.LVL257:
 1761 00aa 1374     		strb	r3, [r2, #16]
 1762 00ac 0E4B     		ldr	r3, .L89+16
 1763 00ae 42F82130 		str	r3, [r2, r1, lsl #2]
 1764              	.L84:
 1765              	.LVL258:
 1766              	.LBE1005:
 1767              	.LBE1004:
 1768              	.LBE1003:
 1769              	.LBE1002:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 44


  84:Core/Src/parts/state_sensor.cpp ****         
 1770              		.loc 5 84 0
 1771 00b2 2946     		mov	r1, r5
 1772 00b4 2068     		ldr	r0, [r4]
 1773 00b6 FFF7FEFF 		bl	_ZN14PositionSensor4initEm
 1774              	.LVL259:
  86:Core/Src/parts/state_sensor.cpp ****         
 1775              		.loc 5 86 0
 1776 00ba 01AC     		add	r4, sp, #4
 1777              	.LVL260:
 1778 00bc 4FF47A72 		mov	r2, #1000
 1779 00c0 0549     		ldr	r1, .L89
 1780 00c2 2046     		mov	r0, r4
 1781 00c4 FFF7FEFF 		bl	_Z22MPU6050_Calc_OmegaBiasP7MPU6050m
 1782              	.LVL261:
 1783 00c8 084B     		ldr	r3, .L89+20
 1784 00ca 94E80700 		ldm	r4, {r0, r1, r2}
 1785 00ce 83E80700 		stm	r3, {r0, r1, r2}
  89:Core/Src/parts/state_sensor.cpp **** 
 1786              		.loc 5 89 0
 1787 00d2 0020     		movs	r0, #0
 1788 00d4 04B0     		add	sp, sp, #16
 1789              	.LCFI17:
 1790              		.cfi_def_cfa_offset 16
 1791              		@ sp needed
 1792 00d6 70BD     		pop	{r4, r5, r6, pc}
 1793              	.LVL262:
 1794              	.L90:
 1795              		.align	2
 1796              	.L89:
 1797 00d8 00000000 		.word	Body_IMU
 1798 00dc 00000000 		.word	Body_HMC
 1799 00e0 00000000 		.word	gXEncoder
 1800 00e4 00000000 		.word	gYEncoder
 1801 00e8 00000000 		.word	gXLidar
 1802 00ec 00000000 		.word	.LANCHOR3
 1803              		.cfi_endproc
 1804              	.LFE530:
 1806              		.section	.text._ZN11Kalman_VarsC2Ev,"axG",%progbits,_ZN11Kalman_VarsC5Ev,comdat
 1807              		.align	1
 1808              		.weak	_ZN11Kalman_VarsC2Ev
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1812              		.fpu fpv4-sp-d16
 1814              	_ZN11Kalman_VarsC2Ev:
 1815              	.LFB533:
  16:Core/Inc/utils\filter/kalman.h **** {
 1816              		.loc 1 16 0
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 0
 1819              		@ frame_needed = 0, uses_anonymous_args = 0
 1820              	.LVL263:
 1821 0000 10B5     		push	{r4, lr}
 1822              	.LCFI18:
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 4, -8
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 45


 1825              		.cfi_offset 14, -4
 1826 0002 0446     		mov	r4, r0
 1827              	.LVL264:
 1828              	.LBB1009:
 1829              	.LBB1010:
 1830              	.LBB1011:
  21:Core/Inc/utils\math/mat.h ****         
 1831              		.loc 6 21 0
 1832 0004 0022     		movs	r2, #0
 1833 0006 1146     		mov	r1, r2
 1834 0008 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1835              	.LVL265:
 1836              	.LBE1011:
 1837              	.LBE1010:
 1838              	.LBB1012:
 1839              	.LBB1013:
 1840 000c 0022     		movs	r2, #0
 1841 000e 1146     		mov	r1, r2
 1842 0010 04F14400 		add	r0, r4, #68
 1843              	.LVL266:
 1844 0014 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1845              	.LVL267:
 1846              	.LBE1013:
 1847              	.LBE1012:
 1848              	.LBB1014:
 1849              	.LBB1015:
 1850 0018 0022     		movs	r2, #0
 1851 001a 1146     		mov	r1, r2
 1852 001c 04F18800 		add	r0, r4, #136
 1853              	.LVL268:
 1854 0020 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1855              	.LVL269:
 1856              	.LBE1015:
 1857              	.LBE1014:
 1858              	.LBB1016:
 1859              	.LBB1017:
 1860 0024 0022     		movs	r2, #0
 1861 0026 1146     		mov	r1, r2
 1862 0028 04F1CC00 		add	r0, r4, #204
 1863              	.LVL270:
 1864 002c FFF7FEFF 		bl	_ZN3MatC1Ehh
 1865              	.LVL271:
 1866              	.LBE1017:
 1867              	.LBE1016:
 1868              	.LBB1018:
 1869              	.LBB1019:
 1870 0030 0022     		movs	r2, #0
 1871 0032 1146     		mov	r1, r2
 1872 0034 04F58870 		add	r0, r4, #272
 1873              	.LVL272:
 1874 0038 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1875              	.LVL273:
 1876              	.LBE1019:
 1877              	.LBE1018:
 1878              	.LBB1020:
 1879              	.LBB1021:
 1880 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 46


 1881 003e 1146     		mov	r1, r2
 1882 0040 04F5AA70 		add	r0, r4, #340
 1883              	.LVL274:
 1884 0044 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1885              	.LVL275:
 1886              	.LBE1021:
 1887              	.LBE1020:
 1888              	.LBB1022:
 1889              	.LBB1023:
 1890 0048 0022     		movs	r2, #0
 1891 004a 1146     		mov	r1, r2
 1892 004c 04F5CC70 		add	r0, r4, #408
 1893              	.LVL276:
 1894 0050 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1895              	.LVL277:
 1896              	.LBE1023:
 1897              	.LBE1022:
 1898              	.LBE1009:
  16:Core/Inc/utils\filter/kalman.h **** {
 1899              		.loc 1 16 0
 1900 0054 2046     		mov	r0, r4
 1901 0056 10BD     		pop	{r4, pc}
 1902              		.cfi_endproc
 1903              	.LFE533:
 1905              		.weak	_ZN11Kalman_VarsC1Ev
 1906              		.thumb_set _ZN11Kalman_VarsC1Ev,_ZN11Kalman_VarsC2Ev
 1907              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 1908              		.align	1
 1909              		.syntax unified
 1910              		.thumb
 1911              		.thumb_func
 1912              		.fpu fpv4-sp-d16
 1914              	_Z41__static_initialization_and_destruction_0ii:
 1915              	.LFB582:
 199:Core/Src/parts/state_sensor.cpp **** 
 200:Core/Src/parts/state_sensor.cpp **** /**
 201:Core/Src/parts/state_sensor.cpp ****  * @brief Function that provides the orientation of the robot
 202:Core/Src/parts/state_sensor.cpp ****  * @param base_state This parameter is considered as one of the possible state
 203:Core/Src/parts/state_sensor.cpp ****  *                   of robot.
 204:Core/Src/parts/state_sensor.cpp ****  * @param dt_millis : The time period at which this function is called periodically
 205:Core/Src/parts/state_sensor.cpp ****  * 
 206:Core/Src/parts/state_sensor.cpp ****  * @retval orientation of the robot in degrees
 207:Core/Src/parts/state_sensor.cpp ****  * 
 208:Core/Src/parts/state_sensor.cpp ****  * 
 209:Core/Src/parts/state_sensor.cpp ****  * <pre>
 210:Core/Src/parts/state_sensor.cpp ****  * Tasks performed by this function
 211:Core/Src/parts/state_sensor.cpp ****  * 1) Read the values from Accelerometer and the Gyroscope
 212:Core/Src/parts/state_sensor.cpp ****  * </pre>
 213:Core/Src/parts/state_sensor.cpp ****  */
 214:Core/Src/parts/state_sensor.cpp **** Vec3<float> State_Sensor::read_Orientation(Vec3<float> base_state, uint32_t dt_millis)
 215:Core/Src/parts/state_sensor.cpp **** {
 216:Core/Src/parts/state_sensor.cpp ****         Vec3<float> accel;
 217:Core/Src/parts/state_sensor.cpp ****         Vec3<float> gyro;
 218:Core/Src/parts/state_sensor.cpp ****         Vec3<float> mag;
 219:Core/Src/parts/state_sensor.cpp ****         Vec3<float> angles;
 220:Core/Src/parts/state_sensor.cpp **** 
 221:Core/Src/parts/state_sensor.cpp **** #ifdef _ENABLE_I2C_ERROR_DETECTION
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 47


 222:Core/Src/parts/state_sensor.cpp **** 
 223:Core/Src/parts/state_sensor.cpp ****         bool mpu_is_ready(true), hmc_is_ready(true);
 224:Core/Src/parts/state_sensor.cpp ****         
 225:Core/Src/parts/state_sensor.cpp ****         // Read MPU6050 if it is ready to be read
 226:Core/Src/parts/state_sensor.cpp ****         if (MPU6050_Read_NormAxes(&Body_IMU) != HAL_OK) {
 227:Core/Src/parts/state_sensor.cpp ****                 mpu_is_ready = false;
 228:Core/Src/parts/state_sensor.cpp ****         }
 229:Core/Src/parts/state_sensor.cpp **** 
 230:Core/Src/parts/state_sensor.cpp ****         // Read HMC5883 if it is ready to be read
 231:Core/Src/parts/state_sensor.cpp ****         if (HMC5883_Read(&Body_HMC) != HAL_OK) {
 232:Core/Src/parts/state_sensor.cpp ****                 hmc_is_ready = false;
 233:Core/Src/parts/state_sensor.cpp ****         }
 234:Core/Src/parts/state_sensor.cpp **** 
 235:Core/Src/parts/state_sensor.cpp ****         if (!mpu_is_ready || !hmc_is_ready) {
 236:Core/Src/parts/state_sensor.cpp ****                 //! Error Condition
 237:Core/Src/parts/state_sensor.cpp ****                 HAL_GPIO_WritePin(B_BlueLED_GPIO_Port, B_BlueLED_Pin, GPIO_PIN_SET);
 238:Core/Src/parts/state_sensor.cpp ****                 error(Error::PERIPHERAL_ERROR);
 239:Core/Src/parts/state_sensor.cpp ****                 IMU_Init();
 240:Core/Src/parts/state_sensor.cpp ****                 return angles;
 241:Core/Src/parts/state_sensor.cpp ****         }
 242:Core/Src/parts/state_sensor.cpp ****         else {
 243:Core/Src/parts/state_sensor.cpp ****                 HAL_GPIO_WritePin(B_BlueLED_GPIO_Port, B_BlueLED_Pin, GPIO_PIN_RESET);
 244:Core/Src/parts/state_sensor.cpp ****         }
 245:Core/Src/parts/state_sensor.cpp **** #else
 246:Core/Src/parts/state_sensor.cpp ****         MPU6050_Read_NormAxes(&Body_IMU);
 247:Core/Src/parts/state_sensor.cpp ****         HMC5883_Read(&Body_HMC);
 248:Core/Src/parts/state_sensor.cpp **** #endif  // _ENABLE_I2C_ERROR_DETECTION
 249:Core/Src/parts/state_sensor.cpp **** 
 250:Core/Src/parts/state_sensor.cpp ****         accel = Body_IMU.norm_a_axis;
 251:Core/Src/parts/state_sensor.cpp ****         gyro = Body_IMU.norm_g_axis - gOmega_Bias;
 252:Core/Src/parts/state_sensor.cpp ****         mag = Body_HMC.raw_axis;
 253:Core/Src/parts/state_sensor.cpp **** 
 254:Core/Src/parts/state_sensor.cpp ****         // (accel.mult_EW(1000)).print();
 255:Core/Src/parts/state_sensor.cpp ****         // printf("    ");
 256:Core/Src/parts/state_sensor.cpp ****         // (gyro.mult_EW(4)).print();
 257:Core/Src/parts/state_sensor.cpp ****         // printf("    ");
 258:Core/Src/parts/state_sensor.cpp ****         // mag.print();
 259:Core/Src/parts/state_sensor.cpp ****         // printf("\n");
 260:Core/Src/parts/state_sensor.cpp **** 
 261:Core/Src/parts/state_sensor.cpp ****         // We will consider the rotation in order: psi-theta-phi
 262:Core/Src/parts/state_sensor.cpp ****         float ax = gXAccelAlpha35.smooth(accel.getX());
 263:Core/Src/parts/state_sensor.cpp ****         float ay = gYAccelAlpha35.smooth(accel.getY());
 264:Core/Src/parts/state_sensor.cpp ****         float az = gZAccelAlpha35.smooth(accel.getZ());
 265:Core/Src/parts/state_sensor.cpp **** 
 266:Core/Src/parts/state_sensor.cpp ****         float gx = gXGyroAlpha35.smooth(gyro.getX());
 267:Core/Src/parts/state_sensor.cpp ****         float gy = gYGyroAlpha35.smooth(gyro.getY());
 268:Core/Src/parts/state_sensor.cpp ****         float gz = gZGyroAlpha35.smooth(gyro.getZ());
 269:Core/Src/parts/state_sensor.cpp **** 
 270:Core/Src/parts/state_sensor.cpp ****         float bx = gXMagAlpha35.smooth(mag.getX());
 271:Core/Src/parts/state_sensor.cpp ****         float by = gYMagAlpha35.smooth(mag.getY());
 272:Core/Src/parts/state_sensor.cpp ****         float bz = gZMagAlpha35.smooth(mag.getZ());
 273:Core/Src/parts/state_sensor.cpp ****         
 274:Core/Src/parts/state_sensor.cpp ****         float roll = atan2f(ay, az) * 57.3;
 275:Core/Src/parts/state_sensor.cpp **** 
 276:Core/Src/parts/state_sensor.cpp ****         roll = gRoll_Filter.filter(roll, gx, dt_millis);
 277:Core/Src/parts/state_sensor.cpp ****         // printf("%ld,   ", (int32_t)(roll*1000));
 278:Core/Src/parts/state_sensor.cpp **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 48


 279:Core/Src/parts/state_sensor.cpp ****         float sin_roll = sin(roll / 57.3);
 280:Core/Src/parts/state_sensor.cpp ****         float cos_roll = cos(roll / 57.3);
 281:Core/Src/parts/state_sensor.cpp ****         // Roll Compensated Pitch
 282:Core/Src/parts/state_sensor.cpp ****         float pitch = atan2f((-ax), ay*sin_roll + az*cos_roll) * 57.3;
 283:Core/Src/parts/state_sensor.cpp **** 
 284:Core/Src/parts/state_sensor.cpp ****         pitch = gPitch_Filter.filter(pitch, gy, dt_millis);
 285:Core/Src/parts/state_sensor.cpp ****         // printf("%ld,   ", (int32_t)(pitch*1000));
 286:Core/Src/parts/state_sensor.cpp **** 
 287:Core/Src/parts/state_sensor.cpp ****         float sin_pitch = sin(pitch / 57.3);
 288:Core/Src/parts/state_sensor.cpp ****         float cos_pitch = cos(pitch / 57.3);
 289:Core/Src/parts/state_sensor.cpp ****         // Tilt Compensated Yaw
 290:Core/Src/parts/state_sensor.cpp ****         float yaw = atan2f((bz*sin_roll - by*cos_roll), (bx*cos_pitch + by*sin_roll*sin_pitch + bz*
 291:Core/Src/parts/state_sensor.cpp **** 
 292:Core/Src/parts/state_sensor.cpp ****         yaw = gYaw_Filter.filter(yaw, gz, dt_millis);
 293:Core/Src/parts/state_sensor.cpp ****         // printf("%ld\n", (int32_t)(yaw*1000));
 294:Core/Src/parts/state_sensor.cpp **** 
 295:Core/Src/parts/state_sensor.cpp ****         angles.set_Values(roll, pitch, yaw);
 296:Core/Src/parts/state_sensor.cpp **** 
 297:Core/Src/parts/state_sensor.cpp ****         return angles;
 298:Core/Src/parts/state_sensor.cpp **** }
 299:Core/Src/parts/state_sensor.cpp **** 
 300:Core/Src/parts/state_sensor.cpp **** void State_Sensor::change_Sensors(Field field_id)
 301:Core/Src/parts/state_sensor.cpp **** {
 302:Core/Src/parts/state_sensor.cpp ****         switch (field_id) {
 303:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_A : {      // State A
 304:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 305:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 306:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 307:Core/Src/parts/state_sensor.cpp ****                 } break;
 308:Core/Src/parts/state_sensor.cpp ****                 
 309:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_B : {      // State B
 310:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 311:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 312:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 313:Core/Src/parts/state_sensor.cpp ****                 } break;
 314:Core/Src/parts/state_sensor.cpp ****                 
 315:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_C : {      // State C
 316:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 317:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 318:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 319:Core/Src/parts/state_sensor.cpp ****                 } break;
 320:Core/Src/parts/state_sensor.cpp ****                 
 321:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_D : {      // State D
 322:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 323:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 324:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 325:Core/Src/parts/state_sensor.cpp ****                 } break;
 326:Core/Src/parts/state_sensor.cpp ****                 
 327:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_E : {      // State E
 328:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 329:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 330:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 331:Core/Src/parts/state_sensor.cpp ****                 } break;
 332:Core/Src/parts/state_sensor.cpp ****                 
 333:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_F : {      // State F
 334:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 335:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 49


 336:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 337:Core/Src/parts/state_sensor.cpp ****                 } break;
 338:Core/Src/parts/state_sensor.cpp ****                 
 339:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_G : {      // State G
 340:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 341:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 342:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 343:Core/Src/parts/state_sensor.cpp ****                 } break;
 344:Core/Src/parts/state_sensor.cpp ****                 
 345:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_H : {      // State H
 346:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 347:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 348:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 349:Core/Src/parts/state_sensor.cpp ****                 } break;
 350:Core/Src/parts/state_sensor.cpp ****                 
 351:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_I : {      // State I
 352:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 353:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 354:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->remove_Sensor(&gXLidar);
 355:Core/Src/parts/state_sensor.cpp ****                 } break;
 356:Core/Src/parts/state_sensor.cpp **** 
 357:Core/Src/parts/state_sensor.cpp ****                 default : {      // Default State
 358:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXEncoder);
 359:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 360:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->remove_Sensor(&gXLidar);
 361:Core/Src/parts/state_sensor.cpp ****                 }
 362:Core/Src/parts/state_sensor.cpp ****         }
 363:Core/Src/parts/state_sensor.cpp **** }
 1916              		.loc 5 363 0
 1917              		.cfi_startproc
 1918              		@ args = 0, pretend = 0, frame = 0
 1919              		@ frame_needed = 0, uses_anonymous_args = 0
 1920              	.LVL278:
 1921 0000 0128     		cmp	r0, #1
 1922 0002 00D0     		beq	.L99
 1923              	.L96:
 1924 0004 7047     		bx	lr
 1925              	.L99:
 1926              		.loc 5 363 0 is_stmt 0 discriminator 1
 1927 0006 4FF6FF73 		movw	r3, #65535
 1928 000a 9942     		cmp	r1, r3
 1929 000c FAD1     		bne	.L96
 1930              		.loc 5 363 0
 1931 000e 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1932              	.LCFI19:
 1933              		.cfi_def_cfa_offset 24
 1934              		.cfi_offset 4, -24
 1935              		.cfi_offset 5, -20
 1936              		.cfi_offset 6, -16
 1937              		.cfi_offset 7, -12
 1938              		.cfi_offset 8, -8
 1939              		.cfi_offset 14, -4
 1940 0012 2DED028B 		vpush.64	{d8}
 1941              	.LCFI20:
 1942              		.cfi_def_cfa_offset 32
 1943              		.cfi_offset 80, -32
 1944              		.cfi_offset 81, -28
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 50


 1945              	.LVL279:
 1946              	.LBB1024:
 1947              	.LBB1025:
 1948              	.LBB1026:
 1949              	.LBB1027:
 1950              	.LBB1028:
  33:Core/Inc/utils\math/vec3.h **** 
  34:Core/Inc/utils\math/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils\math/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils\math/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils\math/vec3.h ****         void setX(T x) { x_ = x; }
 1951              		.loc 4 37 0 is_stmt 1
 1952 0016 5648     		ldr	r0, .L100
 1953              	.LVL280:
 1954 0018 0025     		movs	r5, #0
 1955 001a 0560     		str	r5, [r0]	@ float
 1956              	.LVL281:
 1957              	.LBE1028:
 1958              	.LBE1027:
 1959              	.LBB1029:
 1960              	.LBB1030:
  38:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 1961              		.loc 4 38 0
 1962 001c 4560     		str	r5, [r0, #4]	@ float
 1963              	.LVL282:
 1964              	.LBE1030:
 1965              	.LBE1029:
 1966              	.LBB1031:
 1967              	.LBB1032:
  39:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 1968              		.loc 4 39 0
 1969 001e 8560     		str	r5, [r0, #8]	@ float
 1970              	.LVL283:
 1971              	.LBE1032:
 1972              	.LBE1031:
 1973              	.LBE1026:
 1974              	.LBE1025:
 1975              	.LBE1024:
  20:Core/Src/parts/state_sensor.cpp **** 
 1976              		.loc 5 20 0
 1977 0020 544C     		ldr	r4, .L100+4
 1978 0022 554E     		ldr	r6, .L100+8
 1979 0024 2246     		mov	r2, r4
 1980 0026 3146     		mov	r1, r6
 1981              	.LVL284:
 1982 0028 FFF7FEFF 		bl	__aeabi_atexit
 1983              	.LVL285:
 1984              	.LBB1033:
 1985              	.LBB1034:
 1986              	.LBB1035:
 1987              	.LBB1036:
 1988              	.LBB1037:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 1989              		.loc 4 37 0
 1990 002c 5348     		ldr	r0, .L100+12
 1991 002e 0560     		str	r5, [r0]	@ float
 1992              	.LVL286:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 51


 1993              	.LBE1037:
 1994              	.LBE1036:
 1995              	.LBB1038:
 1996              	.LBB1039:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 1997              		.loc 4 38 0
 1998 0030 4560     		str	r5, [r0, #4]	@ float
 1999              	.LVL287:
 2000              	.LBE1039:
 2001              	.LBE1038:
 2002              	.LBB1040:
 2003              	.LBB1041:
 2004              		.loc 4 39 0
 2005 0032 8560     		str	r5, [r0, #8]	@ float
 2006              	.LVL288:
 2007              	.LBE1041:
 2008              	.LBE1040:
 2009              	.LBE1035:
 2010              	.LBE1034:
 2011              	.LBE1033:
 111:Core/Src/parts/state_sensor.cpp **** static bool gIsFirstOrientationReading = true;
 2012              		.loc 5 111 0
 2013 0034 2246     		mov	r2, r4
 2014 0036 3146     		mov	r1, r6
 2015 0038 FFF7FEFF 		bl	__aeabi_atexit
 2016              	.LVL289:
 136:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gYAccelAlpha35(0.35);
 2017              		.loc 5 136 0
 2018 003c 9FED508A 		vldr.32	s16, .L100+16
 2019 0040 504E     		ldr	r6, .L100+20
 2020 0042 B0EE480A 		vmov.f32	s0, s16
 2021 0046 3046     		mov	r0, r6
 2022 0048 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2023              	.LVL290:
 2024 004c 4E4D     		ldr	r5, .L100+24
 2025 004e 2246     		mov	r2, r4
 2026 0050 2946     		mov	r1, r5
 2027 0052 3046     		mov	r0, r6
 2028 0054 FFF7FEFF 		bl	__aeabi_atexit
 2029              	.LVL291:
 137:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gZAccelAlpha35(0.35);
 2030              		.loc 5 137 0
 2031 0058 4C4E     		ldr	r6, .L100+28
 2032 005a B0EE480A 		vmov.f32	s0, s16
 2033 005e 3046     		mov	r0, r6
 2034 0060 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2035              	.LVL292:
 2036 0064 2246     		mov	r2, r4
 2037 0066 2946     		mov	r1, r5
 2038 0068 3046     		mov	r0, r6
 2039 006a FFF7FEFF 		bl	__aeabi_atexit
 2040              	.LVL293:
 138:Core/Src/parts/state_sensor.cpp **** 
 2041              		.loc 5 138 0
 2042 006e 484E     		ldr	r6, .L100+32
 2043 0070 B0EE480A 		vmov.f32	s0, s16
 2044 0074 3046     		mov	r0, r6
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 52


 2045 0076 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2046              	.LVL294:
 2047 007a 2246     		mov	r2, r4
 2048 007c 2946     		mov	r1, r5
 2049 007e 3046     		mov	r0, r6
 2050 0080 FFF7FEFF 		bl	__aeabi_atexit
 2051              	.LVL295:
 140:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gYGyroAlpha35(0.35);
 2052              		.loc 5 140 0
 2053 0084 434E     		ldr	r6, .L100+36
 2054 0086 B0EE480A 		vmov.f32	s0, s16
 2055 008a 3046     		mov	r0, r6
 2056 008c FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2057              	.LVL296:
 2058 0090 2246     		mov	r2, r4
 2059 0092 2946     		mov	r1, r5
 2060 0094 3046     		mov	r0, r6
 2061 0096 FFF7FEFF 		bl	__aeabi_atexit
 2062              	.LVL297:
 141:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gZGyroAlpha35(0.35);
 2063              		.loc 5 141 0
 2064 009a 3F4E     		ldr	r6, .L100+40
 2065 009c B0EE480A 		vmov.f32	s0, s16
 2066 00a0 3046     		mov	r0, r6
 2067 00a2 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2068              	.LVL298:
 2069 00a6 2246     		mov	r2, r4
 2070 00a8 2946     		mov	r1, r5
 2071 00aa 3046     		mov	r0, r6
 2072 00ac FFF7FEFF 		bl	__aeabi_atexit
 2073              	.LVL299:
 142:Core/Src/parts/state_sensor.cpp **** 
 2074              		.loc 5 142 0
 2075 00b0 3A4E     		ldr	r6, .L100+44
 2076 00b2 B0EE480A 		vmov.f32	s0, s16
 2077 00b6 3046     		mov	r0, r6
 2078 00b8 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2079              	.LVL300:
 2080 00bc 2246     		mov	r2, r4
 2081 00be 2946     		mov	r1, r5
 2082 00c0 3046     		mov	r0, r6
 2083 00c2 FFF7FEFF 		bl	__aeabi_atexit
 2084              	.LVL301:
 144:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gYMagAlpha35(0.35);
 2085              		.loc 5 144 0
 2086 00c6 364E     		ldr	r6, .L100+48
 2087 00c8 B0EE480A 		vmov.f32	s0, s16
 2088 00cc 3046     		mov	r0, r6
 2089 00ce FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2090              	.LVL302:
 2091 00d2 2246     		mov	r2, r4
 2092 00d4 2946     		mov	r1, r5
 2093 00d6 3046     		mov	r0, r6
 2094 00d8 FFF7FEFF 		bl	__aeabi_atexit
 2095              	.LVL303:
 145:Core/Src/parts/state_sensor.cpp **** static Exp_Smooth gZMagAlpha35(0.35);
 2096              		.loc 5 145 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 53


 2097 00dc 314E     		ldr	r6, .L100+52
 2098 00de B0EE480A 		vmov.f32	s0, s16
 2099 00e2 3046     		mov	r0, r6
 2100 00e4 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2101              	.LVL304:
 2102 00e8 2246     		mov	r2, r4
 2103 00ea 2946     		mov	r1, r5
 2104 00ec 3046     		mov	r0, r6
 2105 00ee FFF7FEFF 		bl	__aeabi_atexit
 2106              	.LVL305:
 146:Core/Src/parts/state_sensor.cpp **** 
 2107              		.loc 5 146 0
 2108 00f2 2D4E     		ldr	r6, .L100+56
 2109 00f4 B0EE480A 		vmov.f32	s0, s16
 2110 00f8 3046     		mov	r0, r6
 2111 00fa FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 2112              	.LVL306:
 2113 00fe 2246     		mov	r2, r4
 2114 0100 2946     		mov	r1, r5
 2115 0102 3046     		mov	r0, r6
 2116 0104 FFF7FEFF 		bl	__aeabi_atexit
 2117              	.LVL307:
 148:Core/Src/parts/state_sensor.cpp **** 
 2118              		.loc 5 148 0
 2119 0108 284D     		ldr	r5, .L100+60
 2120 010a 2846     		mov	r0, r5
 2121 010c FFF7FEFF 		bl	_ZN11Kalman_VarsC1Ev
 2122              	.LVL308:
 2123 0110 2246     		mov	r2, r4
 2124 0112 2749     		ldr	r1, .L100+64
 2125 0114 2846     		mov	r0, r5
 2126 0116 FFF7FEFF 		bl	__aeabi_atexit
 2127              	.LVL309:
 150:Core/Src/parts/state_sensor.cpp **** static Kalman_Filter gPitch_Filter(&gAccel_Gyro, init_OriFilters);
 2128              		.loc 5 150 0
 2129 011a 264F     		ldr	r7, .L100+68
 2130 011c DFF89C80 		ldr	r8, .L100+76
 2131 0120 3A46     		mov	r2, r7
 2132 0122 2946     		mov	r1, r5
 2133 0124 4046     		mov	r0, r8
 2134 0126 FFF7FEFF 		bl	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 2135              	.LVL310:
 2136 012a 234E     		ldr	r6, .L100+72
 2137 012c 2246     		mov	r2, r4
 2138 012e 3146     		mov	r1, r6
 2139 0130 4046     		mov	r0, r8
 2140 0132 FFF7FEFF 		bl	__aeabi_atexit
 2141              	.LVL311:
 151:Core/Src/parts/state_sensor.cpp **** static Kalman_Filter gYaw_Filter(&gAccel_Gyro, init_OriFilters);
 2142              		.loc 5 151 0
 2143 0136 DFF88880 		ldr	r8, .L100+80
 2144 013a 3A46     		mov	r2, r7
 2145 013c 2946     		mov	r1, r5
 2146 013e 4046     		mov	r0, r8
 2147 0140 FFF7FEFF 		bl	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 2148              	.LVL312:
 2149 0144 2246     		mov	r2, r4
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 54


 2150 0146 3146     		mov	r1, r6
 2151 0148 4046     		mov	r0, r8
 2152 014a FFF7FEFF 		bl	__aeabi_atexit
 2153              	.LVL313:
 152:Core/Src/parts/state_sensor.cpp **** 
 2154              		.loc 5 152 0
 2155 014e DFF87480 		ldr	r8, .L100+84
 2156 0152 3A46     		mov	r2, r7
 2157 0154 2946     		mov	r1, r5
 2158 0156 4046     		mov	r0, r8
 2159 0158 FFF7FEFF 		bl	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 2160              	.LVL314:
 2161 015c 2246     		mov	r2, r4
 2162 015e 3146     		mov	r1, r6
 2163 0160 4046     		mov	r0, r8
 2164 0162 FFF7FEFF 		bl	__aeabi_atexit
 2165              	.LVL315:
 2166              		.loc 5 363 0
 2167 0166 BDEC028B 		vldm	sp!, {d8}
 2168              	.LCFI21:
 2169              		.cfi_restore 80
 2170              		.cfi_restore 81
 2171              		.cfi_def_cfa_offset 24
 2172 016a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2173              	.L101:
 2174 016e 00BF     		.align	2
 2175              	.L100:
 2176 0170 00000000 		.word	.LANCHOR3
 2177 0174 00000000 		.word	__dso_handle
 2178 0178 00000000 		.word	_ZN4Vec3IfED1Ev
 2179 017c 00000000 		.word	.LANCHOR4
 2180 0180 3333B33E 		.word	1051931443
 2181 0184 00000000 		.word	.LANCHOR5
 2182 0188 00000000 		.word	_ZN10Exp_SmoothD1Ev
 2183 018c 00000000 		.word	.LANCHOR6
 2184 0190 00000000 		.word	.LANCHOR7
 2185 0194 00000000 		.word	.LANCHOR8
 2186 0198 00000000 		.word	.LANCHOR9
 2187 019c 00000000 		.word	.LANCHOR10
 2188 01a0 00000000 		.word	.LANCHOR11
 2189 01a4 00000000 		.word	.LANCHOR12
 2190 01a8 00000000 		.word	.LANCHOR13
 2191 01ac 00000000 		.word	.LANCHOR0
 2192 01b0 00000000 		.word	_ZN11Kalman_VarsD1Ev
 2193 01b4 00000000 		.word	_Z15init_OriFiltersm
 2194 01b8 00000000 		.word	_ZN13Kalman_FilterD1Ev
 2195 01bc 00000000 		.word	.LANCHOR14
 2196 01c0 00000000 		.word	.LANCHOR15
 2197 01c4 00000000 		.word	.LANCHOR16
 2198              		.cfi_endproc
 2199              	.LFE582:
 2201              		.section	.text._ZN12State_Sensor14change_SensorsE5Field,"ax",%progbits
 2202              		.align	1
 2203              		.global	_ZN12State_Sensor14change_SensorsE5Field
 2204              		.syntax unified
 2205              		.thumb
 2206              		.thumb_func
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 55


 2207              		.fpu fpv4-sp-d16
 2209              	_ZN12State_Sensor14change_SensorsE5Field:
 2210              	.LFB537:
 301:Core/Src/parts/state_sensor.cpp ****         switch (field_id) {
 2211              		.loc 5 301 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215              		@ link register save eliminated.
 2216              	.LVL316:
 2217 0000 30B4     		push	{r4, r5}
 2218              	.LCFI22:
 2219              		.cfi_def_cfa_offset 8
 2220              		.cfi_offset 4, -8
 2221              		.cfi_offset 5, -4
 302:Core/Src/parts/state_sensor.cpp ****                 case Field::FIELD_A : {      // State A
 2222              		.loc 5 302 0
 2223 0002 0829     		cmp	r1, #8
 2224 0004 00F24082 		bhi	.L103
 2225 0008 DFE811F0 		tbh	[pc, r1, lsl #1]
 2226              	.L105:
 2227 000c 0900     		.2byte	(.L104-.L105)/2
 2228 000e 4700     		.2byte	(.L106-.L105)/2
 2229 0010 8400     		.2byte	(.L107-.L105)/2
 2230 0012 C100     		.2byte	(.L108-.L105)/2
 2231 0014 FF00     		.2byte	(.L109-.L105)/2
 2232 0016 3D01     		.2byte	(.L110-.L105)/2
 2233 0018 8101     		.2byte	(.L111-.L105)/2
 2234 001a BF01     		.2byte	(.L112-.L105)/2
 2235 001c FD01     		.2byte	(.L113-.L105)/2
 2236              		.p2align 1
 2237              	.L104:
 304:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 2238              		.loc 5 304 0
 2239 001e 0268     		ldr	r2, [r0]
 2240              	.LVL317:
 2241              	.LBB1042:
 2242              	.LBB1043:
 2243              	.LBB1044:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2244              		.loc 7 43 0
 2245 0020 0023     		movs	r3, #0
 2246              	.LVL318:
 2247              	.L116:
 2248 0022 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2249 0024 9942     		cmp	r1, r3
 2250 0026 09D9     		bls	.L114
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2251              		.loc 7 44 0
 2252 0028 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2253              	.LVL319:
 2254              	.LBB1045:
 2255              	.LBB1046:
 2256              		.loc 8 45 0
 2257 002c 4C68     		ldr	r4, [r1, #4]
 2258 002e A749     		ldr	r1, .L198
 2259              	.LVL320:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 56


 2260 0030 4968     		ldr	r1, [r1, #4]
 2261              	.LVL321:
 2262              	.LBE1046:
 2263              	.LBE1045:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2264              		.loc 7 44 0
 2265 0032 8C42     		cmp	r4, r1
 2266 0034 07D0     		beq	.L115
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2267              		.loc 7 43 0
 2268 0036 0133     		adds	r3, r3, #1
 2269              	.LVL322:
 2270 0038 DBB2     		uxtb	r3, r3
 2271              	.LVL323:
 2272 003a F2E7     		b	.L116
 2273              	.L114:
 2274              	.LBE1044:
 2275              		.loc 7 48 0
 2276 003c 4B1C     		adds	r3, r1, #1
 2277              	.LVL324:
 2278 003e 1374     		strb	r3, [r2, #16]
 2279 0040 A24B     		ldr	r3, .L198
 2280 0042 42F82130 		str	r3, [r2, r1, lsl #2]
 2281              	.L115:
 2282              	.LVL325:
 2283              	.LBE1043:
 2284              	.LBE1042:
 305:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 2285              		.loc 5 305 0
 2286 0046 0268     		ldr	r2, [r0]
 2287              	.LVL326:
 2288              	.LBB1047:
 2289              	.LBB1048:
 2290              	.LBB1049:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2291              		.loc 7 43 0
 2292 0048 0023     		movs	r3, #0
 2293              	.L119:
 2294              	.LVL327:
 2295 004a 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2296 004c 9942     		cmp	r1, r3
 2297 004e 09D9     		bls	.L117
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2298              		.loc 7 44 0
 2299 0050 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2300              	.LVL328:
 2301              	.LBB1050:
 2302              	.LBB1051:
 2303              		.loc 8 45 0
 2304 0054 4C68     		ldr	r4, [r1, #4]
 2305 0056 9E49     		ldr	r1, .L198+4
 2306              	.LVL329:
 2307 0058 4968     		ldr	r1, [r1, #4]
 2308              	.LVL330:
 2309              	.LBE1051:
 2310              	.LBE1050:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 57


 2311              		.loc 7 44 0
 2312 005a 8C42     		cmp	r4, r1
 2313 005c 07D0     		beq	.L118
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2314              		.loc 7 43 0
 2315 005e 0133     		adds	r3, r3, #1
 2316              	.LVL331:
 2317 0060 DBB2     		uxtb	r3, r3
 2318              	.LVL332:
 2319 0062 F2E7     		b	.L119
 2320              	.L117:
 2321              	.LBE1049:
 2322              		.loc 7 48 0
 2323 0064 4B1C     		adds	r3, r1, #1
 2324              	.LVL333:
 2325 0066 1374     		strb	r3, [r2, #16]
 2326 0068 994B     		ldr	r3, .L198+4
 2327 006a 42F82130 		str	r3, [r2, r1, lsl #2]
 2328              	.L118:
 2329              	.LVL334:
 2330              	.LBE1048:
 2331              	.LBE1047:
 306:Core/Src/parts/state_sensor.cpp ****                 } break;
 2332              		.loc 5 306 0
 2333 006e 0268     		ldr	r2, [r0]
 2334              	.LVL335:
 2335              	.LBB1052:
 2336              	.LBB1053:
 2337              	.LBB1054:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2338              		.loc 7 43 0
 2339 0070 0023     		movs	r3, #0
 2340              	.LVL336:
 2341              	.L122:
 2342 0072 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2343 0074 9942     		cmp	r1, r3
 2344 0076 09D9     		bls	.L120
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2345              		.loc 7 44 0
 2346 0078 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2347              	.LVL337:
 2348              	.LBB1055:
 2349              	.LBB1056:
 2350              		.loc 8 45 0
 2351 007c 4868     		ldr	r0, [r1, #4]
 2352 007e 9549     		ldr	r1, .L198+8
 2353              	.LVL338:
 2354 0080 4968     		ldr	r1, [r1, #4]
 2355              	.LVL339:
 2356              	.LBE1056:
 2357              	.LBE1055:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2358              		.loc 7 44 0
 2359 0082 8842     		cmp	r0, r1
 2360 0084 07D0     		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2361              		.loc 7 43 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 58


 2362 0086 0133     		adds	r3, r3, #1
 2363              	.LVL340:
 2364 0088 DBB2     		uxtb	r3, r3
 2365              	.LVL341:
 2366 008a F2E7     		b	.L122
 2367              	.L120:
 2368              	.LBE1054:
 2369              		.loc 7 48 0
 2370 008c 4B1C     		adds	r3, r1, #1
 2371              	.LVL342:
 2372 008e 1374     		strb	r3, [r2, #16]
 2373 0090 904B     		ldr	r3, .L198+8
 2374 0092 42F82130 		str	r3, [r2, r1, lsl #2]
 2375              	.LVL343:
 2376              	.L102:
 2377              	.LBE1053:
 2378              	.LBE1052:
 2379              		.loc 5 363 0
 2380 0096 30BC     		pop	{r4, r5}
 2381              	.LCFI23:
 2382              		.cfi_remember_state
 2383              		.cfi_restore 5
 2384              		.cfi_restore 4
 2385              		.cfi_def_cfa_offset 0
 2386 0098 7047     		bx	lr
 2387              	.LVL344:
 2388              	.L106:
 2389              	.LCFI24:
 2390              		.cfi_restore_state
 310:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 2391              		.loc 5 310 0
 2392 009a 0268     		ldr	r2, [r0]
 2393              	.LVL345:
 2394              	.LBB1057:
 2395              	.LBB1058:
 2396              	.LBB1059:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2397              		.loc 7 43 0
 2398 009c 0023     		movs	r3, #0
 2399              	.LVL346:
 2400              	.L125:
 2401 009e 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2402 00a0 9942     		cmp	r1, r3
 2403 00a2 09D9     		bls	.L123
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2404              		.loc 7 44 0
 2405 00a4 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2406              	.LVL347:
 2407              	.LBB1060:
 2408              	.LBB1061:
 2409              		.loc 8 45 0
 2410 00a8 4C68     		ldr	r4, [r1, #4]
 2411 00aa 8849     		ldr	r1, .L198
 2412              	.LVL348:
 2413 00ac 4968     		ldr	r1, [r1, #4]
 2414              	.LVL349:
 2415              	.LBE1061:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 59


 2416              	.LBE1060:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2417              		.loc 7 44 0
 2418 00ae 8C42     		cmp	r4, r1
 2419 00b0 07D0     		beq	.L124
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2420              		.loc 7 43 0
 2421 00b2 0133     		adds	r3, r3, #1
 2422              	.LVL350:
 2423 00b4 DBB2     		uxtb	r3, r3
 2424              	.LVL351:
 2425 00b6 F2E7     		b	.L125
 2426              	.L123:
 2427              	.LBE1059:
 2428              		.loc 7 48 0
 2429 00b8 4B1C     		adds	r3, r1, #1
 2430              	.LVL352:
 2431 00ba 1374     		strb	r3, [r2, #16]
 2432 00bc 834B     		ldr	r3, .L198
 2433 00be 42F82130 		str	r3, [r2, r1, lsl #2]
 2434              	.L124:
 2435              	.LVL353:
 2436              	.LBE1058:
 2437              	.LBE1057:
 311:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 2438              		.loc 5 311 0
 2439 00c2 0268     		ldr	r2, [r0]
 2440              	.LVL354:
 2441              	.LBB1062:
 2442              	.LBB1063:
 2443              	.LBB1064:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2444              		.loc 7 43 0
 2445 00c4 0023     		movs	r3, #0
 2446              	.L128:
 2447              	.LVL355:
 2448 00c6 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2449 00c8 9942     		cmp	r1, r3
 2450 00ca 09D9     		bls	.L126
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2451              		.loc 7 44 0
 2452 00cc 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2453              	.LVL356:
 2454              	.LBB1065:
 2455              	.LBB1066:
 2456              		.loc 8 45 0
 2457 00d0 4C68     		ldr	r4, [r1, #4]
 2458 00d2 7F49     		ldr	r1, .L198+4
 2459              	.LVL357:
 2460 00d4 4968     		ldr	r1, [r1, #4]
 2461              	.LVL358:
 2462              	.LBE1066:
 2463              	.LBE1065:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2464              		.loc 7 44 0
 2465 00d6 8C42     		cmp	r4, r1
 2466 00d8 07D0     		beq	.L127
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 60


  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2467              		.loc 7 43 0
 2468 00da 0133     		adds	r3, r3, #1
 2469              	.LVL359:
 2470 00dc DBB2     		uxtb	r3, r3
 2471              	.LVL360:
 2472 00de F2E7     		b	.L128
 2473              	.L126:
 2474              	.LBE1064:
 2475              		.loc 7 48 0
 2476 00e0 4B1C     		adds	r3, r1, #1
 2477              	.LVL361:
 2478 00e2 1374     		strb	r3, [r2, #16]
 2479 00e4 7A4B     		ldr	r3, .L198+4
 2480 00e6 42F82130 		str	r3, [r2, r1, lsl #2]
 2481              	.L127:
 2482              	.LVL362:
 2483              	.LBE1063:
 2484              	.LBE1062:
 312:Core/Src/parts/state_sensor.cpp ****                 } break;
 2485              		.loc 5 312 0
 2486 00ea 0268     		ldr	r2, [r0]
 2487              	.LVL363:
 2488              	.LBB1067:
 2489              	.LBB1068:
 2490              	.LBB1069:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2491              		.loc 7 43 0
 2492 00ec 0023     		movs	r3, #0
 2493              	.LVL364:
 2494              	.L130:
 2495 00ee 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2496 00f0 9942     		cmp	r1, r3
 2497 00f2 09D9     		bls	.L129
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2498              		.loc 7 44 0
 2499 00f4 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2500              	.LVL365:
 2501              	.LBB1070:
 2502              	.LBB1071:
 2503              		.loc 8 45 0
 2504 00f8 4868     		ldr	r0, [r1, #4]
 2505 00fa 7649     		ldr	r1, .L198+8
 2506              	.LVL366:
 2507 00fc 4968     		ldr	r1, [r1, #4]
 2508              	.LVL367:
 2509              	.LBE1071:
 2510              	.LBE1070:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2511              		.loc 7 44 0
 2512 00fe 8842     		cmp	r0, r1
 2513 0100 C9D0     		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2514              		.loc 7 43 0
 2515 0102 0133     		adds	r3, r3, #1
 2516              	.LVL368:
 2517 0104 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 61


 2518              	.LVL369:
 2519 0106 F2E7     		b	.L130
 2520              	.L129:
 2521              	.LBE1069:
 2522              		.loc 7 48 0
 2523 0108 4B1C     		adds	r3, r1, #1
 2524              	.LVL370:
 2525 010a 1374     		strb	r3, [r2, #16]
 2526 010c 714B     		ldr	r3, .L198+8
 2527 010e 42F82130 		str	r3, [r2, r1, lsl #2]
 2528 0112 C0E7     		b	.L102
 2529              	.LVL371:
 2530              	.L107:
 2531              	.LBE1068:
 2532              	.LBE1067:
 316:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 2533              		.loc 5 316 0
 2534 0114 0268     		ldr	r2, [r0]
 2535              	.LVL372:
 2536              	.LBB1072:
 2537              	.LBB1073:
 2538              	.LBB1074:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2539              		.loc 7 43 0
 2540 0116 0023     		movs	r3, #0
 2541              	.LVL373:
 2542              	.L133:
 2543 0118 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2544 011a 9942     		cmp	r1, r3
 2545 011c 09D9     		bls	.L131
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2546              		.loc 7 44 0
 2547 011e 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2548              	.LVL374:
 2549              	.LBB1075:
 2550              	.LBB1076:
 2551              		.loc 8 45 0
 2552 0122 4C68     		ldr	r4, [r1, #4]
 2553 0124 6949     		ldr	r1, .L198
 2554              	.LVL375:
 2555 0126 4968     		ldr	r1, [r1, #4]
 2556              	.LVL376:
 2557              	.LBE1076:
 2558              	.LBE1075:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2559              		.loc 7 44 0
 2560 0128 8C42     		cmp	r4, r1
 2561 012a 07D0     		beq	.L132
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2562              		.loc 7 43 0
 2563 012c 0133     		adds	r3, r3, #1
 2564              	.LVL377:
 2565 012e DBB2     		uxtb	r3, r3
 2566              	.LVL378:
 2567 0130 F2E7     		b	.L133
 2568              	.L131:
 2569              	.LBE1074:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 62


 2570              		.loc 7 48 0
 2571 0132 4B1C     		adds	r3, r1, #1
 2572              	.LVL379:
 2573 0134 1374     		strb	r3, [r2, #16]
 2574 0136 654B     		ldr	r3, .L198
 2575 0138 42F82130 		str	r3, [r2, r1, lsl #2]
 2576              	.L132:
 2577              	.LVL380:
 2578              	.LBE1073:
 2579              	.LBE1072:
 317:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 2580              		.loc 5 317 0
 2581 013c 0268     		ldr	r2, [r0]
 2582              	.LVL381:
 2583              	.LBB1077:
 2584              	.LBB1078:
 2585              	.LBB1079:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2586              		.loc 7 43 0
 2587 013e 0023     		movs	r3, #0
 2588              	.L136:
 2589              	.LVL382:
 2590 0140 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2591 0142 9942     		cmp	r1, r3
 2592 0144 09D9     		bls	.L134
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2593              		.loc 7 44 0
 2594 0146 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2595              	.LVL383:
 2596              	.LBB1080:
 2597              	.LBB1081:
 2598              		.loc 8 45 0
 2599 014a 4C68     		ldr	r4, [r1, #4]
 2600 014c 6049     		ldr	r1, .L198+4
 2601              	.LVL384:
 2602 014e 4968     		ldr	r1, [r1, #4]
 2603              	.LVL385:
 2604              	.LBE1081:
 2605              	.LBE1080:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2606              		.loc 7 44 0
 2607 0150 8C42     		cmp	r4, r1
 2608 0152 07D0     		beq	.L135
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2609              		.loc 7 43 0
 2610 0154 0133     		adds	r3, r3, #1
 2611              	.LVL386:
 2612 0156 DBB2     		uxtb	r3, r3
 2613              	.LVL387:
 2614 0158 F2E7     		b	.L136
 2615              	.L134:
 2616              	.LBE1079:
 2617              		.loc 7 48 0
 2618 015a 4B1C     		adds	r3, r1, #1
 2619              	.LVL388:
 2620 015c 1374     		strb	r3, [r2, #16]
 2621 015e 5C4B     		ldr	r3, .L198+4
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 63


 2622 0160 42F82130 		str	r3, [r2, r1, lsl #2]
 2623              	.L135:
 2624              	.LVL389:
 2625              	.LBE1078:
 2626              	.LBE1077:
 318:Core/Src/parts/state_sensor.cpp ****                 } break;
 2627              		.loc 5 318 0
 2628 0164 0268     		ldr	r2, [r0]
 2629              	.LVL390:
 2630              	.LBB1082:
 2631              	.LBB1083:
 2632              	.LBB1084:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2633              		.loc 7 43 0
 2634 0166 0023     		movs	r3, #0
 2635              	.LVL391:
 2636              	.L138:
 2637 0168 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2638 016a 9942     		cmp	r1, r3
 2639 016c 09D9     		bls	.L137
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2640              		.loc 7 44 0
 2641 016e 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2642              	.LVL392:
 2643              	.LBB1085:
 2644              	.LBB1086:
 2645              		.loc 8 45 0
 2646 0172 4868     		ldr	r0, [r1, #4]
 2647 0174 5749     		ldr	r1, .L198+8
 2648              	.LVL393:
 2649 0176 4968     		ldr	r1, [r1, #4]
 2650              	.LVL394:
 2651              	.LBE1086:
 2652              	.LBE1085:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2653              		.loc 7 44 0
 2654 0178 8842     		cmp	r0, r1
 2655 017a 8CD0     		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2656              		.loc 7 43 0
 2657 017c 0133     		adds	r3, r3, #1
 2658              	.LVL395:
 2659 017e DBB2     		uxtb	r3, r3
 2660              	.LVL396:
 2661 0180 F2E7     		b	.L138
 2662              	.L137:
 2663              	.LBE1084:
 2664              		.loc 7 48 0
 2665 0182 4B1C     		adds	r3, r1, #1
 2666              	.LVL397:
 2667 0184 1374     		strb	r3, [r2, #16]
 2668 0186 534B     		ldr	r3, .L198+8
 2669 0188 42F82130 		str	r3, [r2, r1, lsl #2]
 2670 018c 83E7     		b	.L102
 2671              	.LVL398:
 2672              	.L108:
 2673              	.LBE1083:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 64


 2674              	.LBE1082:
 322:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 2675              		.loc 5 322 0
 2676 018e 0268     		ldr	r2, [r0]
 2677              	.LVL399:
 2678              	.LBB1087:
 2679              	.LBB1088:
 2680              	.LBB1089:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2681              		.loc 7 43 0
 2682 0190 0023     		movs	r3, #0
 2683              	.LVL400:
 2684              	.L141:
 2685 0192 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2686 0194 9942     		cmp	r1, r3
 2687 0196 09D9     		bls	.L139
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2688              		.loc 7 44 0
 2689 0198 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2690              	.LVL401:
 2691              	.LBB1090:
 2692              	.LBB1091:
 2693              		.loc 8 45 0
 2694 019c 4C68     		ldr	r4, [r1, #4]
 2695 019e 4B49     		ldr	r1, .L198
 2696              	.LVL402:
 2697 01a0 4968     		ldr	r1, [r1, #4]
 2698              	.LVL403:
 2699              	.LBE1091:
 2700              	.LBE1090:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2701              		.loc 7 44 0
 2702 01a2 8C42     		cmp	r4, r1
 2703 01a4 07D0     		beq	.L140
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2704              		.loc 7 43 0
 2705 01a6 0133     		adds	r3, r3, #1
 2706              	.LVL404:
 2707 01a8 DBB2     		uxtb	r3, r3
 2708              	.LVL405:
 2709 01aa F2E7     		b	.L141
 2710              	.L139:
 2711              	.LBE1089:
 2712              		.loc 7 48 0
 2713 01ac 4B1C     		adds	r3, r1, #1
 2714              	.LVL406:
 2715 01ae 1374     		strb	r3, [r2, #16]
 2716 01b0 464B     		ldr	r3, .L198
 2717 01b2 42F82130 		str	r3, [r2, r1, lsl #2]
 2718              	.L140:
 2719              	.LVL407:
 2720              	.LBE1088:
 2721              	.LBE1087:
 323:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 2722              		.loc 5 323 0
 2723 01b6 0268     		ldr	r2, [r0]
 2724              	.LVL408:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 65


 2725              	.LBB1092:
 2726              	.LBB1093:
 2727              	.LBB1094:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2728              		.loc 7 43 0
 2729 01b8 0023     		movs	r3, #0
 2730              	.L144:
 2731              	.LVL409:
 2732 01ba 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2733 01bc 9942     		cmp	r1, r3
 2734 01be 09D9     		bls	.L142
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2735              		.loc 7 44 0
 2736 01c0 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2737              	.LVL410:
 2738              	.LBB1095:
 2739              	.LBB1096:
 2740              		.loc 8 45 0
 2741 01c4 4C68     		ldr	r4, [r1, #4]
 2742 01c6 4249     		ldr	r1, .L198+4
 2743              	.LVL411:
 2744 01c8 4968     		ldr	r1, [r1, #4]
 2745              	.LVL412:
 2746              	.LBE1096:
 2747              	.LBE1095:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2748              		.loc 7 44 0
 2749 01ca 8C42     		cmp	r4, r1
 2750 01cc 07D0     		beq	.L143
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2751              		.loc 7 43 0
 2752 01ce 0133     		adds	r3, r3, #1
 2753              	.LVL413:
 2754 01d0 DBB2     		uxtb	r3, r3
 2755              	.LVL414:
 2756 01d2 F2E7     		b	.L144
 2757              	.L142:
 2758              	.LBE1094:
 2759              		.loc 7 48 0
 2760 01d4 4B1C     		adds	r3, r1, #1
 2761              	.LVL415:
 2762 01d6 1374     		strb	r3, [r2, #16]
 2763 01d8 3D4B     		ldr	r3, .L198+4
 2764 01da 42F82130 		str	r3, [r2, r1, lsl #2]
 2765              	.L143:
 2766              	.LVL416:
 2767              	.LBE1093:
 2768              	.LBE1092:
 324:Core/Src/parts/state_sensor.cpp ****                 } break;
 2769              		.loc 5 324 0
 2770 01de 0268     		ldr	r2, [r0]
 2771              	.LVL417:
 2772              	.LBB1097:
 2773              	.LBB1098:
 2774              	.LBB1099:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2775              		.loc 7 43 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 66


 2776 01e0 0023     		movs	r3, #0
 2777              	.LVL418:
 2778              	.L146:
 2779 01e2 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2780 01e4 9942     		cmp	r1, r3
 2781 01e6 0AD9     		bls	.L145
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2782              		.loc 7 44 0
 2783 01e8 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2784              	.LVL419:
 2785              	.LBB1100:
 2786              	.LBB1101:
 2787              		.loc 8 45 0
 2788 01ec 4868     		ldr	r0, [r1, #4]
 2789 01ee 3949     		ldr	r1, .L198+8
 2790              	.LVL420:
 2791 01f0 4968     		ldr	r1, [r1, #4]
 2792              	.LVL421:
 2793              	.LBE1101:
 2794              	.LBE1100:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2795              		.loc 7 44 0
 2796 01f2 8842     		cmp	r0, r1
 2797 01f4 3FF44FAF 		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2798              		.loc 7 43 0
 2799 01f8 0133     		adds	r3, r3, #1
 2800              	.LVL422:
 2801 01fa DBB2     		uxtb	r3, r3
 2802              	.LVL423:
 2803 01fc F1E7     		b	.L146
 2804              	.L145:
 2805              	.LBE1099:
 2806              		.loc 7 48 0
 2807 01fe 4B1C     		adds	r3, r1, #1
 2808              	.LVL424:
 2809 0200 1374     		strb	r3, [r2, #16]
 2810 0202 344B     		ldr	r3, .L198+8
 2811 0204 42F82130 		str	r3, [r2, r1, lsl #2]
 2812 0208 45E7     		b	.L102
 2813              	.LVL425:
 2814              	.L109:
 2815              	.LBE1098:
 2816              	.LBE1097:
 328:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 2817              		.loc 5 328 0
 2818 020a 0268     		ldr	r2, [r0]
 2819              	.LVL426:
 2820              	.LBB1102:
 2821              	.LBB1103:
 2822              	.LBB1104:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2823              		.loc 7 43 0
 2824 020c 0023     		movs	r3, #0
 2825              	.LVL427:
 2826              	.L149:
 2827 020e 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 67


 2828 0210 9942     		cmp	r1, r3
 2829 0212 09D9     		bls	.L147
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2830              		.loc 7 44 0
 2831 0214 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2832              	.LVL428:
 2833              	.LBB1105:
 2834              	.LBB1106:
 2835              		.loc 8 45 0
 2836 0218 4C68     		ldr	r4, [r1, #4]
 2837 021a 2C49     		ldr	r1, .L198
 2838              	.LVL429:
 2839 021c 4968     		ldr	r1, [r1, #4]
 2840              	.LVL430:
 2841              	.LBE1106:
 2842              	.LBE1105:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2843              		.loc 7 44 0
 2844 021e 8C42     		cmp	r4, r1
 2845 0220 07D0     		beq	.L148
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2846              		.loc 7 43 0
 2847 0222 0133     		adds	r3, r3, #1
 2848              	.LVL431:
 2849 0224 DBB2     		uxtb	r3, r3
 2850              	.LVL432:
 2851 0226 F2E7     		b	.L149
 2852              	.L147:
 2853              	.LBE1104:
 2854              		.loc 7 48 0
 2855 0228 4B1C     		adds	r3, r1, #1
 2856              	.LVL433:
 2857 022a 1374     		strb	r3, [r2, #16]
 2858 022c 274B     		ldr	r3, .L198
 2859 022e 42F82130 		str	r3, [r2, r1, lsl #2]
 2860              	.L148:
 2861              	.LVL434:
 2862              	.LBE1103:
 2863              	.LBE1102:
 329:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 2864              		.loc 5 329 0
 2865 0232 0268     		ldr	r2, [r0]
 2866              	.LVL435:
 2867              	.LBB1107:
 2868              	.LBB1108:
 2869              	.LBB1109:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2870              		.loc 7 43 0
 2871 0234 0023     		movs	r3, #0
 2872              	.L152:
 2873              	.LVL436:
 2874 0236 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2875 0238 9942     		cmp	r1, r3
 2876 023a 09D9     		bls	.L150
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2877              		.loc 7 44 0
 2878 023c 52F82310 		ldr	r1, [r2, r3, lsl #2]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 68


 2879              	.LVL437:
 2880              	.LBB1110:
 2881              	.LBB1111:
 2882              		.loc 8 45 0
 2883 0240 4C68     		ldr	r4, [r1, #4]
 2884 0242 2349     		ldr	r1, .L198+4
 2885              	.LVL438:
 2886 0244 4968     		ldr	r1, [r1, #4]
 2887              	.LVL439:
 2888              	.LBE1111:
 2889              	.LBE1110:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2890              		.loc 7 44 0
 2891 0246 8C42     		cmp	r4, r1
 2892 0248 07D0     		beq	.L151
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2893              		.loc 7 43 0
 2894 024a 0133     		adds	r3, r3, #1
 2895              	.LVL440:
 2896 024c DBB2     		uxtb	r3, r3
 2897              	.LVL441:
 2898 024e F2E7     		b	.L152
 2899              	.L150:
 2900              	.LBE1109:
 2901              		.loc 7 48 0
 2902 0250 4B1C     		adds	r3, r1, #1
 2903              	.LVL442:
 2904 0252 1374     		strb	r3, [r2, #16]
 2905 0254 1E4B     		ldr	r3, .L198+4
 2906 0256 42F82130 		str	r3, [r2, r1, lsl #2]
 2907              	.L151:
 2908              	.LVL443:
 2909              	.LBE1108:
 2910              	.LBE1107:
 330:Core/Src/parts/state_sensor.cpp ****                 } break;
 2911              		.loc 5 330 0
 2912 025a 0268     		ldr	r2, [r0]
 2913              	.LVL444:
 2914              	.LBB1112:
 2915              	.LBB1113:
 2916              	.LBB1114:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2917              		.loc 7 43 0
 2918 025c 0023     		movs	r3, #0
 2919              	.LVL445:
 2920              	.L154:
 2921 025e 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2922 0260 9942     		cmp	r1, r3
 2923 0262 0AD9     		bls	.L153
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2924              		.loc 7 44 0
 2925 0264 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2926              	.LVL446:
 2927              	.LBB1115:
 2928              	.LBB1116:
 2929              		.loc 8 45 0
 2930 0268 4868     		ldr	r0, [r1, #4]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 69


 2931 026a 1A49     		ldr	r1, .L198+8
 2932              	.LVL447:
 2933 026c 4968     		ldr	r1, [r1, #4]
 2934              	.LVL448:
 2935              	.LBE1116:
 2936              	.LBE1115:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2937              		.loc 7 44 0
 2938 026e 8842     		cmp	r0, r1
 2939 0270 3FF411AF 		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2940              		.loc 7 43 0
 2941 0274 0133     		adds	r3, r3, #1
 2942              	.LVL449:
 2943 0276 DBB2     		uxtb	r3, r3
 2944              	.LVL450:
 2945 0278 F1E7     		b	.L154
 2946              	.L153:
 2947              	.LBE1114:
 2948              		.loc 7 48 0
 2949 027a 4B1C     		adds	r3, r1, #1
 2950              	.LVL451:
 2951 027c 1374     		strb	r3, [r2, #16]
 2952 027e 154B     		ldr	r3, .L198+8
 2953 0280 42F82130 		str	r3, [r2, r1, lsl #2]
 2954 0284 07E7     		b	.L102
 2955              	.LVL452:
 2956              	.L110:
 2957              	.LBE1113:
 2958              	.LBE1112:
 334:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 2959              		.loc 5 334 0
 2960 0286 0268     		ldr	r2, [r0]
 2961              	.LVL453:
 2962              	.LBB1117:
 2963              	.LBB1118:
 2964              	.LBB1119:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2965              		.loc 7 43 0
 2966 0288 0023     		movs	r3, #0
 2967              	.LVL454:
 2968              	.L157:
 2969 028a 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 2970 028c 9942     		cmp	r1, r3
 2971 028e 09D9     		bls	.L155
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2972              		.loc 7 44 0
 2973 0290 52F82310 		ldr	r1, [r2, r3, lsl #2]
 2974              	.LVL455:
 2975              	.LBB1120:
 2976              	.LBB1121:
 2977              		.loc 8 45 0
 2978 0294 4C68     		ldr	r4, [r1, #4]
 2979 0296 0D49     		ldr	r1, .L198
 2980              	.LVL456:
 2981 0298 4968     		ldr	r1, [r1, #4]
 2982              	.LVL457:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 70


 2983              	.LBE1121:
 2984              	.LBE1120:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 2985              		.loc 7 44 0
 2986 029a 8C42     		cmp	r4, r1
 2987 029c 07D0     		beq	.L156
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 2988              		.loc 7 43 0
 2989 029e 0133     		adds	r3, r3, #1
 2990              	.LVL458:
 2991 02a0 DBB2     		uxtb	r3, r3
 2992              	.LVL459:
 2993 02a2 F2E7     		b	.L157
 2994              	.L155:
 2995              	.LBE1119:
 2996              		.loc 7 48 0
 2997 02a4 4B1C     		adds	r3, r1, #1
 2998              	.LVL460:
 2999 02a6 1374     		strb	r3, [r2, #16]
 3000 02a8 084B     		ldr	r3, .L198
 3001 02aa 42F82130 		str	r3, [r2, r1, lsl #2]
 3002              	.L156:
 3003              	.LVL461:
 3004              	.LBE1118:
 3005              	.LBE1117:
 335:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 3006              		.loc 5 335 0
 3007 02ae 0268     		ldr	r2, [r0]
 3008              	.LVL462:
 3009              	.LBB1122:
 3010              	.LBB1123:
 3011              	.LBB1124:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3012              		.loc 7 43 0
 3013 02b0 0023     		movs	r3, #0
 3014              	.L160:
 3015              	.LVL463:
 3016 02b2 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3017 02b4 9942     		cmp	r1, r3
 3018 02b6 0FD9     		bls	.L158
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3019              		.loc 7 44 0
 3020 02b8 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3021              	.LVL464:
 3022              	.LBB1125:
 3023              	.LBB1126:
 3024              		.loc 8 45 0
 3025 02bc 4C68     		ldr	r4, [r1, #4]
 3026 02be 0449     		ldr	r1, .L198+4
 3027              	.LVL465:
 3028 02c0 4968     		ldr	r1, [r1, #4]
 3029              	.LVL466:
 3030              	.LBE1126:
 3031              	.LBE1125:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3032              		.loc 7 44 0
 3033 02c2 8C42     		cmp	r4, r1
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 71


 3034 02c4 0DD0     		beq	.L159
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3035              		.loc 7 43 0
 3036 02c6 0133     		adds	r3, r3, #1
 3037              	.LVL467:
 3038 02c8 DBB2     		uxtb	r3, r3
 3039              	.LVL468:
 3040 02ca F2E7     		b	.L160
 3041              	.L199:
 3042              		.align	2
 3043              	.L198:
 3044 02cc 00000000 		.word	gXEncoder
 3045 02d0 00000000 		.word	gYEncoder
 3046 02d4 00000000 		.word	gXLidar
 3047              	.L158:
 3048              	.LBE1124:
 3049              		.loc 7 48 0
 3050 02d8 4B1C     		adds	r3, r1, #1
 3051              	.LVL469:
 3052 02da 1374     		strb	r3, [r2, #16]
 3053 02dc 8B4B     		ldr	r3, .L200
 3054 02de 42F82130 		str	r3, [r2, r1, lsl #2]
 3055              	.L159:
 3056              	.LVL470:
 3057              	.LBE1123:
 3058              	.LBE1122:
 336:Core/Src/parts/state_sensor.cpp ****                 } break;
 3059              		.loc 5 336 0
 3060 02e2 0268     		ldr	r2, [r0]
 3061              	.LVL471:
 3062              	.LBB1127:
 3063              	.LBB1128:
 3064              	.LBB1129:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3065              		.loc 7 43 0
 3066 02e4 0023     		movs	r3, #0
 3067              	.LVL472:
 3068              	.L162:
 3069 02e6 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3070 02e8 9942     		cmp	r1, r3
 3071 02ea 0AD9     		bls	.L161
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3072              		.loc 7 44 0
 3073 02ec 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3074              	.LVL473:
 3075              	.LBB1130:
 3076              	.LBB1131:
 3077              		.loc 8 45 0
 3078 02f0 4868     		ldr	r0, [r1, #4]
 3079 02f2 8749     		ldr	r1, .L200+4
 3080              	.LVL474:
 3081 02f4 4968     		ldr	r1, [r1, #4]
 3082              	.LVL475:
 3083              	.LBE1131:
 3084              	.LBE1130:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3085              		.loc 7 44 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 72


 3086 02f6 8842     		cmp	r0, r1
 3087 02f8 3FF4CDAE 		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3088              		.loc 7 43 0
 3089 02fc 0133     		adds	r3, r3, #1
 3090              	.LVL476:
 3091 02fe DBB2     		uxtb	r3, r3
 3092              	.LVL477:
 3093 0300 F1E7     		b	.L162
 3094              	.L161:
 3095              	.LBE1129:
 3096              		.loc 7 48 0
 3097 0302 4B1C     		adds	r3, r1, #1
 3098              	.LVL478:
 3099 0304 1374     		strb	r3, [r2, #16]
 3100 0306 824B     		ldr	r3, .L200+4
 3101 0308 42F82130 		str	r3, [r2, r1, lsl #2]
 3102 030c C3E6     		b	.L102
 3103              	.LVL479:
 3104              	.L111:
 3105              	.LBE1128:
 3106              	.LBE1127:
 340:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 3107              		.loc 5 340 0
 3108 030e 0268     		ldr	r2, [r0]
 3109              	.LVL480:
 3110              	.LBB1132:
 3111              	.LBB1133:
 3112              	.LBB1134:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3113              		.loc 7 43 0
 3114 0310 0023     		movs	r3, #0
 3115              	.LVL481:
 3116              	.L165:
 3117 0312 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3118 0314 9942     		cmp	r1, r3
 3119 0316 09D9     		bls	.L163
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3120              		.loc 7 44 0
 3121 0318 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3122              	.LVL482:
 3123              	.LBB1135:
 3124              	.LBB1136:
 3125              		.loc 8 45 0
 3126 031c 4C68     		ldr	r4, [r1, #4]
 3127 031e 7D49     		ldr	r1, .L200+8
 3128              	.LVL483:
 3129 0320 4968     		ldr	r1, [r1, #4]
 3130              	.LVL484:
 3131              	.LBE1136:
 3132              	.LBE1135:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3133              		.loc 7 44 0
 3134 0322 8C42     		cmp	r4, r1
 3135 0324 07D0     		beq	.L164
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3136              		.loc 7 43 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 73


 3137 0326 0133     		adds	r3, r3, #1
 3138              	.LVL485:
 3139 0328 DBB2     		uxtb	r3, r3
 3140              	.LVL486:
 3141 032a F2E7     		b	.L165
 3142              	.L163:
 3143              	.LBE1134:
 3144              		.loc 7 48 0
 3145 032c 4B1C     		adds	r3, r1, #1
 3146              	.LVL487:
 3147 032e 1374     		strb	r3, [r2, #16]
 3148 0330 784B     		ldr	r3, .L200+8
 3149 0332 42F82130 		str	r3, [r2, r1, lsl #2]
 3150              	.L164:
 3151              	.LVL488:
 3152              	.LBE1133:
 3153              	.LBE1132:
 341:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 3154              		.loc 5 341 0
 3155 0336 0268     		ldr	r2, [r0]
 3156              	.LVL489:
 3157              	.LBB1137:
 3158              	.LBB1138:
 3159              	.LBB1139:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3160              		.loc 7 43 0
 3161 0338 0023     		movs	r3, #0
 3162              	.L168:
 3163              	.LVL490:
 3164 033a 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3165 033c 9942     		cmp	r1, r3
 3166 033e 09D9     		bls	.L166
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3167              		.loc 7 44 0
 3168 0340 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3169              	.LVL491:
 3170              	.LBB1140:
 3171              	.LBB1141:
 3172              		.loc 8 45 0
 3173 0344 4C68     		ldr	r4, [r1, #4]
 3174 0346 7149     		ldr	r1, .L200
 3175              	.LVL492:
 3176 0348 4968     		ldr	r1, [r1, #4]
 3177              	.LVL493:
 3178              	.LBE1141:
 3179              	.LBE1140:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3180              		.loc 7 44 0
 3181 034a 8C42     		cmp	r4, r1
 3182 034c 07D0     		beq	.L167
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3183              		.loc 7 43 0
 3184 034e 0133     		adds	r3, r3, #1
 3185              	.LVL494:
 3186 0350 DBB2     		uxtb	r3, r3
 3187              	.LVL495:
 3188 0352 F2E7     		b	.L168
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 74


 3189              	.L166:
 3190              	.LBE1139:
 3191              		.loc 7 48 0
 3192 0354 4B1C     		adds	r3, r1, #1
 3193              	.LVL496:
 3194 0356 1374     		strb	r3, [r2, #16]
 3195 0358 6C4B     		ldr	r3, .L200
 3196 035a 42F82130 		str	r3, [r2, r1, lsl #2]
 3197              	.L167:
 3198              	.LVL497:
 3199              	.LBE1138:
 3200              	.LBE1137:
 342:Core/Src/parts/state_sensor.cpp ****                 } break;
 3201              		.loc 5 342 0
 3202 035e 0268     		ldr	r2, [r0]
 3203              	.LVL498:
 3204              	.LBB1142:
 3205              	.LBB1143:
 3206              	.LBB1144:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3207              		.loc 7 43 0
 3208 0360 0023     		movs	r3, #0
 3209              	.LVL499:
 3210              	.L170:
 3211 0362 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3212 0364 9942     		cmp	r1, r3
 3213 0366 0AD9     		bls	.L169
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3214              		.loc 7 44 0
 3215 0368 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3216              	.LVL500:
 3217              	.LBB1145:
 3218              	.LBB1146:
 3219              		.loc 8 45 0
 3220 036c 4868     		ldr	r0, [r1, #4]
 3221 036e 6849     		ldr	r1, .L200+4
 3222              	.LVL501:
 3223 0370 4968     		ldr	r1, [r1, #4]
 3224              	.LVL502:
 3225              	.LBE1146:
 3226              	.LBE1145:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3227              		.loc 7 44 0
 3228 0372 8842     		cmp	r0, r1
 3229 0374 3FF48FAE 		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3230              		.loc 7 43 0
 3231 0378 0133     		adds	r3, r3, #1
 3232              	.LVL503:
 3233 037a DBB2     		uxtb	r3, r3
 3234              	.LVL504:
 3235 037c F1E7     		b	.L170
 3236              	.L169:
 3237              	.LBE1144:
 3238              		.loc 7 48 0
 3239 037e 4B1C     		adds	r3, r1, #1
 3240              	.LVL505:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 75


 3241 0380 1374     		strb	r3, [r2, #16]
 3242 0382 634B     		ldr	r3, .L200+4
 3243 0384 42F82130 		str	r3, [r2, r1, lsl #2]
 3244 0388 85E6     		b	.L102
 3245              	.LVL506:
 3246              	.L112:
 3247              	.LBE1143:
 3248              	.LBE1142:
 346:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 3249              		.loc 5 346 0
 3250 038a 0268     		ldr	r2, [r0]
 3251              	.LVL507:
 3252              	.LBB1147:
 3253              	.LBB1148:
 3254              	.LBB1149:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3255              		.loc 7 43 0
 3256 038c 0023     		movs	r3, #0
 3257              	.LVL508:
 3258              	.L173:
 3259 038e 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3260 0390 9942     		cmp	r1, r3
 3261 0392 09D9     		bls	.L171
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3262              		.loc 7 44 0
 3263 0394 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3264              	.LVL509:
 3265              	.LBB1150:
 3266              	.LBB1151:
 3267              		.loc 8 45 0
 3268 0398 4C68     		ldr	r4, [r1, #4]
 3269 039a 5E49     		ldr	r1, .L200+8
 3270              	.LVL510:
 3271 039c 4968     		ldr	r1, [r1, #4]
 3272              	.LVL511:
 3273              	.LBE1151:
 3274              	.LBE1150:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3275              		.loc 7 44 0
 3276 039e 8C42     		cmp	r4, r1
 3277 03a0 07D0     		beq	.L172
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3278              		.loc 7 43 0
 3279 03a2 0133     		adds	r3, r3, #1
 3280              	.LVL512:
 3281 03a4 DBB2     		uxtb	r3, r3
 3282              	.LVL513:
 3283 03a6 F2E7     		b	.L173
 3284              	.L171:
 3285              	.LBE1149:
 3286              		.loc 7 48 0
 3287 03a8 4B1C     		adds	r3, r1, #1
 3288              	.LVL514:
 3289 03aa 1374     		strb	r3, [r2, #16]
 3290 03ac 594B     		ldr	r3, .L200+8
 3291 03ae 42F82130 		str	r3, [r2, r1, lsl #2]
 3292              	.L172:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 76


 3293              	.LVL515:
 3294              	.LBE1148:
 3295              	.LBE1147:
 347:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gXLidar);
 3296              		.loc 5 347 0
 3297 03b2 0268     		ldr	r2, [r0]
 3298              	.LVL516:
 3299              	.LBB1152:
 3300              	.LBB1153:
 3301              	.LBB1154:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3302              		.loc 7 43 0
 3303 03b4 0023     		movs	r3, #0
 3304              	.L176:
 3305              	.LVL517:
 3306 03b6 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3307 03b8 9942     		cmp	r1, r3
 3308 03ba 09D9     		bls	.L174
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3309              		.loc 7 44 0
 3310 03bc 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3311              	.LVL518:
 3312              	.LBB1155:
 3313              	.LBB1156:
 3314              		.loc 8 45 0
 3315 03c0 4C68     		ldr	r4, [r1, #4]
 3316 03c2 5249     		ldr	r1, .L200
 3317              	.LVL519:
 3318 03c4 4968     		ldr	r1, [r1, #4]
 3319              	.LVL520:
 3320              	.LBE1156:
 3321              	.LBE1155:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3322              		.loc 7 44 0
 3323 03c6 8C42     		cmp	r4, r1
 3324 03c8 07D0     		beq	.L175
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3325              		.loc 7 43 0
 3326 03ca 0133     		adds	r3, r3, #1
 3327              	.LVL521:
 3328 03cc DBB2     		uxtb	r3, r3
 3329              	.LVL522:
 3330 03ce F2E7     		b	.L176
 3331              	.L174:
 3332              	.LBE1154:
 3333              		.loc 7 48 0
 3334 03d0 4B1C     		adds	r3, r1, #1
 3335              	.LVL523:
 3336 03d2 1374     		strb	r3, [r2, #16]
 3337 03d4 4D4B     		ldr	r3, .L200
 3338 03d6 42F82130 		str	r3, [r2, r1, lsl #2]
 3339              	.L175:
 3340              	.LVL524:
 3341              	.LBE1153:
 3342              	.LBE1152:
 348:Core/Src/parts/state_sensor.cpp ****                 } break;
 3343              		.loc 5 348 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 77


 3344 03da 0268     		ldr	r2, [r0]
 3345              	.LVL525:
 3346              	.LBB1157:
 3347              	.LBB1158:
 3348              	.LBB1159:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3349              		.loc 7 43 0
 3350 03dc 0023     		movs	r3, #0
 3351              	.LVL526:
 3352              	.L178:
 3353 03de 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3354 03e0 9942     		cmp	r1, r3
 3355 03e2 0AD9     		bls	.L177
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3356              		.loc 7 44 0
 3357 03e4 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3358              	.LVL527:
 3359              	.LBB1160:
 3360              	.LBB1161:
 3361              		.loc 8 45 0
 3362 03e8 4868     		ldr	r0, [r1, #4]
 3363 03ea 4949     		ldr	r1, .L200+4
 3364              	.LVL528:
 3365 03ec 4968     		ldr	r1, [r1, #4]
 3366              	.LVL529:
 3367              	.LBE1161:
 3368              	.LBE1160:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3369              		.loc 7 44 0
 3370 03ee 8842     		cmp	r0, r1
 3371 03f0 3FF451AE 		beq	.L102
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3372              		.loc 7 43 0
 3373 03f4 0133     		adds	r3, r3, #1
 3374              	.LVL530:
 3375 03f6 DBB2     		uxtb	r3, r3
 3376              	.LVL531:
 3377 03f8 F1E7     		b	.L178
 3378              	.L177:
 3379              	.LBE1159:
 3380              		.loc 7 48 0
 3381 03fa 4B1C     		adds	r3, r1, #1
 3382              	.LVL532:
 3383 03fc 1374     		strb	r3, [r2, #16]
 3384 03fe 444B     		ldr	r3, .L200+4
 3385 0400 42F82130 		str	r3, [r2, r1, lsl #2]
 3386 0404 47E6     		b	.L102
 3387              	.LVL533:
 3388              	.L113:
 3389              	.LBE1158:
 3390              	.LBE1157:
 352:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 3391              		.loc 5 352 0
 3392 0406 0268     		ldr	r2, [r0]
 3393              	.LVL534:
 3394              	.LBB1162:
 3395              	.LBB1163:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 78


 3396              	.LBB1164:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3397              		.loc 7 43 0
 3398 0408 0023     		movs	r3, #0
 3399              	.LVL535:
 3400              	.L181:
 3401 040a 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3402 040c 9942     		cmp	r1, r3
 3403 040e 09D9     		bls	.L179
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3404              		.loc 7 44 0
 3405 0410 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3406              	.LVL536:
 3407              	.LBB1165:
 3408              	.LBB1166:
 3409              		.loc 8 45 0
 3410 0414 4C68     		ldr	r4, [r1, #4]
 3411 0416 3F49     		ldr	r1, .L200+8
 3412              	.LVL537:
 3413 0418 4968     		ldr	r1, [r1, #4]
 3414              	.LVL538:
 3415              	.LBE1166:
 3416              	.LBE1165:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3417              		.loc 7 44 0
 3418 041a 8C42     		cmp	r4, r1
 3419 041c 07D0     		beq	.L180
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3420              		.loc 7 43 0
 3421 041e 0133     		adds	r3, r3, #1
 3422              	.LVL539:
 3423 0420 DBB2     		uxtb	r3, r3
 3424              	.LVL540:
 3425 0422 F2E7     		b	.L181
 3426              	.L179:
 3427              	.LBE1164:
 3428              		.loc 7 48 0
 3429 0424 4B1C     		adds	r3, r1, #1
 3430              	.LVL541:
 3431 0426 1374     		strb	r3, [r2, #16]
 3432 0428 3A4B     		ldr	r3, .L200+8
 3433 042a 42F82130 		str	r3, [r2, r1, lsl #2]
 3434              	.L180:
 3435              	.LVL542:
 3436              	.LBE1163:
 3437              	.LBE1162:
 353:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->remove_Sensor(&gXLidar);
 3438              		.loc 5 353 0
 3439 042e 0268     		ldr	r2, [r0]
 3440              	.LVL543:
 3441              	.LBB1167:
 3442              	.LBB1168:
 3443              	.LBB1169:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3444              		.loc 7 43 0
 3445 0430 0023     		movs	r3, #0
 3446              	.L184:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 79


 3447              	.LVL544:
 3448 0432 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3449 0434 9942     		cmp	r1, r3
 3450 0436 09D9     		bls	.L182
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3451              		.loc 7 44 0
 3452 0438 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3453              	.LVL545:
 3454              	.LBB1170:
 3455              	.LBB1171:
 3456              		.loc 8 45 0
 3457 043c 4C68     		ldr	r4, [r1, #4]
 3458 043e 3349     		ldr	r1, .L200
 3459              	.LVL546:
 3460 0440 4968     		ldr	r1, [r1, #4]
 3461              	.LVL547:
 3462              	.LBE1171:
 3463              	.LBE1170:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3464              		.loc 7 44 0
 3465 0442 8C42     		cmp	r4, r1
 3466 0444 07D0     		beq	.L183
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3467              		.loc 7 43 0
 3468 0446 0133     		adds	r3, r3, #1
 3469              	.LVL548:
 3470 0448 DBB2     		uxtb	r3, r3
 3471              	.LVL549:
 3472 044a F2E7     		b	.L184
 3473              	.L182:
 3474              	.LBE1169:
 3475              		.loc 7 48 0
 3476 044c 4B1C     		adds	r3, r1, #1
 3477              	.LVL550:
 3478 044e 1374     		strb	r3, [r2, #16]
 3479 0450 2E4B     		ldr	r3, .L200
 3480 0452 42F82130 		str	r3, [r2, r1, lsl #2]
 3481              	.L183:
 3482              	.LVL551:
 3483              	.LBE1168:
 3484              	.LBE1167:
 354:Core/Src/parts/state_sensor.cpp ****                 } break;
 3485              		.loc 5 354 0
 3486 0456 0168     		ldr	r1, [r0]
 3487              	.LVL552:
 3488              	.LBB1172:
 3489              	.LBB1173:
  49:Core/Inc/parts/sensors/position_sensor.h ****         }
  50:Core/Inc/parts/sensors/position_sensor.h ****         // Remove any Sensor from the next calculation
  51:Core/Inc/parts/sensors/position_sensor.h ****         void remove_Sensor(Sensor<float> *sen) {
  52:Core/Inc/parts/sensors/position_sensor.h ****                 for (uint8_t i = 0; i < sensor_count_; ++i) {
 3490              		.loc 7 52 0
 3491 0458 0023     		movs	r3, #0
 3492              	.LVL553:
 3493              	.L186:
 3494 045a 0A7C     		ldrb	r2, [r1, #16]	@ zero_extendqisi2
 3495 045c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 80


 3496 045e 7FF61AAE 		bls	.L102
  53:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3497              		.loc 7 53 0
 3498 0462 1D46     		mov	r5, r3
 3499 0464 51F82300 		ldr	r0, [r1, r3, lsl #2]
 3500              	.LVL554:
 3501              	.LBB1174:
 3502              	.LBB1175:
 3503              		.loc 8 45 0
 3504 0468 4468     		ldr	r4, [r0, #4]
 3505 046a 2948     		ldr	r0, .L200+4
 3506              	.LVL555:
 3507 046c 4068     		ldr	r0, [r0, #4]
 3508              	.LVL556:
 3509              	.LBE1175:
 3510              	.LBE1174:
 3511              		.loc 7 53 0
 3512 046e 8442     		cmp	r4, r0
 3513 0470 02D0     		beq	.L196
  52:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3514              		.loc 7 52 0
 3515 0472 0133     		adds	r3, r3, #1
 3516              	.LVL557:
 3517 0474 DBB2     		uxtb	r3, r3
 3518              	.LVL558:
 3519 0476 F0E7     		b	.L186
 3520              	.L196:
  54:Core/Inc/parts/sensors/position_sensor.h ****                                 --sensor_count_;
 3521              		.loc 7 54 0
 3522 0478 013A     		subs	r2, r2, #1
 3523 047a D2B2     		uxtb	r2, r2
 3524 047c 0A74     		strb	r2, [r1, #16]
  55:Core/Inc/parts/sensors/position_sensor.h ****                                 p_sensors_[i] = p_sensors_[sensor_count_];
 3525              		.loc 7 55 0
 3526 047e 51F82230 		ldr	r3, [r1, r2, lsl #2]
 3527              	.LVL559:
 3528 0482 41F82530 		str	r3, [r1, r5, lsl #2]
 3529 0486 06E6     		b	.L102
 3530              	.LVL560:
 3531              	.L103:
 3532              	.LBE1173:
 3533              	.LBE1172:
 358:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->add_Sensor(&gYEncoder);
 3534              		.loc 5 358 0
 3535 0488 0268     		ldr	r2, [r0]
 3536              	.LVL561:
 3537              	.LBB1176:
 3538              	.LBB1177:
 3539              	.LBB1178:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3540              		.loc 7 43 0
 3541 048a 0023     		movs	r3, #0
 3542              	.LVL562:
 3543              	.L189:
 3544 048c 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3545 048e 9942     		cmp	r1, r3
 3546 0490 09D9     		bls	.L187
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 81


  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3547              		.loc 7 44 0
 3548 0492 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3549              	.LVL563:
 3550              	.LBB1179:
 3551              	.LBB1180:
 3552              		.loc 8 45 0
 3553 0496 4C68     		ldr	r4, [r1, #4]
 3554 0498 1E49     		ldr	r1, .L200+8
 3555              	.LVL564:
 3556 049a 4968     		ldr	r1, [r1, #4]
 3557              	.LVL565:
 3558              	.LBE1180:
 3559              	.LBE1179:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3560              		.loc 7 44 0
 3561 049c 8C42     		cmp	r4, r1
 3562 049e 07D0     		beq	.L188
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3563              		.loc 7 43 0
 3564 04a0 0133     		adds	r3, r3, #1
 3565              	.LVL566:
 3566 04a2 DBB2     		uxtb	r3, r3
 3567              	.LVL567:
 3568 04a4 F2E7     		b	.L189
 3569              	.L187:
 3570              	.LBE1178:
  48:Core/Inc/parts/sensors/position_sensor.h ****         }
 3571              		.loc 7 48 0
 3572 04a6 4B1C     		adds	r3, r1, #1
 3573              	.LVL568:
 3574 04a8 1374     		strb	r3, [r2, #16]
 3575 04aa 1A4B     		ldr	r3, .L200+8
 3576 04ac 42F82130 		str	r3, [r2, r1, lsl #2]
 3577              	.L188:
 3578              	.LVL569:
 3579              	.LBE1177:
 3580              	.LBE1176:
 359:Core/Src/parts/state_sensor.cpp ****                         p_sensor_->remove_Sensor(&gXLidar);
 3581              		.loc 5 359 0
 3582 04b0 0268     		ldr	r2, [r0]
 3583              	.LVL570:
 3584              	.LBB1181:
 3585              	.LBB1182:
 3586              	.LBB1183:
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3587              		.loc 7 43 0
 3588 04b2 0023     		movs	r3, #0
 3589              	.L192:
 3590              	.LVL571:
 3591 04b4 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 3592 04b6 9942     		cmp	r1, r3
 3593 04b8 09D9     		bls	.L190
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3594              		.loc 7 44 0
 3595 04ba 52F82310 		ldr	r1, [r2, r3, lsl #2]
 3596              	.LVL572:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 82


 3597              	.LBB1184:
 3598              	.LBB1185:
 3599              		.loc 8 45 0
 3600 04be 4C68     		ldr	r4, [r1, #4]
 3601 04c0 1249     		ldr	r1, .L200
 3602              	.LVL573:
 3603 04c2 4968     		ldr	r1, [r1, #4]
 3604              	.LVL574:
 3605              	.LBE1185:
 3606              	.LBE1184:
  44:Core/Inc/parts/sensors/position_sensor.h ****                                 return;
 3607              		.loc 7 44 0
 3608 04c4 8C42     		cmp	r4, r1
 3609 04c6 07D0     		beq	.L191
  43:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3610              		.loc 7 43 0
 3611 04c8 0133     		adds	r3, r3, #1
 3612              	.LVL575:
 3613 04ca DBB2     		uxtb	r3, r3
 3614              	.LVL576:
 3615 04cc F2E7     		b	.L192
 3616              	.L190:
 3617              	.LBE1183:
  48:Core/Inc/parts/sensors/position_sensor.h ****         }
 3618              		.loc 7 48 0
 3619 04ce 4B1C     		adds	r3, r1, #1
 3620              	.LVL577:
 3621 04d0 1374     		strb	r3, [r2, #16]
 3622 04d2 0E4B     		ldr	r3, .L200
 3623 04d4 42F82130 		str	r3, [r2, r1, lsl #2]
 3624              	.L191:
 3625              	.LVL578:
 3626              	.LBE1182:
 3627              	.LBE1181:
 360:Core/Src/parts/state_sensor.cpp ****                 }
 3628              		.loc 5 360 0
 3629 04d8 0168     		ldr	r1, [r0]
 3630              	.LVL579:
 3631              	.LBB1186:
 3632              	.LBB1187:
  52:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3633              		.loc 7 52 0
 3634 04da 0023     		movs	r3, #0
 3635              	.LVL580:
 3636              	.L194:
 3637 04dc 0A7C     		ldrb	r2, [r1, #16]	@ zero_extendqisi2
 3638 04de 9A42     		cmp	r2, r3
 3639 04e0 7FF6D9AD 		bls	.L102
  53:Core/Inc/parts/sensors/position_sensor.h ****                                 --sensor_count_;
 3640              		.loc 7 53 0
 3641 04e4 1D46     		mov	r5, r3
 3642 04e6 51F82300 		ldr	r0, [r1, r3, lsl #2]
 3643              	.LVL581:
 3644              	.LBB1188:
 3645              	.LBB1189:
 3646              		.loc 8 45 0
 3647 04ea 4468     		ldr	r4, [r0, #4]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 83


 3648 04ec 0848     		ldr	r0, .L200+4
 3649              	.LVL582:
 3650 04ee 4068     		ldr	r0, [r0, #4]
 3651              	.LVL583:
 3652              	.LBE1189:
 3653              	.LBE1188:
  53:Core/Inc/parts/sensors/position_sensor.h ****                                 --sensor_count_;
 3654              		.loc 7 53 0
 3655 04f0 8442     		cmp	r4, r0
 3656 04f2 02D0     		beq	.L197
  52:Core/Inc/parts/sensors/position_sensor.h ****                         if (*p_sensors_[i] == *sen) {
 3657              		.loc 7 52 0
 3658 04f4 0133     		adds	r3, r3, #1
 3659              	.LVL584:
 3660 04f6 DBB2     		uxtb	r3, r3
 3661              	.LVL585:
 3662 04f8 F0E7     		b	.L194
 3663              	.L197:
  54:Core/Inc/parts/sensors/position_sensor.h ****                                 p_sensors_[i] = p_sensors_[sensor_count_];
 3664              		.loc 7 54 0
 3665 04fa 013A     		subs	r2, r2, #1
 3666 04fc D2B2     		uxtb	r2, r2
 3667 04fe 0A74     		strb	r2, [r1, #16]
 3668              		.loc 7 55 0
 3669 0500 51F82230 		ldr	r3, [r1, r2, lsl #2]
 3670              	.LVL586:
 3671 0504 41F82530 		str	r3, [r1, r5, lsl #2]
 3672 0508 C5E5     		b	.L102
 3673              	.L201:
 3674 050a 00BF     		.align	2
 3675              	.L200:
 3676 050c 00000000 		.word	gYEncoder
 3677 0510 00000000 		.word	gXLidar
 3678 0514 00000000 		.word	gXEncoder
 3679              	.LBE1187:
 3680              	.LBE1186:
 3681              		.cfi_endproc
 3682              	.LFE537:
 3684              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 3685              		.align	1
 3686              		.weak	_Z12swap_ElementIfEvRT_S1_
 3687              		.syntax unified
 3688              		.thumb
 3689              		.thumb_func
 3690              		.fpu fpv4-sp-d16
 3692              	_Z12swap_ElementIfEvRT_S1_:
 3693              	.LFB581:
  16:Core/Inc/utils\math/vec3.h **** {
 3694              		.loc 4 16 0
 3695              		.cfi_startproc
 3696              		@ args = 0, pretend = 0, frame = 0
 3697              		@ frame_needed = 0, uses_anonymous_args = 0
 3698              		@ link register save eliminated.
 3699              	.LVL587:
  18:Core/Inc/utils\math/vec3.h ****         first = second;
 3700              		.loc 4 18 0
 3701 0000 0368     		ldr	r3, [r0]	@ float
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 84


 3702              	.LVL588:
  19:Core/Inc/utils\math/vec3.h ****         second = temp;
 3703              		.loc 4 19 0
 3704 0002 0A68     		ldr	r2, [r1]	@ float
 3705 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils\math/vec3.h **** }
 3706              		.loc 4 20 0
 3707 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils\math/vec3.h **** 
 3708              		.loc 4 21 0
 3709 0008 7047     		bx	lr
 3710              		.cfi_endproc
 3711              	.LFE581:
 3713              		.global	__aeabi_f2d
 3714              		.global	__aeabi_dmul
 3715              		.global	__aeabi_d2f
 3716              		.global	__aeabi_ddiv
 3717              		.section	.text._ZN12State_Sensor16read_OrientationE4Vec3IfEm,"ax",%progbits
 3718              		.align	1
 3719              		.global	_ZN12State_Sensor16read_OrientationE4Vec3IfEm
 3720              		.syntax unified
 3721              		.thumb
 3722              		.thumb_func
 3723              		.fpu fpv4-sp-d16
 3725              	_ZN12State_Sensor16read_OrientationE4Vec3IfEm:
 3726              	.LFB536:
 215:Core/Src/parts/state_sensor.cpp ****         Vec3<float> accel;
 3727              		.loc 5 215 0
 3728              		.cfi_startproc
 3729              		@ args = 0, pretend = 0, frame = 72
 3730              		@ frame_needed = 0, uses_anonymous_args = 0
 3731              	.LVL589:
 3732 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3733              	.LCFI25:
 3734              		.cfi_def_cfa_offset 20
 3735              		.cfi_offset 4, -20
 3736              		.cfi_offset 5, -16
 3737              		.cfi_offset 6, -12
 3738              		.cfi_offset 7, -8
 3739              		.cfi_offset 14, -4
 3740 0002 2DED0C8B 		vpush.64	{d8, d9, d10, d11, d12, d13}
 3741              	.LCFI26:
 3742              		.cfi_def_cfa_offset 68
 3743              		.cfi_offset 80, -68
 3744              		.cfi_offset 81, -64
 3745              		.cfi_offset 82, -60
 3746              		.cfi_offset 83, -56
 3747              		.cfi_offset 84, -52
 3748              		.cfi_offset 85, -48
 3749              		.cfi_offset 86, -44
 3750              		.cfi_offset 87, -40
 3751              		.cfi_offset 88, -36
 3752              		.cfi_offset 89, -32
 3753              		.cfi_offset 90, -28
 3754              		.cfi_offset 91, -24
 3755 0006 93B0     		sub	sp, sp, #76
 3756              	.LCFI27:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 85


 3757              		.cfi_def_cfa_offset 144
 3758 0008 0446     		mov	r4, r0
 3759 000a 1E46     		mov	r6, r3
 3760              	.LVL590:
 3761              	.LBB1263:
 3762              	.LBB1264:
 3763              	.LBB1265:
 3764              	.LBB1266:
 3765              	.LBB1267:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 3766              		.loc 4 37 0
 3767 000c 0023     		movs	r3, #0
 3768              	.LVL591:
 3769 000e 0693     		str	r3, [sp, #24]	@ float
 3770              	.LVL592:
 3771              	.LBE1267:
 3772              	.LBE1266:
 3773              	.LBB1268:
 3774              	.LBB1269:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 3775              		.loc 4 38 0
 3776 0010 0793     		str	r3, [sp, #28]	@ float
 3777              	.LVL593:
 3778              	.LBE1269:
 3779              	.LBE1268:
 3780              	.LBB1270:
 3781              	.LBB1271:
 3782              		.loc 4 39 0
 3783 0012 0893     		str	r3, [sp, #32]	@ float
 3784              	.LVL594:
 3785              	.LBE1271:
 3786              	.LBE1270:
 3787              	.LBE1265:
 3788              	.LBE1264:
 3789              	.LBE1263:
 3790              	.LBB1272:
 3791              	.LBB1273:
 3792              	.LBB1274:
 3793              	.LBB1275:
 3794              	.LBB1276:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 3795              		.loc 4 37 0
 3796 0014 0393     		str	r3, [sp, #12]	@ float
 3797              	.LVL595:
 3798              	.LBE1276:
 3799              	.LBE1275:
 3800              	.LBB1277:
 3801              	.LBB1278:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 3802              		.loc 4 38 0
 3803 0016 0493     		str	r3, [sp, #16]	@ float
 3804              	.LVL596:
 3805              	.LBE1278:
 3806              	.LBE1277:
 3807              	.LBB1279:
 3808              	.LBB1280:
 3809              		.loc 4 39 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 86


 3810 0018 0593     		str	r3, [sp, #20]	@ float
 3811              	.LVL597:
 3812              	.LBE1280:
 3813              	.LBE1279:
 3814              	.LBE1274:
 3815              	.LBE1273:
 3816              	.LBE1272:
 3817              	.LBB1281:
 3818              	.LBB1282:
 3819              	.LBB1283:
 3820              	.LBB1284:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 3821              		.loc 4 37 0
 3822 001a 0360     		str	r3, [r0]	@ float
 3823              	.LVL598:
 3824              	.LBE1284:
 3825              	.LBE1283:
 3826              	.LBB1285:
 3827              	.LBB1286:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 3828              		.loc 4 38 0
 3829 001c 4360     		str	r3, [r0, #4]	@ float
 3830              	.LVL599:
 3831              	.LBE1286:
 3832              	.LBE1285:
 3833              	.LBB1287:
 3834              	.LBB1288:
 3835              		.loc 4 39 0
 3836 001e 8360     		str	r3, [r0, #8]	@ float
 3837              	.LVL600:
 3838              	.LBE1288:
 3839              	.LBE1287:
 3840              	.LBE1282:
 3841              	.LBE1281:
 226:Core/Src/parts/state_sensor.cpp ****                 mpu_is_ready = false;
 3842              		.loc 5 226 0
 3843 0020 B148     		ldr	r0, .L212+8
 3844              	.LVL601:
 3845 0022 FFF7FEFF 		bl	_Z21MPU6050_Read_NormAxesP7MPU6050
 3846              	.LVL602:
 3847 0026 B8B9     		cbnz	r0, .L209
 223:Core/Src/parts/state_sensor.cpp ****         
 3848              		.loc 5 223 0
 3849 0028 0125     		movs	r5, #1
 3850              	.L204:
 3851              	.LVL603:
 231:Core/Src/parts/state_sensor.cpp ****                 hmc_is_ready = false;
 3852              		.loc 5 231 0
 3853 002a B048     		ldr	r0, .L212+12
 3854 002c FFF7FEFF 		bl	_Z12HMC5883_ReadP7HMC5883
 3855              	.LVL604:
 3856 0030 A0B9     		cbnz	r0, .L210
 223:Core/Src/parts/state_sensor.cpp ****         
 3857              		.loc 5 223 0
 3858 0032 0123     		movs	r3, #1
 3859              	.L205:
 3860              	.LVL605:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 87


 235:Core/Src/parts/state_sensor.cpp ****                 //! Error Condition
 3861              		.loc 5 235 0
 3862 0034 05B1     		cbz	r5, .L206
 235:Core/Src/parts/state_sensor.cpp ****                 //! Error Condition
 3863              		.loc 5 235 0 is_stmt 0 discriminator 1
 3864 0036 9BB9     		cbnz	r3, .L207
 3865              	.L206:
 237:Core/Src/parts/state_sensor.cpp ****                 error(Error::PERIPHERAL_ERROR);
 3866              		.loc 5 237 0 is_stmt 1
 3867 0038 0122     		movs	r2, #1
 3868 003a 4FF40041 		mov	r1, #32768
 3869 003e AC48     		ldr	r0, .L212+16
 3870 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3871              	.LVL606:
 238:Core/Src/parts/state_sensor.cpp ****                 IMU_Init();
 3872              		.loc 5 238 0
 3873 0044 0120     		movs	r0, #1
 3874 0046 FFF7FEFF 		bl	_Z5error5Error
 3875              	.LVL607:
 239:Core/Src/parts/state_sensor.cpp ****                 return angles;
 3876              		.loc 5 239 0
 3877 004a FFF7FEFF 		bl	_Z8IMU_Initv
 3878              	.LVL608:
 3879              	.L203:
 298:Core/Src/parts/state_sensor.cpp **** 
 3880              		.loc 5 298 0
 3881 004e 2046     		mov	r0, r4
 3882 0050 13B0     		add	sp, sp, #76
 3883              	.LCFI28:
 3884              		.cfi_remember_state
 3885              		.cfi_def_cfa_offset 68
 3886              		@ sp needed
 3887 0052 BDEC0C8B 		vldm	sp!, {d8-d13}
 3888              	.LCFI29:
 3889              		.cfi_restore 90
 3890              		.cfi_restore 91
 3891              		.cfi_restore 88
 3892              		.cfi_restore 89
 3893              		.cfi_restore 86
 3894              		.cfi_restore 87
 3895              		.cfi_restore 84
 3896              		.cfi_restore 85
 3897              		.cfi_restore 82
 3898              		.cfi_restore 83
 3899              		.cfi_restore 80
 3900              		.cfi_restore 81
 3901              		.cfi_def_cfa_offset 20
 3902 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 3903              	.LVL609:
 3904              	.L209:
 3905              	.LCFI30:
 3906              		.cfi_restore_state
 227:Core/Src/parts/state_sensor.cpp ****         }
 3907              		.loc 5 227 0
 3908 0058 0025     		movs	r5, #0
 3909 005a E6E7     		b	.L204
 3910              	.LVL610:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 88


 3911              	.L210:
 232:Core/Src/parts/state_sensor.cpp ****         }
 3912              		.loc 5 232 0
 3913 005c 0023     		movs	r3, #0
 3914 005e E9E7     		b	.L205
 3915              	.LVL611:
 3916              	.L207:
 243:Core/Src/parts/state_sensor.cpp ****         }
 3917              		.loc 5 243 0
 3918 0060 0022     		movs	r2, #0
 3919 0062 4FF40041 		mov	r1, #32768
 3920 0066 A248     		ldr	r0, .L212+16
 3921 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3922              	.LVL612:
 3923              	.LBB1289:
 3924              	.LBB1290:
 3925              	.LBB1291:
 3926              	.LBB1292:
 3927              	.LBB1293:
  40:Core/Inc/utils\math/vec3.h **** 
  41:Core/Inc/utils\math/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils\math/vec3.h ****                 setX(x);
  43:Core/Inc/utils\math/vec3.h ****                 setY(y);
  44:Core/Inc/utils\math/vec3.h ****                 setZ(z);
  45:Core/Inc/utils\math/vec3.h ****         }
  46:Core/Inc/utils\math/vec3.h **** 
  47:Core/Inc/utils\math/vec3.h **** 
  48:Core/Inc/utils\math/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils\math/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils\math/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils\math/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils\math/vec3.h **** 
  54:Core/Inc/utils\math/vec3.h ****                 return temp;
  55:Core/Inc/utils\math/vec3.h ****         }
  56:Core/Inc/utils\math/vec3.h **** 
  57:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  58:Core/Inc/utils\math/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils\math/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils\math/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils\math/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils\math/vec3.h **** 
  64:Core/Inc/utils\math/vec3.h ****                 return temp;
  65:Core/Inc/utils\math/vec3.h ****         }
  66:Core/Inc/utils\math/vec3.h **** 
  67:Core/Inc/utils\math/vec3.h **** 
  68:Core/Inc/utils\math/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils\math/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils\math/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils\math/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils\math/vec3.h **** 
  74:Core/Inc/utils\math/vec3.h ****                 return temp;
  75:Core/Inc/utils\math/vec3.h ****         }
  76:Core/Inc/utils\math/vec3.h **** 
  77:Core/Inc/utils\math/vec3.h ****         template <typename T1>
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 89


  78:Core/Inc/utils\math/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils\math/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils\math/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils\math/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils\math/vec3.h **** 
  84:Core/Inc/utils\math/vec3.h ****                 return temp;
  85:Core/Inc/utils\math/vec3.h ****         }
  86:Core/Inc/utils\math/vec3.h **** 
  87:Core/Inc/utils\math/vec3.h **** 
  88:Core/Inc/utils\math/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils\math/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils\math/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils\math/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils\math/vec3.h **** 
  94:Core/Inc/utils\math/vec3.h ****                 return temp;
  95:Core/Inc/utils\math/vec3.h ****         }
  96:Core/Inc/utils\math/vec3.h **** 
  97:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  98:Core/Inc/utils\math/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils\math/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils\math/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils\math/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils\math/vec3.h **** 
 104:Core/Inc/utils\math/vec3.h ****                 return temp;
 105:Core/Inc/utils\math/vec3.h ****         }
 106:Core/Inc/utils\math/vec3.h **** 
 107:Core/Inc/utils\math/vec3.h **** 
 108:Core/Inc/utils\math/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils\math/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils\math/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils\math/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils\math/vec3.h **** 
 114:Core/Inc/utils\math/vec3.h ****                 return temp;
 115:Core/Inc/utils\math/vec3.h ****         }
 116:Core/Inc/utils\math/vec3.h **** 
 117:Core/Inc/utils\math/vec3.h ****         template <typename T1>
 118:Core/Inc/utils\math/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils\math/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils\math/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils\math/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils\math/vec3.h **** 
 124:Core/Inc/utils\math/vec3.h ****                 return temp;
 125:Core/Inc/utils\math/vec3.h ****         }
 126:Core/Inc/utils\math/vec3.h **** 
 127:Core/Inc/utils\math/vec3.h ****         
 128:Core/Inc/utils\math/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils\math/vec3.h ****                 x_ = v.x_;
 3928              		.loc 4 129 0
 3929 006c 9E4D     		ldr	r5, .L212+8
 3930              	.LVL613:
 3931 006e EB69     		ldr	r3, [r5, #28]	@ float
 3932 0070 0093     		str	r3, [sp]	@ float
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 90


 130:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 3933              		.loc 4 130 0
 3934 0072 2B6A     		ldr	r3, [r5, #32]	@ float
 3935 0074 0193     		str	r3, [sp, #4]	@ float
 131:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 3936              		.loc 4 131 0
 3937 0076 6B6A     		ldr	r3, [r5, #36]	@ float
 3938 0078 0293     		str	r3, [sp, #8]	@ float
 3939              	.LVL614:
 3940              	.LBE1293:
 3941              	.LBE1292:
 3942              	.LBE1291:
 3943              	.LBB1294:
 3944              	.LBB1295:
 132:Core/Inc/utils\math/vec3.h ****         }
 133:Core/Inc/utils\math/vec3.h ****         
 134:Core/Inc/utils\math/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils\math/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils\math/vec3.h **** 
 138:Core/Inc/utils\math/vec3.h ****                 return *this;
 139:Core/Inc/utils\math/vec3.h ****         }
 140:Core/Inc/utils\math/vec3.h **** 
 141:Core/Inc/utils\math/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils\math/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils\math/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils\math/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils\math/vec3.h **** 
 146:Core/Inc/utils\math/vec3.h ****                 return *this;
 147:Core/Inc/utils\math/vec3.h ****         }
 148:Core/Inc/utils\math/vec3.h ****         
 149:Core/Inc/utils\math/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils\math/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils\math/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils\math/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils\math/vec3.h **** 
 154:Core/Inc/utils\math/vec3.h ****                 return *this;
 155:Core/Inc/utils\math/vec3.h ****         }
 156:Core/Inc/utils\math/vec3.h **** 
 157:Core/Inc/utils\math/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils\math/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils\math/vec3.h ****                 return lhs;
 160:Core/Inc/utils\math/vec3.h ****         }
 161:Core/Inc/utils\math/vec3.h **** 
 162:Core/Inc/utils\math/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils\math/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils\math/vec3.h ****                 return lhs;
 165:Core/Inc/utils\math/vec3.h ****         }
 166:Core/Inc/utils\math/vec3.h **** 
 167:Core/Inc/utils\math/vec3.h ****         void print() const {
 168:Core/Inc/utils\math/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils\math/vec3.h ****         }
 170:Core/Inc/utils\math/vec3.h **** 
 171:Core/Inc/utils\math/vec3.h **** private:
 172:Core/Inc/utils\math/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils\math/vec3.h **** 
 174:Core/Inc/utils\math/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 91


 175:Core/Inc/utils\math/vec3.h ****                 swap_Element(first.x_, second.x_);
 3945              		.loc 4 175 0
 3946 007a 6946     		mov	r1, sp
 3947 007c 06A8     		add	r0, sp, #24
 3948              	.LVL615:
 3949 007e FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 3950              	.LVL616:
 176:Core/Inc/utils\math/vec3.h ****                 swap_Element(first.y_, second.y_);
 3951              		.loc 4 176 0
 3952 0082 01A9     		add	r1, sp, #4
 3953 0084 07A8     		add	r0, sp, #28
 3954 0086 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 3955              	.LVL617:
 177:Core/Inc/utils\math/vec3.h ****                 swap_Element(first.z_, second.z_);
 3956              		.loc 4 177 0
 3957 008a 02A9     		add	r1, sp, #8
 3958 008c 08A8     		add	r0, sp, #32
 3959 008e FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 3960              	.LVL618:
 3961              	.LBE1295:
 3962              	.LBE1294:
 3963              	.LBE1290:
 3964              	.LBE1289:
 3965              	.LBB1296:
 3966              	.LBB1297:
 129:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 3967              		.loc 4 129 0
 3968 0092 95ED049A 		vldr.32	s18, [r5, #16]
 130:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 3969              		.loc 4 130 0
 3970 0096 D5ED058A 		vldr.32	s17, [r5, #20]
 131:Core/Inc/utils\math/vec3.h ****         }
 3971              		.loc 4 131 0
 3972 009a 95ED068A 		vldr.32	s16, [r5, #24]
 3973              	.LVL619:
 3974              	.LBE1297:
 3975              	.LBE1296:
 3976              	.LBB1298:
 3977              	.LBB1299:
 3978              	.LBB1300:
 150:Core/Inc/utils\math/vec3.h ****                 y_ -= rhs.y_;
 3979              		.loc 4 150 0
 3980 009e 954B     		ldr	r3, .L212+20
 3981 00a0 D3ED007A 		vldr.32	s15, [r3]
 3982 00a4 39EE679A 		vsub.f32	s18, s18, s15
 151:Core/Inc/utils\math/vec3.h ****                 z_ -= rhs.z_;
 3983              		.loc 4 151 0
 3984 00a8 D3ED017A 		vldr.32	s15, [r3, #4]
 3985 00ac 78EEE78A 		vsub.f32	s17, s17, s15
 152:Core/Inc/utils\math/vec3.h **** 
 3986              		.loc 4 152 0
 3987 00b0 D3ED027A 		vldr.32	s15, [r3, #8]
 3988 00b4 38EE678A 		vsub.f32	s16, s16, s15
 3989              	.LVL620:
 3990              	.LBE1300:
 3991              	.LBE1299:
 3992              	.LBE1298:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 92


 3993              	.LBB1301:
 3994              	.LBB1302:
 3995              	.LBB1303:
 3996              	.LBB1304:
 3997              	.LBB1305:
 129:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 3998              		.loc 4 129 0
 3999 00b8 8C4B     		ldr	r3, .L212+12
 4000 00ba 5A68     		ldr	r2, [r3, #4]	@ float
 4001 00bc 0092     		str	r2, [sp]	@ float
 130:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 4002              		.loc 4 130 0
 4003 00be 9A68     		ldr	r2, [r3, #8]	@ float
 4004 00c0 0192     		str	r2, [sp, #4]	@ float
 131:Core/Inc/utils\math/vec3.h ****         }
 4005              		.loc 4 131 0
 4006 00c2 DB68     		ldr	r3, [r3, #12]	@ float
 4007 00c4 0293     		str	r3, [sp, #8]	@ float
 4008              	.LVL621:
 4009              	.LBE1305:
 4010              	.LBE1304:
 4011              	.LBE1303:
 4012              	.LBB1306:
 4013              	.LBB1307:
 175:Core/Inc/utils\math/vec3.h ****                 swap_Element(first.y_, second.y_);
 4014              		.loc 4 175 0
 4015 00c6 6946     		mov	r1, sp
 4016 00c8 03A8     		add	r0, sp, #12
 4017              	.LVL622:
 4018 00ca FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 4019              	.LVL623:
 176:Core/Inc/utils\math/vec3.h ****                 swap_Element(first.z_, second.z_);
 4020              		.loc 4 176 0
 4021 00ce 01A9     		add	r1, sp, #4
 4022 00d0 04A8     		add	r0, sp, #16
 4023 00d2 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 4024              	.LVL624:
 4025              		.loc 4 177 0
 4026 00d6 02A9     		add	r1, sp, #8
 4027 00d8 05A8     		add	r0, sp, #20
 4028 00da FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 4029              	.LVL625:
 4030              	.LBE1307:
 4031              	.LBE1306:
 4032              	.LBE1302:
 4033              	.LBE1301:
 262:Core/Src/parts/state_sensor.cpp ****         float ay = gYAccelAlpha35.smooth(accel.getY());
 4034              		.loc 5 262 0
 4035 00de 12A9     		add	r1, sp, #72
 4036 00e0 069B     		ldr	r3, [sp, #24]	@ float
 4037 00e2 41F8243D 		str	r3, [r1, #-36]!	@ float
 4038 00e6 8448     		ldr	r0, .L212+24
 4039 00e8 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4040              	.LVL626:
 4041 00ec B0EE40DA 		vmov.f32	s26, s0
 4042              	.LVL627:
 263:Core/Src/parts/state_sensor.cpp ****         float az = gZAccelAlpha35.smooth(accel.getZ());
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 93


 4043              		.loc 5 263 0
 4044 00f0 12A9     		add	r1, sp, #72
 4045 00f2 079B     		ldr	r3, [sp, #28]	@ float
 4046 00f4 41F8203D 		str	r3, [r1, #-32]!	@ float
 4047 00f8 8048     		ldr	r0, .L212+28
 4048 00fa FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4049              	.LVL628:
 4050 00fe F0EE40BA 		vmov.f32	s23, s0
 4051              	.LVL629:
 264:Core/Src/parts/state_sensor.cpp **** 
 4052              		.loc 5 264 0
 4053 0102 12A9     		add	r1, sp, #72
 4054 0104 089B     		ldr	r3, [sp, #32]	@ float
 4055 0106 41F81C3D 		str	r3, [r1, #-28]!	@ float
 4056 010a 7D48     		ldr	r0, .L212+32
 4057 010c FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4058              	.LVL630:
 4059 0110 F0EE409A 		vmov.f32	s19, s0
 4060              	.LVL631:
 266:Core/Src/parts/state_sensor.cpp ****         float gy = gYGyroAlpha35.smooth(gyro.getY());
 4061              		.loc 5 266 0
 4062 0114 12A9     		add	r1, sp, #72
 4063 0116 19EE103A 		vmov	r3, s18
 4064 011a 41F8183D 		str	r3, [r1, #-24]!	@ float
 4065 011e 7948     		ldr	r0, .L212+36
 4066 0120 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4067              	.LVL632:
 4068 0124 B0EE40AA 		vmov.f32	s20, s0
 4069              	.LVL633:
 267:Core/Src/parts/state_sensor.cpp ****         float gz = gZGyroAlpha35.smooth(gyro.getZ());
 4070              		.loc 5 267 0
 4071 0128 12A9     		add	r1, sp, #72
 4072 012a 18EE903A 		vmov	r3, s17
 4073 012e 41F8143D 		str	r3, [r1, #-20]!	@ float
 4074 0132 7548     		ldr	r0, .L212+40
 4075 0134 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4076              	.LVL634:
 4077 0138 F0EE40DA 		vmov.f32	s27, s0
 4078              	.LVL635:
 268:Core/Src/parts/state_sensor.cpp **** 
 4079              		.loc 5 268 0
 4080 013c 12A9     		add	r1, sp, #72
 4081 013e 18EE103A 		vmov	r3, s16
 4082 0142 41F8103D 		str	r3, [r1, #-16]!	@ float
 4083 0146 7148     		ldr	r0, .L212+44
 4084 0148 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4085              	.LVL636:
 4086 014c B0EE40BA 		vmov.f32	s22, s0
 4087              	.LVL637:
 270:Core/Src/parts/state_sensor.cpp ****         float by = gYMagAlpha35.smooth(mag.getY());
 4088              		.loc 5 270 0
 4089 0150 12A9     		add	r1, sp, #72
 4090 0152 039B     		ldr	r3, [sp, #12]	@ float
 4091 0154 41F80C3D 		str	r3, [r1, #-12]!	@ float
 4092 0158 6D48     		ldr	r0, .L212+48
 4093 015a FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4094              	.LVL638:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 94


 4095 015e B0EE409A 		vmov.f32	s18, s0
 4096              	.LVL639:
 271:Core/Src/parts/state_sensor.cpp ****         float bz = gZMagAlpha35.smooth(mag.getZ());
 4097              		.loc 5 271 0
 4098 0162 12A9     		add	r1, sp, #72
 4099 0164 049B     		ldr	r3, [sp, #16]	@ float
 4100 0166 41F8083D 		str	r3, [r1, #-8]!	@ float
 4101 016a 6A48     		ldr	r0, .L212+52
 4102 016c FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4103              	.LVL640:
 4104 0170 F0EE408A 		vmov.f32	s17, s0
 4105              	.LVL641:
 272:Core/Src/parts/state_sensor.cpp ****         
 4106              		.loc 5 272 0
 4107 0174 12A9     		add	r1, sp, #72
 4108 0176 059B     		ldr	r3, [sp, #20]	@ float
 4109 0178 41F8043D 		str	r3, [r1, #-4]!	@ float
 4110 017c 6648     		ldr	r0, .L212+56
 4111 017e FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 4112              	.LVL642:
 4113 0182 B0EE408A 		vmov.f32	s16, s0
 4114              	.LVL643:
 274:Core/Src/parts/state_sensor.cpp **** 
 4115              		.loc 5 274 0
 4116 0186 F0EE690A 		vmov.f32	s1, s19
 4117 018a B0EE6B0A 		vmov.f32	s0, s23
 4118              	.LVL644:
 4119 018e FFF7FEFF 		bl	atan2f
 4120              	.LVL645:
 4121 0192 10EE100A 		vmov	r0, s0
 4122 0196 FFF7FEFF 		bl	__aeabi_f2d
 4123              	.LVL646:
 4124 019a 51A3     		adr	r3, .L212
 4125 019c D3E90023 		ldrd	r2, [r3]
 4126 01a0 FFF7FEFF 		bl	__aeabi_dmul
 4127              	.LVL647:
 4128 01a4 FFF7FEFF 		bl	__aeabi_d2f
 4129              	.LVL648:
 276:Core/Src/parts/state_sensor.cpp ****         // printf("%ld,   ", (int32_t)(roll*1000));
 4130              		.loc 5 276 0
 4131 01a8 3146     		mov	r1, r6
 4132 01aa F0EE4A0A 		vmov.f32	s1, s20
 4133 01ae 00EE100A 		vmov	s0, r0
 4134 01b2 5A48     		ldr	r0, .L212+60
 4135              	.LVL649:
 4136 01b4 FFF7FEFF 		bl	_ZN13Kalman_Filter6filterEffm
 4137              	.LVL650:
 4138 01b8 10EE107A 		vmov	r7, s0
 4139              	.LVL651:
 279:Core/Src/parts/state_sensor.cpp ****         float cos_roll = cos(roll / 57.3);
 4140              		.loc 5 279 0
 4141 01bc 10EE100A 		vmov	r0, s0
 4142 01c0 FFF7FEFF 		bl	__aeabi_f2d
 4143              	.LVL652:
 4144 01c4 46A3     		adr	r3, .L212
 4145 01c6 D3E90023 		ldrd	r2, [r3]
 4146 01ca FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 95


 4147              	.LVL653:
 4148 01ce 41EC1A0B 		vmov	d10, r0, r1
 4149              	.LVL654:
 4150 01d2 41EC100B 		vmov	d0, r0, r1
 4151 01d6 FFF7FEFF 		bl	sin
 4152              	.LVL655:
 4153 01da 51EC100B 		vmov	r0, r1, d0
 4154 01de FFF7FEFF 		bl	__aeabi_d2f
 4155              	.LVL656:
 4156 01e2 0CEE900A 		vmov	s25, r0
 4157              	.LVL657:
 280:Core/Src/parts/state_sensor.cpp ****         // Roll Compensated Pitch
 4158              		.loc 5 280 0
 4159 01e6 B0EE4A0A 		vmov.f32	s0, s20
 4160 01ea F0EE6A0A 		vmov.f32	s1, s21
 4161 01ee FFF7FEFF 		bl	cos
 4162              	.LVL658:
 4163 01f2 51EC100B 		vmov	r0, r1, d0
 4164 01f6 FFF7FEFF 		bl	__aeabi_d2f
 4165              	.LVL659:
 4166 01fa 0CEE100A 		vmov	s24, r0
 4167              	.LVL660:
 282:Core/Src/parts/state_sensor.cpp **** 
 4168              		.loc 5 282 0
 4169 01fe 6BEEAC0A 		vmul.f32	s1, s23, s25
 4170 0202 69EE8C9A 		vmul.f32	s19, s19, s24
 4171              	.LVL661:
 4172 0206 70EEA90A 		vadd.f32	s1, s1, s19
 4173 020a B1EE4D0A 		vneg.f32	s0, s26
 4174 020e FFF7FEFF 		bl	atan2f
 4175              	.LVL662:
 4176 0212 10EE100A 		vmov	r0, s0
 4177 0216 FFF7FEFF 		bl	__aeabi_f2d
 4178              	.LVL663:
 4179 021a 31A3     		adr	r3, .L212
 4180 021c D3E90023 		ldrd	r2, [r3]
 4181 0220 FFF7FEFF 		bl	__aeabi_dmul
 4182              	.LVL664:
 4183 0224 FFF7FEFF 		bl	__aeabi_d2f
 4184              	.LVL665:
 284:Core/Src/parts/state_sensor.cpp ****         // printf("%ld,   ", (int32_t)(pitch*1000));
 4185              		.loc 5 284 0
 4186 0228 3146     		mov	r1, r6
 4187 022a F0EE6D0A 		vmov.f32	s1, s27
 4188 022e 00EE100A 		vmov	s0, r0
 4189 0232 3B48     		ldr	r0, .L212+64
 4190              	.LVL666:
 4191 0234 FFF7FEFF 		bl	_ZN13Kalman_Filter6filterEffm
 4192              	.LVL667:
 4193 0238 10EE105A 		vmov	r5, s0
 4194              	.LVL668:
 287:Core/Src/parts/state_sensor.cpp ****         float cos_pitch = cos(pitch / 57.3);
 4195              		.loc 5 287 0
 4196 023c 10EE100A 		vmov	r0, s0
 4197 0240 FFF7FEFF 		bl	__aeabi_f2d
 4198              	.LVL669:
 4199 0244 26A3     		adr	r3, .L212
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 96


 4200 0246 D3E90023 		ldrd	r2, [r3]
 4201 024a FFF7FEFF 		bl	__aeabi_ddiv
 4202              	.LVL670:
 4203 024e 41EC1A0B 		vmov	d10, r0, r1
 4204 0252 41EC100B 		vmov	d0, r0, r1
 4205 0256 FFF7FEFF 		bl	sin
 4206              	.LVL671:
 4207 025a 51EC100B 		vmov	r0, r1, d0
 4208 025e FFF7FEFF 		bl	__aeabi_d2f
 4209              	.LVL672:
 4210 0262 09EE900A 		vmov	s19, r0
 4211              	.LVL673:
 288:Core/Src/parts/state_sensor.cpp ****         // Tilt Compensated Yaw
 4212              		.loc 5 288 0
 4213 0266 B0EE4A0A 		vmov.f32	s0, s20
 4214 026a F0EE6A0A 		vmov.f32	s1, s21
 4215 026e FFF7FEFF 		bl	cos
 4216              	.LVL674:
 4217 0272 51EC100B 		vmov	r0, r1, d0
 4218 0276 FFF7FEFF 		bl	__aeabi_d2f
 4219              	.LVL675:
 290:Core/Src/parts/state_sensor.cpp **** 
 4220              		.loc 5 290 0
 4221 027a 28EE2C0A 		vmul.f32	s0, s16, s25
 4222 027e 68EE8C7A 		vmul.f32	s15, s17, s24
 4223 0282 07EE100A 		vmov	s14, r0
 4224 0286 29EE079A 		vmul.f32	s18, s18, s14
 4225              	.LVL676:
 4226 028a 68EEAC8A 		vmul.f32	s17, s17, s25
 4227              	.LVL677:
 4228 028e 68EEA98A 		vmul.f32	s17, s17, s19
 4229 0292 79EE288A 		vadd.f32	s17, s18, s17
 4230 0296 28EE0C8A 		vmul.f32	s16, s16, s24
 4231              	.LVL678:
 4232 029a 28EE298A 		vmul.f32	s16, s16, s19
 4233 029e 78EE880A 		vadd.f32	s1, s17, s16
 4234 02a2 30EE670A 		vsub.f32	s0, s0, s15
 4235 02a6 FFF7FEFF 		bl	atan2f
 4236              	.LVL679:
 4237 02aa 10EE100A 		vmov	r0, s0
 4238 02ae FFF7FEFF 		bl	__aeabi_f2d
 4239              	.LVL680:
 4240 02b2 0BA3     		adr	r3, .L212
 4241 02b4 D3E90023 		ldrd	r2, [r3]
 4242 02b8 FFF7FEFF 		bl	__aeabi_dmul
 4243              	.LVL681:
 4244 02bc FFF7FEFF 		bl	__aeabi_d2f
 4245              	.LVL682:
 292:Core/Src/parts/state_sensor.cpp ****         // printf("%ld\n", (int32_t)(yaw*1000));
 4246              		.loc 5 292 0
 4247 02c0 3146     		mov	r1, r6
 4248 02c2 F0EE4B0A 		vmov.f32	s1, s22
 4249 02c6 00EE100A 		vmov	s0, r0
 4250 02ca 1648     		ldr	r0, .L212+68
 4251              	.LVL683:
 4252 02cc FFF7FEFF 		bl	_ZN13Kalman_Filter6filterEffm
 4253              	.LVL684:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 97


 4254              	.LBB1308:
 4255              	.LBB1309:
 4256              	.LBB1310:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 4257              		.loc 4 37 0
 4258 02d0 2760     		str	r7, [r4]	@ float
 4259              	.LVL685:
 4260              	.LBE1310:
 4261              	.LBE1309:
 4262              	.LBB1311:
 4263              	.LBB1312:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 4264              		.loc 4 38 0
 4265 02d2 6560     		str	r5, [r4, #4]	@ float
 4266              	.LVL686:
 4267              	.LBE1312:
 4268              	.LBE1311:
 4269              	.LBB1313:
 4270              	.LBB1314:
  39:Core/Inc/utils\math/vec3.h **** 
 4271              		.loc 4 39 0
 4272 02d4 84ED020A 		vstr.32	s0, [r4, #8]
 4273              	.LVL687:
 4274 02d8 B9E6     		b	.L203
 4275              	.L213:
 4276 02da 00BFAFF3 		.align	3
 4276      0080
 4277              	.L212:
 4278 02e0 66666666 		.word	1717986918
 4279 02e4 66A64C40 		.word	1078765158
 4280 02e8 00000000 		.word	Body_IMU
 4281 02ec 00000000 		.word	Body_HMC
 4282 02f0 000C0240 		.word	1073875968
 4283 02f4 00000000 		.word	.LANCHOR3
 4284 02f8 00000000 		.word	.LANCHOR5
 4285 02fc 00000000 		.word	.LANCHOR6
 4286 0300 00000000 		.word	.LANCHOR7
 4287 0304 00000000 		.word	.LANCHOR8
 4288 0308 00000000 		.word	.LANCHOR9
 4289 030c 00000000 		.word	.LANCHOR10
 4290 0310 00000000 		.word	.LANCHOR11
 4291 0314 00000000 		.word	.LANCHOR12
 4292 0318 00000000 		.word	.LANCHOR13
 4293 031c 00000000 		.word	.LANCHOR14
 4294 0320 00000000 		.word	.LANCHOR15
 4295 0324 00000000 		.word	.LANCHOR16
 4296              	.LBE1314:
 4297              	.LBE1313:
 4298              	.LBE1308:
 4299              		.cfi_endproc
 4300              	.LFE536:
 4302              		.section	.text._ZN12State_Sensor10read_StateE4Vec3IfEPK10State_Varsm,"ax",%progbits
 4303              		.align	1
 4304              		.global	_ZN12State_Sensor10read_StateE4Vec3IfEPK10State_Varsm
 4305              		.syntax unified
 4306              		.thumb
 4307              		.thumb_func
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 98


 4308              		.fpu fpv4-sp-d16
 4310              	_ZN12State_Sensor10read_StateE4Vec3IfEPK10State_Varsm:
 4311              	.LFB531:
 114:Core/Src/parts/state_sensor.cpp ****         Vec3<float> state;
 4312              		.loc 5 114 0
 4313              		.cfi_startproc
 4314              		@ args = 4, pretend = 0, frame = 96
 4315              		@ frame_needed = 0, uses_anonymous_args = 0
 4316              	.LVL688:
 4317 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4318              	.LCFI31:
 4319              		.cfi_def_cfa_offset 20
 4320              		.cfi_offset 4, -20
 4321              		.cfi_offset 5, -16
 4322              		.cfi_offset 6, -12
 4323              		.cfi_offset 7, -8
 4324              		.cfi_offset 14, -4
 4325 0002 9BB0     		sub	sp, sp, #108
 4326              	.LCFI32:
 4327              		.cfi_def_cfa_offset 128
 4328 0004 0446     		mov	r4, r0
 4329 0006 0E46     		mov	r6, r1
 4330 0008 1546     		mov	r5, r2
 4331 000a 1F46     		mov	r7, r3
 4332              	.LVL689:
 4333              	.LBB1371:
 4334              	.LBB1372:
 4335              	.LBB1373:
 4336              	.LBB1374:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 4337              		.loc 4 37 0
 4338 000c 0023     		movs	r3, #0
 4339              	.LVL690:
 4340 000e 0360     		str	r3, [r0]	@ float
 4341              	.LVL691:
 4342              	.LBE1374:
 4343              	.LBE1373:
 4344              	.LBB1375:
 4345              	.LBB1376:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 4346              		.loc 4 38 0
 4347 0010 4360     		str	r3, [r0, #4]	@ float
 4348              	.LVL692:
 4349              	.LBE1376:
 4350              	.LBE1375:
 4351              	.LBB1377:
 4352              	.LBB1378:
  39:Core/Inc/utils\math/vec3.h **** 
 4353              		.loc 4 39 0
 4354 0012 8360     		str	r3, [r0, #8]	@ float
 4355              	.LVL693:
 4356              	.LBE1378:
 4357              	.LBE1377:
 4358              	.LBE1372:
 4359              	.LBE1371:
 4360              	.LBB1379:
 4361              	.LBB1380:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 99


 4362              	.LBB1381:
 4363              	.LBB1382:
 4364              	.LBB1383:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 4365              		.loc 4 37 0
 4366 0014 0893     		str	r3, [sp, #32]	@ float
 4367              	.LVL694:
 4368              	.LBE1383:
 4369              	.LBE1382:
 4370              	.LBB1384:
 4371              	.LBB1385:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 4372              		.loc 4 38 0
 4373 0016 0993     		str	r3, [sp, #36]	@ float
 4374              	.LVL695:
 4375              	.LBE1385:
 4376              	.LBE1384:
 4377              	.LBE1381:
 4378              	.LBE1380:
 4379              	.LBE1379:
 4380              	.LBB1386:
 4381              	.LBB1387:
 4382              	.LBB1388:
 129:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 4383              		.loc 4 129 0
 4384 0018 1368     		ldr	r3, [r2]	@ float
 4385 001a 0B93     		str	r3, [sp, #44]	@ float
 130:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 4386              		.loc 4 130 0
 4387 001c 5368     		ldr	r3, [r2, #4]	@ float
 4388 001e 0C93     		str	r3, [sp, #48]	@ float
 131:Core/Inc/utils\math/vec3.h ****         }
 4389              		.loc 4 131 0
 4390 0020 9368     		ldr	r3, [r2, #8]	@ float
 4391 0022 0D93     		str	r3, [sp, #52]	@ float
 4392              	.LVL696:
 4393              	.LBE1388:
 4394              	.LBE1387:
 4395              	.LBE1386:
 118:Core/Src/parts/state_sensor.cpp ****         // ori.print();
 4396              		.loc 5 118 0
 4397 0024 209B     		ldr	r3, [sp, #128]
 4398 0026 0BAA     		add	r2, sp, #44
 4399              	.LVL697:
 4400 0028 05A8     		add	r0, sp, #20
 4401              	.LVL698:
 4402 002a FFF7FEFF 		bl	_ZN12State_Sensor16read_OrientationE4Vec3IfEm
 4403              	.LVL699:
 122:Core/Src/parts/state_sensor.cpp ****                 gIsFirstOrientationReading = false;
 4404              		.loc 5 122 0
 4405 002e 2D4B     		ldr	r3, .L219
 4406 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4407 0032 002B     		cmp	r3, #0
 4408 0034 3ED1     		bne	.L218
 127:Core/Src/parts/state_sensor.cpp ****         }
 4409              		.loc 5 127 0
 4410 0036 D6F800C0 		ldr	ip, [r6]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 100


 4411              	.LVL700:
 4412              	.LBB1389:
 4413              	.LBB1390:
 4414              	.LBB1391:
 4415              	.LBB1392:
 150:Core/Inc/utils\math/vec3.h ****                 y_ -= rhs.y_;
 4416              		.loc 4 150 0
 4417 003a 2B4B     		ldr	r3, .L219+4
 4418 003c 93ED007A 		vldr.32	s14, [r3]
 4419 0040 DDED057A 		vldr.32	s15, [sp, #20]
 4420 0044 77EEC77A 		vsub.f32	s15, s15, s14
 4421 0048 CDED147A 		vstr.32	s15, [sp, #80]
 151:Core/Inc/utils\math/vec3.h ****                 z_ -= rhs.z_;
 4422              		.loc 4 151 0
 4423 004c 93ED017A 		vldr.32	s14, [r3, #4]
 4424 0050 DDED067A 		vldr.32	s15, [sp, #24]
 4425 0054 77EEC77A 		vsub.f32	s15, s15, s14
 4426 0058 CDED157A 		vstr.32	s15, [sp, #84]
 152:Core/Inc/utils\math/vec3.h **** 
 4427              		.loc 4 152 0
 4428 005c 93ED027A 		vldr.32	s14, [r3, #8]
 4429 0060 DDED077A 		vldr.32	s15, [sp, #28]
 4430 0064 77EEC77A 		vsub.f32	s15, s15, s14
 4431 0068 CDED167A 		vstr.32	s15, [sp, #88]
 4432              	.LVL701:
 4433              	.LBE1392:
 4434              	.LBE1391:
 164:Core/Inc/utils\math/vec3.h ****         }
 4435              		.loc 4 164 0
 4436 006c 11AE     		add	r6, sp, #68
 4437              	.LVL702:
 4438 006e 14AB     		add	r3, sp, #80
 4439              	.LVL703:
 4440 0070 93E80700 		ldm	r3, {r0, r1, r2}
 4441 0074 86E80700 		stm	r6, {r0, r1, r2}
 4442              	.LVL704:
 4443              	.LBE1390:
 4444              	.LBE1389:
 4445              	.LBB1393:
 4446              	.LBB1394:
 4447              	.LBB1395:
 129:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 4448              		.loc 4 129 0
 4449 0078 2B68     		ldr	r3, [r5]	@ float
 4450 007a 1793     		str	r3, [sp, #92]	@ float
 130:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 4451              		.loc 4 130 0
 4452 007c 6B68     		ldr	r3, [r5, #4]	@ float
 4453 007e 1893     		str	r3, [sp, #96]	@ float
 131:Core/Inc/utils\math/vec3.h ****         }
 4454              		.loc 4 131 0
 4455 0080 AB68     		ldr	r3, [r5, #8]	@ float
 4456 0082 1993     		str	r3, [sp, #100]	@ float
 4457              	.LVL705:
 4458              	.LBE1395:
 4459              	.LBE1394:
 4460              	.LBE1393:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 101


 127:Core/Src/parts/state_sensor.cpp ****         }
 4461              		.loc 5 127 0
 4462 0084 0EAD     		add	r5, sp, #56
 4463              	.LVL706:
 4464 0086 209B     		ldr	r3, [sp, #128]
 4465 0088 0193     		str	r3, [sp, #4]
 4466 008a 0097     		str	r7, [sp]
 4467 008c 17AB     		add	r3, sp, #92
 4468 008e 3246     		mov	r2, r6
 4469 0090 6146     		mov	r1, ip
 4470 0092 2846     		mov	r0, r5
 4471 0094 FFF7FEFF 		bl	_ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm
 4472              	.LVL707:
 4473 0098 08AB     		add	r3, sp, #32
 4474 009a 95E80700 		ldm	r5, {r0, r1, r2}
 4475 009e 83E80700 		stm	r3, {r0, r1, r2}
 4476              	.L216:
 4477              	.LVL708:
 4478              	.LBB1396:
 4479              	.LBB1397:
  34:Core/Inc/utils\math/vec3.h ****         T getY() const { return y_; }
 4480              		.loc 4 34 0
 4481 00a2 089B     		ldr	r3, [sp, #32]	@ float
 4482              	.LVL709:
 4483              	.LBE1397:
 4484              	.LBE1396:
 4485              	.LBB1398:
 4486              	.LBB1399:
 4487              	.LBB1400:
  37:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 4488              		.loc 4 37 0
 4489 00a4 2360     		str	r3, [r4]	@ float
 4490              	.LVL710:
 4491              	.LBE1400:
 4492              	.LBE1399:
 4493              	.LBB1401:
 4494              	.LBB1402:
  38:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 4495              		.loc 4 38 0
 4496 00a6 099B     		ldr	r3, [sp, #36]	@ float
 4497 00a8 6360     		str	r3, [r4, #4]	@ float
 4498              	.LVL711:
 4499              	.LBE1402:
 4500              	.LBE1401:
 4501              	.LBB1403:
 4502              	.LBB1404:
  39:Core/Inc/utils\math/vec3.h **** 
 4503              		.loc 4 39 0
 4504 00aa 079B     		ldr	r3, [sp, #28]	@ float
 4505 00ac A360     		str	r3, [r4, #8]	@ float
 4506              	.LVL712:
 4507              	.LBE1404:
 4508              	.LBE1403:
 4509              	.LBE1398:
 133:Core/Src/parts/state_sensor.cpp **** 
 4510              		.loc 5 133 0
 4511 00ae 2046     		mov	r0, r4
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 102


 4512 00b0 1BB0     		add	sp, sp, #108
 4513              	.LCFI33:
 4514              		.cfi_remember_state
 4515              		.cfi_def_cfa_offset 20
 4516              		@ sp needed
 4517 00b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 4518              	.LVL713:
 4519              	.L218:
 4520              	.LCFI34:
 4521              		.cfi_restore_state
 123:Core/Src/parts/state_sensor.cpp ****                 gFirst_Orientation = ori;
 4522              		.loc 5 123 0
 4523 00b4 0B4B     		ldr	r3, .L219
 4524 00b6 0022     		movs	r2, #0
 4525 00b8 1A70     		strb	r2, [r3]
 4526              	.LVL714:
 4527              	.LBB1405:
 4528              	.LBB1406:
 4529              	.LBB1407:
 4530              	.LBB1408:
 4531              	.LBB1409:
 129:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 4532              		.loc 4 129 0
 4533 00ba 059B     		ldr	r3, [sp, #20]	@ float
 4534 00bc 0293     		str	r3, [sp, #8]	@ float
 130:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 4535              		.loc 4 130 0
 4536 00be 069B     		ldr	r3, [sp, #24]	@ float
 4537 00c0 0393     		str	r3, [sp, #12]	@ float
 131:Core/Inc/utils\math/vec3.h ****         }
 4538              		.loc 4 131 0
 4539 00c2 079B     		ldr	r3, [sp, #28]	@ float
 4540 00c4 0493     		str	r3, [sp, #16]	@ float
 4541              	.LVL715:
 4542              	.LBE1409:
 4543              	.LBE1408:
 4544              	.LBE1407:
 4545              	.LBB1410:
 4546              	.LBB1411:
 175:Core/Inc/utils\math/vec3.h ****                 swap_Element(first.y_, second.y_);
 4547              		.loc 4 175 0
 4548 00c6 084D     		ldr	r5, .L219+4
 4549              	.LVL716:
 4550 00c8 02A9     		add	r1, sp, #8
 4551              	.LVL717:
 4552 00ca 2846     		mov	r0, r5
 4553 00cc FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 4554              	.LVL718:
 176:Core/Inc/utils\math/vec3.h ****                 swap_Element(first.z_, second.z_);
 4555              		.loc 4 176 0
 4556 00d0 03A9     		add	r1, sp, #12
 4557 00d2 281D     		adds	r0, r5, #4
 4558 00d4 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 4559              	.LVL719:
 4560              		.loc 4 177 0
 4561 00d8 04A9     		add	r1, sp, #16
 4562 00da 05F10800 		add	r0, r5, #8
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 103


 4563 00de FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 4564              	.LVL720:
 4565 00e2 DEE7     		b	.L216
 4566              	.L220:
 4567              		.align	2
 4568              	.L219:
 4569 00e4 00000000 		.word	.LANCHOR17
 4570 00e8 00000000 		.word	.LANCHOR4
 4571              	.LBE1411:
 4572              	.LBE1410:
 4573              	.LBE1406:
 4574              	.LBE1405:
 4575              		.cfi_endproc
 4576              	.LFE531:
 4578              		.section	.text._GLOBAL__sub_I__ZN12State_Sensor12get_InstanceEv,"ax",%progbits
 4579              		.align	1
 4580              		.syntax unified
 4581              		.thumb
 4582              		.thumb_func
 4583              		.fpu fpv4-sp-d16
 4585              	_GLOBAL__sub_I__ZN12State_Sensor12get_InstanceEv:
 4586              	.LFB586:
 4587              		.loc 5 363 0
 4588              		.cfi_startproc
 4589              		@ args = 0, pretend = 0, frame = 0
 4590              		@ frame_needed = 0, uses_anonymous_args = 0
 4591 0000 08B5     		push	{r3, lr}
 4592              	.LCFI35:
 4593              		.cfi_def_cfa_offset 8
 4594              		.cfi_offset 3, -8
 4595              		.cfi_offset 14, -4
 4596              		.loc 5 363 0
 4597 0002 4FF6FF71 		movw	r1, #65535
 4598 0006 0120     		movs	r0, #1
 4599 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 4600              	.LVL721:
 4601 000c 08BD     		pop	{r3, pc}
 4602              		.cfi_endproc
 4603              	.LFE586:
 4605              		.section	.init_array,"aw",%init_array
 4606              		.align	2
 4607 0000 00000000 		.word	_GLOBAL__sub_I__ZN12State_Sensor12get_InstanceEv(target1)
 4608              		.section	.bss._ZGVZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance,"aw",%nobits
 4609              		.align	2
 4610              		.set	.LANCHOR1,. + 0
 4613              	_ZGVZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance:
 4614 0000 00000000 		.space	4
 4615              		.section	.bss._ZL11gAccel_Gyro,"aw",%nobits
 4616              		.align	2
 4617              		.set	.LANCHOR0,. + 0
 4620              	_ZL11gAccel_Gyro:
 4621 0000 00000000 		.space	476
 4621      00000000 
 4621      00000000 
 4621      00000000 
 4621      00000000 
 4622              		.section	.bss._ZL11gOmega_Bias,"aw",%nobits
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 104


 4623              		.align	2
 4624              		.set	.LANCHOR3,. + 0
 4627              	_ZL11gOmega_Bias:
 4628 0000 00000000 		.space	12
 4628      00000000 
 4628      00000000 
 4629              		.section	.bss._ZL11gYaw_Filter,"aw",%nobits
 4630              		.align	2
 4631              		.set	.LANCHOR16,. + 0
 4634              	_ZL11gYaw_Filter:
 4635 0000 00000000 		.space	284
 4635      00000000 
 4635      00000000 
 4635      00000000 
 4635      00000000 
 4636              		.section	.bss._ZL12gRoll_Filter,"aw",%nobits
 4637              		.align	2
 4638              		.set	.LANCHOR14,. + 0
 4641              	_ZL12gRoll_Filter:
 4642 0000 00000000 		.space	284
 4642      00000000 
 4642      00000000 
 4642      00000000 
 4642      00000000 
 4643              		.section	.bss._ZL12gXMagAlpha35,"aw",%nobits
 4644              		.align	2
 4645              		.set	.LANCHOR11,. + 0
 4648              	_ZL12gXMagAlpha35:
 4649 0000 00000000 		.space	16
 4649      00000000 
 4649      00000000 
 4649      00000000 
 4650              		.section	.bss._ZL12gYMagAlpha35,"aw",%nobits
 4651              		.align	2
 4652              		.set	.LANCHOR12,. + 0
 4655              	_ZL12gYMagAlpha35:
 4656 0000 00000000 		.space	16
 4656      00000000 
 4656      00000000 
 4656      00000000 
 4657              		.section	.bss._ZL12gZMagAlpha35,"aw",%nobits
 4658              		.align	2
 4659              		.set	.LANCHOR13,. + 0
 4662              	_ZL12gZMagAlpha35:
 4663 0000 00000000 		.space	16
 4663      00000000 
 4663      00000000 
 4663      00000000 
 4664              		.section	.bss._ZL13gPitch_Filter,"aw",%nobits
 4665              		.align	2
 4666              		.set	.LANCHOR15,. + 0
 4669              	_ZL13gPitch_Filter:
 4670 0000 00000000 		.space	284
 4670      00000000 
 4670      00000000 
 4670      00000000 
 4670      00000000 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 105


 4671              		.section	.bss._ZL13gXGyroAlpha35,"aw",%nobits
 4672              		.align	2
 4673              		.set	.LANCHOR8,. + 0
 4676              	_ZL13gXGyroAlpha35:
 4677 0000 00000000 		.space	16
 4677      00000000 
 4677      00000000 
 4677      00000000 
 4678              		.section	.bss._ZL13gYGyroAlpha35,"aw",%nobits
 4679              		.align	2
 4680              		.set	.LANCHOR9,. + 0
 4683              	_ZL13gYGyroAlpha35:
 4684 0000 00000000 		.space	16
 4684      00000000 
 4684      00000000 
 4684      00000000 
 4685              		.section	.bss._ZL13gZGyroAlpha35,"aw",%nobits
 4686              		.align	2
 4687              		.set	.LANCHOR10,. + 0
 4690              	_ZL13gZGyroAlpha35:
 4691 0000 00000000 		.space	16
 4691      00000000 
 4691      00000000 
 4691      00000000 
 4692              		.section	.bss._ZL14gXAccelAlpha35,"aw",%nobits
 4693              		.align	2
 4694              		.set	.LANCHOR5,. + 0
 4697              	_ZL14gXAccelAlpha35:
 4698 0000 00000000 		.space	16
 4698      00000000 
 4698      00000000 
 4698      00000000 
 4699              		.section	.bss._ZL14gYAccelAlpha35,"aw",%nobits
 4700              		.align	2
 4701              		.set	.LANCHOR6,. + 0
 4704              	_ZL14gYAccelAlpha35:
 4705 0000 00000000 		.space	16
 4705      00000000 
 4705      00000000 
 4705      00000000 
 4706              		.section	.bss._ZL14gZAccelAlpha35,"aw",%nobits
 4707              		.align	2
 4708              		.set	.LANCHOR7,. + 0
 4711              	_ZL14gZAccelAlpha35:
 4712 0000 00000000 		.space	16
 4712      00000000 
 4712      00000000 
 4712      00000000 
 4713              		.section	.bss._ZL18gFirst_Orientation,"aw",%nobits
 4714              		.align	2
 4715              		.set	.LANCHOR4,. + 0
 4718              	_ZL18gFirst_Orientation:
 4719 0000 00000000 		.space	12
 4719      00000000 
 4719      00000000 
 4720              		.section	.bss._ZZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance,"aw",%nobits
 4721              		.align	2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 106


 4722              		.set	.LANCHOR2,. + 0
 4725              	_ZZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance:
 4726 0000 00000000 		.space	4
 4727              		.section	.data._ZL26gIsFirstOrientationReading,"aw",%progbits
 4728              		.set	.LANCHOR17,. + 0
 4731              	_ZL26gIsFirstOrientationReading:
 4732 0000 01       		.byte	1
 4733              		.section	.rodata._Z15init_OriFiltersm.str1.4,"aMS",%progbits,1
 4734              		.align	2
 4735              	.LC0:
 4736 0000 436F7265 		.ascii	"Core/Inc/utils\\math/mat.h\000"
 4736      2F496E63 
 4736      2F757469 
 4736      6C735C6D 
 4736      6174682F 
 4737              		.text
 4738              	.Letext0:
 4739              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4740              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4741              		.file 11 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core_cm
 4742              		.file 12 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 4743              		.file 13 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 4744              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 4745              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4746              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4747              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4748              		.file 18 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 4749              		.file 19 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 4750              		.file 20 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 4751              		.file 21 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 4752              		.file 22 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 4753              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4754              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4755              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4756              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4757              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4758              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4759              		.file 29 "Core/Inc/parts/processor/robo_states.h"
 4760              		.file 30 "Core/Inc/periphs/tim.h"
 4761              		.file 31 "Core/Inc/devs/a4988.h"
 4762              		.file 32 "Core/Inc/devs/freewheel.h"
 4763              		.file 33 "Core/Inc/periphs/i2c.h"
 4764              		.file 34 "Core/Inc/devs/hmc5883.h"
 4765              		.file 35 "Core/Inc/devs/mpu6050.h"
 4766              		.file 36 "Core/Inc/utils\\math/vec2.h"
 4767              		.file 37 "Core/Inc/parts/devs_config.h"
 4768              		.file 38 "Core/Inc/sys/error.h"
 4769              		.file 39 "Core/Inc/main.h"
 4770              		.file 40 "<built-in>"
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 107


DEFINED SYMBOLS
                            *ABS*:00000000 state_sensor.cpp
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:18     .text._ZN13Kalman_FilterD2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:25     .text._ZN13Kalman_FilterD2Ev:00000000 _ZN13Kalman_FilterD2Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:25     .text._ZN13Kalman_FilterD2Ev:00000000 _ZN13Kalman_FilterD1Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:42     .text._ZN12State_SensorD2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:49     .text._ZN12State_SensorD2Ev:00000000 _ZN12State_SensorD2Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:49     .text._ZN12State_SensorD2Ev:00000000 _ZN12State_SensorD1Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:66     .text._ZN10Exp_SmoothD2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:73     .text._ZN10Exp_SmoothD2Ev:00000000 _ZN10Exp_SmoothD2Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:73     .text._ZN10Exp_SmoothD2Ev:00000000 _ZN10Exp_SmoothD1Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:90     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:97     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:97     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:114    .text._ZN11Kalman_VarsD2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:121    .text._ZN11Kalman_VarsD2Ev:00000000 _ZN11Kalman_VarsD2Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:121    .text._ZN11Kalman_VarsD2Ev:00000000 _ZN11Kalman_VarsD1Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:137    .text._Z15init_OriFiltersm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:144    .text._Z15init_OriFiltersm:00000000 _Z15init_OriFiltersm
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:710    .text._Z15init_OriFiltersm:000002ac $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:723    .text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:730    .text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:00000000 _ZN13Kalman_FilterC2EP11Kalman_VarsPFimE
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:730    .text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:00000000 _ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:789    .text._ZN13Kalman_Filter6filterEffm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:796    .text._ZN13Kalman_Filter6filterEffm:00000000 _ZN13Kalman_Filter6filterEffm
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1429   .text._ZN13Kalman_Filter6filterEffm:000002ec $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1439   .text._ZN10Exp_SmoothD0Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1446   .text._ZN10Exp_SmoothD0Ev:00000000 _ZN10Exp_SmoothD0Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1469   .text._ZN12State_Sensor12get_InstanceEv:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1476   .text._ZN12State_Sensor12get_InstanceEv:00000000 _ZN12State_Sensor12get_InstanceEv
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1525   .text._ZN12State_Sensor12get_InstanceEv:00000038 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1533   .text._ZN12State_Sensor4initEm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1540   .text._ZN12State_Sensor4initEm:00000000 _ZN12State_Sensor4initEm
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1797   .text._ZN12State_Sensor4initEm:000000d8 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1807   .text._ZN11Kalman_VarsC2Ev:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1814   .text._ZN11Kalman_VarsC2Ev:00000000 _ZN11Kalman_VarsC2Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1814   .text._ZN11Kalman_VarsC2Ev:00000000 _ZN11Kalman_VarsC1Ev
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1908   .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:1914   .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:2176   .text._Z41__static_initialization_and_destruction_0ii:00000170 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:2202   .text._ZN12State_Sensor14change_SensorsE5Field:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:2209   .text._ZN12State_Sensor14change_SensorsE5Field:00000000 _ZN12State_Sensor14change_SensorsE5Field
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:2227   .text._ZN12State_Sensor14change_SensorsE5Field:0000000c $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:2236   .text._ZN12State_Sensor14change_SensorsE5Field:0000001e $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:3044   .text._ZN12State_Sensor14change_SensorsE5Field:000002cc $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:3050   .text._ZN12State_Sensor14change_SensorsE5Field:000002d8 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:3676   .text._ZN12State_Sensor14change_SensorsE5Field:0000050c $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:3685   .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:3692   .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:3718   .text._ZN12State_Sensor16read_OrientationE4Vec3IfEm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:3725   .text._ZN12State_Sensor16read_OrientationE4Vec3IfEm:00000000 _ZN12State_Sensor16read_OrientationE4Vec3IfEm
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4278   .text._ZN12State_Sensor16read_OrientationE4Vec3IfEm:000002e0 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4303   .text._ZN12State_Sensor10read_StateE4Vec3IfEPK10State_Varsm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4310   .text._ZN12State_Sensor10read_StateE4Vec3IfEPK10State_Varsm:00000000 _ZN12State_Sensor10read_StateE4Vec3IfEPK10State_Varsm
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4569   .text._ZN12State_Sensor10read_StateE4Vec3IfEPK10State_Varsm:000000e4 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4579   .text._GLOBAL__sub_I__ZN12State_Sensor12get_InstanceEv:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4585   .text._GLOBAL__sub_I__ZN12State_Sensor12get_InstanceEv:00000000 _GLOBAL__sub_I__ZN12State_Sensor12get_InstanceEv
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 108


C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4606   .init_array:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4609   .bss._ZGVZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4613   .bss._ZGVZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance:00000000 _ZGVZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4616   .bss._ZL11gAccel_Gyro:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4620   .bss._ZL11gAccel_Gyro:00000000 _ZL11gAccel_Gyro
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4623   .bss._ZL11gOmega_Bias:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4627   .bss._ZL11gOmega_Bias:00000000 _ZL11gOmega_Bias
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4630   .bss._ZL11gYaw_Filter:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4634   .bss._ZL11gYaw_Filter:00000000 _ZL11gYaw_Filter
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4637   .bss._ZL12gRoll_Filter:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4641   .bss._ZL12gRoll_Filter:00000000 _ZL12gRoll_Filter
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4644   .bss._ZL12gXMagAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4648   .bss._ZL12gXMagAlpha35:00000000 _ZL12gXMagAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4651   .bss._ZL12gYMagAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4655   .bss._ZL12gYMagAlpha35:00000000 _ZL12gYMagAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4658   .bss._ZL12gZMagAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4662   .bss._ZL12gZMagAlpha35:00000000 _ZL12gZMagAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4665   .bss._ZL13gPitch_Filter:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4669   .bss._ZL13gPitch_Filter:00000000 _ZL13gPitch_Filter
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4672   .bss._ZL13gXGyroAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4676   .bss._ZL13gXGyroAlpha35:00000000 _ZL13gXGyroAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4679   .bss._ZL13gYGyroAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4683   .bss._ZL13gYGyroAlpha35:00000000 _ZL13gYGyroAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4686   .bss._ZL13gZGyroAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4690   .bss._ZL13gZGyroAlpha35:00000000 _ZL13gZGyroAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4693   .bss._ZL14gXAccelAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4697   .bss._ZL14gXAccelAlpha35:00000000 _ZL14gXAccelAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4700   .bss._ZL14gYAccelAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4704   .bss._ZL14gYAccelAlpha35:00000000 _ZL14gYAccelAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4707   .bss._ZL14gZAccelAlpha35:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4711   .bss._ZL14gZAccelAlpha35:00000000 _ZL14gZAccelAlpha35
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4714   .bss._ZL18gFirst_Orientation:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4718   .bss._ZL18gFirst_Orientation:00000000 _ZL18gFirst_Orientation
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4721   .bss._ZZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4725   .bss._ZZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance:00000000 _ZZN12State_Sensor12get_InstanceEvE22sState_Sensor_Instance
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4731   .data._ZL26gIsFirstOrientationReading:00000000 _ZL26gIsFirstOrientationReading
C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s:4734   .rodata._Z15init_OriFiltersm.str1.4:00000000 $d
                           .group:00000000 _ZN13Kalman_FilterD5Ev
                           .group:00000000 _ZN12State_SensorD5Ev
                           .group:00000000 _ZN10Exp_SmoothD5Ev
                           .group:00000000 _ZN4Vec3IfED5Ev
                           .group:00000000 _ZN11Kalman_VarsD5Ev
                           .group:00000000 _ZN13Kalman_FilterC5EP11Kalman_VarsPFimE
                           .group:00000000 _ZN11Kalman_VarsC5Ev

UNDEFINED SYMBOLS
_ZN3MatC1Ehh
_Error_Handler
_ZN3MatC1ERKS_
_Z4swapR3MatS0_
_ZN3Mat3eyeEh
memcpy
_ZN3MatmLERKS_
_ZN3MatpLERKS_
_ZN3Mat9transposeEv
_ZNK3Mat3invERS_
_ZN3MatmIERKS_
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccCgj4oi.s 			page 109


_ZdlPvj
_ZN14PositionSensor12get_InstanceEv
__cxa_guard_acquire
__cxa_guard_release
__aeabi_atexit
__dso_handle
_Z8IMU_Initv
_Z12Stepper_Initv
_Z11Lidars_Initv
_Z21MPU6050_Read_NormAxesP7MPU6050
_Z12HMC5883_ReadP7HMC5883
_Z5error5Error
_ZN14PositionSensor4initEm
_Z22MPU6050_Calc_OmegaBiasP7MPU6050m
Body_IMU
Body_HMC
gXEncoder
gYEncoder
gXLidar
_ZN10Exp_SmoothC1Ef
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
HAL_GPIO_WritePin
_ZN10Exp_Smooth6smoothERKf
atan2f
sin
cos
_ZN14PositionSensor13read_PositionE4Vec3IfES1_PK10State_Varsm
