ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_states.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN11Robo_StatesC2EP10State_VarsPS_,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN11Robo_StatesC2EP10State_VarsPS_
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN11Robo_StatesC2EP10State_VarsPS_:
  26              	.LFB521:
  27              		.file 1 "Core/Src/parts/processor/robo_states.cpp"
   1:Core/Src/parts/processor/robo_states.cpp **** /*
   2:Core/Src/parts/processor/robo_states.cpp ****  * robo_states.cpp
   3:Core/Src/parts/processor/robo_states.cpp ****  *
   4:Core/Src/parts/processor/robo_states.cpp ****  * Created : 1/9/2019
   5:Core/Src/parts/processor/robo_states.cpp ****  *  Author : n-is
   6:Core/Src/parts/processor/robo_states.cpp ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Src/parts/processor/robo_states.cpp ****  */
   8:Core/Src/parts/processor/robo_states.cpp **** 
   9:Core/Src/parts/processor/robo_states.cpp **** #include <math.h>
  10:Core/Src/parts/processor/robo_states.cpp **** 
  11:Core/Src/parts/processor/robo_states.cpp **** #include "robo_states.h"
  12:Core/Src/parts/processor/robo_states.cpp **** #include "devs_config.h"
  13:Core/Src/parts/processor/robo_states.cpp **** 
  14:Core/Src/parts/processor/robo_states.cpp **** #define CURVE_STEP_SIZE         (10.0)
  15:Core/Src/parts/processor/robo_states.cpp **** 
  16:Core/Src/parts/processor/robo_states.cpp **** void init_GameField();
  17:Core/Src/parts/processor/robo_states.cpp **** 
  18:Core/Src/parts/processor/robo_states.cpp **** static bool gGameField_Initiated = false;
  19:Core/Src/parts/processor/robo_states.cpp **** 
  20:Core/Src/parts/processor/robo_states.cpp **** Robo_States::Robo_States(State_Vars *sv, Robo_States *next)
  28              		.loc 1 20 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 2


  39              	.LBB182:
  21:Core/Src/parts/processor/robo_states.cpp **** {
  22:Core/Src/parts/processor/robo_states.cpp ****         sv_ = sv;
  40              		.loc 1 22 0
  41 0004 0160     		str	r1, [r0]
  23:Core/Src/parts/processor/robo_states.cpp ****         next_state_ = next;
  42              		.loc 1 23 0
  43 0006 4260     		str	r2, [r0, #4]
  24:Core/Src/parts/processor/robo_states.cpp **** 
  25:Core/Src/parts/processor/robo_states.cpp ****         if (!gGameField_Initiated) {
  44              		.loc 1 25 0
  45 0008 064B     		ldr	r3, .L5
  46 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 000c 23B1     		cbz	r3, .L4
  48              	.LVL1:
  49              	.L2:
  26:Core/Src/parts/processor/robo_states.cpp ****                 init_GameField();
  27:Core/Src/parts/processor/robo_states.cpp ****                 gGameField_Initiated = true;
  28:Core/Src/parts/processor/robo_states.cpp ****         }
  29:Core/Src/parts/processor/robo_states.cpp **** 
  30:Core/Src/parts/processor/robo_states.cpp ****         ramped_ = sv_->first_limit;
  50              		.loc 1 30 0
  51 000e 2368     		ldr	r3, [r4]
  52 0010 5B6A     		ldr	r3, [r3, #36]	@ float
  53 0012 A360     		str	r3, [r4, #8]	@ float
  54              	.LBE182:
  31:Core/Src/parts/processor/robo_states.cpp **** }
  55              		.loc 1 31 0
  56 0014 2046     		mov	r0, r4
  57 0016 10BD     		pop	{r4, pc}
  58              	.LVL2:
  59              	.L4:
  60              	.LBB183:
  26:Core/Src/parts/processor/robo_states.cpp ****                 init_GameField();
  61              		.loc 1 26 0
  62 0018 FFF7FEFF 		bl	_Z14init_GameFieldv
  63              	.LVL3:
  27:Core/Src/parts/processor/robo_states.cpp ****         }
  64              		.loc 1 27 0
  65 001c 014B     		ldr	r3, .L5
  66 001e 0122     		movs	r2, #1
  67 0020 1A70     		strb	r2, [r3]
  68 0022 F4E7     		b	.L2
  69              	.L6:
  70              		.align	2
  71              	.L5:
  72 0024 00000000 		.word	.LANCHOR0
  73              	.LBE183:
  74              		.cfi_endproc
  75              	.LFE521:
  77              		.global	_ZN11Robo_StatesC1EP10State_VarsPS_
  78              		.thumb_set _ZN11Robo_StatesC1EP10State_VarsPS_,_ZN11Robo_StatesC2EP10State_VarsPS_
  79              		.section	.text._ZN11Robo_States17calc_RoboVelocityEv,"ax",%progbits
  80              		.align	1
  81              		.global	_ZN11Robo_States17calc_RoboVelocityEv
  82              		.syntax unified
  83              		.thumb
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 3


  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	_ZN11Robo_States17calc_RoboVelocityEv:
  88              	.LFB523:
  32:Core/Src/parts/processor/robo_states.cpp **** 
  33:Core/Src/parts/processor/robo_states.cpp **** float Robo_States::calc_RoboVelocity()
  34:Core/Src/parts/processor/robo_states.cpp **** {
  89              		.loc 1 34 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL4:
  35:Core/Src/parts/processor/robo_states.cpp ****         // We are simply returning the maximum velocity of robot
  36:Core/Src/parts/processor/robo_states.cpp ****         // We can probably use position PID here to obtain better robot control
  37:Core/Src/parts/processor/robo_states.cpp **** 
  38:Core/Src/parts/processor/robo_states.cpp ****         if (ramped_ < sv_->last_limit) {
  95              		.loc 1 38 0
  96 0000 D0ED027A 		vldr.32	s15, [r0, #8]
  97 0004 0368     		ldr	r3, [r0]
  98 0006 93ED077A 		vldr.32	s14, [r3, #28]
  99 000a F4EEC77A 		vcmpe.f32	s15, s14
 100 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 101 0012 05D5     		bpl	.L8
  39:Core/Src/parts/processor/robo_states.cpp ****                 ramped_ += sv_->ramping_factor;
 102              		.loc 1 39 0
 103 0014 93ED087A 		vldr.32	s14, [r3, #32]
 104 0018 77EE877A 		vadd.f32	s15, s15, s14
 105 001c C0ED027A 		vstr.32	s15, [r0, #8]
 106              	.L8:
  40:Core/Src/parts/processor/robo_states.cpp ****         }
  41:Core/Src/parts/processor/robo_states.cpp **** 
  42:Core/Src/parts/processor/robo_states.cpp ****         if (ramped_ > 1.0) {
 107              		.loc 1 42 0
 108 0020 D0ED027A 		vldr.32	s15, [r0, #8]
 109 0024 B7EE007A 		vmov.f32	s14, #1.0e+0
 110 0028 F4EEC77A 		vcmpe.f32	s15, s14
 111 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 112 0030 0BDD     		ble	.L17
  43:Core/Src/parts/processor/robo_states.cpp ****                 ramped_ = 1;
 113              		.loc 1 43 0
 114 0032 80ED027A 		vstr.32	s14, [r0, #8]
 115              	.L12:
  44:Core/Src/parts/processor/robo_states.cpp ****         }
  45:Core/Src/parts/processor/robo_states.cpp ****         else if (ramped_ < 0) {
  46:Core/Src/parts/processor/robo_states.cpp ****                 ramped_ = 0;
  47:Core/Src/parts/processor/robo_states.cpp ****         }
  48:Core/Src/parts/processor/robo_states.cpp **** 
  49:Core/Src/parts/processor/robo_states.cpp ****         // printf("%ld : %d\n", (HAL_GetTick()), (int16_t)(ramped_*1000));
  50:Core/Src/parts/processor/robo_states.cpp ****         
  51:Core/Src/parts/processor/robo_states.cpp ****         return ramped_ * (float)(gMax_Robo_Velocity);
 116              		.loc 1 51 0
 117 0036 D0ED027A 		vldr.32	s15, [r0, #8]
 118 003a 084B     		ldr	r3, .L18
 119 003c 93ED000A 		vldr.32	s0, [r3]	@ int
 120 0040 B8EE400A 		vcvt.f32.u32	s0, s0
  52:Core/Src/parts/processor/robo_states.cpp **** }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 4


 121              		.loc 1 52 0
 122 0044 27EE800A 		vmul.f32	s0, s15, s0
 123 0048 7047     		bx	lr
 124              	.L17:
  45:Core/Src/parts/processor/robo_states.cpp ****                 ramped_ = 0;
 125              		.loc 1 45 0
 126 004a F5EEC07A 		vcmpe.f32	s15, #0
 127 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 128 0052 F0D5     		bpl	.L12
  46:Core/Src/parts/processor/robo_states.cpp ****         }
 129              		.loc 1 46 0
 130 0054 0023     		movs	r3, #0
 131 0056 8360     		str	r3, [r0, #8]	@ float
 132 0058 EDE7     		b	.L12
 133              	.L19:
 134 005a 00BF     		.align	2
 135              	.L18:
 136 005c 00000000 		.word	gMax_Robo_Velocity
 137              		.cfi_endproc
 138              	.LFE523:
 140              		.global	__aeabi_f2d
 141              		.global	__aeabi_dmul
 142              		.global	__aeabi_d2iz
 143              		.section	.text._ZN11Robo_States9quadThetaE4Vec3IfEfm,"ax",%progbits
 144              		.align	1
 145              		.global	_ZN11Robo_States9quadThetaE4Vec3IfEfm
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	_ZN11Robo_States9quadThetaE4Vec3IfEfm:
 152              	.LFB524:
  53:Core/Src/parts/processor/robo_states.cpp **** 
  54:Core/Src/parts/processor/robo_states.cpp **** float Robo_States::quadTheta(Vec3<float> state, float v, uint32_t dt_millis)
  55:Core/Src/parts/processor/robo_states.cpp **** {
 153              		.loc 1 55 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 256
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              	.LVL5:
 158 0000 10B5     		push	{r4, lr}
 159              	.LCFI1:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163 0002 2DED088B 		vpush.64	{d8, d9, d10, d11}
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 40
 166              		.cfi_offset 80, -40
 167              		.cfi_offset 81, -36
 168              		.cfi_offset 82, -32
 169              		.cfi_offset 83, -28
 170              		.cfi_offset 84, -24
 171              		.cfi_offset 85, -20
 172              		.cfi_offset 86, -16
 173              		.cfi_offset 87, -12
 174 0006 C0B0     		sub	sp, sp, #256
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 5


 175              	.LCFI3:
 176              		.cfi_def_cfa_offset 296
 177 0008 F0EE408A 		vmov.f32	s17, s0
 178 000c 08EE102A 		vmov	s16, r2	@ int
 179              	.LVL6:
 180              	.LBB230:
 181              	.LBB231:
 182              		.file 2 "Core/Inc/utils\\math/vec3.h"
   1:Core/Inc/utils\math/vec3.h **** /*
   2:Core/Inc/utils\math/vec3.h ****  * vec3.h
   3:Core/Inc/utils\math/vec3.h ****  * 
   4:Core/Inc/utils\math/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils\math/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils\math/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\math/vec3.h ****  */
   8:Core/Inc/utils\math/vec3.h **** 
   9:Core/Inc/utils\math/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils\math/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils\math/vec3.h **** 
  12:Core/Inc/utils\math/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils\math/vec3.h **** #include "main.h"
  14:Core/Inc/utils\math/vec3.h **** 
  15:Core/Inc/utils\math/vec3.h **** template <typename T>
  16:Core/Inc/utils\math/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils\math/vec3.h **** {
  18:Core/Inc/utils\math/vec3.h ****         T temp = first;
  19:Core/Inc/utils\math/vec3.h ****         first = second;
  20:Core/Inc/utils\math/vec3.h ****         second = temp;
  21:Core/Inc/utils\math/vec3.h **** }
  22:Core/Inc/utils\math/vec3.h **** 
  23:Core/Inc/utils\math/vec3.h **** template <class T>
  24:Core/Inc/utils\math/vec3.h **** class Vec3
  25:Core/Inc/utils\math/vec3.h **** {
  26:Core/Inc/utils\math/vec3.h **** public:
  27:Core/Inc/utils\math/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils\math/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils\math/vec3.h **** 
  30:Core/Inc/utils\math/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils\math/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils\math/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils\math/vec3.h **** 
  34:Core/Inc/utils\math/vec3.h ****         T getX() const { return x_; }
 183              		.loc 2 34 0
 184 0010 91ED00AA 		vldr.32	s20, [r1]
 185              	.LVL7:
 186              	.LBE231:
 187              	.LBE230:
 188              	.LBB232:
 189              	.LBB233:
  35:Core/Inc/utils\math/vec3.h ****         T getY() const { return y_; }
 190              		.loc 2 35 0
 191 0014 D1ED019A 		vldr.32	s19, [r1, #4]
 192              	.LVL8:
 193              	.LBE233:
 194              	.LBE232:
  56:Core/Src/parts/processor/robo_states.cpp ****         float x1 = state.getX();
  57:Core/Src/parts/processor/robo_states.cpp ****         float y1 = state.getY();
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 6


  58:Core/Src/parts/processor/robo_states.cpp ****         Vec2<float> p2 = next_state_->sv_->centre;
 195              		.loc 1 58 0
 196 0018 4368     		ldr	r3, [r0, #4]
 197 001a 1A68     		ldr	r2, [r3]
 198              	.LVL9:
 199              	.LBB234:
 200              	.LBB235:
 201              		.file 3 "Core/Inc/utils\\math/vec2.h"
   1:Core/Inc/utils\math/vec2.h **** /*
   2:Core/Inc/utils\math/vec2.h ****  * vec2.h
   3:Core/Inc/utils\math/vec2.h ****  * 
   4:Core/Inc/utils\math/vec2.h ****  * Created : 1/9/2018
   5:Core/Inc/utils\math/vec2.h ****  *  Author : n-is
   6:Core/Inc/utils\math/vec2.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\math/vec2.h ****  */
   8:Core/Inc/utils\math/vec2.h **** 
   9:Core/Inc/utils\math/vec2.h **** #ifndef _VEC2_H_
  10:Core/Inc/utils\math/vec2.h **** #define _VEC2_H_
  11:Core/Inc/utils\math/vec2.h **** 
  12:Core/Inc/utils\math/vec2.h **** #include "vec3.h"
  13:Core/Inc/utils\math/vec2.h **** 
  14:Core/Inc/utils\math/vec2.h **** template <class T>
  15:Core/Inc/utils\math/vec2.h **** class Vec2
  16:Core/Inc/utils\math/vec2.h **** {
  17:Core/Inc/utils\math/vec2.h **** public:
  18:Core/Inc/utils\math/vec2.h ****         Vec2() { set_Values(0,0); }
  19:Core/Inc/utils\math/vec2.h ****         Vec2(T x, T y) { set_Values(x,y); }
  20:Core/Inc/utils\math/vec2.h **** 
  21:Core/Inc/utils\math/vec2.h ****         Vec2(Vec3<T> v) { set_Values(v.getX(), v.getY()) ;}
  22:Core/Inc/utils\math/vec2.h **** 
  23:Core/Inc/utils\math/vec2.h ****         Vec2(Vec2 &&) = default;
  24:Core/Inc/utils\math/vec2.h ****         Vec2 &operator=(Vec2 &&) = default;
  25:Core/Inc/utils\math/vec2.h ****         ~Vec2() { }
  26:Core/Inc/utils\math/vec2.h **** 
  27:Core/Inc/utils\math/vec2.h ****         T getX() const { return x_; }
  28:Core/Inc/utils\math/vec2.h ****         T getY() const { return y_; }
  29:Core/Inc/utils\math/vec2.h ****         void setX(T x) { x_ = x; }
  30:Core/Inc/utils\math/vec2.h ****         void setY(T y) { y_ = y; }
  31:Core/Inc/utils\math/vec2.h **** 
  32:Core/Inc/utils\math/vec2.h ****         void set_Values(T x, T y) {
  33:Core/Inc/utils\math/vec2.h ****                 setX(x);
  34:Core/Inc/utils\math/vec2.h ****                 setY(y);
  35:Core/Inc/utils\math/vec2.h ****         }
  36:Core/Inc/utils\math/vec2.h **** 
  37:Core/Inc/utils\math/vec2.h **** 
  38:Core/Inc/utils\math/vec2.h ****         Vec2 mult_EW(float num) {
  39:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(*this);
  40:Core/Inc/utils\math/vec2.h ****                 temp.x_ *= num;
  41:Core/Inc/utils\math/vec2.h ****                 temp.y_ *= num;
  42:Core/Inc/utils\math/vec2.h **** 
  43:Core/Inc/utils\math/vec2.h ****                 return temp;
  44:Core/Inc/utils\math/vec2.h ****         }
  45:Core/Inc/utils\math/vec2.h **** 
  46:Core/Inc/utils\math/vec2.h ****         template <typename T1>
  47:Core/Inc/utils\math/vec2.h ****         Vec2 mult_EW(Vec2<T1> v) {
  48:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(v);
  49:Core/Inc/utils\math/vec2.h ****                 temp.x_ *= x_;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 7


  50:Core/Inc/utils\math/vec2.h ****                 temp.y_ *= y_;
  51:Core/Inc/utils\math/vec2.h **** 
  52:Core/Inc/utils\math/vec2.h ****                 return temp;
  53:Core/Inc/utils\math/vec2.h ****         }
  54:Core/Inc/utils\math/vec2.h **** 
  55:Core/Inc/utils\math/vec2.h **** 
  56:Core/Inc/utils\math/vec2.h ****         Vec2 add_EW(float num) {
  57:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(*this);
  58:Core/Inc/utils\math/vec2.h ****                 temp.x_ += num;
  59:Core/Inc/utils\math/vec2.h ****                 temp.y_ += num;
  60:Core/Inc/utils\math/vec2.h **** 
  61:Core/Inc/utils\math/vec2.h ****                 return temp;
  62:Core/Inc/utils\math/vec2.h ****         }
  63:Core/Inc/utils\math/vec2.h **** 
  64:Core/Inc/utils\math/vec2.h ****         template <typename T1>
  65:Core/Inc/utils\math/vec2.h ****         Vec2 add_EW(Vec2<T1> v) {
  66:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(v);
  67:Core/Inc/utils\math/vec2.h ****                 temp.x_ += x_;
  68:Core/Inc/utils\math/vec2.h ****                 temp.y_ += y_;
  69:Core/Inc/utils\math/vec2.h **** 
  70:Core/Inc/utils\math/vec2.h ****                 return temp;
  71:Core/Inc/utils\math/vec2.h ****         }
  72:Core/Inc/utils\math/vec2.h **** 
  73:Core/Inc/utils\math/vec2.h **** 
  74:Core/Inc/utils\math/vec2.h ****         Vec2 sub_EW(float num) {
  75:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(*this);
  76:Core/Inc/utils\math/vec2.h ****                 temp.x_ -= num;
  77:Core/Inc/utils\math/vec2.h ****                 temp.y_ -= num;
  78:Core/Inc/utils\math/vec2.h **** 
  79:Core/Inc/utils\math/vec2.h ****                 return temp;
  80:Core/Inc/utils\math/vec2.h ****         }
  81:Core/Inc/utils\math/vec2.h **** 
  82:Core/Inc/utils\math/vec2.h ****         template <typename T1>
  83:Core/Inc/utils\math/vec2.h ****         Vec2 sub_EW(Vec2<T1> v) {
  84:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(v);
  85:Core/Inc/utils\math/vec2.h ****                 temp.x_ -= x_;
  86:Core/Inc/utils\math/vec2.h ****                 temp.y_ -= y_;
  87:Core/Inc/utils\math/vec2.h **** 
  88:Core/Inc/utils\math/vec2.h ****                 return temp;
  89:Core/Inc/utils\math/vec2.h ****         }
  90:Core/Inc/utils\math/vec2.h **** 
  91:Core/Inc/utils\math/vec2.h **** 
  92:Core/Inc/utils\math/vec2.h ****         Vec2 div_EW(float num) {
  93:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(*this);
  94:Core/Inc/utils\math/vec2.h ****                 temp.x_ /= (float)num;
  95:Core/Inc/utils\math/vec2.h ****                 temp.y_ /= (float)num;
  96:Core/Inc/utils\math/vec2.h **** 
  97:Core/Inc/utils\math/vec2.h ****                 return temp;
  98:Core/Inc/utils\math/vec2.h ****         }
  99:Core/Inc/utils\math/vec2.h **** 
 100:Core/Inc/utils\math/vec2.h ****         template <typename T1>
 101:Core/Inc/utils\math/vec2.h ****         Vec2 div_EW(Vec2<T1> v) {
 102:Core/Inc/utils\math/vec2.h ****                 Vec2 temp(*this);
 103:Core/Inc/utils\math/vec2.h ****                 temp.x_ /= (float)v.x_;
 104:Core/Inc/utils\math/vec2.h ****                 temp.y_ /= (float)v.y_;
 105:Core/Inc/utils\math/vec2.h **** 
 106:Core/Inc/utils\math/vec2.h ****                 return temp;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 8


 107:Core/Inc/utils\math/vec2.h ****         }
 108:Core/Inc/utils\math/vec2.h **** 
 109:Core/Inc/utils\math/vec2.h ****         
 110:Core/Inc/utils\math/vec2.h ****         Vec2(const Vec2 &v) {
 111:Core/Inc/utils\math/vec2.h ****                 x_ = v.x_;
 202              		.loc 3 111 0
 203 001c 5168     		ldr	r1, [r2, #4]	@ float
 204              	.LVL10:
 112:Core/Inc/utils\math/vec2.h ****                 y_ = v.y_;
 205              		.loc 3 112 0
 206 001e 92ED027A 		vldr.32	s14, [r2, #8]
 207              	.LVL11:
 208              	.LBE235:
 209              	.LBE234:
  59:Core/Src/parts/processor/robo_states.cpp ****         Vec2<float> p3 = next_state_->next_state_->sv_->centre;
 210              		.loc 1 59 0
 211 0022 5B68     		ldr	r3, [r3, #4]
 212 0024 1B68     		ldr	r3, [r3]
 213              	.LVL12:
 214              	.LBB236:
 215              	.LBB237:
 111:Core/Inc/utils\math/vec2.h ****                 y_ = v.y_;
 216              		.loc 3 111 0
 217 0026 5A68     		ldr	r2, [r3, #4]	@ float
 218              		.loc 3 112 0
 219 0028 D3ED027A 		vldr.32	s15, [r3, #8]
 220              	.LVL13:
 221              	.LBE237:
 222              	.LBE236:
 223              	.LBB238:
 224              	.LBB239:
 225              	.LBB240:
 226              	.LBB241:
 227              	.LBB242:
  36:Core/Inc/utils\math/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils\math/vec3.h ****         void setX(T x) { x_ = x; }
 228              		.loc 2 37 0
 229 002c 8DED3DAA 		vstr.32	s20, [sp, #244]
 230              	.LVL14:
 231              	.LBE242:
 232              	.LBE241:
 233              	.LBB243:
 234              	.LBB244:
  38:Core/Inc/utils\math/vec3.h ****         void setY(T y) { y_ = y; }
 235              		.loc 2 38 0
 236 0030 3E91     		str	r1, [sp, #248]	@ float
 237              	.LVL15:
 238              	.LBE244:
 239              	.LBE243:
 240              	.LBB245:
 241              	.LBB246:
  39:Core/Inc/utils\math/vec3.h ****         void setZ(T z) { z_ = z; }
 242              		.loc 2 39 0
 243 0032 3F92     		str	r2, [sp, #252]	@ float
 244              	.LVL16:
 245              	.LBE246:
 246              	.LBE245:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 9


 247              	.LBE240:
 248              	.LBE239:
 249              	.LBE238:
  60:Core/Src/parts/processor/robo_states.cpp ****         float x2 = p2.getX();
  61:Core/Src/parts/processor/robo_states.cpp ****         float y2 = p2.getY();
  62:Core/Src/parts/processor/robo_states.cpp ****         float x3 = p3.getX();
  63:Core/Src/parts/processor/robo_states.cpp ****         float y3 = p3.getY();
  64:Core/Src/parts/processor/robo_states.cpp **** 
  65:Core/Src/parts/processor/robo_states.cpp ****         Vec3<float> X(x1, x2, x3);
  66:Core/Src/parts/processor/robo_states.cpp **** 
  67:Core/Src/parts/processor/robo_states.cpp ****         float Vandermonde[3][3] = {{ y1*y1, y1, 1 },
 250              		.loc 1 67 0
 251 0034 4FF07E53 		mov	r3, #1065353216
 252 0038 3693     		str	r3, [sp, #216]	@ float
 253 003a 3993     		str	r3, [sp, #228]	@ float
 254 003c 3C93     		str	r3, [sp, #240]	@ float
 255 003e 69EEA96A 		vmul.f32	s13, s19, s19
  68:Core/Src/parts/processor/robo_states.cpp ****                                    { y2*y2, y2, 1 },
  69:Core/Src/parts/processor/robo_states.cpp ****                                    { y3*y3, y3, 1 } };
 256              		.loc 1 69 0
 257 0042 CDED346A 		vstr.32	s13, [sp, #208]
 258 0046 CDED359A 		vstr.32	s19, [sp, #212]
  68:Core/Src/parts/processor/robo_states.cpp ****                                    { y2*y2, y2, 1 },
 259              		.loc 1 68 0
 260 004a 67EE076A 		vmul.f32	s13, s14, s14
 261              		.loc 1 69 0
 262 004e CDED376A 		vstr.32	s13, [sp, #220]
 263 0052 8DED387A 		vstr.32	s14, [sp, #224]
 264 0056 27EEA77A 		vmul.f32	s14, s15, s15
 265 005a 8DED3A7A 		vstr.32	s14, [sp, #232]
 266 005e CDED3B7A 		vstr.32	s15, [sp, #236]
 267              	.LVL17:
 268              	.LBB247:
 269              	.LBB248:
 270              	.LBB249:
 271              		.file 4 "Core/Inc/utils\\math/mat.h"
   1:Core/Inc/utils\math/mat.h **** /*
   2:Core/Inc/utils\math/mat.h ****  * mat.h
   3:Core/Inc/utils\math/mat.h ****  * 
   4:Core/Inc/utils\math/mat.h ****  * Created : 12/31/2018
   5:Core/Inc/utils\math/mat.h ****  *  Author : n-is
   6:Core/Inc/utils\math/mat.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils\math/mat.h ****  */
   8:Core/Inc/utils\math/mat.h **** 
   9:Core/Inc/utils\math/mat.h **** #ifndef _MAT_H_
  10:Core/Inc/utils\math/mat.h **** #define _MAT_H_
  11:Core/Inc/utils\math/mat.h **** 
  12:Core/Inc/utils\math/mat.h **** #include <math.h>
  13:Core/Inc/utils\math/mat.h **** #include "vec3.h"
  14:Core/Inc/utils\math/mat.h **** 
  15:Core/Inc/utils\math/mat.h **** #define MAX_MATRIX_ROWS         4
  16:Core/Inc/utils\math/mat.h **** #define MAX_MATRIX_COLS         4
  17:Core/Inc/utils\math/mat.h **** 
  18:Core/Inc/utils\math/mat.h **** class Mat
  19:Core/Inc/utils\math/mat.h **** {
  20:Core/Inc/utils\math/mat.h **** public:
  21:Core/Inc/utils\math/mat.h ****         Mat() : Mat(0,0) { }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 10


  22:Core/Inc/utils\math/mat.h ****         
  23:Core/Inc/utils\math/mat.h ****         template <size_t M, size_t N>
  24:Core/Inc/utils\math/mat.h ****         Mat(const float (&mat)[M][N]) : Mat(M,N){
 272              		.loc 4 24 0
 273 0062 0322     		movs	r2, #3
 274 0064 1146     		mov	r1, r2
 275 0066 23A8     		add	r0, sp, #140
 276              	.LVL18:
 277 0068 FFF7FEFF 		bl	_ZN3MatC1Ehh
 278              	.LVL19:
 279              	.LBB250:
 280              	.LBB251:
  25:Core/Inc/utils\math/mat.h ****                 fill(mat);
  26:Core/Inc/utils\math/mat.h ****         }
  27:Core/Inc/utils\math/mat.h **** 
  28:Core/Inc/utils\math/mat.h ****         Mat(uint8_t rows, uint8_t columns);
  29:Core/Inc/utils\math/mat.h ****         Mat(Mat &&) = default;
  30:Core/Inc/utils\math/mat.h ****         Mat &operator=(Mat &&) = default;
  31:Core/Inc/utils\math/mat.h ****         ~Mat() { }
  32:Core/Inc/utils\math/mat.h **** 
  33:Core/Inc/utils\math/mat.h ****         uint8_t rows() const { return rows_; }
  34:Core/Inc/utils\math/mat.h ****         uint8_t cols() const { return cols_; }
  35:Core/Inc/utils\math/mat.h **** 
  36:Core/Inc/utils\math/mat.h ****         inline float &at(uint8_t i, uint8_t j) {
  37:Core/Inc/utils\math/mat.h ****                 if (!(i < rows_ && j < cols_)) {
  38:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
  39:Core/Inc/utils\math/mat.h ****                 }
  40:Core/Inc/utils\math/mat.h ****                 return matrix_[i][j];
  41:Core/Inc/utils\math/mat.h ****         }
  42:Core/Inc/utils\math/mat.h **** 
  43:Core/Inc/utils\math/mat.h **** 
  44:Core/Inc/utils\math/mat.h ****         Mat(const Mat &m);
  45:Core/Inc/utils\math/mat.h **** 
  46:Core/Inc/utils\math/mat.h ****         Mat &operator=(const Mat &m) {
  47:Core/Inc/utils\math/mat.h ****                 Mat temp(m);
  48:Core/Inc/utils\math/mat.h ****                 swap(*this, temp);
  49:Core/Inc/utils\math/mat.h **** 
  50:Core/Inc/utils\math/mat.h ****                 return *this;
  51:Core/Inc/utils\math/mat.h ****         }
  52:Core/Inc/utils\math/mat.h **** 
  53:Core/Inc/utils\math/mat.h ****         Mat &operator+=(const Mat &rhs);
  54:Core/Inc/utils\math/mat.h ****         Mat &operator-=(const Mat &rhs);
  55:Core/Inc/utils\math/mat.h ****         Mat &operator*=(const Mat &rhs);
  56:Core/Inc/utils\math/mat.h ****         Mat &operator*=(const Vec3<float> &rhs);
  57:Core/Inc/utils\math/mat.h **** 
  58:Core/Inc/utils\math/mat.h ****         friend Mat operator+(Mat lhs, const Mat &rhs) {
  59:Core/Inc/utils\math/mat.h ****                 lhs += rhs;
  60:Core/Inc/utils\math/mat.h ****                 return lhs;
  61:Core/Inc/utils\math/mat.h ****         }
  62:Core/Inc/utils\math/mat.h **** 
  63:Core/Inc/utils\math/mat.h ****         friend Mat operator-(Mat lhs, const Mat &rhs) {
  64:Core/Inc/utils\math/mat.h ****                 lhs -= rhs;
  65:Core/Inc/utils\math/mat.h ****                 return lhs;
  66:Core/Inc/utils\math/mat.h ****         }
  67:Core/Inc/utils\math/mat.h **** 
  68:Core/Inc/utils\math/mat.h ****         friend Mat operator*(Mat lhs, const Mat &rhs) {
  69:Core/Inc/utils\math/mat.h ****                 lhs *= rhs;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 11


  70:Core/Inc/utils\math/mat.h ****                 return lhs;
  71:Core/Inc/utils\math/mat.h ****         }
  72:Core/Inc/utils\math/mat.h **** 
  73:Core/Inc/utils\math/mat.h ****         friend Mat operator*(Mat lhs, const Vec3<float> &rhs) {
  74:Core/Inc/utils\math/mat.h ****                 lhs *= rhs;
  75:Core/Inc/utils\math/mat.h ****                 return lhs;
  76:Core/Inc/utils\math/mat.h ****         }
  77:Core/Inc/utils\math/mat.h **** 
  78:Core/Inc/utils\math/mat.h ****         Mat mult(const Mat &m);
  79:Core/Inc/utils\math/mat.h ****         Mat mult_EW(float num);
  80:Core/Inc/utils\math/mat.h ****         Mat transpose();
  81:Core/Inc/utils\math/mat.h **** 
  82:Core/Inc/utils\math/mat.h ****         // Just an alias for getting transpose of a matrix
  83:Core/Inc/utils\math/mat.h ****         inline Mat trans() { return transpose(); }
  84:Core/Inc/utils\math/mat.h **** 
  85:Core/Inc/utils\math/mat.h ****         void fill(float num) {
  86:Core/Inc/utils\math/mat.h ****                 for (uint8_t i = 0; i < rows_; ++i) {
  87:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
  88:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
  89:Core/Inc/utils\math/mat.h ****                         }
  90:Core/Inc/utils\math/mat.h ****                 }
  91:Core/Inc/utils\math/mat.h ****         }
  92:Core/Inc/utils\math/mat.h **** 
  93:Core/Inc/utils\math/mat.h ****         template <size_t M, size_t N>
  94:Core/Inc/utils\math/mat.h ****         void fill(const float (&mat)[M][N]) {
  95:Core/Inc/utils\math/mat.h ****                 if (M != rows_ && N != cols_) {
 281              		.loc 4 95 0
 282 006c 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 283 0070 032B     		cmp	r3, #3
 284 0072 03D0     		beq	.L21
 285 0074 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 286 0078 032B     		cmp	r3, #3
 287 007a 01D1     		bne	.L42
 288              	.L21:
 289              	.LBE251:
 290              	.LBE250:
 291              	.LBE249:
 292              	.LBE248:
 293              	.LBE247:
  55:Core/Src/parts/processor/robo_states.cpp ****         float x1 = state.getX();
 294              		.loc 1 55 0
 295 007c 0021     		movs	r1, #0
 296 007e 06E0     		b	.L25
 297              	.L42:
 298              	.LBB258:
 299              	.LBB257:
 300              	.LBB256:
 301              	.LBB255:
 302              	.LBB254:
  96:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 303              		.loc 4 96 0
 304 0080 6021     		movs	r1, #96
 305 0082 5F48     		ldr	r0, .L43+8
 306 0084 FFF7FEFF 		bl	_Error_Handler
 307              	.LVL20:
 308 0088 F8E7     		b	.L21
 309              	.LVL21:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 12


 310              	.L23:
 311              	.LBB252:
  97:Core/Inc/utils\math/mat.h ****                 }
  98:Core/Inc/utils\math/mat.h ****                 for (uint8_t i = 0; i < M; ++i) {
 312              		.loc 4 98 0
 313 008a 0131     		adds	r1, r1, #1
 314              	.LVL22:
 315 008c C9B2     		uxtb	r1, r1
 316              	.LVL23:
 317              	.L25:
 318 008e 0229     		cmp	r1, #2
 319 0090 14D8     		bhi	.L22
 320              	.LBB253:
  99:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < N; ++j) {
 321              		.loc 4 99 0
 322 0092 0023     		movs	r3, #0
 323              	.L24:
 324              	.LVL24:
 325 0094 022B     		cmp	r3, #2
 326 0096 F8D8     		bhi	.L23
 100:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = mat[i][j];
 327              		.loc 4 100 0
 328 0098 01EB4102 		add	r2, r1, r1, lsl #1
 329 009c 1A44     		add	r2, r2, r3
 330 009e 40A8     		add	r0, sp, #256
 331 00a0 00EB8202 		add	r2, r0, r2, lsl #2
 332 00a4 52F8300C 		ldr	r0, [r2, #-48]	@ float
 333 00a8 03EB8102 		add	r2, r3, r1, lsl #2
 334 00ac 40AC     		add	r4, sp, #256
 335 00ae 04EB8202 		add	r2, r4, r2, lsl #2
 336 00b2 42F8740C 		str	r0, [r2, #-116]	@ float
  99:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < N; ++j) {
 337              		.loc 4 99 0
 338 00b6 0133     		adds	r3, r3, #1
 339              	.LVL25:
 340 00b8 DBB2     		uxtb	r3, r3
 341              	.LVL26:
 342 00ba EBE7     		b	.L24
 343              	.LVL27:
 344              	.L22:
 345              	.LBE253:
 346              	.LBE252:
 347              	.LBE254:
 348              	.LBE255:
 349              	.LBE256:
 350              	.LBE257:
 351              	.LBE258:
 352              	.LBB259:
 353              	.LBB260:
 101:Core/Inc/utils\math/mat.h ****                         }
 102:Core/Inc/utils\math/mat.h ****                 }
 103:Core/Inc/utils\math/mat.h ****         }
 104:Core/Inc/utils\math/mat.h **** 
 105:Core/Inc/utils\math/mat.h ****         void add_Rows(uint8_t r) {
 106:Core/Inc/utils\math/mat.h ****                 if (r + rows_ <= MAX_MATRIX_ROWS) {
 107:Core/Inc/utils\math/mat.h ****                         rows_ += r;
 108:Core/Inc/utils\math/mat.h ****                 }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 13


 109:Core/Inc/utils\math/mat.h ****         }
 110:Core/Inc/utils\math/mat.h **** 
 111:Core/Inc/utils\math/mat.h ****         void add_Cols(uint8_t c) {
 112:Core/Inc/utils\math/mat.h ****                 if (c + cols_ <= MAX_MATRIX_COLS) {
 113:Core/Inc/utils\math/mat.h ****                         cols_ += c;
 114:Core/Inc/utils\math/mat.h ****                 }
 115:Core/Inc/utils\math/mat.h ****         }
 116:Core/Inc/utils\math/mat.h **** 
 117:Core/Inc/utils\math/mat.h ****         static Mat eye(uint8_t n);
 118:Core/Inc/utils\math/mat.h **** 
 119:Core/Inc/utils\math/mat.h ****         bool is_Zero() const;
 120:Core/Inc/utils\math/mat.h ****         void swap_Rows(uint8_t a, uint8_t b);
 121:Core/Inc/utils\math/mat.h ****         void swap_Cols(size_t a, size_t b);        
 122:Core/Inc/utils\math/mat.h ****         bool inv(Mat &inv) const;
 123:Core/Inc/utils\math/mat.h **** 
 124:Core/Inc/utils\math/mat.h ****         Mat inv() const
 125:Core/Inc/utils\math/mat.h ****         {
 126:Core/Inc/utils\math/mat.h ****                 Mat i(rows_, cols_);
 354              		.loc 4 126 0
 355 00bc 9DF8CD20 		ldrb	r2, [sp, #205]	@ zero_extendqisi2
 356 00c0 9DF8CC10 		ldrb	r1, [sp, #204]	@ zero_extendqisi2
 357 00c4 01A8     		add	r0, sp, #4
 358 00c6 FFF7FEFF 		bl	_ZN3MatC1Ehh
 359              	.LVL28:
 127:Core/Inc/utils\math/mat.h ****                 if(inv(i)) {
 360              		.loc 4 127 0
 361 00ca 01A9     		add	r1, sp, #4
 362 00cc 23A8     		add	r0, sp, #140
 363              	.LVL29:
 364 00ce FFF7FEFF 		bl	_ZNK3Mat3invERS_
 365              	.LVL30:
 366 00d2 C0B1     		cbz	r0, .L29
 367              	.L26:
 368              	.LVL31:
 369              	.LBE260:
 370              	.LBE259:
 371              	.LBB265:
 372              	.LBB266:
  74:Core/Inc/utils\math/mat.h ****                 return lhs;
 373              		.loc 4 74 0
 374 00d4 3DA9     		add	r1, sp, #244
 375              	.LVL32:
 376 00d6 01A8     		add	r0, sp, #4
 377              	.LVL33:
 378 00d8 FFF7FEFF 		bl	_ZN3MatmLERK4Vec3IfE
 379              	.LVL34:
  75:Core/Inc/utils\math/mat.h ****         }
 380              		.loc 4 75 0
 381 00dc 12AC     		add	r4, sp, #72
 382 00de 4422     		movs	r2, #68
 383 00e0 01A9     		add	r1, sp, #4
 384              	.LVL35:
 385 00e2 2046     		mov	r0, r4
 386 00e4 FFF7FEFF 		bl	memcpy
 387              	.LVL36:
 388              	.LBE266:
 389              	.LBE265:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 14


  70:Core/Src/parts/processor/robo_states.cpp **** 
  71:Core/Src/parts/processor/robo_states.cpp ****         Mat V(Vandermonde);
  72:Core/Src/parts/processor/robo_states.cpp ****         Mat coeffs = V.inv() * X;
  73:Core/Src/parts/processor/robo_states.cpp **** 
  74:Core/Src/parts/processor/robo_states.cpp ****         auto P = [&](float x) {
  75:Core/Src/parts/processor/robo_states.cpp ****                 float a = coeffs.at(0,0);
  76:Core/Src/parts/processor/robo_states.cpp ****                 float b = coeffs.at(1,0);
  77:Core/Src/parts/processor/robo_states.cpp ****                 float c = coeffs.at(2,0);
  78:Core/Src/parts/processor/robo_states.cpp **** 
  79:Core/Src/parts/processor/robo_states.cpp ****                 return a*x*x + b*x + c;
  80:Core/Src/parts/processor/robo_states.cpp ****         };
  81:Core/Src/parts/processor/robo_states.cpp **** 
  82:Core/Src/parts/processor/robo_states.cpp ****         float dt = (float)dt_millis / 1000.0;
 390              		.loc 1 82 0
 391 00e8 B8EE488A 		vcvt.f32.u32	s16, s16
 392              	.LVL37:
 393 00ec DFED457A 		vldr.32	s15, .L43+12
 394 00f0 C8EE27AA 		vdiv.f32	s21, s16, s15
 395              	.LVL38:
  83:Core/Src/parts/processor/robo_states.cpp ****         float r = v*dt;
 396              		.loc 1 83 0
 397 00f4 6AEEA8AA 		vmul.f32	s21, s21, s17
 398              	.LVL39:
  84:Core/Src/parts/processor/robo_states.cpp **** 
  85:Core/Src/parts/processor/robo_states.cpp ****         float dx(0), dy(0);
 399              		.loc 1 85 0
 400 00f8 9FED439A 		vldr.32	s18, .L43+16
 401 00fc B0EE490A 		vmov.f32	s0, s18
 402 0100 41E0     		b	.L38
 403              	.LVL40:
 404              	.L27:
 405              	.LBB267:
 406              	.LBB264:
 407              	.LBB261:
 408              	.LBB262:
  86:Core/Inc/utils\math/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
 409              		.loc 4 86 0
 410 0102 0130     		adds	r0, r0, #1
 411              	.LVL41:
 412 0104 C0B2     		uxtb	r0, r0
 413              	.LVL42:
 414              	.L29:
 415 0106 9DF84430 		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 416 010a 8342     		cmp	r3, r0
 417 010c E2D9     		bls	.L26
 418              	.LBB263:
  87:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
 419              		.loc 4 87 0
 420 010e 0023     		movs	r3, #0
 421              	.L28:
 422              	.LVL43:
 423 0110 9DF84520 		ldrb	r2, [sp, #69]	@ zero_extendqisi2
 424 0114 9A42     		cmp	r2, r3
 425 0116 F4D9     		bls	.L27
  88:Core/Inc/utils\math/mat.h ****                         }
 426              		.loc 4 88 0
 427 0118 03EB8002 		add	r2, r3, r0, lsl #2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 15


 428 011c 40A9     		add	r1, sp, #256
 429 011e 01EB8202 		add	r2, r1, r2, lsl #2
 430 0122 0021     		movs	r1, #0
 431 0124 42F8FC1C 		str	r1, [r2, #-252]	@ float
  87:Core/Inc/utils\math/mat.h ****                                 matrix_[i][j] = num;
 432              		.loc 4 87 0
 433 0128 0133     		adds	r3, r3, #1
 434              	.LVL44:
 435 012a DBB2     		uxtb	r3, r3
 436              	.LVL45:
 437 012c F0E7     		b	.L28
 438              	.LVL46:
 439              	.L32:
 440              	.LBE263:
 441              	.LBE262:
 442              	.LBE261:
 443              	.LBE264:
 444              	.LBE267:
 445              	.LBB268:
 446              	.LBB269:
 447              	.LBB270:
 448              	.LBB271:
 449              	.LBB272:
  38:Core/Inc/utils\math/mat.h ****                 }
 450              		.loc 4 38 0
 451 012e 2621     		movs	r1, #38
 452 0130 3348     		ldr	r0, .L43+8
 453 0132 FFF7FEFF 		bl	_Error_Handler
 454              	.LVL47:
 455              	.L33:
 456              	.LBE272:
 457              	.LBE271:
  75:Core/Src/parts/processor/robo_states.cpp ****                 float b = coeffs.at(1,0);
 458              		.loc 1 75 0
 459 0136 94ED008A 		vldr.32	s16, [r4]
 460              	.LVL48:
 461              	.LBB274:
 462              	.LBB275:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 463              		.loc 4 37 0
 464 013a 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 465 013e 012B     		cmp	r3, #1
 466 0140 02D9     		bls	.L34
 467 0142 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 468 0146 1BB9     		cbnz	r3, .L35
 469              	.L34:
  38:Core/Inc/utils\math/mat.h ****                 }
 470              		.loc 4 38 0
 471 0148 2621     		movs	r1, #38
 472 014a 2D48     		ldr	r0, .L43+8
 473 014c FFF7FEFF 		bl	_Error_Handler
 474              	.LVL49:
 475              	.L35:
 476              	.LBE275:
 477              	.LBE274:
  76:Core/Src/parts/processor/robo_states.cpp ****                 float c = coeffs.at(2,0);
 478              		.loc 1 76 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 16


 479 0150 94ED04BA 		vldr.32	s22, [r4, #16]
 480              	.LVL50:
 481              	.LBB276:
 482              	.LBB277:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 483              		.loc 4 37 0
 484 0154 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 485 0158 022B     		cmp	r3, #2
 486 015a 02D9     		bls	.L36
 487 015c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 488 0160 1BB9     		cbnz	r3, .L37
 489              	.L36:
  38:Core/Inc/utils\math/mat.h ****                 }
 490              		.loc 4 38 0
 491 0162 2621     		movs	r1, #38
 492 0164 2648     		ldr	r0, .L43+8
 493 0166 FFF7FEFF 		bl	_Error_Handler
 494              	.LVL51:
 495              	.L37:
 496              	.LBE277:
 497              	.LBE276:
  77:Core/Src/parts/processor/robo_states.cpp **** 
 498              		.loc 1 77 0
 499 016a 94ED080A 		vldr.32	s0, [r4, #32]
 500              	.LVL52:
  79:Core/Src/parts/processor/robo_states.cpp ****         };
 501              		.loc 1 79 0
 502 016e 28EE888A 		vmul.f32	s16, s17, s16
 503              	.LVL53:
 504 0172 28EE888A 		vmul.f32	s16, s17, s16
 505 0176 68EE8B8A 		vmul.f32	s17, s17, s22
 506              	.LVL54:
 507 017a 38EE288A 		vadd.f32	s16, s16, s17
 508 017e 30EE088A 		vadd.f32	s16, s0, s16
 509              	.LVL55:
 510              	.LBE270:
 511              	.LBE269:
 512              	.LBE268:
  86:Core/Src/parts/processor/robo_states.cpp **** 
  87:Core/Src/parts/processor/robo_states.cpp ****         while (((dx*dx) + (dy*dy)) < (r*r)) {
  88:Core/Src/parts/processor/robo_states.cpp ****                 dy += CURVE_STEP_SIZE;
  89:Core/Src/parts/processor/robo_states.cpp ****                 dx = P(y1 + dy) - x1;
 513              		.loc 1 89 0
 514 0182 38EE4A0A 		vsub.f32	s0, s16, s20
 515              	.LVL56:
 516              	.L38:
  87:Core/Src/parts/processor/robo_states.cpp ****                 dy += CURVE_STEP_SIZE;
 517              		.loc 1 87 0
 518 0186 60EE007A 		vmul.f32	s15, s0, s0
 519 018a 29EE097A 		vmul.f32	s14, s18, s18
 520 018e 77EE877A 		vadd.f32	s15, s15, s14
 521 0192 2AEEAA7A 		vmul.f32	s14, s21, s21
 522 0196 F4EEC77A 		vcmpe.f32	s15, s14
 523 019a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 524 019e 0ED5     		bpl	.L40
  88:Core/Src/parts/processor/robo_states.cpp ****                 dx = P(y1 + dy) - x1;
 525              		.loc 1 88 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 17


 526 01a0 F2EE047A 		vmov.f32	s15, #1.0e+1
 527 01a4 39EE279A 		vadd.f32	s18, s18, s15
 528              	.LVL57:
 529              		.loc 1 89 0
 530 01a8 79EE298A 		vadd.f32	s17, s18, s19
 531              	.LVL58:
 532              	.LBB281:
 533              	.LBB280:
 534              	.LBB279:
 535              	.LBB278:
 536              	.LBB273:
  37:Core/Inc/utils\math/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 537              		.loc 4 37 0
 538 01ac 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 539 01b0 002B     		cmp	r3, #0
 540 01b2 BCD0     		beq	.L32
 541 01b4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 542 01b8 002B     		cmp	r3, #0
 543 01ba BCD1     		bne	.L33
 544 01bc B7E7     		b	.L32
 545              	.LVL59:
 546              	.L40:
 547              	.LBE273:
 548              	.LBE278:
 549              	.LBE279:
 550              	.LBE280:
 551              	.LBE281:
  90:Core/Src/parts/processor/robo_states.cpp ****         }
  91:Core/Src/parts/processor/robo_states.cpp **** 
  92:Core/Src/parts/processor/robo_states.cpp ****         // printf("%ld\n", HAL_GetTick());
  93:Core/Src/parts/processor/robo_states.cpp ****         float theta = atan2f(dx,dy);
 552              		.loc 1 93 0
 553 01be F0EE490A 		vmov.f32	s1, s18
 554 01c2 FFF7FEFF 		bl	atan2f
 555              	.LVL60:
 556 01c6 B0EE408A 		vmov.f32	s16, s0
 557              	.LVL61:
  94:Core/Src/parts/processor/robo_states.cpp ****         printf("%ld\n", (int32_t)(theta*57.3));
 558              		.loc 1 94 0
 559 01ca 10EE100A 		vmov	r0, s0
 560 01ce FFF7FEFF 		bl	__aeabi_f2d
 561              	.LVL62:
 562 01d2 09A3     		adr	r3, .L43
 563 01d4 D3E90023 		ldrd	r2, [r3]
 564 01d8 FFF7FEFF 		bl	__aeabi_dmul
 565              	.LVL63:
 566 01dc FFF7FEFF 		bl	__aeabi_d2iz
 567              	.LVL64:
 568 01e0 0146     		mov	r1, r0
 569 01e2 0A48     		ldr	r0, .L43+20
 570 01e4 FFF7FEFF 		bl	printf
 571              	.LVL65:
  95:Core/Src/parts/processor/robo_states.cpp **** 
  96:Core/Src/parts/processor/robo_states.cpp ****         return theta;
  97:Core/Src/parts/processor/robo_states.cpp **** }
 572              		.loc 1 97 0
 573 01e8 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 18


 574 01ec 40B0     		add	sp, sp, #256
 575              	.LCFI4:
 576              		.cfi_def_cfa_offset 40
 577              		@ sp needed
 578 01ee BDEC088B 		vldm	sp!, {d8-d11}
 579              	.LCFI5:
 580              		.cfi_restore 86
 581              		.cfi_restore 87
 582              		.cfi_restore 84
 583              		.cfi_restore 85
 584              		.cfi_restore 82
 585              		.cfi_restore 83
 586              		.cfi_restore 80
 587              		.cfi_restore 81
 588              		.cfi_def_cfa_offset 8
 589              	.LVL66:
 590 01f2 10BD     		pop	{r4, pc}
 591              	.LVL67:
 592              	.L44:
 593 01f4 AFF30080 		.align	3
 594              	.L43:
 595 01f8 66666666 		.word	1717986918
 596 01fc 66A64C40 		.word	1078765158
 597 0200 00000000 		.word	.LC0
 598 0204 00007A44 		.word	1148846080
 599 0208 00000000 		.word	0
 600 020c 1C000000 		.word	.LC1
 601              		.cfi_endproc
 602              	.LFE524:
 604              		.section	.text._ZN11Robo_States11linearThetaE4Vec3IfEfm,"ax",%progbits
 605              		.align	1
 606              		.global	_ZN11Robo_States11linearThetaE4Vec3IfEfm
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv4-sp-d16
 612              	_ZN11Robo_States11linearThetaE4Vec3IfEfm:
 613              	.LFB526:
  98:Core/Src/parts/processor/robo_states.cpp **** 
  99:Core/Src/parts/processor/robo_states.cpp **** float Robo_States::linearTheta(Vec3<float> state, float v, uint32_t dt_millis)
 100:Core/Src/parts/processor/robo_states.cpp **** {
 614              		.loc 1 100 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL68:
 619 0000 08B5     		push	{r3, lr}
 620              	.LCFI6:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 3, -8
 623              		.cfi_offset 14, -4
 101:Core/Src/parts/processor/robo_states.cpp ****         Vec2<float> del = next_state_->sv_->centre - Vec2<float>(state);
 624              		.loc 1 101 0
 625 0002 4368     		ldr	r3, [r0, #4]
 626 0004 1B68     		ldr	r3, [r3]
 627              	.LVL69:
 628              	.LBB282:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 19


 629              	.LBB283:
 111:Core/Inc/utils\math/vec2.h ****                 y_ = v.y_;
 630              		.loc 3 111 0
 631 0006 93ED010A 		vldr.32	s0, [r3, #4]
 632              	.LVL70:
 633              		.loc 3 112 0
 634 000a D3ED020A 		vldr.32	s1, [r3, #8]
 635              	.LVL71:
 636              	.LBE283:
 637              	.LBE282:
 638              	.LBB284:
 639              	.LBB285:
  40:Core/Inc/utils\math/vec3.h **** 
  41:Core/Inc/utils\math/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils\math/vec3.h ****                 setX(x);
  43:Core/Inc/utils\math/vec3.h ****                 setY(y);
  44:Core/Inc/utils\math/vec3.h ****                 setZ(z);
  45:Core/Inc/utils\math/vec3.h ****         }
  46:Core/Inc/utils\math/vec3.h **** 
  47:Core/Inc/utils\math/vec3.h **** 
  48:Core/Inc/utils\math/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils\math/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils\math/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils\math/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils\math/vec3.h **** 
  54:Core/Inc/utils\math/vec3.h ****                 return temp;
  55:Core/Inc/utils\math/vec3.h ****         }
  56:Core/Inc/utils\math/vec3.h **** 
  57:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  58:Core/Inc/utils\math/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils\math/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils\math/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils\math/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils\math/vec3.h **** 
  64:Core/Inc/utils\math/vec3.h ****                 return temp;
  65:Core/Inc/utils\math/vec3.h ****         }
  66:Core/Inc/utils\math/vec3.h **** 
  67:Core/Inc/utils\math/vec3.h **** 
  68:Core/Inc/utils\math/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils\math/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils\math/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils\math/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils\math/vec3.h **** 
  74:Core/Inc/utils\math/vec3.h ****                 return temp;
  75:Core/Inc/utils\math/vec3.h ****         }
  76:Core/Inc/utils\math/vec3.h **** 
  77:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  78:Core/Inc/utils\math/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils\math/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils\math/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils\math/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils\math/vec3.h **** 
  84:Core/Inc/utils\math/vec3.h ****                 return temp;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 20


  85:Core/Inc/utils\math/vec3.h ****         }
  86:Core/Inc/utils\math/vec3.h **** 
  87:Core/Inc/utils\math/vec3.h **** 
  88:Core/Inc/utils\math/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils\math/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils\math/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils\math/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils\math/vec3.h **** 
  94:Core/Inc/utils\math/vec3.h ****                 return temp;
  95:Core/Inc/utils\math/vec3.h ****         }
  96:Core/Inc/utils\math/vec3.h **** 
  97:Core/Inc/utils\math/vec3.h ****         template <typename T1>
  98:Core/Inc/utils\math/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils\math/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils\math/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils\math/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils\math/vec3.h **** 
 104:Core/Inc/utils\math/vec3.h ****                 return temp;
 105:Core/Inc/utils\math/vec3.h ****         }
 106:Core/Inc/utils\math/vec3.h **** 
 107:Core/Inc/utils\math/vec3.h **** 
 108:Core/Inc/utils\math/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils\math/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils\math/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils\math/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils\math/vec3.h **** 
 114:Core/Inc/utils\math/vec3.h ****                 return temp;
 115:Core/Inc/utils\math/vec3.h ****         }
 116:Core/Inc/utils\math/vec3.h **** 
 117:Core/Inc/utils\math/vec3.h ****         template <typename T1>
 118:Core/Inc/utils\math/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils\math/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils\math/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils\math/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils\math/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils\math/vec3.h **** 
 124:Core/Inc/utils\math/vec3.h ****                 return temp;
 125:Core/Inc/utils\math/vec3.h ****         }
 126:Core/Inc/utils\math/vec3.h **** 
 127:Core/Inc/utils\math/vec3.h ****         
 128:Core/Inc/utils\math/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils\math/vec3.h ****                 x_ = v.x_;
 640              		.loc 2 129 0
 641 000e D1ED007A 		vldr.32	s15, [r1]
 130:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 642              		.loc 2 130 0
 643 0012 91ED017A 		vldr.32	s14, [r1, #4]
 644              	.LVL72:
 645              	.LBE285:
 646              	.LBE284:
 102:Core/Src/parts/processor/robo_states.cpp **** 
 103:Core/Src/parts/processor/robo_states.cpp ****         float dx = del.getX();
 104:Core/Src/parts/processor/robo_states.cpp ****         float dy = del.getY();
 105:Core/Src/parts/processor/robo_states.cpp **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 21


 106:Core/Src/parts/processor/robo_states.cpp ****         // printf("%d %d  :  ", (int16_t)dx, (int16_t)dy);
 107:Core/Src/parts/processor/robo_states.cpp ****         float theta = atan2f(dx, dy);
 647              		.loc 1 107 0
 648 0016 70EEC70A 		vsub.f32	s1, s1, s14
 649 001a 30EE670A 		vsub.f32	s0, s0, s15
 650 001e FFF7FEFF 		bl	atan2f
 651              	.LVL73:
 108:Core/Src/parts/processor/robo_states.cpp **** 
 109:Core/Src/parts/processor/robo_states.cpp ****         return theta;
 110:Core/Src/parts/processor/robo_states.cpp **** }
 652              		.loc 1 110 0
 653 0022 08BD     		pop	{r3, pc}
 654              		.cfi_endproc
 655              	.LFE526:
 657              		.section	.text._ZN11Robo_States18calc_AngleOfAttackE4Vec3IfEfm,"ax",%progbits
 658              		.align	1
 659              		.global	_ZN11Robo_States18calc_AngleOfAttackE4Vec3IfEfm
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 663              		.fpu fpv4-sp-d16
 665              	_ZN11Robo_States18calc_AngleOfAttackE4Vec3IfEfm:
 666              	.LFB527:
 111:Core/Src/parts/processor/robo_states.cpp **** 
 112:Core/Src/parts/processor/robo_states.cpp **** 
 113:Core/Src/parts/processor/robo_states.cpp **** float Robo_States::calc_AngleOfAttack(Vec3<float> state, float v, uint32_t dt_millis)
 114:Core/Src/parts/processor/robo_states.cpp **** {
 667              		.loc 1 114 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 16
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              	.LVL74:
 672 0000 00B5     		push	{lr}
 673              	.LCFI7:
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 14, -4
 676 0002 2DED028B 		vpush.64	{d8}
 677              	.LCFI8:
 678              		.cfi_def_cfa_offset 12
 679              		.cfi_offset 80, -12
 680              		.cfi_offset 81, -8
 681 0006 85B0     		sub	sp, sp, #20
 682              	.LCFI9:
 683              		.cfi_def_cfa_offset 32
 684              	.LVL75:
 685              	.LBB286:
 686              	.LBB287:
 687              	.LBB288:
 129:Core/Inc/utils\math/vec3.h ****                 y_ = v.y_;
 688              		.loc 2 129 0
 689 0008 0B68     		ldr	r3, [r1]	@ float
 690 000a 0193     		str	r3, [sp, #4]	@ float
 691              		.loc 2 130 0
 692 000c 4B68     		ldr	r3, [r1, #4]	@ float
 693 000e 0293     		str	r3, [sp, #8]	@ float
 131:Core/Inc/utils\math/vec3.h ****                 z_ = v.z_;
 694              		.loc 2 131 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 22


 695 0010 8B68     		ldr	r3, [r1, #8]	@ float
 696 0012 0393     		str	r3, [sp, #12]	@ float
 697              	.LVL76:
 698              	.LBE288:
 699              	.LBE287:
 700              	.LBE286:
 115:Core/Src/parts/processor/robo_states.cpp ****         // Let's use linear spline for first try then we should probably switch
 116:Core/Src/parts/processor/robo_states.cpp ****         // to cubic spline later
 117:Core/Src/parts/processor/robo_states.cpp **** 
 118:Core/Src/parts/processor/robo_states.cpp ****         float theta = linearTheta(state, v, dt_millis);
 701              		.loc 1 118 0
 702 0014 01A9     		add	r1, sp, #4
 703              	.LVL77:
 704 0016 FFF7FEFF 		bl	_ZN11Robo_States11linearThetaE4Vec3IfEfm
 705              	.LVL78:
 706 001a F0EE408A 		vmov.f32	s17, s0
 707              	.LVL79:
 708              	.LBB289:
 709              	.LBB290:
 710              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 23


  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 24


  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 25


 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 26


 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 244:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(long double __x)
 246:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 248:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 249:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 250:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 253:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 256:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::floor;
 257:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 258:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   floor(float __x)
 261:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 263:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   floor(long double __x)
 265:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_floorl(__x); }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 27


 266:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 267:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 268:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 269:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 272:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 275:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fmod;
 276:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 277:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 282:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 286:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 287:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 292:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 295:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 296:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::frexp;
 297:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 298:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 300:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 303:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 304:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 307:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 308:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 309:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 312:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 315:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ldexp;
 316:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 317:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 322:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 28


 323:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 326:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 327:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 328:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 331:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 334:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::log;
 335:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 336:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log(float __x)
 339:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 341:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log(long double __x)
 343:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 345:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 346:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 347:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 350:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     log(_Tp __x)
 351:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 353:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::log10;
 354:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 355:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log10(float __x)
 358:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 360:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log10(long double __x)
 362:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 364:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 365:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 366:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 369:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 372:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::modf;
 373:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 374:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 376:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 379:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 29


 380:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 383:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 384:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::pow;
 385:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 386:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 391:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 395:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline double
 399:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 402:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 403:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 406:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 407:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 410:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 411:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 412:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 417:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 420:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 421:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::sin;
 422:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 423:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   sin(float __x)
 426:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_sinf(__x); }
 711              		.loc 5 426 0
 712 001e FFF7FEFF 		bl	sinf
 713              	.LVL80:
 714 0022 B0EE408A 		vmov.f32	s16, s0
 715              	.LVL81:
 716              	.LBE290:
 717              	.LBE289:
 718              	.LBB291:
 719              	.LBB292:
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 30


 720              		.loc 5 185 0
 721 0026 B0EE680A 		vmov.f32	s0, s17
 722 002a FFF7FEFF 		bl	cosf
 723              	.LVL82:
 724              	.LBE292:
 725              	.LBE291:
 119:Core/Src/parts/processor/robo_states.cpp **** 
 120:Core/Src/parts/processor/robo_states.cpp ****         return atan2f(sin(theta), cos(theta));
 726              		.loc 1 120 0
 727 002e F0EE400A 		vmov.f32	s1, s0
 728 0032 B0EE480A 		vmov.f32	s0, s16
 729 0036 FFF7FEFF 		bl	atan2f
 730              	.LVL83:
 121:Core/Src/parts/processor/robo_states.cpp **** }
 731              		.loc 1 121 0
 732 003a 05B0     		add	sp, sp, #20
 733              	.LCFI10:
 734              		.cfi_def_cfa_offset 12
 735              		@ sp needed
 736 003c BDEC028B 		vldm	sp!, {d8}
 737              	.LCFI11:
 738              		.cfi_restore 80
 739              		.cfi_restore 81
 740              		.cfi_def_cfa_offset 4
 741 0040 5DF804FB 		ldr	pc, [sp], #4
 742              		.cfi_endproc
 743              	.LFE527:
 745              		.section	.text._ZN11Robo_States16nextStateReachedE4Vec3IfE,"ax",%progbits
 746              		.align	1
 747              		.global	_ZN11Robo_States16nextStateReachedE4Vec3IfE
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 751              		.fpu fpv4-sp-d16
 753              	_ZN11Robo_States16nextStateReachedE4Vec3IfE:
 754              	.LFB528:
 122:Core/Src/parts/processor/robo_states.cpp **** 
 123:Core/Src/parts/processor/robo_states.cpp **** bool Robo_States::nextStateReached(Vec3<float> state)
 124:Core/Src/parts/processor/robo_states.cpp **** {
 755              		.loc 1 124 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760              	.LVL84:
 125:Core/Src/parts/processor/robo_states.cpp ****         // Since the axis of the rectangle are aligned with the axes, we can
 126:Core/Src/parts/processor/robo_states.cpp ****         // easily calculate if a point is inside the rectange
 127:Core/Src/parts/processor/robo_states.cpp ****         Vec2<float> upper = next_state_->sv_->upper_bounds;
 761              		.loc 1 127 0
 762 0000 4368     		ldr	r3, [r0, #4]
 763 0002 1B68     		ldr	r3, [r3]
 764              	.LVL85:
 765              	.LBB293:
 766              	.LBB294:
 111:Core/Inc/utils\math/vec2.h ****                 y_ = v.y_;
 767              		.loc 3 111 0
 768 0004 93ED037A 		vldr.32	s14, [r3, #12]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 31


 769              		.loc 3 112 0
 770 0008 93ED046A 		vldr.32	s12, [r3, #16]
 771              	.LVL86:
 772              	.LBE294:
 773              	.LBE293:
 774              	.LBB295:
 775              	.LBB296:
 111:Core/Inc/utils\math/vec2.h ****                 y_ = v.y_;
 776              		.loc 3 111 0
 777 000c D3ED057A 		vldr.32	s15, [r3, #20]
 778              		.loc 3 112 0
 779 0010 D3ED066A 		vldr.32	s13, [r3, #24]
 780              	.LVL87:
 781              	.LBE296:
 782              	.LBE295:
 128:Core/Src/parts/processor/robo_states.cpp ****         Vec2<float> lower = next_state_->sv_->lower_bounds;
 129:Core/Src/parts/processor/robo_states.cpp ****         float mx, my, mnx, mny;
 130:Core/Src/parts/processor/robo_states.cpp **** 
 131:Core/Src/parts/processor/robo_states.cpp ****         // Correct the bounds for checking whether the robot has reached within
 132:Core/Src/parts/processor/robo_states.cpp ****         // next state's zone
 133:Core/Src/parts/processor/robo_states.cpp ****         if (upper.getX() > lower.getX()) {
 783              		.loc 1 133 0
 784 0014 F4EEC77A 		vcmpe.f32	s15, s14
 785 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 786 001c 05D5     		bpl	.L50
 787 001e 17EE903A 		vmov	r3, s15
 134:Core/Src/parts/processor/robo_states.cpp ****                 mx = upper.getX();
 788              		.loc 1 134 0
 789 0022 F0EE477A 		vmov.f32	s15, s14
 135:Core/Src/parts/processor/robo_states.cpp ****                 mnx = lower.getX();
 790              		.loc 1 135 0
 791 0026 07EE103A 		vmov	s14, r3
 792              	.L50:
 793              	.LVL88:
 136:Core/Src/parts/processor/robo_states.cpp ****         }
 137:Core/Src/parts/processor/robo_states.cpp ****         else {
 138:Core/Src/parts/processor/robo_states.cpp ****                 mnx = upper.getX();
 139:Core/Src/parts/processor/robo_states.cpp ****                 mx = lower.getX();
 140:Core/Src/parts/processor/robo_states.cpp ****         }
 141:Core/Src/parts/processor/robo_states.cpp ****         
 142:Core/Src/parts/processor/robo_states.cpp ****         if (upper.getY() > lower.getY()) {
 794              		.loc 1 142 0
 795 002a F4EEC66A 		vcmpe.f32	s13, s12
 796 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 797 0032 05D5     		bpl	.L52
 798 0034 16EE903A 		vmov	r3, s13
 143:Core/Src/parts/processor/robo_states.cpp ****                 my = upper.getY();
 799              		.loc 1 143 0
 800 0038 F0EE466A 		vmov.f32	s13, s12
 144:Core/Src/parts/processor/robo_states.cpp ****                 mny = lower.getY();
 801              		.loc 1 144 0
 802 003c 06EE103A 		vmov	s12, r3
 803              	.L52:
 804              	.LVL89:
 805              	.LBB297:
 806              	.LBB298:
  34:Core/Inc/utils\math/vec3.h ****         T getY() const { return y_; }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 32


 807              		.loc 2 34 0
 808 0040 D1ED005A 		vldr.32	s11, [r1]
 809              	.LVL90:
 810              	.LBE298:
 811              	.LBE297:
 812              	.LBB299:
 813              	.LBB300:
  35:Core/Inc/utils\math/vec3.h ****         T getZ() const { return z_; }
 814              		.loc 2 35 0
 815 0044 91ED015A 		vldr.32	s10, [r1, #4]
 816              	.LVL91:
 817              	.LBE300:
 818              	.LBE299:
 145:Core/Src/parts/processor/robo_states.cpp ****         }
 146:Core/Src/parts/processor/robo_states.cpp ****         else {
 147:Core/Src/parts/processor/robo_states.cpp ****                 mny = upper.getY();
 148:Core/Src/parts/processor/robo_states.cpp ****                 my = lower.getY();
 149:Core/Src/parts/processor/robo_states.cpp ****         }
 150:Core/Src/parts/processor/robo_states.cpp **** 
 151:Core/Src/parts/processor/robo_states.cpp ****         float x = state.getX();
 152:Core/Src/parts/processor/robo_states.cpp ****         float y = state.getY();
 153:Core/Src/parts/processor/robo_states.cpp **** 
 154:Core/Src/parts/processor/robo_states.cpp ****         // Check if x is bounded
 155:Core/Src/parts/processor/robo_states.cpp ****         if (x > mx || x < mnx) {
 819              		.loc 1 155 0
 820 0048 F4EEE57A 		vcmpe.f32	s15, s11
 821 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 822 0050 12D4     		bmi	.L56
 823              		.loc 1 155 0 is_stmt 0 discriminator 1
 824 0052 B4EEE57A 		vcmpe.f32	s14, s11
 825 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 826 005a 0FDC     		bgt	.L57
 156:Core/Src/parts/processor/robo_states.cpp ****                 return false;
 157:Core/Src/parts/processor/robo_states.cpp ****         }
 158:Core/Src/parts/processor/robo_states.cpp ****         // Check if y is bounded
 159:Core/Src/parts/processor/robo_states.cpp ****         if (y > my || y < mny) {
 827              		.loc 1 159 0 is_stmt 1
 828 005c F4EEC56A 		vcmpe.f32	s13, s10
 829 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 830 0064 0CD4     		bmi	.L58
 831              		.loc 1 159 0 is_stmt 0 discriminator 1
 832 0066 B4EEC56A 		vcmpe.f32	s12, s10
 833 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 834 006e 01DC     		bgt	.L64
 160:Core/Src/parts/processor/robo_states.cpp ****                 return false;
 161:Core/Src/parts/processor/robo_states.cpp ****         }
 162:Core/Src/parts/processor/robo_states.cpp **** 
 163:Core/Src/parts/processor/robo_states.cpp ****         return true;
 835              		.loc 1 163 0 is_stmt 1
 836 0070 0120     		movs	r0, #1
 837              	.LVL92:
 164:Core/Src/parts/processor/robo_states.cpp **** }
 838              		.loc 1 164 0
 839 0072 7047     		bx	lr
 840              	.LVL93:
 841              	.L64:
 160:Core/Src/parts/processor/robo_states.cpp ****                 return false;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 33


 842              		.loc 1 160 0
 843 0074 0020     		movs	r0, #0
 844              	.LVL94:
 845 0076 7047     		bx	lr
 846              	.LVL95:
 847              	.L56:
 156:Core/Src/parts/processor/robo_states.cpp ****                 return false;
 848              		.loc 1 156 0
 849 0078 0020     		movs	r0, #0
 850              	.LVL96:
 851 007a 7047     		bx	lr
 852              	.LVL97:
 853              	.L57:
 854 007c 0020     		movs	r0, #0
 855              	.LVL98:
 856 007e 7047     		bx	lr
 857              	.LVL99:
 858              	.L58:
 160:Core/Src/parts/processor/robo_states.cpp ****                 return false;
 859              		.loc 1 160 0
 860 0080 0020     		movs	r0, #0
 861              	.LVL100:
 862 0082 7047     		bx	lr
 863              		.cfi_endproc
 864              	.LFE528:
 866              		.section	.bss._ZL20gGameField_Initiated,"aw",%nobits
 867              		.set	.LANCHOR0,. + 0
 870              	_ZL20gGameField_Initiated:
 871 0000 00       		.space	1
 872              		.section	.rodata._ZN11Robo_States9quadThetaE4Vec3IfEfm.str1.4,"aMS",%progbits,1
 873              		.align	2
 874              	.LC0:
 875 0000 436F7265 		.ascii	"Core/Inc/utils\\math/mat.h\000"
 875      2F496E63 
 875      2F757469 
 875      6C735C6D 
 875      6174682F 
 876 001a 0000     		.space	2
 877              	.LC1:
 878 001c 256C640A 		.ascii	"%ld\012\000"
 878      00
 879              		.text
 880              	.Letext0:
 881              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 882              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 883              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 884              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 885              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 886              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 887              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 888              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 889              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 890              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 891              		.file 16 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core_cm
 892              		.file 17 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 893              		.file 18 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 894              		.file 19 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 34


 895              		.file 20 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 896              		.file 21 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 897              		.file 22 "C:/Users/n-is/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
 898              		.file 23 "Core/Inc/utils\\filter/kalman.h"
 899              		.file 24 "Core/Inc/parts/sensors/position_sensor.h"
 900              		.file 25 "Core/Inc/parts/processor/robo_states.h"
 901              		.file 26 "Core/Inc/periphs/tim.h"
 902              		.file 27 "Core/Inc/devs/a4988.h"
 903              		.file 28 "Core/Inc/devs/freewheel.h"
 904              		.file 29 "Core/Inc/periphs/i2c.h"
 905              		.file 30 "Core/Inc/devs/hmc5883.h"
 906              		.file 31 "Core/Inc/devs/mpu6050.h"
 907              		.file 32 "Core/Inc/parts/devs_config.h"
 908              		.file 33 "Core/Inc/main.h"
 909              		.file 34 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 910              		.file 35 "<built-in>"
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccamb02v.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 robo_states.cpp
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:18     .text._ZN11Robo_StatesC2EP10State_VarsPS_:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:25     .text._ZN11Robo_StatesC2EP10State_VarsPS_:00000000 _ZN11Robo_StatesC2EP10State_VarsPS_
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:72     .text._ZN11Robo_StatesC2EP10State_VarsPS_:00000024 $d
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:25     .text._ZN11Robo_StatesC2EP10State_VarsPS_:00000000 _ZN11Robo_StatesC1EP10State_VarsPS_
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:80     .text._ZN11Robo_States17calc_RoboVelocityEv:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:87     .text._ZN11Robo_States17calc_RoboVelocityEv:00000000 _ZN11Robo_States17calc_RoboVelocityEv
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:136    .text._ZN11Robo_States17calc_RoboVelocityEv:0000005c $d
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:144    .text._ZN11Robo_States9quadThetaE4Vec3IfEfm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:151    .text._ZN11Robo_States9quadThetaE4Vec3IfEfm:00000000 _ZN11Robo_States9quadThetaE4Vec3IfEfm
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:595    .text._ZN11Robo_States9quadThetaE4Vec3IfEfm:000001f8 $d
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:605    .text._ZN11Robo_States11linearThetaE4Vec3IfEfm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:612    .text._ZN11Robo_States11linearThetaE4Vec3IfEfm:00000000 _ZN11Robo_States11linearThetaE4Vec3IfEfm
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:658    .text._ZN11Robo_States18calc_AngleOfAttackE4Vec3IfEfm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:665    .text._ZN11Robo_States18calc_AngleOfAttackE4Vec3IfEfm:00000000 _ZN11Robo_States18calc_AngleOfAttackE4Vec3IfEfm
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:746    .text._ZN11Robo_States16nextStateReachedE4Vec3IfE:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:753    .text._ZN11Robo_States16nextStateReachedE4Vec3IfE:00000000 _ZN11Robo_States16nextStateReachedE4Vec3IfE
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:870    .bss._ZL20gGameField_Initiated:00000000 _ZL20gGameField_Initiated
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:871    .bss._ZL20gGameField_Initiated:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccamb02v.s:873    .rodata._ZN11Robo_States9quadThetaE4Vec3IfEfm.str1.4:00000000 $d

UNDEFINED SYMBOLS
_Z14init_GameFieldv
gMax_Robo_Velocity
__aeabi_f2d
__aeabi_dmul
__aeabi_d2iz
_ZN3MatC1Ehh
_Error_Handler
_ZNK3Mat3invERS_
_ZN3MatmLERK4Vec3IfE
memcpy
atan2f
printf
sinf
cosf
