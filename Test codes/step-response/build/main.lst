ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB137:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** 
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.cpp ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.cpp ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.cpp ****   * inserted by the user or by software development tools
  11:Core/Src/main.cpp ****   * are owned by their respective copyright owners.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.cpp ****   *
  15:Core/Src/main.cpp ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.cpp ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.cpp ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.cpp ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.cpp ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.cpp ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.cpp ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.cpp ****   *      without specific prior written permission.
  25:Core/Src/main.cpp ****   *
  26:Core/Src/main.cpp ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.cpp ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.cpp ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.cpp ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.cpp ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.cpp ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 2


  32:Core/Src/main.cpp ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.cpp ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.cpp ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.cpp ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.cpp ****   *
  37:Core/Src/main.cpp ****   ******************************************************************************
  38:Core/Src/main.cpp ****   */
  39:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  40:Core/Src/main.cpp **** #include "main.h"
  41:Core/Src/main.cpp **** #include "stm32f4xx_hal.h"
  42:Core/Src/main.cpp **** #include "adc.h"
  43:Core/Src/main.cpp **** #include "dma.h"
  44:Core/Src/main.cpp **** #include "tim.h"
  45:Core/Src/main.cpp **** #include "usart.h"
  46:Core/Src/main.cpp **** #include "gpio.h"
  47:Core/Src/main.cpp **** 
  48:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  49:Core/Src/main.cpp **** #include "robot/robo_init.h"
  50:Core/Src/main.cpp **** #include "robot/play.h"
  51:Core/Src/main.cpp **** /* USER CODE END Includes */
  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  56:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  57:Core/Src/main.cpp **** 
  58:Core/Src/main.cpp **** /* USER CODE END PV */
  59:Core/Src/main.cpp **** 
  60:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.cpp **** void SystemClock_Config(void);
  62:Core/Src/main.cpp **** 
  63:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.cpp **** 
  66:Core/Src/main.cpp **** void set_DutyCycle_Primary(TIM_HandleTypeDef *htim, uint32_t Channel, uint16_t dutyCycle);
  67:Core/Src/main.cpp **** /* USER CODE END PFP */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.cpp **** bool gSendDataFlagReceived = false;
  71:Core/Src/main.cpp **** 
  72:Core/Src/main.cpp **** #ifdef __cplusplus
  73:Core/Src/main.cpp **** extern "C" {
  74:Core/Src/main.cpp **** #endif // __cplusplus
  75:Core/Src/main.cpp **** 
  76:Core/Src/main.cpp **** extern void send_AllData();
  77:Core/Src/main.cpp **** 
  78:Core/Src/main.cpp **** #ifdef __cplusplus
  79:Core/Src/main.cpp **** }
  80:Core/Src/main.cpp **** #endif // __cplusplus
  81:Core/Src/main.cpp **** 
  82:Core/Src/main.cpp **** #define CYTRON_ENCODER_PPR	(715)
  83:Core/Src/main.cpp **** #define PI			(3.1415)
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp **** /* USER CODE END 0 */
  86:Core/Src/main.cpp **** 
  87:Core/Src/main.cpp **** /**
  88:Core/Src/main.cpp ****   * @brief  The application entry point.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 3


  89:Core/Src/main.cpp ****   *
  90:Core/Src/main.cpp ****   * @retval None
  91:Core/Src/main.cpp ****   */
  92:Core/Src/main.cpp **** int main(void)
  93:Core/Src/main.cpp **** {
  94:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp ****         /* USER CODE END 1 */
  97:Core/Src/main.cpp **** 
  98:Core/Src/main.cpp ****         /* MCU Configuration----------------------------------------------------------*/
  99:Core/Src/main.cpp **** 
 100:Core/Src/main.cpp ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.cpp ****         HAL_Init();
 102:Core/Src/main.cpp **** 
 103:Core/Src/main.cpp ****         /* USER CODE BEGIN Init */
 104:Core/Src/main.cpp **** 
 105:Core/Src/main.cpp ****         /* USER CODE END Init */
 106:Core/Src/main.cpp **** 
 107:Core/Src/main.cpp ****         /* Configure the system clock */
 108:Core/Src/main.cpp ****         SystemClock_Config();
 109:Core/Src/main.cpp **** 
 110:Core/Src/main.cpp ****         /* USER CODE BEGIN SysInit */
 111:Core/Src/main.cpp **** 
 112:Core/Src/main.cpp ****         /* USER CODE END SysInit */
 113:Core/Src/main.cpp **** 
 114:Core/Src/main.cpp ****         /* Initialize all configured peripherals */
 115:Core/Src/main.cpp ****         MX_GPIO_Init();
 116:Core/Src/main.cpp ****         MX_DMA_Init();
 117:Core/Src/main.cpp ****         MX_TIM3_Init();
 118:Core/Src/main.cpp ****         MX_TIM2_Init();
 119:Core/Src/main.cpp ****         MX_TIM1_Init();
 120:Core/Src/main.cpp ****         MX_TIM4_Init();
 121:Core/Src/main.cpp ****         MX_TIM8_Init();
 122:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 123:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 124:Core/Src/main.cpp ****         MX_ADC1_Init();
 125:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 126:Core/Src/main.cpp **** 
 127:Core/Src/main.cpp **** 
 128:Core/Src/main.cpp ****         HAL_TIM_Base_Start(&htim8);
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_1);
 131:Core/Src/main.cpp ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 132:Core/Src/main.cpp **** 
 133:Core/Src/main.cpp ****         HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 134:Core/Src/main.cpp ****         HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 135:Core/Src/main.cpp **** 
 136:Core/Src/main.cpp **** 
 137:Core/Src/main.cpp **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET);
 138:Core/Src/main.cpp **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5, GPIO_PIN_SET);
 139:Core/Src/main.cpp **** 	
 140:Core/Src/main.cpp **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_1, GPIO_PIN_SET);
 141:Core/Src/main.cpp **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_RESET);
 142:Core/Src/main.cpp **** 
 143:Core/Src/main.cpp ****         printf("Hello World!!\n");
 144:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 145:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 4


 146:Core/Src/main.cpp ****         /* USER CODE END 2 */
 147:Core/Src/main.cpp **** 
 148:Core/Src/main.cpp ****         /* Infinite loop */
 149:Core/Src/main.cpp ****         /* USER CODE BEGIN WHILE */
 150:Core/Src/main.cpp **** 	int16_t cps[2];
 151:Core/Src/main.cpp **** 	float omega[2];
 152:Core/Src/main.cpp **** 
 153:Core/Src/main.cpp **** 	//*
 154:Core/Src/main.cpp **** 	set_DutyCycle_Primary(&htim8, TIM_CHANNEL_1, 25535);
 155:Core/Src/main.cpp **** 	set_DutyCycle_Primary(&htim8, TIM_CHANNEL_2, 25535);
 156:Core/Src/main.cpp **** 	/*/
 157:Core/Src/main.cpp **** 	while (1) {
 158:Core/Src/main.cpp **** 		cps[0] = htim3.Instance->CNT;
 159:Core/Src/main.cpp **** 		cps[1] = htim1.Instance->CNT;
 160:Core/Src/main.cpp **** 
 161:Core/Src/main.cpp **** 		printf("%ld, %ld\n", (int32_t)(cps[0]), (int32_t)(cps[1]));
 162:Core/Src/main.cpp **** 		HAL_Delay(1000);
 163:Core/Src/main.cpp **** 	}
 164:Core/Src/main.cpp **** 	/*/ //*/
 165:Core/Src/main.cpp ****         const uint32_t sample_period = 15;
 166:Core/Src/main.cpp ****         const uint32_t brake_period = 3000;
 167:Core/Src/main.cpp ****         uint32_t sample_time = HAL_GetTick();
 168:Core/Src/main.cpp ****         uint32_t brake_time = HAL_GetTick();
 169:Core/Src/main.cpp ****         while (1)
 170:Core/Src/main.cpp ****         {
 171:Core/Src/main.cpp **** 		
 172:Core/Src/main.cpp ****                 /* USER CODE END WHILE */
 173:Core/Src/main.cpp ****                 /* USER CODE BEGIN 3 */
 174:Core/Src/main.cpp **** 		if (HAL_GetTick() - sample_time > sample_period) {
 175:Core/Src/main.cpp **** 			sample_time = HAL_GetTick();
 176:Core/Src/main.cpp **** 
 177:Core/Src/main.cpp **** 			cps[0] = htim3.Instance->CNT;
 178:Core/Src/main.cpp **** 			//htim3.Instance->CNT = 0;
 179:Core/Src/main.cpp **** 			
 180:Core/Src/main.cpp **** 			cps[1] = htim1.Instance->CNT;
 181:Core/Src/main.cpp **** 			//htim1.Instance->CNT = 0;
 182:Core/Src/main.cpp **** 
 183:Core/Src/main.cpp **** 			omega[0] = 2 * PI * cps[0] * 1000 / ((float)sample_period * CYTRON_ENCODER_PPR);
 184:Core/Src/main.cpp **** 			omega[1] = 2 * PI * cps[1] * 1000 / ((float)sample_period * CYTRON_ENCODER_PPR);
 185:Core/Src/main.cpp **** 
 186:Core/Src/main.cpp **** 			printf("%ld, %ld\n", (int32_t)(cps[0]*100), (int32_t)(cps[1]*100));
 187:Core/Src/main.cpp **** 			// printf("%ld, %ld\n", (int32_t)(cps[0]), (int32_t)(cps[1]));
 188:Core/Src/main.cpp **** 		}
 189:Core/Src/main.cpp **** 		if (HAL_GetTick() - brake_time > brake_period) {
 190:Core/Src/main.cpp **** 			set_DutyCycle_Primary(&htim8, TIM_CHANNEL_1, 0);
 191:Core/Src/main.cpp **** 			set_DutyCycle_Primary(&htim8, TIM_CHANNEL_2, 0);
 192:Core/Src/main.cpp **** 			break;
 193:Core/Src/main.cpp **** 		}
 194:Core/Src/main.cpp **** 		HAL_Delay(2000);
 195:Core/Src/main.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
 196:Core/Src/main.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5, GPIO_PIN_RESET);
 197:Core/Src/main.cpp **** 
 198:Core/Src/main.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_1, GPIO_PIN_RESET);
 199:Core/Src/main.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_SET);
 200:Core/Src/main.cpp ****         }
 201:Core/Src/main.cpp ****         // send_AllData();
 202:Core/Src/main.cpp ****         while(1);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 5


 203:Core/Src/main.cpp ****         /* USER CODE END 3 */
 204:Core/Src/main.cpp **** }
 205:Core/Src/main.cpp **** 
 206:Core/Src/main.cpp **** /**
 207:Core/Src/main.cpp ****   * @brief System Clock Configuration
 208:Core/Src/main.cpp ****   * @retval None
 209:Core/Src/main.cpp ****   */
 210:Core/Src/main.cpp **** void SystemClock_Config(void)
 211:Core/Src/main.cpp **** {
 212:Core/Src/main.cpp **** 
 213:Core/Src/main.cpp ****         RCC_OscInitTypeDef RCC_OscInitStruct;
 214:Core/Src/main.cpp ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 215:Core/Src/main.cpp **** 
 216:Core/Src/main.cpp ****         /**Configure the main internal regulator output voltage 
 217:Core/Src/main.cpp ****     */
 218:Core/Src/main.cpp ****         __HAL_RCC_PWR_CLK_ENABLE();
 219:Core/Src/main.cpp **** 
 220:Core/Src/main.cpp ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 221:Core/Src/main.cpp **** 
 222:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 223:Core/Src/main.cpp ****     */
 224:Core/Src/main.cpp ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 225:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 226:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 227:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 228:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
 229:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
 230:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 231:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 232:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233:Core/Src/main.cpp ****         {
 234:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 235:Core/Src/main.cpp ****         }
 236:Core/Src/main.cpp **** 
 237:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 238:Core/Src/main.cpp ****     */
 239:Core/Src/main.cpp ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
 240:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 241:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 242:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 243:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 244:Core/Src/main.cpp **** 
 245:Core/Src/main.cpp ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 246:Core/Src/main.cpp ****         {
 247:Core/Src/main.cpp ****                 _Error_Handler(__FILE__, __LINE__);
 248:Core/Src/main.cpp ****         }
 249:Core/Src/main.cpp **** 
 250:Core/Src/main.cpp ****         /**Configure the Systick interrupt time 
 251:Core/Src/main.cpp ****     */
 252:Core/Src/main.cpp ****         HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 253:Core/Src/main.cpp **** 
 254:Core/Src/main.cpp ****         /**Configure the Systick 
 255:Core/Src/main.cpp ****     */
 256:Core/Src/main.cpp ****         HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 257:Core/Src/main.cpp **** 
 258:Core/Src/main.cpp ****         /* SysTick_IRQn interrupt configuration */
 259:Core/Src/main.cpp ****         HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 6


 260:Core/Src/main.cpp **** }
 261:Core/Src/main.cpp **** 
 262:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 263:Core/Src/main.cpp **** 
 264:Core/Src/main.cpp **** /* USER CODE END 4 */
 265:Core/Src/main.cpp **** 
 266:Core/Src/main.cpp **** /**
 267:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 268:Core/Src/main.cpp ****   * @param  file: The file name as string.
 269:Core/Src/main.cpp ****   * @param  line: The line in file as a number.
 270:Core/Src/main.cpp ****   * @retval None
 271:Core/Src/main.cpp ****   */
 272:Core/Src/main.cpp **** void _Error_Handler(const char *file, int line)
 273:Core/Src/main.cpp **** {
  28              		.loc 1 273 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE137:
  40              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  41              		.align	1
  42              		.global	_Z18SystemClock_Configv
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z18SystemClock_Configv:
  49              	.LFB136:
 211:Core/Src/main.cpp **** 
  50              		.loc 1 211 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 211:Core/Src/main.cpp **** 
  54              		.loc 1 211 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 218:Core/Src/main.cpp **** 
  63              		.loc 1 218 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2A4B     		ldr	r3, .L9
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 7


  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 220:Core/Src/main.cpp **** 
  76              		.loc 1 220 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 264B     		ldr	r3, .L9+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F48042 		orr	r2, r2, #16384
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F48043 		and	r3, r3, #16384
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
 224:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 224 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 225:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 225 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 226:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 226 0
  94 003c 0222     		movs	r2, #2
  95 003e 0E92     		str	r2, [sp, #56]
 227:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
  96              		.loc 1 227 0
  97 0040 4FF48003 		mov	r3, #4194304
  98 0044 0F93     		str	r3, [sp, #60]
 228:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
  99              		.loc 1 228 0
 100 0046 0423     		movs	r3, #4
 101 0048 1093     		str	r3, [sp, #64]
 229:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 229 0
 103 004a A821     		movs	r1, #168
 104 004c 1191     		str	r1, [sp, #68]
 230:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 230 0
 106 004e 1292     		str	r2, [sp, #72]
 231:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 231 0
 108 0050 1393     		str	r3, [sp, #76]
 232:Core/Src/main.cpp ****         {
 109              		.loc 1 232 0
 110 0052 08A8     		add	r0, sp, #32
 111 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 112              	.LVL1:
 113 0058 20BB     		cbnz	r0, .L7
 239:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 114              		.loc 1 239 0
 115 005a 0F23     		movs	r3, #15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 8


 116 005c 0393     		str	r3, [sp, #12]
 240:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 240 0
 118 005e 0223     		movs	r3, #2
 119 0060 0493     		str	r3, [sp, #16]
 241:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 120              		.loc 1 241 0
 121 0062 0023     		movs	r3, #0
 122 0064 0593     		str	r3, [sp, #20]
 242:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 123              		.loc 1 242 0
 124 0066 4FF4A053 		mov	r3, #5120
 125 006a 0693     		str	r3, [sp, #24]
 243:Core/Src/main.cpp **** 
 126              		.loc 1 243 0
 127 006c 4FF48053 		mov	r3, #4096
 128 0070 0793     		str	r3, [sp, #28]
 245:Core/Src/main.cpp ****         {
 129              		.loc 1 245 0
 130 0072 0521     		movs	r1, #5
 131 0074 03A8     		add	r0, sp, #12
 132 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 134 007a B8B9     		cbnz	r0, .L8
 252:Core/Src/main.cpp **** 
 135              		.loc 1 252 0
 136 007c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 137              	.LVL3:
 138 0080 0E4B     		ldr	r3, .L9+8
 139 0082 A3FB0030 		umull	r3, r0, r3, r0
 140 0086 8009     		lsrs	r0, r0, #6
 141 0088 FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL4:
 256:Core/Src/main.cpp **** 
 143              		.loc 1 256 0
 144 008c 0420     		movs	r0, #4
 145 008e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 146              	.LVL5:
 259:Core/Src/main.cpp **** }
 147              		.loc 1 259 0
 148 0092 0022     		movs	r2, #0
 149 0094 1146     		mov	r1, r2
 150 0096 4FF0FF30 		mov	r0, #-1
 151 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 152              	.LVL6:
 260:Core/Src/main.cpp **** 
 153              		.loc 1 260 0
 154 009e 15B0     		add	sp, sp, #84
 155              	.LCFI2:
 156              		.cfi_remember_state
 157              		.cfi_def_cfa_offset 4
 158              		@ sp needed
 159 00a0 5DF804FB 		ldr	pc, [sp], #4
 160              	.L7:
 161              	.LCFI3:
 162              		.cfi_restore_state
 234:Core/Src/main.cpp ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 9


 163              		.loc 1 234 0
 164 00a4 EA21     		movs	r1, #234
 165 00a6 0648     		ldr	r0, .L9+12
 166 00a8 FFF7FEFF 		bl	_Error_Handler
 167              	.LVL7:
 168              	.L8:
 247:Core/Src/main.cpp ****         }
 169              		.loc 1 247 0
 170 00ac F721     		movs	r1, #247
 171 00ae 0448     		ldr	r0, .L9+12
 172 00b0 FFF7FEFF 		bl	_Error_Handler
 173              	.LVL8:
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 00b4 00380240 		.word	1073887232
 178 00b8 00700040 		.word	1073770496
 179 00bc D34D6210 		.word	274877907
 180 00c0 00000000 		.word	.LC0
 181              		.cfi_endproc
 182              	.LFE136:
 184              		.section	.text.main,"ax",%progbits
 185              		.align	1
 186              		.global	main
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	main:
 193              	.LFB135:
  93:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
 194              		.loc 1 93 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 70B5     		push	{r4, r5, r6, lr}
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 6, -8
 204              		.cfi_offset 14, -4
 101:Core/Src/main.cpp **** 
 205              		.loc 1 101 0
 206 0002 FFF7FEFF 		bl	HAL_Init
 207              	.LVL9:
 108:Core/Src/main.cpp **** 
 208              		.loc 1 108 0
 209 0006 FFF7FEFF 		bl	_Z18SystemClock_Configv
 210              	.LVL10:
 115:Core/Src/main.cpp ****         MX_DMA_Init();
 211              		.loc 1 115 0
 212 000a FFF7FEFF 		bl	MX_GPIO_Init
 213              	.LVL11:
 116:Core/Src/main.cpp ****         MX_TIM3_Init();
 214              		.loc 1 116 0
 215 000e FFF7FEFF 		bl	MX_DMA_Init
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 10


 216              	.LVL12:
 117:Core/Src/main.cpp ****         MX_TIM2_Init();
 217              		.loc 1 117 0
 218 0012 FFF7FEFF 		bl	MX_TIM3_Init
 219              	.LVL13:
 118:Core/Src/main.cpp ****         MX_TIM1_Init();
 220              		.loc 1 118 0
 221 0016 FFF7FEFF 		bl	MX_TIM2_Init
 222              	.LVL14:
 119:Core/Src/main.cpp ****         MX_TIM4_Init();
 223              		.loc 1 119 0
 224 001a FFF7FEFF 		bl	MX_TIM1_Init
 225              	.LVL15:
 120:Core/Src/main.cpp ****         MX_TIM8_Init();
 226              		.loc 1 120 0
 227 001e FFF7FEFF 		bl	MX_TIM4_Init
 228              	.LVL16:
 121:Core/Src/main.cpp ****         MX_USART1_UART_Init();
 229              		.loc 1 121 0
 230 0022 FFF7FEFF 		bl	MX_TIM8_Init
 231              	.LVL17:
 122:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 232              		.loc 1 122 0
 233 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 234              	.LVL18:
 123:Core/Src/main.cpp ****         MX_ADC1_Init();
 235              		.loc 1 123 0
 236 002a FFF7FEFF 		bl	MX_USART3_UART_Init
 237              	.LVL19:
 124:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 238              		.loc 1 124 0
 239 002e FFF7FEFF 		bl	MX_ADC1_Init
 240              	.LVL20:
 128:Core/Src/main.cpp **** 
 241              		.loc 1 128 0
 242 0032 434C     		ldr	r4, .L18
 243 0034 2046     		mov	r0, r4
 244 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start
 245              	.LVL21:
 130:Core/Src/main.cpp ****         HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);
 246              		.loc 1 130 0
 247 003a 0021     		movs	r1, #0
 248 003c 2046     		mov	r0, r4
 249 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 250              	.LVL22:
 131:Core/Src/main.cpp **** 
 251              		.loc 1 131 0
 252 0042 0421     		movs	r1, #4
 253 0044 2046     		mov	r0, r4
 254 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 255              	.LVL23:
 133:Core/Src/main.cpp ****         HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 256              		.loc 1 133 0
 257 004a 1821     		movs	r1, #24
 258 004c 3D48     		ldr	r0, .L18+4
 259 004e FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 260              	.LVL24:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 11


 134:Core/Src/main.cpp **** 
 261              		.loc 1 134 0
 262 0052 1821     		movs	r1, #24
 263 0054 3C48     		ldr	r0, .L18+8
 264 0056 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 265              	.LVL25:
 137:Core/Src/main.cpp **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5, GPIO_PIN_SET);
 266              		.loc 1 137 0
 267 005a 3C4D     		ldr	r5, .L18+12
 268 005c 0022     		movs	r2, #0
 269 005e 4FF48041 		mov	r1, #16384
 270 0062 2846     		mov	r0, r5
 271 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 272              	.LVL26:
 138:Core/Src/main.cpp **** 	
 273              		.loc 1 138 0
 274 0068 0122     		movs	r2, #1
 275 006a 2021     		movs	r1, #32
 276 006c 2846     		mov	r0, r5
 277 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 278              	.LVL27:
 140:Core/Src/main.cpp **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_RESET);
 279              		.loc 1 140 0
 280 0072 0122     		movs	r2, #1
 281 0074 0221     		movs	r1, #2
 282 0076 2846     		mov	r0, r5
 283 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL28:
 141:Core/Src/main.cpp **** 
 285              		.loc 1 141 0
 286 007c 0022     		movs	r2, #0
 287 007e 0821     		movs	r1, #8
 288 0080 2846     		mov	r0, r5
 289 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 290              	.LVL29:
 143:Core/Src/main.cpp ****         // float speed_multiplier = 2;
 291              		.loc 1 143 0
 292 0086 3248     		ldr	r0, .L18+16
 293 0088 FFF7FEFF 		bl	puts
 294              	.LVL30:
 154:Core/Src/main.cpp **** 	set_DutyCycle_Primary(&htim8, TIM_CHANNEL_2, 25535);
 295              		.loc 1 154 0
 296 008c 46F2BF32 		movw	r2, #25535
 297 0090 0021     		movs	r1, #0
 298 0092 2046     		mov	r0, r4
 299 0094 FFF7FEFF 		bl	_Z21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt
 300              	.LVL31:
 155:Core/Src/main.cpp **** 	/*/
 301              		.loc 1 155 0
 302 0098 46F2BF32 		movw	r2, #25535
 303 009c 0421     		movs	r1, #4
 304 009e 2046     		mov	r0, r4
 305 00a0 FFF7FEFF 		bl	_Z21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt
 306              	.LVL32:
 167:Core/Src/main.cpp ****         uint32_t brake_time = HAL_GetTick();
 307              		.loc 1 167 0
 308 00a4 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 12


 309              	.LVL33:
 310 00a8 0546     		mov	r5, r0
 311              	.LVL34:
 168:Core/Src/main.cpp ****         while (1)
 312              		.loc 1 168 0
 313 00aa FFF7FEFF 		bl	HAL_GetTick
 314              	.LVL35:
 315 00ae 0646     		mov	r6, r0
 316              	.LVL36:
 317 00b0 20E0     		b	.L15
 318              	.LVL37:
 319              	.L12:
 189:Core/Src/main.cpp **** 			set_DutyCycle_Primary(&htim8, TIM_CHANNEL_1, 0);
 320              		.loc 1 189 0
 321 00b2 FFF7FEFF 		bl	HAL_GetTick
 322              	.LVL38:
 323 00b6 801B     		subs	r0, r0, r6
 324 00b8 40F6B833 		movw	r3, #3000
 325 00bc 9842     		cmp	r0, r3
 326 00be 32D8     		bhi	.L17
 194:Core/Src/main.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
 327              		.loc 1 194 0
 328 00c0 4FF4FA60 		mov	r0, #2000
 329 00c4 FFF7FEFF 		bl	HAL_Delay
 330              	.LVL39:
 195:Core/Src/main.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_5, GPIO_PIN_RESET);
 331              		.loc 1 195 0
 332 00c8 204C     		ldr	r4, .L18+12
 333 00ca 0122     		movs	r2, #1
 334 00cc 4FF48041 		mov	r1, #16384
 335 00d0 2046     		mov	r0, r4
 336 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 337              	.LVL40:
 196:Core/Src/main.cpp **** 
 338              		.loc 1 196 0
 339 00d6 0022     		movs	r2, #0
 340 00d8 2021     		movs	r1, #32
 341 00da 2046     		mov	r0, r4
 342 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 343              	.LVL41:
 198:Core/Src/main.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_SET);
 344              		.loc 1 198 0
 345 00e0 0022     		movs	r2, #0
 346 00e2 0221     		movs	r1, #2
 347 00e4 2046     		mov	r0, r4
 348 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 349              	.LVL42:
 199:Core/Src/main.cpp ****         }
 350              		.loc 1 199 0
 351 00ea 0122     		movs	r2, #1
 352 00ec 0821     		movs	r1, #8
 353 00ee 2046     		mov	r0, r4
 354 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 355              	.LVL43:
 356              	.L15:
 174:Core/Src/main.cpp **** 			sample_time = HAL_GetTick();
 357              		.loc 1 174 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 13


 358 00f4 FFF7FEFF 		bl	HAL_GetTick
 359              	.LVL44:
 360 00f8 401B     		subs	r0, r0, r5
 361 00fa 0F28     		cmp	r0, #15
 362 00fc D9D9     		bls	.L12
 175:Core/Src/main.cpp **** 
 363              		.loc 1 175 0
 364 00fe FFF7FEFF 		bl	HAL_GetTick
 365              	.LVL45:
 366 0102 0546     		mov	r5, r0
 367              	.LVL46:
 177:Core/Src/main.cpp **** 			//htim3.Instance->CNT = 0;
 368              		.loc 1 177 0
 369 0104 0F4B     		ldr	r3, .L18+4
 370 0106 1B68     		ldr	r3, [r3]
 371 0108 5B6A     		ldr	r3, [r3, #36]
 372 010a 1BB2     		sxth	r3, r3
 180:Core/Src/main.cpp **** 			//htim1.Instance->CNT = 0;
 373              		.loc 1 180 0
 374 010c 0E4A     		ldr	r2, .L18+8
 375 010e 1268     		ldr	r2, [r2]
 376 0110 526A     		ldr	r2, [r2, #36]
 377 0112 12B2     		sxth	r2, r2
 186:Core/Src/main.cpp **** 			// printf("%ld, %ld\n", (int32_t)(cps[0]), (int32_t)(cps[1]));
 378              		.loc 1 186 0
 379 0114 6421     		movs	r1, #100
 380 0116 01FB02F2 		mul	r2, r1, r2
 381 011a 01FB03F1 		mul	r1, r1, r3
 382 011e 0D48     		ldr	r0, .L18+20
 383              	.LVL47:
 384 0120 FFF7FEFF 		bl	printf
 385              	.LVL48:
 386 0124 C5E7     		b	.L12
 387              	.L17:
 190:Core/Src/main.cpp **** 			set_DutyCycle_Primary(&htim8, TIM_CHANNEL_2, 0);
 388              		.loc 1 190 0
 389 0126 064C     		ldr	r4, .L18
 390 0128 0022     		movs	r2, #0
 391 012a 1146     		mov	r1, r2
 392 012c 2046     		mov	r0, r4
 393 012e FFF7FEFF 		bl	_Z21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt
 394              	.LVL49:
 191:Core/Src/main.cpp **** 			break;
 395              		.loc 1 191 0
 396 0132 0022     		movs	r2, #0
 397 0134 0421     		movs	r1, #4
 398 0136 2046     		mov	r0, r4
 399 0138 FFF7FEFF 		bl	_Z21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt
 400              	.LVL50:
 401              	.L14:
 402 013c FEE7     		b	.L14
 403              	.L19:
 404 013e 00BF     		.align	2
 405              	.L18:
 406 0140 00000000 		.word	htim8
 407 0144 00000000 		.word	htim3
 408 0148 00000000 		.word	htim1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 14


 409 014c 000C0240 		.word	1073875968
 410 0150 00000000 		.word	.LC1
 411 0154 10000000 		.word	.LC2
 412              		.cfi_endproc
 413              	.LFE135:
 415              		.section	.text.assert_failed,"ax",%progbits
 416              		.align	1
 417              		.global	assert_failed
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv4-sp-d16
 423              	assert_failed:
 424              	.LFB138:
 274:Core/Src/main.cpp ****         /* USER CODE BEGIN Error_Handler_Debug */
 275:Core/Src/main.cpp ****         /* User can add his own implementation to report the HAL error return state */
 276:Core/Src/main.cpp ****         while (1)
 277:Core/Src/main.cpp ****         {
 278:Core/Src/main.cpp ****         }
 279:Core/Src/main.cpp ****         /* USER CODE END Error_Handler_Debug */
 280:Core/Src/main.cpp **** }
 281:Core/Src/main.cpp **** 
 282:Core/Src/main.cpp **** #ifdef USE_FULL_ASSERT
 283:Core/Src/main.cpp **** /**
 284:Core/Src/main.cpp ****   * @brief  Reports the name of the source file and the source line number
 285:Core/Src/main.cpp ****   *         where the assert_param error has occurred.
 286:Core/Src/main.cpp ****   * @param  file: pointer to the source file name
 287:Core/Src/main.cpp ****   * @param  line: assert_param error line source number
 288:Core/Src/main.cpp ****   * @retval None
 289:Core/Src/main.cpp ****   */
 290:Core/Src/main.cpp **** void assert_failed(uint8_t *file, uint32_t line)
 291:Core/Src/main.cpp **** {
 425              		.loc 1 291 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL51:
 292:Core/Src/main.cpp ****         /* USER CODE BEGIN 6 */
 293:Core/Src/main.cpp ****         /* User can add his own implementation to report the file name and line number,
 294:Core/Src/main.cpp ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 295:Core/Src/main.cpp ****         /* USER CODE END 6 */
 296:Core/Src/main.cpp **** }
 431              		.loc 1 296 0
 432 0000 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE138:
 436              		.global	gSendDataFlagReceived
 437              		.section	.bss.gSendDataFlagReceived,"aw",%nobits
 440              	gSendDataFlagReceived:
 441 0000 00       		.space	1
 442              		.section	.rodata._Z18SystemClock_Configv.str1.4,"aMS",%progbits,1
 443              		.align	2
 444              	.LC0:
 445 0000 436F7265 		.ascii	"Core/Src/main.cpp\000"
 445      2F537263 
 445      2F6D6169 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 15


 445      6E2E6370 
 445      7000
 446              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 447              		.align	2
 448              	.LC1:
 449 0000 48656C6C 		.ascii	"Hello World!!\000"
 449      6F20576F 
 449      726C6421 
 449      2100
 450 000e 0000     		.space	2
 451              	.LC2:
 452 0010 256C642C 		.ascii	"%ld, %ld\012\000"
 452      20256C64 
 452      0A00
 453              		.text
 454              	.Letext0:
 455              		.file 2 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 456              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 457              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 458              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core
 459              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 460              		.file 7 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 461              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 462              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 463              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 464              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 465              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 466              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 467              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 468              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 469              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 470              		.file 17 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 471              		.file 18 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 472              		.file 19 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 473              		.file 20 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 474              		.file 21 "Core/Inc\\periphs/adc.h"
 475              		.file 22 "Core/Inc\\periphs/tim.h"
 476              		.file 23 "Core/Inc\\periphs/usart.h"
 477              		.file 24 "Core/Inc\\devs/wheel.h"
 478              		.file 25 "Core/Inc/robot/robo_init.h"
 479              		.file 26 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 480              		.file 27 "Core/Inc\\periphs/gpio.h"
 481              		.file 28 "Core/Inc\\periphs/dma.h"
 482              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:18     .text._Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:25     .text._Error_Handler:00000000 _Error_Handler
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:41     .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:48     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:177    .text._Z18SystemClock_Configv:000000b4 $d
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:185    .text.main:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:192    .text.main:00000000 main
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:406    .text.main:00000140 $d
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:416    .text.assert_failed:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:423    .text.assert_failed:00000000 assert_failed
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:440    .bss.gSendDataFlagReceived:00000000 gSendDataFlagReceived
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:441    .bss.gSendDataFlagReceived:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:443    .rodata._Z18SystemClock_Configv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccIoGkub.s:447    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM3_Init
MX_TIM2_Init
MX_TIM1_Init
MX_TIM4_Init
MX_TIM8_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_ADC1_Init
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
HAL_GPIO_WritePin
puts
_Z21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt
HAL_GetTick
HAL_Delay
printf
htim8
htim3
htim1
