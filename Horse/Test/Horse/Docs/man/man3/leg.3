.TH "leg" 3 "Sun May 12 2019" "ROBOCON_2019_HORSE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
leg
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <leg\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBleg\fP ()"
.br
.ti -1c
.RI "\fBleg\fP (\fBleg\fP &&)=default"
.br
.ti -1c
.RI "\fBleg\fP (const \fBleg\fP &)=default"
.br
.ti -1c
.RI "\fBleg\fP & \fBoperator=\fP (\fBleg\fP &&)=default"
.br
.ti -1c
.RI "\fBleg\fP & \fBoperator=\fP (const \fBleg\fP &)=default"
.br
.ti -1c
.RI "\fB~leg\fP ()"
.br
.ti -1c
.RI "void \fBset_config\fP (\fBmotor_config\fP *\fBmotor\fP, \fBencoder_config\fP *\fBencoder\fP)"
.br
.ti -1c
.RI "void \fBset_PID_constants\fP (float kp, float ki, float kd, float lower_limit, float upper_limit)"
.br
.ti -1c
.RI "void \fBset_omega\fP (float omega)"
.br
.ti -1c
.RI "float \fBramp\fP (float omega)"
.br
.ti -1c
.RI "void \fBset_gravity_compensator_constant\fP (float kbody, float kleg)"
.br
.ti -1c
.RI "void \fBreset_angle\fP (float angle_in_radians)"
.br
.ti -1c
.RI "void \fBcalculate_omega\fP ()"
.br
.ti -1c
.RI "\fBLeg_condition\fP \fBis_raised\fP ()"
.br
.ti -1c
.RI "bool \fBis_raised_without_deadzone\fP ()"
.br
.ti -1c
.RI "int \fBget_steps\fP ()"
.br
.ti -1c
.RI "float \fBget_omega\fP (void)"
.br
.ti -1c
.RI "float \fBget_angle\fP (void)"
.br
.ti -1c
.RI "float \fBget_actual_angle\fP (void)"
.br
.ti -1c
.RI "float \fBget_max_omega\fP ()"
.br
.ti -1c
.RI "int16_t \fBget_encoder_count\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBlimit_switch\fP \fBlimit_switch__\fP [2]"
.br
.ti -1c
.RI "int \fBsteps\fP = 0"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBDiscrete_PID\fP \fBdpid_\fP"
.br
.ti -1c
.RI "\fBmotor\fP \fBmotor__\fP"
.br
.ti -1c
.RI "\fBencoder\fP \fBencoder__\fP"
.br
.ti -1c
.RI "float \fBkb_\fP = 0"
.br
.ti -1c
.RI "float \fBkl_\fP = 0"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 15 of file leg\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "leg::leg ()\fC [inline]\fP"

.PP
Definition at line 18 of file leg\&.h\&.
.SS "leg::leg (\fBleg\fP &&)\fC [default]\fP"

.SS "leg::leg (const \fBleg\fP &)\fC [default]\fP"

.SS "leg::~leg ()\fC [inline]\fP"

.PP
Definition at line 23 of file leg\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "void leg::calculate_omega (void)"

.PP
Definition at line 74 of file leg\&.cpp\&.
.SS "float leg::get_actual_angle (void)\fC [inline]\fP"

.PP
Definition at line 47 of file leg\&.h\&.
.SS "float leg::get_angle (void)\fC [inline]\fP"

.PP
Definition at line 46 of file leg\&.h\&.
.SS "int16_t leg::get_encoder_count (void)\fC [inline]\fP"

.PP
Definition at line 49 of file leg\&.h\&.
.SS "float leg::get_max_omega ()\fC [inline]\fP"

.PP
Definition at line 48 of file leg\&.h\&.
.SS "float leg::get_omega (void)\fC [inline]\fP"

.PP
Definition at line 45 of file leg\&.h\&.
.SS "int leg::get_steps ()\fC [inline]\fP"

.PP
Definition at line 44 of file leg\&.h\&.
.SS "\fBLeg_condition\fP leg::is_raised ()"

.PP
Definition at line 45 of file leg\&.cpp\&.
.SS "bool leg::is_raised_without_deadzone ()"

.PP
Definition at line 60 of file leg\&.cpp\&.
.SS "\fBleg\fP& leg::operator= (\fBleg\fP &&)\fC [default]\fP"

.SS "\fBleg\fP& leg::operator= (const \fBleg\fP &)\fC [default]\fP"

.SS "float leg::ramp (float omega)"

.PP
Definition at line 30 of file leg\&.cpp\&.
.SS "void leg::reset_angle (float angle_in_radians)"

.PP
Definition at line 70 of file leg\&.cpp\&.
.SS "void leg::set_config (\fBmotor_config\fP * motor, \fBencoder_config\fP * encoder)\fC [inline]\fP"

.PP
Definition at line 24 of file leg\&.h\&.
.SS "void leg::set_gravity_compensator_constant (float kbody, float kleg)\fC [inline]\fP"

.PP
Definition at line 38 of file leg\&.h\&.
.SS "void leg::set_omega (float omega)"

.PP
Definition at line 4 of file leg\&.cpp\&.
.SS "void leg::set_PID_constants (float kp, float ki, float kd, float lower_limit, float upper_limit)\fC [inline]\fP"

.PP
Definition at line 28 of file leg\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBDiscrete_PID\fP leg::dpid_\fC [private]\fP"

.PP
Definition at line 55 of file leg\&.h\&.
.SS "\fBencoder\fP leg::encoder__\fC [private]\fP"

.PP
Definition at line 57 of file leg\&.h\&.
.SS "float leg::kb_ = 0\fC [private]\fP"

.PP
Definition at line 58 of file leg\&.h\&.
.SS "float leg::kl_ = 0\fC [private]\fP"

.PP
Definition at line 58 of file leg\&.h\&.
.SS "\fBlimit_switch\fP leg::limit_switch__[2]"

.PP
Definition at line 51 of file leg\&.h\&.
.SS "\fBmotor\fP leg::motor__\fC [private]\fP"

.PP
Definition at line 56 of file leg\&.h\&.
.SS "int leg::steps = 0"

.PP
Definition at line 52 of file leg\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ROBOCON_2019_HORSE from the source code\&.
