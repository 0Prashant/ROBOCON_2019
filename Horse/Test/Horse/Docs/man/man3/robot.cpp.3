.TH "Src/robot/robot.cpp" 3 "Sun May 12 2019" "ROBOCON_2019_HORSE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Src/robot/robot.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'robot\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBVec3\fP< float > \fBread_Orientation\fP (uint32_t dt_millis)"
.br
.RI "Function that provides the orientation of the robot\&. "
.ti -1c
.RI "bool \fBgo\fP (int \fBsteps\fP, float \fBangle\fP)"
.br
.ti -1c
.RI "void \fBmove_leg\fP (int \fBsteps\fP, float \fBangle\fP)"
.br
.ti -1c
.RI "void \fBmove_steering\fP (int \fBsteps\fP, float \fBangle\fP)"
.br
.ti -1c
.RI "void \fBcalculate_robot_angle\fP ()"
.br
.ti -1c
.RI "void \fBcalculate_datas\fP ()"
.br
.ti -1c
.RI "bool \fBplay\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBleg\fP \fBleg\fP [2]"
.br
.ti -1c
.RI "\fBsteering\fP \fBsteering\fP"
.br
.ti -1c
.RI "\fBVec3\fP< float > \fBinitial_angle\fP"
.br
.ti -1c
.RI "\fBVec3\fP< float > \fBangle\fP"
.br
.ti -1c
.RI "static const float \fBrobot_speed\fP = 5\&.0"
.br
.ti -1c
.RI "static float \fBleg_speed\fP = \fBrobot_speed\fP"
.br
.ti -1c
.RI "static const float \fBsteering_speed\fP = 0\&.6"
.br
.ti -1c
.RI "static const float \fBsteering_angle_limit\fP = 9 * \fBPI\fP / 180"
.br
.ti -1c
.RI "bool \fBsand_dune_crossed_flag\fP = false"
.br
.ti -1c
.RI "float \fBrobot_angle\fP = 0"
.br
.ti -1c
.RI "float \fBtemp_robot_angle\fP = 0"
.br
.ti -1c
.RI "float \fBtolerance\fP = 1\&.1 * \fBPI\fP / 180"
.br
.ti -1c
.RI "float \fBsteps\fP [7] = {10, 17, 23, 28, 34, 45, 70}"
.br
.ti -1c
.RI "float \fBangles\fP [7] = {0, 50, 50, 55, 0, \-10, 0}"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void calculate_datas (void)"

.PP
Definition at line 158 of file robot\&.cpp\&.
.SS "void calculate_robot_angle (void)"
Alternate code to calculate robot_angle using IMU 
.PP
Definition at line 121 of file robot\&.cpp\&.
.SS "bool go (int steps, float angle)"

.PP
Definition at line 24 of file robot\&.cpp\&.
.SS "void move_leg (int steps, float angle)"

.PP
Definition at line 47 of file robot\&.cpp\&.
.SS "void move_steering (int steps, float angle)"

.PP
Definition at line 60 of file robot\&.cpp\&.
.SS "bool play (void)"

.PP
Definition at line 166 of file robot\&.cpp\&.
.SS "\fBVec3\fP<float> read_Orientation (uint32_t dt_millis)"

.PP
Function that provides the orientation of the robot\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbase_state\fP This parameter is considered as one of the possible state of robot\&. 
.br
\fIdt_millis\fP : The time period at which this function is called periodically
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIorientation\fP of the robot in degrees
.RE
.PP
.PP
.nf

Tasks performed by this function
1) Read the values from Accelerometer and the Gyroscope
.fi
.PP
 
.PP
Definition at line 117 of file robo_orientation\&.cpp\&.
.SH "Variable Documentation"
.PP 
.SS "\fBVec3\fP<float> angle"

.PP
Definition at line 7 of file robot\&.cpp\&.
.SS "float angles[7] = {0, 50, 50, 55, 0, \-10, 0}"

.PP
Definition at line 22 of file robot\&.cpp\&.
.SS "\fBVec3\fP<float> initial_angle"

.PP
Definition at line 6 of file robot\&.cpp\&.
.SS "\fBleg\fP \fBleg\fP[2]"

.PP
Definition at line 3 of file robo_init\&.cpp\&.
.SS "float leg_speed = \fBrobot_speed\fP\fC [static]\fP"

.PP
Definition at line 10 of file robot\&.cpp\&.
.SS "float robot_angle = 0"

.PP
Definition at line 18 of file robot\&.cpp\&.
.SS "const float robot_speed = 5\&.0\fC [static]\fP"

.PP
Definition at line 9 of file robot\&.cpp\&.
.SS "bool sand_dune_crossed_flag = false"

.PP
Definition at line 17 of file robot\&.cpp\&.
.SS "\fBsteering\fP \fBsteering\fP"

.PP
Definition at line 4 of file robo_init\&.cpp\&.
.SS "const float steering_angle_limit = 9 * \fBPI\fP / 180\fC [static]\fP"

.PP
Definition at line 12 of file robot\&.cpp\&.
.SS "const float steering_speed = 0\&.6\fC [static]\fP"

.PP
Definition at line 11 of file robot\&.cpp\&.
.SS "float steps[7] = {10, 17, 23, 28, 34, 45, 70}"

.PP
Definition at line 21 of file robot\&.cpp\&.
.SS "float temp_robot_angle = 0"

.PP
Definition at line 18 of file robot\&.cpp\&.
.SS "float tolerance = 1\&.1 * \fBPI\fP / 180"

.PP
Definition at line 19 of file robot\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ROBOCON_2019_HORSE from the source code\&.
