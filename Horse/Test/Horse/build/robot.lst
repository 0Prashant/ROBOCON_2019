ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB504:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE504:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB510:
  50              		.file 2 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "robot.h"
   2:Core/Src/robot/robot.cpp **** extern leg leg[2];
   3:Core/Src/robot/robot.cpp **** extern steering steering;
   4:Core/Src/robot/robot.cpp **** 
   5:Core/Src/robot/robot.cpp **** Vec3<float> read_Orientation(uint32_t dt_millis);
   6:Core/Src/robot/robot.cpp **** Vec3<float> initial_angle;
   7:Core/Src/robot/robot.cpp **** Vec3<float> angle;
   8:Core/Src/robot/robot.cpp **** float robotx = 0;
   9:Core/Src/robot/robot.cpp **** 
  10:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  11:Core/Src/robot/robot.cpp **** bool STEERING_FLAG = false;
  12:Core/Src/robot/robot.cpp **** 
  13:Core/Src/robot/robot.cpp **** static const float robot_speed = 5.0;
  14:Core/Src/robot/robot.cpp **** static float leg_speed = robot_speed;    //17 is the maximum with safe zone
  15:Core/Src/robot/robot.cpp **** static const float steering_speed = 0.6; // 0.875 is the 100%
  16:Core/Src/robot/robot.cpp **** static const float steering_angle_limit = 9 * PI / 180;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** // static float number_of_samples = 0;
  19:Core/Src/robot/robot.cpp **** // static bool orientation_flag = false;
  20:Core/Src/robot/robot.cpp **** 
  21:Core/Src/robot/robot.cpp **** bool sand_dune_crossed_flag = false;
  22:Core/Src/robot/robot.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  23:Core/Src/robot/robot.cpp **** float tolerance = 1.1 * PI / 180;
  24:Core/Src/robot/robot.cpp **** 
  25:Core/Src/robot/robot.cpp **** float steps[7] = {7, 12, 16, 18, 25, 30, 70};
  26:Core/Src/robot/robot.cpp **** float angles[7] = {0, 50, 50, 55, 0, 0, 0};
  27:Core/Src/robot/robot.cpp **** 
  28:Core/Src/robot/robot.cpp **** void initialize_position(void)
  29:Core/Src/robot/robot.cpp **** {
  30:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
  31:Core/Src/robot/robot.cpp **** 	while (true)
  32:Core/Src/robot/robot.cpp **** 	{
  33:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
  34:Core/Src/robot/robot.cpp **** 		{
  35:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 3


  36:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Leg_Orientation\t");
  37:Core/Src/robot/robot.cpp **** 			calculate_datas();
  38:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
  39:Core/Src/robot/robot.cpp **** 				break;
  40:Core/Src/robot/robot.cpp **** 		}
  41:Core/Src/robot/robot.cpp **** 	}
  42:Core/Src/robot/robot.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
  43:Core/Src/robot/robot.cpp **** 	{
  44:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
  45:Core/Src/robot/robot.cpp **** 		{
  46:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
  47:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_The_Leg \t");
  48:Core/Src/robot/robot.cpp **** 			calculate_datas();
  49:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  50:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  51:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
  52:Core/Src/robot/robot.cpp **** 		}
  53:Core/Src/robot/robot.cpp **** 	}
  54:Core/Src/robot/robot.cpp **** 	while (true)
  55:Core/Src/robot/robot.cpp **** 	{
  56:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
  57:Core/Src/robot/robot.cpp **** 		{
  58:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
  59:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Steering_Orientation\t");
  60:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  61:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  62:Core/Src/robot/robot.cpp **** 			calculate_datas();
  63:Core/Src/robot/robot.cpp **** 			if (initialize_steering_position() == true)
  64:Core/Src/robot/robot.cpp **** 				break;
  65:Core/Src/robot/robot.cpp **** 		}
  66:Core/Src/robot/robot.cpp **** 	}
  67:Core/Src/robot/robot.cpp **** }
  68:Core/Src/robot/robot.cpp **** 
  69:Core/Src/robot/robot.cpp **** bool initialize_leg_position(void)
  70:Core/Src/robot/robot.cpp **** {
  71:Core/Src/robot/robot.cpp **** 	float initial_tolerance = 4;
  72:Core/Src/robot/robot.cpp **** 	float leg_initial_position = 90;
  73:Core/Src/robot/robot.cpp **** 	static bool leg0_flag = false;
  74:Core/Src/robot/robot.cpp **** 	static bool leg1_flag = false;
  75:Core/Src/robot/robot.cpp **** 
  76:Core/Src/robot/robot.cpp **** 	//  printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[
  77:Core/Src/robot/robot.cpp **** 	//  , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
  78:Core/Src/robot/robot.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
  79:Core/Src/robot/robot.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
  80:Core/Src/robot/robot.cpp **** 	{
  81:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
  82:Core/Src/robot/robot.cpp **** 		leg0_flag = true;
  83:Core/Src/robot/robot.cpp **** 	}
  84:Core/Src/robot/robot.cpp **** 	else
  85:Core/Src/robot/robot.cpp **** 	{
  86:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(5);
  87:Core/Src/robot/robot.cpp **** 		leg0_flag = false;
  88:Core/Src/robot/robot.cpp **** 	}
  89:Core/Src/robot/robot.cpp **** 
  90:Core/Src/robot/robot.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
  91:Core/Src/robot/robot.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[0].get_
  92:Core/Src/robot/robot.cpp **** 	{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 4


  93:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
  94:Core/Src/robot/robot.cpp **** 		leg1_flag = true;
  95:Core/Src/robot/robot.cpp **** 	}
  96:Core/Src/robot/robot.cpp **** 	else
  97:Core/Src/robot/robot.cpp **** 	{
  98:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(5);
  99:Core/Src/robot/robot.cpp **** 		leg1_flag = false;
 100:Core/Src/robot/robot.cpp **** 	}
 101:Core/Src/robot/robot.cpp **** 
 102:Core/Src/robot/robot.cpp **** 	if (leg0_flag && leg1_flag)
 103:Core/Src/robot/robot.cpp **** 	{
 104:Core/Src/robot/robot.cpp **** 		leg[0].steps = 0;
 105:Core/Src/robot/robot.cpp **** 		leg[1].steps = 0;
 106:Core/Src/robot/robot.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 107:Core/Src/robot/robot.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 108:Core/Src/robot/robot.cpp **** 		leg[0].reset_actual_angle(90 * PI / 180);
 109:Core/Src/robot/robot.cpp **** 		leg[1].reset_actual_angle(90 * PI / 180);
 110:Core/Src/robot/robot.cpp **** 		return true;
 111:Core/Src/robot/robot.cpp **** 	}
 112:Core/Src/robot/robot.cpp **** 	else
 113:Core/Src/robot/robot.cpp **** 	{
 114:Core/Src/robot/robot.cpp **** 		return false;
 115:Core/Src/robot/robot.cpp **** 	}
 116:Core/Src/robot/robot.cpp **** }
 117:Core/Src/robot/robot.cpp **** 
 118:Core/Src/robot/robot.cpp **** bool initialize_steering_position(void)
 119:Core/Src/robot/robot.cpp **** {
 120:Core/Src/robot/robot.cpp **** 	// printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 121:Core/Src/robot/robot.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 122:Core/Src/robot/robot.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 123:Core/Src/robot/robot.cpp **** 	if (STEERING_FLAG)
 124:Core/Src/robot/robot.cpp **** 	{
 125:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 126:Core/Src/robot/robot.cpp **** 		steering.reset_angle(0);
 127:Core/Src/robot/robot.cpp **** 		return true;
 128:Core/Src/robot/robot.cpp **** 	}
 129:Core/Src/robot/robot.cpp **** 	else
 130:Core/Src/robot/robot.cpp **** 	{
 131:Core/Src/robot/robot.cpp **** 		steering.set_omega(0.5);
 132:Core/Src/robot/robot.cpp **** 		return false;
 133:Core/Src/robot/robot.cpp **** 	}
 134:Core/Src/robot/robot.cpp **** }
 135:Core/Src/robot/robot.cpp **** 
 136:Core/Src/robot/robot.cpp **** bool go(int steps, float angle)
 137:Core/Src/robot/robot.cpp **** {
 138:Core/Src/robot/robot.cpp **** 	angle *= PI / 180;
 139:Core/Src/robot/robot.cpp **** 	move_leg(steps, angle);
 140:Core/Src/robot/robot.cpp **** 	move_steering(steps, angle);
 141:Core/Src/robot/robot.cpp **** 
 142:Core/Src/robot/robot.cpp **** 	calculate_robot_angle();
 143:Core/Src/robot/robot.cpp **** 	// printf(" steps = %d\t robot_angle = %d\t steering_angle = %d\t leg_1_angle = %d\t leg_2_angle =
 144:Core/Src/robot/robot.cpp **** 
 145:Core/Src/robot/robot.cpp **** 	if (((leg[0].get_steps() + leg[1].get_steps()) / 2 >= steps) && (fabs(angle - robot_angle) <= 0.1)
 146:Core/Src/robot/robot.cpp **** 	{
 147:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 148:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 149:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 5


 150:Core/Src/robot/robot.cpp **** 		return true;
 151:Core/Src/robot/robot.cpp **** 	}
 152:Core/Src/robot/robot.cpp **** 	else
 153:Core/Src/robot/robot.cpp **** 	{
 154:Core/Src/robot/robot.cpp **** 		return false;
 155:Core/Src/robot/robot.cpp **** 	}
 156:Core/Src/robot/robot.cpp **** }
 157:Core/Src/robot/robot.cpp **** 
 158:Core/Src/robot/robot.cpp **** void move_leg(int steps, float angle)
 159:Core/Src/robot/robot.cpp **** {
 160:Core/Src/robot/robot.cpp **** 	float del_speed = 0;
 161:Core/Src/robot/robot.cpp **** 
 162:Core/Src/robot/robot.cpp **** 	//Setting the slow speed in sand dune and tussok
 163:Core/Src/robot/robot.cpp **** 	leg_speed = (steps == 16 || steps == 30) ? robot_speed / 1.5 : robot_speed;
 164:Core/Src/robot/robot.cpp **** 
 165:Core/Src/robot/robot.cpp **** 	del_speed = (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 166:Core/Src/robot/robot.cpp **** 	//del_speed = 0;
 167:Core/Src/robot/robot.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 168:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 169:Core/Src/robot/robot.cpp **** 	// printf("\t%d \t%d \t", (int)(leg_speed + del_speed), (int)(leg_speed - del_speed));
 170:Core/Src/robot/robot.cpp **** }
 171:Core/Src/robot/robot.cpp **** void move_steering(int steps, float angle)
 172:Core/Src/robot/robot.cpp **** {
 173:Core/Src/robot/robot.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 174:Core/Src/robot/robot.cpp **** 	{
 175:Core/Src/robot/robot.cpp **** 		printf("raised");
 176:Core/Src/robot/robot.cpp **** 		if ((steering.get_angle() > -steering_angle_limit) && (steering.get_angle() < steering_angle_limi
 177:Core/Src/robot/robot.cpp **** 		{
 178:Core/Src/robot/robot.cpp **** 			if (angle > (robot_angle + tolerance))
 179:Core/Src/robot/robot.cpp **** 				steering.set_omega(steering_speed);
 180:Core/Src/robot/robot.cpp **** 
 181:Core/Src/robot/robot.cpp **** 			else if (angle < (robot_angle - tolerance))
 182:Core/Src/robot/robot.cpp **** 				steering.set_omega(-steering_speed);
 183:Core/Src/robot/robot.cpp **** 
 184:Core/Src/robot/robot.cpp **** 			else
 185:Core/Src/robot/robot.cpp **** 				steering.set_omega(0);
 186:Core/Src/robot/robot.cpp **** 		}
 187:Core/Src/robot/robot.cpp **** 		else
 188:Core/Src/robot/robot.cpp **** 		{
 189:Core/Src/robot/robot.cpp **** 			steering.set_omega((steering.get_angle() > 0) ? -steering_speed : steering_speed); //for protect
 190:Core/Src/robot/robot.cpp **** 		}
 191:Core/Src/robot/robot.cpp **** 	}
 192:Core/Src/robot/robot.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 193:Core/Src/robot/robot.cpp **** 	{
 194:Core/Src/robot/robot.cpp **** 		printf("fallen");
 195:Core/Src/robot/robot.cpp **** 		if (steering.get_angle() > (tolerance))
 196:Core/Src/robot/robot.cpp **** 		{
 197:Core/Src/robot/robot.cpp **** 			steering.set_omega(-steering_speed);
 198:Core/Src/robot/robot.cpp **** 		}
 199:Core/Src/robot/robot.cpp **** 
 200:Core/Src/robot/robot.cpp **** 		else if (steering.get_angle() < (-tolerance))
 201:Core/Src/robot/robot.cpp **** 		{
 202:Core/Src/robot/robot.cpp **** 			steering.set_omega(steering_speed);
 203:Core/Src/robot/robot.cpp **** 		}
 204:Core/Src/robot/robot.cpp **** 
 205:Core/Src/robot/robot.cpp **** 		else
 206:Core/Src/robot/robot.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 6


 207:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
 208:Core/Src/robot/robot.cpp **** 		}
 209:Core/Src/robot/robot.cpp **** 		// if (fabs(angle - robot_angle) <= steering_angle_limit)
 210:Core/Src/robot/robot.cpp **** 		// {
 211:Core/Src/robot/robot.cpp **** 		// 	if (steering.get_angle() > (tolerance)){
 212:Core/Src/robot/robot.cpp **** 		// 		steering.set_omega(-steering_speed);}
 213:Core/Src/robot/robot.cpp **** 
 214:Core/Src/robot/robot.cpp **** 		// 	else if (steering.get_angle() < (-tolerance)){
 215:Core/Src/robot/robot.cpp **** 		// 		steering.set_omega(steering_speed);}
 216:Core/Src/robot/robot.cpp **** 
 217:Core/Src/robot/robot.cpp **** 		// 	else{
 218:Core/Src/robot/robot.cpp **** 		// 		steering.set_omega(0);}
 219:Core/Src/robot/robot.cpp **** 		// 	printf("center_alligned\t");
 220:Core/Src/robot/robot.cpp **** 		// }
 221:Core/Src/robot/robot.cpp **** 		// else{
 222:Core/Src/robot/robot.cpp **** 
 223:Core/Src/robot/robot.cpp **** 		// 	if(fabs(steering.get_angle()) < steering_angle_limit){
 224:Core/Src/robot/robot.cpp **** 		// 		steering.set_omega((angle>0)? (-steering_speed):steering_speed);
 225:Core/Src/robot/robot.cpp **** 		// 	}
 226:Core/Src/robot/robot.cpp **** 		// 	else{
 227:Core/Src/robot/robot.cpp **** 		// 		steering.set_omega(0);
 228:Core/Src/robot/robot.cpp **** 		// 	}
 229:Core/Src/robot/robot.cpp **** 		// 	printf("peak_alligned\t");
 230:Core/Src/robot/robot.cpp **** 		// }
 231:Core/Src/robot/robot.cpp **** 	}
 232:Core/Src/robot/robot.cpp **** 	else
 233:Core/Src/robot/robot.cpp **** 	{
 234:Core/Src/robot/robot.cpp **** 		printf("nothing");
 235:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 236:Core/Src/robot/robot.cpp **** 	}
 237:Core/Src/robot/robot.cpp **** }
 238:Core/Src/robot/robot.cpp **** 
 239:Core/Src/robot/robot.cpp **** void calculate_robot_angle()
 240:Core/Src/robot/robot.cpp **** {
 241:Core/Src/robot/robot.cpp **** 	//*/
 242:Core/Src/robot/robot.cpp **** 	if (leg[0].is_raised_without_deadzone())
 243:Core/Src/robot/robot.cpp **** 	{
 244:Core/Src/robot/robot.cpp **** 		robot_angle = steering.get_angle() + temp_robot_angle;
 245:Core/Src/robot/robot.cpp **** 	}
 246:Core/Src/robot/robot.cpp **** 	else
 247:Core/Src/robot/robot.cpp **** 	{
 248:Core/Src/robot/robot.cpp **** 		temp_robot_angle = robot_angle - steering.get_angle();
 249:Core/Src/robot/robot.cpp **** 	}
 250:Core/Src/robot/robot.cpp **** 	/*/
 251:Core/Src/robot/robot.cpp **** 
 252:Core/Src/robot/robot.cpp **** 	//!Alternate code to calculate robot_angle using IMU
 253:Core/Src/robot/robot.cpp **** 	// robot_angle = -(initial_angle.getZ() - angle.getZ())*PI/180;
 254:Core/Src/robot/robot.cpp **** 
 255:Core/Src/robot/robot.cpp **** 	robot_angle = -(initial_angle.getZ() - angle.getZ()) * PI / 180;
 256:Core/Src/robot/robot.cpp **** 	// if(leg[0].is_raised() == Leg_condition::FALLEN){
 257:Core/Src/robot/robot.cpp **** 	// 	temp_robot_angle += -(initial_angle.getZ() - angle.getZ())*PI/180;
 258:Core/Src/robot/robot.cpp **** 	// 	number_of_samples++;
 259:Core/Src/robot/robot.cpp **** 	// 	orientation_flag = true;
 260:Core/Src/robot/robot.cpp **** 	// 	// printf("\tcalculating");
 261:Core/Src/robot/robot.cpp **** 	// }
 262:Core/Src/robot/robot.cpp **** 	// else{
 263:Core/Src/robot/robot.cpp **** 	// 	if(orientation_flag){
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 7


 264:Core/Src/robot/robot.cpp **** 	// 		robot_angle = temp_robot_angle / number_of_samples;
 265:Core/Src/robot/robot.cpp **** 	// 		temp_robot_angle = 0;
 266:Core/Src/robot/robot.cpp **** 	// 		number_of_samples = 0;
 267:Core/Src/robot/robot.cpp **** 	// 		orientation_flag = false;
 268:Core/Src/robot/robot.cpp **** 	// 		// printf("displayed");
 269:Core/Src/robot/robot.cpp **** 	// 	}
 270:Core/Src/robot/robot.cpp **** 	// 	// printf("still");
 271:Core/Src/robot/robot.cpp **** 	// }
 272:Core/Src/robot/robot.cpp **** 
 273:Core/Src/robot/robot.cpp **** 	//*/
 274:Core/Src/robot/robot.cpp **** }
 275:Core/Src/robot/robot.cpp **** 
 276:Core/Src/robot/robot.cpp **** void calculate_datas()
 277:Core/Src/robot/robot.cpp **** {
 278:Core/Src/robot/robot.cpp **** 	leg[0].calculate_omega();
 279:Core/Src/robot/robot.cpp **** 	leg[1].calculate_omega();
 280:Core/Src/robot/robot.cpp **** 	steering.calculate_omega();
 281:Core/Src/robot/robot.cpp **** 	angle = read_Orientation(10);
 282:Core/Src/robot/robot.cpp **** 	HAL_ADC_Start(&hadc1);
 283:Core/Src/robot/robot.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 284:Core/Src/robot/robot.cpp **** 	{
 285:Core/Src/robot/robot.cpp **** 		robotx = HAL_ADC_GetValue(&hadc1);
 286:Core/Src/robot/robot.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 287:Core/Src/robot/robot.cpp **** 		printf("\n\tDistance = %d", (int)robotx);
 288:Core/Src/robot/robot.cpp **** 	}
 289:Core/Src/robot/robot.cpp **** }
 290:Core/Src/robot/robot.cpp **** 
 291:Core/Src/robot/robot.cpp **** bool play()
 292:Core/Src/robot/robot.cpp **** {
 293:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
 294:Core/Src/robot/robot.cpp **** 	initial_angle = read_Orientation(10);
 295:Core/Src/robot/robot.cpp **** 
 296:Core/Src/robot/robot.cpp **** 	//initialize_position();
 297:Core/Src/robot/robot.cpp **** 
 298:Core/Src/robot/robot.cpp **** 	while (true)
 299:Core/Src/robot/robot.cpp **** 	{
 300:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 301:Core/Src/robot/robot.cpp **** 		{
 302:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
 303:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_to_start\t");
 304:Core/Src/robot/robot.cpp **** 			calculate_datas();
 305:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 306:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 307:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
 308:Core/Src/robot/robot.cpp **** 			if (ROBOT_START_FLAG)
 309:Core/Src/robot/robot.cpp **** 				break;
 310:Core/Src/robot/robot.cpp **** 		}
 311:Core/Src/robot/robot.cpp **** 	}
 312:Core/Src/robot/robot.cpp **** 	for (int i = 0; i < 6; i++)
 313:Core/Src/robot/robot.cpp **** 	{
 314:Core/Src/robot/robot.cpp **** 		// if (!sand_dune_crossed_flag && (i==3)){
 315:Core/Src/robot/robot.cpp **** 		// 	i--;
 316:Core/Src/robot/robot.cpp **** 		// 	go(steps[1]+1, 0);
 317:Core/Src/robot/robot.cpp **** 		// 	leg[0].steps = steps[3];
 318:Core/Src/robot/robot.cpp **** 		// 	break;
 319:Core/Src/robot/robot.cpp **** 		// }
 320:Core/Src/robot/robot.cpp **** 		while (true)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 8


 321:Core/Src/robot/robot.cpp **** 		{
 322:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 323:Core/Src/robot/robot.cpp **** 			{
 324:Core/Src/robot/robot.cpp **** 				dt = HAL_GetTick();
 325:Core/Src/robot/robot.cpp **** 				// printf("\tstep=%d\t", i);
 326:Core/Src/robot/robot.cpp **** 				calculate_datas();
 327:Core/Src/robot/robot.cpp **** 				if (go(steps[i], -angles[i]) == true)
 328:Core/Src/robot/robot.cpp **** 					break;
 329:Core/Src/robot/robot.cpp **** 			}
 330:Core/Src/robot/robot.cpp **** 		}
 331:Core/Src/robot/robot.cpp **** 		printf("\tstep=%d\t", i);
 332:Core/Src/robot/robot.cpp **** 	}
 333:Core/Src/robot/robot.cpp **** 	return true;
 334:Core/Src/robot/robot.cpp **** }
  51              		.loc 2 334 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 334 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 334 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB86:
  75              	.LBB87:
  76              	.LBB88:
  77              	.LBB89:
  78              	.LBB90:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE90:
  86              	.LBE89:
  87              	.LBB91:
  88              	.LBB92:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 9


  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE92:
  93              	.LBE91:
  94              	.LBB93:
  95              	.LBB94:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE94:
 100              	.LBE93:
 101              	.LBE88:
 102              	.LBE87:
 103              	.LBE86:
   6:Core/Src/robot/robot.cpp **** Vec3<float> angle;
 104              		.loc 2 6 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB95:
 113              	.LBB96:
 114              	.LBB97:
 115              	.LBB98:
 116              	.LBB99:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE99:
 122              	.LBE98:
 123              	.LBB100:
 124              	.LBB101:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE101:
 129              	.LBE100:
 130              	.LBB102:
 131              	.LBB103:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE103:
 136              	.LBE102:
 137              	.LBE97:
 138              	.LBE96:
 139              	.LBE95:
   7:Core/Src/robot/robot.cpp **** float robotx = 0;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 10


 140              		.loc 2 7 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 334 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE510:
 157              		.global	__aeabi_f2d
 158              		.global	__aeabi_dcmpgt
 159              		.global	__aeabi_dcmplt
 160              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 161              		.align	1
 162              		.global	_Z23initialize_leg_positionv
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	_Z23initialize_leg_positionv:
 169              	.LFB492:
  70:Core/Src/robot/robot.cpp **** 	float initial_tolerance = 4;
 170              		.loc 2 70 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 38B5     		push	{r3, r4, r5, lr}
 175              	.LCFI1:
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 3, -16
 178              		.cfi_offset 4, -12
 179              		.cfi_offset 5, -8
 180              		.cfi_offset 14, -4
 181 0002 2DED028B 		vpush.64	{d8}
 182              	.LCFI2:
 183              		.cfi_def_cfa_offset 24
 184              		.cfi_offset 80, -24
 185              		.cfi_offset 81, -20
 186              	.LVL13:
 187              	.LBB104:
 188              	.LBB105:
 189              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 11


   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kbody, float kleg){kb_ = kbody; kl_ = kleg;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 190              		.loc 3 47 0
 191 0006 4648     		ldr	r0, .L29+16
 192 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 193              	.LVL14:
 194              	.LBE105:
 195              	.LBE104:
  78:Core/Src/robot/robot.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 196              		.loc 2 78 0
 197 000c 10EE100A 		vmov	r0, s0
 198 0010 FFF7FEFF 		bl	__aeabi_f2d
 199              	.LVL15:
 200 0014 3EA3     		adr	r3, .L29
 201 0016 D3E90023 		ldrd	r2, [r3]
 202 001a FFF7FEFF 		bl	__aeabi_dcmpgt
 203              	.LVL16:
 204 001e 80B1     		cbz	r0, .L12
 205              	.LVL17:
 206              	.LBB106:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 12


 207              	.LBB107:
 208              		.loc 3 47 0
 209 0020 3F48     		ldr	r0, .L29+16
 210 0022 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 211              	.LVL18:
 212              	.LBE107:
 213              	.LBE106:
  79:Core/Src/robot/robot.cpp **** 	{
 214              		.loc 2 79 0
 215 0026 10EE100A 		vmov	r0, s0
 216 002a FFF7FEFF 		bl	__aeabi_f2d
 217              	.LVL19:
  78:Core/Src/robot/robot.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 218              		.loc 2 78 0
 219 002e 3AA3     		adr	r3, .L29+8
 220 0030 D3E90023 		ldrd	r2, [r3]
 221 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 222              	.LVL20:
 223 0038 18B1     		cbz	r0, .L12
 224              	.LVL21:
 225              	.LBB108:
 226              	.LBB109:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 227              		.loc 3 45 0
 228 003a 3A4B     		ldr	r3, .L29+20
 229 003c 1B69     		ldr	r3, [r3, #16]
 230              	.LVL22:
 231              	.LBE109:
 232              	.LBE108:
  79:Core/Src/robot/robot.cpp **** 	{
 233              		.loc 2 79 0
 234 003e 002B     		cmp	r3, #0
 235 0040 36D1     		bne	.L27
 236              	.L12:
  86:Core/Src/robot/robot.cpp **** 		leg0_flag = false;
 237              		.loc 2 86 0 discriminator 3
 238 0042 B1EE040A 		vmov.f32	s0, #5.0e+0
 239 0046 3748     		ldr	r0, .L29+20
 240 0048 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 241              	.LVL23:
  87:Core/Src/robot/robot.cpp **** 	}
 242              		.loc 2 87 0 discriminator 3
 243 004c 364B     		ldr	r3, .L29+24
 244 004e 0022     		movs	r2, #0
 245 0050 1A70     		strb	r2, [r3]
 246              	.L15:
 247              	.LVL24:
 248              	.LBB110:
 249              	.LBB111:
 250              		.loc 3 47 0
 251 0052 3648     		ldr	r0, .L29+28
 252 0054 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 253              	.LVL25:
 254              	.LBE111:
 255              	.LBE110:
  90:Core/Src/robot/robot.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[0].get_
 256              		.loc 2 90 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 13


 257 0058 10EE100A 		vmov	r0, s0
 258 005c FFF7FEFF 		bl	__aeabi_f2d
 259              	.LVL26:
  91:Core/Src/robot/robot.cpp **** 	{
 260              		.loc 2 91 0
 261 0060 2BA3     		adr	r3, .L29
 262 0062 D3E90023 		ldrd	r2, [r3]
 263 0066 FFF7FEFF 		bl	__aeabi_dcmpgt
 264              	.LVL27:
 265 006a 78B1     		cbz	r0, .L16
 266              	.LVL28:
 267              	.LBB112:
 268              	.LBB113:
 269              		.loc 3 47 0
 270 006c 2F48     		ldr	r0, .L29+28
 271 006e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 272              	.LVL29:
 273              	.LBE113:
 274              	.LBE112:
  91:Core/Src/robot/robot.cpp **** 	{
 275              		.loc 2 91 0
 276 0072 10EE100A 		vmov	r0, s0
 277 0076 FFF7FEFF 		bl	__aeabi_f2d
 278              	.LVL30:
  90:Core/Src/robot/robot.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[0].get_
 279              		.loc 2 90 0
 280 007a 27A3     		adr	r3, .L29+8
 281 007c D3E90023 		ldrd	r2, [r3]
 282 0080 FFF7FEFF 		bl	__aeabi_dcmplt
 283              	.LVL31:
 284 0084 10B1     		cbz	r0, .L16
 285              	.LVL32:
 286              	.LBB114:
 287              	.LBB115:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 288              		.loc 3 45 0
 289 0086 274B     		ldr	r3, .L29+20
 290 0088 1B69     		ldr	r3, [r3, #16]
 291              	.LVL33:
 292              	.LBE115:
 293              	.LBE114:
  91:Core/Src/robot/robot.cpp **** 	{
 294              		.loc 2 91 0
 295 008a D3B9     		cbnz	r3, .L19
 296              	.L16:
  98:Core/Src/robot/robot.cpp **** 		leg1_flag = false;
 297              		.loc 2 98 0 discriminator 2
 298 008c B1EE040A 		vmov.f32	s0, #5.0e+0
 299 0090 2748     		ldr	r0, .L29+32
 300 0092 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 301              	.LVL34:
  99:Core/Src/robot/robot.cpp **** 	}
 302              		.loc 2 99 0 discriminator 2
 303 0096 274B     		ldr	r3, .L29+36
 304 0098 0022     		movs	r2, #0
 305 009a 1A70     		strb	r2, [r3]
 306              	.L20:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 14


 102:Core/Src/robot/robot.cpp **** 	{
 307              		.loc 2 102 0
 308 009c 224B     		ldr	r3, .L29+24
 309 009e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 310 00a0 14B1     		cbz	r4, .L21
 102:Core/Src/robot/robot.cpp **** 	{
 311              		.loc 2 102 0 is_stmt 0 discriminator 1
 312 00a2 244B     		ldr	r3, .L29+36
 313 00a4 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 314 00a6 ACB9     		cbnz	r4, .L28
 315              	.L21:
 116:Core/Src/robot/robot.cpp **** 
 316              		.loc 2 116 0 is_stmt 1
 317 00a8 2046     		mov	r0, r4
 318 00aa BDEC028B 		vldm	sp!, {d8}
 319              	.LCFI3:
 320              		.cfi_remember_state
 321              		.cfi_restore 80
 322              		.cfi_restore 81
 323              		.cfi_def_cfa_offset 16
 324 00ae 38BD     		pop	{r3, r4, r5, pc}
 325              	.L27:
 326              	.LCFI4:
 327              		.cfi_restore_state
  81:Core/Src/robot/robot.cpp **** 		leg0_flag = true;
 328              		.loc 2 81 0
 329 00b0 9FED210A 		vldr.32	s0, .L29+40
 330 00b4 1B48     		ldr	r0, .L29+20
 331 00b6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 332              	.LVL35:
  82:Core/Src/robot/robot.cpp **** 	}
 333              		.loc 2 82 0
 334 00ba 1B4B     		ldr	r3, .L29+24
 335 00bc 0122     		movs	r2, #1
 336 00be 1A70     		strb	r2, [r3]
 337 00c0 C7E7     		b	.L15
 338              	.L19:
  93:Core/Src/robot/robot.cpp **** 		leg1_flag = true;
 339              		.loc 2 93 0
 340 00c2 9FED1D0A 		vldr.32	s0, .L29+40
 341 00c6 1A48     		ldr	r0, .L29+32
 342 00c8 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 343              	.LVL36:
  94:Core/Src/robot/robot.cpp **** 	}
 344              		.loc 2 94 0
 345 00cc 194B     		ldr	r3, .L29+36
 346 00ce 0122     		movs	r2, #1
 347 00d0 1A70     		strb	r2, [r3]
 348 00d2 E3E7     		b	.L20
 349              	.L28:
 104:Core/Src/robot/robot.cpp **** 		leg[1].steps = 0;
 350              		.loc 2 104 0
 351 00d4 134D     		ldr	r5, .L29+20
 352 00d6 0023     		movs	r3, #0
 353 00d8 2B61     		str	r3, [r5, #16]
 105:Core/Src/robot/robot.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 354              		.loc 2 105 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 15


 355 00da EB66     		str	r3, [r5, #108]
 106:Core/Src/robot/robot.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 356              		.loc 2 106 0
 357 00dc 9FED178A 		vldr.32	s16, .L29+44
 358 00e0 B0EE480A 		vmov.f32	s0, s16
 359 00e4 2846     		mov	r0, r5
 360 00e6 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 361              	.LVL37:
 107:Core/Src/robot/robot.cpp **** 		leg[0].reset_actual_angle(90 * PI / 180);
 362              		.loc 2 107 0
 363 00ea B0EE480A 		vmov.f32	s0, s16
 364 00ee 05F15C00 		add	r0, r5, #92
 365 00f2 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 366              	.LVL38:
 367              	.LBB116:
 368              	.LBB117:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 369              		.loc 3 40 0
 370 00f6 B0EE480A 		vmov.f32	s0, s16
 371 00fa 05F13C00 		add	r0, r5, #60
 372 00fe FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 373              	.LVL39:
 374              	.LBE117:
 375              	.LBE116:
 376              	.LBB118:
 377              	.LBB119:
 378 0102 B0EE480A 		vmov.f32	s0, s16
 379 0106 05F19800 		add	r0, r5, #152
 380 010a FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 381              	.LVL40:
 382              	.LBE119:
 383              	.LBE118:
 110:Core/Src/robot/robot.cpp **** 	}
 384              		.loc 2 110 0
 385 010e CBE7     		b	.L21
 386              	.L30:
 387              		.align	3
 388              	.L29:
 389 0110 44031FEA 		.word	-367066300
 390 0114 0604F83F 		.word	1073218566
 391 0118 EC5669BE 		.word	-1100392724
 392 011c EF3FFA3F 		.word	1073364975
 393 0120 3C000000 		.word	leg+60
 394 0124 00000000 		.word	leg
 395 0128 00000000 		.word	.LANCHOR2
 396 012c 98000000 		.word	leg+152
 397 0130 5C000000 		.word	leg+92
 398 0134 00000000 		.word	.LANCHOR3
 399 0138 00000000 		.word	0
 400 013c DB0FC93F 		.word	1070141403
 401              		.cfi_endproc
 402              	.LFE492:
 404              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 405              		.align	1
 406              		.global	_Z28initialize_steering_positionv
 407              		.syntax unified
 408              		.thumb
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 16


 409              		.thumb_func
 410              		.fpu fpv4-sp-d16
 412              	_Z28initialize_steering_positionv:
 413              	.LFB493:
 119:Core/Src/robot/robot.cpp **** 	// printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 414              		.loc 2 119 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 38B5     		push	{r3, r4, r5, lr}
 419              	.LCFI5:
 420              		.cfi_def_cfa_offset 16
 421              		.cfi_offset 3, -16
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 5, -8
 424              		.cfi_offset 14, -4
 425 0002 2DED028B 		vpush.64	{d8}
 426              	.LCFI6:
 427              		.cfi_def_cfa_offset 24
 428              		.cfi_offset 80, -24
 429              		.cfi_offset 81, -20
 123:Core/Src/robot/robot.cpp **** 	{
 430              		.loc 2 123 0
 431 0006 0D4B     		ldr	r3, .L36
 432 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 433 000a 44B9     		cbnz	r4, .L35
 131:Core/Src/robot/robot.cpp **** 		return false;
 434              		.loc 2 131 0
 435 000c B6EE000A 		vmov.f32	s0, #5.0e-1
 436 0010 0B48     		ldr	r0, .L36+4
 437 0012 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 438              	.LVL41:
 439              	.L33:
 134:Core/Src/robot/robot.cpp **** 
 440              		.loc 2 134 0
 441 0016 2046     		mov	r0, r4
 442 0018 BDEC028B 		vldm	sp!, {d8}
 443              	.LCFI7:
 444              		.cfi_remember_state
 445              		.cfi_restore 80
 446              		.cfi_restore 81
 447              		.cfi_def_cfa_offset 16
 448 001c 38BD     		pop	{r3, r4, r5, pc}
 449              	.L35:
 450              	.LCFI8:
 451              		.cfi_restore_state
 125:Core/Src/robot/robot.cpp **** 		steering.reset_angle(0);
 452              		.loc 2 125 0
 453 001e 9FED098A 		vldr.32	s16, .L36+8
 454 0022 074D     		ldr	r5, .L36+4
 455 0024 B0EE480A 		vmov.f32	s0, s16
 456 0028 2846     		mov	r0, r5
 457 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 458              	.LVL42:
 459              	.LBB120:
 460              	.LBB121:
 461              		.file 4 "Core/Inc/devs/steering.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 17


   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 18


  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/** 
  63:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  64:Core/Inc/devs/steering.h **** 	 * 
  65:Core/Inc/devs/steering.h **** 	 */
  66:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  67:Core/Inc/devs/steering.h **** 
  68:Core/Inc/devs/steering.h **** 	/**
  69:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  70:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  71:Core/Inc/devs/steering.h **** 	 * \return void
  72:Core/Inc/devs/steering.h **** 	 */
  73:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
 462              		.loc 4 73 0
 463 002e B0EE480A 		vmov.f32	s0, s16
 464 0032 05F10C00 		add	r0, r5, #12
 465 0036 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 466              	.LVL43:
 467              	.LBE121:
 468              	.LBE120:
 127:Core/Src/robot/robot.cpp **** 	}
 469              		.loc 2 127 0
 470 003a ECE7     		b	.L33
 471              	.L37:
 472              		.align	2
 473              	.L36:
 474 003c 00000000 		.word	.LANCHOR4
 475 0040 00000000 		.word	steering
 476 0044 00000000 		.word	0
 477              		.cfi_endproc
 478              	.LFE493:
 480              		.section	.text._Z8move_legif,"ax",%progbits
 481              		.align	1
 482              		.global	_Z8move_legif
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 486              		.fpu fpv4-sp-d16
 488              	_Z8move_legif:
 489              	.LFB495:
 159:Core/Src/robot/robot.cpp **** 	float del_speed = 0;
 490              		.loc 2 159 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              	.LVL44:
 495 0000 38B5     		push	{r3, r4, r5, lr}
 496              	.LCFI9:
 497              		.cfi_def_cfa_offset 16
 498              		.cfi_offset 3, -16
 499              		.cfi_offset 4, -12
 500              		.cfi_offset 5, -8
 501              		.cfi_offset 14, -4
 502 0002 2DED028B 		vpush.64	{d8}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 19


 503              	.LCFI10:
 504              		.cfi_def_cfa_offset 24
 505              		.cfi_offset 80, -24
 506              		.cfi_offset 81, -20
 507              	.LVL45:
 163:Core/Src/robot/robot.cpp **** 
 508              		.loc 2 163 0
 509 0006 1028     		cmp	r0, #16
 510 0008 27D0     		beq	.L40
 163:Core/Src/robot/robot.cpp **** 
 511              		.loc 2 163 0 is_stmt 0 discriminator 2
 512 000a 1E28     		cmp	r0, #30
 513 000c 23D0     		beq	.L43
 163:Core/Src/robot/robot.cpp **** 
 514              		.loc 2 163 0
 515 000e 144B     		ldr	r3, .L44
 516              	.L39:
 163:Core/Src/robot/robot.cpp **** 
 517              		.loc 2 163 0 discriminator 6
 518 0010 144D     		ldr	r5, .L44+4
 519 0012 2B60     		str	r3, [r5]	@ float
 520              	.LVL46:
 521              	.LBB122:
 522              	.LBB123:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 523              		.loc 3 48 0 is_stmt 1 discriminator 6
 524 0014 144C     		ldr	r4, .L44+8
 525 0016 2046     		mov	r0, r4
 526              	.LVL47:
 527 0018 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 528              	.LVL48:
 529 001c B0EE408A 		vmov.f32	s16, s0
 530              	.LVL49:
 531              	.LBE123:
 532              	.LBE122:
 533              	.LBB124:
 534              	.LBB125:
 535 0020 04F15C00 		add	r0, r4, #92
 536 0024 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 537              	.LVL50:
 538              	.LBE125:
 539              	.LBE124:
 165:Core/Src/robot/robot.cpp **** 	//del_speed = 0;
 540              		.loc 2 165 0 discriminator 6
 541 0028 38EE408A 		vsub.f32	s16, s16, s0
 542 002c 95ED000A 		vldr.32	s0, [r5]
 543 0030 28EE008A 		vmul.f32	s16, s16, s0
 544              	.LVL51:
 167:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 545              		.loc 2 167 0 discriminator 6
 546 0034 3C3C     		subs	r4, r4, #60
 547 0036 30EE480A 		vsub.f32	s0, s0, s16
 548 003a 2046     		mov	r0, r4
 549 003c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 550              	.LVL52:
 168:Core/Src/robot/robot.cpp **** 	// printf("\t%d \t%d \t", (int)(leg_speed + del_speed), (int)(leg_speed - del_speed));
 551              		.loc 2 168 0 discriminator 6
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 20


 552 0040 95ED000A 		vldr.32	s0, [r5]
 553 0044 38EE000A 		vadd.f32	s0, s16, s0
 554 0048 04F15C00 		add	r0, r4, #92
 555 004c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 556              	.LVL53:
 170:Core/Src/robot/robot.cpp **** void move_steering(int steps, float angle)
 557              		.loc 2 170 0 discriminator 6
 558 0050 BDEC028B 		vldm	sp!, {d8}
 559              	.LCFI11:
 560              		.cfi_remember_state
 561              		.cfi_restore 80
 562              		.cfi_restore 81
 563              		.cfi_def_cfa_offset 16
 564              	.LVL54:
 565 0054 38BD     		pop	{r3, r4, r5, pc}
 566              	.LVL55:
 567              	.L43:
 568              	.LCFI12:
 569              		.cfi_restore_state
 163:Core/Src/robot/robot.cpp **** 
 570              		.loc 2 163 0
 571 0056 054B     		ldr	r3, .L44+12
 572 0058 DAE7     		b	.L39
 573              	.L40:
 574 005a 044B     		ldr	r3, .L44+12
 575 005c D8E7     		b	.L39
 576              	.L45:
 577 005e 00BF     		.align	2
 578              	.L44:
 579 0060 0000A040 		.word	1084227584
 580 0064 00000000 		.word	.LANCHOR5
 581 0068 3C000000 		.word	leg+60
 582 006c 55555540 		.word	1079334229
 583              		.cfi_endproc
 584              	.LFE495:
 586              		.section	.text._Z13move_steeringif,"ax",%progbits
 587              		.align	1
 588              		.global	_Z13move_steeringif
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	_Z13move_steeringif:
 595              	.LFB496:
 172:Core/Src/robot/robot.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 596              		.loc 2 172 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              	.LVL56:
 601 0000 08B5     		push	{r3, lr}
 602              	.LCFI13:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 3, -8
 605              		.cfi_offset 14, -4
 606 0002 2DED028B 		vpush.64	{d8}
 607              	.LCFI14:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 21


 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 80, -16
 610              		.cfi_offset 81, -12
 611 0006 B0EE408A 		vmov.f32	s16, s0
 173:Core/Src/robot/robot.cpp **** 	{
 612              		.loc 2 173 0
 613 000a 4848     		ldr	r0, .L79
 614              	.LVL57:
 615 000c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 616              	.LVL58:
 617 0010 0028     		cmp	r0, #0
 618 0012 4FD1     		bne	.L47
 175:Core/Src/robot/robot.cpp **** 		if ((steering.get_angle() > -steering_angle_limit) && (steering.get_angle() < steering_angle_limi
 619              		.loc 2 175 0
 620 0014 4648     		ldr	r0, .L79+4
 621 0016 FFF7FEFF 		bl	printf
 622              	.LVL59:
 623              	.LBB126:
 624              	.LBB127:
  74:Core/Inc/devs/steering.h **** 
  75:Core/Inc/devs/steering.h **** 	/**
  76:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  77:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  78:Core/Inc/devs/steering.h **** 	 * \param void
  79:Core/Inc/devs/steering.h **** 	 * \return void
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/**
  84:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
  85:Core/Inc/devs/steering.h **** 	 */
  86:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
  87:Core/Inc/devs/steering.h **** 
  88:Core/Inc/devs/steering.h **** 	/**
  89:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
  90:Core/Inc/devs/steering.h **** 	 */
  91:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 625              		.loc 4 91 0
 626 001a 4648     		ldr	r0, .L79+8
 627 001c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 628              	.LVL60:
 629              	.LBE127:
 630              	.LBE126:
 176:Core/Src/robot/robot.cpp **** 		{
 631              		.loc 2 176 0
 632 0020 DFED457A 		vldr.32	s15, .L79+12
 633 0024 B4EEE70A 		vcmpe.f32	s0, s15
 634 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 635 002c 23DD     		ble	.L48
 636              	.LVL61:
 637              	.LBB128:
 638              	.LBB129:
 639              		.loc 4 91 0
 640 002e 4148     		ldr	r0, .L79+8
 641 0030 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 642              	.LVL62:
 643              	.LBE129:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 22


 644              	.LBE128:
 176:Core/Src/robot/robot.cpp **** 		{
 645              		.loc 2 176 0
 646 0034 DFED417A 		vldr.32	s15, .L79+16
 647 0038 B4EEE70A 		vcmpe.f32	s0, s15
 648 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 649 0040 19D5     		bpl	.L48
 178:Core/Src/robot/robot.cpp **** 				steering.set_omega(steering_speed);
 650              		.loc 2 178 0
 651 0042 3F4B     		ldr	r3, .L79+20
 652 0044 D3ED007A 		vldr.32	s15, [r3]
 653 0048 3E4B     		ldr	r3, .L79+24
 654 004a 93ED007A 		vldr.32	s14, [r3]
 655 004e 77EE876A 		vadd.f32	s13, s15, s14
 656 0052 F4EEC86A 		vcmpe.f32	s13, s16
 657 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 658 005a 1CD4     		bmi	.L76
 181:Core/Src/robot/robot.cpp **** 				steering.set_omega(-steering_speed);
 659              		.loc 2 181 0
 660 005c 77EEC77A 		vsub.f32	s15, s15, s14
 661 0060 F4EEC87A 		vcmpe.f32	s15, s16
 662 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 663 0068 1BDD     		ble	.L72
 182:Core/Src/robot/robot.cpp **** 
 664              		.loc 2 182 0
 665 006a 9FED370A 		vldr.32	s0, .L79+28
 666 006e 3748     		ldr	r0, .L79+32
 667 0070 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 668              	.LVL63:
 669 0074 0CE0     		b	.L46
 670              	.L48:
 671              	.LVL64:
 672              	.LBB130:
 673              	.LBB131:
 674              		.loc 4 91 0 discriminator 4
 675 0076 2F48     		ldr	r0, .L79+8
 676 0078 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 677              	.LVL65:
 678              	.LBE131:
 679              	.LBE130:
 189:Core/Src/robot/robot.cpp **** 		}
 680              		.loc 2 189 0 discriminator 4
 681 007c B5EEC00A 		vcmpe.f32	s0, #0
 682 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 683 0084 13DD     		ble	.L71
 189:Core/Src/robot/robot.cpp **** 		}
 684              		.loc 2 189 0 is_stmt 0
 685 0086 9FED300A 		vldr.32	s0, .L79+28
 686              	.L53:
 189:Core/Src/robot/robot.cpp **** 		}
 687              		.loc 2 189 0 discriminator 4
 688 008a 3048     		ldr	r0, .L79+32
 689 008c FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 690              	.LVL66:
 691              	.L46:
 237:Core/Src/robot/robot.cpp **** 
 692              		.loc 2 237 0 is_stmt 1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 23


 693 0090 BDEC028B 		vldm	sp!, {d8}
 694              	.LCFI15:
 695              		.cfi_remember_state
 696              		.cfi_restore 80
 697              		.cfi_restore 81
 698              		.cfi_def_cfa_offset 8
 699              	.LVL67:
 700 0094 08BD     		pop	{r3, pc}
 701              	.LVL68:
 702              	.L76:
 703              	.LCFI16:
 704              		.cfi_restore_state
 179:Core/Src/robot/robot.cpp **** 
 705              		.loc 2 179 0
 706 0096 9FED2E0A 		vldr.32	s0, .L79+36
 707 009a 2C48     		ldr	r0, .L79+32
 708 009c FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 709              	.LVL69:
 710 00a0 F6E7     		b	.L46
 711              	.L72:
 185:Core/Src/robot/robot.cpp **** 		}
 712              		.loc 2 185 0
 713 00a2 9FED2C0A 		vldr.32	s0, .L79+40
 714 00a6 2948     		ldr	r0, .L79+32
 715 00a8 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 716              	.LVL70:
 717 00ac F0E7     		b	.L46
 718              	.L71:
 189:Core/Src/robot/robot.cpp **** 		}
 719              		.loc 2 189 0
 720 00ae 9FED280A 		vldr.32	s0, .L79+36
 721 00b2 EAE7     		b	.L53
 722              	.L47:
 192:Core/Src/robot/robot.cpp **** 	{
 723              		.loc 2 192 0
 724 00b4 1D48     		ldr	r0, .L79
 725 00b6 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 726              	.LVL71:
 727 00ba 0128     		cmp	r0, #1
 728 00bc 08D0     		beq	.L77
 234:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 729              		.loc 2 234 0
 730 00be 2648     		ldr	r0, .L79+44
 731 00c0 FFF7FEFF 		bl	printf
 732              	.LVL72:
 235:Core/Src/robot/robot.cpp **** 	}
 733              		.loc 2 235 0
 734 00c4 9FED230A 		vldr.32	s0, .L79+40
 735 00c8 2048     		ldr	r0, .L79+32
 736 00ca FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 737              	.LVL73:
 237:Core/Src/robot/robot.cpp **** 
 738              		.loc 2 237 0
 739 00ce DFE7     		b	.L46
 740              	.L77:
 194:Core/Src/robot/robot.cpp **** 		if (steering.get_angle() > (tolerance))
 741              		.loc 2 194 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 24


 742 00d0 2248     		ldr	r0, .L79+48
 743 00d2 FFF7FEFF 		bl	printf
 744              	.LVL74:
 745              	.LBB132:
 746              	.LBB133:
 747              		.loc 4 91 0
 748 00d6 1748     		ldr	r0, .L79+8
 749 00d8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 750              	.LVL75:
 751              	.LBE133:
 752              	.LBE132:
 195:Core/Src/robot/robot.cpp **** 		{
 753              		.loc 2 195 0
 754 00dc 194B     		ldr	r3, .L79+24
 755 00de D3ED007A 		vldr.32	s15, [r3]
 756 00e2 F4EEC07A 		vcmpe.f32	s15, s0
 757 00e6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 758 00ea 12D4     		bmi	.L78
 759              	.LVL76:
 760              	.LBB134:
 761              	.LBB135:
 762              		.loc 4 91 0
 763 00ec 1148     		ldr	r0, .L79+8
 764 00ee FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 765              	.LVL77:
 766              	.LBE135:
 767              	.LBE134:
 200:Core/Src/robot/robot.cpp **** 		{
 768              		.loc 2 200 0
 769 00f2 144B     		ldr	r3, .L79+24
 770 00f4 D3ED007A 		vldr.32	s15, [r3]
 771 00f8 F1EE677A 		vneg.f32	s15, s15
 772 00fc F4EEC07A 		vcmpe.f32	s15, s0
 773 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 774 0104 0BDD     		ble	.L74
 202:Core/Src/robot/robot.cpp **** 		}
 775              		.loc 2 202 0
 776 0106 9FED120A 		vldr.32	s0, .L79+36
 777 010a 1048     		ldr	r0, .L79+32
 778 010c FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 779              	.LVL78:
 780 0110 BEE7     		b	.L46
 781              	.L78:
 197:Core/Src/robot/robot.cpp **** 		}
 782              		.loc 2 197 0
 783 0112 9FED0D0A 		vldr.32	s0, .L79+28
 784 0116 0D48     		ldr	r0, .L79+32
 785 0118 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 786              	.LVL79:
 787 011c B8E7     		b	.L46
 788              	.L74:
 207:Core/Src/robot/robot.cpp **** 		}
 789              		.loc 2 207 0
 790 011e 9FED0D0A 		vldr.32	s0, .L79+40
 791 0122 0A48     		ldr	r0, .L79+32
 792 0124 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 793              	.LVL80:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 25


 794 0128 B2E7     		b	.L46
 795              	.L80:
 796 012a 00BF     		.align	2
 797              	.L79:
 798 012c 00000000 		.word	leg
 799 0130 00000000 		.word	.LC0
 800 0134 0C000000 		.word	steering+12
 801 0138 7CD920BE 		.word	-1105143428
 802 013c 7CD9203E 		.word	1042340220
 803 0140 00000000 		.word	.LANCHOR6
 804 0144 00000000 		.word	.LANCHOR7
 805 0148 9A9919BF 		.word	-1088841318
 806 014c 00000000 		.word	steering
 807 0150 9A99193F 		.word	1058642330
 808 0154 00000000 		.word	0
 809 0158 10000000 		.word	.LC2
 810 015c 08000000 		.word	.LC1
 811              		.cfi_endproc
 812              	.LFE496:
 814              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 815              		.align	1
 816              		.global	_Z21calculate_robot_anglev
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	_Z21calculate_robot_anglev:
 823              	.LFB497:
 240:Core/Src/robot/robot.cpp **** 	//*/
 824              		.loc 2 240 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828 0000 08B5     		push	{r3, lr}
 829              	.LCFI17:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 3, -8
 832              		.cfi_offset 14, -4
 833 0002 2DED028B 		vpush.64	{d8}
 834              	.LCFI18:
 835              		.cfi_def_cfa_offset 16
 836              		.cfi_offset 80, -16
 837              		.cfi_offset 81, -12
 242:Core/Src/robot/robot.cpp **** 	{
 838              		.loc 2 242 0
 839 0006 0F48     		ldr	r0, .L86
 840 0008 FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 841              	.LVL81:
 842 000c 68B9     		cbnz	r0, .L85
 248:Core/Src/robot/robot.cpp **** 	}
 843              		.loc 2 248 0
 844 000e 0E4B     		ldr	r3, .L86+4
 845 0010 93ED008A 		vldr.32	s16, [r3]
 846              	.LVL82:
 847              	.LBB136:
 848              	.LBB137:
 849              		.loc 4 91 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 26


 850 0014 0D48     		ldr	r0, .L86+8
 851 0016 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 852              	.LVL83:
 853              	.LBE137:
 854              	.LBE136:
 248:Core/Src/robot/robot.cpp **** 	}
 855              		.loc 2 248 0
 856 001a 38EE400A 		vsub.f32	s0, s16, s0
 857 001e 0C4B     		ldr	r3, .L86+12
 858 0020 83ED000A 		vstr.32	s0, [r3]
 859              	.L81:
 274:Core/Src/robot/robot.cpp **** 
 860              		.loc 2 274 0
 861 0024 BDEC028B 		vldm	sp!, {d8}
 862              	.LCFI19:
 863              		.cfi_remember_state
 864              		.cfi_restore 80
 865              		.cfi_restore 81
 866              		.cfi_def_cfa_offset 8
 867 0028 08BD     		pop	{r3, pc}
 868              	.L85:
 869              	.LCFI20:
 870              		.cfi_restore_state
 871              	.LVL84:
 872              	.LBB138:
 873              	.LBB139:
 874              		.loc 4 91 0
 875 002a 0848     		ldr	r0, .L86+8
 876 002c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 877              	.LVL85:
 878              	.LBE139:
 879              	.LBE138:
 244:Core/Src/robot/robot.cpp **** 	}
 880              		.loc 2 244 0
 881 0030 074B     		ldr	r3, .L86+12
 882 0032 D3ED007A 		vldr.32	s15, [r3]
 883 0036 30EE270A 		vadd.f32	s0, s0, s15
 884 003a 034B     		ldr	r3, .L86+4
 885 003c 83ED000A 		vstr.32	s0, [r3]
 886 0040 F0E7     		b	.L81
 887              	.L87:
 888 0042 00BF     		.align	2
 889              	.L86:
 890 0044 00000000 		.word	leg
 891 0048 00000000 		.word	.LANCHOR6
 892 004c 0C000000 		.word	steering+12
 893 0050 00000000 		.word	.LANCHOR8
 894              		.cfi_endproc
 895              	.LFE497:
 897              		.global	__aeabi_dmul
 898              		.global	__aeabi_d2f
 899              		.global	__aeabi_dcmple
 900              		.section	.text._Z2goif,"ax",%progbits
 901              		.align	1
 902              		.global	_Z2goif
 903              		.syntax unified
 904              		.thumb
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 27


 905              		.thumb_func
 906              		.fpu fpv4-sp-d16
 908              	_Z2goif:
 909              	.LFB494:
 137:Core/Src/robot/robot.cpp **** 	angle *= PI / 180;
 910              		.loc 2 137 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              	.LVL86:
 915 0000 10B5     		push	{r4, lr}
 916              	.LCFI21:
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 4, -8
 919              		.cfi_offset 14, -4
 920 0002 2DED028B 		vpush.64	{d8}
 921              	.LCFI22:
 922              		.cfi_def_cfa_offset 16
 923              		.cfi_offset 80, -16
 924              		.cfi_offset 81, -12
 925 0006 0446     		mov	r4, r0
 138:Core/Src/robot/robot.cpp **** 	move_leg(steps, angle);
 926              		.loc 2 138 0
 927 0008 10EE100A 		vmov	r0, s0
 928              	.LVL87:
 929 000c FFF7FEFF 		bl	__aeabi_f2d
 930              	.LVL88:
 931 0010 2BA3     		adr	r3, .L97+24
 932 0012 D3E90023 		ldrd	r2, [r3]
 933 0016 FFF7FEFF 		bl	__aeabi_dmul
 934              	.LVL89:
 935 001a FFF7FEFF 		bl	__aeabi_d2f
 936              	.LVL90:
 937 001e 08EE100A 		vmov	s16, r0
 938              	.LVL91:
 139:Core/Src/robot/robot.cpp **** 	move_steering(steps, angle);
 939              		.loc 2 139 0
 940 0022 00EE100A 		vmov	s0, r0
 941 0026 2046     		mov	r0, r4
 942              	.LVL92:
 943 0028 FFF7FEFF 		bl	_Z8move_legif
 944              	.LVL93:
 140:Core/Src/robot/robot.cpp **** 
 945              		.loc 2 140 0
 946 002c B0EE480A 		vmov.f32	s0, s16
 947 0030 2046     		mov	r0, r4
 948 0032 FFF7FEFF 		bl	_Z13move_steeringif
 949              	.LVL94:
 142:Core/Src/robot/robot.cpp **** 	// printf(" steps = %d\t robot_angle = %d\t steering_angle = %d\t leg_1_angle = %d\t leg_2_angle =
 950              		.loc 2 142 0
 951 0036 FFF7FEFF 		bl	_Z21calculate_robot_anglev
 952              	.LVL95:
 953              	.LBB140:
 954              	.LBB141:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 955              		.loc 3 45 0
 956 003a 1D4A     		ldr	r2, .L97+8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 28


 957 003c 1369     		ldr	r3, [r2, #16]
 958              	.LVL96:
 959              	.LBE141:
 960              	.LBE140:
 961              	.LBB142:
 962              	.LBB143:
 963 003e D26E     		ldr	r2, [r2, #108]
 964              	.LVL97:
 965              	.LBE143:
 966              	.LBE142:
 145:Core/Src/robot/robot.cpp **** 	{
 967              		.loc 2 145 0
 968 0040 1344     		add	r3, r3, r2
 969 0042 03EBD373 		add	r3, r3, r3, lsr #31
 970 0046 B4EB630F 		cmp	r4, r3, asr #1
 971 004a 27DC     		bgt	.L91
 145:Core/Src/robot/robot.cpp **** 	{
 972              		.loc 2 145 0 is_stmt 0 discriminator 1
 973 004c 194B     		ldr	r3, .L97+12
 974 004e D3ED007A 		vldr.32	s15, [r3]
 975 0052 38EE678A 		vsub.f32	s16, s16, s15
 976              	.LVL98:
 977 0056 F0EEC87A 		vabs.f32	s15, s16
 978 005a 17EE900A 		vmov	r0, s15
 979 005e FFF7FEFF 		bl	__aeabi_f2d
 980              	.LVL99:
 981 0062 11A3     		adr	r3, .L97
 982 0064 D3E90023 		ldrd	r2, [r3]
 983 0068 FFF7FEFF 		bl	__aeabi_dcmple
 984              	.LVL100:
 985 006c 08B9     		cbnz	r0, .L96
 154:Core/Src/robot/robot.cpp **** 	}
 986              		.loc 2 154 0 is_stmt 1
 987 006e 0020     		movs	r0, #0
 988 0070 15E0     		b	.L89
 989              	.L96:
 147:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 990              		.loc 2 147 0
 991 0072 9FED118A 		vldr.32	s16, .L97+16
 992 0076 0E4C     		ldr	r4, .L97+8
 993              	.LVL101:
 994 0078 B0EE480A 		vmov.f32	s0, s16
 995 007c 2046     		mov	r0, r4
 996 007e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 997              	.LVL102:
 148:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 998              		.loc 2 148 0
 999 0082 B0EE480A 		vmov.f32	s0, s16
 1000 0086 04F15C00 		add	r0, r4, #92
 1001 008a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1002              	.LVL103:
 149:Core/Src/robot/robot.cpp **** 		return true;
 1003              		.loc 2 149 0
 1004 008e B0EE480A 		vmov.f32	s0, s16
 1005 0092 0A48     		ldr	r0, .L97+20
 1006 0094 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1007              	.LVL104:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 29


 150:Core/Src/robot/robot.cpp **** 	}
 1008              		.loc 2 150 0
 1009 0098 0120     		movs	r0, #1
 1010 009a 00E0     		b	.L89
 1011              	.LVL105:
 1012              	.L91:
 154:Core/Src/robot/robot.cpp **** 	}
 1013              		.loc 2 154 0
 1014 009c 0020     		movs	r0, #0
 1015              	.LVL106:
 1016              	.L89:
 156:Core/Src/robot/robot.cpp **** 
 1017              		.loc 2 156 0
 1018 009e BDEC028B 		vldm	sp!, {d8}
 1019              	.LCFI23:
 1020              		.cfi_restore 80
 1021              		.cfi_restore 81
 1022              		.cfi_def_cfa_offset 8
 1023 00a2 10BD     		pop	{r4, pc}
 1024              	.L98:
 1025 00a4 AFF30080 		.align	3
 1026              	.L97:
 1027 00a8 9A999999 		.word	-1717986918
 1028 00ac 9999B93F 		.word	1069128089
 1029 00b0 00000000 		.word	leg
 1030 00b4 00000000 		.word	.LANCHOR6
 1031 00b8 00000000 		.word	0
 1032 00bc 00000000 		.word	steering
 1033 00c0 399D52A2 		.word	-1571644103
 1034 00c4 46DF913F 		.word	1066524486
 1035              		.cfi_endproc
 1036              	.LFE494:
 1038              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1039              		.align	1
 1040              		.global	_Z15calculate_datasv
 1041              		.syntax unified
 1042              		.thumb
 1043              		.thumb_func
 1044              		.fpu fpv4-sp-d16
 1046              	_Z15calculate_datasv:
 1047              	.LFB498:
 277:Core/Src/robot/robot.cpp **** 	leg[0].calculate_omega();
 1048              		.loc 2 277 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 16
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052 0000 10B5     		push	{r4, lr}
 1053              	.LCFI24:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 4, -8
 1056              		.cfi_offset 14, -4
 1057 0002 84B0     		sub	sp, sp, #16
 1058              	.LCFI25:
 1059              		.cfi_def_cfa_offset 24
 278:Core/Src/robot/robot.cpp **** 	leg[1].calculate_omega();
 1060              		.loc 2 278 0
 1061 0004 2E4C     		ldr	r4, .L103+24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 30


 1062 0006 2046     		mov	r0, r4
 1063 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1064              	.LVL107:
 279:Core/Src/robot/robot.cpp **** 	steering.calculate_omega();
 1065              		.loc 2 279 0
 1066 000c 04F15C00 		add	r0, r4, #92
 1067 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1068              	.LVL108:
 1069              	.LBB144:
 1070              	.LBB145:
  81:Core/Inc/devs/steering.h **** 
 1071              		.loc 4 81 0
 1072 0014 2B48     		ldr	r0, .L103+28
 1073 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1074              	.LVL109:
 1075              	.LBE145:
 1076              	.LBE144:
 281:Core/Src/robot/robot.cpp **** 	HAL_ADC_Start(&hadc1);
 1077              		.loc 2 281 0
 1078 001a 01AC     		add	r4, sp, #4
 1079 001c 0A21     		movs	r1, #10
 1080 001e 2046     		mov	r0, r4
 1081 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1082              	.LVL110:
 1083 0024 284B     		ldr	r3, .L103+32
 1084 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1085 002a 83E80700 		stm	r3, {r0, r1, r2}
 282:Core/Src/robot/robot.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 1086              		.loc 2 282 0
 1087 002e 274C     		ldr	r4, .L103+36
 1088 0030 2046     		mov	r0, r4
 1089 0032 FFF7FEFF 		bl	HAL_ADC_Start
 1090              	.LVL111:
 283:Core/Src/robot/robot.cpp **** 	{
 1091              		.loc 2 283 0
 1092 0036 0521     		movs	r1, #5
 1093 0038 2046     		mov	r0, r4
 1094 003a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1095              	.LVL112:
 1096 003e 08B1     		cbz	r0, .L102
 1097              	.L99:
 289:Core/Src/robot/robot.cpp **** 
 1098              		.loc 2 289 0
 1099 0040 04B0     		add	sp, sp, #16
 1100              	.LCFI26:
 1101              		.cfi_remember_state
 1102              		.cfi_def_cfa_offset 8
 1103              		@ sp needed
 1104 0042 10BD     		pop	{r4, pc}
 1105              	.L102:
 1106              	.LCFI27:
 1107              		.cfi_restore_state
 285:Core/Src/robot/robot.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 1108              		.loc 2 285 0
 1109 0044 2046     		mov	r0, r4
 1110 0046 FFF7FEFF 		bl	HAL_ADC_GetValue
 1111              	.LVL113:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 31


 1112 004a 07EE900A 		vmov	s15, r0	@ int
 1113 004e F8EE677A 		vcvt.f32.u32	s15, s15
 1114 0052 1F4C     		ldr	r4, .L103+40
 1115 0054 C4ED007A 		vstr.32	s15, [r4]
 286:Core/Src/robot/robot.cpp **** 		printf("\n\tDistance = %d", (int)robotx);
 1116              		.loc 2 286 0
 1117 0058 17EE900A 		vmov	r0, s15
 1118 005c FFF7FEFF 		bl	__aeabi_f2d
 1119              	.LVL114:
 1120 0060 11A3     		adr	r3, .L103
 1121 0062 D3E90023 		ldrd	r2, [r3]
 1122 0066 FFF7FEFF 		bl	__aeabi_dmul
 1123              	.LVL115:
 1124 006a 0022     		movs	r2, #0
 1125 006c 194B     		ldr	r3, .L103+44
 1126 006e FFF7FEFF 		bl	__aeabi_dmul
 1127              	.LVL116:
 1128 0072 9FED0F1B 		vldr.64	d1, .L103+8
 1129 0076 41EC100B 		vmov	d0, r0, r1
 1130 007a FFF7FEFF 		bl	pow
 1131              	.LVL117:
 1132 007e 0EA3     		adr	r3, .L103+16
 1133 0080 D3E90023 		ldrd	r2, [r3]
 1134 0084 51EC100B 		vmov	r0, r1, d0
 1135 0088 FFF7FEFF 		bl	__aeabi_dmul
 1136              	.LVL118:
 1137 008c FFF7FEFF 		bl	__aeabi_d2f
 1138              	.LVL119:
 1139 0090 07EE900A 		vmov	s15, r0
 1140 0094 2060     		str	r0, [r4]	@ float
 287:Core/Src/robot/robot.cpp **** 	}
 1141              		.loc 2 287 0
 1142 0096 FDEEE77A 		vcvt.s32.f32	s15, s15
 1143 009a 17EE901A 		vmov	r1, s15	@ int
 1144 009e 0E48     		ldr	r0, .L103+48
 1145 00a0 FFF7FEFF 		bl	printf
 1146              	.LVL120:
 289:Core/Src/robot/robot.cpp **** 
 1147              		.loc 2 289 0
 1148 00a4 CCE7     		b	.L99
 1149              	.L104:
 1150 00a6 00BF     		.align	3
 1151              	.L103:
 1152 00a8 66666666 		.word	1717986918
 1153 00ac 66660A40 		.word	1074423398
 1154 00b0 598638D6 		.word	-700938663
 1155 00b4 C56DF1BF 		.word	-1074696763
 1156 00b8 F6285C8F 		.word	-1889785610
 1157 00bc C2154F40 		.word	1078924738
 1158 00c0 00000000 		.word	leg
 1159 00c4 0C000000 		.word	steering+12
 1160 00c8 00000000 		.word	.LANCHOR1
 1161 00cc 00000000 		.word	hadc1
 1162 00d0 00000000 		.word	.LANCHOR9
 1163 00d4 0000303F 		.word	1060110336
 1164 00d8 00000000 		.word	.LC3
 1165              		.cfi_endproc
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 32


 1166              	.LFE498:
 1168              		.section	.text._Z19initialize_positionv,"ax",%progbits
 1169              		.align	1
 1170              		.global	_Z19initialize_positionv
 1171              		.syntax unified
 1172              		.thumb
 1173              		.thumb_func
 1174              		.fpu fpv4-sp-d16
 1176              	_Z19initialize_positionv:
 1177              	.LFB491:
  29:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
 1178              		.loc 2 29 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182 0000 70B5     		push	{r4, r5, r6, lr}
 1183              	.LCFI28:
 1184              		.cfi_def_cfa_offset 16
 1185              		.cfi_offset 4, -16
 1186              		.cfi_offset 5, -12
 1187              		.cfi_offset 6, -8
 1188              		.cfi_offset 14, -4
 1189 0002 2DED028B 		vpush.64	{d8}
 1190              	.LCFI29:
 1191              		.cfi_def_cfa_offset 24
 1192              		.cfi_offset 80, -24
 1193              		.cfi_offset 81, -20
  30:Core/Src/robot/robot.cpp **** 	while (true)
 1194              		.loc 2 30 0
 1195 0006 FFF7FEFF 		bl	HAL_GetTick
 1196              	.LVL121:
 1197 000a 0546     		mov	r5, r0
 1198              	.LVL122:
 1199              	.L106:
  33:Core/Src/robot/robot.cpp **** 		{
 1200              		.loc 2 33 0
 1201 000c FFF7FEFF 		bl	HAL_GetTick
 1202              	.LVL123:
 1203 0010 401B     		subs	r0, r0, r5
 1204 0012 0928     		cmp	r0, #9
 1205 0014 FAD9     		bls	.L106
  35:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Leg_Orientation\t");
 1206              		.loc 2 35 0
 1207 0016 FFF7FEFF 		bl	HAL_GetTick
 1208              	.LVL124:
 1209 001a 0546     		mov	r5, r0
 1210              	.LVL125:
  36:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1211              		.loc 2 36 0
 1212 001c 2848     		ldr	r0, .L113
 1213              	.LVL126:
 1214 001e FFF7FEFF 		bl	printf
 1215              	.LVL127:
  37:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1216              		.loc 2 37 0
 1217 0022 FFF7FEFF 		bl	_Z15calculate_datasv
 1218              	.LVL128:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 33


  38:Core/Src/robot/robot.cpp **** 				break;
 1219              		.loc 2 38 0
 1220 0026 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1221              	.LVL129:
 1222 002a 0028     		cmp	r0, #0
 1223 002c EED0     		beq	.L106
 1224              	.LBB146:
  42:Core/Src/robot/robot.cpp **** 	{
 1225              		.loc 2 42 0
 1226 002e 0024     		movs	r4, #0
 1227 0030 00E0     		b	.L110
 1228              	.LVL130:
 1229              	.L109:
  42:Core/Src/robot/robot.cpp **** 	{
 1230              		.loc 2 42 0 is_stmt 0 discriminator 2
 1231 0032 0134     		adds	r4, r4, #1
 1232              	.LVL131:
 1233              	.L110:
  42:Core/Src/robot/robot.cpp **** 	{
 1234              		.loc 2 42 0 discriminator 1
 1235 0034 234B     		ldr	r3, .L113+4
 1236 0036 9C42     		cmp	r4, r3
 1237 0038 20DC     		bgt	.L111
  44:Core/Src/robot/robot.cpp **** 		{
 1238              		.loc 2 44 0 is_stmt 1
 1239 003a FFF7FEFF 		bl	HAL_GetTick
 1240              	.LVL132:
 1241 003e 401B     		subs	r0, r0, r5
 1242 0040 0928     		cmp	r0, #9
 1243 0042 F6D9     		bls	.L109
  46:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1244              		.loc 2 46 0
 1245 0044 FFF7FEFF 		bl	HAL_GetTick
 1246              	.LVL133:
 1247 0048 0546     		mov	r5, r0
 1248              	.LVL134:
  47:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1249              		.loc 2 47 0
 1250 004a 1F48     		ldr	r0, .L113+8
 1251              	.LVL135:
 1252 004c FFF7FEFF 		bl	printf
 1253              	.LVL136:
  48:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1254              		.loc 2 48 0
 1255 0050 FFF7FEFF 		bl	_Z15calculate_datasv
 1256              	.LVL137:
  49:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1257              		.loc 2 49 0
 1258 0054 9FED1D8A 		vldr.32	s16, .L113+12
 1259 0058 1D4E     		ldr	r6, .L113+16
 1260 005a B0EE480A 		vmov.f32	s0, s16
 1261 005e 3046     		mov	r0, r6
 1262 0060 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1263              	.LVL138:
  50:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
 1264              		.loc 2 50 0
 1265 0064 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 34


 1266 0068 06F15C00 		add	r0, r6, #92
 1267 006c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1268              	.LVL139:
  51:Core/Src/robot/robot.cpp **** 		}
 1269              		.loc 2 51 0
 1270 0070 B0EE480A 		vmov.f32	s0, s16
 1271 0074 1748     		ldr	r0, .L113+20
 1272 0076 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1273              	.LVL140:
 1274 007a DAE7     		b	.L109
 1275              	.LVL141:
 1276              	.L111:
 1277              	.LBE146:
  56:Core/Src/robot/robot.cpp **** 		{
 1278              		.loc 2 56 0
 1279 007c FFF7FEFF 		bl	HAL_GetTick
 1280              	.LVL142:
 1281 0080 401B     		subs	r0, r0, r5
 1282 0082 0928     		cmp	r0, #9
 1283 0084 FAD9     		bls	.L111
  58:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Steering_Orientation\t");
 1284              		.loc 2 58 0
 1285 0086 FFF7FEFF 		bl	HAL_GetTick
 1286              	.LVL143:
 1287 008a 0546     		mov	r5, r0
 1288              	.LVL144:
  59:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1289              		.loc 2 59 0
 1290 008c 1248     		ldr	r0, .L113+24
 1291              	.LVL145:
 1292 008e FFF7FEFF 		bl	printf
 1293              	.LVL146:
  60:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1294              		.loc 2 60 0
 1295 0092 9FED0E8A 		vldr.32	s16, .L113+12
 1296 0096 0E4C     		ldr	r4, .L113+16
 1297 0098 B0EE480A 		vmov.f32	s0, s16
 1298 009c 2046     		mov	r0, r4
 1299 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1300              	.LVL147:
  61:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1301              		.loc 2 61 0
 1302 00a2 B0EE480A 		vmov.f32	s0, s16
 1303 00a6 04F15C00 		add	r0, r4, #92
 1304 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1305              	.LVL148:
  62:Core/Src/robot/robot.cpp **** 			if (initialize_steering_position() == true)
 1306              		.loc 2 62 0
 1307 00ae FFF7FEFF 		bl	_Z15calculate_datasv
 1308              	.LVL149:
  63:Core/Src/robot/robot.cpp **** 				break;
 1309              		.loc 2 63 0
 1310 00b2 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1311              	.LVL150:
 1312 00b6 0028     		cmp	r0, #0
 1313 00b8 E0D0     		beq	.L111
  67:Core/Src/robot/robot.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 35


 1314              		.loc 2 67 0
 1315 00ba BDEC028B 		vldm	sp!, {d8}
 1316              	.LCFI30:
 1317              		.cfi_restore 80
 1318              		.cfi_restore 81
 1319              		.cfi_def_cfa_offset 16
 1320 00be 70BD     		pop	{r4, r5, r6, pc}
 1321              	.LVL151:
 1322              	.L114:
 1323              		.align	2
 1324              	.L113:
 1325 00c0 00000000 		.word	.LC4
 1326 00c4 BFC62D00 		.word	2999999
 1327 00c8 20000000 		.word	.LC5
 1328 00cc 00000000 		.word	0
 1329 00d0 00000000 		.word	leg
 1330 00d4 00000000 		.word	steering
 1331 00d8 34000000 		.word	.LC6
 1332              		.cfi_endproc
 1333              	.LFE491:
 1335              		.section	.text._Z4playv,"ax",%progbits
 1336              		.align	1
 1337              		.global	_Z4playv
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu fpv4-sp-d16
 1343              	_Z4playv:
 1344              	.LFB499:
 292:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
 1345              		.loc 2 292 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 16
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349 0000 30B5     		push	{r4, r5, lr}
 1350              	.LCFI31:
 1351              		.cfi_def_cfa_offset 12
 1352              		.cfi_offset 4, -12
 1353              		.cfi_offset 5, -8
 1354              		.cfi_offset 14, -4
 1355 0002 2DED028B 		vpush.64	{d8}
 1356              	.LCFI32:
 1357              		.cfi_def_cfa_offset 20
 1358              		.cfi_offset 80, -20
 1359              		.cfi_offset 81, -16
 1360 0006 85B0     		sub	sp, sp, #20
 1361              	.LCFI33:
 1362              		.cfi_def_cfa_offset 40
 293:Core/Src/robot/robot.cpp **** 	initial_angle = read_Orientation(10);
 1363              		.loc 2 293 0
 1364 0008 FFF7FEFF 		bl	HAL_GetTick
 1365              	.LVL152:
 1366 000c 0446     		mov	r4, r0
 1367              	.LVL153:
 294:Core/Src/robot/robot.cpp **** 
 1368              		.loc 2 294 0
 1369 000e 01AD     		add	r5, sp, #4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 36


 1370 0010 0A21     		movs	r1, #10
 1371 0012 2846     		mov	r0, r5
 1372              	.LVL154:
 1373 0014 FFF7FEFF 		bl	_Z16read_Orientationm
 1374              	.LVL155:
 1375 0018 294B     		ldr	r3, .L123
 1376 001a 95E80700 		ldm	r5, {r0, r1, r2}
 1377 001e 83E80700 		stm	r3, {r0, r1, r2}
 1378              	.L116:
 300:Core/Src/robot/robot.cpp **** 		{
 1379              		.loc 2 300 0
 1380 0022 FFF7FEFF 		bl	HAL_GetTick
 1381              	.LVL156:
 1382 0026 001B     		subs	r0, r0, r4
 1383 0028 0928     		cmp	r0, #9
 1384 002a FAD9     		bls	.L116
 302:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_to_start\t");
 1385              		.loc 2 302 0
 1386 002c FFF7FEFF 		bl	HAL_GetTick
 1387              	.LVL157:
 1388 0030 0446     		mov	r4, r0
 1389              	.LVL158:
 303:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1390              		.loc 2 303 0
 1391 0032 2448     		ldr	r0, .L123+4
 1392              	.LVL159:
 1393 0034 FFF7FEFF 		bl	printf
 1394              	.LVL160:
 304:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1395              		.loc 2 304 0
 1396 0038 FFF7FEFF 		bl	_Z15calculate_datasv
 1397              	.LVL161:
 305:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1398              		.loc 2 305 0
 1399 003c 9FED228A 		vldr.32	s16, .L123+8
 1400 0040 224D     		ldr	r5, .L123+12
 1401 0042 B0EE480A 		vmov.f32	s0, s16
 1402 0046 2846     		mov	r0, r5
 1403 0048 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1404              	.LVL162:
 306:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
 1405              		.loc 2 306 0
 1406 004c B0EE480A 		vmov.f32	s0, s16
 1407 0050 05F15C00 		add	r0, r5, #92
 1408 0054 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1409              	.LVL163:
 307:Core/Src/robot/robot.cpp **** 			if (ROBOT_START_FLAG)
 1410              		.loc 2 307 0
 1411 0058 B0EE480A 		vmov.f32	s0, s16
 1412 005c 1C48     		ldr	r0, .L123+16
 1413 005e FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1414              	.LVL164:
 308:Core/Src/robot/robot.cpp **** 				break;
 1415              		.loc 2 308 0
 1416 0062 1C4B     		ldr	r3, .L123+20
 1417 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 0066 002B     		cmp	r3, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 37


 1419 0068 DBD0     		beq	.L116
 1420              	.LBB147:
 312:Core/Src/robot/robot.cpp **** 	{
 1421              		.loc 2 312 0
 1422 006a 0025     		movs	r5, #0
 1423              	.L121:
 1424              	.LVL165:
 312:Core/Src/robot/robot.cpp **** 	{
 1425              		.loc 2 312 0 is_stmt 0 discriminator 1
 1426 006c 052D     		cmp	r5, #5
 1427 006e 22DC     		bgt	.L118
 1428              	.L119:
 322:Core/Src/robot/robot.cpp **** 			{
 1429              		.loc 2 322 0 is_stmt 1
 1430 0070 FFF7FEFF 		bl	HAL_GetTick
 1431              	.LVL166:
 1432 0074 001B     		subs	r0, r0, r4
 1433 0076 0928     		cmp	r0, #9
 1434 0078 FAD9     		bls	.L119
 324:Core/Src/robot/robot.cpp **** 				// printf("\tstep=%d\t", i);
 1435              		.loc 2 324 0
 1436 007a FFF7FEFF 		bl	HAL_GetTick
 1437              	.LVL167:
 1438 007e 0446     		mov	r4, r0
 1439              	.LVL168:
 326:Core/Src/robot/robot.cpp **** 				if (go(steps[i], -angles[i]) == true)
 1440              		.loc 2 326 0
 1441 0080 FFF7FEFF 		bl	_Z15calculate_datasv
 1442              	.LVL169:
 327:Core/Src/robot/robot.cpp **** 					break;
 1443              		.loc 2 327 0
 1444 0084 A900     		lsls	r1, r5, #2
 1445 0086 144A     		ldr	r2, .L123+24
 1446 0088 0A44     		add	r2, r2, r1
 1447 008a D2ED007A 		vldr.32	s15, [r2]
 1448 008e 134B     		ldr	r3, .L123+28
 1449 0090 0B44     		add	r3, r3, r1
 1450 0092 93ED000A 		vldr.32	s0, [r3]
 1451 0096 B1EE400A 		vneg.f32	s0, s0
 1452 009a FDEEE77A 		vcvt.s32.f32	s15, s15
 1453 009e 17EE900A 		vmov	r0, s15	@ int
 1454 00a2 FFF7FEFF 		bl	_Z2goif
 1455              	.LVL170:
 1456 00a6 0028     		cmp	r0, #0
 1457 00a8 E2D0     		beq	.L119
 331:Core/Src/robot/robot.cpp **** 	}
 1458              		.loc 2 331 0 discriminator 2
 1459 00aa 2946     		mov	r1, r5
 1460 00ac 0C48     		ldr	r0, .L123+32
 1461 00ae FFF7FEFF 		bl	printf
 1462              	.LVL171:
 312:Core/Src/robot/robot.cpp **** 	{
 1463              		.loc 2 312 0 discriminator 2
 1464 00b2 0135     		adds	r5, r5, #1
 1465              	.LVL172:
 1466 00b4 DAE7     		b	.L121
 1467              	.L118:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 38


 1468              	.LBE147:
 1469              		.loc 2 334 0
 1470 00b6 0120     		movs	r0, #1
 1471 00b8 05B0     		add	sp, sp, #20
 1472              	.LCFI34:
 1473              		.cfi_def_cfa_offset 20
 1474              		@ sp needed
 1475 00ba BDEC028B 		vldm	sp!, {d8}
 1476              	.LCFI35:
 1477              		.cfi_restore 80
 1478              		.cfi_restore 81
 1479              		.cfi_def_cfa_offset 12
 1480 00be 30BD     		pop	{r4, r5, pc}
 1481              	.LVL173:
 1482              	.L124:
 1483              		.align	2
 1484              	.L123:
 1485 00c0 00000000 		.word	.LANCHOR0
 1486 00c4 00000000 		.word	.LC7
 1487 00c8 00000000 		.word	0
 1488 00cc 00000000 		.word	leg
 1489 00d0 00000000 		.word	steering
 1490 00d4 00000000 		.word	.LANCHOR10
 1491 00d8 00000000 		.word	.LANCHOR11
 1492 00dc 00000000 		.word	.LANCHOR12
 1493 00e0 14000000 		.word	.LC8
 1494              		.cfi_endproc
 1495              	.LFE499:
 1497              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1498              		.align	1
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1502              		.fpu fpv4-sp-d16
 1504              	_GLOBAL__sub_I_initial_angle:
 1505              	.LFB511:
 1506              		.loc 2 334 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510 0000 08B5     		push	{r3, lr}
 1511              	.LCFI36:
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 3, -8
 1514              		.cfi_offset 14, -4
 1515              		.loc 2 334 0
 1516 0002 4FF6FF71 		movw	r1, #65535
 1517 0006 0120     		movs	r0, #1
 1518 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1519              	.LVL174:
 1520 000c 08BD     		pop	{r3, pc}
 1521              		.cfi_endproc
 1522              	.LFE511:
 1524              		.section	.init_array,"aw",%init_array
 1525              		.align	2
 1526 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1527              		.global	angles
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 39


 1528              		.global	steps
 1529              		.global	tolerance
 1530              		.global	temp_robot_angle
 1531              		.global	robot_angle
 1532              		.global	sand_dune_crossed_flag
 1533              		.global	STEERING_FLAG
 1534              		.global	ROBOT_START_FLAG
 1535              		.global	robotx
 1536              		.global	angle
 1537              		.global	initial_angle
 1538              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1539              		.set	.LANCHOR10,. + 0
 1542              	ROBOT_START_FLAG:
 1543 0000 00       		.space	1
 1544              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1545              		.set	.LANCHOR4,. + 0
 1548              	STEERING_FLAG:
 1549 0000 00       		.space	1
 1550              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1551              		.set	.LANCHOR2,. + 0
 1554              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1555 0000 00       		.space	1
 1556              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1557              		.set	.LANCHOR3,. + 0
 1560              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1561 0000 00       		.space	1
 1562              		.section	.bss.angle,"aw",%nobits
 1563              		.align	2
 1564              		.set	.LANCHOR1,. + 0
 1567              	angle:
 1568 0000 00000000 		.space	12
 1568      00000000 
 1568      00000000 
 1569              		.section	.bss.initial_angle,"aw",%nobits
 1570              		.align	2
 1571              		.set	.LANCHOR0,. + 0
 1574              	initial_angle:
 1575 0000 00000000 		.space	12
 1575      00000000 
 1575      00000000 
 1576              		.section	.bss.robot_angle,"aw",%nobits
 1577              		.align	2
 1578              		.set	.LANCHOR6,. + 0
 1581              	robot_angle:
 1582 0000 00000000 		.space	4
 1583              		.section	.bss.robotx,"aw",%nobits
 1584              		.align	2
 1585              		.set	.LANCHOR9,. + 0
 1588              	robotx:
 1589 0000 00000000 		.space	4
 1590              		.section	.bss.sand_dune_crossed_flag,"aw",%nobits
 1593              	sand_dune_crossed_flag:
 1594 0000 00       		.space	1
 1595              		.section	.bss.temp_robot_angle,"aw",%nobits
 1596              		.align	2
 1597              		.set	.LANCHOR8,. + 0
 1600              	temp_robot_angle:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 40


 1601 0000 00000000 		.space	4
 1602              		.section	.data._ZL9leg_speed,"aw",%progbits
 1603              		.align	2
 1604              		.set	.LANCHOR5,. + 0
 1607              	_ZL9leg_speed:
 1608 0000 0000A040 		.word	1084227584
 1609              		.section	.data.angles,"aw",%progbits
 1610              		.align	2
 1611              		.set	.LANCHOR12,. + 0
 1614              	angles:
 1615 0000 00000000 		.word	0
 1616 0004 00004842 		.word	1112014848
 1617 0008 00004842 		.word	1112014848
 1618 000c 00005C42 		.word	1113325568
 1619 0010 00000000 		.word	0
 1620 0014 00000000 		.word	0
 1621 0018 00000000 		.word	0
 1622              		.section	.data.steps,"aw",%progbits
 1623              		.align	2
 1624              		.set	.LANCHOR11,. + 0
 1627              	steps:
 1628 0000 0000E040 		.word	1088421888
 1629 0004 00004041 		.word	1094713344
 1630 0008 00008041 		.word	1098907648
 1631 000c 00009041 		.word	1099956224
 1632 0010 0000C841 		.word	1103626240
 1633 0014 0000F041 		.word	1106247680
 1634 0018 00008C42 		.word	1116471296
 1635              		.section	.data.tolerance,"aw",%progbits
 1636              		.align	2
 1637              		.set	.LANCHOR7,. + 0
 1640              	tolerance:
 1641 0000 6E469D3C 		.word	1016940142
 1642              		.section	.rodata._Z13move_steeringif.str1.4,"aMS",%progbits,1
 1643              		.align	2
 1644              	.LC0:
 1645 0000 72616973 		.ascii	"raised\000"
 1645      656400
 1646 0007 00       		.space	1
 1647              	.LC1:
 1648 0008 66616C6C 		.ascii	"fallen\000"
 1648      656E00
 1649 000f 00       		.space	1
 1650              	.LC2:
 1651 0010 6E6F7468 		.ascii	"nothing\000"
 1651      696E6700 
 1652              		.section	.rodata._Z15calculate_datasv.str1.4,"aMS",%progbits,1
 1653              		.align	2
 1654              	.LC3:
 1655 0000 0A094469 		.ascii	"\012\011Distance = %d\000"
 1655      7374616E 
 1655      6365203D 
 1655      20256400 
 1656              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1657              		.align	2
 1658              	.LC4:
 1659 0000 0A09496E 		.ascii	"\012\011Initializing_Leg_Orientation\011\000"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 41


 1659      69746961 
 1659      6C697A69 
 1659      6E675F4C 
 1659      65675F4F 
 1660              	.LC5:
 1661 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1661      6974696E 
 1661      675F5468 
 1661      655F4C65 
 1661      67200900 
 1662              	.LC6:
 1663 0034 0A09496E 		.ascii	"\012\011Initializing_Steering_Orientation\011\000"
 1663      69746961 
 1663      6C697A69 
 1663      6E675F53 
 1663      74656572 
 1664              		.section	.rodata._Z4playv.str1.4,"aMS",%progbits,1
 1665              		.align	2
 1666              	.LC7:
 1667 0000 0A095761 		.ascii	"\012\011Waiting_to_start\011\000"
 1667      6974696E 
 1667      675F746F 
 1667      5F737461 
 1667      72740900 
 1668              	.LC8:
 1669 0014 09737465 		.ascii	"\011step=%d\011\000"
 1669      703D2564 
 1669      0900
 1670              		.text
 1671              	.Letext0:
 1672              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1673              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1674              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 1675              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1676              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1677              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1678              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1679              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1680              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1681              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1682              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1683              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1684              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1685              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1686              		.file 19 "Core/Inc/periphs/tim.h"
 1687              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1688              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1689              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1690              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1691              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1692              		.file 25 "Core/Inc/devs/motor.h"
 1693              		.file 26 "Core/Inc/devs/encoder.h"
 1694              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1695              		.file 28 "Core/Inc/devs/limit_switch.h"
 1696              		.file 29 "Core/Inc/periphs/usart.h"
 1697              		.file 30 "Core/Inc/periphs/adc.h"
 1698              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 42


 1699              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1700              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:161    .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:168    .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:389    .text._Z23initialize_leg_positionv:00000110 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:405    .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:412    .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:474    .text._Z28initialize_steering_positionv:0000003c $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:481    .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:488    .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:579    .text._Z8move_legif:00000060 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:587    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:594    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:798    .text._Z13move_steeringif:0000012c $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:815    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:822    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:890    .text._Z21calculate_robot_anglev:00000044 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:901    .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:908    .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1027   .text._Z2goif:000000a8 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1039   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1046   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1152   .text._Z15calculate_datasv:000000a8 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1169   .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1176   .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1325   .text._Z19initialize_positionv:000000c0 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1336   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1343   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1485   .text._Z4playv:000000c0 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1498   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1504   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1525   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1614   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1627   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1640   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1600   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1581   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1593   .bss.sand_dune_crossed_flag:00000000 sand_dune_crossed_flag
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1548   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1542   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1588   .bss.robotx:00000000 robotx
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1567   .bss.angle:00000000 angle
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1574   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1543   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1549   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1554   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1555   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1560   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1561   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1563   .bss.angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1570   .bss.initial_angle:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s 			page 44


C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1577   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1584   .bss.robotx:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1594   .bss.sand_dune_crossed_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1596   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1603   .data._ZL9leg_speed:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1607   .data._ZL9leg_speed:00000000 _ZL9leg_speed
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1610   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1623   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1636   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1643   .rodata._Z13move_steeringif.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1653   .rodata._Z15calculate_datasv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1657   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVMxtpP.s:1665   .rodata._Z4playv.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
__aeabi_f2d
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN7encoder9get_angleEv
_ZN3leg9set_omegaEf
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
leg
_ZN8steering9set_omegaEf
_ZN7encoder11reset_angleEf
steering
_ZN7encoder16get_actual_angleEv
_ZN3leg9is_raisedEv
printf
_ZN3leg26is_raised_without_deadzoneEv
__aeabi_dmul
__aeabi_d2f
__aeabi_dcmple
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
pow
hadc1
HAL_GetTick
