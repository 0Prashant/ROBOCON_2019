ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB506:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE506:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB512:
  50              		.file 2 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "robot.h"
   2:Core/Src/robot/robot.cpp **** extern leg leg[2];
   3:Core/Src/robot/robot.cpp **** extern steering steering;
   4:Core/Src/robot/robot.cpp **** 
   5:Core/Src/robot/robot.cpp **** Vec3<float> read_Orientation(uint32_t dt_millis);
   6:Core/Src/robot/robot.cpp **** Vec3<float> initial_angle;
   7:Core/Src/robot/robot.cpp **** Vec3<float> angle;
   8:Core/Src/robot/robot.cpp **** float robotx = 0;
   9:Core/Src/robot/robot.cpp **** 
  10:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  11:Core/Src/robot/robot.cpp **** bool STEERING_FLAG = false;
  12:Core/Src/robot/robot.cpp **** 
  13:Core/Src/robot/robot.cpp **** static const float robot_speed = 5.0;
  14:Core/Src/robot/robot.cpp **** static float leg_speed = robot_speed;    //17 is the maximum with safe zone
  15:Core/Src/robot/robot.cpp **** static const float steering_speed = 0.8; // 0.875 is the 100%
  16:Core/Src/robot/robot.cpp **** static const float steering_angle_limit = 9 * PI / 180;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** // static float number_of_samples = 0;
  19:Core/Src/robot/robot.cpp **** // static bool orientation_flag = false;
  20:Core/Src/robot/robot.cpp **** 
  21:Core/Src/robot/robot.cpp **** bool sand_dune_crossed_flag = false;
  22:Core/Src/robot/robot.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  23:Core/Src/robot/robot.cpp **** float tolerance = 1.1 * PI / 180;
  24:Core/Src/robot/robot.cpp **** float xdistance = 40;
  25:Core/Src/robot/robot.cpp **** 
  26:Core/Src/robot/robot.cpp **** float steps[7] = {7, 12, 17, 19, 25, 30, 50};
  27:Core/Src/robot/robot.cpp **** float angles[7] = {0, 50, 50, 60, 0, 0, 0};
  28:Core/Src/robot/robot.cpp **** 
  29:Core/Src/robot/robot.cpp **** void initialize_position(void)
  30:Core/Src/robot/robot.cpp **** {
  31:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
  32:Core/Src/robot/robot.cpp **** 	while (true)
  33:Core/Src/robot/robot.cpp **** 	{
  34:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
  35:Core/Src/robot/robot.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 3


  36:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
  37:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Leg_Orientation\t");
  38:Core/Src/robot/robot.cpp **** 			calculate_datas();
  39:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
  40:Core/Src/robot/robot.cpp **** 				break;
  41:Core/Src/robot/robot.cpp **** 		}
  42:Core/Src/robot/robot.cpp **** 	}
  43:Core/Src/robot/robot.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
  44:Core/Src/robot/robot.cpp **** 	{
  45:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
  46:Core/Src/robot/robot.cpp **** 		{
  47:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
  48:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_The_Leg \t");
  49:Core/Src/robot/robot.cpp **** 			calculate_datas();
  50:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  51:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  52:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
  53:Core/Src/robot/robot.cpp **** 		}
  54:Core/Src/robot/robot.cpp **** 	}
  55:Core/Src/robot/robot.cpp **** 	while (true)
  56:Core/Src/robot/robot.cpp **** 	{
  57:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
  58:Core/Src/robot/robot.cpp **** 		{
  59:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
  60:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Steering_Orientation\t");
  61:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  62:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  63:Core/Src/robot/robot.cpp **** 			calculate_datas();
  64:Core/Src/robot/robot.cpp **** 			if (initialize_steering_position() == true)
  65:Core/Src/robot/robot.cpp **** 				break;
  66:Core/Src/robot/robot.cpp **** 		}
  67:Core/Src/robot/robot.cpp **** 	}
  68:Core/Src/robot/robot.cpp **** }
  69:Core/Src/robot/robot.cpp **** 
  70:Core/Src/robot/robot.cpp **** bool initialize_leg_position(void)
  71:Core/Src/robot/robot.cpp **** {
  72:Core/Src/robot/robot.cpp **** 	float initial_tolerance = 4;
  73:Core/Src/robot/robot.cpp **** 	float leg_initial_position = 90;
  74:Core/Src/robot/robot.cpp **** 	static bool leg0_flag = false;
  75:Core/Src/robot/robot.cpp **** 	static bool leg1_flag = false;
  76:Core/Src/robot/robot.cpp **** 
  77:Core/Src/robot/robot.cpp **** 	//  printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[
  78:Core/Src/robot/robot.cpp **** 	//  , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
  79:Core/Src/robot/robot.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
  80:Core/Src/robot/robot.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
  81:Core/Src/robot/robot.cpp **** 	{
  82:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
  83:Core/Src/robot/robot.cpp **** 		leg0_flag = true;
  84:Core/Src/robot/robot.cpp **** 	}
  85:Core/Src/robot/robot.cpp **** 	else
  86:Core/Src/robot/robot.cpp **** 	{
  87:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(5);
  88:Core/Src/robot/robot.cpp **** 		leg0_flag = false;
  89:Core/Src/robot/robot.cpp **** 	}
  90:Core/Src/robot/robot.cpp **** 
  91:Core/Src/robot/robot.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
  92:Core/Src/robot/robot.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[0].get_
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 4


  93:Core/Src/robot/robot.cpp **** 	{
  94:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
  95:Core/Src/robot/robot.cpp **** 		leg1_flag = true;
  96:Core/Src/robot/robot.cpp **** 	}
  97:Core/Src/robot/robot.cpp **** 	else
  98:Core/Src/robot/robot.cpp **** 	{
  99:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(5);
 100:Core/Src/robot/robot.cpp **** 		leg1_flag = false;
 101:Core/Src/robot/robot.cpp **** 	}
 102:Core/Src/robot/robot.cpp **** 
 103:Core/Src/robot/robot.cpp **** 	if (leg0_flag && leg1_flag)
 104:Core/Src/robot/robot.cpp **** 	{
 105:Core/Src/robot/robot.cpp **** 		leg[0].steps = 0;
 106:Core/Src/robot/robot.cpp **** 		leg[1].steps = 0;
 107:Core/Src/robot/robot.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 108:Core/Src/robot/robot.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 109:Core/Src/robot/robot.cpp **** 		leg[0].reset_actual_angle(90 * PI / 180);
 110:Core/Src/robot/robot.cpp **** 		leg[1].reset_actual_angle(90 * PI / 180);
 111:Core/Src/robot/robot.cpp **** 		return true;
 112:Core/Src/robot/robot.cpp **** 	}
 113:Core/Src/robot/robot.cpp **** 	else
 114:Core/Src/robot/robot.cpp **** 	{
 115:Core/Src/robot/robot.cpp **** 		return false;
 116:Core/Src/robot/robot.cpp **** 	}
 117:Core/Src/robot/robot.cpp **** }
 118:Core/Src/robot/robot.cpp **** 
 119:Core/Src/robot/robot.cpp **** bool initialize_steering_position(void)
 120:Core/Src/robot/robot.cpp **** {
 121:Core/Src/robot/robot.cpp **** 	// printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 122:Core/Src/robot/robot.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 123:Core/Src/robot/robot.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 124:Core/Src/robot/robot.cpp **** 	if (STEERING_FLAG)
 125:Core/Src/robot/robot.cpp **** 	{
 126:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 127:Core/Src/robot/robot.cpp **** 		steering.reset_angle(0);
 128:Core/Src/robot/robot.cpp **** 		return true;
 129:Core/Src/robot/robot.cpp **** 	}
 130:Core/Src/robot/robot.cpp **** 	else
 131:Core/Src/robot/robot.cpp **** 	{
 132:Core/Src/robot/robot.cpp **** 		steering.set_omega(0.5);
 133:Core/Src/robot/robot.cpp **** 		return false;
 134:Core/Src/robot/robot.cpp **** 	}
 135:Core/Src/robot/robot.cpp **** }
 136:Core/Src/robot/robot.cpp **** 
 137:Core/Src/robot/robot.cpp **** bool go(int step, float angle)
 138:Core/Src/robot/robot.cpp **** {
 139:Core/Src/robot/robot.cpp **** 	angle *= PI / 180;
 140:Core/Src/robot/robot.cpp **** 	move_leg(step, angle);
 141:Core/Src/robot/robot.cpp **** 	move_steering(step, angle);
 142:Core/Src/robot/robot.cpp **** 
 143:Core/Src/robot/robot.cpp **** 	calculate_robot_angle();
 144:Core/Src/robot/robot.cpp **** 	// printf(" steps = %d\t robot_angle = %d\t steering_angle = %d\t leg_1_angle = %d\t leg_2_angle =
 145:Core/Src/robot/robot.cpp **** 
 146:Core/Src/robot/robot.cpp **** 	if (((leg[0].get_steps() + leg[1].get_steps()) / 2 >= step) && (fabs(angle - robot_angle) <= 0.1))
 147:Core/Src/robot/robot.cpp **** 	{
 148:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 149:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 5


 150:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 151:Core/Src/robot/robot.cpp **** 		return true;
 152:Core/Src/robot/robot.cpp **** 	}
 153:Core/Src/robot/robot.cpp **** 	else
 154:Core/Src/robot/robot.cpp **** 	{
 155:Core/Src/robot/robot.cpp **** 		return false;
 156:Core/Src/robot/robot.cpp **** 	}
 157:Core/Src/robot/robot.cpp **** }
 158:Core/Src/robot/robot.cpp **** 
 159:Core/Src/robot/robot.cpp **** void move_leg(int step, float angle)
 160:Core/Src/robot/robot.cpp **** {
 161:Core/Src/robot/robot.cpp **** 	float del_speed = 0;
 162:Core/Src/robot/robot.cpp **** 
 163:Core/Src/robot/robot.cpp **** 	//Setting the slow speed in sand dune and tussok
 164:Core/Src/robot/robot.cpp **** 	leg_speed = (step == steps[2] || step == steps[4]) ? robot_speed / 1.35 : robot_speed;
 165:Core/Src/robot/robot.cpp **** 
 166:Core/Src/robot/robot.cpp **** 	del_speed = (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 167:Core/Src/robot/robot.cpp **** 	//del_speed = 0;
 168:Core/Src/robot/robot.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 169:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 170:Core/Src/robot/robot.cpp **** 	// printf("\t%d \t%d \t", (int)(leg_speed + del_speed), (int)(leg_speed - del_speed));
 171:Core/Src/robot/robot.cpp **** }
 172:Core/Src/robot/robot.cpp **** void move_steering(int step, float angle)
 173:Core/Src/robot/robot.cpp **** {
 174:Core/Src/robot/robot.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 175:Core/Src/robot/robot.cpp **** 	{
 176:Core/Src/robot/robot.cpp **** 		printf("raised");
 177:Core/Src/robot/robot.cpp **** 		// float dd = cos(robot_angle)*robotx - xdistance;
 178:Core/Src/robot/robot.cpp **** 		set_angle(angle);
 179:Core/Src/robot/robot.cpp **** 	}
 180:Core/Src/robot/robot.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 181:Core/Src/robot/robot.cpp **** 	{
 182:Core/Src/robot/robot.cpp **** 		printf("fallen");
 183:Core/Src/robot/robot.cpp **** 		correct_steering_angle();
 184:Core/Src/robot/robot.cpp **** 		
 185:Core/Src/robot/robot.cpp **** 	}
 186:Core/Src/robot/robot.cpp **** 	else
 187:Core/Src/robot/robot.cpp **** 	{
 188:Core/Src/robot/robot.cpp **** 		printf("nothing");
 189:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 190:Core/Src/robot/robot.cpp **** 	}
 191:Core/Src/robot/robot.cpp **** }
 192:Core/Src/robot/robot.cpp **** 
 193:Core/Src/robot/robot.cpp **** void set_angle(float angle)
 194:Core/Src/robot/robot.cpp **** {
 195:Core/Src/robot/robot.cpp **** 	if ((steering.get_angle() > -steering_angle_limit) && (steering.get_angle() < steering_angle_limit
 196:Core/Src/robot/robot.cpp **** 		{
 197:Core/Src/robot/robot.cpp **** 			if (angle > (robot_angle + tolerance))
 198:Core/Src/robot/robot.cpp **** 				steering.set_omega(steering_speed);
 199:Core/Src/robot/robot.cpp **** 
 200:Core/Src/robot/robot.cpp **** 			else if (angle < (robot_angle - tolerance))
 201:Core/Src/robot/robot.cpp **** 				steering.set_omega(-steering_speed);
 202:Core/Src/robot/robot.cpp **** 
 203:Core/Src/robot/robot.cpp **** 			else
 204:Core/Src/robot/robot.cpp **** 				steering.set_omega(0);
 205:Core/Src/robot/robot.cpp **** 		}
 206:Core/Src/robot/robot.cpp **** 		else
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 6


 207:Core/Src/robot/robot.cpp **** 		{
 208:Core/Src/robot/robot.cpp **** 			steering.set_omega((steering.get_angle() > 0) ? -steering_speed : steering_speed); //for protect
 209:Core/Src/robot/robot.cpp **** 		}
 210:Core/Src/robot/robot.cpp **** }
 211:Core/Src/robot/robot.cpp **** 
 212:Core/Src/robot/robot.cpp **** void correct_steering_angle(void)
 213:Core/Src/robot/robot.cpp **** {
 214:Core/Src/robot/robot.cpp **** 	if (steering.get_angle() > (tolerance))
 215:Core/Src/robot/robot.cpp **** 	{
 216:Core/Src/robot/robot.cpp **** 		steering.set_omega(-steering_speed);
 217:Core/Src/robot/robot.cpp **** 	}
 218:Core/Src/robot/robot.cpp **** 
 219:Core/Src/robot/robot.cpp **** 	else if (steering.get_angle() < (-tolerance))
 220:Core/Src/robot/robot.cpp **** 	{
 221:Core/Src/robot/robot.cpp **** 		steering.set_omega(steering_speed);
 222:Core/Src/robot/robot.cpp **** 	}
 223:Core/Src/robot/robot.cpp **** 
 224:Core/Src/robot/robot.cpp **** 	else
 225:Core/Src/robot/robot.cpp **** 	{
 226:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 227:Core/Src/robot/robot.cpp **** 	}
 228:Core/Src/robot/robot.cpp **** 	// if (fabs(angle - robot_angle) <= steering_angle_limit)
 229:Core/Src/robot/robot.cpp **** 	// {
 230:Core/Src/robot/robot.cpp **** 	// 	if (steering.get_angle() > (tolerance)){
 231:Core/Src/robot/robot.cpp **** 	// 		steering.set_omega(-steering_speed);}
 232:Core/Src/robot/robot.cpp **** 
 233:Core/Src/robot/robot.cpp **** 	// 	else if (steering.get_angle() < (-tolerance)){
 234:Core/Src/robot/robot.cpp **** 	// 		steering.set_omega(steering_speed);}
 235:Core/Src/robot/robot.cpp **** 
 236:Core/Src/robot/robot.cpp **** 	// 	else{
 237:Core/Src/robot/robot.cpp **** 	// 		steering.set_omega(0);}
 238:Core/Src/robot/robot.cpp **** 	// 	printf("center_alligned\t");
 239:Core/Src/robot/robot.cpp **** 	// }
 240:Core/Src/robot/robot.cpp **** 	// else{
 241:Core/Src/robot/robot.cpp **** 
 242:Core/Src/robot/robot.cpp **** 	// 	if(fabs(steering.get_angle()) < steering_angle_limit){
 243:Core/Src/robot/robot.cpp **** 	// 		steering.set_omega((angle>0)? (-steering_speed):steering_speed);
 244:Core/Src/robot/robot.cpp **** 	// 	}
 245:Core/Src/robot/robot.cpp **** 	// 	else{
 246:Core/Src/robot/robot.cpp **** 	// 		steering.set_omega(0);
 247:Core/Src/robot/robot.cpp **** 	// 	}
 248:Core/Src/robot/robot.cpp **** 	// 	printf("peak_alligned\t");
 249:Core/Src/robot/robot.cpp **** 	// }
 250:Core/Src/robot/robot.cpp **** }
 251:Core/Src/robot/robot.cpp **** 
 252:Core/Src/robot/robot.cpp **** void calculate_robot_angle()
 253:Core/Src/robot/robot.cpp **** {
 254:Core/Src/robot/robot.cpp **** 	//*/
 255:Core/Src/robot/robot.cpp **** 	if (leg[0].is_raised_without_deadzone())
 256:Core/Src/robot/robot.cpp **** 	{
 257:Core/Src/robot/robot.cpp **** 		robot_angle = steering.get_angle() + temp_robot_angle;
 258:Core/Src/robot/robot.cpp **** 	}
 259:Core/Src/robot/robot.cpp **** 	else
 260:Core/Src/robot/robot.cpp **** 	{
 261:Core/Src/robot/robot.cpp **** 		temp_robot_angle = robot_angle - steering.get_angle();
 262:Core/Src/robot/robot.cpp **** 	}
 263:Core/Src/robot/robot.cpp **** 	/*/
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 7


 264:Core/Src/robot/robot.cpp **** 
 265:Core/Src/robot/robot.cpp **** 	//!Alternate code to calculate robot_angle using IMU
 266:Core/Src/robot/robot.cpp **** 	// robot_angle = -(initial_angle.getZ() - angle.getZ())*PI/180;
 267:Core/Src/robot/robot.cpp **** 
 268:Core/Src/robot/robot.cpp **** 	robot_angle = -(initial_angle.getZ() - angle.getZ()) * PI / 180;
 269:Core/Src/robot/robot.cpp **** 	// if(leg[0].is_raised() == Leg_condition::FALLEN){
 270:Core/Src/robot/robot.cpp **** 	// 	temp_robot_angle += -(initial_angle.getZ() - angle.getZ())*PI/180;
 271:Core/Src/robot/robot.cpp **** 	// 	number_of_samples++;
 272:Core/Src/robot/robot.cpp **** 	// 	orientation_flag = true;
 273:Core/Src/robot/robot.cpp **** 	// 	// printf("\tcalculating");
 274:Core/Src/robot/robot.cpp **** 	// }
 275:Core/Src/robot/robot.cpp **** 	// else{
 276:Core/Src/robot/robot.cpp **** 	// 	if(orientation_flag){
 277:Core/Src/robot/robot.cpp **** 	// 		robot_angle = temp_robot_angle / number_of_samples;
 278:Core/Src/robot/robot.cpp **** 	// 		temp_robot_angle = 0;
 279:Core/Src/robot/robot.cpp **** 	// 		number_of_samples = 0;
 280:Core/Src/robot/robot.cpp **** 	// 		orientation_flag = false;
 281:Core/Src/robot/robot.cpp **** 	// 		// printf("displayed");
 282:Core/Src/robot/robot.cpp **** 	// 	}
 283:Core/Src/robot/robot.cpp **** 	// 	// printf("still");
 284:Core/Src/robot/robot.cpp **** 	// }
 285:Core/Src/robot/robot.cpp **** 
 286:Core/Src/robot/robot.cpp **** 	//*/
 287:Core/Src/robot/robot.cpp **** }
 288:Core/Src/robot/robot.cpp **** 
 289:Core/Src/robot/robot.cpp **** void calculate_datas()
 290:Core/Src/robot/robot.cpp **** {
 291:Core/Src/robot/robot.cpp **** 	leg[0].calculate_omega();
 292:Core/Src/robot/robot.cpp **** 	leg[1].calculate_omega();
 293:Core/Src/robot/robot.cpp **** 	steering.calculate_omega();
 294:Core/Src/robot/robot.cpp **** 	angle = read_Orientation(10);
 295:Core/Src/robot/robot.cpp **** 	HAL_ADC_Start(&hadc1);
 296:Core/Src/robot/robot.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 297:Core/Src/robot/robot.cpp **** 	{
 298:Core/Src/robot/robot.cpp **** 		robotx = HAL_ADC_GetValue(&hadc1);
 299:Core/Src/robot/robot.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 300:Core/Src/robot/robot.cpp **** 		// printf("\n\tDistance = %d", (int)robotx);
 301:Core/Src/robot/robot.cpp **** 	}
 302:Core/Src/robot/robot.cpp **** }
 303:Core/Src/robot/robot.cpp **** 
 304:Core/Src/robot/robot.cpp **** bool play()
 305:Core/Src/robot/robot.cpp **** {
 306:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
 307:Core/Src/robot/robot.cpp **** 	initial_angle = read_Orientation(10);
 308:Core/Src/robot/robot.cpp **** 
 309:Core/Src/robot/robot.cpp **** 
 310:Core/Src/robot/robot.cpp **** 	// initialize_position();
 311:Core/Src/robot/robot.cpp **** 
 312:Core/Src/robot/robot.cpp **** 	while (true)
 313:Core/Src/robot/robot.cpp **** 	{
 314:Core/Src/robot/robot.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 315:Core/Src/robot/robot.cpp **** 		{
 316:Core/Src/robot/robot.cpp **** 			dt = HAL_GetTick();
 317:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_to_start\t");
 318:Core/Src/robot/robot.cpp **** 			calculate_datas();
 319:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 320:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 8


 321:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
 322:Core/Src/robot/robot.cpp **** 			if (ROBOT_START_FLAG)
 323:Core/Src/robot/robot.cpp **** 				break;
 324:Core/Src/robot/robot.cpp **** 		}
 325:Core/Src/robot/robot.cpp **** 	}
 326:Core/Src/robot/robot.cpp **** 	for (int i = 0; i < 6; i++)
 327:Core/Src/robot/robot.cpp **** 	{
 328:Core/Src/robot/robot.cpp **** 		// if (!sand_dune_crossed_flag && (i==3)){
 329:Core/Src/robot/robot.cpp **** 		// 	i--;
 330:Core/Src/robot/robot.cpp **** 		// 	go(steps[1]+1, 0);
 331:Core/Src/robot/robot.cpp **** 		// 	leg[0].steps = steps[3];
 332:Core/Src/robot/robot.cpp **** 		// 	break;
 333:Core/Src/robot/robot.cpp **** 		// }
 334:Core/Src/robot/robot.cpp **** 		while (true)
 335:Core/Src/robot/robot.cpp **** 		{
 336:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 337:Core/Src/robot/robot.cpp **** 			{
 338:Core/Src/robot/robot.cpp **** 				dt = HAL_GetTick();
 339:Core/Src/robot/robot.cpp **** 				// printf("\tstep=%d\t", i);
 340:Core/Src/robot/robot.cpp **** 				calculate_datas();
 341:Core/Src/robot/robot.cpp **** 				if (go(steps[i], -angles[i]) == true)
 342:Core/Src/robot/robot.cpp **** 					break;
 343:Core/Src/robot/robot.cpp **** 			}
 344:Core/Src/robot/robot.cpp **** 		}
 345:Core/Src/robot/robot.cpp **** 		printf("\tstep=%d\t", i);
 346:Core/Src/robot/robot.cpp **** 	}
 347:Core/Src/robot/robot.cpp **** 	return true;
 348:Core/Src/robot/robot.cpp **** }
  51              		.loc 2 348 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 348 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 348 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB86:
  75              	.LBB87:
  76              	.LBB88:
  77              	.LBB89:
  78              	.LBB90:
  33:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 9


  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE90:
  86              	.LBE89:
  87              	.LBB91:
  88              	.LBB92:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE92:
  93              	.LBE91:
  94              	.LBB93:
  95              	.LBB94:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE94:
 100              	.LBE93:
 101              	.LBE88:
 102              	.LBE87:
 103              	.LBE86:
   6:Core/Src/robot/robot.cpp **** Vec3<float> angle;
 104              		.loc 2 6 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB95:
 113              	.LBB96:
 114              	.LBB97:
 115              	.LBB98:
 116              	.LBB99:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE99:
 122              	.LBE98:
 123              	.LBB100:
 124              	.LBB101:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 10


 127              	.LVL10:
 128              	.LBE101:
 129              	.LBE100:
 130              	.LBB102:
 131              	.LBB103:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE103:
 136              	.LBE102:
 137              	.LBE97:
 138              	.LBE96:
 139              	.LBE95:
   7:Core/Src/robot/robot.cpp **** float robotx = 0;
 140              		.loc 2 7 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 348 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE512:
 157              		.global	__aeabi_f2d
 158              		.global	__aeabi_dcmpgt
 159              		.global	__aeabi_dcmplt
 160              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 161              		.align	1
 162              		.global	_Z23initialize_leg_positionv
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	_Z23initialize_leg_positionv:
 169              	.LFB492:
  71:Core/Src/robot/robot.cpp **** 	float initial_tolerance = 4;
 170              		.loc 2 71 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 38B5     		push	{r3, r4, r5, lr}
 175              	.LCFI1:
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 3, -16
 178              		.cfi_offset 4, -12
 179              		.cfi_offset 5, -8
 180              		.cfi_offset 14, -4
 181 0002 2DED028B 		vpush.64	{d8}
 182              	.LCFI2:
 183              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 11


 184              		.cfi_offset 80, -24
 185              		.cfi_offset 81, -20
 186              	.LVL13:
 187              	.LBB104:
 188              	.LBB105:
 189              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kbody, float kleg){kb_ = kbody; kl_ = kleg;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 190              		.loc 3 47 0
 191 0006 4648     		ldr	r0, .L29+16
 192 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 193              	.LVL14:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 12


 194              	.LBE105:
 195              	.LBE104:
  79:Core/Src/robot/robot.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 196              		.loc 2 79 0
 197 000c 10EE100A 		vmov	r0, s0
 198 0010 FFF7FEFF 		bl	__aeabi_f2d
 199              	.LVL15:
 200 0014 3EA3     		adr	r3, .L29
 201 0016 D3E90023 		ldrd	r2, [r3]
 202 001a FFF7FEFF 		bl	__aeabi_dcmpgt
 203              	.LVL16:
 204 001e 80B1     		cbz	r0, .L12
 205              	.LVL17:
 206              	.LBB106:
 207              	.LBB107:
 208              		.loc 3 47 0
 209 0020 3F48     		ldr	r0, .L29+16
 210 0022 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 211              	.LVL18:
 212              	.LBE107:
 213              	.LBE106:
  80:Core/Src/robot/robot.cpp **** 	{
 214              		.loc 2 80 0
 215 0026 10EE100A 		vmov	r0, s0
 216 002a FFF7FEFF 		bl	__aeabi_f2d
 217              	.LVL19:
  79:Core/Src/robot/robot.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 218              		.loc 2 79 0
 219 002e 3AA3     		adr	r3, .L29+8
 220 0030 D3E90023 		ldrd	r2, [r3]
 221 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 222              	.LVL20:
 223 0038 18B1     		cbz	r0, .L12
 224              	.LVL21:
 225              	.LBB108:
 226              	.LBB109:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 227              		.loc 3 45 0
 228 003a 3A4B     		ldr	r3, .L29+20
 229 003c 1B69     		ldr	r3, [r3, #16]
 230              	.LVL22:
 231              	.LBE109:
 232              	.LBE108:
  80:Core/Src/robot/robot.cpp **** 	{
 233              		.loc 2 80 0
 234 003e 002B     		cmp	r3, #0
 235 0040 36D1     		bne	.L27
 236              	.L12:
  87:Core/Src/robot/robot.cpp **** 		leg0_flag = false;
 237              		.loc 2 87 0 discriminator 3
 238 0042 B1EE040A 		vmov.f32	s0, #5.0e+0
 239 0046 3748     		ldr	r0, .L29+20
 240 0048 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 241              	.LVL23:
  88:Core/Src/robot/robot.cpp **** 	}
 242              		.loc 2 88 0 discriminator 3
 243 004c 364B     		ldr	r3, .L29+24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 13


 244 004e 0022     		movs	r2, #0
 245 0050 1A70     		strb	r2, [r3]
 246              	.L15:
 247              	.LVL24:
 248              	.LBB110:
 249              	.LBB111:
 250              		.loc 3 47 0
 251 0052 3648     		ldr	r0, .L29+28
 252 0054 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 253              	.LVL25:
 254              	.LBE111:
 255              	.LBE110:
  91:Core/Src/robot/robot.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[0].get_
 256              		.loc 2 91 0
 257 0058 10EE100A 		vmov	r0, s0
 258 005c FFF7FEFF 		bl	__aeabi_f2d
 259              	.LVL26:
  92:Core/Src/robot/robot.cpp **** 	{
 260              		.loc 2 92 0
 261 0060 2BA3     		adr	r3, .L29
 262 0062 D3E90023 		ldrd	r2, [r3]
 263 0066 FFF7FEFF 		bl	__aeabi_dcmpgt
 264              	.LVL27:
 265 006a 78B1     		cbz	r0, .L16
 266              	.LVL28:
 267              	.LBB112:
 268              	.LBB113:
 269              		.loc 3 47 0
 270 006c 2F48     		ldr	r0, .L29+28
 271 006e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 272              	.LVL29:
 273              	.LBE113:
 274              	.LBE112:
  92:Core/Src/robot/robot.cpp **** 	{
 275              		.loc 2 92 0
 276 0072 10EE100A 		vmov	r0, s0
 277 0076 FFF7FEFF 		bl	__aeabi_f2d
 278              	.LVL30:
  91:Core/Src/robot/robot.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[0].get_
 279              		.loc 2 91 0
 280 007a 27A3     		adr	r3, .L29+8
 281 007c D3E90023 		ldrd	r2, [r3]
 282 0080 FFF7FEFF 		bl	__aeabi_dcmplt
 283              	.LVL31:
 284 0084 10B1     		cbz	r0, .L16
 285              	.LVL32:
 286              	.LBB114:
 287              	.LBB115:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 288              		.loc 3 45 0
 289 0086 274B     		ldr	r3, .L29+20
 290 0088 1B69     		ldr	r3, [r3, #16]
 291              	.LVL33:
 292              	.LBE115:
 293              	.LBE114:
  92:Core/Src/robot/robot.cpp **** 	{
 294              		.loc 2 92 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 14


 295 008a D3B9     		cbnz	r3, .L19
 296              	.L16:
  99:Core/Src/robot/robot.cpp **** 		leg1_flag = false;
 297              		.loc 2 99 0 discriminator 2
 298 008c B1EE040A 		vmov.f32	s0, #5.0e+0
 299 0090 2748     		ldr	r0, .L29+32
 300 0092 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 301              	.LVL34:
 100:Core/Src/robot/robot.cpp **** 	}
 302              		.loc 2 100 0 discriminator 2
 303 0096 274B     		ldr	r3, .L29+36
 304 0098 0022     		movs	r2, #0
 305 009a 1A70     		strb	r2, [r3]
 306              	.L20:
 103:Core/Src/robot/robot.cpp **** 	{
 307              		.loc 2 103 0
 308 009c 224B     		ldr	r3, .L29+24
 309 009e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 310 00a0 14B1     		cbz	r4, .L21
 103:Core/Src/robot/robot.cpp **** 	{
 311              		.loc 2 103 0 is_stmt 0 discriminator 1
 312 00a2 244B     		ldr	r3, .L29+36
 313 00a4 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 314 00a6 ACB9     		cbnz	r4, .L28
 315              	.L21:
 117:Core/Src/robot/robot.cpp **** 
 316              		.loc 2 117 0 is_stmt 1
 317 00a8 2046     		mov	r0, r4
 318 00aa BDEC028B 		vldm	sp!, {d8}
 319              	.LCFI3:
 320              		.cfi_remember_state
 321              		.cfi_restore 80
 322              		.cfi_restore 81
 323              		.cfi_def_cfa_offset 16
 324 00ae 38BD     		pop	{r3, r4, r5, pc}
 325              	.L27:
 326              	.LCFI4:
 327              		.cfi_restore_state
  82:Core/Src/robot/robot.cpp **** 		leg0_flag = true;
 328              		.loc 2 82 0
 329 00b0 9FED210A 		vldr.32	s0, .L29+40
 330 00b4 1B48     		ldr	r0, .L29+20
 331 00b6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 332              	.LVL35:
  83:Core/Src/robot/robot.cpp **** 	}
 333              		.loc 2 83 0
 334 00ba 1B4B     		ldr	r3, .L29+24
 335 00bc 0122     		movs	r2, #1
 336 00be 1A70     		strb	r2, [r3]
 337 00c0 C7E7     		b	.L15
 338              	.L19:
  94:Core/Src/robot/robot.cpp **** 		leg1_flag = true;
 339              		.loc 2 94 0
 340 00c2 9FED1D0A 		vldr.32	s0, .L29+40
 341 00c6 1A48     		ldr	r0, .L29+32
 342 00c8 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 343              	.LVL36:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 15


  95:Core/Src/robot/robot.cpp **** 	}
 344              		.loc 2 95 0
 345 00cc 194B     		ldr	r3, .L29+36
 346 00ce 0122     		movs	r2, #1
 347 00d0 1A70     		strb	r2, [r3]
 348 00d2 E3E7     		b	.L20
 349              	.L28:
 105:Core/Src/robot/robot.cpp **** 		leg[1].steps = 0;
 350              		.loc 2 105 0
 351 00d4 134D     		ldr	r5, .L29+20
 352 00d6 0023     		movs	r3, #0
 353 00d8 2B61     		str	r3, [r5, #16]
 106:Core/Src/robot/robot.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 354              		.loc 2 106 0
 355 00da EB66     		str	r3, [r5, #108]
 107:Core/Src/robot/robot.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 356              		.loc 2 107 0
 357 00dc 9FED178A 		vldr.32	s16, .L29+44
 358 00e0 B0EE480A 		vmov.f32	s0, s16
 359 00e4 2846     		mov	r0, r5
 360 00e6 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 361              	.LVL37:
 108:Core/Src/robot/robot.cpp **** 		leg[0].reset_actual_angle(90 * PI / 180);
 362              		.loc 2 108 0
 363 00ea B0EE480A 		vmov.f32	s0, s16
 364 00ee 05F15C00 		add	r0, r5, #92
 365 00f2 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 366              	.LVL38:
 367              	.LBB116:
 368              	.LBB117:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 369              		.loc 3 40 0
 370 00f6 B0EE480A 		vmov.f32	s0, s16
 371 00fa 05F13C00 		add	r0, r5, #60
 372 00fe FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 373              	.LVL39:
 374              	.LBE117:
 375              	.LBE116:
 376              	.LBB118:
 377              	.LBB119:
 378 0102 B0EE480A 		vmov.f32	s0, s16
 379 0106 05F19800 		add	r0, r5, #152
 380 010a FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 381              	.LVL40:
 382              	.LBE119:
 383              	.LBE118:
 111:Core/Src/robot/robot.cpp **** 	}
 384              		.loc 2 111 0
 385 010e CBE7     		b	.L21
 386              	.L30:
 387              		.align	3
 388              	.L29:
 389 0110 44031FEA 		.word	-367066300
 390 0114 0604F83F 		.word	1073218566
 391 0118 EC5669BE 		.word	-1100392724
 392 011c EF3FFA3F 		.word	1073364975
 393 0120 3C000000 		.word	leg+60
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 16


 394 0124 00000000 		.word	leg
 395 0128 00000000 		.word	.LANCHOR2
 396 012c 98000000 		.word	leg+152
 397 0130 5C000000 		.word	leg+92
 398 0134 00000000 		.word	.LANCHOR3
 399 0138 00000000 		.word	0
 400 013c DB0FC93F 		.word	1070141403
 401              		.cfi_endproc
 402              	.LFE492:
 404              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 405              		.align	1
 406              		.global	_Z28initialize_steering_positionv
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv4-sp-d16
 412              	_Z28initialize_steering_positionv:
 413              	.LFB493:
 120:Core/Src/robot/robot.cpp **** 	// printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 414              		.loc 2 120 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 38B5     		push	{r3, r4, r5, lr}
 419              	.LCFI5:
 420              		.cfi_def_cfa_offset 16
 421              		.cfi_offset 3, -16
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 5, -8
 424              		.cfi_offset 14, -4
 425 0002 2DED028B 		vpush.64	{d8}
 426              	.LCFI6:
 427              		.cfi_def_cfa_offset 24
 428              		.cfi_offset 80, -24
 429              		.cfi_offset 81, -20
 124:Core/Src/robot/robot.cpp **** 	{
 430              		.loc 2 124 0
 431 0006 0D4B     		ldr	r3, .L36
 432 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 433 000a 44B9     		cbnz	r4, .L35
 132:Core/Src/robot/robot.cpp **** 		return false;
 434              		.loc 2 132 0
 435 000c B6EE000A 		vmov.f32	s0, #5.0e-1
 436 0010 0B48     		ldr	r0, .L36+4
 437 0012 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 438              	.LVL41:
 439              	.L33:
 135:Core/Src/robot/robot.cpp **** 
 440              		.loc 2 135 0
 441 0016 2046     		mov	r0, r4
 442 0018 BDEC028B 		vldm	sp!, {d8}
 443              	.LCFI7:
 444              		.cfi_remember_state
 445              		.cfi_restore 80
 446              		.cfi_restore 81
 447              		.cfi_def_cfa_offset 16
 448 001c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 17


 449              	.L35:
 450              	.LCFI8:
 451              		.cfi_restore_state
 126:Core/Src/robot/robot.cpp **** 		steering.reset_angle(0);
 452              		.loc 2 126 0
 453 001e 9FED098A 		vldr.32	s16, .L36+8
 454 0022 074D     		ldr	r5, .L36+4
 455 0024 B0EE480A 		vmov.f32	s0, s16
 456 0028 2846     		mov	r0, r5
 457 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 458              	.LVL42:
 459              	.LBB120:
 460              	.LBB121:
 461              		.file 4 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 18


  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/** 
  63:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  64:Core/Inc/devs/steering.h **** 	 * 
  65:Core/Inc/devs/steering.h **** 	 */
  66:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  67:Core/Inc/devs/steering.h **** 
  68:Core/Inc/devs/steering.h **** 	/**
  69:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  70:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  71:Core/Inc/devs/steering.h **** 	 * \return void
  72:Core/Inc/devs/steering.h **** 	 */
  73:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
 462              		.loc 4 73 0
 463 002e B0EE480A 		vmov.f32	s0, s16
 464 0032 05F10C00 		add	r0, r5, #12
 465 0036 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 466              	.LVL43:
 467              	.LBE121:
 468              	.LBE120:
 128:Core/Src/robot/robot.cpp **** 	}
 469              		.loc 2 128 0
 470 003a ECE7     		b	.L33
 471              	.L37:
 472              		.align	2
 473              	.L36:
 474 003c 00000000 		.word	.LANCHOR4
 475 0040 00000000 		.word	steering
 476 0044 00000000 		.word	0
 477              		.cfi_endproc
 478              	.LFE493:
 480              		.section	.text._Z8move_legif,"ax",%progbits
 481              		.align	1
 482              		.global	_Z8move_legif
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 486              		.fpu fpv4-sp-d16
 488              	_Z8move_legif:
 489              	.LFB495:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 19


 160:Core/Src/robot/robot.cpp **** 	float del_speed = 0;
 490              		.loc 2 160 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              	.LVL44:
 495 0000 38B5     		push	{r3, r4, r5, lr}
 496              	.LCFI9:
 497              		.cfi_def_cfa_offset 16
 498              		.cfi_offset 3, -16
 499              		.cfi_offset 4, -12
 500              		.cfi_offset 5, -8
 501              		.cfi_offset 14, -4
 502 0002 2DED028B 		vpush.64	{d8}
 503              	.LCFI10:
 504              		.cfi_def_cfa_offset 24
 505              		.cfi_offset 80, -24
 506              		.cfi_offset 81, -20
 507              	.LVL45:
 164:Core/Src/robot/robot.cpp **** 
 508              		.loc 2 164 0
 509 0006 07EE900A 		vmov	s15, r0	@ int
 510 000a F8EEE77A 		vcvt.f32.s32	s15, s15
 511 000e 1B4B     		ldr	r3, .L44
 512 0010 93ED027A 		vldr.32	s14, [r3, #8]
 513 0014 F4EE477A 		vcmp.f32	s15, s14
 514 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 515 001c 0AD0     		beq	.L40
 164:Core/Src/robot/robot.cpp **** 
 516              		.loc 2 164 0 is_stmt 0 discriminator 2
 517 001e 93ED047A 		vldr.32	s14, [r3, #16]
 518 0022 F4EE477A 		vcmp.f32	s15, s14
 519 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 520 002a 01D0     		beq	.L43
 164:Core/Src/robot/robot.cpp **** 
 521              		.loc 2 164 0
 522 002c 144B     		ldr	r3, .L44+4
 523 002e 02E0     		b	.L39
 524              	.L43:
 525 0030 144B     		ldr	r3, .L44+8
 526 0032 00E0     		b	.L39
 527              	.L40:
 528 0034 134B     		ldr	r3, .L44+8
 529              	.L39:
 164:Core/Src/robot/robot.cpp **** 
 530              		.loc 2 164 0 discriminator 6
 531 0036 144D     		ldr	r5, .L44+12
 532 0038 2B60     		str	r3, [r5]	@ float
 533              	.LVL46:
 534              	.LBB122:
 535              	.LBB123:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 536              		.loc 3 48 0 is_stmt 1 discriminator 6
 537 003a 144C     		ldr	r4, .L44+16
 538 003c 2046     		mov	r0, r4
 539              	.LVL47:
 540 003e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 20


 541              	.LVL48:
 542 0042 B0EE408A 		vmov.f32	s16, s0
 543              	.LVL49:
 544              	.LBE123:
 545              	.LBE122:
 546              	.LBB124:
 547              	.LBB125:
 548 0046 04F15C00 		add	r0, r4, #92
 549 004a FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 550              	.LVL50:
 551              	.LBE125:
 552              	.LBE124:
 166:Core/Src/robot/robot.cpp **** 	//del_speed = 0;
 553              		.loc 2 166 0 discriminator 6
 554 004e 38EE408A 		vsub.f32	s16, s16, s0
 555 0052 95ED000A 		vldr.32	s0, [r5]
 556 0056 28EE008A 		vmul.f32	s16, s16, s0
 557              	.LVL51:
 168:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 558              		.loc 2 168 0 discriminator 6
 559 005a 3C3C     		subs	r4, r4, #60
 560 005c 30EE480A 		vsub.f32	s0, s0, s16
 561 0060 2046     		mov	r0, r4
 562 0062 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 563              	.LVL52:
 169:Core/Src/robot/robot.cpp **** 	// printf("\t%d \t%d \t", (int)(leg_speed + del_speed), (int)(leg_speed - del_speed));
 564              		.loc 2 169 0 discriminator 6
 565 0066 95ED000A 		vldr.32	s0, [r5]
 566 006a 38EE000A 		vadd.f32	s0, s16, s0
 567 006e 04F15C00 		add	r0, r4, #92
 568 0072 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 569              	.LVL53:
 171:Core/Src/robot/robot.cpp **** void move_steering(int step, float angle)
 570              		.loc 2 171 0 discriminator 6
 571 0076 BDEC028B 		vldm	sp!, {d8}
 572              	.LCFI11:
 573              		.cfi_restore 80
 574              		.cfi_restore 81
 575              		.cfi_def_cfa_offset 16
 576              	.LVL54:
 577 007a 38BD     		pop	{r3, r4, r5, pc}
 578              	.L45:
 579              		.align	2
 580              	.L44:
 581 007c 00000000 		.word	.LANCHOR5
 582 0080 0000A040 		.word	1084227584
 583 0084 7B096D40 		.word	1080887675
 584 0088 00000000 		.word	.LANCHOR6
 585 008c 3C000000 		.word	leg+60
 586              		.cfi_endproc
 587              	.LFE495:
 589              		.section	.text._Z9set_anglef,"ax",%progbits
 590              		.align	1
 591              		.global	_Z9set_anglef
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 21


 595              		.fpu fpv4-sp-d16
 597              	_Z9set_anglef:
 598              	.LFB497:
 194:Core/Src/robot/robot.cpp **** 	if ((steering.get_angle() > -steering_angle_limit) && (steering.get_angle() < steering_angle_limit
 599              		.loc 2 194 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              	.LVL55:
 604 0000 08B5     		push	{r3, lr}
 605              	.LCFI12:
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 3, -8
 608              		.cfi_offset 14, -4
 609 0002 2DED028B 		vpush.64	{d8}
 610              	.LCFI13:
 611              		.cfi_def_cfa_offset 16
 612              		.cfi_offset 80, -16
 613              		.cfi_offset 81, -12
 614 0006 B0EE408A 		vmov.f32	s16, s0
 615              	.LVL56:
 616              	.LBB126:
 617              	.LBB127:
  74:Core/Inc/devs/steering.h **** 
  75:Core/Inc/devs/steering.h **** 	/**
  76:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  77:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  78:Core/Inc/devs/steering.h **** 	 * \param void
  79:Core/Inc/devs/steering.h **** 	 * \return void
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/**
  84:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
  85:Core/Inc/devs/steering.h **** 	 */
  86:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
  87:Core/Inc/devs/steering.h **** 
  88:Core/Inc/devs/steering.h **** 	/**
  89:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
  90:Core/Inc/devs/steering.h **** 	 */
  91:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 618              		.loc 4 91 0
 619 000a 2648     		ldr	r0, .L67
 620 000c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 621              	.LVL57:
 622              	.LBE127:
 623              	.LBE126:
 195:Core/Src/robot/robot.cpp **** 		{
 624              		.loc 2 195 0
 625 0010 DFED257A 		vldr.32	s15, .L67+4
 626 0014 B4EEE70A 		vcmpe.f32	s0, s15
 627 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 628 001c 23DD     		ble	.L47
 629              	.LVL58:
 630              	.LBB128:
 631              	.LBB129:
 632              		.loc 4 91 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 22


 633 001e 2148     		ldr	r0, .L67
 634 0020 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 635              	.LVL59:
 636              	.LBE129:
 637              	.LBE128:
 195:Core/Src/robot/robot.cpp **** 		{
 638              		.loc 2 195 0
 639 0024 DFED217A 		vldr.32	s15, .L67+8
 640 0028 B4EEE70A 		vcmpe.f32	s0, s15
 641 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 642 0030 19D5     		bpl	.L47
 197:Core/Src/robot/robot.cpp **** 				steering.set_omega(steering_speed);
 643              		.loc 2 197 0
 644 0032 1F4B     		ldr	r3, .L67+12
 645 0034 D3ED007A 		vldr.32	s15, [r3]
 646 0038 1E4B     		ldr	r3, .L67+16
 647 003a 93ED007A 		vldr.32	s14, [r3]
 648 003e 77EE876A 		vadd.f32	s13, s15, s14
 649 0042 F4EEC86A 		vcmpe.f32	s13, s16
 650 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 651 004a 1CD4     		bmi	.L66
 200:Core/Src/robot/robot.cpp **** 				steering.set_omega(-steering_speed);
 652              		.loc 2 200 0
 653 004c 77EEC77A 		vsub.f32	s15, s15, s14
 654 0050 F4EEC87A 		vcmpe.f32	s15, s16
 655 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 656 0058 1BDD     		ble	.L64
 201:Core/Src/robot/robot.cpp **** 
 657              		.loc 2 201 0
 658 005a 9FED170A 		vldr.32	s0, .L67+20
 659 005e 1748     		ldr	r0, .L67+24
 660 0060 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 661              	.LVL60:
 662 0064 0CE0     		b	.L46
 663              	.L47:
 664              	.LVL61:
 665              	.LBB130:
 666              	.LBB131:
 667              		.loc 4 91 0 discriminator 4
 668 0066 0F48     		ldr	r0, .L67
 669 0068 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 670              	.LVL62:
 671              	.LBE131:
 672              	.LBE130:
 208:Core/Src/robot/robot.cpp **** 		}
 673              		.loc 2 208 0 discriminator 4
 674 006c B5EEC00A 		vcmpe.f32	s0, #0
 675 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 676 0074 13DD     		ble	.L63
 208:Core/Src/robot/robot.cpp **** 		}
 677              		.loc 2 208 0 is_stmt 0
 678 0076 9FED100A 		vldr.32	s0, .L67+20
 679              	.L52:
 208:Core/Src/robot/robot.cpp **** 		}
 680              		.loc 2 208 0 discriminator 4
 681 007a 1048     		ldr	r0, .L67+24
 682 007c FFF7FEFF 		bl	_ZN8steering9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 23


 683              	.LVL63:
 684              	.L46:
 210:Core/Src/robot/robot.cpp **** 
 685              		.loc 2 210 0 is_stmt 1
 686 0080 BDEC028B 		vldm	sp!, {d8}
 687              	.LCFI14:
 688              		.cfi_remember_state
 689              		.cfi_restore 80
 690              		.cfi_restore 81
 691              		.cfi_def_cfa_offset 8
 692              	.LVL64:
 693 0084 08BD     		pop	{r3, pc}
 694              	.LVL65:
 695              	.L66:
 696              	.LCFI15:
 697              		.cfi_restore_state
 198:Core/Src/robot/robot.cpp **** 
 698              		.loc 2 198 0
 699 0086 9FED0E0A 		vldr.32	s0, .L67+28
 700 008a 0C48     		ldr	r0, .L67+24
 701 008c FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 702              	.LVL66:
 703 0090 F6E7     		b	.L46
 704              	.L64:
 204:Core/Src/robot/robot.cpp **** 		}
 705              		.loc 2 204 0
 706 0092 9FED0C0A 		vldr.32	s0, .L67+32
 707 0096 0948     		ldr	r0, .L67+24
 708 0098 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 709              	.LVL67:
 710 009c F0E7     		b	.L46
 711              	.L63:
 208:Core/Src/robot/robot.cpp **** 		}
 712              		.loc 2 208 0
 713 009e 9FED080A 		vldr.32	s0, .L67+28
 714 00a2 EAE7     		b	.L52
 715              	.L68:
 716              		.align	2
 717              	.L67:
 718 00a4 0C000000 		.word	steering+12
 719 00a8 7CD920BE 		.word	-1105143428
 720 00ac 7CD9203E 		.word	1042340220
 721 00b0 00000000 		.word	.LANCHOR7
 722 00b4 00000000 		.word	.LANCHOR8
 723 00b8 CDCC4CBF 		.word	-1085485875
 724 00bc 00000000 		.word	steering
 725 00c0 CDCC4C3F 		.word	1061997773
 726 00c4 00000000 		.word	0
 727              		.cfi_endproc
 728              	.LFE497:
 730              		.section	.text._Z22correct_steering_anglev,"ax",%progbits
 731              		.align	1
 732              		.global	_Z22correct_steering_anglev
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 24


 738              	_Z22correct_steering_anglev:
 739              	.LFB498:
 213:Core/Src/robot/robot.cpp **** 	if (steering.get_angle() > (tolerance))
 740              		.loc 2 213 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744 0000 08B5     		push	{r3, lr}
 745              	.LCFI16:
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 3, -8
 748              		.cfi_offset 14, -4
 749              	.LVL68:
 750              	.LBB132:
 751              	.LBB133:
 752              		.loc 4 91 0
 753 0002 1548     		ldr	r0, .L82
 754 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 755              	.LVL69:
 756              	.LBE133:
 757              	.LBE132:
 214:Core/Src/robot/robot.cpp **** 	{
 758              		.loc 2 214 0
 759 0008 144B     		ldr	r3, .L82+4
 760 000a D3ED007A 		vldr.32	s15, [r3]
 761 000e F4EEC07A 		vcmpe.f32	s15, s0
 762 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 763 0016 12D4     		bmi	.L80
 764              	.LVL70:
 765              	.LBB134:
 766              	.LBB135:
 767              		.loc 4 91 0
 768 0018 0F48     		ldr	r0, .L82
 769 001a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 770              	.LVL71:
 771              	.LBE135:
 772              	.LBE134:
 219:Core/Src/robot/robot.cpp **** 	{
 773              		.loc 2 219 0
 774 001e 0F4B     		ldr	r3, .L82+4
 775 0020 D3ED007A 		vldr.32	s15, [r3]
 776 0024 F1EE677A 		vneg.f32	s15, s15
 777 0028 F4EEC07A 		vcmpe.f32	s15, s0
 778 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 779 0030 0BDC     		bgt	.L81
 226:Core/Src/robot/robot.cpp **** 	}
 780              		.loc 2 226 0
 781 0032 9FED0B0A 		vldr.32	s0, .L82+8
 782 0036 0B48     		ldr	r0, .L82+12
 783 0038 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 784              	.LVL72:
 250:Core/Src/robot/robot.cpp **** 
 785              		.loc 2 250 0
 786 003c 04E0     		b	.L69
 787              	.L80:
 216:Core/Src/robot/robot.cpp **** 	}
 788              		.loc 2 216 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 25


 789 003e 9FED0A0A 		vldr.32	s0, .L82+16
 790 0042 0848     		ldr	r0, .L82+12
 791 0044 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 792              	.LVL73:
 793              	.L69:
 250:Core/Src/robot/robot.cpp **** 
 794              		.loc 2 250 0
 795 0048 08BD     		pop	{r3, pc}
 796              	.L81:
 221:Core/Src/robot/robot.cpp **** 	}
 797              		.loc 2 221 0
 798 004a 9FED080A 		vldr.32	s0, .L82+20
 799 004e 0548     		ldr	r0, .L82+12
 800 0050 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 801              	.LVL74:
 802 0054 F8E7     		b	.L69
 803              	.L83:
 804 0056 00BF     		.align	2
 805              	.L82:
 806 0058 0C000000 		.word	steering+12
 807 005c 00000000 		.word	.LANCHOR8
 808 0060 00000000 		.word	0
 809 0064 00000000 		.word	steering
 810 0068 CDCC4CBF 		.word	-1085485875
 811 006c CDCC4C3F 		.word	1061997773
 812              		.cfi_endproc
 813              	.LFE498:
 815              		.section	.text._Z13move_steeringif,"ax",%progbits
 816              		.align	1
 817              		.global	_Z13move_steeringif
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 821              		.fpu fpv4-sp-d16
 823              	_Z13move_steeringif:
 824              	.LFB496:
 173:Core/Src/robot/robot.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 825              		.loc 2 173 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              	.LVL75:
 830 0000 08B5     		push	{r3, lr}
 831              	.LCFI17:
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 3, -8
 834              		.cfi_offset 14, -4
 835 0002 2DED028B 		vpush.64	{d8}
 836              	.LCFI18:
 837              		.cfi_def_cfa_offset 16
 838              		.cfi_offset 80, -16
 839              		.cfi_offset 81, -12
 840 0006 B0EE408A 		vmov.f32	s16, s0
 174:Core/Src/robot/robot.cpp **** 	{
 841              		.loc 2 174 0
 842 000a 1148     		ldr	r0, .L91
 843              	.LVL76:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 26


 844 000c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 845              	.LVL77:
 846 0010 68B1     		cbz	r0, .L89
 180:Core/Src/robot/robot.cpp **** 	{
 847              		.loc 2 180 0
 848 0012 0F48     		ldr	r0, .L91
 849 0014 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 850              	.LVL78:
 851 0018 0128     		cmp	r0, #1
 852 001a 12D0     		beq	.L90
 188:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 853              		.loc 2 188 0
 854 001c 0D48     		ldr	r0, .L91+4
 855 001e FFF7FEFF 		bl	printf
 856              	.LVL79:
 189:Core/Src/robot/robot.cpp **** 	}
 857              		.loc 2 189 0
 858 0022 9FED0D0A 		vldr.32	s0, .L91+8
 859 0026 0D48     		ldr	r0, .L91+12
 860 0028 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 861              	.LVL80:
 191:Core/Src/robot/robot.cpp **** 
 862              		.loc 2 191 0
 863 002c 06E0     		b	.L84
 864              	.L89:
 176:Core/Src/robot/robot.cpp **** 		// float dd = cos(robot_angle)*robotx - xdistance;
 865              		.loc 2 176 0
 866 002e 0C48     		ldr	r0, .L91+16
 867 0030 FFF7FEFF 		bl	printf
 868              	.LVL81:
 178:Core/Src/robot/robot.cpp **** 	}
 869              		.loc 2 178 0
 870 0034 B0EE480A 		vmov.f32	s0, s16
 871 0038 FFF7FEFF 		bl	_Z9set_anglef
 872              	.LVL82:
 873              	.L84:
 191:Core/Src/robot/robot.cpp **** 
 874              		.loc 2 191 0
 875 003c BDEC028B 		vldm	sp!, {d8}
 876              	.LCFI19:
 877              		.cfi_remember_state
 878              		.cfi_restore 80
 879              		.cfi_restore 81
 880              		.cfi_def_cfa_offset 8
 881              	.LVL83:
 882 0040 08BD     		pop	{r3, pc}
 883              	.LVL84:
 884              	.L90:
 885              	.LCFI20:
 886              		.cfi_restore_state
 182:Core/Src/robot/robot.cpp **** 		correct_steering_angle();
 887              		.loc 2 182 0
 888 0042 0848     		ldr	r0, .L91+20
 889 0044 FFF7FEFF 		bl	printf
 890              	.LVL85:
 183:Core/Src/robot/robot.cpp **** 		
 891              		.loc 2 183 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 27


 892 0048 FFF7FEFF 		bl	_Z22correct_steering_anglev
 893              	.LVL86:
 894 004c F6E7     		b	.L84
 895              	.L92:
 896 004e 00BF     		.align	2
 897              	.L91:
 898 0050 00000000 		.word	leg
 899 0054 10000000 		.word	.LC2
 900 0058 00000000 		.word	0
 901 005c 00000000 		.word	steering
 902 0060 00000000 		.word	.LC0
 903 0064 08000000 		.word	.LC1
 904              		.cfi_endproc
 905              	.LFE496:
 907              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 908              		.align	1
 909              		.global	_Z21calculate_robot_anglev
 910              		.syntax unified
 911              		.thumb
 912              		.thumb_func
 913              		.fpu fpv4-sp-d16
 915              	_Z21calculate_robot_anglev:
 916              	.LFB499:
 253:Core/Src/robot/robot.cpp **** 	//*/
 917              		.loc 2 253 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921 0000 08B5     		push	{r3, lr}
 922              	.LCFI21:
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 3, -8
 925              		.cfi_offset 14, -4
 926 0002 2DED028B 		vpush.64	{d8}
 927              	.LCFI22:
 928              		.cfi_def_cfa_offset 16
 929              		.cfi_offset 80, -16
 930              		.cfi_offset 81, -12
 255:Core/Src/robot/robot.cpp **** 	{
 931              		.loc 2 255 0
 932 0006 0F48     		ldr	r0, .L98
 933 0008 FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 934              	.LVL87:
 935 000c 68B9     		cbnz	r0, .L97
 261:Core/Src/robot/robot.cpp **** 	}
 936              		.loc 2 261 0
 937 000e 0E4B     		ldr	r3, .L98+4
 938 0010 93ED008A 		vldr.32	s16, [r3]
 939              	.LVL88:
 940              	.LBB136:
 941              	.LBB137:
 942              		.loc 4 91 0
 943 0014 0D48     		ldr	r0, .L98+8
 944 0016 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 945              	.LVL89:
 946              	.LBE137:
 947              	.LBE136:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 28


 261:Core/Src/robot/robot.cpp **** 	}
 948              		.loc 2 261 0
 949 001a 38EE400A 		vsub.f32	s0, s16, s0
 950 001e 0C4B     		ldr	r3, .L98+12
 951 0020 83ED000A 		vstr.32	s0, [r3]
 952              	.L93:
 287:Core/Src/robot/robot.cpp **** 
 953              		.loc 2 287 0
 954 0024 BDEC028B 		vldm	sp!, {d8}
 955              	.LCFI23:
 956              		.cfi_remember_state
 957              		.cfi_restore 80
 958              		.cfi_restore 81
 959              		.cfi_def_cfa_offset 8
 960 0028 08BD     		pop	{r3, pc}
 961              	.L97:
 962              	.LCFI24:
 963              		.cfi_restore_state
 964              	.LVL90:
 965              	.LBB138:
 966              	.LBB139:
 967              		.loc 4 91 0
 968 002a 0848     		ldr	r0, .L98+8
 969 002c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 970              	.LVL91:
 971              	.LBE139:
 972              	.LBE138:
 257:Core/Src/robot/robot.cpp **** 	}
 973              		.loc 2 257 0
 974 0030 074B     		ldr	r3, .L98+12
 975 0032 D3ED007A 		vldr.32	s15, [r3]
 976 0036 30EE270A 		vadd.f32	s0, s0, s15
 977 003a 034B     		ldr	r3, .L98+4
 978 003c 83ED000A 		vstr.32	s0, [r3]
 979 0040 F0E7     		b	.L93
 980              	.L99:
 981 0042 00BF     		.align	2
 982              	.L98:
 983 0044 00000000 		.word	leg
 984 0048 00000000 		.word	.LANCHOR7
 985 004c 0C000000 		.word	steering+12
 986 0050 00000000 		.word	.LANCHOR9
 987              		.cfi_endproc
 988              	.LFE499:
 990              		.global	__aeabi_dmul
 991              		.global	__aeabi_d2f
 992              		.global	__aeabi_dcmple
 993              		.section	.text._Z2goif,"ax",%progbits
 994              		.align	1
 995              		.global	_Z2goif
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 999              		.fpu fpv4-sp-d16
 1001              	_Z2goif:
 1002              	.LFB494:
 138:Core/Src/robot/robot.cpp **** 	angle *= PI / 180;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 29


 1003              		.loc 2 138 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              	.LVL92:
 1008 0000 10B5     		push	{r4, lr}
 1009              	.LCFI25:
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 4, -8
 1012              		.cfi_offset 14, -4
 1013 0002 2DED028B 		vpush.64	{d8}
 1014              	.LCFI26:
 1015              		.cfi_def_cfa_offset 16
 1016              		.cfi_offset 80, -16
 1017              		.cfi_offset 81, -12
 1018 0006 0446     		mov	r4, r0
 139:Core/Src/robot/robot.cpp **** 	move_leg(step, angle);
 1019              		.loc 2 139 0
 1020 0008 10EE100A 		vmov	r0, s0
 1021              	.LVL93:
 1022 000c FFF7FEFF 		bl	__aeabi_f2d
 1023              	.LVL94:
 1024 0010 2BA3     		adr	r3, .L109+24
 1025 0012 D3E90023 		ldrd	r2, [r3]
 1026 0016 FFF7FEFF 		bl	__aeabi_dmul
 1027              	.LVL95:
 1028 001a FFF7FEFF 		bl	__aeabi_d2f
 1029              	.LVL96:
 1030 001e 08EE100A 		vmov	s16, r0
 1031              	.LVL97:
 140:Core/Src/robot/robot.cpp **** 	move_steering(step, angle);
 1032              		.loc 2 140 0
 1033 0022 00EE100A 		vmov	s0, r0
 1034 0026 2046     		mov	r0, r4
 1035              	.LVL98:
 1036 0028 FFF7FEFF 		bl	_Z8move_legif
 1037              	.LVL99:
 141:Core/Src/robot/robot.cpp **** 
 1038              		.loc 2 141 0
 1039 002c B0EE480A 		vmov.f32	s0, s16
 1040 0030 2046     		mov	r0, r4
 1041 0032 FFF7FEFF 		bl	_Z13move_steeringif
 1042              	.LVL100:
 143:Core/Src/robot/robot.cpp **** 	// printf(" steps = %d\t robot_angle = %d\t steering_angle = %d\t leg_1_angle = %d\t leg_2_angle =
 1043              		.loc 2 143 0
 1044 0036 FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1045              	.LVL101:
 1046              	.LBB140:
 1047              	.LBB141:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1048              		.loc 3 45 0
 1049 003a 1D4A     		ldr	r2, .L109+8
 1050 003c 1369     		ldr	r3, [r2, #16]
 1051              	.LVL102:
 1052              	.LBE141:
 1053              	.LBE140:
 1054              	.LBB142:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 30


 1055              	.LBB143:
 1056 003e D26E     		ldr	r2, [r2, #108]
 1057              	.LVL103:
 1058              	.LBE143:
 1059              	.LBE142:
 146:Core/Src/robot/robot.cpp **** 	{
 1060              		.loc 2 146 0
 1061 0040 1344     		add	r3, r3, r2
 1062 0042 03EBD373 		add	r3, r3, r3, lsr #31
 1063 0046 B4EB630F 		cmp	r4, r3, asr #1
 1064 004a 27DC     		bgt	.L103
 146:Core/Src/robot/robot.cpp **** 	{
 1065              		.loc 2 146 0 is_stmt 0 discriminator 1
 1066 004c 194B     		ldr	r3, .L109+12
 1067 004e D3ED007A 		vldr.32	s15, [r3]
 1068 0052 38EE678A 		vsub.f32	s16, s16, s15
 1069              	.LVL104:
 1070 0056 F0EEC87A 		vabs.f32	s15, s16
 1071 005a 17EE900A 		vmov	r0, s15
 1072 005e FFF7FEFF 		bl	__aeabi_f2d
 1073              	.LVL105:
 1074 0062 11A3     		adr	r3, .L109
 1075 0064 D3E90023 		ldrd	r2, [r3]
 1076 0068 FFF7FEFF 		bl	__aeabi_dcmple
 1077              	.LVL106:
 1078 006c 08B9     		cbnz	r0, .L108
 155:Core/Src/robot/robot.cpp **** 	}
 1079              		.loc 2 155 0 is_stmt 1
 1080 006e 0020     		movs	r0, #0
 1081 0070 15E0     		b	.L101
 1082              	.L108:
 148:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1083              		.loc 2 148 0
 1084 0072 9FED118A 		vldr.32	s16, .L109+16
 1085 0076 0E4C     		ldr	r4, .L109+8
 1086              	.LVL107:
 1087 0078 B0EE480A 		vmov.f32	s0, s16
 1088 007c 2046     		mov	r0, r4
 1089 007e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1090              	.LVL108:
 149:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1091              		.loc 2 149 0
 1092 0082 B0EE480A 		vmov.f32	s0, s16
 1093 0086 04F15C00 		add	r0, r4, #92
 1094 008a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1095              	.LVL109:
 150:Core/Src/robot/robot.cpp **** 		return true;
 1096              		.loc 2 150 0
 1097 008e B0EE480A 		vmov.f32	s0, s16
 1098 0092 0A48     		ldr	r0, .L109+20
 1099 0094 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1100              	.LVL110:
 151:Core/Src/robot/robot.cpp **** 	}
 1101              		.loc 2 151 0
 1102 0098 0120     		movs	r0, #1
 1103 009a 00E0     		b	.L101
 1104              	.LVL111:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 31


 1105              	.L103:
 155:Core/Src/robot/robot.cpp **** 	}
 1106              		.loc 2 155 0
 1107 009c 0020     		movs	r0, #0
 1108              	.LVL112:
 1109              	.L101:
 157:Core/Src/robot/robot.cpp **** 
 1110              		.loc 2 157 0
 1111 009e BDEC028B 		vldm	sp!, {d8}
 1112              	.LCFI27:
 1113              		.cfi_restore 80
 1114              		.cfi_restore 81
 1115              		.cfi_def_cfa_offset 8
 1116 00a2 10BD     		pop	{r4, pc}
 1117              	.L110:
 1118 00a4 AFF30080 		.align	3
 1119              	.L109:
 1120 00a8 9A999999 		.word	-1717986918
 1121 00ac 9999B93F 		.word	1069128089
 1122 00b0 00000000 		.word	leg
 1123 00b4 00000000 		.word	.LANCHOR7
 1124 00b8 00000000 		.word	0
 1125 00bc 00000000 		.word	steering
 1126 00c0 399D52A2 		.word	-1571644103
 1127 00c4 46DF913F 		.word	1066524486
 1128              		.cfi_endproc
 1129              	.LFE494:
 1131              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1132              		.align	1
 1133              		.global	_Z15calculate_datasv
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu fpv4-sp-d16
 1139              	_Z15calculate_datasv:
 1140              	.LFB500:
 290:Core/Src/robot/robot.cpp **** 	leg[0].calculate_omega();
 1141              		.loc 2 290 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 16
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145 0000 10B5     		push	{r4, lr}
 1146              	.LCFI28:
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 4, -8
 1149              		.cfi_offset 14, -4
 1150 0002 84B0     		sub	sp, sp, #16
 1151              	.LCFI29:
 1152              		.cfi_def_cfa_offset 24
 291:Core/Src/robot/robot.cpp **** 	leg[1].calculate_omega();
 1153              		.loc 2 291 0
 1154 0004 2A4C     		ldr	r4, .L115+24
 1155 0006 2046     		mov	r0, r4
 1156 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1157              	.LVL113:
 292:Core/Src/robot/robot.cpp **** 	steering.calculate_omega();
 1158              		.loc 2 292 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 32


 1159 000c 04F15C00 		add	r0, r4, #92
 1160 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1161              	.LVL114:
 1162              	.LBB144:
 1163              	.LBB145:
  81:Core/Inc/devs/steering.h **** 
 1164              		.loc 4 81 0
 1165 0014 2748     		ldr	r0, .L115+28
 1166 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1167              	.LVL115:
 1168              	.LBE145:
 1169              	.LBE144:
 294:Core/Src/robot/robot.cpp **** 	HAL_ADC_Start(&hadc1);
 1170              		.loc 2 294 0
 1171 001a 01AC     		add	r4, sp, #4
 1172 001c 0A21     		movs	r1, #10
 1173 001e 2046     		mov	r0, r4
 1174 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1175              	.LVL116:
 1176 0024 244B     		ldr	r3, .L115+32
 1177 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1178 002a 83E80700 		stm	r3, {r0, r1, r2}
 295:Core/Src/robot/robot.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 1179              		.loc 2 295 0
 1180 002e 234C     		ldr	r4, .L115+36
 1181 0030 2046     		mov	r0, r4
 1182 0032 FFF7FEFF 		bl	HAL_ADC_Start
 1183              	.LVL117:
 296:Core/Src/robot/robot.cpp **** 	{
 1184              		.loc 2 296 0
 1185 0036 0521     		movs	r1, #5
 1186 0038 2046     		mov	r0, r4
 1187 003a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1188              	.LVL118:
 1189 003e 08B1     		cbz	r0, .L114
 1190              	.L111:
 302:Core/Src/robot/robot.cpp **** 
 1191              		.loc 2 302 0
 1192 0040 04B0     		add	sp, sp, #16
 1193              	.LCFI30:
 1194              		.cfi_remember_state
 1195              		.cfi_def_cfa_offset 8
 1196              		@ sp needed
 1197 0042 10BD     		pop	{r4, pc}
 1198              	.L114:
 1199              	.LCFI31:
 1200              		.cfi_restore_state
 298:Core/Src/robot/robot.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 1201              		.loc 2 298 0
 1202 0044 2046     		mov	r0, r4
 1203 0046 FFF7FEFF 		bl	HAL_ADC_GetValue
 1204              	.LVL119:
 1205 004a 07EE900A 		vmov	s15, r0	@ int
 1206 004e F8EE677A 		vcvt.f32.u32	s15, s15
 1207 0052 1B4C     		ldr	r4, .L115+40
 1208 0054 C4ED007A 		vstr.32	s15, [r4]
 299:Core/Src/robot/robot.cpp **** 		// printf("\n\tDistance = %d", (int)robotx);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 33


 1209              		.loc 2 299 0
 1210 0058 17EE900A 		vmov	r0, s15
 1211 005c FFF7FEFF 		bl	__aeabi_f2d
 1212              	.LVL120:
 1213 0060 0DA3     		adr	r3, .L115
 1214 0062 D3E90023 		ldrd	r2, [r3]
 1215 0066 FFF7FEFF 		bl	__aeabi_dmul
 1216              	.LVL121:
 1217 006a 0022     		movs	r2, #0
 1218 006c 154B     		ldr	r3, .L115+44
 1219 006e FFF7FEFF 		bl	__aeabi_dmul
 1220              	.LVL122:
 1221 0072 9FED0B1B 		vldr.64	d1, .L115+8
 1222 0076 41EC100B 		vmov	d0, r0, r1
 1223 007a FFF7FEFF 		bl	pow
 1224              	.LVL123:
 1225 007e 0AA3     		adr	r3, .L115+16
 1226 0080 D3E90023 		ldrd	r2, [r3]
 1227 0084 51EC100B 		vmov	r0, r1, d0
 1228 0088 FFF7FEFF 		bl	__aeabi_dmul
 1229              	.LVL124:
 1230 008c FFF7FEFF 		bl	__aeabi_d2f
 1231              	.LVL125:
 1232 0090 2060     		str	r0, [r4]	@ float
 302:Core/Src/robot/robot.cpp **** 
 1233              		.loc 2 302 0
 1234 0092 D5E7     		b	.L111
 1235              	.L116:
 1236 0094 AFF30080 		.align	3
 1237              	.L115:
 1238 0098 66666666 		.word	1717986918
 1239 009c 66660A40 		.word	1074423398
 1240 00a0 598638D6 		.word	-700938663
 1241 00a4 C56DF1BF 		.word	-1074696763
 1242 00a8 F6285C8F 		.word	-1889785610
 1243 00ac C2154F40 		.word	1078924738
 1244 00b0 00000000 		.word	leg
 1245 00b4 0C000000 		.word	steering+12
 1246 00b8 00000000 		.word	.LANCHOR1
 1247 00bc 00000000 		.word	hadc1
 1248 00c0 00000000 		.word	.LANCHOR10
 1249 00c4 0000303F 		.word	1060110336
 1250              		.cfi_endproc
 1251              	.LFE500:
 1253              		.section	.text._Z19initialize_positionv,"ax",%progbits
 1254              		.align	1
 1255              		.global	_Z19initialize_positionv
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1259              		.fpu fpv4-sp-d16
 1261              	_Z19initialize_positionv:
 1262              	.LFB491:
  30:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
 1263              		.loc 2 30 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 34


 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267 0000 70B5     		push	{r4, r5, r6, lr}
 1268              	.LCFI32:
 1269              		.cfi_def_cfa_offset 16
 1270              		.cfi_offset 4, -16
 1271              		.cfi_offset 5, -12
 1272              		.cfi_offset 6, -8
 1273              		.cfi_offset 14, -4
 1274 0002 2DED028B 		vpush.64	{d8}
 1275              	.LCFI33:
 1276              		.cfi_def_cfa_offset 24
 1277              		.cfi_offset 80, -24
 1278              		.cfi_offset 81, -20
  31:Core/Src/robot/robot.cpp **** 	while (true)
 1279              		.loc 2 31 0
 1280 0006 FFF7FEFF 		bl	HAL_GetTick
 1281              	.LVL126:
 1282 000a 0546     		mov	r5, r0
 1283              	.LVL127:
 1284              	.L118:
  34:Core/Src/robot/robot.cpp **** 		{
 1285              		.loc 2 34 0
 1286 000c FFF7FEFF 		bl	HAL_GetTick
 1287              	.LVL128:
 1288 0010 401B     		subs	r0, r0, r5
 1289 0012 0928     		cmp	r0, #9
 1290 0014 FAD9     		bls	.L118
  36:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Leg_Orientation\t");
 1291              		.loc 2 36 0
 1292 0016 FFF7FEFF 		bl	HAL_GetTick
 1293              	.LVL129:
 1294 001a 0546     		mov	r5, r0
 1295              	.LVL130:
  37:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1296              		.loc 2 37 0
 1297 001c 2848     		ldr	r0, .L125
 1298              	.LVL131:
 1299 001e FFF7FEFF 		bl	printf
 1300              	.LVL132:
  38:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1301              		.loc 2 38 0
 1302 0022 FFF7FEFF 		bl	_Z15calculate_datasv
 1303              	.LVL133:
  39:Core/Src/robot/robot.cpp **** 				break;
 1304              		.loc 2 39 0
 1305 0026 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1306              	.LVL134:
 1307 002a 0028     		cmp	r0, #0
 1308 002c EED0     		beq	.L118
 1309              	.LBB146:
  43:Core/Src/robot/robot.cpp **** 	{
 1310              		.loc 2 43 0
 1311 002e 0024     		movs	r4, #0
 1312 0030 00E0     		b	.L122
 1313              	.LVL135:
 1314              	.L121:
  43:Core/Src/robot/robot.cpp **** 	{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 35


 1315              		.loc 2 43 0 is_stmt 0 discriminator 2
 1316 0032 0134     		adds	r4, r4, #1
 1317              	.LVL136:
 1318              	.L122:
  43:Core/Src/robot/robot.cpp **** 	{
 1319              		.loc 2 43 0 discriminator 1
 1320 0034 234B     		ldr	r3, .L125+4
 1321 0036 9C42     		cmp	r4, r3
 1322 0038 20DC     		bgt	.L123
  45:Core/Src/robot/robot.cpp **** 		{
 1323              		.loc 2 45 0 is_stmt 1
 1324 003a FFF7FEFF 		bl	HAL_GetTick
 1325              	.LVL137:
 1326 003e 401B     		subs	r0, r0, r5
 1327 0040 0928     		cmp	r0, #9
 1328 0042 F6D9     		bls	.L121
  47:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1329              		.loc 2 47 0
 1330 0044 FFF7FEFF 		bl	HAL_GetTick
 1331              	.LVL138:
 1332 0048 0546     		mov	r5, r0
 1333              	.LVL139:
  48:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1334              		.loc 2 48 0
 1335 004a 1F48     		ldr	r0, .L125+8
 1336              	.LVL140:
 1337 004c FFF7FEFF 		bl	printf
 1338              	.LVL141:
  49:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1339              		.loc 2 49 0
 1340 0050 FFF7FEFF 		bl	_Z15calculate_datasv
 1341              	.LVL142:
  50:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1342              		.loc 2 50 0
 1343 0054 9FED1D8A 		vldr.32	s16, .L125+12
 1344 0058 1D4E     		ldr	r6, .L125+16
 1345 005a B0EE480A 		vmov.f32	s0, s16
 1346 005e 3046     		mov	r0, r6
 1347 0060 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1348              	.LVL143:
  51:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
 1349              		.loc 2 51 0
 1350 0064 B0EE480A 		vmov.f32	s0, s16
 1351 0068 06F15C00 		add	r0, r6, #92
 1352 006c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1353              	.LVL144:
  52:Core/Src/robot/robot.cpp **** 		}
 1354              		.loc 2 52 0
 1355 0070 B0EE480A 		vmov.f32	s0, s16
 1356 0074 1748     		ldr	r0, .L125+20
 1357 0076 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1358              	.LVL145:
 1359 007a DAE7     		b	.L121
 1360              	.LVL146:
 1361              	.L123:
 1362              	.LBE146:
  57:Core/Src/robot/robot.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 36


 1363              		.loc 2 57 0
 1364 007c FFF7FEFF 		bl	HAL_GetTick
 1365              	.LVL147:
 1366 0080 401B     		subs	r0, r0, r5
 1367 0082 0928     		cmp	r0, #9
 1368 0084 FAD9     		bls	.L123
  59:Core/Src/robot/robot.cpp **** 			printf("\n\tInitializing_Steering_Orientation\t");
 1369              		.loc 2 59 0
 1370 0086 FFF7FEFF 		bl	HAL_GetTick
 1371              	.LVL148:
 1372 008a 0546     		mov	r5, r0
 1373              	.LVL149:
  60:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1374              		.loc 2 60 0
 1375 008c 1248     		ldr	r0, .L125+24
 1376              	.LVL150:
 1377 008e FFF7FEFF 		bl	printf
 1378              	.LVL151:
  61:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1379              		.loc 2 61 0
 1380 0092 9FED0E8A 		vldr.32	s16, .L125+12
 1381 0096 0E4C     		ldr	r4, .L125+16
 1382 0098 B0EE480A 		vmov.f32	s0, s16
 1383 009c 2046     		mov	r0, r4
 1384 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1385              	.LVL152:
  62:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1386              		.loc 2 62 0
 1387 00a2 B0EE480A 		vmov.f32	s0, s16
 1388 00a6 04F15C00 		add	r0, r4, #92
 1389 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1390              	.LVL153:
  63:Core/Src/robot/robot.cpp **** 			if (initialize_steering_position() == true)
 1391              		.loc 2 63 0
 1392 00ae FFF7FEFF 		bl	_Z15calculate_datasv
 1393              	.LVL154:
  64:Core/Src/robot/robot.cpp **** 				break;
 1394              		.loc 2 64 0
 1395 00b2 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1396              	.LVL155:
 1397 00b6 0028     		cmp	r0, #0
 1398 00b8 E0D0     		beq	.L123
  68:Core/Src/robot/robot.cpp **** 
 1399              		.loc 2 68 0
 1400 00ba BDEC028B 		vldm	sp!, {d8}
 1401              	.LCFI34:
 1402              		.cfi_restore 80
 1403              		.cfi_restore 81
 1404              		.cfi_def_cfa_offset 16
 1405 00be 70BD     		pop	{r4, r5, r6, pc}
 1406              	.LVL156:
 1407              	.L126:
 1408              		.align	2
 1409              	.L125:
 1410 00c0 00000000 		.word	.LC3
 1411 00c4 BFC62D00 		.word	2999999
 1412 00c8 20000000 		.word	.LC4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 37


 1413 00cc 00000000 		.word	0
 1414 00d0 00000000 		.word	leg
 1415 00d4 00000000 		.word	steering
 1416 00d8 34000000 		.word	.LC5
 1417              		.cfi_endproc
 1418              	.LFE491:
 1420              		.section	.text._Z4playv,"ax",%progbits
 1421              		.align	1
 1422              		.global	_Z4playv
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv4-sp-d16
 1428              	_Z4playv:
 1429              	.LFB501:
 305:Core/Src/robot/robot.cpp **** 	uint32_t dt = HAL_GetTick();
 1430              		.loc 2 305 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 16
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434 0000 30B5     		push	{r4, r5, lr}
 1435              	.LCFI35:
 1436              		.cfi_def_cfa_offset 12
 1437              		.cfi_offset 4, -12
 1438              		.cfi_offset 5, -8
 1439              		.cfi_offset 14, -4
 1440 0002 2DED028B 		vpush.64	{d8}
 1441              	.LCFI36:
 1442              		.cfi_def_cfa_offset 20
 1443              		.cfi_offset 80, -20
 1444              		.cfi_offset 81, -16
 1445 0006 85B0     		sub	sp, sp, #20
 1446              	.LCFI37:
 1447              		.cfi_def_cfa_offset 40
 306:Core/Src/robot/robot.cpp **** 	initial_angle = read_Orientation(10);
 1448              		.loc 2 306 0
 1449 0008 FFF7FEFF 		bl	HAL_GetTick
 1450              	.LVL157:
 1451 000c 0446     		mov	r4, r0
 1452              	.LVL158:
 307:Core/Src/robot/robot.cpp **** 
 1453              		.loc 2 307 0
 1454 000e 01AD     		add	r5, sp, #4
 1455 0010 0A21     		movs	r1, #10
 1456 0012 2846     		mov	r0, r5
 1457              	.LVL159:
 1458 0014 FFF7FEFF 		bl	_Z16read_Orientationm
 1459              	.LVL160:
 1460 0018 294B     		ldr	r3, .L135
 1461 001a 95E80700 		ldm	r5, {r0, r1, r2}
 1462 001e 83E80700 		stm	r3, {r0, r1, r2}
 1463              	.L128:
 314:Core/Src/robot/robot.cpp **** 		{
 1464              		.loc 2 314 0
 1465 0022 FFF7FEFF 		bl	HAL_GetTick
 1466              	.LVL161:
 1467 0026 001B     		subs	r0, r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 38


 1468 0028 0928     		cmp	r0, #9
 1469 002a FAD9     		bls	.L128
 316:Core/Src/robot/robot.cpp **** 			printf("\n\tWaiting_to_start\t");
 1470              		.loc 2 316 0
 1471 002c FFF7FEFF 		bl	HAL_GetTick
 1472              	.LVL162:
 1473 0030 0446     		mov	r4, r0
 1474              	.LVL163:
 317:Core/Src/robot/robot.cpp **** 			calculate_datas();
 1475              		.loc 2 317 0
 1476 0032 2448     		ldr	r0, .L135+4
 1477              	.LVL164:
 1478 0034 FFF7FEFF 		bl	printf
 1479              	.LVL165:
 318:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1480              		.loc 2 318 0
 1481 0038 FFF7FEFF 		bl	_Z15calculate_datasv
 1482              	.LVL166:
 319:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1483              		.loc 2 319 0
 1484 003c 9FED228A 		vldr.32	s16, .L135+8
 1485 0040 224D     		ldr	r5, .L135+12
 1486 0042 B0EE480A 		vmov.f32	s0, s16
 1487 0046 2846     		mov	r0, r5
 1488 0048 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1489              	.LVL167:
 320:Core/Src/robot/robot.cpp **** 			steering.set_omega(0);
 1490              		.loc 2 320 0
 1491 004c B0EE480A 		vmov.f32	s0, s16
 1492 0050 05F15C00 		add	r0, r5, #92
 1493 0054 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1494              	.LVL168:
 321:Core/Src/robot/robot.cpp **** 			if (ROBOT_START_FLAG)
 1495              		.loc 2 321 0
 1496 0058 B0EE480A 		vmov.f32	s0, s16
 1497 005c 1C48     		ldr	r0, .L135+16
 1498 005e FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1499              	.LVL169:
 322:Core/Src/robot/robot.cpp **** 				break;
 1500              		.loc 2 322 0
 1501 0062 1C4B     		ldr	r3, .L135+20
 1502 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1503 0066 002B     		cmp	r3, #0
 1504 0068 DBD0     		beq	.L128
 1505              	.LBB147:
 326:Core/Src/robot/robot.cpp **** 	{
 1506              		.loc 2 326 0
 1507 006a 0025     		movs	r5, #0
 1508              	.L133:
 1509              	.LVL170:
 326:Core/Src/robot/robot.cpp **** 	{
 1510              		.loc 2 326 0 is_stmt 0 discriminator 1
 1511 006c 052D     		cmp	r5, #5
 1512 006e 22DC     		bgt	.L130
 1513              	.L131:
 336:Core/Src/robot/robot.cpp **** 			{
 1514              		.loc 2 336 0 is_stmt 1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 39


 1515 0070 FFF7FEFF 		bl	HAL_GetTick
 1516              	.LVL171:
 1517 0074 001B     		subs	r0, r0, r4
 1518 0076 0928     		cmp	r0, #9
 1519 0078 FAD9     		bls	.L131
 338:Core/Src/robot/robot.cpp **** 				// printf("\tstep=%d\t", i);
 1520              		.loc 2 338 0
 1521 007a FFF7FEFF 		bl	HAL_GetTick
 1522              	.LVL172:
 1523 007e 0446     		mov	r4, r0
 1524              	.LVL173:
 340:Core/Src/robot/robot.cpp **** 				if (go(steps[i], -angles[i]) == true)
 1525              		.loc 2 340 0
 1526 0080 FFF7FEFF 		bl	_Z15calculate_datasv
 1527              	.LVL174:
 341:Core/Src/robot/robot.cpp **** 					break;
 1528              		.loc 2 341 0
 1529 0084 A900     		lsls	r1, r5, #2
 1530 0086 144A     		ldr	r2, .L135+24
 1531 0088 0A44     		add	r2, r2, r1
 1532 008a D2ED007A 		vldr.32	s15, [r2]
 1533 008e 134B     		ldr	r3, .L135+28
 1534 0090 0B44     		add	r3, r3, r1
 1535 0092 93ED000A 		vldr.32	s0, [r3]
 1536 0096 B1EE400A 		vneg.f32	s0, s0
 1537 009a FDEEE77A 		vcvt.s32.f32	s15, s15
 1538 009e 17EE900A 		vmov	r0, s15	@ int
 1539 00a2 FFF7FEFF 		bl	_Z2goif
 1540              	.LVL175:
 1541 00a6 0028     		cmp	r0, #0
 1542 00a8 E2D0     		beq	.L131
 345:Core/Src/robot/robot.cpp **** 	}
 1543              		.loc 2 345 0 discriminator 2
 1544 00aa 2946     		mov	r1, r5
 1545 00ac 0C48     		ldr	r0, .L135+32
 1546 00ae FFF7FEFF 		bl	printf
 1547              	.LVL176:
 326:Core/Src/robot/robot.cpp **** 	{
 1548              		.loc 2 326 0 discriminator 2
 1549 00b2 0135     		adds	r5, r5, #1
 1550              	.LVL177:
 1551 00b4 DAE7     		b	.L133
 1552              	.L130:
 1553              	.LBE147:
 1554              		.loc 2 348 0
 1555 00b6 0120     		movs	r0, #1
 1556 00b8 05B0     		add	sp, sp, #20
 1557              	.LCFI38:
 1558              		.cfi_def_cfa_offset 20
 1559              		@ sp needed
 1560 00ba BDEC028B 		vldm	sp!, {d8}
 1561              	.LCFI39:
 1562              		.cfi_restore 80
 1563              		.cfi_restore 81
 1564              		.cfi_def_cfa_offset 12
 1565 00be 30BD     		pop	{r4, r5, pc}
 1566              	.LVL178:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 40


 1567              	.L136:
 1568              		.align	2
 1569              	.L135:
 1570 00c0 00000000 		.word	.LANCHOR0
 1571 00c4 00000000 		.word	.LC6
 1572 00c8 00000000 		.word	0
 1573 00cc 00000000 		.word	leg
 1574 00d0 00000000 		.word	steering
 1575 00d4 00000000 		.word	.LANCHOR11
 1576 00d8 00000000 		.word	.LANCHOR5
 1577 00dc 00000000 		.word	.LANCHOR12
 1578 00e0 14000000 		.word	.LC7
 1579              		.cfi_endproc
 1580              	.LFE501:
 1582              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1583              		.align	1
 1584              		.syntax unified
 1585              		.thumb
 1586              		.thumb_func
 1587              		.fpu fpv4-sp-d16
 1589              	_GLOBAL__sub_I_initial_angle:
 1590              	.LFB513:
 1591              		.loc 2 348 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595 0000 08B5     		push	{r3, lr}
 1596              	.LCFI40:
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 3, -8
 1599              		.cfi_offset 14, -4
 1600              		.loc 2 348 0
 1601 0002 4FF6FF71 		movw	r1, #65535
 1602 0006 0120     		movs	r0, #1
 1603 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1604              	.LVL179:
 1605 000c 08BD     		pop	{r3, pc}
 1606              		.cfi_endproc
 1607              	.LFE513:
 1609              		.section	.init_array,"aw",%init_array
 1610              		.align	2
 1611 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1612              		.global	angles
 1613              		.global	steps
 1614              		.global	xdistance
 1615              		.global	tolerance
 1616              		.global	temp_robot_angle
 1617              		.global	robot_angle
 1618              		.global	sand_dune_crossed_flag
 1619              		.global	STEERING_FLAG
 1620              		.global	ROBOT_START_FLAG
 1621              		.global	robotx
 1622              		.global	angle
 1623              		.global	initial_angle
 1624              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1625              		.set	.LANCHOR11,. + 0
 1628              	ROBOT_START_FLAG:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 41


 1629 0000 00       		.space	1
 1630              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1631              		.set	.LANCHOR4,. + 0
 1634              	STEERING_FLAG:
 1635 0000 00       		.space	1
 1636              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1637              		.set	.LANCHOR2,. + 0
 1640              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1641 0000 00       		.space	1
 1642              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1643              		.set	.LANCHOR3,. + 0
 1646              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1647 0000 00       		.space	1
 1648              		.section	.bss.angle,"aw",%nobits
 1649              		.align	2
 1650              		.set	.LANCHOR1,. + 0
 1653              	angle:
 1654 0000 00000000 		.space	12
 1654      00000000 
 1654      00000000 
 1655              		.section	.bss.initial_angle,"aw",%nobits
 1656              		.align	2
 1657              		.set	.LANCHOR0,. + 0
 1660              	initial_angle:
 1661 0000 00000000 		.space	12
 1661      00000000 
 1661      00000000 
 1662              		.section	.bss.robot_angle,"aw",%nobits
 1663              		.align	2
 1664              		.set	.LANCHOR7,. + 0
 1667              	robot_angle:
 1668 0000 00000000 		.space	4
 1669              		.section	.bss.robotx,"aw",%nobits
 1670              		.align	2
 1671              		.set	.LANCHOR10,. + 0
 1674              	robotx:
 1675 0000 00000000 		.space	4
 1676              		.section	.bss.sand_dune_crossed_flag,"aw",%nobits
 1679              	sand_dune_crossed_flag:
 1680 0000 00       		.space	1
 1681              		.section	.bss.temp_robot_angle,"aw",%nobits
 1682              		.align	2
 1683              		.set	.LANCHOR9,. + 0
 1686              	temp_robot_angle:
 1687 0000 00000000 		.space	4
 1688              		.section	.data._ZL9leg_speed,"aw",%progbits
 1689              		.align	2
 1690              		.set	.LANCHOR6,. + 0
 1693              	_ZL9leg_speed:
 1694 0000 0000A040 		.word	1084227584
 1695              		.section	.data.angles,"aw",%progbits
 1696              		.align	2
 1697              		.set	.LANCHOR12,. + 0
 1700              	angles:
 1701 0000 00000000 		.word	0
 1702 0004 00004842 		.word	1112014848
 1703 0008 00004842 		.word	1112014848
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 42


 1704 000c 00007042 		.word	1114636288
 1705 0010 00000000 		.word	0
 1706 0014 00000000 		.word	0
 1707 0018 00000000 		.word	0
 1708              		.section	.data.steps,"aw",%progbits
 1709              		.align	2
 1710              		.set	.LANCHOR5,. + 0
 1713              	steps:
 1714 0000 0000E040 		.word	1088421888
 1715 0004 00004041 		.word	1094713344
 1716 0008 00008841 		.word	1099431936
 1717 000c 00009841 		.word	1100480512
 1718 0010 0000C841 		.word	1103626240
 1719 0014 0000F041 		.word	1106247680
 1720 0018 00004842 		.word	1112014848
 1721              		.section	.data.tolerance,"aw",%progbits
 1722              		.align	2
 1723              		.set	.LANCHOR8,. + 0
 1726              	tolerance:
 1727 0000 6E469D3C 		.word	1016940142
 1728              		.section	.data.xdistance,"aw",%progbits
 1729              		.align	2
 1732              	xdistance:
 1733 0000 00002042 		.word	1109393408
 1734              		.section	.rodata._Z13move_steeringif.str1.4,"aMS",%progbits,1
 1735              		.align	2
 1736              	.LC0:
 1737 0000 72616973 		.ascii	"raised\000"
 1737      656400
 1738 0007 00       		.space	1
 1739              	.LC1:
 1740 0008 66616C6C 		.ascii	"fallen\000"
 1740      656E00
 1741 000f 00       		.space	1
 1742              	.LC2:
 1743 0010 6E6F7468 		.ascii	"nothing\000"
 1743      696E6700 
 1744              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1745              		.align	2
 1746              	.LC3:
 1747 0000 0A09496E 		.ascii	"\012\011Initializing_Leg_Orientation\011\000"
 1747      69746961 
 1747      6C697A69 
 1747      6E675F4C 
 1747      65675F4F 
 1748              	.LC4:
 1749 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1749      6974696E 
 1749      675F5468 
 1749      655F4C65 
 1749      67200900 
 1750              	.LC5:
 1751 0034 0A09496E 		.ascii	"\012\011Initializing_Steering_Orientation\011\000"
 1751      69746961 
 1751      6C697A69 
 1751      6E675F53 
 1751      74656572 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 43


 1752              		.section	.rodata._Z4playv.str1.4,"aMS",%progbits,1
 1753              		.align	2
 1754              	.LC6:
 1755 0000 0A095761 		.ascii	"\012\011Waiting_to_start\011\000"
 1755      6974696E 
 1755      675F746F 
 1755      5F737461 
 1755      72740900 
 1756              	.LC7:
 1757 0014 09737465 		.ascii	"\011step=%d\011\000"
 1757      703D2564 
 1757      0900
 1758              		.text
 1759              	.Letext0:
 1760              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1761              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1762              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 1763              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1764              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1765              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1766              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1767              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1768              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1769              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1770              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1771              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1772              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1773              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1774              		.file 19 "Core/Inc/periphs/tim.h"
 1775              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1776              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1777              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1778              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1779              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1780              		.file 25 "Core/Inc/devs/motor.h"
 1781              		.file 26 "Core/Inc/devs/encoder.h"
 1782              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1783              		.file 28 "Core/Inc/devs/limit_switch.h"
 1784              		.file 29 "Core/Inc/periphs/usart.h"
 1785              		.file 30 "Core/Inc/periphs/adc.h"
 1786              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1787              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1788              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:161    .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:168    .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:389    .text._Z23initialize_leg_positionv:00000110 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:405    .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:412    .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:474    .text._Z28initialize_steering_positionv:0000003c $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:481    .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:488    .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:581    .text._Z8move_legif:0000007c $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:590    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:597    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:718    .text._Z9set_anglef:000000a4 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:731    .text._Z22correct_steering_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:738    .text._Z22correct_steering_anglev:00000000 _Z22correct_steering_anglev
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:806    .text._Z22correct_steering_anglev:00000058 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:816    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:823    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:898    .text._Z13move_steeringif:00000050 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:908    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:915    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:983    .text._Z21calculate_robot_anglev:00000044 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:994    .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1001   .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1120   .text._Z2goif:000000a8 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1132   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1139   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1238   .text._Z15calculate_datasv:00000098 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1254   .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1261   .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1410   .text._Z19initialize_positionv:000000c0 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1421   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1428   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1570   .text._Z4playv:000000c0 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1583   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1589   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1610   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1700   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1713   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1732   .data.xdistance:00000000 xdistance
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1726   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1686   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1667   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1679   .bss.sand_dune_crossed_flag:00000000 sand_dune_crossed_flag
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1634   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1628   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1674   .bss.robotx:00000000 robotx
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1653   .bss.angle:00000000 angle
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1660   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1629   .bss.ROBOT_START_FLAG:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s 			page 45


C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1635   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1640   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1641   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1646   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1647   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1649   .bss.angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1656   .bss.initial_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1663   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1670   .bss.robotx:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1680   .bss.sand_dune_crossed_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1682   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1689   .data._ZL9leg_speed:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1693   .data._ZL9leg_speed:00000000 _ZL9leg_speed
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1696   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1709   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1722   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1729   .data.xdistance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1735   .rodata._Z13move_steeringif.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1745   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4bQc9M.s:1753   .rodata._Z4playv.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
__aeabi_f2d
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN7encoder9get_angleEv
_ZN3leg9set_omegaEf
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
leg
_ZN8steering9set_omegaEf
_ZN7encoder11reset_angleEf
steering
_ZN7encoder16get_actual_angleEv
_ZN3leg9is_raisedEv
printf
_ZN3leg26is_raised_without_deadzoneEv
__aeabi_dmul
__aeabi_d2f
__aeabi_dcmple
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
pow
hadc1
HAL_GetTick
