ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"steering.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN8steering9set_omegaEf,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN8steering9set_omegaEf
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN8steering9set_omegaEf:
  26              	.LFB449:
  27              		.file 1 "Core/Src/devs/steering.cpp"
   1:Core/Src/devs/steering.cpp **** #include "steering.h"
   2:Core/Src/devs/steering.cpp **** 
   3:Core/Src/devs/steering.cpp **** void steering::set_omega(float omega){
  28              		.loc 1 3 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 2DED028B 		vpush.64	{d8}
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 24
  43              		.cfi_offset 80, -24
  44              		.cfi_offset 81, -20
  45 0006 0546     		mov	r5, r0
  46 0008 B0EE408A 		vmov.f32	s16, s0
   4:Core/Src/devs/steering.cpp **** 	//motor__.set_omega(omega);
   5:Core/Src/devs/steering.cpp **** 	float computed_omega = dpid_.compute(omega-encoder__.get_omega(), 10);
  47              		.loc 1 5 0
  48 000c 00F12404 		add	r4, r0, #36
  49 0010 0C30     		adds	r0, r0, #12
  50              	.LVL1:
  51 0012 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
  52              	.LVL2:
  53 0016 38EE400A 		vsub.f32	s0, s16, s0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 2


  54              	.LVL3:
  55              	.LBB60:
  56              	.LBB61:
  57              	.LBB62:
  58              	.LBB63:
  59              		.file 2 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
  60              		.loc 2 20 0
  61 001a 94ED016A 		vldr.32	s12, [r4, #4]
  62              	.LVL4:
  63              	.LBE63:
  64              	.LBE62:
  65              	.LBB64:
  66              	.LBB65:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  67              		.loc 2 21 0
  68 001e 94ED027A 		vldr.32	s14, [r4, #8]
  69              	.LVL5:
  70              	.LBE65:
  71              	.LBE64:
  72              	.LBB66:
  73              	.LBB67:
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  74              		.loc 2 22 0
  75 0022 D4ED037A 		vldr.32	s15, [r4, #12]
  76              	.LVL6:
  77              	.LBE67:
  78              	.LBE66:
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
  32:Core/Inc/utils/pid_algorithms.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 3


  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  78:Core/Inc/utils/pid_algorithms.h **** 
  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
  79              		.loc 2 81 0
  80 0026 DFED215A 		vldr.32	s11, .L11
  81 002a C7EEA56A 		vdiv.f32	s13, s15, s11
  82              	.LVL7:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
  83              		.loc 2 83 0
  84 002e 76EE267A 		vadd.f32	s15, s12, s13
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 4


  85              	.LVL8:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
  86              		.loc 2 84 0
  87 0032 27EE257A 		vmul.f32	s14, s14, s11
  88 0036 37EE467A 		vsub.f32	s14, s14, s12
  89 003a 36EEA66A 		vadd.f32	s12, s13, s13
  90 003e 37EE467A 		vsub.f32	s14, s14, s12
  91              	.LVL9:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
  92              		.loc 2 87 0
  93 0042 60EE277A 		vmul.f32	s15, s0, s15
  94              	.LVL10:
  95 0046 94ED076A 		vldr.32	s12, [r4, #28]
  96 004a 27EE067A 		vmul.f32	s14, s14, s12
  97              	.LVL11:
  98 004e 77EE877A 		vadd.f32	s15, s15, s14
  99 0052 94ED087A 		vldr.32	s14, [r4, #32]
 100 0056 66EE876A 		vmul.f32	s13, s13, s14
 101              	.LVL12:
 102 005a 77EEA67A 		vadd.f32	s15, s15, s13
 103 005e 94ED067A 		vldr.32	s14, [r4, #24]
 104 0062 77EE877A 		vadd.f32	s15, s15, s14
 105 0066 C4ED067A 		vstr.32	s15, [r4, #24]
 106              	.LVL13:
 107              	.LBB68:
 108              	.LBB69:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 109              		.loc 2 30 0
 110 006a 94ED047A 		vldr.32	s14, [r4, #16]
 111              	.LVL14:
 112              	.LBE69:
 113              	.LBE68:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 114              		.loc 2 89 0
 115 006e F4EEC77A 		vcmpe.f32	s15, s14
 116 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 117 0076 09DC     		bgt	.L10
 118              	.LVL15:
 119              	.LBB70:
 120              	.LBB71:
  31:Core/Inc/utils/pid_algorithms.h **** 
 121              		.loc 2 31 0
 122 0078 94ED057A 		vldr.32	s14, [r4, #20]
 123              	.LVL16:
 124              	.LBE71:
 125              	.LBE70:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 126              		.loc 2 93 0
 127 007c F4EEC77A 		vcmpe.f32	s15, s14
 128 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 129 0084 04D5     		bpl	.L4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 5


  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 130              		.loc 2 95 0
 131 0086 84ED067A 		vstr.32	s14, [r4, #24]
 132 008a 01E0     		b	.L4
 133              	.L10:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 134              		.loc 2 91 0
 135 008c 84ED067A 		vstr.32	s14, [r4, #24]
 136              	.L4:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 137              		.loc 2 98 0
 138 0090 84ED086A 		vstr.32	s12, [r4, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 139              		.loc 2 99 0
 140 0094 84ED070A 		vstr.32	s0, [r4, #28]
 141              	.LVL17:
 142              	.LBE61:
 143              	.LBE60:
   6:Core/Src/devs/steering.cpp **** 	motor__.set_omega(computed_omega);
 144              		.loc 1 6 0
 145 0098 94ED060A 		vldr.32	s0, [r4, #24]
 146 009c 05F10800 		add	r0, r5, #8
 147 00a0 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 148              	.LVL18:
   7:Core/Src/devs/steering.cpp **** 	//printf("\tsettingg %d \t", (int)(omega*100));
   8:Core/Src/devs/steering.cpp **** }
 149              		.loc 1 8 0
 150 00a4 BDEC028B 		vldm	sp!, {d8}
 151              	.LCFI2:
 152              		.cfi_restore 80
 153              		.cfi_restore 81
 154              		.cfi_def_cfa_offset 16
 155              	.LVL19:
 156 00a8 38BD     		pop	{r3, r4, r5, pc}
 157              	.LVL20:
 158              	.L12:
 159 00aa 00BF     		.align	2
 160              	.L11:
 161 00ac 0AD7233C 		.word	1008981770
 162              		.cfi_endproc
 163              	.LFE449:
 165              		.global	__aeabi_f2d
 166              		.global	__aeabi_ddiv
 167              		.global	__aeabi_dsub
 168              		.global	__aeabi_d2f
 169              		.section	.text._ZN8steering9set_angleEf,"ax",%progbits
 170              		.align	1
 171              		.global	_ZN8steering9set_angleEf
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	_ZN8steering9set_angleEf:
 178              	.LFB450:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 6


   9:Core/Src/devs/steering.cpp **** 
  10:Core/Src/devs/steering.cpp **** void steering::set_angle(float angle){ 
 179              		.loc 1 10 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL21:
 184 0000 2DE97043 		push	{r4, r5, r6, r8, r9, lr}
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 24
 187              		.cfi_offset 4, -24
 188              		.cfi_offset 5, -20
 189              		.cfi_offset 6, -16
 190              		.cfi_offset 8, -12
 191              		.cfi_offset 9, -8
 192              		.cfi_offset 14, -4
 193 0004 2DED028B 		vpush.64	{d8}
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 32
 196              		.cfi_offset 80, -32
 197              		.cfi_offset 81, -28
 198 0008 0446     		mov	r4, r0
 199 000a 10EE105A 		vmov	r5, s0
  11:Core/Src/devs/steering.cpp **** 	float computed_omega = apid_.compute(angle-(encoder__.get_angle()*180/PI), 10);
 200              		.loc 1 11 0
 201 000e 00F10C06 		add	r6, r0, #12
 202 0012 3046     		mov	r0, r6
 203              	.LVL22:
 204 0014 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 205              	.LVL23:
 206 0018 DFED557A 		vldr.32	s15, .L38+8
 207 001c 60EE277A 		vmul.f32	s15, s0, s15
 208 0020 17EE900A 		vmov	r0, s15
 209 0024 FFF7FEFF 		bl	__aeabi_f2d
 210              	.LVL24:
 211 0028 4FA3     		adr	r3, .L38
 212 002a D3E90023 		ldrd	r2, [r3]
 213 002e FFF7FEFF 		bl	__aeabi_ddiv
 214              	.LVL25:
 215 0032 8046     		mov	r8, r0
 216 0034 8946     		mov	r9, r1
 217 0036 2846     		mov	r0, r5	@ float
 218 0038 FFF7FEFF 		bl	__aeabi_f2d
 219              	.LVL26:
 220 003c 4246     		mov	r2, r8
 221 003e 4B46     		mov	r3, r9
 222 0040 FFF7FEFF 		bl	__aeabi_dsub
 223              	.LVL27:
 224 0044 FFF7FEFF 		bl	__aeabi_d2f
 225              	.LVL28:
 226 0048 07EE100A 		vmov	s14, r0
 227              	.LVL29:
 228              	.LBB96:
 229              	.LBB97:
 230              	.LBB98:
 231              	.LBB99:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 7


 232              		.loc 2 20 0
 233 004c D4ED135A 		vldr.32	s11, [r4, #76]
 234              	.LVL30:
 235              	.LBE99:
 236              	.LBE98:
 237              	.LBB100:
 238              	.LBB101:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 239              		.loc 2 21 0
 240 0050 D4ED146A 		vldr.32	s13, [r4, #80]
 241              	.LVL31:
 242              	.LBE101:
 243              	.LBE100:
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 102:Core/Inc/utils/pid_algorithms.h ****         }
 103:Core/Inc/utils/pid_algorithms.h **** 
 104:Core/Inc/utils/pid_algorithms.h ****       private:
 105:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 106:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 107:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 108:Core/Inc/utils/pid_algorithms.h **** };
 109:Core/Inc/utils/pid_algorithms.h **** 
 110:Core/Inc/utils/pid_algorithms.h **** class FilteredDiscrete_PID : public PID_Algorithm
 111:Core/Inc/utils/pid_algorithms.h **** {
 112:Core/Inc/utils/pid_algorithms.h ****       public:
 113:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(float p, float i, float d, float N = 0) : PID_Algorithm(p, i, d)
 114:Core/Inc/utils/pid_algorithms.h ****         {
 115:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 116:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 117:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 118:Core/Inc/utils/pid_algorithms.h ****                 set_N(N);
 119:Core/Inc/utils/pid_algorithms.h ****         }
 120:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID()
 121:Core/Inc/utils/pid_algorithms.h ****         {
 122:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 123:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 124:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 125:Core/Inc/utils/pid_algorithms.h ****                 set_N(0);
 126:Core/Inc/utils/pid_algorithms.h ****         }
 127:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(FilteredDiscrete_PID &&) = default;
 128:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(const FilteredDiscrete_PID &) = default;
 129:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(FilteredDiscrete_PID &&) = default;
 130:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(const FilteredDiscrete_PID &) = default;
 131:Core/Inc/utils/pid_algorithms.h ****         ~FilteredDiscrete_PID() {}
 132:Core/Inc/utils/pid_algorithms.h **** 
 133:Core/Inc/utils/pid_algorithms.h ****         void set_N(float N) { N_ = N; }
 134:Core/Inc/utils/pid_algorithms.h **** 
 135:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 136:Core/Inc/utils/pid_algorithms.h ****          * 1) Filtered Discrete PID control Algorithm
 137:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
 138:Core/Inc/utils/pid_algorithms.h ****          * 3) Filtered Derivative used
 139:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
 140:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
 141:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*N*(z-1)/{(z -1) + N*Ts}
 142:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
 143:Core/Inc/utils/pid_algorithms.h ****          *      y(t) = (1 + a)*y(t-1) - a*y(t-2) + alpha*x(t) + beta*x(t-1) + gamma*x(t-2)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 8


 144:Core/Inc/utils/pid_algorithms.h ****          *      where,
 145:Core/Inc/utils/pid_algorithms.h ****          *              a = 1 - N_*Ts
 146:Core/Inc/utils/pid_algorithms.h ****          *              alpha = P + D*N
 147:Core/Inc/utils/pid_algorithms.h ****          *              beta = -(1 + a)*P + I*Ts - 2*D*N
 148:Core/Inc/utils/pid_algorithms.h ****          *              gamma = a*P - a*I*Ts + D*N
 149:Core/Inc/utils/pid_algorithms.h ****          */
 150:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 151:Core/Inc/utils/pid_algorithms.h ****         {
 152:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
 153:Core/Inc/utils/pid_algorithms.h **** 
 154:Core/Inc/utils/pid_algorithms.h ****                 float a, alpha, beta, gamma;
 155:Core/Inc/utils/pid_algorithms.h ****                 float output;
 156:Core/Inc/utils/pid_algorithms.h **** 
 157:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 158:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 159:Core/Inc/utils/pid_algorithms.h ****                 float D = get_D();
 160:Core/Inc/utils/pid_algorithms.h **** 
 161:Core/Inc/utils/pid_algorithms.h ****                 a = 1 - N_ * Ts;
 162:Core/Inc/utils/pid_algorithms.h ****                 alpha = P + D * N_;
 163:Core/Inc/utils/pid_algorithms.h ****                 beta = -(1 + a) * P + I * Ts - 2 * D * N_;
 164:Core/Inc/utils/pid_algorithms.h ****                 gamma = a * P - a * I * Ts + D * N_;
 165:Core/Inc/utils/pid_algorithms.h **** 
 166:Core/Inc/utils/pid_algorithms.h ****                 output = (1 + a) * l_output_ - a * ll_output_ + alpha * error + beta * l_err_ + gam
 167:Core/Inc/utils/pid_algorithms.h **** 
 168:Core/Inc/utils/pid_algorithms.h ****                 ll_output_ = l_output_;
 169:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = output;
 170:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 171:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 172:Core/Inc/utils/pid_algorithms.h **** 
 173:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 174:Core/Inc/utils/pid_algorithms.h ****                 {
 175:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
 176:Core/Inc/utils/pid_algorithms.h ****                 }
 177:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 178:Core/Inc/utils/pid_algorithms.h ****                 {
 179:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 180:Core/Inc/utils/pid_algorithms.h ****                 }
 181:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 182:Core/Inc/utils/pid_algorithms.h ****         }
 183:Core/Inc/utils/pid_algorithms.h **** 
 184:Core/Inc/utils/pid_algorithms.h ****       private:
 185:Core/Inc/utils/pid_algorithms.h ****         float N_;
 186:Core/Inc/utils/pid_algorithms.h **** 
 187:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 188:Core/Inc/utils/pid_algorithms.h ****         float ll_output_;
 189:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 190:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 191:Core/Inc/utils/pid_algorithms.h **** };
 192:Core/Inc/utils/pid_algorithms.h **** 
 193:Core/Inc/utils/pid_algorithms.h **** class Angle_PID : public PID_Algorithm
 194:Core/Inc/utils/pid_algorithms.h **** {
 195:Core/Inc/utils/pid_algorithms.h ****       public:
 196:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
 197:Core/Inc/utils/pid_algorithms.h ****         {
 198:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 199:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 200:Core/Inc/utils/pid_algorithms.h ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 9


 201:Core/Inc/utils/pid_algorithms.h **** 
 202:Core/Inc/utils/pid_algorithms.h ****         Angle_PID()
 203:Core/Inc/utils/pid_algorithms.h ****         {
 204:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 205:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 206:Core/Inc/utils/pid_algorithms.h ****         }
 207:Core/Inc/utils/pid_algorithms.h **** 
 208:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(Angle_PID &&) = default;
 209:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(const Angle_PID &) = default;
 210:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(Angle_PID &&) = default;
 211:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(const Angle_PID &) = default;
 212:Core/Inc/utils/pid_algorithms.h ****         ~Angle_PID() { }
 213:Core/Inc/utils/pid_algorithms.h **** 
 214:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 215:Core/Inc/utils/pid_algorithms.h ****                 * 1) Angle PID control Algorithm
 216:Core/Inc/utils/pid_algorithms.h ****                 * 2) Use of Proportional Controller Only 
 217:Core/Inc/utils/pid_algorithms.h ****                 * 3) Output Limited
 218:Core/Inc/utils/pid_algorithms.h ****                 * 4) Compensator formula in Time Domain: 
 219:Core/Inc/utils/pid_algorithms.h ****                 *              y(t) = P * {(x(t) - x(t-1))/Ts}
 220:Core/Inc/utils/pid_algorithms.h ****                 */
 221:Core/Inc/utils/pid_algorithms.h **** 
 222:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 223:Core/Inc/utils/pid_algorithms.h ****         {
 224:Core/Inc/utils/pid_algorithms.h ****                 // float Ts = (float)dt_millis / 1000.0;
 225:Core/Inc/utils/pid_algorithms.h **** 
 226:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 227:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 228:Core/Inc/utils/pid_algorithms.h **** 
 229:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ += error;
 244              		.loc 2 229 0
 245 0054 D4ED197A 		vldr.32	s15, [r4, #100]
 246 0058 77EE277A 		vadd.f32	s15, s14, s15
 247 005c C4ED197A 		vstr.32	s15, [r4, #100]
 230:Core/Inc/utils/pid_algorithms.h ****                 float i_term = I * err_sum_;
 248              		.loc 2 230 0
 249 0060 66EEA76A 		vmul.f32	s13, s13, s15
 250              	.LVL32:
 251              	.LBB102:
 252              	.LBB103:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 253              		.loc 2 30 0
 254 0064 94ED166A 		vldr.32	s12, [r4, #88]
 255              	.LVL33:
 256              	.LBE103:
 257              	.LBE102:
 231:Core/Inc/utils/pid_algorithms.h ****                 // Clamping Integral Term
 232:Core/Inc/utils/pid_algorithms.h ****                 if (i_term > get_Upper()) {
 258              		.loc 2 232 0
 259 0068 F4EEC66A 		vcmpe.f32	s13, s12
 260 006c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 261 0070 18DD     		ble	.L32
 262              	.LVL34:
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 234:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 263              		.loc 2 234 0
 264 0072 0023     		movs	r3, #0
 265 0074 6366     		str	r3, [r4, #100]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 10


 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 266              		.loc 2 233 0
 267 0076 F0EE466A 		vmov.f32	s13, s12
 268              	.L16:
 269              	.LVL35:
 235:Core/Inc/utils/pid_algorithms.h ****                 }
 236:Core/Inc/utils/pid_algorithms.h ****                 else if (i_term < get_Lower()) {
 237:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 238:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 239:Core/Inc/utils/pid_algorithms.h ****                 }
 240:Core/Inc/utils/pid_algorithms.h **** 
 241:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = P * error + i_term;
 270              		.loc 2 241 0
 271 007a 67EE257A 		vmul.f32	s15, s14, s11
 272 007e 77EEA67A 		vadd.f32	s15, s15, s13
 273 0082 C4ED187A 		vstr.32	s15, [r4, #96]
 242:Core/Inc/utils/pid_algorithms.h **** 
 243:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 274              		.loc 2 243 0
 275 0086 B4EEE76A 		vcmpe.f32	s12, s15
 276 008a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 277 008e 15D4     		bmi	.L36
 278              	.LVL36:
 279              	.LBB104:
 280              	.LBB105:
  31:Core/Inc/utils/pid_algorithms.h **** 
 281              		.loc 2 31 0
 282 0090 94ED177A 		vldr.32	s14, [r4, #92]
 283              	.LVL37:
 284              	.LBE105:
 285              	.LBE104:
 244:Core/Inc/utils/pid_algorithms.h ****                 {
 245:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
 246:Core/Inc/utils/pid_algorithms.h ****                 }
 247:Core/Inc/utils/pid_algorithms.h **** 
 248:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 286              		.loc 2 248 0
 287 0094 F4EEC77A 		vcmpe.f32	s15, s14
 288 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 289 009c 10D5     		bpl	.L20
 249:Core/Inc/utils/pid_algorithms.h ****                 {
 250:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 290              		.loc 2 250 0
 291 009e 84ED187A 		vstr.32	s14, [r4, #96]
 292 00a2 0DE0     		b	.L20
 293              	.L32:
 294              	.LVL38:
 295              	.LBB106:
 296              	.LBB107:
  31:Core/Inc/utils/pid_algorithms.h **** 
 297              		.loc 2 31 0
 298 00a4 D4ED177A 		vldr.32	s15, [r4, #92]
 299              	.LVL39:
 300              	.LBE107:
 301              	.LBE106:
 236:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 302              		.loc 2 236 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 11


 303 00a8 F4EEE76A 		vcmpe.f32	s13, s15
 304 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 305 00b0 E3D5     		bpl	.L16
 306              	.LVL40:
 238:Core/Inc/utils/pid_algorithms.h ****                 }
 307              		.loc 2 238 0
 308 00b2 0023     		movs	r3, #0
 309 00b4 6366     		str	r3, [r4, #100]	@ float
 237:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 310              		.loc 2 237 0
 311 00b6 F0EE676A 		vmov.f32	s13, s15
 312 00ba DEE7     		b	.L16
 313              	.LVL41:
 314              	.L36:
 245:Core/Inc/utils/pid_algorithms.h ****                 }
 315              		.loc 2 245 0
 316 00bc 84ED186A 		vstr.32	s12, [r4, #96]
 317              	.L20:
 251:Core/Inc/utils/pid_algorithms.h ****                 }
 252:Core/Inc/utils/pid_algorithms.h **** 
 253:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 318              		.loc 2 253 0
 319 00c0 94ED188A 		vldr.32	s16, [r4, #96]
 320              	.LVL42:
 321              	.LBE97:
 322              	.LBE96:
  12:Core/Src/devs/steering.cpp **** 	computed_omega = dpid_.compute(computed_omega-encoder__.get_omega(), 10);
 323              		.loc 1 12 0
 324 00c4 04F12405 		add	r5, r4, #36
 325              	.LVL43:
 326 00c8 3046     		mov	r0, r6
 327 00ca FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 328              	.LVL44:
 329 00ce 38EE400A 		vsub.f32	s0, s16, s0
 330              	.LVL45:
 331              	.LBB108:
 332              	.LBB109:
 333              	.LBB110:
 334              	.LBB111:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 335              		.loc 2 20 0
 336 00d2 95ED016A 		vldr.32	s12, [r5, #4]
 337              	.LVL46:
 338              	.LBE111:
 339              	.LBE110:
 340              	.LBB112:
 341              	.LBB113:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 342              		.loc 2 21 0
 343 00d6 95ED027A 		vldr.32	s14, [r5, #8]
 344              	.LVL47:
 345              	.LBE113:
 346              	.LBE112:
 347              	.LBB114:
 348              	.LBB115:
  22:Core/Inc/utils/pid_algorithms.h **** 
 349              		.loc 2 22 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 12


 350 00da D5ED037A 		vldr.32	s15, [r5, #12]
 351              	.LVL48:
 352              	.LBE115:
 353              	.LBE114:
  81:Core/Inc/utils/pid_algorithms.h **** 
 354              		.loc 2 81 0
 355 00de DFED255A 		vldr.32	s11, .L38+12
 356 00e2 C7EEA56A 		vdiv.f32	s13, s15, s11
 357              	.LVL49:
  83:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
 358              		.loc 2 83 0
 359 00e6 76EE267A 		vadd.f32	s15, s12, s13
 360              	.LVL50:
  84:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
 361              		.loc 2 84 0
 362 00ea 27EE257A 		vmul.f32	s14, s14, s11
 363 00ee 37EE467A 		vsub.f32	s14, s14, s12
 364 00f2 36EEA66A 		vadd.f32	s12, s13, s13
 365 00f6 37EE467A 		vsub.f32	s14, s14, s12
 366              	.LVL51:
  87:Core/Inc/utils/pid_algorithms.h **** 
 367              		.loc 2 87 0
 368 00fa 60EE277A 		vmul.f32	s15, s0, s15
 369              	.LVL52:
 370 00fe 95ED076A 		vldr.32	s12, [r5, #28]
 371 0102 27EE067A 		vmul.f32	s14, s14, s12
 372              	.LVL53:
 373 0106 77EE877A 		vadd.f32	s15, s15, s14
 374 010a 95ED087A 		vldr.32	s14, [r5, #32]
 375 010e 66EE876A 		vmul.f32	s13, s13, s14
 376              	.LVL54:
 377 0112 77EEA67A 		vadd.f32	s15, s15, s13
 378 0116 95ED067A 		vldr.32	s14, [r5, #24]
 379 011a 77EE877A 		vadd.f32	s15, s15, s14
 380 011e C5ED067A 		vstr.32	s15, [r5, #24]
 381              	.LVL55:
 382              	.LBB116:
 383              	.LBB117:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 384              		.loc 2 30 0
 385 0122 95ED047A 		vldr.32	s14, [r5, #16]
 386              	.LVL56:
 387              	.LBE117:
 388              	.LBE116:
  89:Core/Inc/utils/pid_algorithms.h ****                 {
 389              		.loc 2 89 0
 390 0126 F4EEC77A 		vcmpe.f32	s15, s14
 391 012a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 392 012e 09DC     		bgt	.L37
 393              	.LVL57:
 394              	.LBB118:
 395              	.LBB119:
  31:Core/Inc/utils/pid_algorithms.h **** 
 396              		.loc 2 31 0
 397 0130 95ED057A 		vldr.32	s14, [r5, #20]
 398              	.LVL58:
 399              	.LBE119:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 13


 400              	.LBE118:
  93:Core/Inc/utils/pid_algorithms.h ****                 {
 401              		.loc 2 93 0
 402 0134 F4EEC77A 		vcmpe.f32	s15, s14
 403 0138 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 404 013c 04D5     		bpl	.L24
  95:Core/Inc/utils/pid_algorithms.h ****                 }
 405              		.loc 2 95 0
 406 013e 85ED067A 		vstr.32	s14, [r5, #24]
 407 0142 01E0     		b	.L24
 408              	.L37:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 409              		.loc 2 91 0
 410 0144 85ED067A 		vstr.32	s14, [r5, #24]
 411              	.L24:
  98:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 412              		.loc 2 98 0
 413 0148 85ED086A 		vstr.32	s12, [r5, #32]
  99:Core/Inc/utils/pid_algorithms.h **** 		
 414              		.loc 2 99 0
 415 014c 85ED070A 		vstr.32	s0, [r5, #28]
 416              	.LVL59:
 417              	.LBE109:
 418              	.LBE108:
  13:Core/Src/devs/steering.cpp **** 	motor__.set_omega(computed_omega);
 419              		.loc 1 13 0
 420 0150 95ED060A 		vldr.32	s0, [r5, #24]
 421 0154 04F10800 		add	r0, r4, #8
 422 0158 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 423              	.LVL60:
  14:Core/Src/devs/steering.cpp **** 	// printf("\n computed = %d \t angle = %d \t ",(int)(computed_omega*100),(int)(encoder__.get_angle
  15:Core/Src/devs/steering.cpp **** }...
 424              		.loc 1 15 0
 425 015c BDEC028B 		vldm	sp!, {d8}
 426              	.LCFI5:
 427              		.cfi_restore 80
 428              		.cfi_restore 81
 429              		.cfi_def_cfa_offset 24
 430 0160 BDE87083 		pop	{r4, r5, r6, r8, r9, pc}
 431              	.LVL61:
 432              	.L39:
 433 0164 AFF30080 		.align	3
 434              	.L38:
 435 0168 182D4454 		.word	1413754136
 436 016c FB210940 		.word	1074340347
 437 0170 00003443 		.word	1127481344
 438 0174 0AD7233C 		.word	1008981770
 439              		.cfi_endproc
 440              	.LFE450:
 442              		.text
 443              	.Letext0:
 444              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 445              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 446              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 447              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 448              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 449              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 14


 450              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 451              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 452              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 453              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 454              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 455              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 456              		.file 15 "Core/Inc/periphs/tim.h"
 457              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 458              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 459              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 460              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 461              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 462              		.file 21 "Core/Inc/devs/motor.h"
 463              		.file 22 "Core/Inc/devs/encoder.h"
 464              		.file 23 "Core/Inc/devs/limit_switch.h"
 465              		.file 24 "Core/Inc/devs/steering.h"
 466              		.file 25 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 steering.cpp
C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s:18     .text._ZN8steering9set_omegaEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s:25     .text._ZN8steering9set_omegaEf:00000000 _ZN8steering9set_omegaEf
C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s:161    .text._ZN8steering9set_omegaEf:000000ac $d
C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s:170    .text._ZN8steering9set_angleEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s:177    .text._ZN8steering9set_angleEf:00000000 _ZN8steering9set_angleEf
C:\Users\Prashant\AppData\Local\Temp\cciYqcfA.s:435    .text._ZN8steering9set_angleEf:00000168 $d

UNDEFINED SYMBOLS
_ZN7encoder9get_omegaEv
_ZN5motor9set_omegaEf
__aeabi_f2d
__aeabi_ddiv
__aeabi_dsub
__aeabi_d2f
_ZN7encoder9get_angleEv
