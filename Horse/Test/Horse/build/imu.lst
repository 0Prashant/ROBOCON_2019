ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"imu.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZL11oneOverSqrtf,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZL11oneOverSqrtf:
  25              	.LFB224:
  26              		.file 1 "Core/Src/devs/imu.cpp"
   1:Core/Src/devs/imu.cpp **** /**	
   2:Core/Src/devs/imu.cpp ****  * |----------------------------------------------------------------------
   3:Core/Src/devs/imu.cpp ****  * | Copyright (c) 2016 Tilen Majerle
   4:Core/Src/devs/imu.cpp ****  * |  
   5:Core/Src/devs/imu.cpp ****  * | Permission is hereby granted, free of charge, to any person
   6:Core/Src/devs/imu.cpp ****  * | obtaining a copy of this software and associated documentation
   7:Core/Src/devs/imu.cpp ****  * | files (the "Software"), to deal in the Software without restriction,
   8:Core/Src/devs/imu.cpp ****  * | including without limitation the rights to use, copy, modify, merge,
   9:Core/Src/devs/imu.cpp ****  * | publish, distribute, sublicense, and/or sell copies of the Software, 
  10:Core/Src/devs/imu.cpp ****  * | and to permit persons to whom the Software is furnished to do so, 
  11:Core/Src/devs/imu.cpp ****  * | subject to the following conditions:
  12:Core/Src/devs/imu.cpp ****  * | 
  13:Core/Src/devs/imu.cpp ****  * | The above copyright notice and this permission notice shall be
  14:Core/Src/devs/imu.cpp ****  * | included in all copies or substantial portions of the Software.
  15:Core/Src/devs/imu.cpp ****  * | 
  16:Core/Src/devs/imu.cpp ****  * | THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  17:Core/Src/devs/imu.cpp ****  * | EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  18:Core/Src/devs/imu.cpp ****  * | OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
  19:Core/Src/devs/imu.cpp ****  * | AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  20:Core/Src/devs/imu.cpp ****  * | HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  21:Core/Src/devs/imu.cpp ****  * | WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
  22:Core/Src/devs/imu.cpp ****  * | FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  23:Core/Src/devs/imu.cpp ****  * | OTHER DEALINGS IN THE SOFTWARE.
  24:Core/Src/devs/imu.cpp ****  * |----------------------------------------------------------------------
  25:Core/Src/devs/imu.cpp ****  */
  26:Core/Src/devs/imu.cpp **** #include "imu.h"
  27:Core/Src/devs/imu.cpp **** 
  28:Core/Src/devs/imu.cpp **** /* Calculate 1/sqrt(x) with magic number support */
  29:Core/Src/devs/imu.cpp **** static float oneOverSqrt(float x)
  30:Core/Src/devs/imu.cpp **** {
  27              		.loc 1 30 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 2


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
  38              	.LBB12:
  39              	.LBB13:
  40              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 3


  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 4


 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 5


 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 6


 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 244:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(long double __x)
 246:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 248:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 249:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 250:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 253:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 256:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::floor;
 257:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 258:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   floor(float __x)
 261:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 263:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   floor(long double __x)
 265:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 267:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 268:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 269:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 272:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_floor(__x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 7


 274:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 275:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fmod;
 276:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 277:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 282:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 286:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 287:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 292:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 295:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 296:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::frexp;
 297:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 298:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 300:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 303:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 304:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 307:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 308:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 309:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 312:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 315:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ldexp;
 316:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 317:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 322:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 326:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 327:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 328:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 8


 331:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 334:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::log;
 335:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 336:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log(float __x)
 339:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 341:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log(long double __x)
 343:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 345:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 346:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 347:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 350:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     log(_Tp __x)
 351:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 353:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::log10;
 354:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 355:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log10(float __x)
 358:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 360:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   log10(long double __x)
 362:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 364:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 365:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 366:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 369:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 372:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::modf;
 373:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 374:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 376:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 379:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 380:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 383:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 384:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::pow;
 385:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 386:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 9


 388:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 391:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 395:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline double
 399:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 402:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline float
 403:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 406:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline long double
 407:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 410:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 411:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 412:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 417:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 420:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 421:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::sin;
 422:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 423:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   sin(float __x)
 426:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_sinf(__x); }
 427:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 428:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   sin(long double __x)
 430:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_sinl(__x); }
 431:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 432:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 433:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 434:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 437:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     sin(_Tp __x)
 438:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_sin(__x); }
 439:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 440:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::sinh;
 441:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 442:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   sinh(float __x)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 10


 445:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 447:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   sinh(long double __x)
 449:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 451:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 452:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 453:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 456:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     sinh(_Tp __x)
 457:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_sinh(__x); }
 458:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 459:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::sqrt;
 460:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 461:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   sqrt(float __x)
 464:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_sqrtf(__x); }
  41              		.loc 2 464 0
  42 0002 FFF7FEFF 		bl	sqrtf
  43              	.LVL2:
  44              	.LBE13:
  45              	.LBE12:
  31:Core/Src/devs/imu.cpp **** 	return 1.0f / (float)sqrt(x);
  32:Core/Src/devs/imu.cpp **** }
  46              		.loc 1 32 0
  47 0006 F7EE007A 		vmov.f32	s15, #1.0e+0
  48 000a 87EE800A 		vdiv.f32	s0, s15, s0
  49 000e 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE224:
  53              		.section	.text._ZL15calculateAnglesP13_TM_AHRSIMU_t,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	_ZL15calculateAnglesP13_TM_AHRSIMU_t:
  61              	.LFB225:
  33:Core/Src/devs/imu.cpp **** 
  34:Core/Src/devs/imu.cpp **** static void calculateAngles(TM_AHRSIMU_t *AHRSIMU)
  35:Core/Src/devs/imu.cpp **** {
  62              		.loc 1 35 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              	.LVL3:
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 2DED028B 		vpush.64	{d8}
  73              	.LCFI2:
  74              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 11


  75              		.cfi_offset 80, -16
  76              		.cfi_offset 81, -12
  77 0006 0446     		mov	r4, r0
  36:Core/Src/devs/imu.cpp **** 	AHRSIMU->Roll = (float)atan2(AHRSIMU->_q0 * AHRSIMU->_q1 + AHRSIMU->_q2 * AHRSIMU->_q3, 0.5f - AHR
  78              		.loc 1 36 0
  79 0008 90ED050A 		vldr.32	s0, [r0, #20]
  80 000c D0ED067A 		vldr.32	s15, [r0, #24]
  81 0010 20EE270A 		vmul.f32	s0, s0, s15
  82 0014 D0ED070A 		vldr.32	s1, [r0, #28]
  83 0018 90ED087A 		vldr.32	s14, [r0, #32]
  84 001c 20EE877A 		vmul.f32	s14, s1, s14
  85 0020 67EEA77A 		vmul.f32	s15, s15, s15
  86 0024 B6EE008A 		vmov.f32	s16, #5.0e-1
  87 0028 78EE677A 		vsub.f32	s15, s16, s15
  88 002c 60EEA00A 		vmul.f32	s1, s1, s1
  89              	.LVL4:
  90              	.LBB14:
  91              	.LBB15:
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  92              		.loc 2 145 0
  93 0030 77EEE00A 		vsub.f32	s1, s15, s1
  94              	.LVL5:
  95 0034 30EE070A 		vadd.f32	s0, s0, s14
  96              	.LVL6:
  97 0038 FFF7FEFF 		bl	atan2f
  98              	.LVL7:
  99              	.LBE15:
 100              	.LBE14:
 101              		.loc 1 36 0
 102 003c 84ED000A 		vstr.32	s0, [r4]
  37:Core/Src/devs/imu.cpp **** 	AHRSIMU->Pitch = (float)asin(-2.0f * (AHRSIMU->_q1 * AHRSIMU->_q3 - AHRSIMU->_q0 * AHRSIMU->_q2));
 103              		.loc 1 37 0
 104 0040 D4ED067A 		vldr.32	s15, [r4, #24]
 105 0044 94ED080A 		vldr.32	s0, [r4, #32]
 106 0048 67EE807A 		vmul.f32	s15, s15, s0
 107 004c 94ED050A 		vldr.32	s0, [r4, #20]
 108 0050 94ED077A 		vldr.32	s14, [r4, #28]
 109 0054 20EE070A 		vmul.f32	s0, s0, s14
 110 0058 77EEC07A 		vsub.f32	s15, s15, s0
 111              	.LVL8:
 112              	.LBB16:
 113              	.LBB17:
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114              		.loc 2 107 0
 115 005c B8EE000A 		vmov.f32	s0, #-2.0e+0
 116 0060 27EE800A 		vmul.f32	s0, s15, s0
 117              	.LVL9:
 118 0064 FFF7FEFF 		bl	asinf
 119              	.LVL10:
 120              	.LBE17:
 121              	.LBE16:
 122              		.loc 1 37 0
 123 0068 84ED010A 		vstr.32	s0, [r4, #4]
  38:Core/Src/devs/imu.cpp **** 	AHRSIMU->Yaw = (float)atan2(AHRSIMU->_q1 * AHRSIMU->_q2 + AHRSIMU->_q0 * AHRSIMU->_q3, 0.5f - AHRS
 124              		.loc 1 38 0
 125 006c 94ED060A 		vldr.32	s0, [r4, #24]
 126 0070 D4ED070A 		vldr.32	s1, [r4, #28]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 12


 127 0074 20EE200A 		vmul.f32	s0, s0, s1
 128 0078 94ED057A 		vldr.32	s14, [r4, #20]
 129 007c D4ED087A 		vldr.32	s15, [r4, #32]
 130 0080 27EE277A 		vmul.f32	s14, s14, s15
 131 0084 60EEA00A 		vmul.f32	s1, s1, s1
 132 0088 78EE600A 		vsub.f32	s1, s16, s1
 133 008c 67EEA77A 		vmul.f32	s15, s15, s15
 134              	.LVL11:
 135              	.LBB18:
 136              	.LBB19:
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 137              		.loc 2 145 0
 138 0090 70EEE70A 		vsub.f32	s1, s1, s15
 139              	.LVL12:
 140 0094 30EE070A 		vadd.f32	s0, s0, s14
 141              	.LVL13:
 142 0098 FFF7FEFF 		bl	atan2f
 143              	.LVL14:
 144              	.LBE19:
 145              	.LBE18:
  39:Core/Src/devs/imu.cpp **** 
  40:Core/Src/devs/imu.cpp **** 	/* Calculate degrees and remove inclination */
  41:Core/Src/devs/imu.cpp **** 	AHRSIMU->Roll *= AHRSIMU_RAD2DEG(1);
 146              		.loc 1 41 0
 147 009c 94ED007A 		vldr.32	s14, [r4]
 148 00a0 DFED1A7A 		vldr.32	s15, .L13
 149 00a4 27EE277A 		vmul.f32	s14, s14, s15
 150 00a8 84ED007A 		vstr.32	s14, [r4]
  42:Core/Src/devs/imu.cpp **** 	AHRSIMU->Pitch *= AHRSIMU_RAD2DEG(1);
 151              		.loc 1 42 0
 152 00ac 94ED017A 		vldr.32	s14, [r4, #4]
 153 00b0 27EE277A 		vmul.f32	s14, s14, s15
 154 00b4 84ED017A 		vstr.32	s14, [r4, #4]
  43:Core/Src/devs/imu.cpp **** 	AHRSIMU->Yaw = AHRSIMU->Yaw * AHRSIMU_RAD2DEG(1) - AHRSIMU->Inclination;
 155              		.loc 1 43 0
 156 00b8 20EE270A 		vmul.f32	s0, s0, s15
 157 00bc D4ED037A 		vldr.32	s15, [r4, #12]
 158 00c0 30EE670A 		vsub.f32	s0, s0, s15
 159 00c4 84ED020A 		vstr.32	s0, [r4, #8]
  44:Core/Src/devs/imu.cpp **** 
  45:Core/Src/devs/imu.cpp **** 	/* Check values because of inclination */
  46:Core/Src/devs/imu.cpp **** 	if (AHRSIMU->Yaw < -180)
 160              		.loc 1 46 0
 161 00c8 DFED117A 		vldr.32	s15, .L13+4
 162 00cc B4EEE70A 		vcmpe.f32	s0, s15
 163 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 164 00d4 0FD4     		bmi	.L12
  47:Core/Src/devs/imu.cpp **** 	{
  48:Core/Src/devs/imu.cpp **** 		AHRSIMU->Yaw = 180.0f - (-180.0f - AHRSIMU->Yaw);
  49:Core/Src/devs/imu.cpp **** 	}
  50:Core/Src/devs/imu.cpp **** 	else if (AHRSIMU->Yaw > 180)
 165              		.loc 1 50 0
 166 00d6 DFED0F7A 		vldr.32	s15, .L13+8
 167 00da B4EEE70A 		vcmpe.f32	s0, s15
 168 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 169 00e2 10DD     		ble	.L3
  51:Core/Src/devs/imu.cpp **** 	{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 13


  52:Core/Src/devs/imu.cpp **** 		AHRSIMU->Yaw = -180.0f - (180.0f - AHRSIMU->Yaw);
 170              		.loc 1 52 0
 171 00e4 77EEC07A 		vsub.f32	s15, s15, s0
 172 00e8 9FED090A 		vldr.32	s0, .L13+4
 173 00ec 30EE670A 		vsub.f32	s0, s0, s15
 174 00f0 84ED020A 		vstr.32	s0, [r4, #8]
  53:Core/Src/devs/imu.cpp **** 	}
  54:Core/Src/devs/imu.cpp **** }
 175              		.loc 1 54 0
 176 00f4 07E0     		b	.L3
 177              	.L12:
  48:Core/Src/devs/imu.cpp **** 	}
 178              		.loc 1 48 0
 179 00f6 77EEC07A 		vsub.f32	s15, s15, s0
 180 00fa 9FED060A 		vldr.32	s0, .L13+8
 181 00fe 30EE670A 		vsub.f32	s0, s0, s15
 182 0102 84ED020A 		vstr.32	s0, [r4, #8]
 183              	.L3:
 184              		.loc 1 54 0
 185 0106 BDEC028B 		vldm	sp!, {d8}
 186              	.LCFI3:
 187              		.cfi_restore 80
 188              		.cfi_restore 81
 189              		.cfi_def_cfa_offset 8
 190 010a 10BD     		pop	{r4, pc}
 191              	.LVL15:
 192              	.L14:
 193              		.align	2
 194              	.L13:
 195 010c E12E6542 		.word	1113927393
 196 0110 000034C3 		.word	-1020002304
 197 0114 00003443 		.word	1127481344
 198              		.cfi_endproc
 199              	.LFE225:
 201              		.section	.text.TM_AHRSIMU_Init,"ax",%progbits
 202              		.align	1
 203              		.global	TM_AHRSIMU_Init
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	TM_AHRSIMU_Init:
 210              	.LFB226:
  55:Core/Src/devs/imu.cpp **** 
  56:Core/Src/devs/imu.cpp **** void TM_AHRSIMU_Init(TM_AHRSIMU_t *AHRSIMU, float beta, float sampleRate, float inclination)
  57:Core/Src/devs/imu.cpp **** {
 211              		.loc 1 57 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL16:
  58:Core/Src/devs/imu.cpp **** 	AHRSIMU->_beta = beta;
 217              		.loc 1 58 0
 218 0000 80ED040A 		vstr.32	s0, [r0, #16]
  59:Core/Src/devs/imu.cpp **** 	AHRSIMU->_sampleRate = 1 / sampleRate;
 219              		.loc 1 59 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 14


 220 0004 F7EE007A 		vmov.f32	s15, #1.0e+0
 221 0008 C7EEA00A 		vdiv.f32	s1, s15, s1
 222              	.LVL17:
 223 000c C0ED090A 		vstr.32	s1, [r0, #36]
  60:Core/Src/devs/imu.cpp **** 	AHRSIMU->Inclination = inclination;
 224              		.loc 1 60 0
 225 0010 80ED031A 		vstr.32	s2, [r0, #12]
  61:Core/Src/devs/imu.cpp **** 
  62:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q0 = 1.0f;
 226              		.loc 1 62 0
 227 0014 C0ED057A 		vstr.32	s15, [r0, #20]
  63:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q1 = 0.0f;
 228              		.loc 1 63 0
 229 0018 0023     		movs	r3, #0
 230 001a 8361     		str	r3, [r0, #24]	@ float
  64:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q2 = 0.0f;
 231              		.loc 1 64 0
 232 001c C361     		str	r3, [r0, #28]	@ float
  65:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q3 = 0.0f;
 233              		.loc 1 65 0
 234 001e 0362     		str	r3, [r0, #32]	@ float
  66:Core/Src/devs/imu.cpp **** }
 235              		.loc 1 66 0
 236 0020 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE226:
 240              		.section	.text.TM_AHRSIMU_UpdateIMU,"ax",%progbits
 241              		.align	1
 242              		.global	TM_AHRSIMU_UpdateIMU
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu fpv4-sp-d16
 248              	TM_AHRSIMU_UpdateIMU:
 249              	.LFB228:
  67:Core/Src/devs/imu.cpp **** 
  68:Core/Src/devs/imu.cpp **** void TM_AHRSIMU_UpdateAHRS(TM_AHRSIMU_t *AHRSIMU, float gx, float gy, float gz, float ax, float ay,
  69:Core/Src/devs/imu.cpp **** {
  70:Core/Src/devs/imu.cpp **** 	float recipNorm;
  71:Core/Src/devs/imu.cpp **** 	float s0, s1, s2, s3;
  72:Core/Src/devs/imu.cpp **** 	float qDot1, qDot2, qDot3, qDot4;
  73:Core/Src/devs/imu.cpp **** 	float hx, hy;
  74:Core/Src/devs/imu.cpp **** 	float _2q0mx, _2q0my, _2q0mz, _2q1mx, _2bx, _2bz, _4bx, _4bz, _2q0, _2q1, _2q2, _2q3, _2q0q2, _2q2
  75:Core/Src/devs/imu.cpp **** 
  76:Core/Src/devs/imu.cpp **** 	/* Use IMU algorithm if magnetometer measurement invalid (avoids NaN in magnetometer normalisation
  77:Core/Src/devs/imu.cpp **** 	if ((mx != 0.0f) || (my != 0.0f) || (mz != 0.0f))
  78:Core/Src/devs/imu.cpp **** 	{
  79:Core/Src/devs/imu.cpp **** 		/* Rate of change of quaternion from gyroscope */
  80:Core/Src/devs/imu.cpp **** 		qDot1 = 0.5f * (-AHRSIMU->_q1 * gx - AHRSIMU->_q2 * gy - AHRSIMU->_q3 * gz);
  81:Core/Src/devs/imu.cpp **** 		qDot2 = 0.5f * (AHRSIMU->_q0 * gx + AHRSIMU->_q2 * gz - AHRSIMU->_q3 * gy);
  82:Core/Src/devs/imu.cpp **** 		qDot3 = 0.5f * (AHRSIMU->_q0 * gy - AHRSIMU->_q1 * gz + AHRSIMU->_q3 * gx);
  83:Core/Src/devs/imu.cpp **** 		qDot4 = 0.5f * (AHRSIMU->_q0 * gz + AHRSIMU->_q1 * gy - AHRSIMU->_q2 * gx);
  84:Core/Src/devs/imu.cpp **** 
  85:Core/Src/devs/imu.cpp **** 		/* Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalis
  86:Core/Src/devs/imu.cpp **** 		if (!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f)))
  87:Core/Src/devs/imu.cpp **** 		{
  88:Core/Src/devs/imu.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 15


  89:Core/Src/devs/imu.cpp **** 			/* Normalise accelerometer measurement */
  90:Core/Src/devs/imu.cpp **** 			recipNorm = oneOverSqrt(ax * ax + ay * ay + az * az);
  91:Core/Src/devs/imu.cpp **** 			ax *= recipNorm;
  92:Core/Src/devs/imu.cpp **** 			ay *= recipNorm;
  93:Core/Src/devs/imu.cpp **** 			az *= recipNorm;
  94:Core/Src/devs/imu.cpp **** 
  95:Core/Src/devs/imu.cpp **** 			/* Normalise magnetometer measurement */
  96:Core/Src/devs/imu.cpp **** 			recipNorm = oneOverSqrt(mx * mx + my * my + mz * mz);
  97:Core/Src/devs/imu.cpp **** 			mx *= recipNorm;
  98:Core/Src/devs/imu.cpp **** 			my *= recipNorm;
  99:Core/Src/devs/imu.cpp **** 			mz *= recipNorm;
 100:Core/Src/devs/imu.cpp **** 
 101:Core/Src/devs/imu.cpp **** 			/* Auxiliary variables to avoid repeated arithmetic */
 102:Core/Src/devs/imu.cpp **** 			_2q0mx = 2.0f * AHRSIMU->_q0 * mx;
 103:Core/Src/devs/imu.cpp **** 			_2q0my = 2.0f * AHRSIMU->_q0 * my;
 104:Core/Src/devs/imu.cpp **** 			_2q0mz = 2.0f * AHRSIMU->_q0 * mz;
 105:Core/Src/devs/imu.cpp **** 			_2q1mx = 2.0f * AHRSIMU->_q1 * mx;
 106:Core/Src/devs/imu.cpp **** 			_2q0 = 2.0f * AHRSIMU->_q0;
 107:Core/Src/devs/imu.cpp **** 			_2q1 = 2.0f * AHRSIMU->_q1;
 108:Core/Src/devs/imu.cpp **** 			_2q2 = 2.0f * AHRSIMU->_q2;
 109:Core/Src/devs/imu.cpp **** 			_2q3 = 2.0f * AHRSIMU->_q3;
 110:Core/Src/devs/imu.cpp **** 			_2q0q2 = 2.0f * AHRSIMU->_q0 * AHRSIMU->_q2;
 111:Core/Src/devs/imu.cpp **** 			_2q2q3 = 2.0f * AHRSIMU->_q2 * AHRSIMU->_q3;
 112:Core/Src/devs/imu.cpp **** 			q0q0 = AHRSIMU->_q0 * AHRSIMU->_q0;
 113:Core/Src/devs/imu.cpp **** 			q0q1 = AHRSIMU->_q0 * AHRSIMU->_q1;
 114:Core/Src/devs/imu.cpp **** 			q0q2 = AHRSIMU->_q0 * AHRSIMU->_q2;
 115:Core/Src/devs/imu.cpp **** 			q0q3 = AHRSIMU->_q0 * AHRSIMU->_q3;
 116:Core/Src/devs/imu.cpp **** 			q1q1 = AHRSIMU->_q1 * AHRSIMU->_q1;
 117:Core/Src/devs/imu.cpp **** 			q1q2 = AHRSIMU->_q1 * AHRSIMU->_q2;
 118:Core/Src/devs/imu.cpp **** 			q1q3 = AHRSIMU->_q1 * AHRSIMU->_q3;
 119:Core/Src/devs/imu.cpp **** 			q2q2 = AHRSIMU->_q2 * AHRSIMU->_q2;
 120:Core/Src/devs/imu.cpp **** 			q2q3 = AHRSIMU->_q2 * AHRSIMU->_q3;
 121:Core/Src/devs/imu.cpp **** 			q3q3 = AHRSIMU->_q3 * AHRSIMU->_q3;
 122:Core/Src/devs/imu.cpp **** 
 123:Core/Src/devs/imu.cpp **** 			/* Reference direction of Earth's magnetic field */
 124:Core/Src/devs/imu.cpp **** 			hx = mx * q0q0 - _2q0my * AHRSIMU->_q3 + _2q0mz * AHRSIMU->_q2 + mx * q1q1 + _2q1 * my * AHRSIMU
 125:Core/Src/devs/imu.cpp **** 			hy = _2q0mx * AHRSIMU->_q3 + my * q0q0 - _2q0mz * AHRSIMU->_q1 + _2q1mx * AHRSIMU->_q2 - my * q1
 126:Core/Src/devs/imu.cpp **** 			_2bx = (float)sqrt(hx * hx + hy * hy);
 127:Core/Src/devs/imu.cpp **** 			_2bz = -_2q0mx * AHRSIMU->_q2 + _2q0my * AHRSIMU->_q1 + mz * q0q0 + _2q1mx * AHRSIMU->_q3 - mz *
 128:Core/Src/devs/imu.cpp **** 			_4bx = 2.0f * _2bx;
 129:Core/Src/devs/imu.cpp **** 			_4bz = 2.0f * _2bz;
 130:Core/Src/devs/imu.cpp **** 
 131:Core/Src/devs/imu.cpp **** 			/* Gradient decent algorithm corrective step */
 132:Core/Src/devs/imu.cpp **** 			s0 = -_2q2 * (2.0f * q1q3 - _2q0q2 - ax) + _2q1 * (2.0f * q0q1 + _2q2q3 - ay) - _2bz * AHRSIMU->
 133:Core/Src/devs/imu.cpp **** 			s1 = _2q3 * (2.0f * q1q3 - _2q0q2 - ax) + _2q0 * (2.0f * q0q1 + _2q2q3 - ay) - 4.0f * AHRSIMU->_
 134:Core/Src/devs/imu.cpp **** 			s2 = -_2q0 * (2.0f * q1q3 - _2q0q2 - ax) + _2q3 * (2.0f * q0q1 + _2q2q3 - ay) - 4.0f * AHRSIMU->
 135:Core/Src/devs/imu.cpp **** 			s3 = _2q1 * (2.0f * q1q3 - _2q0q2 - ax) + _2q2 * (2.0f * q0q1 + _2q2q3 - ay) + (-_4bx * AHRSIMU-
 136:Core/Src/devs/imu.cpp **** 
 137:Core/Src/devs/imu.cpp **** 			/* normalise step magnitude */
 138:Core/Src/devs/imu.cpp **** 			recipNorm = oneOverSqrt(s0 * s0 + s1 * s1 + s2 * s2 + s3 * s3);
 139:Core/Src/devs/imu.cpp **** 			s0 *= recipNorm;
 140:Core/Src/devs/imu.cpp **** 			s1 *= recipNorm;
 141:Core/Src/devs/imu.cpp **** 			s2 *= recipNorm;
 142:Core/Src/devs/imu.cpp **** 			s3 *= recipNorm;
 143:Core/Src/devs/imu.cpp **** 
 144:Core/Src/devs/imu.cpp **** 			/* Apply feedback step */
 145:Core/Src/devs/imu.cpp **** 			qDot1 -= AHRSIMU->_beta * s0;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 16


 146:Core/Src/devs/imu.cpp **** 			qDot2 -= AHRSIMU->_beta * s1;
 147:Core/Src/devs/imu.cpp **** 			qDot3 -= AHRSIMU->_beta * s2;
 148:Core/Src/devs/imu.cpp **** 			qDot4 -= AHRSIMU->_beta * s3;
 149:Core/Src/devs/imu.cpp **** 		}
 150:Core/Src/devs/imu.cpp **** 
 151:Core/Src/devs/imu.cpp **** 		/* Integrate rate of change of quaternion to yield quaternion */
 152:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q0 += qDot1 * AHRSIMU->_sampleRate;
 153:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q1 += qDot2 * AHRSIMU->_sampleRate;
 154:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q2 += qDot3 * AHRSIMU->_sampleRate;
 155:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q3 += qDot4 * AHRSIMU->_sampleRate;
 156:Core/Src/devs/imu.cpp **** 
 157:Core/Src/devs/imu.cpp **** 		/* Normalise quaternion */
 158:Core/Src/devs/imu.cpp **** 		recipNorm = oneOverSqrt(AHRSIMU->_q0 * AHRSIMU->_q0 + AHRSIMU->_q1 * AHRSIMU->_q1 + AHRSIMU->_q2 
 159:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q0 *= recipNorm;
 160:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q1 *= recipNorm;
 161:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q2 *= recipNorm;
 162:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q3 *= recipNorm;
 163:Core/Src/devs/imu.cpp **** 	}
 164:Core/Src/devs/imu.cpp **** 	else
 165:Core/Src/devs/imu.cpp **** 	{
 166:Core/Src/devs/imu.cpp **** 		/* Update IMU algorithm */
 167:Core/Src/devs/imu.cpp **** 		TM_AHRSIMU_UpdateIMU(AHRSIMU, gx, gy, gz, ax, ay, az);
 168:Core/Src/devs/imu.cpp **** 	}
 169:Core/Src/devs/imu.cpp **** 
 170:Core/Src/devs/imu.cpp **** 	/* Calculate new angles */
 171:Core/Src/devs/imu.cpp **** 	calculateAngles(AHRSIMU);
 172:Core/Src/devs/imu.cpp **** }
 173:Core/Src/devs/imu.cpp **** 
 174:Core/Src/devs/imu.cpp **** void TM_AHRSIMU_UpdateIMU(TM_AHRSIMU_t *AHRSIMU, float gx, float gy, float gz, float ax, float ay, 
 175:Core/Src/devs/imu.cpp **** {
 250              		.loc 1 175 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              	.LVL18:
 255 0000 10B5     		push	{r4, lr}
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 4, -8
 259              		.cfi_offset 14, -4
 260 0002 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 261              	.LCFI5:
 262              		.cfi_def_cfa_offset 48
 263              		.cfi_offset 80, -48
 264              		.cfi_offset 81, -44
 265              		.cfi_offset 82, -40
 266              		.cfi_offset 83, -36
 267              		.cfi_offset 84, -32
 268              		.cfi_offset 85, -28
 269              		.cfi_offset 86, -24
 270              		.cfi_offset 87, -20
 271              		.cfi_offset 88, -16
 272              		.cfi_offset 89, -12
 273 0006 0446     		mov	r4, r0
 274 0008 F0EE61BA 		vmov.f32	s23, s3
 275 000c B0EE429A 		vmov.f32	s18, s4
 276 0010 B0EE628A 		vmov.f32	s16, s5
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 17


 176:Core/Src/devs/imu.cpp **** 	float recipNorm;
 177:Core/Src/devs/imu.cpp **** 	float s0, s1, s2, s3;
 178:Core/Src/devs/imu.cpp **** 	float qDot1, qDot2, qDot3, qDot4;
 179:Core/Src/devs/imu.cpp **** 	float _2q0, _2q1, _2q2, _2q3, _4q0, _4q1, _4q2, _8q1, _8q2, q0q0, q1q1, q2q2, q3q3;
 180:Core/Src/devs/imu.cpp **** 
 181:Core/Src/devs/imu.cpp **** 	/* Rate of change of quaternion from gyroscope */
 182:Core/Src/devs/imu.cpp **** 	qDot1 = 0.5f * (-AHRSIMU->_q1 * gx - AHRSIMU->_q2 * gy - AHRSIMU->_q3 * gz);
 277              		.loc 1 182 0
 278 0014 D0ED066A 		vldr.32	s13, [r0, #24]
 279 0018 66EEC08A 		vnmul.f32	s17, s13, s0
 280 001c 90ED077A 		vldr.32	s14, [r0, #28]
 281 0020 67EE207A 		vmul.f32	s15, s14, s1
 282 0024 78EEE78A 		vsub.f32	s17, s17, s15
 283 0028 90ED086A 		vldr.32	s12, [r0, #32]
 284 002c 66EE017A 		vmul.f32	s15, s12, s2
 285 0030 78EEE78A 		vsub.f32	s17, s17, s15
 286 0034 F6EE005A 		vmov.f32	s11, #5.0e-1
 287 0038 68EEA58A 		vmul.f32	s17, s17, s11
 288              	.LVL19:
 183:Core/Src/devs/imu.cpp **** 	qDot2 = 0.5f * (AHRSIMU->_q0 * gx + AHRSIMU->_q2 * gz - AHRSIMU->_q3 * gy);
 289              		.loc 1 183 0
 290 003c D0ED057A 		vldr.32	s15, [r0, #20]
 291 0040 27EE80AA 		vmul.f32	s20, s15, s0
 292 0044 27EE015A 		vmul.f32	s10, s14, s2
 293 0048 3AEE05AA 		vadd.f32	s20, s20, s10
 294 004c 26EE205A 		vmul.f32	s10, s12, s1
 295 0050 3AEE45AA 		vsub.f32	s20, s20, s10
 296 0054 2AEE25AA 		vmul.f32	s20, s20, s11
 297              	.LVL20:
 184:Core/Src/devs/imu.cpp **** 	qDot3 = 0.5f * (AHRSIMU->_q0 * gy - AHRSIMU->_q1 * gz + AHRSIMU->_q3 * gx);
 298              		.loc 1 184 0
 299 0058 67EEA09A 		vmul.f32	s19, s15, s1
 300 005c 26EE815A 		vmul.f32	s10, s13, s2
 301 0060 79EEC59A 		vsub.f32	s19, s19, s10
 302 0064 26EE006A 		vmul.f32	s12, s12, s0
 303 0068 79EE869A 		vadd.f32	s19, s19, s12
 304 006c 69EEA59A 		vmul.f32	s19, s19, s11
 305              	.LVL21:
 185:Core/Src/devs/imu.cpp **** 	qDot4 = 0.5f * (AHRSIMU->_q0 * gz + AHRSIMU->_q1 * gy - AHRSIMU->_q2 * gx);
 306              		.loc 1 185 0
 307 0070 67EE817A 		vmul.f32	s15, s15, s2
 308 0074 66EEA0AA 		vmul.f32	s21, s13, s1
 309 0078 77EEAAAA 		vadd.f32	s21, s15, s21
 310 007c 27EE007A 		vmul.f32	s14, s14, s0
 311 0080 7AEEC7AA 		vsub.f32	s21, s21, s14
 312 0084 6AEEA5AA 		vmul.f32	s21, s21, s11
 313              	.LVL22:
 186:Core/Src/devs/imu.cpp **** 
 187:Core/Src/devs/imu.cpp **** 	/* Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisa
 188:Core/Src/devs/imu.cpp **** 	if (!(ax == 0.0f && ay == 0.0f && az == 0.0f))
 314              		.loc 1 188 0
 315 0088 F5EE401A 		vcmp.f32	s3, #0
 316 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 317 0090 0AD1     		bne	.L17
 318              		.loc 1 188 0 is_stmt 0 discriminator 1
 319 0092 B5EE402A 		vcmp.f32	s4, #0
 320 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 18


 321 009a 05D1     		bne	.L17
 322              		.loc 1 188 0 discriminator 2
 323 009c F5EE402A 		vcmp.f32	s5, #0
 324 00a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 325 00a4 00F0BC80 		beq	.L18
 326              	.L17:
 189:Core/Src/devs/imu.cpp **** 	{
 190:Core/Src/devs/imu.cpp **** 
 191:Core/Src/devs/imu.cpp **** 		/* Normalise accelerometer measurement */
 192:Core/Src/devs/imu.cpp **** 		recipNorm = oneOverSqrt(ax * ax + ay * ay + az * az);
 327              		.loc 1 192 0 is_stmt 1
 328 00a8 6BEEAB7A 		vmul.f32	s15, s23, s23
 329 00ac 29EE090A 		vmul.f32	s0, s18, s18
 330              	.LVL23:
 331 00b0 77EE807A 		vadd.f32	s15, s15, s0
 332 00b4 28EE080A 		vmul.f32	s0, s16, s16
 333 00b8 37EE800A 		vadd.f32	s0, s15, s0
 334 00bc FFF7FEFF 		bl	_ZL11oneOverSqrtf
 335              	.LVL24:
 193:Core/Src/devs/imu.cpp **** 		ax *= recipNorm;
 336              		.loc 1 193 0
 337 00c0 6BEE801A 		vmul.f32	s3, s23, s0
 338              	.LVL25:
 194:Core/Src/devs/imu.cpp **** 		ay *= recipNorm;
 339              		.loc 1 194 0
 340 00c4 29EE002A 		vmul.f32	s4, s18, s0
 341              	.LVL26:
 195:Core/Src/devs/imu.cpp **** 		az *= recipNorm;
 342              		.loc 1 195 0
 343 00c8 28EE000A 		vmul.f32	s0, s16, s0
 344              	.LVL27:
 196:Core/Src/devs/imu.cpp **** 
 197:Core/Src/devs/imu.cpp **** 		/* Auxiliary variables to avoid repeated arithmetic */
 198:Core/Src/devs/imu.cpp **** 		_2q0 = 2.0f * AHRSIMU->_q0;
 345              		.loc 1 198 0
 346 00cc 94ED053A 		vldr.32	s6, [r4, #20]
 347 00d0 73EE030A 		vadd.f32	s1, s6, s6
 348              	.LVL28:
 199:Core/Src/devs/imu.cpp **** 		_2q1 = 2.0f * AHRSIMU->_q1;
 349              		.loc 1 199 0
 350 00d4 D4ED064A 		vldr.32	s9, [r4, #24]
 351 00d8 74EEA4BA 		vadd.f32	s23, s9, s9
 352              	.LVL29:
 200:Core/Src/devs/imu.cpp **** 		_2q2 = 2.0f * AHRSIMU->_q2;
 353              		.loc 1 200 0
 354 00dc D4ED077A 		vldr.32	s15, [r4, #28]
 355 00e0 77EEA75A 		vadd.f32	s11, s15, s15
 356              	.LVL30:
 201:Core/Src/devs/imu.cpp **** 		_2q3 = 2.0f * AHRSIMU->_q3;
 357              		.loc 1 201 0
 358 00e4 D4ED086A 		vldr.32	s13, [r4, #32]
 359 00e8 76EEA62A 		vadd.f32	s5, s13, s13
 360              	.LVL31:
 202:Core/Src/devs/imu.cpp **** 		_4q0 = 4.0f * AHRSIMU->_q0;
 361              		.loc 1 202 0
 362 00ec B1EE005A 		vmov.f32	s10, #4.0e+0
 363 00f0 23EE059A 		vmul.f32	s18, s6, s10
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 19


 364              	.LVL32:
 203:Core/Src/devs/imu.cpp **** 		_4q1 = 4.0f * AHRSIMU->_q1;
 365              		.loc 1 203 0
 366 00f4 24EE85CA 		vmul.f32	s24, s9, s10
 367              	.LVL33:
 204:Core/Src/devs/imu.cpp **** 		_4q2 = 4.0f * AHRSIMU->_q2;
 368              		.loc 1 204 0
 369 00f8 27EE854A 		vmul.f32	s8, s15, s10
 370              	.LVL34:
 205:Core/Src/devs/imu.cpp **** 		_8q1 = 8.0f * AHRSIMU->_q1;
 371              		.loc 1 205 0
 372 00fc F2EE003A 		vmov.f32	s7, #8.0e+0
 373 0100 64EEA3CA 		vmul.f32	s25, s9, s7
 374              	.LVL35:
 206:Core/Src/devs/imu.cpp **** 		_8q2 = 8.0f * AHRSIMU->_q2;
 375              		.loc 1 206 0
 376 0104 67EEA33A 		vmul.f32	s7, s15, s7
 377              	.LVL36:
 207:Core/Src/devs/imu.cpp **** 		q0q0 = AHRSIMU->_q0 * AHRSIMU->_q0;
 378              		.loc 1 207 0
 379 0108 23EE033A 		vmul.f32	s6, s6, s6
 380              	.LVL37:
 208:Core/Src/devs/imu.cpp **** 		q1q1 = AHRSIMU->_q1 * AHRSIMU->_q1;
 381              		.loc 1 208 0
 382 010c 24EEA47A 		vmul.f32	s14, s9, s9
 383              	.LVL38:
 209:Core/Src/devs/imu.cpp **** 		q2q2 = AHRSIMU->_q2 * AHRSIMU->_q2;
 384              		.loc 1 209 0
 385 0110 27EEA76A 		vmul.f32	s12, s15, s15
 386              	.LVL39:
 210:Core/Src/devs/imu.cpp **** 		q3q3 = AHRSIMU->_q3 * AHRSIMU->_q3;
 387              		.loc 1 210 0
 388 0114 26EEA61A 		vmul.f32	s2, s13, s13
 389              	.LVL40:
 211:Core/Src/devs/imu.cpp **** 
 212:Core/Src/devs/imu.cpp **** 		/* Gradient decent algorithm corrective step */
 213:Core/Src/devs/imu.cpp **** 		s0 = _4q0 * q2q2 + _2q2 * ax + _4q0 * q1q1 - _2q1 * ay;
 390              		.loc 1 213 0
 391 0118 29EE06BA 		vmul.f32	s22, s18, s12
 392 011c 21EEA58A 		vmul.f32	s16, s3, s11
 393 0120 3BEE08BA 		vadd.f32	s22, s22, s16
 394 0124 29EE079A 		vmul.f32	s18, s18, s14
 395              	.LVL41:
 396 0128 3BEE09BA 		vadd.f32	s22, s22, s18
 397 012c 22EE2B8A 		vmul.f32	s16, s4, s23
 398 0130 3BEE48BA 		vsub.f32	s22, s22, s16
 399              	.LVL42:
 214:Core/Src/devs/imu.cpp **** 		s1 = _4q1 * q3q3 - _2q3 * ax + 4.0f * q0q0 * AHRSIMU->_q1 - _2q0 * ay - _4q1 + _8q1 * q1q1 + _8q1
 400              		.loc 1 214 0
 401 0134 2CEE019A 		vmul.f32	s18, s24, s2
 402 0138 21EEA28A 		vmul.f32	s16, s3, s5
 403 013c 39EE489A 		vsub.f32	s18, s18, s16
 404 0140 23EE053A 		vmul.f32	s6, s6, s10
 405              	.LVL43:
 406 0144 64EE834A 		vmul.f32	s9, s9, s6
 407 0148 39EE249A 		vadd.f32	s18, s18, s9
 408 014c 62EE204A 		vmul.f32	s9, s4, s1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 20


 409 0150 39EE649A 		vsub.f32	s18, s18, s9
 410 0154 39EE4C9A 		vsub.f32	s18, s18, s24
 411 0158 6CEE874A 		vmul.f32	s9, s25, s14
 412 015c 39EE249A 		vadd.f32	s18, s18, s9
 413 0160 6CEE86CA 		vmul.f32	s25, s25, s12
 414              	.LVL44:
 415 0164 39EE2C9A 		vadd.f32	s18, s18, s25
 416 0168 20EE0CCA 		vmul.f32	s24, s0, s24
 417              	.LVL45:
 418 016c 39EE0C9A 		vadd.f32	s18, s18, s24
 419              	.LVL46:
 215:Core/Src/devs/imu.cpp **** 		s2 = 4.0f * q0q0 * AHRSIMU->_q2 + _2q0 * ax + _4q2 * q3q3 - _2q3 * ay - _4q2 + _8q2 * q1q1 + _8q2
 420              		.loc 1 215 0
 421 0170 67EE837A 		vmul.f32	s15, s15, s6
 422 0174 21EEA08A 		vmul.f32	s16, s3, s1
 423 0178 77EE887A 		vadd.f32	s15, s15, s16
 424 017c 24EE018A 		vmul.f32	s16, s8, s2
 425 0180 37EE888A 		vadd.f32	s16, s15, s16
 426 0184 62EE222A 		vmul.f32	s5, s4, s5
 427              	.LVL47:
 428 0188 38EE628A 		vsub.f32	s16, s16, s5
 429 018c 38EE448A 		vsub.f32	s16, s16, s8
 430 0190 63EE877A 		vmul.f32	s15, s7, s14
 431 0194 38EE278A 		vadd.f32	s16, s16, s15
 432 0198 63EE863A 		vmul.f32	s7, s7, s12
 433              	.LVL48:
 434 019c 38EE238A 		vadd.f32	s16, s16, s7
 435 01a0 20EE040A 		vmul.f32	s0, s0, s8
 436              	.LVL49:
 437 01a4 38EE008A 		vadd.f32	s16, s16, s0
 438              	.LVL50:
 216:Core/Src/devs/imu.cpp **** 		s3 = 4.0f * q1q1 * AHRSIMU->_q3 - _2q1 * ax + 4.0f * q2q2 * AHRSIMU->_q3 - _2q2 * ay;
 439              		.loc 1 216 0
 440 01a8 27EE057A 		vmul.f32	s14, s14, s10
 441              	.LVL51:
 442 01ac 26EE877A 		vmul.f32	s14, s13, s14
 443 01b0 61EEABBA 		vmul.f32	s23, s3, s23
 444              	.LVL52:
 445 01b4 77EE6BBA 		vsub.f32	s23, s14, s23
 446 01b8 26EE056A 		vmul.f32	s12, s12, s10
 447              	.LVL53:
 448 01bc 66EE866A 		vmul.f32	s13, s13, s12
 449              	.LVL54:
 450 01c0 7BEEA6BA 		vadd.f32	s23, s23, s13
 451 01c4 22EE252A 		vmul.f32	s4, s4, s11
 452              	.LVL55:
 453 01c8 7BEEC2BA 		vsub.f32	s23, s23, s4
 454              	.LVL56:
 217:Core/Src/devs/imu.cpp **** 
 218:Core/Src/devs/imu.cpp **** 		/* Normalise step magnitude */
 219:Core/Src/devs/imu.cpp **** 		recipNorm = oneOverSqrt(s0 * s0 + s1 * s1 + s2 * s2 + s3 * s3);
 455              		.loc 1 219 0
 456 01cc 6BEE0B7A 		vmul.f32	s15, s22, s22
 457 01d0 29EE090A 		vmul.f32	s0, s18, s18
 458 01d4 77EE807A 		vadd.f32	s15, s15, s0
 459 01d8 28EE080A 		vmul.f32	s0, s16, s16
 460 01dc 77EE807A 		vadd.f32	s15, s15, s0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 21


 461 01e0 2BEEAB0A 		vmul.f32	s0, s23, s23
 462 01e4 37EE800A 		vadd.f32	s0, s15, s0
 463 01e8 FFF7FEFF 		bl	_ZL11oneOverSqrtf
 464              	.LVL57:
 220:Core/Src/devs/imu.cpp **** 		s0 *= recipNorm;
 465              		.loc 1 220 0
 466 01ec 2BEE00BA 		vmul.f32	s22, s22, s0
 467              	.LVL58:
 221:Core/Src/devs/imu.cpp **** 		s1 *= recipNorm;
 468              		.loc 1 221 0
 469 01f0 29EE009A 		vmul.f32	s18, s18, s0
 470              	.LVL59:
 222:Core/Src/devs/imu.cpp **** 		s2 *= recipNorm;
 471              		.loc 1 222 0
 472 01f4 28EE008A 		vmul.f32	s16, s16, s0
 473              	.LVL60:
 223:Core/Src/devs/imu.cpp **** 		s3 *= recipNorm;
 474              		.loc 1 223 0
 475 01f8 6BEE80BA 		vmul.f32	s23, s23, s0
 476              	.LVL61:
 224:Core/Src/devs/imu.cpp **** 
 225:Core/Src/devs/imu.cpp **** 		/* Apply feedback step */
 226:Core/Src/devs/imu.cpp **** 		qDot1 -= AHRSIMU->_beta * s0;
 477              		.loc 1 226 0
 478 01fc D4ED047A 		vldr.32	s15, [r4, #16]
 479 0200 27EE8BBA 		vmul.f32	s22, s15, s22
 480              	.LVL62:
 481 0204 78EECB8A 		vsub.f32	s17, s17, s22
 482              	.LVL63:
 227:Core/Src/devs/imu.cpp **** 		qDot2 -= AHRSIMU->_beta * s1;
 483              		.loc 1 227 0
 484 0208 27EE899A 		vmul.f32	s18, s15, s18
 485              	.LVL64:
 486 020c 3AEE49AA 		vsub.f32	s20, s20, s18
 487              	.LVL65:
 228:Core/Src/devs/imu.cpp **** 		qDot3 -= AHRSIMU->_beta * s2;
 488              		.loc 1 228 0
 489 0210 27EE888A 		vmul.f32	s16, s15, s16
 490              	.LVL66:
 491 0214 79EEC89A 		vsub.f32	s19, s19, s16
 492              	.LVL67:
 229:Core/Src/devs/imu.cpp **** 		qDot4 -= AHRSIMU->_beta * s3;
 493              		.loc 1 229 0
 494 0218 67EEAB7A 		vmul.f32	s15, s15, s23
 495 021c 7AEEE7AA 		vsub.f32	s21, s21, s15
 496              	.LVL68:
 497              	.L18:
 230:Core/Src/devs/imu.cpp **** 	}
 231:Core/Src/devs/imu.cpp **** 
 232:Core/Src/devs/imu.cpp **** 	/* Integrate rate of change of quaternion to yield quaternion */
 233:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q0 += qDot1 * AHRSIMU->_sampleRate;
 498              		.loc 1 233 0
 499 0220 D4ED097A 		vldr.32	s15, [r4, #36]
 500 0224 67EEA88A 		vmul.f32	s17, s15, s17
 501              	.LVL69:
 502 0228 94ED050A 		vldr.32	s0, [r4, #20]
 503 022c 78EE808A 		vadd.f32	s17, s17, s0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 22


 504 0230 C4ED058A 		vstr.32	s17, [r4, #20]
 234:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q1 += qDot2 * AHRSIMU->_sampleRate;
 505              		.loc 1 234 0
 506 0234 27EE8AAA 		vmul.f32	s20, s15, s20
 507              	.LVL70:
 508 0238 94ED060A 		vldr.32	s0, [r4, #24]
 509 023c 3AEE00AA 		vadd.f32	s20, s20, s0
 510 0240 84ED06AA 		vstr.32	s20, [r4, #24]
 235:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q2 += qDot3 * AHRSIMU->_sampleRate;
 511              		.loc 1 235 0
 512 0244 67EEA99A 		vmul.f32	s19, s15, s19
 513              	.LVL71:
 514 0248 94ED070A 		vldr.32	s0, [r4, #28]
 515 024c 79EE809A 		vadd.f32	s19, s19, s0
 516 0250 C4ED079A 		vstr.32	s19, [r4, #28]
 236:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q3 += qDot4 * AHRSIMU->_sampleRate;
 517              		.loc 1 236 0
 518 0254 67EEAAAA 		vmul.f32	s21, s15, s21
 519              	.LVL72:
 520 0258 94ED080A 		vldr.32	s0, [r4, #32]
 521 025c 3AEE800A 		vadd.f32	s0, s21, s0
 522 0260 84ED080A 		vstr.32	s0, [r4, #32]
 237:Core/Src/devs/imu.cpp **** 
 238:Core/Src/devs/imu.cpp **** 	/* Normalise quaternion */
 239:Core/Src/devs/imu.cpp **** 	recipNorm = oneOverSqrt(AHRSIMU->_q0 * AHRSIMU->_q0 + AHRSIMU->_q1 * AHRSIMU->_q1 + AHRSIMU->_q2 *
 523              		.loc 1 239 0
 524 0264 68EEA88A 		vmul.f32	s17, s17, s17
 525 0268 2AEE0AAA 		vmul.f32	s20, s20, s20
 526 026c 78EE8A8A 		vadd.f32	s17, s17, s20
 527 0270 69EEA99A 		vmul.f32	s19, s19, s19
 528 0274 78EEA98A 		vadd.f32	s17, s17, s19
 529 0278 20EE000A 		vmul.f32	s0, s0, s0
 530 027c 38EE800A 		vadd.f32	s0, s17, s0
 531 0280 FFF7FEFF 		bl	_ZL11oneOverSqrtf
 532              	.LVL73:
 240:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q0 *= recipNorm;
 533              		.loc 1 240 0
 534 0284 D4ED057A 		vldr.32	s15, [r4, #20]
 535 0288 67EE807A 		vmul.f32	s15, s15, s0
 536 028c C4ED057A 		vstr.32	s15, [r4, #20]
 241:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q1 *= recipNorm;
 537              		.loc 1 241 0
 538 0290 D4ED067A 		vldr.32	s15, [r4, #24]
 539 0294 67EE807A 		vmul.f32	s15, s15, s0
 540 0298 C4ED067A 		vstr.32	s15, [r4, #24]
 242:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q2 *= recipNorm;
 541              		.loc 1 242 0
 542 029c D4ED077A 		vldr.32	s15, [r4, #28]
 543 02a0 67EE807A 		vmul.f32	s15, s15, s0
 544 02a4 C4ED077A 		vstr.32	s15, [r4, #28]
 243:Core/Src/devs/imu.cpp **** 	AHRSIMU->_q3 *= recipNorm;
 545              		.loc 1 243 0
 546 02a8 D4ED087A 		vldr.32	s15, [r4, #32]
 547 02ac 27EE800A 		vmul.f32	s0, s15, s0
 548              	.LVL74:
 549 02b0 84ED080A 		vstr.32	s0, [r4, #32]
 244:Core/Src/devs/imu.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 23


 245:Core/Src/devs/imu.cpp **** 	/* Calculate new angles */
 246:Core/Src/devs/imu.cpp **** 	calculateAngles(AHRSIMU);
 550              		.loc 1 246 0
 551 02b4 2046     		mov	r0, r4
 552 02b6 FFF7FEFF 		bl	_ZL15calculateAnglesP13_TM_AHRSIMU_t
 553              	.LVL75:
 247:Core/Src/devs/imu.cpp **** }
 554              		.loc 1 247 0
 555 02ba BDEC0A8B 		vldm	sp!, {d8-d12}
 556              	.LCFI6:
 557              		.cfi_restore 88
 558              		.cfi_restore 89
 559              		.cfi_restore 86
 560              		.cfi_restore 87
 561              		.cfi_restore 84
 562              		.cfi_restore 85
 563              		.cfi_restore 82
 564              		.cfi_restore 83
 565              		.cfi_restore 80
 566              		.cfi_restore 81
 567              		.cfi_def_cfa_offset 8
 568 02be 10BD     		pop	{r4, pc}
 569              		.cfi_endproc
 570              	.LFE228:
 572              		.section	.text.TM_AHRSIMU_UpdateAHRS,"ax",%progbits
 573              		.align	1
 574              		.global	TM_AHRSIMU_UpdateAHRS
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv4-sp-d16
 580              	TM_AHRSIMU_UpdateAHRS:
 581              	.LFB227:
  69:Core/Src/devs/imu.cpp **** 	float recipNorm;
 582              		.loc 1 69 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 56
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              	.LVL76:
 587 0000 10B5     		push	{r4, lr}
 588              	.LCFI7:
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 4, -8
 591              		.cfi_offset 14, -4
 592 0002 2DED108B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14, d15}
 593              	.LCFI8:
 594              		.cfi_def_cfa_offset 72
 595              		.cfi_offset 80, -72
 596              		.cfi_offset 81, -68
 597              		.cfi_offset 82, -64
 598              		.cfi_offset 83, -60
 599              		.cfi_offset 84, -56
 600              		.cfi_offset 85, -52
 601              		.cfi_offset 86, -48
 602              		.cfi_offset 87, -44
 603              		.cfi_offset 88, -40
 604              		.cfi_offset 89, -36
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 24


 605              		.cfi_offset 90, -32
 606              		.cfi_offset 91, -28
 607              		.cfi_offset 92, -24
 608              		.cfi_offset 93, -20
 609              		.cfi_offset 94, -16
 610              		.cfi_offset 95, -12
 611 0006 8EB0     		sub	sp, sp, #56
 612              	.LCFI9:
 613              		.cfi_def_cfa_offset 128
 614 0008 0446     		mov	r4, r0
 615 000a B0EE61AA 		vmov.f32	s20, s3
 616 000e B0EE42DA 		vmov.f32	s26, s4
 617 0012 B0EE62CA 		vmov.f32	s24, s5
 618 0016 F0EE43BA 		vmov.f32	s23, s6
 619 001a F0EE63AA 		vmov.f32	s21, s7
 620 001e B0EE44BA 		vmov.f32	s22, s8
  77:Core/Src/devs/imu.cpp **** 	{
 621              		.loc 1 77 0
 622 0022 B5EE403A 		vcmp.f32	s6, #0
 623 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 624 002a 0AD1     		bne	.L21
  77:Core/Src/devs/imu.cpp **** 	{
 625              		.loc 1 77 0 is_stmt 0 discriminator 1
 626 002c F5EE403A 		vcmp.f32	s7, #0
 627 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 628 0034 05D1     		bne	.L21
  77:Core/Src/devs/imu.cpp **** 	{
 629              		.loc 1 77 0 discriminator 2
 630 0036 B5EE404A 		vcmp.f32	s8, #0
 631 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 632 003e 00F09382 		beq	.L22
 633              	.L21:
  80:Core/Src/devs/imu.cpp **** 		qDot2 = 0.5f * (AHRSIMU->_q0 * gx + AHRSIMU->_q2 * gz - AHRSIMU->_q3 * gy);
 634              		.loc 1 80 0 is_stmt 1
 635 0042 D4ED065A 		vldr.32	s11, [r4, #24]
 636 0046 65EEC08A 		vnmul.f32	s17, s11, s0
 637 004a 94ED076A 		vldr.32	s12, [r4, #28]
 638 004e 66EE207A 		vmul.f32	s15, s12, s1
 639 0052 78EEE78A 		vsub.f32	s17, s17, s15
 640 0056 D4ED086A 		vldr.32	s13, [r4, #32]
 641 005a 66EE817A 		vmul.f32	s15, s13, s2
 642 005e 78EEE78A 		vsub.f32	s17, s17, s15
 643 0062 B6EE005A 		vmov.f32	s10, #5.0e-1
 644 0066 68EE858A 		vmul.f32	s17, s17, s10
 645              	.LVL77:
  81:Core/Src/devs/imu.cpp **** 		qDot3 = 0.5f * (AHRSIMU->_q0 * gy - AHRSIMU->_q1 * gz + AHRSIMU->_q3 * gx);
 646              		.loc 1 81 0
 647 006a D4ED057A 		vldr.32	s15, [r4, #20]
 648 006e 67EE809A 		vmul.f32	s19, s15, s0
 649 0072 26EE017A 		vmul.f32	s14, s12, s2
 650 0076 79EE879A 		vadd.f32	s19, s19, s14
 651 007a 26EEA07A 		vmul.f32	s14, s13, s1
 652 007e 79EEC79A 		vsub.f32	s19, s19, s14
 653 0082 69EE859A 		vmul.f32	s19, s19, s10
 654              	.LVL78:
  82:Core/Src/devs/imu.cpp **** 		qDot4 = 0.5f * (AHRSIMU->_q0 * gz + AHRSIMU->_q1 * gy - AHRSIMU->_q2 * gx);
 655              		.loc 1 82 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 25


 656 0086 27EEA07A 		vmul.f32	s14, s15, s1
 657 008a 65EE814A 		vmul.f32	s9, s11, s2
 658 008e 37EE647A 		vsub.f32	s14, s14, s9
 659 0092 66EE806A 		vmul.f32	s13, s13, s0
 660 0096 37EE267A 		vadd.f32	s14, s14, s13
 661 009a 27EE057A 		vmul.f32	s14, s14, s10
 662 009e 8DED017A 		vstr.32	s14, [sp, #4]
 663              	.LVL79:
  83:Core/Src/devs/imu.cpp **** 
 664              		.loc 1 83 0
 665 00a2 67EE817A 		vmul.f32	s15, s15, s2
 666 00a6 65EEA00A 		vmul.f32	s1, s11, s1
 667              	.LVL80:
 668 00aa 77EEA07A 		vadd.f32	s15, s15, s1
 669 00ae 26EE000A 		vmul.f32	s0, s12, s0
 670              	.LVL81:
 671 00b2 37EEC00A 		vsub.f32	s0, s15, s0
 672 00b6 60EE057A 		vmul.f32	s15, s0, s10
 673 00ba CDED027A 		vstr.32	s15, [sp, #8]
 674              	.LVL82:
  86:Core/Src/devs/imu.cpp **** 		{
 675              		.loc 1 86 0
 676 00be B5EE40AA 		vcmp.f32	s20, #0
 677 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 678 00c6 0AD1     		bne	.L23
  86:Core/Src/devs/imu.cpp **** 		{
 679              		.loc 1 86 0 is_stmt 0 discriminator 1
 680 00c8 B5EE40DA 		vcmp.f32	s26, #0
 681 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 682 00d0 05D1     		bne	.L23
  86:Core/Src/devs/imu.cpp **** 		{
 683              		.loc 1 86 0 discriminator 2
 684 00d2 B5EE40CA 		vcmp.f32	s24, #0
 685 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 686 00da 00F0F081 		beq	.L24
 687              	.L23:
  90:Core/Src/devs/imu.cpp **** 			ax *= recipNorm;
 688              		.loc 1 90 0 is_stmt 1
 689 00de 6AEE0A7A 		vmul.f32	s15, s20, s20
 690              	.LVL83:
 691 00e2 2DEE0D0A 		vmul.f32	s0, s26, s26
 692 00e6 77EE807A 		vadd.f32	s15, s15, s0
 693 00ea 2CEE0C0A 		vmul.f32	s0, s24, s24
 694 00ee 37EE800A 		vadd.f32	s0, s15, s0
 695 00f2 FFF7FEFF 		bl	_ZL11oneOverSqrtf
 696              	.LVL84:
  91:Core/Src/devs/imu.cpp **** 			ay *= recipNorm;
 697              		.loc 1 91 0
 698 00f6 6AEE007A 		vmul.f32	s15, s20, s0
 699 00fa CDED037A 		vstr.32	s15, [sp, #12]
 700              	.LVL85:
  92:Core/Src/devs/imu.cpp **** 			az *= recipNorm;
 701              		.loc 1 92 0
 702 00fe 6DEE006A 		vmul.f32	s13, s26, s0
 703 0102 CDED046A 		vstr.32	s13, [sp, #16]
 704              	.LVL86:
  93:Core/Src/devs/imu.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 26


 705              		.loc 1 93 0
 706 0106 2CEE006A 		vmul.f32	s12, s24, s0
 707 010a 8DED056A 		vstr.32	s12, [sp, #20]
 708              	.LVL87:
  96:Core/Src/devs/imu.cpp **** 			mx *= recipNorm;
 709              		.loc 1 96 0
 710 010e 6BEEAB7A 		vmul.f32	s15, s23, s23
 711              	.LVL88:
 712 0112 2AEEAA0A 		vmul.f32	s0, s21, s21
 713              	.LVL89:
 714 0116 77EE807A 		vadd.f32	s15, s15, s0
 715 011a 2BEE0B0A 		vmul.f32	s0, s22, s22
 716 011e 37EE800A 		vadd.f32	s0, s15, s0
 717 0122 FFF7FEFF 		bl	_ZL11oneOverSqrtf
 718              	.LVL90:
  97:Core/Src/devs/imu.cpp **** 			my *= recipNorm;
 719              		.loc 1 97 0
 720 0126 6BEE80BA 		vmul.f32	s23, s23, s0
 721              	.LVL91:
  98:Core/Src/devs/imu.cpp **** 			mz *= recipNorm;
 722              		.loc 1 98 0
 723 012a 6AEE80AA 		vmul.f32	s21, s21, s0
 724              	.LVL92:
  99:Core/Src/devs/imu.cpp **** 
 725              		.loc 1 99 0
 726 012e 2BEE00BA 		vmul.f32	s22, s22, s0
 727              	.LVL93:
 102:Core/Src/devs/imu.cpp **** 			_2q0my = 2.0f * AHRSIMU->_q0 * my;
 728              		.loc 1 102 0
 729 0132 D4ED055A 		vldr.32	s11, [r4, #20]
 730 0136 35EEA59A 		vadd.f32	s18, s11, s11
 731 013a 69EE2B4A 		vmul.f32	s9, s18, s23
 732              	.LVL94:
 103:Core/Src/devs/imu.cpp **** 			_2q0mz = 2.0f * AHRSIMU->_q0 * mz;
 733              		.loc 1 103 0
 734 013e 69EE2AFA 		vmul.f32	s31, s18, s21
 735              	.LVL95:
 104:Core/Src/devs/imu.cpp **** 			_2q1mx = 2.0f * AHRSIMU->_q1 * mx;
 736              		.loc 1 104 0
 737 0142 29EE0B5A 		vmul.f32	s10, s18, s22
 738              	.LVL96:
 105:Core/Src/devs/imu.cpp **** 			_2q0 = 2.0f * AHRSIMU->_q0;
 739              		.loc 1 105 0
 740 0146 94ED066A 		vldr.32	s12, [r4, #24]
 741 014a 36EE06AA 		vadd.f32	s20, s12, s12
 742 014e 2AEE2BFA 		vmul.f32	s30, s20, s23
 743              	.LVL97:
 108:Core/Src/devs/imu.cpp **** 			_2q3 = 2.0f * AHRSIMU->_q3;
 744              		.loc 1 108 0
 745 0152 D4ED076A 		vldr.32	s13, [r4, #28]
 746 0156 36EEA6DA 		vadd.f32	s26, s13, s13
 747              	.LVL98:
 109:Core/Src/devs/imu.cpp **** 			_2q0q2 = 2.0f * AHRSIMU->_q0 * AHRSIMU->_q2;
 748              		.loc 1 109 0
 749 015a 94ED087A 		vldr.32	s14, [r4, #32]
 750 015e 37EE07EA 		vadd.f32	s28, s14, s14
 751 0162 8DED07EA 		vstr.32	s28, [sp, #28]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 27


 752              	.LVL99:
 110:Core/Src/devs/imu.cpp **** 			_2q2q3 = 2.0f * AHRSIMU->_q2 * AHRSIMU->_q3;
 753              		.loc 1 110 0
 754 0166 29EE264A 		vmul.f32	s8, s18, s13
 755 016a 8DED084A 		vstr.32	s8, [sp, #32]
 756              	.LVL100:
 111:Core/Src/devs/imu.cpp **** 			q0q0 = AHRSIMU->_q0 * AHRSIMU->_q0;
 757              		.loc 1 111 0
 758 016e 67EE0D3A 		vmul.f32	s7, s14, s26
 759 0172 CDED093A 		vstr.32	s7, [sp, #36]
 760              	.LVL101:
 112:Core/Src/devs/imu.cpp **** 			q0q1 = AHRSIMU->_q0 * AHRSIMU->_q1;
 761              		.loc 1 112 0
 762 0176 65EEA5DA 		vmul.f32	s27, s11, s11
 763              	.LVL102:
 113:Core/Src/devs/imu.cpp **** 			q0q2 = AHRSIMU->_q0 * AHRSIMU->_q2;
 764              		.loc 1 113 0
 765 017a 25EE868A 		vmul.f32	s16, s11, s12
 766              	.LVL103:
 114:Core/Src/devs/imu.cpp **** 			q0q3 = AHRSIMU->_q0 * AHRSIMU->_q3;
 767              		.loc 1 114 0
 768 017e 65EEA67A 		vmul.f32	s15, s11, s13
 769 0182 CDED0A7A 		vstr.32	s15, [sp, #40]
 770              	.LVL104:
 115:Core/Src/devs/imu.cpp **** 			q1q1 = AHRSIMU->_q1 * AHRSIMU->_q1;
 771              		.loc 1 115 0
 772 0186 65EE875A 		vmul.f32	s11, s11, s14
 773 018a CDED0B5A 		vstr.32	s11, [sp, #44]
 774              	.LVL105:
 116:Core/Src/devs/imu.cpp **** 			q1q2 = AHRSIMU->_q1 * AHRSIMU->_q2;
 775              		.loc 1 116 0
 776 018e 66EE06CA 		vmul.f32	s25, s12, s12
 777              	.LVL106:
 117:Core/Src/devs/imu.cpp **** 			q1q3 = AHRSIMU->_q1 * AHRSIMU->_q3;
 778              		.loc 1 117 0
 779 0192 66EE26EA 		vmul.f32	s29, s12, s13
 780 0196 CDED0CEA 		vstr.32	s29, [sp, #48]
 781              	.LVL107:
 118:Core/Src/devs/imu.cpp **** 			q2q2 = AHRSIMU->_q2 * AHRSIMU->_q2;
 782              		.loc 1 118 0
 783 019a 26EE07EA 		vmul.f32	s28, s12, s14
 784              	.LVL108:
 119:Core/Src/devs/imu.cpp **** 			q2q3 = AHRSIMU->_q2 * AHRSIMU->_q3;
 785              		.loc 1 119 0
 786 019e 26EEA6CA 		vmul.f32	s24, s13, s13
 787              	.LVL109:
 120:Core/Src/devs/imu.cpp **** 			q3q3 = AHRSIMU->_q3 * AHRSIMU->_q3;
 788              		.loc 1 120 0
 789 01a2 26EE873A 		vmul.f32	s6, s13, s14
 790 01a6 8DED0D3A 		vstr.32	s6, [sp, #52]
 791              	.LVL110:
 121:Core/Src/devs/imu.cpp **** 
 792              		.loc 1 121 0
 793 01aa 67EE07EA 		vmul.f32	s29, s14, s14
 794              	.LVL111:
 124:Core/Src/devs/imu.cpp **** 			hy = _2q0mx * AHRSIMU->_q3 + my * q0q0 - _2q0mz * AHRSIMU->_q1 + _2q1mx * AHRSIMU->_q2 - my * q1
 795              		.loc 1 124 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 28


 796 01ae 2BEEAD0A 		vmul.f32	s0, s23, s27
 797              	.LVL112:
 798 01b2 67EE2F7A 		vmul.f32	s15, s14, s31
 799              	.LVL113:
 800 01b6 30EE670A 		vsub.f32	s0, s0, s15
 801 01ba 66EE857A 		vmul.f32	s15, s13, s10
 802 01be 30EE270A 		vadd.f32	s0, s0, s15
 803 01c2 6BEEAC7A 		vmul.f32	s15, s23, s25
 804 01c6 30EE270A 		vadd.f32	s0, s0, s15
 805 01ca 6AEE2A7A 		vmul.f32	s15, s20, s21
 806 01ce 66EEA77A 		vmul.f32	s15, s13, s15
 807 01d2 30EE270A 		vadd.f32	s0, s0, s15
 808 01d6 6AEE0B5A 		vmul.f32	s11, s20, s22
 809              	.LVL114:
 810 01da 67EE255A 		vmul.f32	s11, s14, s11
 811 01de 30EE250A 		vadd.f32	s0, s0, s11
 812 01e2 6BEE8C7A 		vmul.f32	s15, s23, s24
 813 01e6 30EE670A 		vsub.f32	s0, s0, s15
 814 01ea 6BEEAE7A 		vmul.f32	s15, s23, s29
 815 01ee 30EE670A 		vsub.f32	s0, s0, s15
 816              	.LVL115:
 125:Core/Src/devs/imu.cpp **** 			_2bx = (float)sqrt(hx * hx + hy * hy);
 817              		.loc 1 125 0
 818 01f2 CDED064A 		vstr.32	s9, [sp, #24]
 819 01f6 67EE247A 		vmul.f32	s15, s14, s9
 820 01fa 6AEEAD5A 		vmul.f32	s11, s21, s27
 821 01fe 77EEA57A 		vadd.f32	s15, s15, s11
 822 0202 26EE056A 		vmul.f32	s12, s12, s10
 823 0206 77EEC67A 		vsub.f32	s15, s15, s12
 824 020a 66EE8F6A 		vmul.f32	s13, s13, s30
 825 020e 77EEA67A 		vadd.f32	s15, s15, s13
 826 0212 6AEEAC6A 		vmul.f32	s13, s21, s25
 827 0216 77EEE67A 		vsub.f32	s15, s15, s13
 828 021a 6AEE8C6A 		vmul.f32	s13, s21, s24
 829 021e 77EEA67A 		vadd.f32	s15, s15, s13
 830 0222 6BEE0D6A 		vmul.f32	s13, s22, s26
 831 0226 27EE267A 		vmul.f32	s14, s14, s13
 832 022a 77EE877A 		vadd.f32	s15, s15, s14
 833 022e 2AEEAE7A 		vmul.f32	s14, s21, s29
 834 0232 77EEC77A 		vsub.f32	s15, s15, s14
 835              	.LVL116:
 126:Core/Src/devs/imu.cpp **** 			_2bz = -_2q0mx * AHRSIMU->_q2 + _2q0my * AHRSIMU->_q1 + mz * q0q0 + _2q1mx * AHRSIMU->_q3 - mz *
 836              		.loc 1 126 0
 837 0236 20EE000A 		vmul.f32	s0, s0, s0
 838              	.LVL117:
 839 023a 67EEA77A 		vmul.f32	s15, s15, s15
 840              	.LVL118:
 841              	.LBB20:
 842              	.LBB21:
 843              		.loc 2 464 0
 844 023e 30EE270A 		vadd.f32	s0, s0, s15
 845              	.LVL119:
 846 0242 FFF7FEFF 		bl	sqrtf
 847              	.LVL120:
 848              	.LBE21:
 849              	.LBE20:
 127:Core/Src/devs/imu.cpp **** 			_4bx = 2.0f * _2bx;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 29


 850              		.loc 1 127 0
 851 0246 94ED075A 		vldr.32	s10, [r4, #28]
 852 024a DDED064A 		vldr.32	s9, [sp, #24]
 853 024e 64EEC57A 		vnmul.f32	s15, s9, s10
 854 0252 D4ED066A 		vldr.32	s13, [r4, #24]
 855 0256 66EEAFFA 		vmul.f32	s31, s13, s31
 856              	.LVL121:
 857 025a 77EEAF7A 		vadd.f32	s15, s15, s31
 858 025e 6BEE2DDA 		vmul.f32	s27, s22, s27
 859              	.LVL122:
 860 0262 77EEAD7A 		vadd.f32	s15, s15, s27
 861 0266 94ED086A 		vldr.32	s12, [r4, #32]
 862 026a 26EE0FFA 		vmul.f32	s30, s12, s30
 863              	.LVL123:
 864 026e 77EE8F7A 		vadd.f32	s15, s15, s30
 865 0272 2BEE2CFA 		vmul.f32	s30, s22, s25
 866 0276 77EECF7A 		vsub.f32	s15, s15, s30
 867 027a 2AEE8DFA 		vmul.f32	s30, s21, s26
 868 027e 26EE0FFA 		vmul.f32	s30, s12, s30
 869 0282 77EE8F7A 		vadd.f32	s15, s15, s30
 870 0286 2BEE0C7A 		vmul.f32	s14, s22, s24
 871 028a 77EEC77A 		vsub.f32	s15, s15, s14
 872 028e 2BEE2E7A 		vmul.f32	s14, s22, s29
 873 0292 77EE877A 		vadd.f32	s15, s15, s14
 874              	.LVL124:
 128:Core/Src/devs/imu.cpp **** 			_4bz = 2.0f * _2bz;
 875              		.loc 1 128 0
 876 0296 30EE002A 		vadd.f32	s4, s0, s0
 877              	.LVL125:
 129:Core/Src/devs/imu.cpp **** 
 878              		.loc 1 129 0
 879 029a 77EEA71A 		vadd.f32	s3, s15, s15
 880              	.LVL126:
 132:Core/Src/devs/imu.cpp **** 			s1 = _2q3 * (2.0f * q1q3 - _2q0q2 - ax) + _2q0 * (2.0f * q0q1 + _2q2q3 - ay) - 4.0f * AHRSIMU->_
 881              		.loc 1 132 0
 882 029e 7EEE0E5A 		vadd.f32	s11, s28, s28
 883 02a2 9DED084A 		vldr.32	s8, [sp, #32]
 884 02a6 75EEC45A 		vsub.f32	s11, s11, s8
 885 02aa 9DED037A 		vldr.32	s14, [sp, #12]
 886 02ae 75EEC75A 		vsub.f32	s11, s11, s14
 887 02b2 2DEE651A 		vnmul.f32	s2, s26, s11
 888 02b6 38EE087A 		vadd.f32	s14, s16, s16
 889 02ba DDED093A 		vldr.32	s7, [sp, #36]
 890 02be 37EE237A 		vadd.f32	s14, s14, s7
 891 02c2 DDED044A 		vldr.32	s9, [sp, #16]
 892 02c6 37EE647A 		vsub.f32	s14, s14, s9
 893 02ca 6AEE074A 		vmul.f32	s9, s20, s14
 894 02ce 31EE241A 		vadd.f32	s2, s2, s9
 895 02d2 65EE273A 		vmul.f32	s7, s10, s15
 896 02d6 F6EE004A 		vmov.f32	s9, #5.0e-1
 897 02da 34EECC4A 		vsub.f32	s8, s9, s24
 898 02de 74EE6EEA 		vsub.f32	s29, s8, s29
 899              	.LVL127:
 900 02e2 6EEE80EA 		vmul.f32	s29, s29, s0
 901 02e6 DDED0ADA 		vldr.32	s27, [sp, #40]
 902 02ea 3EEE6D4A 		vsub.f32	s8, s28, s27
 903 02ee 24EE274A 		vmul.f32	s8, s8, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 30


 904 02f2 7EEE84EA 		vadd.f32	s29, s29, s8
 905 02f6 7EEEEBBA 		vsub.f32	s23, s29, s23
 906              	.LVL128:
 907 02fa 23EEABFA 		vmul.f32	s30, s7, s23
 908 02fe 31EE4F1A 		vsub.f32	s2, s2, s30
 909 0302 B1EE403A 		vneg.f32	s6, s0
 910 0306 26EE034A 		vmul.f32	s8, s12, s6
 911 030a 66EEA72A 		vmul.f32	s5, s13, s15
 912 030e 34EE224A 		vadd.f32	s8, s8, s5
 913 0312 DDED0CEA 		vldr.32	s29, [sp, #48]
 914 0316 DDED0B0A 		vldr.32	s1, [sp, #44]
 915 031a 7EEEE00A 		vsub.f32	s1, s29, s1
 916 031e 60EE800A 		vmul.f32	s1, s1, s0
 917 0322 DDED0DEA 		vldr.32	s29, [sp, #52]
 918 0326 38EE2E8A 		vadd.f32	s16, s16, s29
 919              	.LVL129:
 920 032a 28EE278A 		vmul.f32	s16, s16, s15
 921 032e 70EE880A 		vadd.f32	s1, s1, s16
 922 0332 70EEEAAA 		vsub.f32	s21, s1, s21
 923              	.LVL130:
 924 0336 24EE2AFA 		vmul.f32	s30, s8, s21
 925 033a 31EE0FFA 		vadd.f32	s30, s2, s30
 926 033e 65EE000A 		vmul.f32	s1, s10, s0
 927 0342 3DEE8EEA 		vadd.f32	s28, s27, s28
 928              	.LVL131:
 929 0346 2EEE00EA 		vmul.f32	s28, s28, s0
 930 034a 74EEEC4A 		vsub.f32	s9, s9, s25
 931 034e 74EECC4A 		vsub.f32	s9, s9, s24
 932 0352 64EEA74A 		vmul.f32	s9, s9, s15
 933 0356 3EEE24EA 		vadd.f32	s28, s28, s9
 934 035a 3EEE4BBA 		vsub.f32	s22, s28, s22
 935              	.LVL132:
 936 035e 60EE8B4A 		vmul.f32	s9, s1, s22
 937 0362 3FEE24FA 		vadd.f32	s30, s30, s9
 938              	.LVL133:
 133:Core/Src/devs/imu.cpp **** 			s2 = -_2q0 * (2.0f * q1q3 - _2q0q2 - ax) + _2q3 * (2.0f * q0q1 + _2q2q3 - ay) - 4.0f * AHRSIMU->
 939              		.loc 1 133 0
 940 0366 9DED07EA 		vldr.32	s28, [sp, #28]
 941 036a 65EE8EDA 		vmul.f32	s27, s11, s28
 942 036e 69EE074A 		vmul.f32	s9, s18, s14
 943 0372 7DEEA4DA 		vadd.f32	s27, s27, s9
 944 0376 B1EE004A 		vmov.f32	s8, #4.0e+0
 945 037a 66EE844A 		vmul.f32	s9, s13, s8
 946 037e 7CEEACCA 		vadd.f32	s25, s25, s25
 947              	.LVL134:
 948 0382 B7EE008A 		vmov.f32	s16, #1.0e+0
 949 0386 78EE6CCA 		vsub.f32	s25, s16, s25
 950 038a 3CEE0CCA 		vadd.f32	s24, s24, s24
 951              	.LVL135:
 952 038e 3CEECCCA 		vsub.f32	s24, s25, s24
 953 0392 9DED051A 		vldr.32	s2, [sp, #20]
 954 0396 3CEE41CA 		vsub.f32	s24, s24, s2
 955 039a 64EE8C4A 		vmul.f32	s9, s9, s24
 956 039e 7DEEE4DA 		vsub.f32	s27, s27, s9
 957 03a2 26EE271A 		vmul.f32	s2, s12, s15
 958 03a6 6BEE814A 		vmul.f32	s9, s23, s2
 959 03aa 7DEEA4DA 		vadd.f32	s27, s27, s9
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 31


 960 03ae D4ED054A 		vldr.32	s9, [r4, #20]
 961 03b2 64EEA77A 		vmul.f32	s15, s9, s15
 962              	.LVL136:
 963 03b6 70EEA70A 		vadd.f32	s1, s1, s15
 964 03ba 6AEEA00A 		vmul.f32	s1, s21, s1
 965 03be 7DEEA0DA 		vadd.f32	s27, s27, s1
 966 03c2 26EE008A 		vmul.f32	s16, s12, s0
 967 03c6 66EEA10A 		vmul.f32	s1, s13, s3
 968 03ca 38EE608A 		vsub.f32	s16, s16, s1
 969 03ce 2BEE088A 		vmul.f32	s16, s22, s16
 970 03d2 7DEE88DA 		vadd.f32	s27, s27, s16
 971              	.LVL137:
 134:Core/Src/devs/imu.cpp **** 			s3 = _2q1 * (2.0f * q1q3 - _2q0q2 - ax) + _2q2 * (2.0f * q0q1 + _2q2q3 - ay) + (-_4bx * AHRSIMU-
 972              		.loc 1 134 0
 973 03d6 29EE658A 		vnmul.f32	s16, s18, s11
 974 03da 27EE0E9A 		vmul.f32	s18, s14, s28
 975              	.LVL138:
 976 03de 38EE098A 		vadd.f32	s16, s16, s18
 977 03e2 25EE044A 		vmul.f32	s8, s10, s8
 978 03e6 2CEE04CA 		vmul.f32	s24, s24, s8
 979 03ea 38EE4C8A 		vsub.f32	s16, s16, s24
 980 03ee B1EE422A 		vneg.f32	s4, s4
 981              	.LVL139:
 982 03f2 25EE024A 		vmul.f32	s8, s10, s4
 983 03f6 74EE677A 		vsub.f32	s15, s8, s15
 984 03fa 6BEEA77A 		vmul.f32	s15, s23, s15
 985 03fe 38EE278A 		vadd.f32	s16, s16, s15
 986 0402 66EE806A 		vmul.f32	s13, s13, s0
 987 0406 31EE261A 		vadd.f32	s2, s2, s13
 988 040a 2AEE811A 		vmul.f32	s2, s21, s2
 989 040e 38EE018A 		vadd.f32	s16, s16, s2
 990 0412 24EE800A 		vmul.f32	s0, s9, s0
 991              	.LVL140:
 992 0416 25EE215A 		vmul.f32	s10, s10, s3
 993 041a 30EE455A 		vsub.f32	s10, s0, s10
 994 041e 2BEE055A 		vmul.f32	s10, s22, s10
 995 0422 38EE058A 		vadd.f32	s16, s16, s10
 996              	.LVL141:
 135:Core/Src/devs/imu.cpp **** 
 997              		.loc 1 135 0
 998 0426 2AEE25AA 		vmul.f32	s20, s20, s11
 999              	.LVL142:
 1000 042a 27EE0DDA 		vmul.f32	s26, s14, s26
 1001              	.LVL143:
 1002 042e 3AEE0DDA 		vadd.f32	s26, s20, s26
 1003 0432 26EE022A 		vmul.f32	s4, s12, s4
 1004 0436 32EE822A 		vadd.f32	s4, s5, s4
 1005 043a 6BEE82BA 		vmul.f32	s23, s23, s4
 1006 043e 7DEE2BBA 		vadd.f32	s23, s26, s23
 1007 0442 23EE243A 		vmul.f32	s6, s6, s9
 1008 0446 73EE833A 		vadd.f32	s7, s7, s6
 1009 044a 6AEEA3AA 		vmul.f32	s21, s21, s7
 1010 044e 7BEEAAAA 		vadd.f32	s21, s23, s21
 1011 0452 2BEE26BA 		vmul.f32	s22, s22, s13
 1012 0456 7AEE8BAA 		vadd.f32	s21, s21, s22
 1013              	.LVL144:
 138:Core/Src/devs/imu.cpp **** 			s0 *= recipNorm;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 32


 1014              		.loc 1 138 0
 1015 045a 6FEE0F7A 		vmul.f32	s15, s30, s30
 1016 045e 2DEEAD0A 		vmul.f32	s0, s27, s27
 1017 0462 77EE807A 		vadd.f32	s15, s15, s0
 1018 0466 28EE080A 		vmul.f32	s0, s16, s16
 1019 046a 77EE807A 		vadd.f32	s15, s15, s0
 1020 046e 2AEEAA0A 		vmul.f32	s0, s21, s21
 1021 0472 37EE800A 		vadd.f32	s0, s15, s0
 1022 0476 FFF7FEFF 		bl	_ZL11oneOverSqrtf
 1023              	.LVL145:
 139:Core/Src/devs/imu.cpp **** 			s1 *= recipNorm;
 1024              		.loc 1 139 0
 1025 047a 2FEE00FA 		vmul.f32	s30, s30, s0
 1026              	.LVL146:
 140:Core/Src/devs/imu.cpp **** 			s2 *= recipNorm;
 1027              		.loc 1 140 0
 1028 047e 6DEE80DA 		vmul.f32	s27, s27, s0
 1029              	.LVL147:
 141:Core/Src/devs/imu.cpp **** 			s3 *= recipNorm;
 1030              		.loc 1 141 0
 1031 0482 28EE008A 		vmul.f32	s16, s16, s0
 1032              	.LVL148:
 142:Core/Src/devs/imu.cpp **** 
 1033              		.loc 1 142 0
 1034 0486 6AEE80AA 		vmul.f32	s21, s21, s0
 1035              	.LVL149:
 145:Core/Src/devs/imu.cpp **** 			qDot2 -= AHRSIMU->_beta * s1;
 1036              		.loc 1 145 0
 1037 048a D4ED047A 		vldr.32	s15, [r4, #16]
 1038 048e 27EE8FFA 		vmul.f32	s30, s15, s30
 1039              	.LVL150:
 1040 0492 78EECF8A 		vsub.f32	s17, s17, s30
 1041              	.LVL151:
 146:Core/Src/devs/imu.cpp **** 			qDot3 -= AHRSIMU->_beta * s2;
 1042              		.loc 1 146 0
 1043 0496 67EEADDA 		vmul.f32	s27, s15, s27
 1044              	.LVL152:
 1045 049a 79EEED9A 		vsub.f32	s19, s19, s27
 1046              	.LVL153:
 147:Core/Src/devs/imu.cpp **** 			qDot4 -= AHRSIMU->_beta * s3;
 1047              		.loc 1 147 0
 1048 049e 27EE888A 		vmul.f32	s16, s15, s16
 1049              	.LVL154:
 1050 04a2 9DED017A 		vldr.32	s14, [sp, #4]
 1051 04a6 37EE487A 		vsub.f32	s14, s14, s16
 1052 04aa 8DED017A 		vstr.32	s14, [sp, #4]
 1053              	.LVL155:
 148:Core/Src/devs/imu.cpp **** 		}
 1054              		.loc 1 148 0
 1055 04ae 67EEAA7A 		vmul.f32	s15, s15, s21
 1056 04b2 9DED027A 		vldr.32	s14, [sp, #8]
 1057              	.LVL156:
 1058 04b6 77EE677A 		vsub.f32	s15, s14, s15
 1059 04ba CDED027A 		vstr.32	s15, [sp, #8]
 1060              	.LVL157:
 1061              	.L24:
 152:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q1 += qDot2 * AHRSIMU->_sampleRate;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 33


 1062              		.loc 1 152 0
 1063 04be D4ED097A 		vldr.32	s15, [r4, #36]
 1064 04c2 67EEA88A 		vmul.f32	s17, s15, s17
 1065              	.LVL158:
 1066 04c6 94ED050A 		vldr.32	s0, [r4, #20]
 1067 04ca 78EE808A 		vadd.f32	s17, s17, s0
 1068 04ce C4ED058A 		vstr.32	s17, [r4, #20]
 153:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q2 += qDot3 * AHRSIMU->_sampleRate;
 1069              		.loc 1 153 0
 1070 04d2 67EEA99A 		vmul.f32	s19, s15, s19
 1071              	.LVL159:
 1072 04d6 94ED060A 		vldr.32	s0, [r4, #24]
 1073 04da 79EE809A 		vadd.f32	s19, s19, s0
 1074 04de C4ED069A 		vstr.32	s19, [r4, #24]
 154:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q3 += qDot4 * AHRSIMU->_sampleRate;
 1075              		.loc 1 154 0
 1076 04e2 9DED017A 		vldr.32	s14, [sp, #4]
 1077 04e6 27EE877A 		vmul.f32	s14, s15, s14
 1078 04ea 94ED070A 		vldr.32	s0, [r4, #28]
 1079 04ee 37EE007A 		vadd.f32	s14, s14, s0
 1080 04f2 84ED077A 		vstr.32	s14, [r4, #28]
 155:Core/Src/devs/imu.cpp **** 
 1081              		.loc 1 155 0
 1082 04f6 DDED026A 		vldr.32	s13, [sp, #8]
 1083 04fa 67EEA67A 		vmul.f32	s15, s15, s13
 1084 04fe 94ED080A 		vldr.32	s0, [r4, #32]
 1085 0502 37EE800A 		vadd.f32	s0, s15, s0
 1086 0506 84ED080A 		vstr.32	s0, [r4, #32]
 158:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q0 *= recipNorm;
 1087              		.loc 1 158 0
 1088 050a 68EEA88A 		vmul.f32	s17, s17, s17
 1089 050e 69EEA99A 		vmul.f32	s19, s19, s19
 1090 0512 78EEA98A 		vadd.f32	s17, s17, s19
 1091 0516 27EE077A 		vmul.f32	s14, s14, s14
 1092 051a 78EE878A 		vadd.f32	s17, s17, s14
 1093 051e 20EE000A 		vmul.f32	s0, s0, s0
 1094 0522 38EE800A 		vadd.f32	s0, s17, s0
 1095 0526 FFF7FEFF 		bl	_ZL11oneOverSqrtf
 1096              	.LVL160:
 159:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q1 *= recipNorm;
 1097              		.loc 1 159 0
 1098 052a D4ED057A 		vldr.32	s15, [r4, #20]
 1099 052e 67EE807A 		vmul.f32	s15, s15, s0
 1100 0532 C4ED057A 		vstr.32	s15, [r4, #20]
 160:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q2 *= recipNorm;
 1101              		.loc 1 160 0
 1102 0536 D4ED067A 		vldr.32	s15, [r4, #24]
 1103 053a 67EE807A 		vmul.f32	s15, s15, s0
 1104 053e C4ED067A 		vstr.32	s15, [r4, #24]
 161:Core/Src/devs/imu.cpp **** 		AHRSIMU->_q3 *= recipNorm;
 1105              		.loc 1 161 0
 1106 0542 D4ED077A 		vldr.32	s15, [r4, #28]
 1107 0546 67EE807A 		vmul.f32	s15, s15, s0
 1108 054a C4ED077A 		vstr.32	s15, [r4, #28]
 162:Core/Src/devs/imu.cpp **** 	}
 1109              		.loc 1 162 0
 1110 054e D4ED087A 		vldr.32	s15, [r4, #32]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 34


 1111 0552 27EE800A 		vmul.f32	s0, s15, s0
 1112              	.LVL161:
 1113 0556 84ED080A 		vstr.32	s0, [r4, #32]
 1114              	.LVL162:
 1115              	.L25:
 171:Core/Src/devs/imu.cpp **** }
 1116              		.loc 1 171 0
 1117 055a 2046     		mov	r0, r4
 1118 055c FFF7FEFF 		bl	_ZL15calculateAnglesP13_TM_AHRSIMU_t
 1119              	.LVL163:
 172:Core/Src/devs/imu.cpp **** 
 1120              		.loc 1 172 0
 1121 0560 0EB0     		add	sp, sp, #56
 1122              	.LCFI10:
 1123              		.cfi_remember_state
 1124              		.cfi_def_cfa_offset 72
 1125              		@ sp needed
 1126 0562 BDEC108B 		vldm	sp!, {d8-d15}
 1127              	.LCFI11:
 1128              		.cfi_restore 94
 1129              		.cfi_restore 95
 1130              		.cfi_restore 92
 1131              		.cfi_restore 93
 1132              		.cfi_restore 90
 1133              		.cfi_restore 91
 1134              		.cfi_restore 88
 1135              		.cfi_restore 89
 1136              		.cfi_restore 86
 1137              		.cfi_restore 87
 1138              		.cfi_restore 84
 1139              		.cfi_restore 85
 1140              		.cfi_restore 82
 1141              		.cfi_restore 83
 1142              		.cfi_restore 80
 1143              		.cfi_restore 81
 1144              		.cfi_def_cfa_offset 8
 1145 0566 10BD     		pop	{r4, pc}
 1146              	.LVL164:
 1147              	.L22:
 1148              	.LCFI12:
 1149              		.cfi_restore_state
 167:Core/Src/devs/imu.cpp **** 	}
 1150              		.loc 1 167 0
 1151 0568 FFF7FEFF 		bl	TM_AHRSIMU_UpdateIMU
 1152              	.LVL165:
 1153 056c F5E7     		b	.L25
 1154              		.cfi_endproc
 1155              	.LFE227:
 1157              		.text
 1158              	.Letext0:
 1159              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1160              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1161              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1162              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1163              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1164              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1165              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 35


 1166              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1167              		.file 11 "Core/Inc/devs/imu.h"
 1168              		.file 12 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 imu.cpp
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:18     .text._ZL11oneOverSqrtf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:24     .text._ZL11oneOverSqrtf:00000000 _ZL11oneOverSqrtf
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:54     .text._ZL15calculateAnglesP13_TM_AHRSIMU_t:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:60     .text._ZL15calculateAnglesP13_TM_AHRSIMU_t:00000000 _ZL15calculateAnglesP13_TM_AHRSIMU_t
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:195    .text._ZL15calculateAnglesP13_TM_AHRSIMU_t:0000010c $d
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:202    .text.TM_AHRSIMU_Init:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:209    .text.TM_AHRSIMU_Init:00000000 TM_AHRSIMU_Init
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:241    .text.TM_AHRSIMU_UpdateIMU:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:248    .text.TM_AHRSIMU_UpdateIMU:00000000 TM_AHRSIMU_UpdateIMU
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:573    .text.TM_AHRSIMU_UpdateAHRS:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccqKOfT1.s:580    .text.TM_AHRSIMU_UpdateAHRS:00000000 TM_AHRSIMU_UpdateAHRS

UNDEFINED SYMBOLS
sqrtf
atan2f
asinf
