ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_init.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN12Discrete_PIDD2Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN12Discrete_PIDD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN12Discrete_PIDD2Ev:
  26              	.LFB396:
  27              		.file 1 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 2


  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 59 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE396:
  39              		.weak	_ZN12Discrete_PIDD1Ev
  40              		.thumb_set _ZN12Discrete_PIDD1Ev,_ZN12Discrete_PIDD2Ev
  41              		.section	.text._ZN12Discrete_PID7computeEfm,"axG",%progbits,_ZN12Discrete_PID7computeEfm,comdat
  42              		.align	1
  43              		.weak	_ZN12Discrete_PID7computeEfm
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZN12Discrete_PID7computeEfm:
  50              	.LFB399:
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 3


  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  51              		.loc 1 75 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL1:
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  57              		.loc 1 77 0
  58 0000 07EE901A 		vmov	s15, r1	@ int
  59 0004 F8EE676A 		vcvt.f32.u32	s13, s15
  60 0008 DFED217A 		vldr.32	s15, .L11
  61 000c 86EEA77A 		vdiv.f32	s14, s13, s15
  62              	.LVL2:
  63              	.LBB322:
  64              	.LBB323:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  65              		.loc 1 20 0
  66 0010 90ED016A 		vldr.32	s12, [r0, #4]
  67              	.LVL3:
  68              	.LBE323:
  69              	.LBE322:
  70              	.LBB324:
  71              	.LBB325:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  72              		.loc 1 21 0
  73 0014 D0ED025A 		vldr.32	s11, [r0, #8]
  74              	.LVL4:
  75              	.LBE325:
  76              	.LBE324:
  77              	.LBB326:
  78              	.LBB327:
  22:Core/Inc/utils/pid_algorithms.h **** 
  79              		.loc 1 22 0
  80 0018 D0ED037A 		vldr.32	s15, [r0, #12]
  81              	.LVL5:
  82              	.LBE327:
  83              	.LBE326:
  78:Core/Inc/utils/pid_algorithms.h **** 
  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
  84              		.loc 1 81 0
  85 001c C7EE876A 		vdiv.f32	s13, s15, s14
  86              	.LVL6:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
  87              		.loc 1 83 0
  88 0020 76EE867A 		vadd.f32	s15, s13, s12
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 4


  89              	.LVL7:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
  90              		.loc 1 84 0
  91 0024 27EE257A 		vmul.f32	s14, s14, s11
  92              	.LVL8:
  93 0028 37EE467A 		vsub.f32	s14, s14, s12
  94 002c 36EEA66A 		vadd.f32	s12, s13, s13
  95 0030 37EE467A 		vsub.f32	s14, s14, s12
  96              	.LVL9:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
  97              		.loc 1 87 0
  98 0034 67EE807A 		vmul.f32	s15, s15, s0
  99              	.LVL10:
 100 0038 90ED076A 		vldr.32	s12, [r0, #28]
 101 003c 26EE077A 		vmul.f32	s14, s12, s14
 102              	.LVL11:
 103 0040 77EE877A 		vadd.f32	s15, s15, s14
 104 0044 90ED087A 		vldr.32	s14, [r0, #32]
 105 0048 67EE266A 		vmul.f32	s13, s14, s13
 106              	.LVL12:
 107 004c 77EEA67A 		vadd.f32	s15, s15, s13
 108 0050 90ED067A 		vldr.32	s14, [r0, #24]
 109 0054 77EE877A 		vadd.f32	s15, s15, s14
 110 0058 C0ED067A 		vstr.32	s15, [r0, #24]
 111              	.LVL13:
 112              	.LBB328:
 113              	.LBB329:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 114              		.loc 1 30 0
 115 005c 90ED047A 		vldr.32	s14, [r0, #16]
 116              	.LVL14:
 117              	.LBE329:
 118              	.LBE328:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 119              		.loc 1 89 0
 120 0060 F4EEC77A 		vcmpe.f32	s15, s14
 121 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 122 0068 09DC     		bgt	.L10
 123              	.LVL15:
 124              	.LBB330:
 125              	.LBB331:
  31:Core/Inc/utils/pid_algorithms.h **** 
 126              		.loc 1 31 0
 127 006a 90ED057A 		vldr.32	s14, [r0, #20]
 128              	.LVL16:
 129              	.LBE331:
 130              	.LBE330:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 131              		.loc 1 93 0
 132 006e F4EEC77A 		vcmpe.f32	s15, s14
 133 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 5


 134 0076 04D5     		bpl	.L5
  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 135              		.loc 1 95 0
 136 0078 80ED067A 		vstr.32	s14, [r0, #24]
 137 007c 01E0     		b	.L5
 138              	.L10:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 139              		.loc 1 91 0
 140 007e 80ED067A 		vstr.32	s14, [r0, #24]
 141              	.L5:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 142              		.loc 1 98 0
 143 0082 80ED086A 		vstr.32	s12, [r0, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 144              		.loc 1 99 0
 145 0086 80ED070A 		vstr.32	s0, [r0, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 102:Core/Inc/utils/pid_algorithms.h ****         }
 146              		.loc 1 102 0
 147 008a 90ED060A 		vldr.32	s0, [r0, #24]
 148              	.LVL17:
 149 008e 7047     		bx	lr
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 0090 00007A44 		.word	1148846080
 154              		.cfi_endproc
 155              	.LFE399:
 157              		.section	.text._ZN9Angle_PIDD2Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 158              		.align	1
 159              		.weak	_ZN9Angle_PIDD2Ev
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	_ZN9Angle_PIDD2Ev:
 166              	.LFB419:
 103:Core/Inc/utils/pid_algorithms.h **** 
 104:Core/Inc/utils/pid_algorithms.h ****       private:
 105:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 106:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 107:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 108:Core/Inc/utils/pid_algorithms.h **** };
 109:Core/Inc/utils/pid_algorithms.h **** 
 110:Core/Inc/utils/pid_algorithms.h **** class FilteredDiscrete_PID : public PID_Algorithm
 111:Core/Inc/utils/pid_algorithms.h **** {
 112:Core/Inc/utils/pid_algorithms.h ****       public:
 113:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(float p, float i, float d, float N = 0) : PID_Algorithm(p, i, d)
 114:Core/Inc/utils/pid_algorithms.h ****         {
 115:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 116:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 117:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 118:Core/Inc/utils/pid_algorithms.h ****                 set_N(N);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 6


 119:Core/Inc/utils/pid_algorithms.h ****         }
 120:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID()
 121:Core/Inc/utils/pid_algorithms.h ****         {
 122:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 123:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 124:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 125:Core/Inc/utils/pid_algorithms.h ****                 set_N(0);
 126:Core/Inc/utils/pid_algorithms.h ****         }
 127:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(FilteredDiscrete_PID &&) = default;
 128:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(const FilteredDiscrete_PID &) = default;
 129:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(FilteredDiscrete_PID &&) = default;
 130:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(const FilteredDiscrete_PID &) = default;
 131:Core/Inc/utils/pid_algorithms.h ****         ~FilteredDiscrete_PID() {}
 132:Core/Inc/utils/pid_algorithms.h **** 
 133:Core/Inc/utils/pid_algorithms.h ****         void set_N(float N) { N_ = N; }
 134:Core/Inc/utils/pid_algorithms.h **** 
 135:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 136:Core/Inc/utils/pid_algorithms.h ****          * 1) Filtered Discrete PID control Algorithm
 137:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
 138:Core/Inc/utils/pid_algorithms.h ****          * 3) Filtered Derivative used
 139:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
 140:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
 141:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*N*(z-1)/{(z -1) + N*Ts}
 142:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
 143:Core/Inc/utils/pid_algorithms.h ****          *      y(t) = (1 + a)*y(t-1) - a*y(t-2) + alpha*x(t) + beta*x(t-1) + gamma*x(t-2)
 144:Core/Inc/utils/pid_algorithms.h ****          *      where,
 145:Core/Inc/utils/pid_algorithms.h ****          *              a = 1 - N_*Ts
 146:Core/Inc/utils/pid_algorithms.h ****          *              alpha = P + D*N
 147:Core/Inc/utils/pid_algorithms.h ****          *              beta = -(1 + a)*P + I*Ts - 2*D*N
 148:Core/Inc/utils/pid_algorithms.h ****          *              gamma = a*P - a*I*Ts + D*N
 149:Core/Inc/utils/pid_algorithms.h ****          */
 150:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 151:Core/Inc/utils/pid_algorithms.h ****         {
 152:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
 153:Core/Inc/utils/pid_algorithms.h **** 
 154:Core/Inc/utils/pid_algorithms.h ****                 float a, alpha, beta, gamma;
 155:Core/Inc/utils/pid_algorithms.h ****                 float output;
 156:Core/Inc/utils/pid_algorithms.h **** 
 157:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 158:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 159:Core/Inc/utils/pid_algorithms.h ****                 float D = get_D();
 160:Core/Inc/utils/pid_algorithms.h **** 
 161:Core/Inc/utils/pid_algorithms.h ****                 a = 1 - N_ * Ts;
 162:Core/Inc/utils/pid_algorithms.h ****                 alpha = P + D * N_;
 163:Core/Inc/utils/pid_algorithms.h ****                 beta = -(1 + a) * P + I * Ts - 2 * D * N_;
 164:Core/Inc/utils/pid_algorithms.h ****                 gamma = a * P - a * I * Ts + D * N_;
 165:Core/Inc/utils/pid_algorithms.h **** 
 166:Core/Inc/utils/pid_algorithms.h ****                 output = (1 + a) * l_output_ - a * ll_output_ + alpha * error + beta * l_err_ + gam
 167:Core/Inc/utils/pid_algorithms.h **** 
 168:Core/Inc/utils/pid_algorithms.h ****                 ll_output_ = l_output_;
 169:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = output;
 170:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 171:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 172:Core/Inc/utils/pid_algorithms.h **** 
 173:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 174:Core/Inc/utils/pid_algorithms.h ****                 {
 175:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 7


 176:Core/Inc/utils/pid_algorithms.h ****                 }
 177:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 178:Core/Inc/utils/pid_algorithms.h ****                 {
 179:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 180:Core/Inc/utils/pid_algorithms.h ****                 }
 181:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 182:Core/Inc/utils/pid_algorithms.h ****         }
 183:Core/Inc/utils/pid_algorithms.h **** 
 184:Core/Inc/utils/pid_algorithms.h ****       private:
 185:Core/Inc/utils/pid_algorithms.h ****         float N_;
 186:Core/Inc/utils/pid_algorithms.h **** 
 187:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 188:Core/Inc/utils/pid_algorithms.h ****         float ll_output_;
 189:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 190:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 191:Core/Inc/utils/pid_algorithms.h **** };
 192:Core/Inc/utils/pid_algorithms.h **** 
 193:Core/Inc/utils/pid_algorithms.h **** class Angle_PID : public PID_Algorithm
 194:Core/Inc/utils/pid_algorithms.h **** {
 195:Core/Inc/utils/pid_algorithms.h ****       public:
 196:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
 197:Core/Inc/utils/pid_algorithms.h ****         {
 198:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 199:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 200:Core/Inc/utils/pid_algorithms.h ****         }
 201:Core/Inc/utils/pid_algorithms.h **** 
 202:Core/Inc/utils/pid_algorithms.h ****         Angle_PID()
 203:Core/Inc/utils/pid_algorithms.h ****         {
 204:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 205:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 206:Core/Inc/utils/pid_algorithms.h ****         }
 207:Core/Inc/utils/pid_algorithms.h **** 
 208:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(Angle_PID &&) = default;
 209:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(const Angle_PID &) = default;
 210:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(Angle_PID &&) = default;
 211:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(const Angle_PID &) = default;
 212:Core/Inc/utils/pid_algorithms.h ****         ~Angle_PID() { }
 167              		.loc 1 212 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL18:
 173              		.loc 1 212 0
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE419:
 178              		.weak	_ZN9Angle_PIDD1Ev
 179              		.thumb_set _ZN9Angle_PIDD1Ev,_ZN9Angle_PIDD2Ev
 180              		.section	.text._ZN9Angle_PID7computeEfm,"axG",%progbits,_ZN9Angle_PID7computeEfm,comdat
 181              		.align	1
 182              		.weak	_ZN9Angle_PID7computeEfm
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	_ZN9Angle_PID7computeEfm:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 8


 189              	.LFB422:
 213:Core/Inc/utils/pid_algorithms.h **** 
 214:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 215:Core/Inc/utils/pid_algorithms.h ****                 * 1) Angle PID control Algorithm
 216:Core/Inc/utils/pid_algorithms.h ****                 * 2) Use of Proportional Controller Only 
 217:Core/Inc/utils/pid_algorithms.h ****                 * 3) Output Limited
 218:Core/Inc/utils/pid_algorithms.h ****                 * 4) Compensator formula in Time Domain: 
 219:Core/Inc/utils/pid_algorithms.h ****                 *              y(t) = P * {(x(t) - x(t-1))/Ts}
 220:Core/Inc/utils/pid_algorithms.h ****                 */
 221:Core/Inc/utils/pid_algorithms.h **** 
 222:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 190              		.loc 1 222 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LVL19:
 196              	.LBB332:
 197              	.LBB333:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 198              		.loc 1 20 0
 199 0000 D0ED016A 		vldr.32	s13, [r0, #4]
 200              	.LVL20:
 201              	.LBE333:
 202              	.LBE332:
 203              	.LBB334:
 204              	.LBB335:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 205              		.loc 1 21 0
 206 0004 90ED027A 		vldr.32	s14, [r0, #8]
 207              	.LVL21:
 208              	.LBE335:
 209              	.LBE334:
 223:Core/Inc/utils/pid_algorithms.h ****         {
 224:Core/Inc/utils/pid_algorithms.h ****                 // float Ts = (float)dt_millis / 1000.0;
 225:Core/Inc/utils/pid_algorithms.h **** 
 226:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 227:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 228:Core/Inc/utils/pid_algorithms.h **** 
 229:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ += error;
 210              		.loc 1 229 0
 211 0008 D0ED077A 		vldr.32	s15, [r0, #28]
 212 000c 70EE277A 		vadd.f32	s15, s0, s15
 213 0010 C0ED077A 		vstr.32	s15, [r0, #28]
 230:Core/Inc/utils/pid_algorithms.h ****                 float i_term = I * err_sum_;
 214              		.loc 1 230 0
 215 0014 67EE877A 		vmul.f32	s15, s15, s14
 216              	.LVL22:
 217              	.LBB336:
 218              	.LBB337:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 219              		.loc 1 30 0
 220 0018 90ED047A 		vldr.32	s14, [r0, #16]
 221              	.LVL23:
 222              	.LBE337:
 223              	.LBE336:
 231:Core/Inc/utils/pid_algorithms.h ****                 // Clamping Integral Term
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 9


 232:Core/Inc/utils/pid_algorithms.h ****                 if (i_term > get_Upper()) {
 224              		.loc 1 232 0
 225 001c F4EEC77A 		vcmpe.f32	s15, s14
 226 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 227 0024 18DD     		ble	.L27
 228              	.LVL24:
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 234:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 229              		.loc 1 234 0
 230 0026 0023     		movs	r3, #0
 231 0028 C361     		str	r3, [r0, #28]	@ float
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 232              		.loc 1 233 0
 233 002a F0EE477A 		vmov.f32	s15, s14
 234              	.L17:
 235              	.LVL25:
 235:Core/Inc/utils/pid_algorithms.h ****                 }
 236:Core/Inc/utils/pid_algorithms.h ****                 else if (i_term < get_Lower()) {
 237:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 238:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 239:Core/Inc/utils/pid_algorithms.h ****                 }
 240:Core/Inc/utils/pid_algorithms.h **** 
 241:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = P * error + i_term;
 236              		.loc 1 241 0
 237 002e 20EE260A 		vmul.f32	s0, s0, s13
 238              	.LVL26:
 239 0032 70EE277A 		vadd.f32	s15, s0, s15
 240              	.LVL27:
 241 0036 C0ED067A 		vstr.32	s15, [r0, #24]
 242:Core/Inc/utils/pid_algorithms.h **** 
 243:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 242              		.loc 1 243 0
 243 003a F4EEC77A 		vcmpe.f32	s15, s14
 244 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 245 0042 15DC     		bgt	.L29
 246              	.LVL28:
 247              	.LBB338:
 248              	.LBB339:
  31:Core/Inc/utils/pid_algorithms.h **** 
 249              		.loc 1 31 0
 250 0044 90ED057A 		vldr.32	s14, [r0, #20]
 251              	.LVL29:
 252              	.LBE339:
 253              	.LBE338:
 244:Core/Inc/utils/pid_algorithms.h ****                 {
 245:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
 246:Core/Inc/utils/pid_algorithms.h ****                 }
 247:Core/Inc/utils/pid_algorithms.h **** 
 248:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 254              		.loc 1 248 0
 255 0048 F4EEC77A 		vcmpe.f32	s15, s14
 256 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 257 0050 10D5     		bpl	.L21
 249:Core/Inc/utils/pid_algorithms.h ****                 {
 250:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 258              		.loc 1 250 0
 259 0052 80ED067A 		vstr.32	s14, [r0, #24]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 10


 260 0056 0DE0     		b	.L21
 261              	.LVL30:
 262              	.L27:
 263              	.LBB340:
 264              	.LBB341:
  31:Core/Inc/utils/pid_algorithms.h **** 
 265              		.loc 1 31 0
 266 0058 90ED056A 		vldr.32	s12, [r0, #20]
 267              	.LVL31:
 268              	.LBE341:
 269              	.LBE340:
 236:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 270              		.loc 1 236 0
 271 005c F4EEC67A 		vcmpe.f32	s15, s12
 272 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 273 0064 E3D5     		bpl	.L17
 274              	.LVL32:
 238:Core/Inc/utils/pid_algorithms.h ****                 }
 275              		.loc 1 238 0
 276 0066 0023     		movs	r3, #0
 277 0068 C361     		str	r3, [r0, #28]	@ float
 237:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 278              		.loc 1 237 0
 279 006a F0EE467A 		vmov.f32	s15, s12
 280 006e DEE7     		b	.L17
 281              	.LVL33:
 282              	.L29:
 245:Core/Inc/utils/pid_algorithms.h ****                 }
 283              		.loc 1 245 0
 284 0070 80ED067A 		vstr.32	s14, [r0, #24]
 285              	.L21:
 251:Core/Inc/utils/pid_algorithms.h ****                 }
 252:Core/Inc/utils/pid_algorithms.h **** 
 253:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 254:Core/Inc/utils/pid_algorithms.h ****         }
 286              		.loc 1 254 0
 287 0074 90ED060A 		vldr.32	s0, [r0, #24]
 288 0078 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE422:
 292              		.section	.text._ZN8steeringD2Ev,"axG",%progbits,_ZN8steeringD5Ev,comdat
 293              		.align	1
 294              		.weak	_ZN8steeringD2Ev
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	_ZN8steeringD2Ev:
 301              	.LFB455:
 302              		.file 2 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 11


   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
 303              		.loc 2 33 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL34:
 309              		.loc 2 33 0
 310 0000 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE455:
 314              		.weak	_ZN8steeringD1Ev
 315              		.thumb_set _ZN8steeringD1Ev,_ZN8steeringD2Ev
 316              		.section	.text._ZL8leg_initv,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	_ZL8leg_initv:
 324              	.LFB493:
 325              		.file 3 "Core/Src/robot/robo_init.cpp"
   1:Core/Src/robot/robo_init.cpp **** #include "robo_init.h"
   2:Core/Src/robot/robo_init.cpp **** 
   3:Core/Src/robot/robo_init.cpp **** leg leg[2];
   4:Core/Src/robot/robo_init.cpp **** steering steering;
   5:Core/Src/robot/robo_init.cpp **** 
   6:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
   7:Core/Src/robot/robo_init.cpp **** static  encoder_config encoder_configurations[3];
   8:Core/Src/robot/robo_init.cpp **** 
   9:Core/Src/robot/robo_init.cpp **** 
  10:Core/Src/robot/robo_init.cpp **** static void motor_init();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 12


  11:Core/Src/robot/robo_init.cpp **** static void encoder_init();
  12:Core/Src/robot/robo_init.cpp **** static void pid_init();
  13:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(); 
  14:Core/Src/robot/robo_init.cpp **** static void leg_init();
  15:Core/Src/robot/robo_init.cpp **** static void steering_init();
  16:Core/Src/robot/robo_init.cpp **** 
  17:Core/Src/robot/robo_init.cpp **** void robo_init(){ 
  18:Core/Src/robot/robo_init.cpp **** 	motor_init();
  19:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
  20:Core/Src/robot/robo_init.cpp **** 	pid_init();
  21:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
  22:Core/Src/robot/robo_init.cpp **** 	leg_init();
  23:Core/Src/robot/robo_init.cpp **** 	steering_init();
  24:Core/Src/robot/robo_init.cpp **** }
  25:Core/Src/robot/robo_init.cpp **** 
  26:Core/Src/robot/robo_init.cpp **** void leg_init(){
 326              		.loc 3 26 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331              	.LVL35:
 332              	.LBB342:
 333              	.LBB343:
 334              	.LBB344:
 335              		.file 4 "Core/Inc/devs/motor.h"
   1:Core/Inc/devs/motor.h **** #ifndef _MOTOR_H_
   2:Core/Inc/devs/motor.h **** #define _MOTOR_H_
   3:Core/Inc/devs/motor.h **** 
   4:Core/Inc/devs/motor.h **** #include "stm32f4xx_hal.h"
   5:Core/Inc/devs/motor.h **** #include "tim.h"
   6:Core/Inc/devs/motor.h **** #include <math.h>
   7:Core/Inc/devs/motor.h **** 
   8:Core/Inc/devs/motor.h **** enum Direction{
   9:Core/Inc/devs/motor.h **** 	CLOCKWISE,
  10:Core/Inc/devs/motor.h **** 	ANTICLOCKWISE,
  11:Core/Inc/devs/motor.h **** 	STOP
  12:Core/Inc/devs/motor.h **** };
  13:Core/Inc/devs/motor.h **** 
  14:Core/Inc/devs/motor.h **** struct motor_config{
  15:Core/Inc/devs/motor.h **** 	float max_omega;
  16:Core/Inc/devs/motor.h **** 	float tolerance;
  17:Core/Inc/devs/motor.h **** 
  18:Core/Inc/devs/motor.h **** 	GPIO_TypeDef *in1_port;	
  19:Core/Inc/devs/motor.h ****         uint16_t in1_pin;
  20:Core/Inc/devs/motor.h ****         GPIO_TypeDef *in2_port;
  21:Core/Inc/devs/motor.h ****         uint16_t in2_pin;
  22:Core/Inc/devs/motor.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  23:Core/Inc/devs/motor.h ****         uint32_t channel;               // PWM Channel
  24:Core/Inc/devs/motor.h **** };
  25:Core/Inc/devs/motor.h **** 
  26:Core/Inc/devs/motor.h **** class motor
  27:Core/Inc/devs/motor.h **** {
  28:Core/Inc/devs/motor.h **** public:
  29:Core/Inc/devs/motor.h **** 	motor(){motor_ = 0;}
  30:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
  31:Core/Inc/devs/motor.h **** 	motor(motor &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 13


  32:Core/Inc/devs/motor.h **** 	motor(const motor &) = default;
  33:Core/Inc/devs/motor.h **** 	motor &operator=(motor &&) = default;
  34:Core/Inc/devs/motor.h **** 	motor &operator=(const motor &) = default;
  35:Core/Inc/devs/motor.h **** 	~motor(){}
  36:Core/Inc/devs/motor.h ****         void set_config(motor_config *motor) { motor_ = motor;}
 336              		.loc 4 36 0
 337 0000 094B     		ldr	r3, .L32
 338 0002 0A49     		ldr	r1, .L32+4
 339 0004 9963     		str	r1, [r3, #56]
 340              	.LVL36:
 341              	.LBE344:
 342              	.LBE343:
 343              	.LBB345:
 344              	.LBB346:
 345              		.file 5 "Core/Inc/devs/encoder.h"
   1:Core/Inc/devs/encoder.h **** #ifndef _ENCODER_H_
   2:Core/Inc/devs/encoder.h **** #define _ENCODER_H_
   3:Core/Inc/devs/encoder.h **** 
   4:Core/Inc/devs/encoder.h **** #include "defines.h"
   5:Core/Inc/devs/encoder.h **** #include "stm32f4xx_hal.h"
   6:Core/Inc/devs/encoder.h **** #include "tim.h"
   7:Core/Inc/devs/encoder.h **** #include "math.h"
   8:Core/Inc/devs/encoder.h **** 
   9:Core/Inc/devs/encoder.h **** 
  10:Core/Inc/devs/encoder.h **** struct encoder_config{
  11:Core/Inc/devs/encoder.h **** 	TIM_HandleTypeDef *henc;
  12:Core/Inc/devs/encoder.h **** 	uint16_t ppr;
  13:Core/Inc/devs/encoder.h **** };
  14:Core/Inc/devs/encoder.h **** 
  15:Core/Inc/devs/encoder.h **** class encoder
  16:Core/Inc/devs/encoder.h **** {
  17:Core/Inc/devs/encoder.h **** public:
  18:Core/Inc/devs/encoder.h **** 	encoder(){encoder_ = 0;}
  19:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
  20:Core/Inc/devs/encoder.h **** 	encoder(encoder &&) = default;
  21:Core/Inc/devs/encoder.h **** 	encoder(const encoder &) = default;
  22:Core/Inc/devs/encoder.h **** 	encoder &operator=(encoder &&) = default;
  23:Core/Inc/devs/encoder.h **** 	encoder &operator=(const encoder &) = default;
  24:Core/Inc/devs/encoder.h **** 	~encoder(){}
  25:Core/Inc/devs/encoder.h ****         void set_config(encoder_config *encoder) { encoder_ = encoder; }
 346              		.loc 5 25 0
 347 0006 0A4A     		ldr	r2, .L32+8
 348 0008 DA63     		str	r2, [r3, #60]
 349              	.LVL37:
 350              	.LBE346:
 351              	.LBE345:
 352              	.LBE342:
 353              	.LBB347:
 354              	.LBB348:
 355              	.LBB349:
 356              		.loc 4 36 0
 357 000a 2031     		adds	r1, r1, #32
 358 000c C3F89410 		str	r1, [r3, #148]
 359              	.LVL38:
 360              	.LBE349:
 361              	.LBE348:
 362              	.LBB350:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 14


 363              	.LBB351:
 364              		.loc 5 25 0
 365 0010 0832     		adds	r2, r2, #8
 366 0012 C3F89820 		str	r2, [r3, #152]
 367              	.LVL39:
 368              	.LBE351:
 369              	.LBE350:
 370              	.LBE347:
 371              	.LBB352:
 372              	.LBB353:
 373              		.file 6 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kbody, float kleg){kb_ = kbody; kl_ = kleg;}
 374              		.loc 6 38 0
 375 0016 4FF07A52 		mov	r2, #1048576000
 376 001a 5A65     		str	r2, [r3, #84]	@ float
 377 001c 9A65     		str	r2, [r3, #88]	@ float
 378              	.LVL40:
 379              	.LBE353:
 380              	.LBE352:
 381              	.LBB354:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 15


 382              	.LBB355:
 383 001e C3F8B020 		str	r2, [r3, #176]	@ float
 384 0022 C3F8B420 		str	r2, [r3, #180]	@ float
 385              	.LVL41:
 386              	.LBE355:
 387              	.LBE354:
  27:Core/Src/robot/robo_init.cpp **** 	leg[0].set_config(&motor_configurations[0], &encoder_configurations[0]);
  28:Core/Src/robot/robo_init.cpp **** 	leg[1].set_config(&motor_configurations[1], &encoder_configurations[1]);
  29:Core/Src/robot/robo_init.cpp **** 	leg[0].set_gravity_compensator_constant(0.25, 0.25);
  30:Core/Src/robot/robo_init.cpp **** 	leg[1].set_gravity_compensator_constant(0.25, 0.25);
  31:Core/Src/robot/robo_init.cpp **** 
  32:Core/Src/robot/robo_init.cpp **** }	
 388              		.loc 3 32 0
 389 0026 7047     		bx	lr
 390              	.L33:
 391              		.align	2
 392              	.L32:
 393 0028 00000000 		.word	.LANCHOR0
 394 002c 00000000 		.word	.LANCHOR1
 395 0030 00000000 		.word	.LANCHOR2
 396              		.cfi_endproc
 397              	.LFE493:
 399              		.section	.text._ZL13steering_initv,"ax",%progbits
 400              		.align	1
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv4-sp-d16
 406              	_ZL13steering_initv:
 407              	.LFB494:
  33:Core/Src/robot/robo_init.cpp **** 
  34:Core/Src/robot/robo_init.cpp **** void steering_init(){
 408              		.loc 3 34 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LVL42:
 414              	.LBB356:
 415              	.LBB357:
 416              	.LBB358:
 417              		.loc 4 36 0
 418 0000 024B     		ldr	r3, .L35
 419 0002 034A     		ldr	r2, .L35+4
 420 0004 9A60     		str	r2, [r3, #8]
 421              	.LVL43:
 422              	.LBE358:
 423              	.LBE357:
 424              	.LBB359:
 425              	.LBB360:
 426              		.loc 5 25 0
 427 0006 034A     		ldr	r2, .L35+8
 428 0008 DA60     		str	r2, [r3, #12]
 429              	.LVL44:
 430              	.LBE360:
 431              	.LBE359:
 432              	.LBE356:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 16


  35:Core/Src/robot/robo_init.cpp **** 	steering.set_config(&motor_configurations[2], &encoder_configurations[2]);
  36:Core/Src/robot/robo_init.cpp **** }
 433              		.loc 3 36 0
 434 000a 7047     		bx	lr
 435              	.L36:
 436              		.align	2
 437              	.L35:
 438 000c 00000000 		.word	.LANCHOR3
 439 0010 40000000 		.word	.LANCHOR1+64
 440 0014 10000000 		.word	.LANCHOR2+16
 441              		.cfi_endproc
 442              	.LFE494:
 444              		.section	.text._ZL8pid_initv,"ax",%progbits
 445              		.align	1
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	_ZL8pid_initv:
 452              	.LFB495:
  37:Core/Src/robot/robo_init.cpp **** 
  38:Core/Src/robot/robo_init.cpp **** static void pid_init(){
 453              		.loc 3 38 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458 0000 30B4     		push	{r4, r5}
 459              	.LCFI0:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 5, -4
 463              	.LVL45:
 464              	.LBB361:
 465              	.LBB362:
 466              	.LBB363:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 467              		.loc 1 11 0
 468 0002 134B     		ldr	r3, .L39
 469 0004 4FF08041 		mov	r1, #1073741824
 470 0008 9961     		str	r1, [r3, #24]	@ float
 471              	.LVL46:
 472              	.LBE363:
 473              	.LBE362:
 474              	.LBB364:
 475              	.LBB365:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 476              		.loc 1 12 0
 477 000a 124D     		ldr	r5, .L39+4
 478 000c DD61     		str	r5, [r3, #28]	@ float
 479              	.LVL47:
 480              	.LBE365:
 481              	.LBE364:
 482              	.LBB366:
 483              	.LBB367:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 484              		.loc 1 13 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 17


 485 000e 0022     		movs	r2, #0
 486 0010 1A62     		str	r2, [r3, #32]	@ float
 487              	.LVL48:
 488              	.LBE367:
 489              	.LBE366:
 490              	.LBB368:
 491              	.LBB369:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 492              		.loc 1 26 0
 493 0012 114C     		ldr	r4, .L39+8
 494 0014 5C62     		str	r4, [r3, #36]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 495              		.loc 1 27 0
 496 0016 1148     		ldr	r0, .L39+12
 497 0018 9862     		str	r0, [r3, #40]	@ float
 498              	.LVL49:
 499              	.LBE369:
 500              	.LBE368:
 501              	.LBE361:
 502              	.LBB370:
 503              	.LBB371:
 504              	.LBB372:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 505              		.loc 1 11 0
 506 001a 5967     		str	r1, [r3, #116]	@ float
 507              	.LVL50:
 508              	.LBE372:
 509              	.LBE371:
 510              	.LBB373:
 511              	.LBB374:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 512              		.loc 1 12 0
 513 001c 9D67     		str	r5, [r3, #120]	@ float
 514              	.LVL51:
 515              	.LBE374:
 516              	.LBE373:
 517              	.LBB375:
 518              	.LBB376:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 519              		.loc 1 13 0
 520 001e DA67     		str	r2, [r3, #124]	@ float
 521              	.LVL52:
 522              	.LBE376:
 523              	.LBE375:
 524              	.LBB377:
 525              	.LBB378:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 526              		.loc 1 26 0
 527 0020 C3F88040 		str	r4, [r3, #128]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 528              		.loc 1 27 0
 529 0024 C3F88400 		str	r0, [r3, #132]	@ float
 530              	.LVL53:
 531              	.LBE378:
 532              	.LBE377:
 533              	.LBE370:
 534              	.LBB379:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 18


 535              	.LBB380:
 536              	.LBB381:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 537              		.loc 1 11 0
 538 0028 0D4B     		ldr	r3, .L39+16
 539 002a 9962     		str	r1, [r3, #40]	@ float
 540              	.LVL54:
 541              	.LBE381:
 542              	.LBE380:
 543              	.LBB382:
 544              	.LBB383:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 545              		.loc 1 12 0
 546 002c D962     		str	r1, [r3, #44]	@ float
 547              	.LVL55:
 548              	.LBE383:
 549              	.LBE382:
 550              	.LBB384:
 551              	.LBB385:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 552              		.loc 1 13 0
 553 002e 1A63     		str	r2, [r3, #48]	@ float
 554              	.LVL56:
 555              	.LBE385:
 556              	.LBE384:
 557              	.LBB386:
 558              	.LBB387:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 559              		.loc 1 26 0
 560 0030 0C49     		ldr	r1, .L39+20
 561 0032 5963     		str	r1, [r3, #52]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 562              		.loc 1 27 0
 563 0034 0C49     		ldr	r1, .L39+24
 564 0036 9963     		str	r1, [r3, #56]	@ float
 565              	.LVL57:
 566              	.LBE387:
 567              	.LBE386:
 568              	.LBE379:
 569              	.LBB388:
 570              	.LBB389:
 571              	.LBB390:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 572              		.loc 1 11 0
 573 0038 0C49     		ldr	r1, .L39+28
 574 003a D964     		str	r1, [r3, #76]	@ float
 575              	.LVL58:
 576              	.LBE390:
 577              	.LBE389:
 578              	.LBB391:
 579              	.LBB392:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 580              		.loc 1 12 0
 581 003c 0C49     		ldr	r1, .L39+32
 582 003e 1965     		str	r1, [r3, #80]	@ float
 583              	.LVL59:
 584              	.LBE392:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 19


 585              	.LBE391:
 586              	.LBB393:
 587              	.LBB394:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 588              		.loc 1 13 0
 589 0040 5A65     		str	r2, [r3, #84]	@ float
 590              	.LVL60:
 591              	.LBE394:
 592              	.LBE393:
 593              	.LBB395:
 594              	.LBB396:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 595              		.loc 1 26 0
 596 0042 4FF07F52 		mov	r2, #1069547520
 597 0046 9A65     		str	r2, [r3, #88]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 598              		.loc 1 27 0
 599 0048 0A4A     		ldr	r2, .L39+36
 600 004a DA65     		str	r2, [r3, #92]	@ float
 601              	.LVL61:
 602              	.LBE396:
 603              	.LBE395:
 604              	.LBE388:
  39:Core/Src/robot/robo_init.cpp **** 
  40:Core/Src/robot/robo_init.cpp **** 	leg[0].set_PID_constants( 2.0, 30.0, 0, -17.5, 17.5);		//for crank = 70  // 25.42, 3.082, 2.385	
  41:Core/Src/robot/robo_init.cpp **** 	leg[1].set_PID_constants( 2.0, 30.0, 0, -17.5, 17.5);
  42:Core/Src/robot/robo_init.cpp **** 	steering.set_PID_constants( 2, 2, 0, -2.42, 2.42);			//for crank = 100 // 17.8, 0.3103, 255.2	load
  43:Core/Src/robot/robo_init.cpp **** 	steering.set_angle_PID_constants( 0.7, 0.01, 0, -1.5, 1.5);
  44:Core/Src/robot/robo_init.cpp **** }
 605              		.loc 3 44 0
 606 004c 30BC     		pop	{r4, r5}
 607              	.LCFI1:
 608              		.cfi_restore 5
 609              		.cfi_restore 4
 610              		.cfi_def_cfa_offset 0
 611 004e 7047     		bx	lr
 612              	.L40:
 613              		.align	2
 614              	.L39:
 615 0050 00000000 		.word	.LANCHOR0
 616 0054 0000F041 		.word	1106247680
 617 0058 00008C41 		.word	1099694080
 618 005c 00008CC1 		.word	-1047789568
 619 0060 00000000 		.word	.LANCHOR3
 620 0064 48E11A40 		.word	1075503432
 621 0068 48E11AC0 		.word	-1071980216
 622 006c 3333333F 		.word	1060320051
 623 0070 0AD7233C 		.word	1008981770
 624 0074 0000C0BF 		.word	-1077936128
 625              		.cfi_endproc
 626              	.LFE495:
 628              		.section	.text._ZL17limit_switch_initv,"ax",%progbits
 629              		.align	1
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 20


 635              	_ZL17limit_switch_initv:
 636              	.LFB496:
  45:Core/Src/robot/robo_init.cpp **** 
  46:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(){
 637              		.loc 3 46 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
  47:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_port = GPIOC;
 642              		.loc 3 47 0
 643 0000 044B     		ldr	r3, .L42
 644 0002 054A     		ldr	r2, .L42+4
 645 0004 1A60     		str	r2, [r3]
  48:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_pin = GPIO_PIN_0;
 646              		.loc 3 48 0
 647 0006 0122     		movs	r2, #1
 648 0008 9A80     		strh	r2, [r3, #4]	@ movhi
  49:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_port = GPIOA;
 649              		.loc 3 49 0
 650 000a 044A     		ldr	r2, .L42+8
 651 000c 9A60     		str	r2, [r3, #8]
  50:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_pin = GPIO_PIN_2;
 652              		.loc 3 50 0
 653 000e 0422     		movs	r2, #4
 654 0010 9A81     		strh	r2, [r3, #12]	@ movhi
  51:Core/Src/robot/robo_init.cpp **** 
  52:Core/Src/robot/robo_init.cpp **** 	//steering.limit_switch__[0].int_port = GPIOD;
  53:Core/Src/robot/robo_init.cpp **** 	//steering.limit_switch__[0].int_pin = GPIO_PIN_4;
  54:Core/Src/robot/robo_init.cpp **** }
 655              		.loc 3 54 0
 656 0012 7047     		bx	lr
 657              	.L43:
 658              		.align	2
 659              	.L42:
 660 0014 00000000 		.word	.LANCHOR0
 661 0018 00080240 		.word	1073874944
 662 001c 00000240 		.word	1073872896
 663              		.cfi_endproc
 664              	.LFE496:
 666              		.section	.text.__tcf_0,"ax",%progbits
 667              		.align	1
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu fpv4-sp-d16
 673              	__tcf_0:
 674              	.LFB500:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 675              		.loc 3 3 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 680              		.loc 3 3 0
 681 0000 034B     		ldr	r3, .L47
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 21


 682              	.L46:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 683              		.loc 3 3 0 is_stmt 0 discriminator 5
 684 0002 044A     		ldr	r2, .L47+4
 685 0004 9342     		cmp	r3, r2
 686 0006 01D0     		beq	.L44
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 687              		.loc 3 3 0 discriminator 4
 688 0008 5C3B     		subs	r3, r3, #92
 689              	.LVL62:
 690 000a FAE7     		b	.L46
 691              	.LVL63:
 692              	.L44:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 693              		.loc 3 3 0
 694 000c 7047     		bx	lr
 695              	.L48:
 696 000e 00BF     		.align	2
 697              	.L47:
 698 0010 B8000000 		.word	.LANCHOR0+184
 699 0014 00000000 		.word	.LANCHOR0
 700              		.cfi_endproc
 701              	.LFE500:
 703              		.section	.text._ZL10motor_initv,"ax",%progbits
 704              		.align	1
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	_ZL10motor_initv:
 711              	.LFB497:
  55:Core/Src/robot/robo_init.cpp **** 
  56:Core/Src/robot/robo_init.cpp **** void motor_init(){
 712              		.loc 3 56 0 is_stmt 1
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 717              	.LCFI2:
 718              		.cfi_def_cfa_offset 24
 719              		.cfi_offset 3, -24
 720              		.cfi_offset 4, -20
 721              		.cfi_offset 5, -16
 722              		.cfi_offset 6, -12
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
  57:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].htim = &htim8;
 725              		.loc 3 57 0
 726 0002 1F4C     		ldr	r4, .L51
 727 0004 1F48     		ldr	r0, .L51+4
 728 0006 A061     		str	r0, [r4, #24]
  58:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_port = GPIOD;
 729              		.loc 3 58 0
 730 0008 1F4B     		ldr	r3, .L51+8
 731 000a A360     		str	r3, [r4, #8]
  59:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_pin = GPIO_PIN_2; 
 732              		.loc 3 59 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 22


 733 000c 0425     		movs	r5, #4
 734 000e A581     		strh	r5, [r4, #12]	@ movhi
  60:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_port = GPIOD;
 735              		.loc 3 60 0
 736 0010 2361     		str	r3, [r4, #16]
  61:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_pin = GPIO_PIN_0;
 737              		.loc 3 61 0
 738 0012 0123     		movs	r3, #1
 739 0014 A382     		strh	r3, [r4, #20]	@ movhi
  62:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].channel = TIM_CHANNEL_3;
 740              		.loc 3 62 0
 741 0016 0827     		movs	r7, #8
 742 0018 E761     		str	r7, [r4, #28]
  63:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].max_omega = 17.5;
 743              		.loc 3 63 0
 744 001a 1C49     		ldr	r1, .L51+12
 745 001c 2160     		str	r1, [r4]	@ float
  64:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].tolerance = 0.2;
 746              		.loc 3 64 0
 747 001e 1C4A     		ldr	r2, .L51+16
 748 0020 6260     		str	r2, [r4, #4]	@ float
  65:Core/Src/robot/robo_init.cpp **** 
  66:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].htim = &htim8;
 749              		.loc 3 66 0
 750 0022 A063     		str	r0, [r4, #56]
  67:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_port = GPIOC;
 751              		.loc 3 67 0
 752 0024 1B4B     		ldr	r3, .L51+20
 753 0026 A362     		str	r3, [r4, #40]
  68:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_pin = GPIO_PIN_11;
 754              		.loc 3 68 0
 755 0028 4FF40063 		mov	r3, #2048
 756 002c A385     		strh	r3, [r4, #44]	@ movhi
  69:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_port = GPIOA;
 757              		.loc 3 69 0
 758 002e 1A4B     		ldr	r3, .L51+24
 759 0030 2363     		str	r3, [r4, #48]
  70:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_pin = GPIO_PIN_15;
 760              		.loc 3 70 0
 761 0032 4FF40046 		mov	r6, #32768
 762 0036 A686     		strh	r6, [r4, #52]	@ movhi
  71:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].channel = TIM_CHANNEL_2;
 763              		.loc 3 71 0
 764 0038 E563     		str	r5, [r4, #60]
  72:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].max_omega = 17.5;
 765              		.loc 3 72 0
 766 003a 2162     		str	r1, [r4, #32]	@ float
  73:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].tolerance = 0.2;
 767              		.loc 3 73 0
 768 003c 6262     		str	r2, [r4, #36]	@ float
  74:Core/Src/robot/robo_init.cpp ****         
  75:Core/Src/robot/robo_init.cpp **** 
  76:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].htim = &htim8;
 769              		.loc 3 76 0
 770 003e A065     		str	r0, [r4, #88]
  77:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_port = GPIOA;
 771              		.loc 3 77 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 23


 772 0040 A364     		str	r3, [r4, #72]
  78:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_pin = GPIO_PIN_8;
 773              		.loc 3 78 0
 774 0042 4FF48072 		mov	r2, #256
 775 0046 A4F84C20 		strh	r2, [r4, #76]	@ movhi
  79:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_port = GPIOA;
 776              		.loc 3 79 0
 777 004a 2365     		str	r3, [r4, #80]
  80:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_pin = GPIO_PIN_10;
 778              		.loc 3 80 0
 779 004c 4FF48063 		mov	r3, #1024
 780 0050 A4F85430 		strh	r3, [r4, #84]	@ movhi
  81:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].channel = TIM_CHANNEL_4;
 781              		.loc 3 81 0
 782 0054 0C26     		movs	r6, #12
 783 0056 E665     		str	r6, [r4, #92]
  82:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].max_omega = 2.42;
 784              		.loc 3 82 0
 785 0058 104B     		ldr	r3, .L51+28
 786 005a 2364     		str	r3, [r4, #64]	@ float
  83:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].tolerance = 0.1;
 787              		.loc 3 83 0
 788 005c 104B     		ldr	r3, .L51+32
 789 005e 6364     		str	r3, [r4, #68]	@ float
  84:Core/Src/robot/robo_init.cpp **** 
  85:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Base_Start(&htim8);
 790              		.loc 3 85 0
 791 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start
 792              	.LVL64:
  86:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_PWM_Start(motor_configurations[0].htim, TIM_CHANNEL_3);
 793              		.loc 3 86 0
 794 0064 3946     		mov	r1, r7
 795 0066 A069     		ldr	r0, [r4, #24]
 796 0068 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 797              	.LVL65:
  87:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[1].htim, TIM_CHANNEL_2);
 798              		.loc 3 87 0
 799 006c 2946     		mov	r1, r5
 800 006e A06B     		ldr	r0, [r4, #56]
 801 0070 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 802              	.LVL66:
  88:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[2].htim, TIM_CHANNEL_4);
 803              		.loc 3 88 0
 804 0074 3146     		mov	r1, r6
 805 0076 A06D     		ldr	r0, [r4, #88]
 806 0078 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 807              	.LVL67:
  89:Core/Src/robot/robo_init.cpp **** }
 808              		.loc 3 89 0
 809 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 810              	.L52:
 811 007e 00BF     		.align	2
 812              	.L51:
 813 0080 00000000 		.word	.LANCHOR1
 814 0084 00000000 		.word	htim8
 815 0088 000C0240 		.word	1073875968
 816 008c 00008C41 		.word	1099694080
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 24


 817 0090 CDCC4C3E 		.word	1045220557
 818 0094 00080240 		.word	1073874944
 819 0098 00000240 		.word	1073872896
 820 009c 48E11A40 		.word	1075503432
 821 00a0 CDCCCC3D 		.word	1036831949
 822              		.cfi_endproc
 823              	.LFE497:
 825              		.section	.text._ZL12encoder_initv,"ax",%progbits
 826              		.align	1
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 830              		.fpu fpv4-sp-d16
 832              	_ZL12encoder_initv:
 833              	.LFB498:
  90:Core/Src/robot/robo_init.cpp **** 
  91:Core/Src/robot/robo_init.cpp **** void encoder_init(){
 834              		.loc 3 91 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838 0000 38B5     		push	{r3, r4, r5, lr}
 839              	.LCFI3:
 840              		.cfi_def_cfa_offset 16
 841              		.cfi_offset 3, -16
 842              		.cfi_offset 4, -12
 843              		.cfi_offset 5, -8
 844              		.cfi_offset 14, -4
  92:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 845              		.loc 3 92 0
 846 0002 0C4C     		ldr	r4, .L55
 847 0004 4FF47A65 		mov	r5, #4000
 848 0008 A580     		strh	r5, [r4, #4]	@ movhi
  93:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].henc = &htim2;
 849              		.loc 3 93 0
 850 000a 0B48     		ldr	r0, .L55+4
 851 000c 2060     		str	r0, [r4]
  94:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[0].henc, TIM_CHANNEL_ALL);
 852              		.loc 3 94 0
 853 000e 1821     		movs	r1, #24
 854 0010 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 855              	.LVL68:
  95:Core/Src/robot/robo_init.cpp **** 
  96:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 856              		.loc 3 96 0
 857 0014 A581     		strh	r5, [r4, #12]	@ movhi
  97:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].henc = &htim1;
 858              		.loc 3 97 0
 859 0016 0948     		ldr	r0, .L55+8
 860 0018 A060     		str	r0, [r4, #8]
  98:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[1].henc, TIM_CHANNEL_ALL);
 861              		.loc 3 98 0
 862 001a 1821     		movs	r1, #24
 863 001c FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 864              	.LVL69:
  99:Core/Src/robot/robo_init.cpp **** 	
 100:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].ppr = 850 *BEARING_TO_STEERING_RATIO*4;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 25


 865              		.loc 3 100 0
 866 0020 46F64023 		movw	r3, #27200
 867 0024 A382     		strh	r3, [r4, #20]	@ movhi
 101:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].henc = &htim3;
 868              		.loc 3 101 0
 869 0026 0648     		ldr	r0, .L55+12
 870 0028 2061     		str	r0, [r4, #16]
 102:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[2].henc, TIM_CHANNEL_ALL);
 871              		.loc 3 102 0
 872 002a 1821     		movs	r1, #24
 873 002c FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 874              	.LVL70:
 103:Core/Src/robot/robo_init.cpp **** }
 875              		.loc 3 103 0
 876 0030 38BD     		pop	{r3, r4, r5, pc}
 877              	.L56:
 878 0032 00BF     		.align	2
 879              	.L55:
 880 0034 00000000 		.word	.LANCHOR2
 881 0038 00000000 		.word	htim2
 882 003c 00000000 		.word	htim1
 883 0040 00000000 		.word	htim3
 884              		.cfi_endproc
 885              	.LFE498:
 887              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 888              		.align	1
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu fpv4-sp-d16
 894              	_Z41__static_initialization_and_destruction_0ii:
 895              	.LFB499:
 896              		.loc 3 103 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              	.LVL71:
 901 0000 0128     		cmp	r0, #1
 902 0002 00D0     		beq	.L65
 903              	.L62:
 904 0004 7047     		bx	lr
 905              	.L65:
 906              		.loc 3 103 0 is_stmt 0 discriminator 1
 907 0006 4FF6FF73 		movw	r3, #65535
 908 000a 9942     		cmp	r1, r3
 909 000c FAD1     		bne	.L62
 910              		.loc 3 103 0
 911 000e 10B5     		push	{r4, lr}
 912              	.LCFI4:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 4, -8
 915              		.cfi_offset 14, -4
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 916              		.loc 3 3 0 is_stmt 1
 917 0010 1E4B     		ldr	r3, .L66
 918              	.LVL72:
 919              	.L60:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 26


   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 920              		.loc 3 3 0 is_stmt 0 discriminator 4
 921 0012 0028     		cmp	r0, #0
 922 0014 16DB     		blt	.L59
 923              	.LVL73:
 924              	.LBB397:
 925              	.LBB398:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 926              		.loc 6 18 0 is_stmt 1
 927 0016 0021     		movs	r1, #0
 928 0018 1961     		str	r1, [r3, #16]
 929              	.LVL74:
 930              	.LBB399:
 931              	.LBB400:
 932              	.LBB401:
 933              	.LBB402:
 934              	.LBB403:
 935              	.LBB404:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 936              		.loc 1 11 0
 937 001a 0022     		movs	r2, #0
 938 001c 9A61     		str	r2, [r3, #24]	@ float
 939              	.LVL75:
 940              	.LBE404:
 941              	.LBE403:
 942              	.LBB405:
 943              	.LBB406:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 944              		.loc 1 12 0
 945 001e DA61     		str	r2, [r3, #28]	@ float
 946              	.LVL76:
 947              	.LBE406:
 948              	.LBE405:
 949              	.LBB407:
 950              	.LBB408:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 951              		.loc 1 13 0
 952 0020 1A62     		str	r2, [r3, #32]	@ float
 953              	.LVL77:
 954              	.LBE408:
 955              	.LBE407:
 956              	.LBE402:
 957              	.LBE401:
  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 958              		.loc 1 50 0
 959 0022 1B4C     		ldr	r4, .L66+4
 960 0024 5C61     		str	r4, [r3, #20]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 961              		.loc 1 51 0
 962 0026 DA62     		str	r2, [r3, #44]	@ float
  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 963              		.loc 1 52 0
 964 0028 1A63     		str	r2, [r3, #48]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 965              		.loc 1 53 0
 966 002a 5A63     		str	r2, [r3, #52]	@ float
 967              	.LVL78:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 27


 968              	.LBE400:
 969              	.LBE399:
 970              	.LBB409:
 971              	.LBB410:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
 972              		.loc 4 29 0
 973 002c 9963     		str	r1, [r3, #56]
 974              	.LVL79:
 975              	.LBE410:
 976              	.LBE409:
 977              	.LBB411:
 978              	.LBB412:
  18:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 979              		.loc 5 18 0
 980 002e 1964     		str	r1, [r3, #64]
 981 0030 5A64     		str	r2, [r3, #68]	@ float
 982 0032 9A64     		str	r2, [r3, #72]	@ float
 983 0034 DA64     		str	r2, [r3, #76]	@ float
 984 0036 1965     		str	r1, [r3, #80]
 985 0038 D963     		str	r1, [r3, #60]
 986              	.LVL80:
 987              	.LBE412:
 988              	.LBE411:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 989              		.loc 6 18 0
 990 003a 5A65     		str	r2, [r3, #84]	@ float
 991 003c 9A65     		str	r2, [r3, #88]	@ float
 992              	.LVL81:
 993              	.LBE398:
 994              	.LBE397:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 995              		.loc 3 3 0
 996 003e 5C33     		adds	r3, r3, #92
 997 0040 0138     		subs	r0, r0, #1
 998 0042 E6E7     		b	.L60
 999              	.L59:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 1000              		.loc 3 3 0 is_stmt 0 discriminator 2
 1001 0044 134C     		ldr	r4, .L66+8
 1002 0046 2246     		mov	r2, r4
 1003 0048 1349     		ldr	r1, .L66+12
 1004 004a 0020     		movs	r0, #0
 1005 004c FFF7FEFF 		bl	__aeabi_atexit
 1006              	.LVL82:
 1007              	.LBB413:
 1008              	.LBB414:
 1009              	.LBB415:
 1010              	.LBB416:
 1011              	.LBB417:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
 1012              		.loc 4 29 0 is_stmt 1 discriminator 2
 1013 0050 1248     		ldr	r0, .L66+16
 1014 0052 0022     		movs	r2, #0
 1015 0054 8260     		str	r2, [r0, #8]
 1016              	.LVL83:
 1017              	.LBE417:
 1018              	.LBE416:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 28


 1019              	.LBE415:
 1020              	.LBB418:
 1021              	.LBB419:
 1022              	.LBB420:
  18:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 1023              		.loc 5 18 0 discriminator 2
 1024 0056 0261     		str	r2, [r0, #16]
 1025 0058 0023     		movs	r3, #0
 1026 005a 4361     		str	r3, [r0, #20]	@ float
 1027 005c 8361     		str	r3, [r0, #24]	@ float
 1028 005e C361     		str	r3, [r0, #28]	@ float
 1029 0060 0262     		str	r2, [r0, #32]
 1030 0062 C260     		str	r2, [r0, #12]
 1031              	.LVL84:
 1032              	.LBE420:
 1033              	.LBE419:
 1034              	.LBE418:
 1035              	.LBB421:
 1036              	.LBB422:
 1037              	.LBB423:
 1038              	.LBB424:
 1039              	.LBB425:
 1040              	.LBB426:
 1041              	.LBB427:
 1042              	.LBB428:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1043              		.loc 1 11 0 discriminator 2
 1044 0064 8362     		str	r3, [r0, #40]	@ float
 1045              	.LVL85:
 1046              	.LBE428:
 1047              	.LBE427:
 1048              	.LBB429:
 1049              	.LBB430:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1050              		.loc 1 12 0 discriminator 2
 1051 0066 C362     		str	r3, [r0, #44]	@ float
 1052              	.LVL86:
 1053              	.LBE430:
 1054              	.LBE429:
 1055              	.LBB431:
 1056              	.LBB432:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1057              		.loc 1 13 0 discriminator 2
 1058 0068 0363     		str	r3, [r0, #48]	@ float
 1059              	.LVL87:
 1060              	.LBE432:
 1061              	.LBE431:
 1062              	.LBE426:
 1063              	.LBE425:
 1064              	.LBE424:
  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1065              		.loc 1 50 0 discriminator 2
 1066 006a 094A     		ldr	r2, .L66+4
 1067 006c 4262     		str	r2, [r0, #36]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 1068              		.loc 1 51 0 discriminator 2
 1069 006e C363     		str	r3, [r0, #60]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 29


  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 1070              		.loc 1 52 0 discriminator 2
 1071 0070 0364     		str	r3, [r0, #64]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 1072              		.loc 1 53 0 discriminator 2
 1073 0072 4364     		str	r3, [r0, #68]	@ float
 1074              	.LVL88:
 1075              	.LBE423:
 1076              	.LBE422:
 1077              	.LBE421:
 1078              	.LBB433:
 1079              	.LBB434:
 1080              	.LBB435:
 1081              	.LBB436:
 1082              	.LBB437:
 1083              	.LBB438:
 1084              	.LBB439:
 1085              	.LBB440:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1086              		.loc 1 11 0 discriminator 2
 1087 0074 C364     		str	r3, [r0, #76]	@ float
 1088              	.LVL89:
 1089              	.LBE440:
 1090              	.LBE439:
 1091              	.LBB441:
 1092              	.LBB442:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1093              		.loc 1 12 0 discriminator 2
 1094 0076 0365     		str	r3, [r0, #80]	@ float
 1095              	.LVL90:
 1096              	.LBE442:
 1097              	.LBE441:
 1098              	.LBB443:
 1099              	.LBB444:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1100              		.loc 1 13 0 discriminator 2
 1101 0078 4365     		str	r3, [r0, #84]	@ float
 1102              	.LVL91:
 1103              	.LBE444:
 1104              	.LBE443:
 1105              	.LBE438:
 1106              	.LBE437:
 1107              	.LBE436:
 203:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1108              		.loc 1 203 0 discriminator 2
 1109 007a 094A     		ldr	r2, .L66+20
 1110 007c 8264     		str	r2, [r0, #72]
 204:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 1111              		.loc 1 204 0 discriminator 2
 1112 007e 0366     		str	r3, [r0, #96]	@ float
 205:Core/Inc/utils/pid_algorithms.h ****         }
 1113              		.loc 1 205 0 discriminator 2
 1114 0080 4366     		str	r3, [r0, #100]	@ float
 1115              	.LVL92:
 1116              	.LBE435:
 1117              	.LBE434:
 1118              	.LBE433:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 30


 1119              	.LBE414:
 1120              	.LBE413:
   4:Core/Src/robot/robo_init.cpp **** 
 1121              		.loc 3 4 0 discriminator 2
 1122 0082 2246     		mov	r2, r4
 1123 0084 0749     		ldr	r1, .L66+24
 1124 0086 FFF7FEFF 		bl	__aeabi_atexit
 1125              	.LVL93:
 1126              		.loc 3 103 0 discriminator 2
 1127 008a 10BD     		pop	{r4, pc}
 1128              	.L67:
 1129              		.align	2
 1130              	.L66:
 1131 008c 00000000 		.word	.LANCHOR0
 1132 0090 08000000 		.word	_ZTV12Discrete_PID+8
 1133 0094 00000000 		.word	__dso_handle
 1134 0098 00000000 		.word	__tcf_0
 1135 009c 00000000 		.word	.LANCHOR3
 1136 00a0 08000000 		.word	_ZTV9Angle_PID+8
 1137 00a4 00000000 		.word	_ZN8steeringD1Ev
 1138              		.cfi_endproc
 1139              	.LFE499:
 1141              		.section	.text._ZN9Angle_PIDD0Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 1142              		.align	1
 1143              		.weak	_ZN9Angle_PIDD0Ev
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	_ZN9Angle_PIDD0Ev:
 1150              	.LFB421:
 212:Core/Inc/utils/pid_algorithms.h **** 
 1151              		.loc 1 212 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155              	.LVL94:
 1156 0000 10B5     		push	{r4, lr}
 1157              	.LCFI5:
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 4, -8
 1160              		.cfi_offset 14, -4
 1161 0002 0446     		mov	r4, r0
 212:Core/Inc/utils/pid_algorithms.h **** 
 1162              		.loc 1 212 0
 1163 0004 2021     		movs	r1, #32
 1164 0006 FFF7FEFF 		bl	_ZdlPvj
 1165              	.LVL95:
 1166 000a 2046     		mov	r0, r4
 1167 000c 10BD     		pop	{r4, pc}
 1168              		.cfi_endproc
 1169              	.LFE421:
 1171              		.section	.text._ZN12Discrete_PIDD0Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
 1172              		.align	1
 1173              		.weak	_ZN12Discrete_PIDD0Ev
 1174              		.syntax unified
 1175              		.thumb
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 31


 1176              		.thumb_func
 1177              		.fpu fpv4-sp-d16
 1179              	_ZN12Discrete_PIDD0Ev:
 1180              	.LFB398:
  59:Core/Inc/utils/pid_algorithms.h **** 
 1181              		.loc 1 59 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              	.LVL96:
 1186 0000 10B5     		push	{r4, lr}
 1187              	.LCFI6:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 4, -8
 1190              		.cfi_offset 14, -4
 1191 0002 0446     		mov	r4, r0
  59:Core/Inc/utils/pid_algorithms.h **** 
 1192              		.loc 1 59 0
 1193 0004 2421     		movs	r1, #36
 1194 0006 FFF7FEFF 		bl	_ZdlPvj
 1195              	.LVL97:
 1196 000a 2046     		mov	r0, r4
 1197 000c 10BD     		pop	{r4, pc}
 1198              		.cfi_endproc
 1199              	.LFE398:
 1201              		.section	.text._Z9robo_initv,"ax",%progbits
 1202              		.align	1
 1203              		.global	_Z9robo_initv
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.fpu fpv4-sp-d16
 1209              	_Z9robo_initv:
 1210              	.LFB492:
  17:Core/Src/robot/robo_init.cpp **** 	motor_init();
 1211              		.loc 3 17 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215 0000 08B5     		push	{r3, lr}
 1216              	.LCFI7:
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 3, -8
 1219              		.cfi_offset 14, -4
  18:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
 1220              		.loc 3 18 0
 1221 0002 FFF7FEFF 		bl	_ZL10motor_initv
 1222              	.LVL98:
  19:Core/Src/robot/robo_init.cpp **** 	pid_init();
 1223              		.loc 3 19 0
 1224 0006 FFF7FEFF 		bl	_ZL12encoder_initv
 1225              	.LVL99:
  20:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
 1226              		.loc 3 20 0
 1227 000a FFF7FEFF 		bl	_ZL8pid_initv
 1228              	.LVL100:
  21:Core/Src/robot/robo_init.cpp **** 	leg_init();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 32


 1229              		.loc 3 21 0
 1230 000e FFF7FEFF 		bl	_ZL17limit_switch_initv
 1231              	.LVL101:
  22:Core/Src/robot/robo_init.cpp **** 	steering_init();
 1232              		.loc 3 22 0
 1233 0012 FFF7FEFF 		bl	_ZL8leg_initv
 1234              	.LVL102:
  23:Core/Src/robot/robo_init.cpp **** }
 1235              		.loc 3 23 0
 1236 0016 FFF7FEFF 		bl	_ZL13steering_initv
 1237              	.LVL103:
  24:Core/Src/robot/robo_init.cpp **** 
 1238              		.loc 3 24 0
 1239 001a 08BD     		pop	{r3, pc}
 1240              		.cfi_endproc
 1241              	.LFE492:
 1243              		.section	.text._GLOBAL__sub_I_leg,"ax",%progbits
 1244              		.align	1
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu fpv4-sp-d16
 1250              	_GLOBAL__sub_I_leg:
 1251              	.LFB501:
 1252              		.loc 3 103 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256 0000 08B5     		push	{r3, lr}
 1257              	.LCFI8:
 1258              		.cfi_def_cfa_offset 8
 1259              		.cfi_offset 3, -8
 1260              		.cfi_offset 14, -4
 1261              		.loc 3 103 0
 1262 0002 4FF6FF71 		movw	r1, #65535
 1263 0006 0120     		movs	r0, #1
 1264 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1265              	.LVL104:
 1266 000c 08BD     		pop	{r3, pc}
 1267              		.cfi_endproc
 1268              	.LFE501:
 1270              		.section	.init_array,"aw",%init_array
 1271              		.align	2
 1272 0000 00000000 		.word	_GLOBAL__sub_I_leg(target1)
 1273              		.weak	_ZTS13PID_Algorithm
 1274              		.section	.rodata._ZTS13PID_Algorithm,"aG",%progbits,_ZTS13PID_Algorithm,comdat
 1275              		.align	2
 1278              	_ZTS13PID_Algorithm:
 1279 0000 31335049 		.ascii	"13PID_Algorithm\000"
 1279      445F416C 
 1279      676F7269 
 1279      74686D00 
 1280              		.weak	_ZTI13PID_Algorithm
 1281              		.section	.rodata._ZTI13PID_Algorithm,"aG",%progbits,_ZTI13PID_Algorithm,comdat
 1282              		.align	2
 1285              	_ZTI13PID_Algorithm:
 1286 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 33


 1287 0004 00000000 		.word	_ZTS13PID_Algorithm
 1288              		.weak	_ZTS12Discrete_PID
 1289              		.section	.rodata._ZTS12Discrete_PID,"aG",%progbits,_ZTS12Discrete_PID,comdat
 1290              		.align	2
 1293              	_ZTS12Discrete_PID:
 1294 0000 31324469 		.ascii	"12Discrete_PID\000"
 1294      73637265 
 1294      74655F50 
 1294      494400
 1295              		.weak	_ZTI12Discrete_PID
 1296              		.section	.rodata._ZTI12Discrete_PID,"aG",%progbits,_ZTI12Discrete_PID,comdat
 1297              		.align	2
 1300              	_ZTI12Discrete_PID:
 1301 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1302 0004 00000000 		.word	_ZTS12Discrete_PID
 1303 0008 00000000 		.word	_ZTI13PID_Algorithm
 1304              		.weak	_ZTS9Angle_PID
 1305              		.section	.rodata._ZTS9Angle_PID,"aG",%progbits,_ZTS9Angle_PID,comdat
 1306              		.align	2
 1309              	_ZTS9Angle_PID:
 1310 0000 39416E67 		.ascii	"9Angle_PID\000"
 1310      6C655F50 
 1310      494400
 1311              		.weak	_ZTI9Angle_PID
 1312              		.section	.rodata._ZTI9Angle_PID,"aG",%progbits,_ZTI9Angle_PID,comdat
 1313              		.align	2
 1316              	_ZTI9Angle_PID:
 1317 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1318 0004 00000000 		.word	_ZTS9Angle_PID
 1319 0008 00000000 		.word	_ZTI13PID_Algorithm
 1320              		.weak	_ZTV12Discrete_PID
 1321              		.section	.rodata._ZTV12Discrete_PID,"aG",%progbits,_ZTV12Discrete_PID,comdat
 1322              		.align	2
 1325              	_ZTV12Discrete_PID:
 1326 0000 00000000 		.word	0
 1327 0004 00000000 		.word	_ZTI12Discrete_PID
 1328 0008 00000000 		.word	_ZN12Discrete_PID7computeEfm
 1329 000c 00000000 		.word	_ZN12Discrete_PIDD1Ev
 1330 0010 00000000 		.word	_ZN12Discrete_PIDD0Ev
 1331              		.weak	_ZTV9Angle_PID
 1332              		.section	.rodata._ZTV9Angle_PID,"aG",%progbits,_ZTV9Angle_PID,comdat
 1333              		.align	2
 1336              	_ZTV9Angle_PID:
 1337 0000 00000000 		.word	0
 1338 0004 00000000 		.word	_ZTI9Angle_PID
 1339 0008 00000000 		.word	_ZN9Angle_PID7computeEfm
 1340 000c 00000000 		.word	_ZN9Angle_PIDD1Ev
 1341 0010 00000000 		.word	_ZN9Angle_PIDD0Ev
 1342              		.global	steering
 1343              		.global	leg
 1344              		.section	.bss._ZL20motor_configurations,"aw",%nobits
 1345              		.align	2
 1346              		.set	.LANCHOR1,. + 0
 1349              	_ZL20motor_configurations:
 1350 0000 00000000 		.space	96
 1350      00000000 
 1350      00000000 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 34


 1350      00000000 
 1350      00000000 
 1351              		.section	.bss._ZL22encoder_configurations,"aw",%nobits
 1352              		.align	2
 1353              		.set	.LANCHOR2,. + 0
 1356              	_ZL22encoder_configurations:
 1357 0000 00000000 		.space	24
 1357      00000000 
 1357      00000000 
 1357      00000000 
 1357      00000000 
 1358              		.section	.bss.leg,"aw",%nobits
 1359              		.align	2
 1360              		.set	.LANCHOR0,. + 0
 1363              	leg:
 1364 0000 00000000 		.space	184
 1364      00000000 
 1364      00000000 
 1364      00000000 
 1364      00000000 
 1365              		.section	.bss.steering,"aw",%nobits
 1366              		.align	2
 1367              		.set	.LANCHOR3,. + 0
 1370              	steering:
 1371 0000 00000000 		.space	104
 1371      00000000 
 1371      00000000 
 1371      00000000 
 1371      00000000 
 1372              		.text
 1373              	.Letext0:
 1374              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1375              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1376              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1377              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1378              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1379              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1380              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1381              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1382              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1383              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1384              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1385              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1386              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1387              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1388              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1389              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1390              		.file 23 "Core/Inc/periphs/tim.h"
 1391              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1392              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1393              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1394              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1395              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1396              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1397              		.file 30 "Core/Inc/devs/limit_switch.h"
 1398              		.file 31 "Core/Inc/periphs/usart.h"
 1399              		.file 32 "Core/Inc/periphs/adc.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 35


 1400              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 robo_init.cpp
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:18     .text._ZN12Discrete_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:42     .text._ZN12Discrete_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:49     .text._ZN12Discrete_PID7computeEfm:00000000 _ZN12Discrete_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:153    .text._ZN12Discrete_PID7computeEfm:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:158    .text._ZN9Angle_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:181    .text._ZN9Angle_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:188    .text._ZN9Angle_PID7computeEfm:00000000 _ZN9Angle_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:293    .text._ZN8steeringD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:317    .text._ZL8leg_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:323    .text._ZL8leg_initv:00000000 _ZL8leg_initv
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:393    .text._ZL8leg_initv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:400    .text._ZL13steering_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:406    .text._ZL13steering_initv:00000000 _ZL13steering_initv
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:438    .text._ZL13steering_initv:0000000c $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:445    .text._ZL8pid_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:451    .text._ZL8pid_initv:00000000 _ZL8pid_initv
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:615    .text._ZL8pid_initv:00000050 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:629    .text._ZL17limit_switch_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:635    .text._ZL17limit_switch_initv:00000000 _ZL17limit_switch_initv
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:660    .text._ZL17limit_switch_initv:00000014 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:667    .text.__tcf_0:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:673    .text.__tcf_0:00000000 __tcf_0
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:698    .text.__tcf_0:00000010 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:704    .text._ZL10motor_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:710    .text._ZL10motor_initv:00000000 _ZL10motor_initv
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:813    .text._ZL10motor_initv:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:826    .text._ZL12encoder_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:832    .text._ZL12encoder_initv:00000000 _ZL12encoder_initv
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:880    .text._ZL12encoder_initv:00000034 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:888    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:894    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1131   .text._Z41__static_initialization_and_destruction_0ii:0000008c $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1325   .rodata._ZTV12Discrete_PID:00000000 _ZTV12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1336   .rodata._ZTV9Angle_PID:00000000 _ZTV9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1142   .text._ZN9Angle_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1149   .text._ZN9Angle_PIDD0Ev:00000000 _ZN9Angle_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1172   .text._ZN12Discrete_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1179   .text._ZN12Discrete_PIDD0Ev:00000000 _ZN12Discrete_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1202   .text._Z9robo_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1209   .text._Z9robo_initv:00000000 _Z9robo_initv
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1244   .text._GLOBAL__sub_I_leg:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1250   .text._GLOBAL__sub_I_leg:00000000 _GLOBAL__sub_I_leg
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1271   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1278   .rodata._ZTS13PID_Algorithm:00000000 _ZTS13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1275   .rodata._ZTS13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1285   .rodata._ZTI13PID_Algorithm:00000000 _ZTI13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1282   .rodata._ZTI13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1293   .rodata._ZTS12Discrete_PID:00000000 _ZTS12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1290   .rodata._ZTS12Discrete_PID:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s 			page 37


C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1300   .rodata._ZTI12Discrete_PID:00000000 _ZTI12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1297   .rodata._ZTI12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1309   .rodata._ZTS9Angle_PID:00000000 _ZTS9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1306   .rodata._ZTS9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1316   .rodata._ZTI9Angle_PID:00000000 _ZTI9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1313   .rodata._ZTI9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1322   .rodata._ZTV12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1333   .rodata._ZTV9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1370   .bss.steering:00000000 steering
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1363   .bss.leg:00000000 leg
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1345   .bss._ZL20motor_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1349   .bss._ZL20motor_configurations:00000000 _ZL20motor_configurations
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1352   .bss._ZL22encoder_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1356   .bss._ZL22encoder_configurations:00000000 _ZL22encoder_configurations
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1359   .bss.leg:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRa1mPl.s:1366   .bss.steering:00000000 $d
                           .group:00000000 _ZN12Discrete_PIDD5Ev
                           .group:00000000 _ZN9Angle_PIDD5Ev
                           .group:00000000 _ZN8steeringD5Ev

UNDEFINED SYMBOLS
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
htim8
HAL_TIM_Encoder_Start
htim2
htim1
htim3
__aeabi_atexit
__dso_handle
_ZdlPvj
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
