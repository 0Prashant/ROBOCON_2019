ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interrupt.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_GPIO_EXTI_Callback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LFB492:
  27              		.file 1 "Core/Src/devs/interrupt.cpp"
   1:Core/Src/devs/interrupt.cpp **** 
   2:Core/Src/devs/interrupt.cpp **** #include "robo_init.h"
   3:Core/Src/devs/interrupt.cpp **** 
   4:Core/Src/devs/interrupt.cpp **** extern leg leg[2];
   5:Core/Src/devs/interrupt.cpp **** extern steering steering;
   6:Core/Src/devs/interrupt.cpp **** extern bool sand_dune_crossed_flag;
   7:Core/Src/devs/interrupt.cpp **** extern bool ROBOT_START_FLAG;
   8:Core/Src/devs/interrupt.cpp **** extern bool STEERING_FLAG;
   9:Core/Src/devs/interrupt.cpp **** 
  10:Core/Src/devs/interrupt.cpp **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  11:Core/Src/devs/interrupt.cpp **** {
  28              		.loc 1 11 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  12:Core/Src/devs/interrupt.cpp ****         switch (GPIO_Pin) {
  38              		.loc 1 12 0
  39 0002 B0F5007F 		cmp	r0, #512
  40 0006 20D0     		beq	.L3
  41 0008 0ED9     		bls	.L10
  42 000a B0F5006F 		cmp	r0, #2048
  43 000e 25D0     		beq	.L7
  44 0010 B0F5004F 		cmp	r0, #32768
  45 0014 15D1     		bne	.L11
  13:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s 			page 2


  14:Core/Src/devs/interrupt.cpp **** 			ROBOT_START_FLAG = true;
  15:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\t !!start_pressed!!\n\n");
  16:Core/Src/devs/interrupt.cpp **** 		}break;
  17:Core/Src/devs/interrupt.cpp **** 
  18:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_9 : {
  19:Core/Src/devs/interrupt.cpp ****                         leg[0].steps++;
  20:Core/Src/devs/interrupt.cpp ****                         leg[0].reset_angle(300*PI/180);
  21:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tRobot interrupt0\t %d\n", leg[0].steps);
  22:Core/Src/devs/interrupt.cpp ****                 } break;
  23:Core/Src/devs/interrupt.cpp **** 
  24:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_11: {
  25:Core/Src/devs/interrupt.cpp ****                         leg[1].steps++;
  26:Core/Src/devs/interrupt.cpp ****                         leg[1].reset_angle(20*PI/180);
  27:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tRobot interrupt1\t %d\n", leg[1].steps);
  28:Core/Src/devs/interrupt.cpp ****                 } break;
  29:Core/Src/devs/interrupt.cpp **** 
  30:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_15: {
  31:Core/Src/devs/interrupt.cpp **** 			STEERING_FLAG = true;
  46              		.loc 1 31 0
  47 0016 164B     		ldr	r3, .L13
  48 0018 0122     		movs	r2, #1
  49 001a 1A70     		strb	r2, [r3]
  50              	.LVL1:
  51              	.LBB4:
  52              	.LBB5:
  53              		.file 2 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s 			page 3


  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s 			page 4


  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  54              		.loc 2 94 0
  55 001c 9FED150A 		vldr.32	s0, .L13+4
  56 0020 1548     		ldr	r0, .L13+8
  57              	.LVL2:
  58 0022 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
  59              	.LVL3:
  60 0026 04E0     		b	.L1
  61              	.LVL4:
  62              	.L10:
  63              	.LBE5:
  64              	.LBE4:
  12:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
  65              		.loc 1 12 0
  66 0028 0128     		cmp	r0, #1
  67 002a 03D1     		bne	.L12
  14:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\t !!start_pressed!!\n\n");
  68              		.loc 1 14 0
  69 002c 134B     		ldr	r3, .L13+12
  70 002e 0122     		movs	r2, #1
  71 0030 1A70     		strb	r2, [r3]
  72              	.LVL5:
  73              	.L1:
  32:Core/Src/devs/interrupt.cpp **** 			steering.reset_angle(0.7*PI/180);
  33:Core/Src/devs/interrupt.cpp **** 			//  printf("\n\n\t\t\tsteering interrupt \t\n");
  34:Core/Src/devs/interrupt.cpp ****                 } break;
  35:Core/Src/devs/interrupt.cpp **** 
  36:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_8: {
  37:Core/Src/devs/interrupt.cpp **** 			sand_dune_crossed_flag = true;
  38:Core/Src/devs/interrupt.cpp **** 			// printf("\nSand_Dune_Crossed \n");
  39:Core/Src/devs/interrupt.cpp **** 		}
  40:Core/Src/devs/interrupt.cpp **** 
  41:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_10: {
  42:Core/Src/devs/interrupt.cpp **** 			sand_dune_crossed_flag = true;
  43:Core/Src/devs/interrupt.cpp **** 			// printf("\nSand_Dune_Crossed \n");
  44:Core/Src/devs/interrupt.cpp **** 		}
  45:Core/Src/devs/interrupt.cpp ****         }
  46:Core/Src/devs/interrupt.cpp **** }...
  74              		.loc 1 46 0
  75 0032 08BD     		pop	{r3, pc}
  76              	.LVL6:
  77              	.L12:
  12:Core/Src/devs/interrupt.cpp ****         switch (GPIO_Pin) {
  78              		.loc 1 12 0
  79 0034 B0F5807F 		cmp	r0, #256
  80 0038 FBD1     		bne	.L1
  81              	.L6:
  42:Core/Src/devs/interrupt.cpp **** 			sand_dune_crossed_flag = true;
  82              		.loc 1 42 0
  83 003a 114B     		ldr	r3, .L13+16
  84 003c 0122     		movs	r2, #1
  85 003e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s 			page 5


  86              		.loc 1 46 0
  87 0040 F7E7     		b	.L1
  88              	.L11:
  12:Core/Src/devs/interrupt.cpp ****         switch (GPIO_Pin) {
  89              		.loc 1 12 0
  90 0042 B0F5806F 		cmp	r0, #1024
  91 0046 F4D1     		bne	.L1
  92 0048 F7E7     		b	.L6
  93              	.L3:
  19:Core/Src/devs/interrupt.cpp ****                         leg[0].steps++;
  94              		.loc 1 19 0
  95 004a 0E48     		ldr	r0, .L13+20
  96              	.LVL7:
  97 004c 0369     		ldr	r3, [r0, #16]
  98 004e 0133     		adds	r3, r3, #1
  99 0050 0361     		str	r3, [r0, #16]
  20:Core/Src/devs/interrupt.cpp ****                         leg[0].reset_angle(300*PI/180);
 100              		.loc 1 20 0
 101 0052 9FED0D0A 		vldr.32	s0, .L13+24
 102 0056 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 103              	.LVL8:
  22:Core/Src/devs/interrupt.cpp ****                 } break;
 104              		.loc 1 22 0
 105 005a EAE7     		b	.L1
 106              	.LVL9:
 107              	.L7:
  25:Core/Src/devs/interrupt.cpp ****                         leg[1].steps++;
 108              		.loc 1 25 0
 109 005c 0948     		ldr	r0, .L13+20
 110              	.LVL10:
 111 005e C36E     		ldr	r3, [r0, #108]
 112 0060 0133     		adds	r3, r3, #1
 113 0062 C366     		str	r3, [r0, #108]
  26:Core/Src/devs/interrupt.cpp ****                         leg[1].reset_angle(20*PI/180);
 114              		.loc 1 26 0
 115 0064 9FED090A 		vldr.32	s0, .L13+28
 116 0068 5C30     		adds	r0, r0, #92
 117 006a FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 118              	.LVL11:
  28:Core/Src/devs/interrupt.cpp ****                 } break;
 119              		.loc 1 28 0
 120 006e E0E7     		b	.L1
 121              	.L14:
 122              		.align	2
 123              	.L13:
 124 0070 00000000 		.word	STEERING_FLAG
 125 0074 172B483C 		.word	1011362583
 126 0078 0C000000 		.word	steering+12
 127 007c 00000000 		.word	ROBOT_START_FLAG
 128 0080 00000000 		.word	sand_dune_crossed_flag
 129 0084 00000000 		.word	leg
 130 0088 368DA740 		.word	1084722486
 131 008c C2B8B23E 		.word	1051900098
 132              		.cfi_endproc
 133              	.LFE492:
 135              		.text
 136              	.Letext0:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s 			page 6


 137              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 138              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 139              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 140              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 141              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 142              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 143              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 144              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 145              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 146              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 147              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 148              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 149              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 150              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 151              		.file 17 "Core/Inc/periphs/tim.h"
 152              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 153              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 154              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 155              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 156              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 157              		.file 23 "Core/Inc/devs/motor.h"
 158              		.file 24 "Core/Inc/devs/encoder.h"
 159              		.file 25 "Core/Inc/utils/pid_algorithms.h"
 160              		.file 26 "Core/Inc/devs/limit_switch.h"
 161              		.file 27 "Core/Inc/devs/leg.h"
 162              		.file 28 "Core/Inc/periphs/usart.h"
 163              		.file 29 "Core/Inc/periphs/adc.h"
 164              		.file 30 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.cpp
C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s:18     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Prashant\AppData\Local\Temp\ccTDp8hR.s:124    .text.HAL_GPIO_EXTI_Callback:00000070 $d

UNDEFINED SYMBOLS
_ZN7encoder11reset_angleEf
_ZN3leg11reset_angleEf
STEERING_FLAG
steering
ROBOT_START_FLAG
sand_dune_crossed_flag
leg
