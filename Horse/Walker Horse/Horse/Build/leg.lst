ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"leg.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_dcmple
  19              		.global	__aeabi_dcmpge
  20              		.section	.text._ZN3leg9is_raisedEv,"ax",%progbits
  21              		.align	1
  22              		.global	_ZN3leg9is_raisedEv
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu fpv4-sp-d16
  28              	_ZN3leg9is_raisedEv:
  29              	.LFB450:
  30              		.file 1 "Core/Src/devs/leg.cpp"
   1:Core/Src/devs/leg.cpp **** #include "leg.h"
   2:Core/Src/devs/leg.cpp **** 
   3:Core/Src/devs/leg.cpp **** 
   4:Core/Src/devs/leg.cpp **** void leg::set_omega(float omega){
   5:Core/Src/devs/leg.cpp **** 	float gravity_compensator_factor;
   6:Core/Src/devs/leg.cpp **** 	if(!is_raised()){
   7:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle())  * kb_ * omega ;
   8:Core/Src/devs/leg.cpp **** 	}
   9:Core/Src/devs/leg.cpp **** 	else{
  10:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = -cos(encoder__.get_angle())  * kl_ * omega ;
  11:Core/Src/devs/leg.cpp **** 	}
  12:Core/Src/devs/leg.cpp **** 	omega += gravity_compensator_factor;
  13:Core/Src/devs/leg.cpp **** 	float computed_omega = dpid_.compute(omega - encoder__.get_omega(), SAMPLE_TIME);
  14:Core/Src/devs/leg.cpp **** 	motor__[0].set_omega(computed_omega);
  15:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
  16:Core/Src/devs/leg.cpp **** }
  17:Core/Src/devs/leg.cpp **** 
  18:Core/Src/devs/leg.cpp **** Leg_condition leg::is_raised(){
  31              		.loc 1 18 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              	.LVL0:
  36 0000 10B5     		push	{r4, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 2


  41              	.LVL1:
  42              	.LBB44:
  43              	.LBB45:
  44              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor0, motor_config *motor1, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__[0].set_config(motor0);
  26:Core/Inc/devs/leg.h **** 		motor__[1].set_config(motor1);
  27:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  28:Core/Inc/devs/leg.h **** 	}
  29:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  30:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  33:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  34:Core/Inc/devs/leg.h **** 	}
  35:Core/Inc/devs/leg.h **** 
  36:Core/Inc/devs/leg.h **** 	
  37:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kbody, float kleg){kb_ = kbody; kl_ = kleg;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
  41:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  42:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  43:Core/Inc/devs/leg.h **** 
  44:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  45              		.loc 2 46 0
  46 0002 00F14004 		add	r4, r0, #64
  47 0006 2046     		mov	r0, r4
  48              	.LVL2:
  49 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
  50              	.LVL3:
  51              	.LBE45:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 3


  52              	.LBE44:
  19:Core/Src/devs/leg.cpp **** 	float dead_angle = 15*PI/180;
  20:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=(0+dead_angle)) && (this->get_angle()<=(PI-dead_angle)))  ||
  53              		.loc 1 20 0
  54 000c DFED427A 		vldr.32	s15, .L22+48
  55 0010 B4EEE70A 		vcmpe.f32	s0, s15
  56 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  57 0018 0DDB     		blt	.L2
  58              	.LVL4:
  59              	.LBB46:
  60              	.LBB47:
  61              		.loc 2 46 0
  62 001a 2046     		mov	r0, r4
  63 001c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
  64              	.LVL5:
  65              	.LBE47:
  66              	.LBE46:
  67              		.loc 1 20 0
  68 0020 10EE100A 		vmov	r0, s0
  69 0024 FFF7FEFF 		bl	__aeabi_f2d
  70              	.LVL6:
  71 0028 2FA3     		adr	r3, .L22
  72 002a D3E90023 		ldrd	r2, [r3]
  73 002e FFF7FEFF 		bl	__aeabi_dcmple
  74              	.LVL7:
  75 0032 0028     		cmp	r0, #0
  76 0034 4ED1     		bne	.L10
  77              	.L2:
  78              	.LVL8:
  79              	.LBB48:
  80              	.LBB49:
  81              		.loc 2 46 0 discriminator 4
  82 0036 2046     		mov	r0, r4
  83 0038 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
  84              	.LVL9:
  85              	.LBE49:
  86              	.LBE48:
  21:Core/Src/devs/leg.cpp **** 	   ((this->get_angle()<=(-PI-dead_angle)) && (this->get_angle()>=(-2*PI+dead_angle)))){
  87              		.loc 1 21 0 discriminator 4
  88 003c 10EE100A 		vmov	r0, s0
  89 0040 FFF7FEFF 		bl	__aeabi_f2d
  90              	.LVL10:
  20:Core/Src/devs/leg.cpp **** 	   ((this->get_angle()<=(-PI-dead_angle)) && (this->get_angle()>=(-2*PI+dead_angle)))){
  91              		.loc 1 20 0 discriminator 4
  92 0044 2AA3     		adr	r3, .L22+8
  93 0046 D3E90023 		ldrd	r2, [r3]
  94 004a FFF7FEFF 		bl	__aeabi_dcmple
  95              	.LVL11:
  96 004e 60B1     		cbz	r0, .L5
  97              	.LVL12:
  98              	.LBB50:
  99              	.LBB51:
 100              		.loc 2 46 0
 101 0050 2046     		mov	r0, r4
 102 0052 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 103              	.LVL13:
 104              	.LBE51:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 4


 105              	.LBE50:
 106              		.loc 1 21 0
 107 0056 10EE100A 		vmov	r0, s0
 108 005a FFF7FEFF 		bl	__aeabi_f2d
 109              	.LVL14:
 110 005e 26A3     		adr	r3, .L22+16
 111 0060 D3E90023 		ldrd	r2, [r3]
 112 0064 FFF7FEFF 		bl	__aeabi_dcmpge
 113              	.LVL15:
 114 0068 B0BB     		cbnz	r0, .L11
 115              	.L5:
 116              	.LVL16:
 117              	.LBB52:
 118              	.LBB53:
 119              		.loc 2 46 0 discriminator 5
 120 006a 2046     		mov	r0, r4
 121 006c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 122              	.LVL17:
 123              	.LBE53:
 124              	.LBE52:
  22:Core/Src/devs/leg.cpp **** 		return RAISED;
  23:Core/Src/devs/leg.cpp **** 	}
  24:Core/Src/devs/leg.cpp **** 	else if(((this->get_angle()>=(PI+dead_angle)) && (this->get_angle()<=(2*PI-dead_angle)))  ||
 125              		.loc 1 24 0 discriminator 5
 126 0070 10EE100A 		vmov	r0, s0
 127 0074 FFF7FEFF 		bl	__aeabi_f2d
 128              	.LVL18:
 129 0078 21A3     		adr	r3, .L22+24
 130 007a D3E90023 		ldrd	r2, [r3]
 131 007e FFF7FEFF 		bl	__aeabi_dcmpge
 132              	.LVL19:
 133 0082 60B1     		cbz	r0, .L7
 134              	.LVL20:
 135              	.LBB54:
 136              	.LBB55:
 137              		.loc 2 46 0
 138 0084 2046     		mov	r0, r4
 139 0086 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 140              	.LVL21:
 141              	.LBE55:
 142              	.LBE54:
 143              		.loc 1 24 0
 144 008a 10EE100A 		vmov	r0, s0
 145 008e FFF7FEFF 		bl	__aeabi_f2d
 146              	.LVL22:
 147 0092 1DA3     		adr	r3, .L22+32
 148 0094 D3E90023 		ldrd	r2, [r3]
 149 0098 FFF7FEFF 		bl	__aeabi_dcmple
 150              	.LVL23:
 151 009c F0B9     		cbnz	r0, .L12
 152              	.L7:
 153              	.LVL24:
 154              	.LBB56:
 155              	.LBB57:
 156              		.loc 2 46 0 discriminator 4
 157 009e 2046     		mov	r0, r4
 158 00a0 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 5


 159              	.LVL25:
 160              	.LBE57:
 161              	.LBE56:
 162              		.loc 1 24 0 discriminator 4
 163 00a4 DFED1D7A 		vldr.32	s15, .L22+52
 164 00a8 B4EEE70A 		vcmpe.f32	s0, s15
 165 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 166 00b0 16D8     		bhi	.L19
 167              	.LVL26:
 168              	.LBB58:
 169              	.LBB59:
 170              		.loc 2 46 0
 171 00b2 2046     		mov	r0, r4
 172 00b4 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 173              	.LVL27:
 174              	.LBE59:
 175              	.LBE58:
  25:Core/Src/devs/leg.cpp **** 		((this->get_angle()<=(-dead_angle)) && (this->get_angle()>=(-PI+dead_angle)))){
 176              		.loc 1 25 0
 177 00b8 10EE100A 		vmov	r0, s0
 178 00bc FFF7FEFF 		bl	__aeabi_f2d
 179              	.LVL28:
 180 00c0 13A3     		adr	r3, .L22+40
 181 00c2 D3E90023 		ldrd	r2, [r3]
 182 00c6 FFF7FEFF 		bl	__aeabi_dcmpge
 183              	.LVL29:
 184 00ca 08B1     		cbz	r0, .L21
  26:Core/Src/devs/leg.cpp **** 		return FALLEN;
 185              		.loc 1 26 0
 186 00cc 0120     		movs	r0, #1
 187 00ce 02E0     		b	.L4
 188              	.L21:
  27:Core/Src/devs/leg.cpp **** 	}
  28:Core/Src/devs/leg.cpp **** 	else{
  29:Core/Src/devs/leg.cpp **** 		return UNDEFINED;
 189              		.loc 1 29 0
 190 00d0 0220     		movs	r0, #2
 191 00d2 00E0     		b	.L4
 192              	.L10:
  22:Core/Src/devs/leg.cpp **** 	}
 193              		.loc 1 22 0
 194 00d4 0020     		movs	r0, #0
 195              	.L4:
  30:Core/Src/devs/leg.cpp **** 	}
  31:Core/Src/devs/leg.cpp **** }
 196              		.loc 1 31 0
 197 00d6 10BD     		pop	{r4, pc}
 198              	.LVL30:
 199              	.L11:
  22:Core/Src/devs/leg.cpp **** 	}
 200              		.loc 1 22 0
 201 00d8 0020     		movs	r0, #0
 202 00da FCE7     		b	.L4
 203              	.L12:
  26:Core/Src/devs/leg.cpp **** 	}
 204              		.loc 1 26 0
 205 00dc 0120     		movs	r0, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 6


 206 00de FAE7     		b	.L4
 207              	.L19:
  29:Core/Src/devs/leg.cpp **** 	}
 208              		.loc 1 29 0
 209 00e0 0220     		movs	r0, #2
 210 00e2 F8E7     		b	.L4
 211              	.L23:
 212 00e4 AFF30080 		.align	3
 213              	.L22:
 214 00e8 182D440C 		.word	205794584
 215 00ec D1090740 		.word	1074203089
 216 00f0 182D449C 		.word	-1673253608
 217 00f4 253A0BC0 		.word	-1073006043
 218 00f8 182D4430 		.word	809774360
 219 00fc E61518C0 		.word	-1072163354
 220 0100 182D449C 		.word	-1673253608
 221 0104 253A0B40 		.word	1074477605
 222 0108 182D4430 		.word	809774360
 223 010c E6151840 		.word	1075320294
 224 0110 182D440C 		.word	205794584
 225 0114 D10907C0 		.word	-1073280559
 226 0118 920A863E 		.word	1048971922
 227 011c 920A86BE 		.word	-1098511726
 228              		.cfi_endproc
 229              	.LFE450:
 231              		.section	.text._ZN3leg9set_omegaEf,"ax",%progbits
 232              		.align	1
 233              		.global	_ZN3leg9set_omegaEf
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	_ZN3leg9set_omegaEf:
 240              	.LFB449:
   4:Core/Src/devs/leg.cpp **** 	float gravity_compensator_factor;
 241              		.loc 1 4 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              	.LVL31:
 246 0000 38B5     		push	{r3, r4, r5, lr}
 247              	.LCFI1:
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 3, -16
 250              		.cfi_offset 4, -12
 251              		.cfi_offset 5, -8
 252              		.cfi_offset 14, -4
 253 0002 2DED028B 		vpush.64	{d8}
 254              	.LCFI2:
 255              		.cfi_def_cfa_offset 24
 256              		.cfi_offset 80, -24
 257              		.cfi_offset 81, -20
 258 0006 0546     		mov	r5, r0
 259 0008 B0EE408A 		vmov.f32	s16, s0
   6:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle())  * kb_ * omega ;
 260              		.loc 1 6 0
 261 000c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 7


 262              	.LVL32:
 263 0010 0028     		cmp	r0, #0
 264 0012 4ED0     		beq	.L35
  10:Core/Src/devs/leg.cpp **** 	}
 265              		.loc 1 10 0
 266 0014 05F14000 		add	r0, r5, #64
 267 0018 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 268              	.LVL33:
 269              	.LBB76:
 270              	.LBB77:
 271              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 8


  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 9


 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 10


 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 272              		.loc 3 185 0
 273 001c FFF7FEFF 		bl	cosf
 274              	.LVL34:
 275              	.LBE77:
 276              	.LBE76:
  10:Core/Src/devs/leg.cpp **** 	}
 277              		.loc 1 10 0
 278 0020 D5ED157A 		vldr.32	s15, [r5, #84]
 279 0024 20EE670A 		vnmul.f32	s0, s0, s15
 280 0028 20EE080A 		vmul.f32	s0, s0, s16
 281              	.LVL35:
 282              	.L26:
  12:Core/Src/devs/leg.cpp **** 	float computed_omega = dpid_.compute(omega - encoder__.get_omega(), SAMPLE_TIME);
 283              		.loc 1 12 0
 284 002c 30EE088A 		vadd.f32	s16, s0, s16
 285              	.LVL36:
  13:Core/Src/devs/leg.cpp **** 	motor__[0].set_omega(computed_omega);
 286              		.loc 1 13 0
 287 0030 05F11404 		add	r4, r5, #20
 288 0034 05F14000 		add	r0, r5, #64
 289 0038 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 290              	.LVL37:
 291 003c 38EE400A 		vsub.f32	s0, s16, s0
 292              	.LVL38:
 293              	.LBB78:
 294              	.LBB79:
 295              	.LBB80:
 296              	.LBB81:
 297              		.file 4 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 11


   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
 298              		.loc 4 20 0
 299 0040 94ED016A 		vldr.32	s12, [r4, #4]
 300              	.LVL39:
 301              	.LBE81:
 302              	.LBE80:
 303              	.LBB82:
 304              	.LBB83:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 305              		.loc 4 21 0
 306 0044 94ED027A 		vldr.32	s14, [r4, #8]
 307              	.LVL40:
 308              	.LBE83:
 309              	.LBE82:
 310              	.LBB84:
 311              	.LBB85:
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 312              		.loc 4 22 0
 313 0048 D4ED037A 		vldr.32	s15, [r4, #12]
 314              	.LVL41:
 315              	.LBE85:
 316              	.LBE84:
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 12


  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  78:Core/Inc/utils/pid_algorithms.h **** 
  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
 317              		.loc 4 81 0
 318 004c DFED2B5A 		vldr.32	s11, .L37
 319 0050 C7EEA56A 		vdiv.f32	s13, s15, s11
 320              	.LVL42:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
 321              		.loc 4 83 0
 322 0054 76EE267A 		vadd.f32	s15, s12, s13
 323              	.LVL43:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
 324              		.loc 4 84 0
 325 0058 27EE257A 		vmul.f32	s14, s14, s11
 326 005c 37EE467A 		vsub.f32	s14, s14, s12
 327 0060 36EEA66A 		vadd.f32	s12, s13, s13
 328 0064 37EE467A 		vsub.f32	s14, s14, s12
 329              	.LVL44:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 13


  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
 330              		.loc 4 87 0
 331 0068 60EE277A 		vmul.f32	s15, s0, s15
 332              	.LVL45:
 333 006c 94ED076A 		vldr.32	s12, [r4, #28]
 334 0070 27EE067A 		vmul.f32	s14, s14, s12
 335              	.LVL46:
 336 0074 77EE877A 		vadd.f32	s15, s15, s14
 337 0078 94ED087A 		vldr.32	s14, [r4, #32]
 338 007c 66EE876A 		vmul.f32	s13, s13, s14
 339              	.LVL47:
 340 0080 77EEA67A 		vadd.f32	s15, s15, s13
 341 0084 94ED067A 		vldr.32	s14, [r4, #24]
 342 0088 77EE877A 		vadd.f32	s15, s15, s14
 343 008c C4ED067A 		vstr.32	s15, [r4, #24]
 344              	.LVL48:
 345              	.LBB86:
 346              	.LBB87:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 347              		.loc 4 30 0
 348 0090 94ED047A 		vldr.32	s14, [r4, #16]
 349              	.LVL49:
 350              	.LBE87:
 351              	.LBE86:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 352              		.loc 4 89 0
 353 0094 F4EEC77A 		vcmpe.f32	s15, s14
 354 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 355 009c 16DC     		bgt	.L36
 356              	.LVL50:
 357              	.LBB88:
 358              	.LBB89:
  31:Core/Inc/utils/pid_algorithms.h **** 
 359              		.loc 4 31 0
 360 009e 94ED057A 		vldr.32	s14, [r4, #20]
 361              	.LVL51:
 362              	.LBE89:
 363              	.LBE88:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 364              		.loc 4 93 0
 365 00a2 F4EEC77A 		vcmpe.f32	s15, s14
 366 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 367 00aa 11D5     		bpl	.L29
  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 368              		.loc 4 95 0
 369 00ac 84ED067A 		vstr.32	s14, [r4, #24]
 370 00b0 0EE0     		b	.L29
 371              	.LVL52:
 372              	.L35:
 373              	.LBE79:
 374              	.LBE78:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 14


   7:Core/Src/devs/leg.cpp **** 	}
 375              		.loc 1 7 0
 376 00b2 05F14000 		add	r0, r5, #64
 377 00b6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 378              	.LVL53:
 379              	.LBB91:
 380              	.LBB92:
 381              		.loc 3 185 0
 382 00ba FFF7FEFF 		bl	cosf
 383              	.LVL54:
 384              	.LBE92:
 385              	.LBE91:
   7:Core/Src/devs/leg.cpp **** 	}
 386              		.loc 1 7 0
 387 00be D5ED147A 		vldr.32	s15, [r5, #80]
 388 00c2 27EE800A 		vmul.f32	s0, s15, s0
 389 00c6 20EE080A 		vmul.f32	s0, s0, s16
 390              	.LVL55:
 391 00ca AFE7     		b	.L26
 392              	.LVL56:
 393              	.L36:
 394              	.LBB93:
 395              	.LBB90:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 396              		.loc 4 91 0
 397 00cc 84ED067A 		vstr.32	s14, [r4, #24]
 398              	.L29:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 399              		.loc 4 98 0
 400 00d0 84ED086A 		vstr.32	s12, [r4, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 401              		.loc 4 99 0
 402 00d4 84ED070A 		vstr.32	s0, [r4, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 403              		.loc 4 101 0
 404 00d8 94ED068A 		vldr.32	s16, [r4, #24]
 405              	.LVL57:
 406              	.LBE90:
 407              	.LBE93:
  14:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
 408              		.loc 1 14 0
 409 00dc B0EE480A 		vmov.f32	s0, s16
 410 00e0 05F13800 		add	r0, r5, #56
 411 00e4 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 412              	.LVL58:
  15:Core/Src/devs/leg.cpp **** }
 413              		.loc 1 15 0
 414 00e8 B0EE480A 		vmov.f32	s0, s16
 415 00ec 05F13C00 		add	r0, r5, #60
 416 00f0 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 417              	.LVL59:
  16:Core/Src/devs/leg.cpp **** 
 418              		.loc 1 16 0
 419 00f4 BDEC028B 		vldm	sp!, {d8}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 15


 420              	.LCFI3:
 421              		.cfi_restore 80
 422              		.cfi_restore 81
 423              		.cfi_def_cfa_offset 16
 424 00f8 38BD     		pop	{r3, r4, r5, pc}
 425              	.LVL60:
 426              	.L38:
 427 00fa 00BF     		.align	2
 428              	.L37:
 429 00fc 0AD7233C 		.word	1008981770
 430              		.cfi_endproc
 431              	.LFE449:
 433              		.section	.text._ZN3leg26is_raised_without_deadzoneEv,"ax",%progbits
 434              		.align	1
 435              		.global	_ZN3leg26is_raised_without_deadzoneEv
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	_ZN3leg26is_raised_without_deadzoneEv:
 442              	.LFB451:
  32:Core/Src/devs/leg.cpp **** 
  33:Core/Src/devs/leg.cpp **** bool leg::is_raised_without_deadzone(){
 443              		.loc 1 33 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              	.LVL61:
 448 0000 10B5     		push	{r4, lr}
 449              	.LCFI4:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 453              	.LVL62:
 454              	.LBB94:
 455              	.LBB95:
 456              		.loc 2 46 0
 457 0002 00F14004 		add	r4, r0, #64
 458 0006 2046     		mov	r0, r4
 459              	.LVL63:
 460 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 461              	.LVL64:
 462              	.LBE95:
 463              	.LBE94:
  34:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=0) && (this->get_angle()<=(PI)))  ||  ((this->get_angle()<=(-PI)) && (this
 464              		.loc 1 34 0
 465 000c B5EEC00A 		vcmpe.f32	s0, #0
 466 0010 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 467 0014 0CDB     		blt	.L40
 468              	.LVL65:
 469              	.LBB96:
 470              	.LBB97:
 471              		.loc 2 46 0
 472 0016 2046     		mov	r0, r4
 473 0018 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 474              	.LVL66:
 475              	.LBE97:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 16


 476              	.LBE96:
 477              		.loc 1 34 0
 478 001c 10EE100A 		vmov	r0, s0
 479 0020 FFF7FEFF 		bl	__aeabi_f2d
 480              	.LVL67:
 481 0024 14A3     		adr	r3, .L52
 482 0026 D3E90023 		ldrd	r2, [r3]
 483 002a FFF7FEFF 		bl	__aeabi_dcmple
 484              	.LVL68:
 485 002e F0B9     		cbnz	r0, .L44
 486              	.L40:
 487              	.LVL69:
 488              	.LBB98:
 489              	.LBB99:
 490              		.loc 2 46 0 discriminator 4
 491 0030 2046     		mov	r0, r4
 492 0032 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 493              	.LVL70:
 494              	.LBE99:
 495              	.LBE98:
 496              		.loc 1 34 0 discriminator 4
 497 0036 10EE100A 		vmov	r0, s0
 498 003a FFF7FEFF 		bl	__aeabi_f2d
 499              	.LVL71:
 500 003e 10A3     		adr	r3, .L52+8
 501 0040 D3E90023 		ldrd	r2, [r3]
 502 0044 FFF7FEFF 		bl	__aeabi_dcmple
 503              	.LVL72:
 504 0048 08B9     		cbnz	r0, .L51
  35:Core/Src/devs/leg.cpp **** 		return true;
  36:Core/Src/devs/leg.cpp **** 	}
  37:Core/Src/devs/leg.cpp **** 	else{
  38:Core/Src/devs/leg.cpp **** 		return false;
 505              		.loc 1 38 0
 506 004a 0020     		movs	r0, #0
 507              	.L42:
  39:Core/Src/devs/leg.cpp **** 	}
  40:Core/Src/devs/leg.cpp **** 
  41:Core/Src/devs/leg.cpp **** }
 508              		.loc 1 41 0
 509 004c 10BD     		pop	{r4, pc}
 510              	.LVL73:
 511              	.L51:
 512              	.LBB100:
 513              	.LBB101:
 514              		.loc 2 46 0
 515 004e 2046     		mov	r0, r4
 516 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 517              	.LVL74:
 518              	.LBE101:
 519              	.LBE100:
  34:Core/Src/devs/leg.cpp **** 		return true;
 520              		.loc 1 34 0
 521 0054 10EE100A 		vmov	r0, s0
 522 0058 FFF7FEFF 		bl	__aeabi_f2d
 523              	.LVL75:
 524 005c 0AA3     		adr	r3, .L52+16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 17


 525 005e D3E90023 		ldrd	r2, [r3]
 526 0062 FFF7FEFF 		bl	__aeabi_dcmpge
 527              	.LVL76:
 528 0066 0028     		cmp	r0, #0
 529 0068 F0D0     		beq	.L42
  35:Core/Src/devs/leg.cpp **** 		return true;
 530              		.loc 1 35 0
 531 006a 0120     		movs	r0, #1
 532 006c EEE7     		b	.L42
 533              	.L44:
 534 006e 0120     		movs	r0, #1
 535 0070 ECE7     		b	.L42
 536              	.L53:
 537 0072 00BFAFF3 		.align	3
 537      0080
 538              	.L52:
 539 0078 182D4454 		.word	1413754136
 540 007c FB210940 		.word	1074340347
 541 0080 182D4454 		.word	1413754136
 542 0084 FB2109C0 		.word	-1073143301
 543 0088 182D4454 		.word	1413754136
 544 008c FB2119C0 		.word	-1072094725
 545              		.cfi_endproc
 546              	.LFE451:
 548              		.section	.text._ZN3leg11reset_angleEf,"ax",%progbits
 549              		.align	1
 550              		.global	_ZN3leg11reset_angleEf
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu fpv4-sp-d16
 556              	_ZN3leg11reset_angleEf:
 557              	.LFB452:
  42:Core/Src/devs/leg.cpp **** 
  43:Core/Src/devs/leg.cpp **** void leg::reset_angle(float angle_in_radians){
 558              		.loc 1 43 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL77:
 563 0000 08B5     		push	{r3, lr}
 564              	.LCFI5:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 3, -8
 567              		.cfi_offset 14, -4
  44:Core/Src/devs/leg.cpp **** 	encoder__.reset_angle(angle_in_radians);
 568              		.loc 1 44 0
 569 0002 4030     		adds	r0, r0, #64
 570              	.LVL78:
 571 0004 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 572              	.LVL79:
  45:Core/Src/devs/leg.cpp **** }
 573              		.loc 1 45 0
 574 0008 08BD     		pop	{r3, pc}
 575              		.cfi_endproc
 576              	.LFE452:
 578              		.section	.text._ZN3leg15calculate_omegaEv,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 18


 579              		.align	1
 580              		.global	_ZN3leg15calculate_omegaEv
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 584              		.fpu fpv4-sp-d16
 586              	_ZN3leg15calculate_omegaEv:
 587              	.LFB453:
  46:Core/Src/devs/leg.cpp **** 
  47:Core/Src/devs/leg.cpp **** void leg::calculate_omega(){
 588              		.loc 1 47 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              	.LVL80:
 593 0000 08B5     		push	{r3, lr}
 594              	.LCFI6:
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 3, -8
 597              		.cfi_offset 14, -4
  48:Core/Src/devs/leg.cpp **** 	encoder__.calculate_omega();
 598              		.loc 1 48 0
 599 0002 4030     		adds	r0, r0, #64
 600              	.LVL81:
 601 0004 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 602              	.LVL82:
  49:Core/Src/devs/leg.cpp **** }
 603              		.loc 1 49 0
 604 0008 08BD     		pop	{r3, pc}
 605              		.cfi_endproc
 606              	.LFE453:
 608              		.text
 609              	.Letext0:
 610              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 611              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 612              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 613              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 614              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 615              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 616              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 617              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 618              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 619              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 620              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 621              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 622              		.file 17 "Core/Inc/periphs/tim.h"
 623              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 624              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 625              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 626              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 627              		.file 22 "Core/Inc/devs/motor.h"
 628              		.file 23 "Core/Inc/devs/encoder.h"
 629              		.file 24 "Core/Inc/devs/limit_switch.h"
 630              		.file 25 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 leg.cpp
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:21     .text._ZN3leg9is_raisedEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:28     .text._ZN3leg9is_raisedEv:00000000 _ZN3leg9is_raisedEv
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:214    .text._ZN3leg9is_raisedEv:000000e8 $d
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:232    .text._ZN3leg9set_omegaEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:239    .text._ZN3leg9set_omegaEf:00000000 _ZN3leg9set_omegaEf
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:429    .text._ZN3leg9set_omegaEf:000000fc $d
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:434    .text._ZN3leg26is_raised_without_deadzoneEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:441    .text._ZN3leg26is_raised_without_deadzoneEv:00000000 _ZN3leg26is_raised_without_deadzoneEv
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:539    .text._ZN3leg26is_raised_without_deadzoneEv:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:549    .text._ZN3leg11reset_angleEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:556    .text._ZN3leg11reset_angleEf:00000000 _ZN3leg11reset_angleEf
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:579    .text._ZN3leg15calculate_omegaEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEgvo9a.s:586    .text._ZN3leg15calculate_omegaEv:00000000 _ZN3leg15calculate_omegaEv

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dcmple
__aeabi_dcmpge
_ZN7encoder9get_angleEv
cosf
_ZN7encoder9get_omegaEv
_ZN5motor9set_omegaEf
_ZN7encoder11reset_angleEf
_ZN7encoder15calculate_omegaEv
