ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"leg.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN3leg4rampEf,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN3leg4rampEf
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN3leg4rampEf:
  26              	.LFB450:
  27              		.file 1 "Core/Src/devs/leg.cpp"
   1:Core/Src/devs/leg.cpp **** #include "leg.h"
   2:Core/Src/devs/leg.cpp **** static float ramped_value = 0;
   3:Core/Src/devs/leg.cpp **** 
   4:Core/Src/devs/leg.cpp **** void leg::set_omega(float omega){
   5:Core/Src/devs/leg.cpp **** 	float gravity_compensator_factor;
   6:Core/Src/devs/leg.cpp **** 	if(!is_raised()){
   7:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle())  * kb_ * omega ;
   8:Core/Src/devs/leg.cpp **** 	}
   9:Core/Src/devs/leg.cpp **** 	else{
  10:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = -cos(encoder__.get_angle())  * kl_ * omega ;
  11:Core/Src/devs/leg.cpp **** 	}
  12:Core/Src/devs/leg.cpp **** 	omega += gravity_compensator_factor;
  13:Core/Src/devs/leg.cpp **** 	if (omega>motor__[0].get_max_omega())
  14:Core/Src/devs/leg.cpp **** 	{
  15:Core/Src/devs/leg.cpp **** 		omega = motor__[0].get_max_omega();
  16:Core/Src/devs/leg.cpp **** 	}
  17:Core/Src/devs/leg.cpp **** 	omega = ramp(omega);
  18:Core/Src/devs/leg.cpp **** 	float computed_omega = dpid_.compute(omega - encoder__.get_omega(), SAMPLE_TIME);
  19:Core/Src/devs/leg.cpp **** 	motor__[0].set_omega(computed_omega);
  20:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
  21:Core/Src/devs/leg.cpp **** }
  22:Core/Src/devs/leg.cpp **** 
  23:Core/Src/devs/leg.cpp **** float leg::ramp(float omega){
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  24:Core/Src/devs/leg.cpp **** 	if(ramped_value < omega){
  34              		.loc 1 24 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 2


  35 0000 0C4B     		ldr	r3, .L8
  36 0002 D3ED007A 		vldr.32	s15, [r3]
  37 0006 F4EEC07A 		vcmpe.f32	s15, s0
  38 000a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  39 000e 0AD4     		bmi	.L7
  25:Core/Src/devs/leg.cpp **** 		ramped_value += 3;
  26:Core/Src/devs/leg.cpp **** 	}
  27:Core/Src/devs/leg.cpp **** 	else{
  28:Core/Src/devs/leg.cpp **** 		ramped_value -= 3;
  40              		.loc 1 28 0
  41 0010 B0EE087A 		vmov.f32	s14, #3.0e+0
  42 0014 77EEC77A 		vsub.f32	s15, s15, s14
  43 0018 064B     		ldr	r3, .L8
  44 001a C3ED007A 		vstr.32	s15, [r3]
  45              	.L4:
  29:Core/Src/devs/leg.cpp **** 	}
  30:Core/Src/devs/leg.cpp **** 	return ramped_value;
  31:Core/Src/devs/leg.cpp **** }
  46              		.loc 1 31 0
  47 001e 054B     		ldr	r3, .L8
  48 0020 93ED000A 		vldr.32	s0, [r3]
  49              	.LVL1:
  50 0024 7047     		bx	lr
  51              	.LVL2:
  52              	.L7:
  25:Core/Src/devs/leg.cpp **** 		ramped_value += 3;
  53              		.loc 1 25 0
  54 0026 B0EE087A 		vmov.f32	s14, #3.0e+0
  55 002a 77EE877A 		vadd.f32	s15, s15, s14
  56 002e C3ED007A 		vstr.32	s15, [r3]
  57 0032 F4E7     		b	.L4
  58              	.L9:
  59              		.align	2
  60              	.L8:
  61 0034 00000000 		.word	.LANCHOR0
  62              		.cfi_endproc
  63              	.LFE450:
  65              		.global	__aeabi_f2d
  66              		.global	__aeabi_dcmple
  67              		.global	__aeabi_dcmpge
  68              		.section	.text._ZN3leg9is_raisedEv,"ax",%progbits
  69              		.align	1
  70              		.global	_ZN3leg9is_raisedEv
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	_ZN3leg9is_raisedEv:
  77              	.LFB451:
  32:Core/Src/devs/leg.cpp **** 
  33:Core/Src/devs/leg.cpp **** Leg_condition leg::is_raised(){
  78              		.loc 1 33 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              	.LVL3:
  83 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 3


  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
  88              	.LVL4:
  89              	.LBB48:
  90              	.LBB49:
  91              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor0, motor_config *motor1, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__[0].set_config(motor0);
  26:Core/Inc/devs/leg.h **** 		motor__[1].set_config(motor1);
  27:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  28:Core/Inc/devs/leg.h **** 	}
  29:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  30:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  33:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  34:Core/Inc/devs/leg.h **** 	}
  35:Core/Inc/devs/leg.h **** 
  36:Core/Inc/devs/leg.h **** 	
  37:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  38:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  39:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kbody, float kleg){kb_ = kbody; kl_ = kleg;}
  40:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  92              		.loc 2 47 0
  93 0002 00F14004 		add	r4, r0, #64
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 4


  94 0006 2046     		mov	r0, r4
  95              	.LVL5:
  96 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
  97              	.LVL6:
  98              	.LBE49:
  99              	.LBE48:
  34:Core/Src/devs/leg.cpp **** 	float dead_angle = 15*PI/180;
  35:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=(0+dead_angle)) && (this->get_angle()<=(PI-dead_angle)))  ||
 100              		.loc 1 35 0
 101 000c DFED427A 		vldr.32	s15, .L31+48
 102 0010 B4EEE70A 		vcmpe.f32	s0, s15
 103 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 104 0018 0DDB     		blt	.L11
 105              	.LVL7:
 106              	.LBB50:
 107              	.LBB51:
 108              		.loc 2 47 0
 109 001a 2046     		mov	r0, r4
 110 001c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 111              	.LVL8:
 112              	.LBE51:
 113              	.LBE50:
 114              		.loc 1 35 0
 115 0020 10EE100A 		vmov	r0, s0
 116 0024 FFF7FEFF 		bl	__aeabi_f2d
 117              	.LVL9:
 118 0028 2FA3     		adr	r3, .L31
 119 002a D3E90023 		ldrd	r2, [r3]
 120 002e FFF7FEFF 		bl	__aeabi_dcmple
 121              	.LVL10:
 122 0032 0028     		cmp	r0, #0
 123 0034 4ED1     		bne	.L19
 124              	.L11:
 125              	.LVL11:
 126              	.LBB52:
 127              	.LBB53:
 128              		.loc 2 47 0 discriminator 4
 129 0036 2046     		mov	r0, r4
 130 0038 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 131              	.LVL12:
 132              	.LBE53:
 133              	.LBE52:
  36:Core/Src/devs/leg.cpp **** 	   ((this->get_angle()<=(-PI-dead_angle)) && (this->get_angle()>=(-2*PI+dead_angle)))){
 134              		.loc 1 36 0 discriminator 4
 135 003c 10EE100A 		vmov	r0, s0
 136 0040 FFF7FEFF 		bl	__aeabi_f2d
 137              	.LVL13:
  35:Core/Src/devs/leg.cpp **** 	   ((this->get_angle()<=(-PI-dead_angle)) && (this->get_angle()>=(-2*PI+dead_angle)))){
 138              		.loc 1 35 0 discriminator 4
 139 0044 2AA3     		adr	r3, .L31+8
 140 0046 D3E90023 		ldrd	r2, [r3]
 141 004a FFF7FEFF 		bl	__aeabi_dcmple
 142              	.LVL14:
 143 004e 60B1     		cbz	r0, .L14
 144              	.LVL15:
 145              	.LBB54:
 146              	.LBB55:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 5


 147              		.loc 2 47 0
 148 0050 2046     		mov	r0, r4
 149 0052 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 150              	.LVL16:
 151              	.LBE55:
 152              	.LBE54:
 153              		.loc 1 36 0
 154 0056 10EE100A 		vmov	r0, s0
 155 005a FFF7FEFF 		bl	__aeabi_f2d
 156              	.LVL17:
 157 005e 26A3     		adr	r3, .L31+16
 158 0060 D3E90023 		ldrd	r2, [r3]
 159 0064 FFF7FEFF 		bl	__aeabi_dcmpge
 160              	.LVL18:
 161 0068 B0BB     		cbnz	r0, .L20
 162              	.L14:
 163              	.LVL19:
 164              	.LBB56:
 165              	.LBB57:
 166              		.loc 2 47 0 discriminator 5
 167 006a 2046     		mov	r0, r4
 168 006c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 169              	.LVL20:
 170              	.LBE57:
 171              	.LBE56:
  37:Core/Src/devs/leg.cpp **** 		return RAISED;
  38:Core/Src/devs/leg.cpp **** 	}
  39:Core/Src/devs/leg.cpp **** 	else if(((this->get_angle()>=(PI+dead_angle)) && (this->get_angle()<=(2*PI-dead_angle)))  ||
 172              		.loc 1 39 0 discriminator 5
 173 0070 10EE100A 		vmov	r0, s0
 174 0074 FFF7FEFF 		bl	__aeabi_f2d
 175              	.LVL21:
 176 0078 21A3     		adr	r3, .L31+24
 177 007a D3E90023 		ldrd	r2, [r3]
 178 007e FFF7FEFF 		bl	__aeabi_dcmpge
 179              	.LVL22:
 180 0082 60B1     		cbz	r0, .L16
 181              	.LVL23:
 182              	.LBB58:
 183              	.LBB59:
 184              		.loc 2 47 0
 185 0084 2046     		mov	r0, r4
 186 0086 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 187              	.LVL24:
 188              	.LBE59:
 189              	.LBE58:
 190              		.loc 1 39 0
 191 008a 10EE100A 		vmov	r0, s0
 192 008e FFF7FEFF 		bl	__aeabi_f2d
 193              	.LVL25:
 194 0092 1DA3     		adr	r3, .L31+32
 195 0094 D3E90023 		ldrd	r2, [r3]
 196 0098 FFF7FEFF 		bl	__aeabi_dcmple
 197              	.LVL26:
 198 009c F0B9     		cbnz	r0, .L21
 199              	.L16:
 200              	.LVL27:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 6


 201              	.LBB60:
 202              	.LBB61:
 203              		.loc 2 47 0 discriminator 4
 204 009e 2046     		mov	r0, r4
 205 00a0 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 206              	.LVL28:
 207              	.LBE61:
 208              	.LBE60:
 209              		.loc 1 39 0 discriminator 4
 210 00a4 DFED1D7A 		vldr.32	s15, .L31+52
 211 00a8 B4EEE70A 		vcmpe.f32	s0, s15
 212 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 213 00b0 16D8     		bhi	.L28
 214              	.LVL29:
 215              	.LBB62:
 216              	.LBB63:
 217              		.loc 2 47 0
 218 00b2 2046     		mov	r0, r4
 219 00b4 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 220              	.LVL30:
 221              	.LBE63:
 222              	.LBE62:
  40:Core/Src/devs/leg.cpp **** 		((this->get_angle()<=(-dead_angle)) && (this->get_angle()>=(-PI+dead_angle)))){
 223              		.loc 1 40 0
 224 00b8 10EE100A 		vmov	r0, s0
 225 00bc FFF7FEFF 		bl	__aeabi_f2d
 226              	.LVL31:
 227 00c0 13A3     		adr	r3, .L31+40
 228 00c2 D3E90023 		ldrd	r2, [r3]
 229 00c6 FFF7FEFF 		bl	__aeabi_dcmpge
 230              	.LVL32:
 231 00ca 08B1     		cbz	r0, .L30
  41:Core/Src/devs/leg.cpp **** 		return FALLEN;
 232              		.loc 1 41 0
 233 00cc 0120     		movs	r0, #1
 234 00ce 02E0     		b	.L13
 235              	.L30:
  42:Core/Src/devs/leg.cpp **** 	}
  43:Core/Src/devs/leg.cpp **** 	else{
  44:Core/Src/devs/leg.cpp **** 		return UNDEFINED;
 236              		.loc 1 44 0
 237 00d0 0220     		movs	r0, #2
 238 00d2 00E0     		b	.L13
 239              	.L19:
  37:Core/Src/devs/leg.cpp **** 	}
 240              		.loc 1 37 0
 241 00d4 0020     		movs	r0, #0
 242              	.L13:
  45:Core/Src/devs/leg.cpp **** 	}
  46:Core/Src/devs/leg.cpp **** }
 243              		.loc 1 46 0
 244 00d6 10BD     		pop	{r4, pc}
 245              	.LVL33:
 246              	.L20:
  37:Core/Src/devs/leg.cpp **** 	}
 247              		.loc 1 37 0
 248 00d8 0020     		movs	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 7


 249 00da FCE7     		b	.L13
 250              	.L21:
  41:Core/Src/devs/leg.cpp **** 	}
 251              		.loc 1 41 0
 252 00dc 0120     		movs	r0, #1
 253 00de FAE7     		b	.L13
 254              	.L28:
  44:Core/Src/devs/leg.cpp **** 	}
 255              		.loc 1 44 0
 256 00e0 0220     		movs	r0, #2
 257 00e2 F8E7     		b	.L13
 258              	.L32:
 259 00e4 AFF30080 		.align	3
 260              	.L31:
 261 00e8 182D440C 		.word	205794584
 262 00ec D1090740 		.word	1074203089
 263 00f0 182D449C 		.word	-1673253608
 264 00f4 253A0BC0 		.word	-1073006043
 265 00f8 182D4430 		.word	809774360
 266 00fc E61518C0 		.word	-1072163354
 267 0100 182D449C 		.word	-1673253608
 268 0104 253A0B40 		.word	1074477605
 269 0108 182D4430 		.word	809774360
 270 010c E6151840 		.word	1075320294
 271 0110 182D440C 		.word	205794584
 272 0114 D10907C0 		.word	-1073280559
 273 0118 920A863E 		.word	1048971922
 274 011c 920A86BE 		.word	-1098511726
 275              		.cfi_endproc
 276              	.LFE451:
 278              		.section	.text._ZN3leg9set_omegaEf,"ax",%progbits
 279              		.align	1
 280              		.global	_ZN3leg9set_omegaEf
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu fpv4-sp-d16
 286              	_ZN3leg9set_omegaEf:
 287              	.LFB449:
   4:Core/Src/devs/leg.cpp **** 	float gravity_compensator_factor;
 288              		.loc 1 4 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              	.LVL34:
 293 0000 38B5     		push	{r3, r4, r5, lr}
 294              	.LCFI1:
 295              		.cfi_def_cfa_offset 16
 296              		.cfi_offset 3, -16
 297              		.cfi_offset 4, -12
 298              		.cfi_offset 5, -8
 299              		.cfi_offset 14, -4
 300 0002 2DED028B 		vpush.64	{d8}
 301              	.LCFI2:
 302              		.cfi_def_cfa_offset 24
 303              		.cfi_offset 80, -24
 304              		.cfi_offset 81, -20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 8


 305 0006 0546     		mov	r5, r0
 306 0008 B0EE408A 		vmov.f32	s16, s0
   6:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle())  * kb_ * omega ;
 307              		.loc 1 6 0
 308 000c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 309              	.LVL35:
 310 0010 0028     		cmp	r0, #0
 311 0012 5BD1     		bne	.L34
   7:Core/Src/devs/leg.cpp **** 	}
 312              		.loc 1 7 0
 313 0014 05F14000 		add	r0, r5, #64
 314 0018 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 315              	.LVL36:
 316              	.LBB82:
 317              	.LBB83:
 318              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 9


  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 10


  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 11


 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 319              		.loc 3 185 0
 320 001c FFF7FEFF 		bl	cosf
 321              	.LVL37:
 322              	.LBE83:
 323              	.LBE82:
   7:Core/Src/devs/leg.cpp **** 	}
 324              		.loc 1 7 0
 325 0020 D5ED147A 		vldr.32	s15, [r5, #80]
 326 0024 67EE807A 		vmul.f32	s15, s15, s0
 327 0028 67EE887A 		vmul.f32	s15, s15, s16
 328              	.LVL38:
 329              	.L35:
  12:Core/Src/devs/leg.cpp **** 	if (omega>motor__[0].get_max_omega())
 330              		.loc 1 12 0
 331 002c 77EE887A 		vadd.f32	s15, s15, s16
 332              	.LVL39:
 333              	.LBB84:
 334              	.LBB85:
 335              		.file 4 "Core/Inc/devs/motor.h"
   1:Core/Inc/devs/motor.h **** #ifndef _MOTOR_H_
   2:Core/Inc/devs/motor.h **** #define _MOTOR_H_
   3:Core/Inc/devs/motor.h **** 
   4:Core/Inc/devs/motor.h **** #include "stm32f4xx_hal.h"
   5:Core/Inc/devs/motor.h **** #include "tim.h"
   6:Core/Inc/devs/motor.h **** #include <math.h>
   7:Core/Inc/devs/motor.h **** 
   8:Core/Inc/devs/motor.h **** enum Direction{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 12


   9:Core/Inc/devs/motor.h **** 	CLOCKWISE,
  10:Core/Inc/devs/motor.h **** 	ANTICLOCKWISE,
  11:Core/Inc/devs/motor.h **** 	STOP
  12:Core/Inc/devs/motor.h **** };
  13:Core/Inc/devs/motor.h **** 
  14:Core/Inc/devs/motor.h **** struct motor_config{
  15:Core/Inc/devs/motor.h **** 	float max_omega;
  16:Core/Inc/devs/motor.h **** 	float tolerance;
  17:Core/Inc/devs/motor.h **** 
  18:Core/Inc/devs/motor.h **** 	GPIO_TypeDef *in1_port;	
  19:Core/Inc/devs/motor.h ****         uint16_t in1_pin;
  20:Core/Inc/devs/motor.h ****         GPIO_TypeDef *in2_port;
  21:Core/Inc/devs/motor.h ****         uint16_t in2_pin;
  22:Core/Inc/devs/motor.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  23:Core/Inc/devs/motor.h ****         uint32_t channel;               // PWM Channel
  24:Core/Inc/devs/motor.h **** };
  25:Core/Inc/devs/motor.h **** 
  26:Core/Inc/devs/motor.h **** class motor
  27:Core/Inc/devs/motor.h **** {
  28:Core/Inc/devs/motor.h **** public:
  29:Core/Inc/devs/motor.h **** 	motor(){motor_ = 0;}
  30:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
  31:Core/Inc/devs/motor.h **** 	motor(motor &&) = default;
  32:Core/Inc/devs/motor.h **** 	motor(const motor &) = default;
  33:Core/Inc/devs/motor.h **** 	motor &operator=(motor &&) = default;
  34:Core/Inc/devs/motor.h **** 	motor &operator=(const motor &) = default;
  35:Core/Inc/devs/motor.h **** 	~motor(){}
  36:Core/Inc/devs/motor.h ****         void set_config(motor_config *motor) { motor_ = motor;}
  37:Core/Inc/devs/motor.h **** 	float get_max_omega(){return motor_->max_omega;}
 336              		.loc 4 37 0
 337 0030 AB6B     		ldr	r3, [r5, #56]
 338 0032 93ED000A 		vldr.32	s0, [r3]
 339              	.LVL40:
 340              	.LBE85:
 341              	.LBE84:
  13:Core/Src/devs/leg.cpp **** 	{
 342              		.loc 1 13 0
 343 0036 B4EEE70A 		vcmpe.f32	s0, s15
 344 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 345 003e 52D5     		bpl	.L45
 346              	.L36:
 347              	.LVL41:
  17:Core/Src/devs/leg.cpp **** 	float computed_omega = dpid_.compute(omega - encoder__.get_omega(), SAMPLE_TIME);
 348              		.loc 1 17 0
 349 0040 2846     		mov	r0, r5
 350 0042 FFF7FEFF 		bl	_ZN3leg4rampEf
 351              	.LVL42:
 352 0046 B0EE408A 		vmov.f32	s16, s0
 353              	.LVL43:
  18:Core/Src/devs/leg.cpp **** 	motor__[0].set_omega(computed_omega);
 354              		.loc 1 18 0
 355 004a 05F11404 		add	r4, r5, #20
 356 004e 05F14000 		add	r0, r5, #64
 357 0052 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 358              	.LVL44:
 359 0056 38EE400A 		vsub.f32	s0, s16, s0
 360              	.LVL45:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 13


 361              	.LBB86:
 362              	.LBB87:
 363              	.LBB88:
 364              	.LBB89:
 365              		.file 5 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
 366              		.loc 5 20 0
 367 005a 94ED016A 		vldr.32	s12, [r4, #4]
 368              	.LVL46:
 369              	.LBE89:
 370              	.LBE88:
 371              	.LBB90:
 372              	.LBB91:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 373              		.loc 5 21 0
 374 005e 94ED027A 		vldr.32	s14, [r4, #8]
 375              	.LVL47:
 376              	.LBE91:
 377              	.LBE90:
 378              	.LBB92:
 379              	.LBB93:
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 380              		.loc 5 22 0
 381 0062 D4ED037A 		vldr.32	s15, [r4, #12]
 382              	.LVL48:
 383              	.LBE93:
 384              	.LBE92:
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 14


  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  78:Core/Inc/utils/pid_algorithms.h **** 
  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
 385              		.loc 5 81 0
 386 0066 DFED2D5A 		vldr.32	s11, .L47
 387 006a C7EEA56A 		vdiv.f32	s13, s15, s11
 388              	.LVL49:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
 389              		.loc 5 83 0
 390 006e 76EE267A 		vadd.f32	s15, s12, s13
 391              	.LVL50:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 15


  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
 392              		.loc 5 84 0
 393 0072 27EE257A 		vmul.f32	s14, s14, s11
 394 0076 37EE467A 		vsub.f32	s14, s14, s12
 395 007a 36EEA66A 		vadd.f32	s12, s13, s13
 396 007e 37EE467A 		vsub.f32	s14, s14, s12
 397              	.LVL51:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
 398              		.loc 5 87 0
 399 0082 60EE277A 		vmul.f32	s15, s0, s15
 400              	.LVL52:
 401 0086 94ED076A 		vldr.32	s12, [r4, #28]
 402 008a 27EE067A 		vmul.f32	s14, s14, s12
 403              	.LVL53:
 404 008e 77EE877A 		vadd.f32	s15, s15, s14
 405 0092 94ED087A 		vldr.32	s14, [r4, #32]
 406 0096 66EE876A 		vmul.f32	s13, s13, s14
 407              	.LVL54:
 408 009a 77EEA67A 		vadd.f32	s15, s15, s13
 409 009e 94ED067A 		vldr.32	s14, [r4, #24]
 410 00a2 77EE877A 		vadd.f32	s15, s15, s14
 411 00a6 C4ED067A 		vstr.32	s15, [r4, #24]
 412              	.LVL55:
 413              	.LBB94:
 414              	.LBB95:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 415              		.loc 5 30 0
 416 00aa 94ED047A 		vldr.32	s14, [r4, #16]
 417              	.LVL56:
 418              	.LBE95:
 419              	.LBE94:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 420              		.loc 5 89 0
 421 00ae F4EEC77A 		vcmpe.f32	s15, s14
 422 00b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 423 00b6 19DC     		bgt	.L46
 424              	.LVL57:
 425              	.LBB96:
 426              	.LBB97:
  31:Core/Inc/utils/pid_algorithms.h **** 
 427              		.loc 5 31 0
 428 00b8 94ED057A 		vldr.32	s14, [r4, #20]
 429              	.LVL58:
 430              	.LBE97:
 431              	.LBE96:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 432              		.loc 5 93 0
 433 00bc F4EEC77A 		vcmpe.f32	s15, s14
 434 00c0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 435 00c4 14D5     		bpl	.L39
  94:Core/Inc/utils/pid_algorithms.h ****                 {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 16


  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 436              		.loc 5 95 0
 437 00c6 84ED067A 		vstr.32	s14, [r4, #24]
 438 00ca 11E0     		b	.L39
 439              	.LVL59:
 440              	.L34:
 441              	.LBE87:
 442              	.LBE86:
  10:Core/Src/devs/leg.cpp **** 	}
 443              		.loc 1 10 0
 444 00cc 05F14000 		add	r0, r5, #64
 445 00d0 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 446              	.LVL60:
 447              	.LBB99:
 448              	.LBB100:
 449              		.loc 3 185 0
 450 00d4 FFF7FEFF 		bl	cosf
 451              	.LVL61:
 452              	.LBE100:
 453              	.LBE99:
  10:Core/Src/devs/leg.cpp **** 	}
 454              		.loc 1 10 0
 455 00d8 D5ED157A 		vldr.32	s15, [r5, #84]
 456 00dc 60EE677A 		vnmul.f32	s15, s0, s15
 457 00e0 67EE887A 		vmul.f32	s15, s15, s16
 458              	.LVL62:
 459 00e4 A2E7     		b	.L35
 460              	.LVL63:
 461              	.L45:
  12:Core/Src/devs/leg.cpp **** 	if (omega>motor__[0].get_max_omega())
 462              		.loc 1 12 0
 463 00e6 B0EE670A 		vmov.f32	s0, s15
 464 00ea A9E7     		b	.L36
 465              	.LVL64:
 466              	.L46:
 467              	.LBB101:
 468              	.LBB98:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 469              		.loc 5 91 0
 470 00ec 84ED067A 		vstr.32	s14, [r4, #24]
 471              	.L39:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 472              		.loc 5 98 0
 473 00f0 84ED086A 		vstr.32	s12, [r4, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 474              		.loc 5 99 0
 475 00f4 84ED070A 		vstr.32	s0, [r4, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 476              		.loc 5 101 0
 477 00f8 94ED068A 		vldr.32	s16, [r4, #24]
 478              	.LVL65:
 479              	.LBE98:
 480              	.LBE101:
  19:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 17


 481              		.loc 1 19 0
 482 00fc B0EE480A 		vmov.f32	s0, s16
 483 0100 05F13800 		add	r0, r5, #56
 484 0104 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 485              	.LVL66:
  20:Core/Src/devs/leg.cpp **** }
 486              		.loc 1 20 0
 487 0108 B0EE480A 		vmov.f32	s0, s16
 488 010c 05F13C00 		add	r0, r5, #60
 489 0110 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 490              	.LVL67:
  21:Core/Src/devs/leg.cpp **** 
 491              		.loc 1 21 0
 492 0114 BDEC028B 		vldm	sp!, {d8}
 493              	.LCFI3:
 494              		.cfi_restore 80
 495              		.cfi_restore 81
 496              		.cfi_def_cfa_offset 16
 497 0118 38BD     		pop	{r3, r4, r5, pc}
 498              	.LVL68:
 499              	.L48:
 500 011a 00BF     		.align	2
 501              	.L47:
 502 011c 0AD7233C 		.word	1008981770
 503              		.cfi_endproc
 504              	.LFE449:
 506              		.section	.text._ZN3leg26is_raised_without_deadzoneEv,"ax",%progbits
 507              		.align	1
 508              		.global	_ZN3leg26is_raised_without_deadzoneEv
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	_ZN3leg26is_raised_without_deadzoneEv:
 515              	.LFB452:
  47:Core/Src/devs/leg.cpp **** 
  48:Core/Src/devs/leg.cpp **** bool leg::is_raised_without_deadzone(){
 516              		.loc 1 48 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              	.LVL69:
 521 0000 10B5     		push	{r4, lr}
 522              	.LCFI4:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 4, -8
 525              		.cfi_offset 14, -4
 526              	.LVL70:
 527              	.LBB102:
 528              	.LBB103:
 529              		.loc 2 47 0
 530 0002 00F14004 		add	r4, r0, #64
 531 0006 2046     		mov	r0, r4
 532              	.LVL71:
 533 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 534              	.LVL72:
 535              	.LBE103:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 18


 536              	.LBE102:
  49:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=0) && (this->get_angle()<=(PI)))  ||  ((this->get_angle()<=(-PI)) && (this
 537              		.loc 1 49 0
 538 000c B5EEC00A 		vcmpe.f32	s0, #0
 539 0010 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 540 0014 0CDB     		blt	.L50
 541              	.LVL73:
 542              	.LBB104:
 543              	.LBB105:
 544              		.loc 2 47 0
 545 0016 2046     		mov	r0, r4
 546 0018 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 547              	.LVL74:
 548              	.LBE105:
 549              	.LBE104:
 550              		.loc 1 49 0
 551 001c 10EE100A 		vmov	r0, s0
 552 0020 FFF7FEFF 		bl	__aeabi_f2d
 553              	.LVL75:
 554 0024 14A3     		adr	r3, .L62
 555 0026 D3E90023 		ldrd	r2, [r3]
 556 002a FFF7FEFF 		bl	__aeabi_dcmple
 557              	.LVL76:
 558 002e F0B9     		cbnz	r0, .L54
 559              	.L50:
 560              	.LVL77:
 561              	.LBB106:
 562              	.LBB107:
 563              		.loc 2 47 0 discriminator 4
 564 0030 2046     		mov	r0, r4
 565 0032 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 566              	.LVL78:
 567              	.LBE107:
 568              	.LBE106:
 569              		.loc 1 49 0 discriminator 4
 570 0036 10EE100A 		vmov	r0, s0
 571 003a FFF7FEFF 		bl	__aeabi_f2d
 572              	.LVL79:
 573 003e 10A3     		adr	r3, .L62+8
 574 0040 D3E90023 		ldrd	r2, [r3]
 575 0044 FFF7FEFF 		bl	__aeabi_dcmple
 576              	.LVL80:
 577 0048 08B9     		cbnz	r0, .L61
  50:Core/Src/devs/leg.cpp **** 		return true;
  51:Core/Src/devs/leg.cpp **** 	}
  52:Core/Src/devs/leg.cpp **** 	else{
  53:Core/Src/devs/leg.cpp **** 		return false;
 578              		.loc 1 53 0
 579 004a 0020     		movs	r0, #0
 580              	.L52:
  54:Core/Src/devs/leg.cpp **** 	}
  55:Core/Src/devs/leg.cpp **** 
  56:Core/Src/devs/leg.cpp **** }
 581              		.loc 1 56 0
 582 004c 10BD     		pop	{r4, pc}
 583              	.LVL81:
 584              	.L61:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 19


 585              	.LBB108:
 586              	.LBB109:
 587              		.loc 2 47 0
 588 004e 2046     		mov	r0, r4
 589 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 590              	.LVL82:
 591              	.LBE109:
 592              	.LBE108:
  49:Core/Src/devs/leg.cpp **** 		return true;
 593              		.loc 1 49 0
 594 0054 10EE100A 		vmov	r0, s0
 595 0058 FFF7FEFF 		bl	__aeabi_f2d
 596              	.LVL83:
 597 005c 0AA3     		adr	r3, .L62+16
 598 005e D3E90023 		ldrd	r2, [r3]
 599 0062 FFF7FEFF 		bl	__aeabi_dcmpge
 600              	.LVL84:
 601 0066 0028     		cmp	r0, #0
 602 0068 F0D0     		beq	.L52
  50:Core/Src/devs/leg.cpp **** 		return true;
 603              		.loc 1 50 0
 604 006a 0120     		movs	r0, #1
 605 006c EEE7     		b	.L52
 606              	.L54:
 607 006e 0120     		movs	r0, #1
 608 0070 ECE7     		b	.L52
 609              	.L63:
 610 0072 00BFAFF3 		.align	3
 610      0080
 611              	.L62:
 612 0078 182D4454 		.word	1413754136
 613 007c FB210940 		.word	1074340347
 614 0080 182D4454 		.word	1413754136
 615 0084 FB2109C0 		.word	-1073143301
 616 0088 182D4454 		.word	1413754136
 617 008c FB2119C0 		.word	-1072094725
 618              		.cfi_endproc
 619              	.LFE452:
 621              		.section	.text._ZN3leg11reset_angleEf,"ax",%progbits
 622              		.align	1
 623              		.global	_ZN3leg11reset_angleEf
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv4-sp-d16
 629              	_ZN3leg11reset_angleEf:
 630              	.LFB453:
  57:Core/Src/devs/leg.cpp **** 
  58:Core/Src/devs/leg.cpp **** void leg::reset_angle(float angle_in_radians){
 631              		.loc 1 58 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              	.LVL85:
 636 0000 08B5     		push	{r3, lr}
 637              	.LCFI5:
 638              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 20


 639              		.cfi_offset 3, -8
 640              		.cfi_offset 14, -4
  59:Core/Src/devs/leg.cpp **** 	encoder__.reset_angle(angle_in_radians);
 641              		.loc 1 59 0
 642 0002 4030     		adds	r0, r0, #64
 643              	.LVL86:
 644 0004 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 645              	.LVL87:
  60:Core/Src/devs/leg.cpp **** }
 646              		.loc 1 60 0
 647 0008 08BD     		pop	{r3, pc}
 648              		.cfi_endproc
 649              	.LFE453:
 651              		.section	.text._ZN3leg15calculate_omegaEv,"ax",%progbits
 652              		.align	1
 653              		.global	_ZN3leg15calculate_omegaEv
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	_ZN3leg15calculate_omegaEv:
 660              	.LFB454:
  61:Core/Src/devs/leg.cpp **** 
  62:Core/Src/devs/leg.cpp **** void leg::calculate_omega(){
 661              		.loc 1 62 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL88:
 666 0000 08B5     		push	{r3, lr}
 667              	.LCFI6:
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 3, -8
 670              		.cfi_offset 14, -4
  63:Core/Src/devs/leg.cpp **** 	encoder__.calculate_omega();
 671              		.loc 1 63 0
 672 0002 4030     		adds	r0, r0, #64
 673              	.LVL89:
 674 0004 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 675              	.LVL90:
  64:Core/Src/devs/leg.cpp **** }
 676              		.loc 1 64 0
 677 0008 08BD     		pop	{r3, pc}
 678              		.cfi_endproc
 679              	.LFE454:
 681              		.section	.bss._ZL12ramped_value,"aw",%nobits
 682              		.align	2
 683              		.set	.LANCHOR0,. + 0
 686              	_ZL12ramped_value:
 687 0000 00000000 		.space	4
 688              		.text
 689              	.Letext0:
 690              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 691              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 692              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 693              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 694              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 21


 695              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 696              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 697              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 698              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 699              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 700              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 701              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 702              		.file 18 "Core/Inc/periphs/tim.h"
 703              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 704              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 705              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 706              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 707              		.file 23 "Core/Inc/devs/encoder.h"
 708              		.file 24 "Core/Inc/devs/limit_switch.h"
 709              		.file 25 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 leg.cpp
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:18     .text._ZN3leg4rampEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:25     .text._ZN3leg4rampEf:00000000 _ZN3leg4rampEf
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:61     .text._ZN3leg4rampEf:00000034 $d
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:69     .text._ZN3leg9is_raisedEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:76     .text._ZN3leg9is_raisedEv:00000000 _ZN3leg9is_raisedEv
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:261    .text._ZN3leg9is_raisedEv:000000e8 $d
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:279    .text._ZN3leg9set_omegaEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:286    .text._ZN3leg9set_omegaEf:00000000 _ZN3leg9set_omegaEf
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:502    .text._ZN3leg9set_omegaEf:0000011c $d
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:507    .text._ZN3leg26is_raised_without_deadzoneEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:514    .text._ZN3leg26is_raised_without_deadzoneEv:00000000 _ZN3leg26is_raised_without_deadzoneEv
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:612    .text._ZN3leg26is_raised_without_deadzoneEv:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:622    .text._ZN3leg11reset_angleEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:629    .text._ZN3leg11reset_angleEf:00000000 _ZN3leg11reset_angleEf
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:652    .text._ZN3leg15calculate_omegaEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:659    .text._ZN3leg15calculate_omegaEv:00000000 _ZN3leg15calculate_omegaEv
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:682    .bss._ZL12ramped_value:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccZqkAM4.s:686    .bss._ZL12ramped_value:00000000 _ZL12ramped_value

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dcmple
__aeabi_dcmpge
_ZN7encoder9get_angleEv
cosf
_ZN7encoder9get_omegaEv
_ZN5motor9set_omegaEf
_ZN7encoder11reset_angleEf
_ZN7encoder15calculate_omegaEv
