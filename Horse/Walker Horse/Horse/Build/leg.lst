ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"leg.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN3leg9get_omegaEv,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN3leg9get_omegaEv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN3leg9get_omegaEv:
  26              	.LFB446:
  27              		.file 1 "Core/Src/devs/leg.cpp"
   1:Core/Src/devs/leg.cpp **** #include "leg.h"
   2:Core/Src/devs/leg.cpp **** 
   3:Core/Src/devs/leg.cpp **** float gravity_compensator_factor;
   4:Core/Src/devs/leg.cpp **** float omeg;
   5:Core/Src/devs/leg.cpp **** float ang;
   6:Core/Src/devs/leg.cpp **** float input_omega;
   7:Core/Src/devs/leg.cpp **** float comp_omg;
   8:Core/Src/devs/leg.cpp **** 
   9:Core/Src/devs/leg.cpp **** void leg::set_omega(float omega){
  10:Core/Src/devs/leg.cpp **** 	encoder__.calculate_omega();
  11:Core/Src/devs/leg.cpp **** 	//printf("setting");
  12:Core/Src/devs/leg.cpp **** 	omeg = encoder__.get_omega();
  13:Core/Src/devs/leg.cpp **** 	ang = encoder__.get_angle();
  14:Core/Src/devs/leg.cpp **** 	input_omega = omega;
  15:Core/Src/devs/leg.cpp **** 	if(!is_raised()){
  16:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = -cos(encoder__.get_angle())  * kl_ * omega ;
  17:Core/Src/devs/leg.cpp **** 	}
  18:Core/Src/devs/leg.cpp **** 	else{
  19:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle())  * kb_ * omega ;
  20:Core/Src/devs/leg.cpp **** 	}
  21:Core/Src/devs/leg.cpp **** 	omega += gravity_compensator_factor;
  22:Core/Src/devs/leg.cpp **** 	float computed_omega = dpid_.compute(omega - encoder__.get_omega(), SAMPLE_TIME);
  23:Core/Src/devs/leg.cpp **** 	comp_omg = computed_omega;
  24:Core/Src/devs/leg.cpp **** 	motor__[0].set_omega(computed_omega);
  25:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
  26:Core/Src/devs/leg.cpp **** }
  27:Core/Src/devs/leg.cpp **** float leg::get_omega(void){
  28              		.loc 1 27 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 2


  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  28:Core/Src/devs/leg.cpp **** 	return encoder__.get_omega();
  38              		.loc 1 28 0
  39 0002 4030     		adds	r0, r0, #64
  40              	.LVL1:
  41 0004 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
  42              	.LVL2:
  29:Core/Src/devs/leg.cpp **** }
  43              		.loc 1 29 0
  44 0008 08BD     		pop	{r3, pc}
  45              		.cfi_endproc
  46              	.LFE446:
  48              		.section	.text._ZN3leg11reset_angleEf,"ax",%progbits
  49              		.align	1
  50              		.global	_ZN3leg11reset_angleEf
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	_ZN3leg11reset_angleEf:
  57              	.LFB448:
  30:Core/Src/devs/leg.cpp **** bool leg::is_raised(){
  31:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=0) && (this->get_angle()<=(PI)))  ||  ((this->get_angle()<=(-PI)) && (this
  32:Core/Src/devs/leg.cpp **** 		return true;
  33:Core/Src/devs/leg.cpp **** 	}
  34:Core/Src/devs/leg.cpp **** 	else{
  35:Core/Src/devs/leg.cpp **** 		return false;
  36:Core/Src/devs/leg.cpp **** 	}
  37:Core/Src/devs/leg.cpp **** 
  38:Core/Src/devs/leg.cpp **** }
  39:Core/Src/devs/leg.cpp **** void leg::reset_angle(float angle_in_radians){
  58              		.loc 1 39 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL3:
  63 0000 08B5     		push	{r3, lr}
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
  40:Core/Src/devs/leg.cpp **** 	encoder__.reset_angle(angle_in_radians);
  68              		.loc 1 40 0
  69 0002 4030     		adds	r0, r0, #64
  70              	.LVL4:
  71 0004 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
  72              	.LVL5:
  41:Core/Src/devs/leg.cpp **** }
  73              		.loc 1 41 0
  74 0008 08BD     		pop	{r3, pc}
  75              		.cfi_endproc
  76              	.LFE448:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 3


  78              		.section	.text._ZN3leg9get_angleEv,"ax",%progbits
  79              		.align	1
  80              		.global	_ZN3leg9get_angleEv
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	_ZN3leg9get_angleEv:
  87              	.LFB449:
  42:Core/Src/devs/leg.cpp **** float leg::get_angle(void){
  88              		.loc 1 42 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL6:
  93 0000 08B5     		push	{r3, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 3, -8
  97              		.cfi_offset 14, -4
  43:Core/Src/devs/leg.cpp **** 	return encoder__.get_angle();
  98              		.loc 1 43 0
  99 0002 4030     		adds	r0, r0, #64
 100              	.LVL7:
 101 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 102              	.LVL8:
  44:Core/Src/devs/leg.cpp **** }
 103              		.loc 1 44 0
 104 0008 08BD     		pop	{r3, pc}
 105              		.cfi_endproc
 106              	.LFE449:
 108              		.global	__aeabi_f2d
 109              		.global	__aeabi_dcmple
 110              		.global	__aeabi_dcmpge
 111              		.section	.text._ZN3leg9is_raisedEv,"ax",%progbits
 112              		.align	1
 113              		.global	_ZN3leg9is_raisedEv
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	_ZN3leg9is_raisedEv:
 120              	.LFB447:
  30:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=0) && (this->get_angle()<=(PI)))  ||  ((this->get_angle()<=(-PI)) && (this
 121              		.loc 1 30 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL9:
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI3:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
  31:Core/Src/devs/leg.cpp **** 		return true;
 132              		.loc 1 31 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 4


 133 0004 FFF7FEFF 		bl	_ZN3leg9get_angleEv
 134              	.LVL10:
 135 0008 B5EEC00A 		vcmpe.f32	s0, #0
 136 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 137 0010 0CDB     		blt	.L8
  31:Core/Src/devs/leg.cpp **** 		return true;
 138              		.loc 1 31 0 is_stmt 0 discriminator 1
 139 0012 2046     		mov	r0, r4
 140 0014 FFF7FEFF 		bl	_ZN3leg9get_angleEv
 141              	.LVL11:
 142 0018 10EE100A 		vmov	r0, s0
 143 001c FFF7FEFF 		bl	__aeabi_f2d
 144              	.LVL12:
 145 0020 13A3     		adr	r3, .L20
 146 0022 D3E90023 		ldrd	r2, [r3]
 147 0026 FFF7FEFF 		bl	__aeabi_dcmple
 148              	.LVL13:
 149 002a F0B9     		cbnz	r0, .L12
 150              	.L8:
  31:Core/Src/devs/leg.cpp **** 		return true;
 151              		.loc 1 31 0 discriminator 4
 152 002c 2046     		mov	r0, r4
 153 002e FFF7FEFF 		bl	_ZN3leg9get_angleEv
 154              	.LVL14:
 155 0032 10EE100A 		vmov	r0, s0
 156 0036 FFF7FEFF 		bl	__aeabi_f2d
 157              	.LVL15:
 158 003a 0FA3     		adr	r3, .L20+8
 159 003c D3E90023 		ldrd	r2, [r3]
 160 0040 FFF7FEFF 		bl	__aeabi_dcmple
 161              	.LVL16:
 162 0044 08B9     		cbnz	r0, .L19
  35:Core/Src/devs/leg.cpp **** 	}
 163              		.loc 1 35 0 is_stmt 1
 164 0046 0020     		movs	r0, #0
 165              	.L10:
  38:Core/Src/devs/leg.cpp **** void leg::reset_angle(float angle_in_radians){
 166              		.loc 1 38 0
 167 0048 10BD     		pop	{r4, pc}
 168              	.LVL17:
 169              	.L19:
  31:Core/Src/devs/leg.cpp **** 		return true;
 170              		.loc 1 31 0 discriminator 5
 171 004a 2046     		mov	r0, r4
 172 004c FFF7FEFF 		bl	_ZN3leg9get_angleEv
 173              	.LVL18:
 174 0050 10EE100A 		vmov	r0, s0
 175 0054 FFF7FEFF 		bl	__aeabi_f2d
 176              	.LVL19:
 177 0058 09A3     		adr	r3, .L20+16
 178 005a D3E90023 		ldrd	r2, [r3]
 179 005e FFF7FEFF 		bl	__aeabi_dcmpge
 180              	.LVL20:
 181 0062 0028     		cmp	r0, #0
 182 0064 F0D0     		beq	.L10
  32:Core/Src/devs/leg.cpp **** 	}
 183              		.loc 1 32 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 5


 184 0066 0120     		movs	r0, #1
 185 0068 EEE7     		b	.L10
 186              	.L12:
 187 006a 0120     		movs	r0, #1
 188 006c ECE7     		b	.L10
 189              	.L21:
 190 006e 00BF     		.align	3
 191              	.L20:
 192 0070 182D4454 		.word	1413754136
 193 0074 FB210940 		.word	1074340347
 194 0078 182D4454 		.word	1413754136
 195 007c FB2109C0 		.word	-1073143301
 196 0080 182D4454 		.word	1413754136
 197 0084 FB2119C0 		.word	-1072094725
 198              		.cfi_endproc
 199              	.LFE447:
 201              		.section	.text._ZN3leg9set_omegaEf,"ax",%progbits
 202              		.align	1
 203              		.global	_ZN3leg9set_omegaEf
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	_ZN3leg9set_omegaEf:
 210              	.LFB445:
   9:Core/Src/devs/leg.cpp **** 	encoder__.calculate_omega();
 211              		.loc 1 9 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL21:
 216 0000 70B5     		push	{r4, r5, r6, lr}
 217              	.LCFI4:
 218              		.cfi_def_cfa_offset 16
 219              		.cfi_offset 4, -16
 220              		.cfi_offset 5, -12
 221              		.cfi_offset 6, -8
 222              		.cfi_offset 14, -4
 223 0002 2DED028B 		vpush.64	{d8}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 24
 226              		.cfi_offset 80, -24
 227              		.cfi_offset 81, -20
 228 0006 0546     		mov	r5, r0
 229 0008 B0EE408A 		vmov.f32	s16, s0
  10:Core/Src/devs/leg.cpp **** 	//printf("setting");
 230              		.loc 1 10 0
 231 000c 00F14006 		add	r6, r0, #64
 232 0010 3046     		mov	r0, r6
 233              	.LVL22:
 234 0012 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 235              	.LVL23:
  12:Core/Src/devs/leg.cpp **** 	ang = encoder__.get_angle();
 236              		.loc 1 12 0
 237 0016 3046     		mov	r0, r6
 238 0018 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 239              	.LVL24:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 6


 240 001c 464B     		ldr	r3, .L35
 241 001e 83ED000A 		vstr.32	s0, [r3]
  13:Core/Src/devs/leg.cpp **** 	input_omega = omega;
 242              		.loc 1 13 0
 243 0022 3046     		mov	r0, r6
 244 0024 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 245              	.LVL25:
 246 0028 444B     		ldr	r3, .L35+4
 247 002a 83ED000A 		vstr.32	s0, [r3]
  14:Core/Src/devs/leg.cpp **** 	if(!is_raised()){
 248              		.loc 1 14 0
 249 002e 444B     		ldr	r3, .L35+8
 250 0030 83ED008A 		vstr.32	s16, [r3]
  15:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = -cos(encoder__.get_angle())  * kl_ * omega ;
 251              		.loc 1 15 0
 252 0034 2846     		mov	r0, r5
 253 0036 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 254              	.LVL26:
 255 003a 0028     		cmp	r0, #0
 256 003c 52D0     		beq	.L33
  19:Core/Src/devs/leg.cpp **** 	}
 257              		.loc 1 19 0
 258 003e 3046     		mov	r0, r6
 259 0040 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 260              	.LVL27:
 261              	.LBB36:
 262              	.LBB37:
 263              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 7


  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 8


  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 9


 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 264              		.loc 2 185 0
 265 0044 FFF7FEFF 		bl	cosf
 266              	.LVL28:
 267              	.LBE37:
 268              	.LBE36:
  19:Core/Src/devs/leg.cpp **** 	}
 269              		.loc 1 19 0
 270 0048 D5ED147A 		vldr.32	s15, [r5, #80]
 271 004c 27EE800A 		vmul.f32	s0, s15, s0
 272 0050 20EE080A 		vmul.f32	s0, s0, s16
 273 0054 3B4B     		ldr	r3, .L35+12
 274 0056 83ED000A 		vstr.32	s0, [r3]
 275              	.L24:
  21:Core/Src/devs/leg.cpp **** 	float computed_omega = dpid_.compute(omega - encoder__.get_omega(), SAMPLE_TIME);
 276              		.loc 1 21 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 10


 277 005a 3A4B     		ldr	r3, .L35+12
 278 005c 93ED000A 		vldr.32	s0, [r3]
 279 0060 38EE008A 		vadd.f32	s16, s16, s0
 280              	.LVL29:
  22:Core/Src/devs/leg.cpp **** 	comp_omg = computed_omega;
 281              		.loc 1 22 0
 282 0064 05F11404 		add	r4, r5, #20
 283 0068 3046     		mov	r0, r6
 284 006a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 285              	.LVL30:
 286 006e 38EE400A 		vsub.f32	s0, s16, s0
 287              	.LVL31:
 288              	.LBB38:
 289              	.LBB39:
 290              	.LBB40:
 291              	.LBB41:
 292              		.file 3 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
 293              		.loc 3 20 0
 294 0072 94ED016A 		vldr.32	s12, [r4, #4]
 295              	.LVL32:
 296              	.LBE41:
 297              	.LBE40:
 298              	.LBB42:
 299              	.LBB43:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 300              		.loc 3 21 0
 301 0076 94ED027A 		vldr.32	s14, [r4, #8]
 302              	.LVL33:
 303              	.LBE43:
 304              	.LBE42:
 305              	.LBB44:
 306              	.LBB45:
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 307              		.loc 3 22 0
 308 007a D4ED037A 		vldr.32	s15, [r4, #12]
 309              	.LVL34:
 310              	.LBE45:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 11


 311              	.LBE44:
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  78:Core/Inc/utils/pid_algorithms.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 12


  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
 312              		.loc 3 81 0
 313 007e DFED325A 		vldr.32	s11, .L35+16
 314 0082 C7EEA56A 		vdiv.f32	s13, s15, s11
 315              	.LVL35:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
 316              		.loc 3 83 0
 317 0086 76EE267A 		vadd.f32	s15, s12, s13
 318              	.LVL36:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
 319              		.loc 3 84 0
 320 008a 27EE257A 		vmul.f32	s14, s14, s11
 321 008e 37EE467A 		vsub.f32	s14, s14, s12
 322 0092 36EEA66A 		vadd.f32	s12, s13, s13
 323 0096 37EE467A 		vsub.f32	s14, s14, s12
 324              	.LVL37:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
 325              		.loc 3 87 0
 326 009a 60EE277A 		vmul.f32	s15, s0, s15
 327              	.LVL38:
 328 009e 94ED076A 		vldr.32	s12, [r4, #28]
 329 00a2 27EE067A 		vmul.f32	s14, s14, s12
 330              	.LVL39:
 331 00a6 77EE877A 		vadd.f32	s15, s15, s14
 332 00aa 94ED087A 		vldr.32	s14, [r4, #32]
 333 00ae 66EE876A 		vmul.f32	s13, s13, s14
 334              	.LVL40:
 335 00b2 77EEA67A 		vadd.f32	s15, s15, s13
 336 00b6 94ED067A 		vldr.32	s14, [r4, #24]
 337 00ba 77EE877A 		vadd.f32	s15, s15, s14
 338 00be C4ED067A 		vstr.32	s15, [r4, #24]
 339              	.LVL41:
 340              	.LBB46:
 341              	.LBB47:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 342              		.loc 3 30 0
 343 00c2 94ED047A 		vldr.32	s14, [r4, #16]
 344              	.LVL42:
 345              	.LBE47:
 346              	.LBE46:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 347              		.loc 3 89 0
 348 00c6 F4EEC77A 		vcmpe.f32	s15, s14
 349 00ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 350 00ce 18DC     		bgt	.L34
 351              	.LVL43:
 352              	.LBB48:
 353              	.LBB49:
  31:Core/Inc/utils/pid_algorithms.h **** 
 354              		.loc 3 31 0
 355 00d0 94ED057A 		vldr.32	s14, [r4, #20]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 13


 356              	.LVL44:
 357              	.LBE49:
 358              	.LBE48:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 359              		.loc 3 93 0
 360 00d4 F4EEC77A 		vcmpe.f32	s15, s14
 361 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 362 00dc 13D5     		bpl	.L27
  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 363              		.loc 3 95 0
 364 00de 84ED067A 		vstr.32	s14, [r4, #24]
 365 00e2 10E0     		b	.L27
 366              	.LVL45:
 367              	.L33:
 368              	.LBE39:
 369              	.LBE38:
  16:Core/Src/devs/leg.cpp **** 	}
 370              		.loc 1 16 0
 371 00e4 3046     		mov	r0, r6
 372 00e6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 373              	.LVL46:
 374              	.LBB51:
 375              	.LBB52:
 376              		.loc 2 185 0
 377 00ea FFF7FEFF 		bl	cosf
 378              	.LVL47:
 379              	.LBE52:
 380              	.LBE51:
  16:Core/Src/devs/leg.cpp **** 	}
 381              		.loc 1 16 0
 382 00ee D5ED157A 		vldr.32	s15, [r5, #84]
 383 00f2 20EE670A 		vnmul.f32	s0, s0, s15
 384 00f6 20EE080A 		vmul.f32	s0, s0, s16
 385 00fa 124B     		ldr	r3, .L35+12
 386 00fc 83ED000A 		vstr.32	s0, [r3]
 387 0100 ABE7     		b	.L24
 388              	.LVL48:
 389              	.L34:
 390              	.LBB53:
 391              	.LBB50:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 392              		.loc 3 91 0
 393 0102 84ED067A 		vstr.32	s14, [r4, #24]
 394              	.L27:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 395              		.loc 3 98 0
 396 0106 84ED086A 		vstr.32	s12, [r4, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 397              		.loc 3 99 0
 398 010a 84ED070A 		vstr.32	s0, [r4, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 14


 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 399              		.loc 3 101 0
 400 010e 94ED068A 		vldr.32	s16, [r4, #24]
 401              	.LVL49:
 402              	.LBE50:
 403              	.LBE53:
  23:Core/Src/devs/leg.cpp **** 	motor__[0].set_omega(computed_omega);
 404              		.loc 1 23 0
 405 0112 0E4B     		ldr	r3, .L35+20
 406 0114 83ED008A 		vstr.32	s16, [r3]
  24:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
 407              		.loc 1 24 0
 408 0118 B0EE480A 		vmov.f32	s0, s16
 409 011c 05F13800 		add	r0, r5, #56
 410 0120 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 411              	.LVL50:
  25:Core/Src/devs/leg.cpp **** }
 412              		.loc 1 25 0
 413 0124 B0EE480A 		vmov.f32	s0, s16
 414 0128 05F13C00 		add	r0, r5, #60
 415 012c FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 416              	.LVL51:
  26:Core/Src/devs/leg.cpp **** float leg::get_omega(void){
 417              		.loc 1 26 0
 418 0130 BDEC028B 		vldm	sp!, {d8}
 419              	.LCFI6:
 420              		.cfi_restore 80
 421              		.cfi_restore 81
 422              		.cfi_def_cfa_offset 16
 423 0134 70BD     		pop	{r4, r5, r6, pc}
 424              	.LVL52:
 425              	.L36:
 426 0136 00BF     		.align	2
 427              	.L35:
 428 0138 00000000 		.word	.LANCHOR0
 429 013c 00000000 		.word	.LANCHOR1
 430 0140 00000000 		.word	.LANCHOR2
 431 0144 00000000 		.word	.LANCHOR3
 432 0148 0AD7233C 		.word	1008981770
 433 014c 00000000 		.word	.LANCHOR4
 434              		.cfi_endproc
 435              	.LFE445:
 437              		.section	.text._ZN3leg9get_stepsEv,"ax",%progbits
 438              		.align	1
 439              		.global	_ZN3leg9get_stepsEv
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	_ZN3leg9get_stepsEv:
 446              	.LFB450:
  45:Core/Src/devs/leg.cpp **** int leg::get_steps(){
 447              		.loc 1 45 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 15


 452              	.LVL53:
  46:Core/Src/devs/leg.cpp **** 	return steps;
  47:Core/Src/devs/leg.cpp **** }
 453              		.loc 1 47 0
 454 0000 0069     		ldr	r0, [r0, #16]
 455              	.LVL54:
 456 0002 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE450:
 460              		.section	.text._ZN3leg17get_encoder_countEv,"ax",%progbits
 461              		.align	1
 462              		.global	_ZN3leg17get_encoder_countEv
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	_ZN3leg17get_encoder_countEv:
 469              	.LFB451:
  48:Core/Src/devs/leg.cpp **** 
  49:Core/Src/devs/leg.cpp **** int16_t leg::get_encoder_count(){
 470              		.loc 1 49 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              	.LVL55:
 475 0000 08B5     		push	{r3, lr}
 476              	.LCFI7:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 3, -8
 479              		.cfi_offset 14, -4
  50:Core/Src/devs/leg.cpp **** 	return encoder__.get_count();
 480              		.loc 1 50 0
 481 0002 4030     		adds	r0, r0, #64
 482              	.LVL56:
 483 0004 FFF7FEFF 		bl	_ZN7encoder9get_countEv
 484              	.LVL57:
  51:Core/Src/devs/leg.cpp **** }...
 485              		.loc 1 51 0
 486 0008 08BD     		pop	{r3, pc}
 487              		.cfi_endproc
 488              	.LFE451:
 490              		.global	comp_omg
 491              		.global	input_omega
 492              		.global	ang
 493              		.global	omeg
 494              		.global	gravity_compensator_factor
 495              		.section	.bss.ang,"aw",%nobits
 496              		.align	2
 497              		.set	.LANCHOR1,. + 0
 500              	ang:
 501 0000 00000000 		.space	4
 502              		.section	.bss.comp_omg,"aw",%nobits
 503              		.align	2
 504              		.set	.LANCHOR4,. + 0
 507              	comp_omg:
 508 0000 00000000 		.space	4
 509              		.section	.bss.gravity_compensator_factor,"aw",%nobits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 16


 510              		.align	2
 511              		.set	.LANCHOR3,. + 0
 514              	gravity_compensator_factor:
 515 0000 00000000 		.space	4
 516              		.section	.bss.input_omega,"aw",%nobits
 517              		.align	2
 518              		.set	.LANCHOR2,. + 0
 521              	input_omega:
 522 0000 00000000 		.space	4
 523              		.section	.bss.omeg,"aw",%nobits
 524              		.align	2
 525              		.set	.LANCHOR0,. + 0
 528              	omeg:
 529 0000 00000000 		.space	4
 530              		.text
 531              	.Letext0:
 532              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 533              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 534              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 535              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 536              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 537              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 538              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 539              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 540              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 541              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 542              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 543              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 544              		.file 16 "Core/Inc/periphs/tim.h"
 545              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 546              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 547              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 548              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 549              		.file 21 "Core/Inc/devs/motor.h"
 550              		.file 22 "Core/Inc/devs/encoder.h"
 551              		.file 23 "Core/Inc/devs/limit_switch.h"
 552              		.file 24 "Core/Inc/devs/leg.h"
 553              		.file 25 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 leg.cpp
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:18     .text._ZN3leg9get_omegaEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:25     .text._ZN3leg9get_omegaEv:00000000 _ZN3leg9get_omegaEv
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:49     .text._ZN3leg11reset_angleEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:56     .text._ZN3leg11reset_angleEf:00000000 _ZN3leg11reset_angleEf
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:79     .text._ZN3leg9get_angleEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:86     .text._ZN3leg9get_angleEv:00000000 _ZN3leg9get_angleEv
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:112    .text._ZN3leg9is_raisedEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:119    .text._ZN3leg9is_raisedEv:00000000 _ZN3leg9is_raisedEv
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:192    .text._ZN3leg9is_raisedEv:00000070 $d
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:202    .text._ZN3leg9set_omegaEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:209    .text._ZN3leg9set_omegaEf:00000000 _ZN3leg9set_omegaEf
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:428    .text._ZN3leg9set_omegaEf:00000138 $d
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:438    .text._ZN3leg9get_stepsEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:445    .text._ZN3leg9get_stepsEv:00000000 _ZN3leg9get_stepsEv
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:461    .text._ZN3leg17get_encoder_countEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:468    .text._ZN3leg17get_encoder_countEv:00000000 _ZN3leg17get_encoder_countEv
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:507    .bss.comp_omg:00000000 comp_omg
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:521    .bss.input_omega:00000000 input_omega
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:500    .bss.ang:00000000 ang
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:528    .bss.omeg:00000000 omeg
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:514    .bss.gravity_compensator_factor:00000000 gravity_compensator_factor
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:496    .bss.ang:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:503    .bss.comp_omg:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:510    .bss.gravity_compensator_factor:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:517    .bss.input_omega:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFmnkF9.s:524    .bss.omeg:00000000 $d

UNDEFINED SYMBOLS
_ZN7encoder9get_omegaEv
_ZN7encoder11reset_angleEf
_ZN7encoder9get_angleEv
__aeabi_f2d
__aeabi_dcmple
__aeabi_dcmpge
_ZN7encoder15calculate_omegaEv
cosf
_ZN5motor9set_omegaEf
_ZN7encoder9get_countEv
