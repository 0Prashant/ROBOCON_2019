ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z18SystemClock_Configv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z18SystemClock_Configv:
  26              	.LFB394:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.cpp ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.cpp ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.cpp ****   * inserted by the user or by software development tools
  11:Core/Src/main.cpp ****   * are owned by their respective copyright owners.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Core/Src/main.cpp ****   *
  15:Core/Src/main.cpp ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.cpp ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.cpp ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.cpp ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.cpp ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.cpp ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.cpp ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.cpp ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.cpp ****   *      without specific prior written permission.
  25:Core/Src/main.cpp ****   *
  26:Core/Src/main.cpp ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.cpp ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.cpp ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.cpp ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.cpp ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.cpp ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 2


  32:Core/Src/main.cpp ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.cpp ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.cpp ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.cpp ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.cpp ****   *
  37:Core/Src/main.cpp ****   ******************************************************************************
  38:Core/Src/main.cpp ****   */
  39:Core/Src/main.cpp **** /* USER CODE END Header */
  40:Core/Src/main.cpp **** 
  41:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  42:Core/Src/main.cpp **** #include "main.h"
  43:Core/Src/main.cpp **** #include "i2c.h"
  44:Core/Src/main.cpp **** #include "tim.h"
  45:Core/Src/main.cpp **** #include "usart.h"
  46:Core/Src/main.cpp **** #include "gpio.h"
  47:Core/Src/main.cpp **** 
  48:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  49:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  50:Core/Src/main.cpp **** #include "robot.h"
  51:Core/Src/main.cpp **** /* USER CODE END Includes */
  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  54:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  55:Core/Src/main.cpp **** 
  56:Core/Src/main.cpp **** /* USER CODE END PTD */
  57:Core/Src/main.cpp **** 
  58:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  59:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  60:Core/Src/main.cpp **** 
  61:Core/Src/main.cpp **** /* USER CODE END PD */
  62:Core/Src/main.cpp **** 
  63:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  64:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  65:Core/Src/main.cpp **** 
  66:Core/Src/main.cpp **** /* USER CODE END PM */
  67:Core/Src/main.cpp **** 
  68:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  69:Core/Src/main.cpp **** 
  70:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  71:Core/Src/main.cpp **** 
  72:Core/Src/main.cpp **** extern leg leg[1];
  73:Core/Src/main.cpp **** extern steering steering;
  74:Core/Src/main.cpp **** 
  75:Core/Src/main.cpp **** /* USER CODE END PV */
  76:Core/Src/main.cpp **** 
  77:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  78:Core/Src/main.cpp **** void SystemClock_Config(void);
  79:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  80:Core/Src/main.cpp **** 
  81:Core/Src/main.cpp **** /* USER CODE END PFP */
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  84:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  85:Core/Src/main.cpp **** 
  86:Core/Src/main.cpp **** /* USER CODE END 0 */
  87:Core/Src/main.cpp **** 
  88:Core/Src/main.cpp **** /**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 3


  89:Core/Src/main.cpp ****   * @brief  The application entry point.
  90:Core/Src/main.cpp ****   * @retval int
  91:Core/Src/main.cpp ****   */
  92:Core/Src/main.cpp **** int main(void)
  93:Core/Src/main.cpp **** {
  94:Core/Src/main.cpp **** 	/* USER CODE BEGIN 1 */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp **** 	/* USER CODE END 1 */
  97:Core/Src/main.cpp **** 
  98:Core/Src/main.cpp **** 	/* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.cpp **** 
 100:Core/Src/main.cpp **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.cpp **** 	HAL_Init();
 102:Core/Src/main.cpp **** 
 103:Core/Src/main.cpp **** 	/* USER CODE BEGIN Init */
 104:Core/Src/main.cpp **** 
 105:Core/Src/main.cpp **** 	/* USER CODE END Init */
 106:Core/Src/main.cpp **** 
 107:Core/Src/main.cpp **** 	/* Configure the system clock */
 108:Core/Src/main.cpp **** 	SystemClock_Config();
 109:Core/Src/main.cpp **** 
 110:Core/Src/main.cpp **** 	/* USER CODE BEGIN SysInit */
 111:Core/Src/main.cpp **** 
 112:Core/Src/main.cpp **** 	/* USER CODE END SysInit */
 113:Core/Src/main.cpp **** 
 114:Core/Src/main.cpp **** 	/* Initialize all configured peripherals */
 115:Core/Src/main.cpp **** 	MX_GPIO_Init();
 116:Core/Src/main.cpp **** 	MX_I2C1_Init();
 117:Core/Src/main.cpp **** 	MX_TIM1_Init();
 118:Core/Src/main.cpp **** 	MX_TIM2_Init();
 119:Core/Src/main.cpp **** 	MX_TIM3_Init();
 120:Core/Src/main.cpp **** 	MX_TIM8_Init();
 121:Core/Src/main.cpp **** 	MX_USART1_UART_Init();
 122:Core/Src/main.cpp **** 	MX_USART2_UART_Init();
 123:Core/Src/main.cpp **** 	MX_USART3_UART_Init();
 124:Core/Src/main.cpp **** 	/* USER CODE BEGIN 2 */
 125:Core/Src/main.cpp **** 
 126:Core/Src/main.cpp **** 	robo_init();
 127:Core/Src/main.cpp **** 
 128:Core/Src/main.cpp **** 	/* USER CODE END 2 */
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp **** 	/* Infinite loop */
 131:Core/Src/main.cpp **** 	/* USER CODE BEGIN WHILE */
 132:Core/Src/main.cpp **** 	printf("\n\nAll initialized\n\n");
 133:Core/Src/main.cpp **** 	
 134:Core/Src/main.cpp **** 	play();
 135:Core/Src/main.cpp **** 	while (1)
 136:Core/Src/main.cpp **** 	{
 137:Core/Src/main.cpp **** 		leg[0].set_omega(0);
 138:Core/Src/main.cpp **** 		steering.set_omega(0);
 139:Core/Src/main.cpp **** 		HAL_Delay(9);
 140:Core/Src/main.cpp **** 		/* USER CODE END WHILE */
 141:Core/Src/main.cpp **** 
 142:Core/Src/main.cpp **** 		/* USER CODE BEGIN 3 */
 143:Core/Src/main.cpp **** 	}
 144:Core/Src/main.cpp **** 	/* USER CODE END 3 */
 145:Core/Src/main.cpp **** }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 4


 146:Core/Src/main.cpp **** 
 147:Core/Src/main.cpp **** /**
 148:Core/Src/main.cpp ****   * @brief System Clock Configuration
 149:Core/Src/main.cpp ****   * @retval None
 150:Core/Src/main.cpp ****   */
 151:Core/Src/main.cpp **** void SystemClock_Config(void)
 152:Core/Src/main.cpp **** {
  28              		.loc 1 152 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 95B0     		sub	sp, sp, #84
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 96
 153:Core/Src/main.cpp **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 153 0
  42 0004 3022     		movs	r2, #48
  43 0006 0021     		movs	r1, #0
  44 0008 08A8     		add	r0, sp, #32
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 154:Core/Src/main.cpp **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 154 0
  48 000e 0024     		movs	r4, #0
  49 0010 0394     		str	r4, [sp, #12]
  50 0012 0494     		str	r4, [sp, #16]
  51 0014 0594     		str	r4, [sp, #20]
  52 0016 0694     		str	r4, [sp, #24]
  53 0018 0794     		str	r4, [sp, #28]
  54              	.LBB2:
 155:Core/Src/main.cpp **** 
 156:Core/Src/main.cpp **** 	/**Configure the main internal regulator output voltage 
 157:Core/Src/main.cpp ****   */
 158:Core/Src/main.cpp **** 	__HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 158 0
  56 001a 0194     		str	r4, [sp, #4]
  57 001c 1C4B     		ldr	r3, .L3
  58 001e 1A6C     		ldr	r2, [r3, #64]
  59 0020 42F08052 		orr	r2, r2, #268435456
  60 0024 1A64     		str	r2, [r3, #64]
  61 0026 1B6C     		ldr	r3, [r3, #64]
  62 0028 03F08053 		and	r3, r3, #268435456
  63 002c 0193     		str	r3, [sp, #4]
  64 002e 019B     		ldr	r3, [sp, #4]
  65              	.LBE2:
  66              	.LBB3:
 159:Core/Src/main.cpp **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  67              		.loc 1 159 0
  68 0030 0294     		str	r4, [sp, #8]
  69 0032 184B     		ldr	r3, .L3+4
  70 0034 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 5


  71 0036 42F48042 		orr	r2, r2, #16384
  72 003a 1A60     		str	r2, [r3]
  73 003c 1B68     		ldr	r3, [r3]
  74 003e 03F48043 		and	r3, r3, #16384
  75 0042 0293     		str	r3, [sp, #8]
  76 0044 029B     		ldr	r3, [sp, #8]
  77              	.LBE3:
 160:Core/Src/main.cpp **** 	/**Initializes the CPU, AHB and APB busses clocks 
 161:Core/Src/main.cpp ****   */
 162:Core/Src/main.cpp **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  78              		.loc 1 162 0
  79 0046 0123     		movs	r3, #1
  80 0048 0893     		str	r3, [sp, #32]
 163:Core/Src/main.cpp **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  81              		.loc 1 163 0
  82 004a 4FF48033 		mov	r3, #65536
  83 004e 0993     		str	r3, [sp, #36]
 164:Core/Src/main.cpp **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  84              		.loc 1 164 0
  85 0050 0225     		movs	r5, #2
  86 0052 0E95     		str	r5, [sp, #56]
 165:Core/Src/main.cpp **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  87              		.loc 1 165 0
  88 0054 4FF48003 		mov	r3, #4194304
  89 0058 0F93     		str	r3, [sp, #60]
 166:Core/Src/main.cpp **** 	RCC_OscInitStruct.PLL.PLLM = 4;
  90              		.loc 1 166 0
  91 005a 0423     		movs	r3, #4
  92 005c 1093     		str	r3, [sp, #64]
 167:Core/Src/main.cpp **** 	RCC_OscInitStruct.PLL.PLLN = 168;
  93              		.loc 1 167 0
  94 005e A823     		movs	r3, #168
  95 0060 1193     		str	r3, [sp, #68]
 168:Core/Src/main.cpp **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  96              		.loc 1 168 0
  97 0062 1295     		str	r5, [sp, #72]
 169:Core/Src/main.cpp **** 	RCC_OscInitStruct.PLL.PLLQ = 7;
  98              		.loc 1 169 0
  99 0064 0723     		movs	r3, #7
 100 0066 1393     		str	r3, [sp, #76]
 170:Core/Src/main.cpp **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 101              		.loc 1 170 0
 102 0068 08A8     		add	r0, sp, #32
 103 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 104              	.LVL1:
 171:Core/Src/main.cpp **** 	{
 172:Core/Src/main.cpp **** 		Error_Handler();
 173:Core/Src/main.cpp **** 	}
 174:Core/Src/main.cpp **** 	/**Initializes the CPU, AHB and APB busses clocks 
 175:Core/Src/main.cpp ****   */
 176:Core/Src/main.cpp **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 105              		.loc 1 176 0
 106 006e 0F23     		movs	r3, #15
 107 0070 0393     		str	r3, [sp, #12]
 177:Core/Src/main.cpp **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 108              		.loc 1 177 0
 109 0072 0495     		str	r5, [sp, #16]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 6


 178:Core/Src/main.cpp **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 110              		.loc 1 178 0
 111 0074 0594     		str	r4, [sp, #20]
 179:Core/Src/main.cpp **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 112              		.loc 1 179 0
 113 0076 4FF4A053 		mov	r3, #5120
 114 007a 0693     		str	r3, [sp, #24]
 180:Core/Src/main.cpp **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 115              		.loc 1 180 0
 116 007c 4FF48053 		mov	r3, #4096
 117 0080 0793     		str	r3, [sp, #28]
 181:Core/Src/main.cpp **** 
 182:Core/Src/main.cpp **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 118              		.loc 1 182 0
 119 0082 0521     		movs	r1, #5
 120 0084 03A8     		add	r0, sp, #12
 121 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 122              	.LVL2:
 183:Core/Src/main.cpp **** 	{
 184:Core/Src/main.cpp **** 		Error_Handler();
 185:Core/Src/main.cpp **** 	}
 186:Core/Src/main.cpp **** }
 123              		.loc 1 186 0
 124 008a 15B0     		add	sp, sp, #84
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 12
 127              		@ sp needed
 128 008c 30BD     		pop	{r4, r5, pc}
 129              	.L4:
 130 008e 00BF     		.align	2
 131              	.L3:
 132 0090 00380240 		.word	1073887232
 133 0094 00700040 		.word	1073770496
 134              		.cfi_endproc
 135              	.LFE394:
 137              		.section	.text.main,"ax",%progbits
 138              		.align	1
 139              		.global	main
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	main:
 146              	.LFB393:
  93:Core/Src/main.cpp **** 	/* USER CODE BEGIN 1 */
 147              		.loc 1 93 0
 148              		.cfi_startproc
 149              		@ Volatile: function does not return.
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 08B5     		push	{r3, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 3, -8
 156              		.cfi_offset 14, -4
 101:Core/Src/main.cpp **** 
 157              		.loc 1 101 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 7


 158 0002 FFF7FEFF 		bl	HAL_Init
 159              	.LVL3:
 108:Core/Src/main.cpp **** 
 160              		.loc 1 108 0
 161 0006 FFF7FEFF 		bl	_Z18SystemClock_Configv
 162              	.LVL4:
 115:Core/Src/main.cpp **** 	MX_I2C1_Init();
 163              		.loc 1 115 0
 164 000a FFF7FEFF 		bl	MX_GPIO_Init
 165              	.LVL5:
 116:Core/Src/main.cpp **** 	MX_TIM1_Init();
 166              		.loc 1 116 0
 167 000e FFF7FEFF 		bl	MX_I2C1_Init
 168              	.LVL6:
 117:Core/Src/main.cpp **** 	MX_TIM2_Init();
 169              		.loc 1 117 0
 170 0012 FFF7FEFF 		bl	MX_TIM1_Init
 171              	.LVL7:
 118:Core/Src/main.cpp **** 	MX_TIM3_Init();
 172              		.loc 1 118 0
 173 0016 FFF7FEFF 		bl	MX_TIM2_Init
 174              	.LVL8:
 119:Core/Src/main.cpp **** 	MX_TIM8_Init();
 175              		.loc 1 119 0
 176 001a FFF7FEFF 		bl	MX_TIM3_Init
 177              	.LVL9:
 120:Core/Src/main.cpp **** 	MX_USART1_UART_Init();
 178              		.loc 1 120 0
 179 001e FFF7FEFF 		bl	MX_TIM8_Init
 180              	.LVL10:
 121:Core/Src/main.cpp **** 	MX_USART2_UART_Init();
 181              		.loc 1 121 0
 182 0022 FFF7FEFF 		bl	MX_USART1_UART_Init
 183              	.LVL11:
 122:Core/Src/main.cpp **** 	MX_USART3_UART_Init();
 184              		.loc 1 122 0
 185 0026 FFF7FEFF 		bl	MX_USART2_UART_Init
 186              	.LVL12:
 123:Core/Src/main.cpp **** 	/* USER CODE BEGIN 2 */
 187              		.loc 1 123 0
 188 002a FFF7FEFF 		bl	MX_USART3_UART_Init
 189              	.LVL13:
 126:Core/Src/main.cpp **** 
 190              		.loc 1 126 0
 191 002e FFF7FEFF 		bl	_Z9robo_initv
 192              	.LVL14:
 132:Core/Src/main.cpp **** 	
 193              		.loc 1 132 0
 194 0032 0A48     		ldr	r0, .L8
 195 0034 FFF7FEFF 		bl	puts
 196              	.LVL15:
 134:Core/Src/main.cpp **** 	while (1)
 197              		.loc 1 134 0
 198 0038 FFF7FEFF 		bl	_Z4playv
 199              	.LVL16:
 200              	.L6:
 137:Core/Src/main.cpp **** 		steering.set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 8


 201              		.loc 1 137 0 discriminator 1
 202 003c 9FED088A 		vldr.32	s16, .L8+4
 203 0040 B0EE480A 		vmov.f32	s0, s16
 204 0044 0748     		ldr	r0, .L8+8
 205 0046 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 206              	.LVL17:
 138:Core/Src/main.cpp **** 		HAL_Delay(9);
 207              		.loc 1 138 0 discriminator 1
 208 004a B0EE480A 		vmov.f32	s0, s16
 209 004e 0648     		ldr	r0, .L8+12
 210 0050 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 211              	.LVL18:
 139:Core/Src/main.cpp **** 		/* USER CODE END WHILE */
 212              		.loc 1 139 0 discriminator 1
 213 0054 0920     		movs	r0, #9
 214 0056 FFF7FEFF 		bl	HAL_Delay
 215              	.LVL19:
 216 005a EFE7     		b	.L6
 217              	.L9:
 218              		.align	2
 219              	.L8:
 220 005c 00000000 		.word	.LC0
 221 0060 00000000 		.word	0
 222 0064 00000000 		.word	leg
 223 0068 00000000 		.word	steering
 224              		.cfi_endproc
 225              	.LFE393:
 227              		.section	.text.Error_Handler,"ax",%progbits
 228              		.align	1
 229              		.global	Error_Handler
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	Error_Handler:
 236              	.LFB395:
 187:Core/Src/main.cpp **** 
 188:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 189:Core/Src/main.cpp **** 
 190:Core/Src/main.cpp **** /* USER CODE END 4 */
 191:Core/Src/main.cpp **** 
 192:Core/Src/main.cpp **** /**
 193:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 194:Core/Src/main.cpp ****   * @retval None
 195:Core/Src/main.cpp ****   */
 196:Core/Src/main.cpp **** void Error_Handler(void)
 197:Core/Src/main.cpp **** {
 237              		.loc 1 197 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 198:Core/Src/main.cpp **** 	/* USER CODE BEGIN Error_Handler_Debug */
 199:Core/Src/main.cpp **** 	/* User can add his own implementation to report the HAL error return state */
 200:Core/Src/main.cpp **** 
 201:Core/Src/main.cpp **** 	/* USER CODE END Error_Handler_Debug */
 202:Core/Src/main.cpp **** }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 9


 242              		.loc 1 202 0
 243 0000 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE395:
 247              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 248              		.align	2
 249              	.LC0:
 250 0000 0A0A416C 		.ascii	"\012\012All initialized\012\000"
 250      6C20696E 
 250      69746961 
 250      6C697A65 
 250      640A00
 251              		.text
 252              	.Letext0:
 253              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 254              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 255              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 256              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 257              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 258              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 259              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 260              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 261              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 262              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 263              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 264              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 265              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 266              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 267              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 268              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 269              		.file 18 "Core/Inc/periphs/i2c.h"
 270              		.file 19 "Core/Inc/periphs/tim.h"
 271              		.file 20 "Core/Inc/periphs/usart.h"
 272              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 273              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 274              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 275              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 276              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 277              		.file 26 "Core/Inc/devs/motor.h"
 278              		.file 27 "Core/Inc/devs/encoder.h"
 279              		.file 28 "Core/Inc/devs/pid.h"
 280              		.file 29 "Core/Inc/devs/limit_switch.h"
 281              		.file 30 "Core/Inc/devs/leg.h"
 282              		.file 31 "Core/Inc/devs/steering.h"
 283              		.file 32 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 284              		.file 33 "Core/Inc/periphs/gpio.h"
 285              		.file 34 "Core/Inc/robot/robo_init.h"
 286              		.file 35 "Core/Inc/robot/robot.h"
 287              		.file 36 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:18     .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:25     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:132    .text._Z18SystemClock_Configv:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:138    .text.main:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:145    .text.main:00000000 main
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:220    .text.main:0000005c $d
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:228    .text.Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:235    .text.Error_Handler:00000000 Error_Handler
C:\Users\Prashant\AppData\Local\Temp\ccmrjHfF.s:248    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM8_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
_Z9robo_initv
puts
_Z4playv
_ZN3leg9set_omegaEf
_ZN8steering9set_omegaEf
HAL_Delay
leg
steering
