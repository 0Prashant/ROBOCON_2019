ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"leg.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN3leg9get_omegaEv,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN3leg9get_omegaEv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN3leg9get_omegaEv:
  26              	.LFB386:
  27              		.file 1 "Core/Src/devs/leg.cpp"
   1:Core/Src/devs/leg.cpp **** #include "leg.h"
   2:Core/Src/devs/leg.cpp **** 
   3:Core/Src/devs/leg.cpp **** float gravity_compensator_factor;
   4:Core/Src/devs/leg.cpp **** float omeg;
   5:Core/Src/devs/leg.cpp **** float ang;
   6:Core/Src/devs/leg.cpp **** float comp_omg;
   7:Core/Src/devs/leg.cpp **** 
   8:Core/Src/devs/leg.cpp **** void leg::set_omega(float omega){
   9:Core/Src/devs/leg.cpp **** 	encoder__.calculate_omega();
  10:Core/Src/devs/leg.cpp **** 	omeg = encoder__.get_omega();
  11:Core/Src/devs/leg.cpp **** 	ang = encoder__.get_angle();
  12:Core/Src/devs/leg.cpp **** 	if(this->is_raised()){
  13:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle()) * LEG_WEIGHT * kl_ * (fabs(omeg-omega) / 
  14:Core/Src/devs/leg.cpp **** 	}
  15:Core/Src/devs/leg.cpp **** 	else{
  16:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle()) * BODY_WEIGHT * kb_ * (fabs(omeg-omega) /
  17:Core/Src/devs/leg.cpp **** 	}
  18:Core/Src/devs/leg.cpp **** 
  19:Core/Src/devs/leg.cpp **** 	 float computed_omega = pid__.compute_pid(encoder__.get_omega(), omega);
  20:Core/Src/devs/leg.cpp **** 	// comp_omg = computed_omega;
  21:Core/Src/devs/leg.cpp **** 	//float computed_omega = omega;
  22:Core/Src/devs/leg.cpp **** 	//computed_omega += gravity_compensator_factor; 
  23:Core/Src/devs/leg.cpp **** 	motor__[0].set_omega(computed_omega);
  24:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
  25:Core/Src/devs/leg.cpp **** }
  26:Core/Src/devs/leg.cpp **** float leg::get_omega(void){
  28              		.loc 1 26 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 2


  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  27:Core/Src/devs/leg.cpp **** 	return encoder__.get_omega();
  38              		.loc 1 27 0
  39 0002 1C30     		adds	r0, r0, #28
  40              	.LVL1:
  41 0004 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
  42              	.LVL2:
  28:Core/Src/devs/leg.cpp **** }
  43              		.loc 1 28 0
  44 0008 08BD     		pop	{r3, pc}
  45              		.cfi_endproc
  46              	.LFE386:
  48              		.section	.text._ZN3leg11reset_angleEf,"ax",%progbits
  49              		.align	1
  50              		.global	_ZN3leg11reset_angleEf
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	_ZN3leg11reset_angleEf:
  57              	.LFB388:
  29:Core/Src/devs/leg.cpp **** bool leg::is_raised(){
  30:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=0) && (this->get_angle()<=(PI)))  ||  ((this->get_angle()<=(-PI)) && (this
  31:Core/Src/devs/leg.cpp **** 		return true;
  32:Core/Src/devs/leg.cpp **** 	}
  33:Core/Src/devs/leg.cpp **** 	else{
  34:Core/Src/devs/leg.cpp **** 		return false;
  35:Core/Src/devs/leg.cpp **** 	}
  36:Core/Src/devs/leg.cpp **** 
  37:Core/Src/devs/leg.cpp **** }
  38:Core/Src/devs/leg.cpp **** void leg::reset_angle(float angle_in_radians){
  58              		.loc 1 38 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL3:
  63 0000 08B5     		push	{r3, lr}
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
  39:Core/Src/devs/leg.cpp **** 	encoder__.reset_angle(angle_in_radians);
  68              		.loc 1 39 0
  69 0002 1C30     		adds	r0, r0, #28
  70              	.LVL4:
  71 0004 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
  72              	.LVL5:
  40:Core/Src/devs/leg.cpp **** }
  73              		.loc 1 40 0
  74 0008 08BD     		pop	{r3, pc}
  75              		.cfi_endproc
  76              	.LFE388:
  78              		.section	.text._ZN3leg9get_angleEv,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 3


  79              		.align	1
  80              		.global	_ZN3leg9get_angleEv
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	_ZN3leg9get_angleEv:
  87              	.LFB389:
  41:Core/Src/devs/leg.cpp **** float leg::get_angle(void){
  88              		.loc 1 41 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL6:
  93 0000 08B5     		push	{r3, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 3, -8
  97              		.cfi_offset 14, -4
  42:Core/Src/devs/leg.cpp **** 	return encoder__.get_angle();
  98              		.loc 1 42 0
  99 0002 1C30     		adds	r0, r0, #28
 100              	.LVL7:
 101 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 102              	.LVL8:
  43:Core/Src/devs/leg.cpp **** }
 103              		.loc 1 43 0
 104 0008 08BD     		pop	{r3, pc}
 105              		.cfi_endproc
 106              	.LFE389:
 108              		.global	__aeabi_f2d
 109              		.global	__aeabi_dcmple
 110              		.global	__aeabi_dcmpge
 111              		.section	.text._ZN3leg9is_raisedEv,"ax",%progbits
 112              		.align	1
 113              		.global	_ZN3leg9is_raisedEv
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	_ZN3leg9is_raisedEv:
 120              	.LFB387:
  29:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=0) && (this->get_angle()<=(PI)))  ||  ((this->get_angle()<=(-PI)) && (this
 121              		.loc 1 29 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL9:
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI3:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
  30:Core/Src/devs/leg.cpp **** 		return true;
 132              		.loc 1 30 0
 133 0004 FFF7FEFF 		bl	_ZN3leg9get_angleEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 4


 134              	.LVL10:
 135 0008 B5EEC00A 		vcmpe.f32	s0, #0
 136 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 137 0010 0CDB     		blt	.L8
  30:Core/Src/devs/leg.cpp **** 		return true;
 138              		.loc 1 30 0 is_stmt 0 discriminator 1
 139 0012 2046     		mov	r0, r4
 140 0014 FFF7FEFF 		bl	_ZN3leg9get_angleEv
 141              	.LVL11:
 142 0018 10EE100A 		vmov	r0, s0
 143 001c FFF7FEFF 		bl	__aeabi_f2d
 144              	.LVL12:
 145 0020 13A3     		adr	r3, .L20
 146 0022 D3E90023 		ldrd	r2, [r3]
 147 0026 FFF7FEFF 		bl	__aeabi_dcmple
 148              	.LVL13:
 149 002a F0B9     		cbnz	r0, .L12
 150              	.L8:
  30:Core/Src/devs/leg.cpp **** 		return true;
 151              		.loc 1 30 0 discriminator 4
 152 002c 2046     		mov	r0, r4
 153 002e FFF7FEFF 		bl	_ZN3leg9get_angleEv
 154              	.LVL14:
 155 0032 10EE100A 		vmov	r0, s0
 156 0036 FFF7FEFF 		bl	__aeabi_f2d
 157              	.LVL15:
 158 003a 0FA3     		adr	r3, .L20+8
 159 003c D3E90023 		ldrd	r2, [r3]
 160 0040 FFF7FEFF 		bl	__aeabi_dcmple
 161              	.LVL16:
 162 0044 08B9     		cbnz	r0, .L19
  34:Core/Src/devs/leg.cpp **** 	}
 163              		.loc 1 34 0 is_stmt 1
 164 0046 0020     		movs	r0, #0
 165              	.L10:
  37:Core/Src/devs/leg.cpp **** void leg::reset_angle(float angle_in_radians){
 166              		.loc 1 37 0
 167 0048 10BD     		pop	{r4, pc}
 168              	.LVL17:
 169              	.L19:
  30:Core/Src/devs/leg.cpp **** 		return true;
 170              		.loc 1 30 0 discriminator 5
 171 004a 2046     		mov	r0, r4
 172 004c FFF7FEFF 		bl	_ZN3leg9get_angleEv
 173              	.LVL18:
 174 0050 10EE100A 		vmov	r0, s0
 175 0054 FFF7FEFF 		bl	__aeabi_f2d
 176              	.LVL19:
 177 0058 09A3     		adr	r3, .L20+16
 178 005a D3E90023 		ldrd	r2, [r3]
 179 005e FFF7FEFF 		bl	__aeabi_dcmpge
 180              	.LVL20:
 181 0062 0028     		cmp	r0, #0
 182 0064 F0D0     		beq	.L10
  31:Core/Src/devs/leg.cpp **** 	}
 183              		.loc 1 31 0
 184 0066 0120     		movs	r0, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 5


 185 0068 EEE7     		b	.L10
 186              	.L12:
 187 006a 0120     		movs	r0, #1
 188 006c ECE7     		b	.L10
 189              	.L21:
 190 006e 00BF     		.align	3
 191              	.L20:
 192 0070 182D4454 		.word	1413754136
 193 0074 FB210940 		.word	1074340347
 194 0078 182D4454 		.word	1413754136
 195 007c FB2109C0 		.word	-1073143301
 196 0080 182D4454 		.word	1413754136
 197 0084 FB2119C0 		.word	-1072094725
 198              		.cfi_endproc
 199              	.LFE387:
 201              		.section	.text._ZN3leg9set_omegaEf,"ax",%progbits
 202              		.align	1
 203              		.global	_ZN3leg9set_omegaEf
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	_ZN3leg9set_omegaEf:
 210              	.LFB385:
   8:Core/Src/devs/leg.cpp **** 	encoder__.calculate_omega();
 211              		.loc 1 8 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL21:
 216 0000 70B5     		push	{r4, r5, r6, lr}
 217              	.LCFI4:
 218              		.cfi_def_cfa_offset 16
 219              		.cfi_offset 4, -16
 220              		.cfi_offset 5, -12
 221              		.cfi_offset 6, -8
 222              		.cfi_offset 14, -4
 223 0002 2DED028B 		vpush.64	{d8}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 24
 226              		.cfi_offset 80, -24
 227              		.cfi_offset 81, -20
 228 0006 0446     		mov	r4, r0
 229 0008 B0EE408A 		vmov.f32	s16, s0
   9:Core/Src/devs/leg.cpp **** 	omeg = encoder__.get_omega();
 230              		.loc 1 9 0
 231 000c 00F11C05 		add	r5, r0, #28
 232 0010 2846     		mov	r0, r5
 233              	.LVL22:
 234 0012 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 235              	.LVL23:
  10:Core/Src/devs/leg.cpp **** 	ang = encoder__.get_angle();
 236              		.loc 1 10 0
 237 0016 2846     		mov	r0, r5
 238 0018 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 239              	.LVL24:
 240 001c 2F4B     		ldr	r3, .L27
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 6


 241 001e 83ED000A 		vstr.32	s0, [r3]
  11:Core/Src/devs/leg.cpp **** 	if(this->is_raised()){
 242              		.loc 1 11 0
 243 0022 2846     		mov	r0, r5
 244 0024 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 245              	.LVL25:
 246 0028 2D4B     		ldr	r3, .L27+4
 247 002a 83ED000A 		vstr.32	s0, [r3]
  12:Core/Src/devs/leg.cpp **** 		gravity_compensator_factor = cos(encoder__.get_angle()) * LEG_WEIGHT * kl_ * (fabs(omeg-omega) / 
 248              		.loc 1 12 0
 249 002e 2046     		mov	r0, r4
 250 0030 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 251              	.LVL26:
 252 0034 B0BB     		cbnz	r0, .L26
  16:Core/Src/devs/leg.cpp **** 	}
 253              		.loc 1 16 0
 254 0036 2846     		mov	r0, r5
 255 0038 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 256              	.LVL27:
 257              	.LBB20:
 258              	.LBB21:
 259              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 7


  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 8


  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 9


 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 260              		.loc 2 185 0
 261 003c FFF7FEFF 		bl	cosf
 262              	.LVL28:
 263              	.LBE21:
 264              	.LBE20:
  16:Core/Src/devs/leg.cpp **** 	}
 265              		.loc 1 16 0
 266 0040 F2EE007A 		vmov.f32	s15, #8.0e+0
 267 0044 20EE270A 		vmul.f32	s0, s0, s15
 268 0048 D4ED117A 		vldr.32	s15, [r4, #68]
 269 004c 20EE270A 		vmul.f32	s0, s0, s15
 270 0050 224B     		ldr	r3, .L27
 271 0052 93ED007A 		vldr.32	s14, [r3]
 272 0056 37EE487A 		vsub.f32	s14, s14, s16
 273              	.LVL29:
 274              	.LBB22:
 275              	.LBB23:
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 10


 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 276              		.loc 2 242 0
 277 005a B0EEC77A 		vabs.f32	s14, s14
 278              	.LVL30:
 279              	.LBE23:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 11


 280              	.LBE22:
 281              	.LBB24:
 282              	.LBB25:
 283              	.LBB26:
 284              		.file 3 "Core/Inc/devs/motor.h"
   1:Core/Inc/devs/motor.h **** #ifndef _MOTOR_H_
   2:Core/Inc/devs/motor.h **** #define _MOTOR_H_
   3:Core/Inc/devs/motor.h **** 
   4:Core/Inc/devs/motor.h **** #include "stm32f4xx_hal.h"
   5:Core/Inc/devs/motor.h **** #include "tim.h"
   6:Core/Inc/devs/motor.h **** #include <math.h>
   7:Core/Inc/devs/motor.h **** 
   8:Core/Inc/devs/motor.h **** enum Direction{
   9:Core/Inc/devs/motor.h **** 	CLOCKWISE,
  10:Core/Inc/devs/motor.h **** 	ANTICLOCKWISE,
  11:Core/Inc/devs/motor.h **** 	STOP
  12:Core/Inc/devs/motor.h **** };
  13:Core/Inc/devs/motor.h **** 
  14:Core/Inc/devs/motor.h **** struct motor_config{
  15:Core/Inc/devs/motor.h **** 	float max_omega;
  16:Core/Inc/devs/motor.h **** 	float tolerance;
  17:Core/Inc/devs/motor.h **** 
  18:Core/Inc/devs/motor.h **** 	GPIO_TypeDef *in1_port;	
  19:Core/Inc/devs/motor.h ****         uint16_t in1_pin;
  20:Core/Inc/devs/motor.h ****         GPIO_TypeDef *in2_port;
  21:Core/Inc/devs/motor.h ****         uint16_t in2_pin;
  22:Core/Inc/devs/motor.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  23:Core/Inc/devs/motor.h ****         uint32_t channel;               // PWM Channel
  24:Core/Inc/devs/motor.h **** };
  25:Core/Inc/devs/motor.h **** 
  26:Core/Inc/devs/motor.h **** class motor
  27:Core/Inc/devs/motor.h **** {
  28:Core/Inc/devs/motor.h **** public:
  29:Core/Inc/devs/motor.h **** 	motor(){motor_ = 0;}
  30:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
  31:Core/Inc/devs/motor.h **** 	motor(motor &&) = default;
  32:Core/Inc/devs/motor.h **** 	motor(const motor &) = default;
  33:Core/Inc/devs/motor.h **** 	motor &operator=(motor &&) = default;
  34:Core/Inc/devs/motor.h **** 	motor &operator=(const motor &) = default;
  35:Core/Inc/devs/motor.h **** 	~motor(){}
  36:Core/Inc/devs/motor.h ****         void set_config(motor_config *motor) { motor_ = motor;}
  37:Core/Inc/devs/motor.h **** 	float get_max_omega(){return motor_->max_omega;}
 285              		.loc 3 37 0
 286 005e 6369     		ldr	r3, [r4, #20]
 287 0060 D3ED006A 		vldr.32	s13, [r3]
 288              	.LVL31:
 289              	.LBE26:
 290              	.LBE25:
 291              	.LBE24:
  16:Core/Src/devs/leg.cpp **** 	}
 292              		.loc 1 16 0
 293 0064 C7EE267A 		vdiv.f32	s15, s14, s13
 294 0068 20EE270A 		vmul.f32	s0, s0, s15
 295 006c 1D4B     		ldr	r3, .L27+8
 296 006e 83ED000A 		vstr.32	s0, [r3]
 297              	.L24:
  19:Core/Src/devs/leg.cpp **** 	// comp_omg = computed_omega;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 12


 298              		.loc 1 19 0
 299 0072 04F12C06 		add	r6, r4, #44
 300 0076 2846     		mov	r0, r5
 301 0078 FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 302              	.LVL32:
 303 007c F0EE480A 		vmov.f32	s1, s16
 304 0080 3046     		mov	r0, r6
 305 0082 FFF7FEFF 		bl	_ZN3pid11compute_pidEff
 306              	.LVL33:
 307 0086 B0EE408A 		vmov.f32	s16, s0
 308              	.LVL34:
  23:Core/Src/devs/leg.cpp **** 	motor__[1].set_omega(computed_omega);
 309              		.loc 1 23 0
 310 008a 04F11400 		add	r0, r4, #20
 311 008e FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 312              	.LVL35:
  24:Core/Src/devs/leg.cpp **** }
 313              		.loc 1 24 0
 314 0092 B0EE480A 		vmov.f32	s0, s16
 315 0096 04F11800 		add	r0, r4, #24
 316 009a FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 317              	.LVL36:
  25:Core/Src/devs/leg.cpp **** float leg::get_omega(void){
 318              		.loc 1 25 0
 319 009e BDEC028B 		vldm	sp!, {d8}
 320              	.LCFI6:
 321              		.cfi_remember_state
 322              		.cfi_restore 80
 323              		.cfi_restore 81
 324              		.cfi_def_cfa_offset 16
 325              	.LVL37:
 326 00a2 70BD     		pop	{r4, r5, r6, pc}
 327              	.LVL38:
 328              	.L26:
 329              	.LCFI7:
 330              		.cfi_restore_state
  13:Core/Src/devs/leg.cpp **** 	}
 331              		.loc 1 13 0
 332 00a4 2846     		mov	r0, r5
 333 00a6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 334              	.LVL39:
 335              	.LBB27:
 336              	.LBB28:
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 337              		.loc 2 185 0
 338 00aa FFF7FEFF 		bl	cosf
 339              	.LVL40:
 340              	.LBE28:
 341              	.LBE27:
  13:Core/Src/devs/leg.cpp **** 	}
 342              		.loc 1 13 0
 343 00ae D4ED127A 		vldr.32	s15, [r4, #72]
 344 00b2 27EE800A 		vmul.f32	s0, s15, s0
 345 00b6 094B     		ldr	r3, .L27
 346 00b8 93ED007A 		vldr.32	s14, [r3]
 347 00bc 37EE487A 		vsub.f32	s14, s14, s16
 348              	.LVL41:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 13


 349              	.LBB29:
 350              	.LBB30:
 351              		.loc 2 242 0
 352 00c0 B0EEC77A 		vabs.f32	s14, s14
 353              	.LVL42:
 354              	.LBE30:
 355              	.LBE29:
 356              	.LBB31:
 357              	.LBB32:
 358              	.LBB33:
 359              		.loc 3 37 0
 360 00c4 6369     		ldr	r3, [r4, #20]
 361 00c6 D3ED006A 		vldr.32	s13, [r3]
 362              	.LVL43:
 363              	.LBE33:
 364              	.LBE32:
 365              	.LBE31:
  13:Core/Src/devs/leg.cpp **** 	}
 366              		.loc 1 13 0
 367 00ca C7EE267A 		vdiv.f32	s15, s14, s13
 368 00ce 20EE270A 		vmul.f32	s0, s0, s15
 369 00d2 044B     		ldr	r3, .L27+8
 370 00d4 83ED000A 		vstr.32	s0, [r3]
 371 00d8 CBE7     		b	.L24
 372              	.L28:
 373 00da 00BF     		.align	2
 374              	.L27:
 375 00dc 00000000 		.word	.LANCHOR0
 376 00e0 00000000 		.word	.LANCHOR1
 377 00e4 00000000 		.word	.LANCHOR2
 378              		.cfi_endproc
 379              	.LFE385:
 381              		.section	.text._ZN3leg9get_stepsEv,"ax",%progbits
 382              		.align	1
 383              		.global	_ZN3leg9get_stepsEv
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	_ZN3leg9get_stepsEv:
 390              	.LFB390:
  44:Core/Src/devs/leg.cpp **** int leg::get_steps(){
 391              		.loc 1 44 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396              	.LVL44:
  45:Core/Src/devs/leg.cpp **** 	return steps;
  46:Core/Src/devs/leg.cpp **** }
 397              		.loc 1 46 0
 398 0000 0069     		ldr	r0, [r0, #16]
 399              	.LVL45:
 400 0002 7047     		bx	lr
 401              		.cfi_endproc
 402              	.LFE390:
 404              		.section	.text._ZN3leg17get_encoder_countEv,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 14


 405              		.align	1
 406              		.global	_ZN3leg17get_encoder_countEv
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv4-sp-d16
 412              	_ZN3leg17get_encoder_countEv:
 413              	.LFB391:
  47:Core/Src/devs/leg.cpp **** 
  48:Core/Src/devs/leg.cpp **** int16_t leg::get_encoder_count(){
 414              		.loc 1 48 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              	.LVL46:
 419 0000 08B5     		push	{r3, lr}
 420              	.LCFI8:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
  49:Core/Src/devs/leg.cpp **** 	return encoder__.get_count();
 424              		.loc 1 49 0
 425 0002 1C30     		adds	r0, r0, #28
 426              	.LVL47:
 427 0004 FFF7FEFF 		bl	_ZN7encoder9get_countEv
 428              	.LVL48:
  50:Core/Src/devs/leg.cpp **** }...
 429              		.loc 1 50 0
 430 0008 08BD     		pop	{r3, pc}
 431              		.cfi_endproc
 432              	.LFE391:
 434              		.global	comp_omg
 435              		.global	ang
 436              		.global	omeg
 437              		.global	gravity_compensator_factor
 438              		.section	.bss.ang,"aw",%nobits
 439              		.align	2
 440              		.set	.LANCHOR1,. + 0
 443              	ang:
 444 0000 00000000 		.space	4
 445              		.section	.bss.comp_omg,"aw",%nobits
 446              		.align	2
 449              	comp_omg:
 450 0000 00000000 		.space	4
 451              		.section	.bss.gravity_compensator_factor,"aw",%nobits
 452              		.align	2
 453              		.set	.LANCHOR2,. + 0
 456              	gravity_compensator_factor:
 457 0000 00000000 		.space	4
 458              		.section	.bss.omeg,"aw",%nobits
 459              		.align	2
 460              		.set	.LANCHOR0,. + 0
 463              	omeg:
 464 0000 00000000 		.space	4
 465              		.text
 466              	.Letext0:
 467              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 15


 468              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 469              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 470              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 471              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 472              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 473              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 474              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 475              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 476              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 477              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 478              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 479              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 480              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 481              		.file 18 "Core/Inc/periphs/tim.h"
 482              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 483              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 484              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 485              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 486              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 487              		.file 24 "Core/Inc/devs/encoder.h"
 488              		.file 25 "Core/Inc/devs/pid.h"
 489              		.file 26 "Core/Inc/devs/limit_switch.h"
 490              		.file 27 "Core/Inc/devs/leg.h"
 491              		.file 28 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 leg.cpp
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:18     .text._ZN3leg9get_omegaEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:25     .text._ZN3leg9get_omegaEv:00000000 _ZN3leg9get_omegaEv
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:49     .text._ZN3leg11reset_angleEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:56     .text._ZN3leg11reset_angleEf:00000000 _ZN3leg11reset_angleEf
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:79     .text._ZN3leg9get_angleEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:86     .text._ZN3leg9get_angleEv:00000000 _ZN3leg9get_angleEv
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:112    .text._ZN3leg9is_raisedEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:119    .text._ZN3leg9is_raisedEv:00000000 _ZN3leg9is_raisedEv
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:192    .text._ZN3leg9is_raisedEv:00000070 $d
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:202    .text._ZN3leg9set_omegaEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:209    .text._ZN3leg9set_omegaEf:00000000 _ZN3leg9set_omegaEf
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:375    .text._ZN3leg9set_omegaEf:000000dc $d
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:382    .text._ZN3leg9get_stepsEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:389    .text._ZN3leg9get_stepsEv:00000000 _ZN3leg9get_stepsEv
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:405    .text._ZN3leg17get_encoder_countEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:412    .text._ZN3leg17get_encoder_countEv:00000000 _ZN3leg17get_encoder_countEv
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:449    .bss.comp_omg:00000000 comp_omg
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:443    .bss.ang:00000000 ang
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:463    .bss.omeg:00000000 omeg
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:456    .bss.gravity_compensator_factor:00000000 gravity_compensator_factor
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:439    .bss.ang:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:446    .bss.comp_omg:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:452    .bss.gravity_compensator_factor:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc2MMVSN.s:459    .bss.omeg:00000000 $d

UNDEFINED SYMBOLS
_ZN7encoder9get_omegaEv
_ZN7encoder11reset_angleEf
_ZN7encoder9get_angleEv
__aeabi_f2d
__aeabi_dcmple
__aeabi_dcmpge
_ZN7encoder15calculate_omegaEv
cosf
_ZN3pid11compute_pidEff
_ZN5motor9set_omegaEf
_ZN7encoder9get_countEv
