ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_orientation.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN10Exp_SmoothD2Ev,"axG",%progbits,_ZN10Exp_SmoothD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN10Exp_SmoothD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN10Exp_SmoothD2Ev:
  26              	.LFB152:
  27              		.file 1 "Core/Inc/utils/smoothing_algorithm.h"
   1:Core/Inc/utils/smoothing_algorithm.h **** 
   2:Core/Inc/utils/smoothing_algorithm.h **** #ifndef _SMOOTHING_ALGORITHM_H_
   3:Core/Inc/utils/smoothing_algorithm.h **** #define _SMOOTHING_ALGORITHM_H_
   4:Core/Inc/utils/smoothing_algorithm.h **** 
   5:Core/Inc/utils/smoothing_algorithm.h **** #include "vec3.h"
   6:Core/Inc/utils/smoothing_algorithm.h **** 
   7:Core/Inc/utils/smoothing_algorithm.h **** // class Smoothing_Algorithm
   8:Core/Inc/utils/smoothing_algorithm.h **** // {
   9:Core/Inc/utils/smoothing_algorithm.h **** // public:
  10:Core/Inc/utils/smoothing_algorithm.h **** //         virtual float smooth(const float &input) = 0;
  11:Core/Inc/utils/smoothing_algorithm.h **** //         virtual ~Smoothing_Algorithm() { }
  12:Core/Inc/utils/smoothing_algorithm.h **** // };
  13:Core/Inc/utils/smoothing_algorithm.h **** 
  14:Core/Inc/utils/smoothing_algorithm.h **** class Exp_Smooth // : public Smoothing_Algorithm
  15:Core/Inc/utils/smoothing_algorithm.h **** {
  16:Core/Inc/utils/smoothing_algorithm.h **** public:
  17:Core/Inc/utils/smoothing_algorithm.h ****         Exp_Smooth();
  18:Core/Inc/utils/smoothing_algorithm.h ****         Exp_Smooth(float alpha);
  19:Core/Inc/utils/smoothing_algorithm.h ****         Exp_Smooth(Exp_Smooth &&) = default;
  20:Core/Inc/utils/smoothing_algorithm.h ****         Exp_Smooth(const Exp_Smooth &) = default;
  21:Core/Inc/utils/smoothing_algorithm.h ****         Exp_Smooth &operator=(Exp_Smooth &&) = default;
  22:Core/Inc/utils/smoothing_algorithm.h ****         Exp_Smooth &operator=(const Exp_Smooth &) = default;
  23:Core/Inc/utils/smoothing_algorithm.h ****         ~Exp_Smooth() { }
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 23 0
  35 0000 7047     		bx	lr
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 2


  36              		.cfi_endproc
  37              	.LFE152:
  39              		.weak	_ZN10Exp_SmoothD1Ev
  40              		.thumb_set _ZN10Exp_SmoothD1Ev,_ZN10Exp_SmoothD2Ev
  41              		.section	.text._ZN13Kalman_FilterD2Ev,"axG",%progbits,_ZN13Kalman_FilterD5Ev,comdat
  42              		.align	1
  43              		.weak	_ZN13Kalman_FilterD2Ev
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZN13Kalman_FilterD2Ev:
  50              	.LFB412:
  51              		.file 2 "Core/Inc/utils/kalman.h"
   1:Core/Inc/utils/kalman.h **** /*
   2:Core/Inc/utils/kalman.h ****  * kalman.h
   3:Core/Inc/utils/kalman.h ****  * 
   4:Core/Inc/utils/kalman.h ****  * Created : 11/13/2018
   5:Core/Inc/utils/kalman.h ****  *  Author : n-is
   6:Core/Inc/utils/kalman.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/kalman.h ****  */
   8:Core/Inc/utils/kalman.h **** 
   9:Core/Inc/utils/kalman.h **** #ifndef _KALMAN_H_
  10:Core/Inc/utils/kalman.h **** #define _KALMAN_H_
  11:Core/Inc/utils/kalman.h **** 
  12:Core/Inc/utils/kalman.h **** #include "mat.h"
  13:Core/Inc/utils/kalman.h **** 
  14:Core/Inc/utils/kalman.h **** class Kalman_Filter;
  15:Core/Inc/utils/kalman.h **** 
  16:Core/Inc/utils/kalman.h **** struct Kalman_Vars
  17:Core/Inc/utils/kalman.h **** {
  18:Core/Inc/utils/kalman.h **** public:
  19:Core/Inc/utils/kalman.h ****         void set_F(const Mat &f) { F_ = f; }
  20:Core/Inc/utils/kalman.h ****         void set_B(const Mat &b) { B_ = b; }
  21:Core/Inc/utils/kalman.h ****         void set_H(const Mat &h) { H_ = h; }
  22:Core/Inc/utils/kalman.h ****         void set_I(uint8_t n)    { I_ = Mat::eye(n); }
  23:Core/Inc/utils/kalman.h ****         void set_P(const Mat &p) { P_ = p; }
  24:Core/Inc/utils/kalman.h ****         void set_Q(const Mat &q) { Q_ = q; }
  25:Core/Inc/utils/kalman.h ****         void set_R(const Mat &r) { R_ = r; }
  26:Core/Inc/utils/kalman.h **** 
  27:Core/Inc/utils/kalman.h ****         friend class Kalman_Filter;
  28:Core/Inc/utils/kalman.h **** 
  29:Core/Inc/utils/kalman.h **** private:
  30:Core/Inc/utils/kalman.h ****         Mat F_, B_, H_, I_, P_, Q_, R_;
  31:Core/Inc/utils/kalman.h **** };
  32:Core/Inc/utils/kalman.h **** 
  33:Core/Inc/utils/kalman.h **** // Trying a Simple Sensor Fusion : Gyroscope and (Accelerometer/Magnetometer)
  34:Core/Inc/utils/kalman.h **** class Kalman_Filter
  35:Core/Inc/utils/kalman.h **** {
  36:Core/Inc/utils/kalman.h **** public:
  37:Core/Inc/utils/kalman.h ****         Kalman_Filter(Kalman_Vars *kv, int (*kv_init)(uint32_t)) :
  38:Core/Inc/utils/kalman.h ****         x_(2,1), u_(1,1), z_(1,1), K_(2,1)
  39:Core/Inc/utils/kalman.h ****         {
  40:Core/Inc/utils/kalman.h ****                 is_first_ = true;
  41:Core/Inc/utils/kalman.h ****                 kv_ = kv;
  42:Core/Inc/utils/kalman.h ****                 kv_init_ = kv_init;
  43:Core/Inc/utils/kalman.h ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 3


  44:Core/Inc/utils/kalman.h ****         Kalman_Filter(Kalman_Filter &&) = default;
  45:Core/Inc/utils/kalman.h ****         Kalman_Filter(const Kalman_Filter &) = default;
  46:Core/Inc/utils/kalman.h ****         Kalman_Filter &operator=(Kalman_Filter &&) = default;
  47:Core/Inc/utils/kalman.h ****         Kalman_Filter &operator=(const Kalman_Filter &) = default;
  48:Core/Inc/utils/kalman.h ****         ~Kalman_Filter() { }
  52              		.loc 2 48 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
  58              		.loc 2 48 0
  59 0000 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE412:
  63              		.weak	_ZN13Kalman_FilterD1Ev
  64              		.thumb_set _ZN13Kalman_FilterD1Ev,_ZN13Kalman_FilterD2Ev
  65              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  66              		.align	1
  67              		.weak	_ZN4Vec3IfED2Ev
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	_ZN4Vec3IfED2Ev:
  74              	.LFB439:
  75              		.file 3 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 4


  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  76              		.loc 3 32 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.LVL2:
  82              		.loc 3 32 0
  83 0000 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE439:
  87              		.weak	_ZN4Vec3IfED1Ev
  88              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  89              		.section	.text._ZN7MPU6050D2Ev,"axG",%progbits,_ZN7MPU6050D5Ev,comdat
  90              		.align	1
  91              		.weak	_ZN7MPU6050D2Ev
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv4-sp-d16
  97              	_ZN7MPU6050D2Ev:
  98              	.LFB465:
  99              		.file 4 "Core/Inc/devs/mpu6050.h"
   1:Core/Inc/devs/mpu6050.h **** /*
   2:Core/Inc/devs/mpu6050.h ****  * mpu6050.h
   3:Core/Inc/devs/mpu6050.h ****  * 
   4:Core/Inc/devs/mpu6050.h ****  * Created : 9/27/2018
   5:Core/Inc/devs/mpu6050.h ****  *  Author : n-is
   6:Core/Inc/devs/mpu6050.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/devs/mpu6050.h ****  */
   8:Core/Inc/devs/mpu6050.h **** 
   9:Core/Inc/devs/mpu6050.h **** #ifndef _MPU6050_H_
  10:Core/Inc/devs/mpu6050.h **** #define _MPU6050_H_
  11:Core/Inc/devs/mpu6050.h **** 
  12:Core/Inc/devs/mpu6050.h **** #include "vec3.h"
  13:Core/Inc/devs/mpu6050.h **** #include "i2c.h"
  14:Core/Inc/devs/mpu6050.h **** #include "mpu6050_reg.h"
  15:Core/Inc/devs/mpu6050.h **** 
  16:Core/Inc/devs/mpu6050.h **** #define I2C_TIMEOUT     (5)
  17:Core/Inc/devs/mpu6050.h **** 
  18:Core/Inc/devs/mpu6050.h **** enum Accel_Scale
  19:Core/Inc/devs/mpu6050.h **** {
  20:Core/Inc/devs/mpu6050.h ****         SCALE_2G = 0,
  21:Core/Inc/devs/mpu6050.h ****         SCALE_4G,
  22:Core/Inc/devs/mpu6050.h ****         SCALE_8G,
  23:Core/Inc/devs/mpu6050.h ****         SCALE_16G
  24:Core/Inc/devs/mpu6050.h **** };
  25:Core/Inc/devs/mpu6050.h **** 
  26:Core/Inc/devs/mpu6050.h **** enum Gyro_Scale
  27:Core/Inc/devs/mpu6050.h **** {
  28:Core/Inc/devs/mpu6050.h ****         SCALE_250 = 0,
  29:Core/Inc/devs/mpu6050.h ****         SCALE_500,
  30:Core/Inc/devs/mpu6050.h ****         SCALE_1000,
  31:Core/Inc/devs/mpu6050.h ****         SCALE_2000
  32:Core/Inc/devs/mpu6050.h **** };
  33:Core/Inc/devs/mpu6050.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 5


  34:Core/Inc/devs/mpu6050.h **** struct MPU6050
 100              		.loc 4 34 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.LVL3:
 106              		.loc 4 34 0
 107 0000 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE465:
 111              		.weak	_ZN7MPU6050D1Ev
 112              		.thumb_set _ZN7MPU6050D1Ev,_ZN7MPU6050D2Ev
 113              		.section	.text._ZN7HMC5883D2Ev,"axG",%progbits,_ZN7HMC5883D5Ev,comdat
 114              		.align	1
 115              		.weak	_ZN7HMC5883D2Ev
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	_ZN7HMC5883D2Ev:
 122              	.LFB468:
 123              		.file 5 "Core/Inc/devs/hmc5883.h"
   1:Core/Inc/devs/hmc5883.h **** /*
   2:Core/Inc/devs/hmc5883.h ****  * hmc5883.c
   3:Core/Inc/devs/hmc5883.h ****  * 
   4:Core/Inc/devs/hmc5883.h ****  * Created : 11/13/2018
   5:Core/Inc/devs/hmc5883.h ****  *  Author : n-is & ane
   6:Core/Inc/devs/hmc5883.h ****  *   email : 073bex421.nischal@pcampus.edu.np
   7:Core/Inc/devs/hmc5883.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   8:Core/Inc/devs/hmc5883.h ****  */
   9:Core/Inc/devs/hmc5883.h **** 
  10:Core/Inc/devs/hmc5883.h **** #ifndef _HMC5883_H_
  11:Core/Inc/devs/hmc5883.h **** #define _HMC5883_H_
  12:Core/Inc/devs/hmc5883.h **** 
  13:Core/Inc/devs/hmc5883.h **** #include "i2c.h"
  14:Core/Inc/devs/hmc5883.h **** #include "vec3.h"
  15:Core/Inc/devs/hmc5883.h **** #include "a4988.h"
  16:Core/Inc/devs/hmc5883.h **** 
  17:Core/Inc/devs/hmc5883.h **** struct HMC5883
 124              		.loc 5 17 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LVL4:
 130              		.loc 5 17 0
 131 0000 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE468:
 135              		.weak	_ZN7HMC5883D1Ev
 136              		.thumb_set _ZN7HMC5883D1Ev,_ZN7HMC5883D2Ev
 137              		.section	.text._ZN11Kalman_VarsD2Ev,"axG",%progbits,_ZN11Kalman_VarsD5Ev,comdat
 138              		.align	1
 139              		.weak	_ZN11Kalman_VarsD2Ev
 140              		.syntax unified
 141              		.thumb
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 6


 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	_ZN11Kalman_VarsD2Ev:
 146              	.LFB471:
  16:Core/Inc/utils/kalman.h **** {
 147              		.loc 2 16 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL5:
  16:Core/Inc/utils/kalman.h **** {
 153              		.loc 2 16 0
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE471:
 158              		.weak	_ZN11Kalman_VarsD1Ev
 159              		.thumb_set _ZN11Kalman_VarsD1Ev,_ZN11Kalman_VarsD2Ev
 160              		.section	.text._ZL8IMU_Initv,"ax",%progbits
 161              		.align	1
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZL8IMU_Initv:
 168              	.LFB425:
 169              		.file 6 "Core/Src/robot/robo_orientation.cpp"
   1:Core/Src/robot/robo_orientation.cpp **** #include "smoothing_algorithm.h"
   2:Core/Src/robot/robo_orientation.cpp **** #include "kalman.h"
   3:Core/Src/robot/robo_orientation.cpp **** #include "mpu6050.h"
   4:Core/Src/robot/robo_orientation.cpp **** #include "hmc5883.h"
   5:Core/Src/robot/robo_orientation.cpp **** 
   6:Core/Src/robot/robo_orientation.cpp **** int init_OriFilters(uint32_t dt_millis);
   7:Core/Src/robot/robo_orientation.cpp **** 
   8:Core/Src/robot/robo_orientation.cpp **** 
   9:Core/Src/robot/robo_orientation.cpp **** struct MPU6050 Body_IMU;
  10:Core/Src/robot/robo_orientation.cpp **** struct HMC5883 Body_HMC;
  11:Core/Src/robot/robo_orientation.cpp **** 
  12:Core/Src/robot/robo_orientation.cpp **** static Vec3<float> gOmega_Bias;
  13:Core/Src/robot/robo_orientation.cpp **** 
  14:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gXAccelAlpha35(0.035);
  15:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gYAccelAlpha35(0.035);
  16:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gZAccelAlpha35(0.035);
  17:Core/Src/robot/robo_orientation.cpp **** 
  18:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gXGyroAlpha35(0.035);
  19:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gYGyroAlpha35(0.035);
  20:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gZGyroAlpha35(0.035);
  21:Core/Src/robot/robo_orientation.cpp **** 
  22:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gXMagAlpha35(0.035);
  23:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gYMagAlpha35(0.035);
  24:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gZMagAlpha35(0.035);
  25:Core/Src/robot/robo_orientation.cpp **** 
  26:Core/Src/robot/robo_orientation.cpp **** static Kalman_Vars gAccel_Gyro;
  27:Core/Src/robot/robo_orientation.cpp **** 
  28:Core/Src/robot/robo_orientation.cpp **** static Kalman_Filter gRoll_Filter(&gAccel_Gyro, init_OriFilters);
  29:Core/Src/robot/robo_orientation.cpp **** static Kalman_Filter gPitch_Filter(&gAccel_Gyro, init_OriFilters);
  30:Core/Src/robot/robo_orientation.cpp **** static Kalman_Filter gYaw_Filter(&gAccel_Gyro, init_OriFilters);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 7


  31:Core/Src/robot/robo_orientation.cpp **** 
  32:Core/Src/robot/robo_orientation.cpp **** static void IMU_Init()
  33:Core/Src/robot/robo_orientation.cpp **** {
 170              		.loc 6 33 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 10B5     		push	{r4, lr}
 175              	.LCFI0:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
  34:Core/Src/robot/robo_orientation.cpp ****         Body_IMU.hi2c = &hi2c1;
 179              		.loc 6 34 0
 180 0002 0A48     		ldr	r0, .L9
 181 0004 0A4B     		ldr	r3, .L9+4
 182 0006 0360     		str	r3, [r0]
  35:Core/Src/robot/robo_orientation.cpp ****         Body_IMU.address = 0xD0;
 183              		.loc 6 35 0
 184 0008 D022     		movs	r2, #208
 185 000a 80F82820 		strb	r2, [r0, #40]
  36:Core/Src/robot/robo_orientation.cpp ****         Body_IMU.a_scale = Accel_Scale::SCALE_2G;
 186              		.loc 6 36 0
 187 000e 0022     		movs	r2, #0
 188 0010 80F83020 		strb	r2, [r0, #48]
  37:Core/Src/robot/robo_orientation.cpp ****         Body_IMU.g_scale = Gyro_Scale::SCALE_250;
 189              		.loc 6 37 0
 190 0014 80F83120 		strb	r2, [r0, #49]
  38:Core/Src/robot/robo_orientation.cpp **** 
  39:Core/Src/robot/robo_orientation.cpp ****         Body_HMC.hi2c = &hi2c1;
 191              		.loc 6 39 0
 192 0018 064C     		ldr	r4, .L9+8
 193 001a 2360     		str	r3, [r4]
  40:Core/Src/robot/robo_orientation.cpp ****         Body_HMC.address = 0x3C;
 194              		.loc 6 40 0
 195 001c 3C23     		movs	r3, #60
 196 001e 2374     		strb	r3, [r4, #16]
  41:Core/Src/robot/robo_orientation.cpp ****         // Body_HMC.hard_iron_offset.set_Values(43, 45, 0);
  42:Core/Src/robot/robo_orientation.cpp **** 
  43:Core/Src/robot/robo_orientation.cpp ****         MPU6050_Init(&Body_IMU);
 197              		.loc 6 43 0
 198 0020 FFF7FEFF 		bl	_Z12MPU6050_InitP7MPU6050
 199              	.LVL6:
  44:Core/Src/robot/robo_orientation.cpp ****         HMC5883_Init(&Body_HMC);
 200              		.loc 6 44 0
 201 0024 2046     		mov	r0, r4
 202 0026 FFF7FEFF 		bl	_Z12HMC5883_InitP7HMC5883
 203              	.LVL7:
  45:Core/Src/robot/robo_orientation.cpp **** }
 204              		.loc 6 45 0
 205 002a 10BD     		pop	{r4, pc}
 206              	.L10:
 207              		.align	2
 208              	.L9:
 209 002c 00000000 		.word	.LANCHOR0
 210 0030 00000000 		.word	hi2c1
 211 0034 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 8


 212              		.cfi_endproc
 213              	.LFE425:
 215              		.section	.text._Z15init_OriFiltersm,"ax",%progbits
 216              		.align	1
 217              		.global	_Z15init_OriFiltersm
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv4-sp-d16
 223              	_Z15init_OriFiltersm:
 224              	.LFB427:
  46:Core/Src/robot/robo_orientation.cpp **** 
  47:Core/Src/robot/robo_orientation.cpp **** int Angle_Init()
  48:Core/Src/robot/robo_orientation.cpp **** {
  49:Core/Src/robot/robo_orientation.cpp **** 	IMU_Init();
  50:Core/Src/robot/robo_orientation.cpp **** 
  51:Core/Src/robot/robo_orientation.cpp **** 	gOmega_Bias = MPU6050_Calc_OmegaBias(&Body_IMU, 1000);
  52:Core/Src/robot/robo_orientation.cpp **** 
  53:Core/Src/robot/robo_orientation.cpp **** 	return 0;
  54:Core/Src/robot/robo_orientation.cpp **** }
  55:Core/Src/robot/robo_orientation.cpp **** 
  56:Core/Src/robot/robo_orientation.cpp **** int init_OriFilters(uint32_t dt_millis)
  57:Core/Src/robot/robo_orientation.cpp **** {
 225              		.loc 6 57 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 480
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              	.LVL8:
 230 0000 10B5     		push	{r4, lr}
 231              	.LCFI1:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
 235 0002 2DED028B 		vpush.64	{d8}
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 16
 238              		.cfi_offset 80, -16
 239              		.cfi_offset 81, -12
 240 0006 F8B0     		sub	sp, sp, #480
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 496
  58:Core/Src/robot/robo_orientation.cpp **** 
  59:Core/Src/robot/robo_orientation.cpp ****         float dt = (float)dt_millis / 1000.0;
 243              		.loc 6 59 0
 244 0008 07EE900A 		vmov	s15, r0	@ int
 245 000c B8EE677A 		vcvt.f32.u32	s14, s15
 246 0010 DFEDA67A 		vldr.32	s15, .L47
 247 0014 87EE278A 		vdiv.f32	s16, s14, s15
 248              	.LVL9:
  60:Core/Src/robot/robo_orientation.cpp **** 
  61:Core/Src/robot/robo_orientation.cpp ****         // For Orientation Purpose
  62:Core/Src/robot/robo_orientation.cpp ****         Mat state_model(2,2);
 249              		.loc 6 62 0
 250 0018 0222     		movs	r2, #2
 251 001a 1146     		mov	r1, r2
 252 001c 67A8     		add	r0, sp, #412
 253              	.LVL10:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 9


 254 001e FFF7FEFF 		bl	_ZN3MatC1Ehh
 255              	.LVL11:
 256              	.LBB680:
 257              	.LBB681:
 258              		.file 7 "Core/Inc/utils/mat.h"
   1:Core/Inc/utils/mat.h **** /*
   2:Core/Inc/utils/mat.h ****  * mat.h
   3:Core/Inc/utils/mat.h ****  * 
   4:Core/Inc/utils/mat.h ****  * Created : 12/31/2018
   5:Core/Inc/utils/mat.h ****  *  Author : n-is
   6:Core/Inc/utils/mat.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/mat.h ****  */
   8:Core/Inc/utils/mat.h **** 
   9:Core/Inc/utils/mat.h **** #ifndef _MAT_H_
  10:Core/Inc/utils/mat.h **** #define _MAT_H_
  11:Core/Inc/utils/mat.h **** 
  12:Core/Inc/utils/mat.h **** #include <math.h>
  13:Core/Inc/utils/mat.h **** #include "vec3.h"
  14:Core/Inc/utils/mat.h **** 
  15:Core/Inc/utils/mat.h **** #define MAX_MATRIX_ROWS         4
  16:Core/Inc/utils/mat.h **** #define MAX_MATRIX_COLS         4
  17:Core/Inc/utils/mat.h **** 
  18:Core/Inc/utils/mat.h **** class Mat
  19:Core/Inc/utils/mat.h **** {
  20:Core/Inc/utils/mat.h **** public:
  21:Core/Inc/utils/mat.h ****         Mat() : Mat(0,0) { }
  22:Core/Inc/utils/mat.h ****         
  23:Core/Inc/utils/mat.h ****         template <size_t M, size_t N>
  24:Core/Inc/utils/mat.h ****         Mat(const float (&mat)[M][N]) : Mat(M,N){
  25:Core/Inc/utils/mat.h ****                 fill(mat);
  26:Core/Inc/utils/mat.h ****         }
  27:Core/Inc/utils/mat.h **** 
  28:Core/Inc/utils/mat.h ****         Mat(uint8_t rows, uint8_t columns);
  29:Core/Inc/utils/mat.h ****         Mat(Mat &&) = default;
  30:Core/Inc/utils/mat.h ****         Mat &operator=(Mat &&) = default;
  31:Core/Inc/utils/mat.h ****         ~Mat() { }
  32:Core/Inc/utils/mat.h **** 
  33:Core/Inc/utils/mat.h ****         uint8_t rows() const { return rows_; }
  34:Core/Inc/utils/mat.h ****         uint8_t cols() const { return cols_; }
  35:Core/Inc/utils/mat.h **** 
  36:Core/Inc/utils/mat.h ****         inline float &at(uint8_t i, uint8_t j) {
  37:Core/Inc/utils/mat.h ****                 if (!(i < rows_ && j < cols_)) {
 259              		.loc 7 37 0
 260 0022 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 261 0026 13B1     		cbz	r3, .L12
 262 0028 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 263 002c 1BB9     		cbnz	r3, .L13
 264              	.L12:
  38:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 265              		.loc 7 38 0
 266 002e 2621     		movs	r1, #38
 267 0030 9F48     		ldr	r0, .L47+4
 268 0032 FFF7FEFF 		bl	_Error_Handler
 269              	.LVL12:
 270              	.L13:
 271              	.LBE681:
 272              	.LBE680:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 10


  63:Core/Src/robot/robo_orientation.cpp ****         state_model.at(0,0) = 1;
 273              		.loc 6 63 0
 274 0036 4FF07E53 		mov	r3, #1065353216
 275 003a 6793     		str	r3, [sp, #412]	@ float
 276              	.LVL13:
 277              	.LBB682:
 278              	.LBB683:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 279              		.loc 7 37 0
 280 003c 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 281 0040 1BB1     		cbz	r3, .L14
 282 0042 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 283 0046 012B     		cmp	r3, #1
 284 0048 03D8     		bhi	.L15
 285              	.L14:
 286              		.loc 7 38 0
 287 004a 2621     		movs	r1, #38
 288 004c 9848     		ldr	r0, .L47+4
 289 004e FFF7FEFF 		bl	_Error_Handler
 290              	.LVL14:
 291              	.L15:
 292              	.LBE683:
 293              	.LBE682:
  64:Core/Src/robot/robo_orientation.cpp ****         state_model.at(0,1) = -dt;
 294              		.loc 6 64 0
 295 0052 F1EE487A 		vneg.f32	s15, s16
 296 0056 CDED687A 		vstr.32	s15, [sp, #416]
 297              	.LVL15:
 298              	.LBB684:
 299              	.LBB685:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 300              		.loc 7 37 0
 301 005a 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 302 005e 012B     		cmp	r3, #1
 303 0060 02D9     		bls	.L16
 304 0062 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 305 0066 1BB9     		cbnz	r3, .L17
 306              	.L16:
 307              		.loc 7 38 0
 308 0068 2621     		movs	r1, #38
 309 006a 9148     		ldr	r0, .L47+4
 310 006c FFF7FEFF 		bl	_Error_Handler
 311              	.LVL16:
 312              	.L17:
 313              	.LBE685:
 314              	.LBE684:
  65:Core/Src/robot/robo_orientation.cpp ****         state_model.at(1,0) = 0;
 315              		.loc 6 65 0
 316 0070 0023     		movs	r3, #0
 317 0072 6B93     		str	r3, [sp, #428]	@ float
 318              	.LVL17:
 319              	.LBB686:
 320              	.LBB687:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 321              		.loc 7 37 0
 322 0074 9DF8DC31 		ldrb	r3, [sp, #476]	@ zero_extendqisi2
 323 0078 012B     		cmp	r3, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 11


 324 007a 40F20781 		bls	.L18
 325 007e 9DF8DD31 		ldrb	r3, [sp, #477]	@ zero_extendqisi2
 326 0082 012B     		cmp	r3, #1
 327 0084 40F20281 		bls	.L18
 328              	.L19:
 329              	.LVL18:
 330              	.LBE687:
 331              	.LBE686:
  66:Core/Src/robot/robo_orientation.cpp ****         state_model.at(1,1) = 1;
 332              		.loc 6 66 0
 333 0088 4FF07E53 		mov	r3, #1065353216
 334 008c 6C93     		str	r3, [sp, #432]	@ float
  67:Core/Src/robot/robo_orientation.cpp **** 
  68:Core/Src/robot/robo_orientation.cpp ****         Mat control_model(2,1);
 335              		.loc 6 68 0
 336 008e 0122     		movs	r2, #1
 337 0090 0221     		movs	r1, #2
 338 0092 56A8     		add	r0, sp, #344
 339 0094 FFF7FEFF 		bl	_ZN3MatC1Ehh
 340              	.LVL19:
 341              	.LBB689:
 342              	.LBB690:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 343              		.loc 7 37 0
 344 0098 9DF89831 		ldrb	r3, [sp, #408]	@ zero_extendqisi2
 345 009c 13B1     		cbz	r3, .L20
 346 009e 9DF89931 		ldrb	r3, [sp, #409]	@ zero_extendqisi2
 347 00a2 1BB9     		cbnz	r3, .L21
 348              	.L20:
 349              		.loc 7 38 0
 350 00a4 2621     		movs	r1, #38
 351 00a6 8248     		ldr	r0, .L47+4
 352 00a8 FFF7FEFF 		bl	_Error_Handler
 353              	.LVL20:
 354              	.L21:
 355              	.LBE690:
 356              	.LBE689:
  69:Core/Src/robot/robo_orientation.cpp ****         control_model.at(0,0) = dt;
 357              		.loc 6 69 0
 358 00ac 8DED568A 		vstr.32	s16, [sp, #344]
 359              	.LVL21:
 360              	.LBB691:
 361              	.LBB692:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 362              		.loc 7 37 0
 363 00b0 9DF89831 		ldrb	r3, [sp, #408]	@ zero_extendqisi2
 364 00b4 012B     		cmp	r3, #1
 365 00b6 02D9     		bls	.L22
 366 00b8 9DF89931 		ldrb	r3, [sp, #409]	@ zero_extendqisi2
 367 00bc 1BB9     		cbnz	r3, .L23
 368              	.L22:
 369              		.loc 7 38 0
 370 00be 2621     		movs	r1, #38
 371 00c0 7B48     		ldr	r0, .L47+4
 372 00c2 FFF7FEFF 		bl	_Error_Handler
 373              	.LVL22:
 374              	.L23:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 12


 375              	.LBE692:
 376              	.LBE691:
  70:Core/Src/robot/robo_orientation.cpp ****         control_model.at(1,0) = 0;
 377              		.loc 6 70 0
 378 00c6 0023     		movs	r3, #0
 379 00c8 5A93     		str	r3, [sp, #360]	@ float
  71:Core/Src/robot/robo_orientation.cpp **** 
  72:Core/Src/robot/robo_orientation.cpp ****         Mat obs_model(1,2);
 380              		.loc 6 72 0
 381 00ca 0222     		movs	r2, #2
 382 00cc 0121     		movs	r1, #1
 383 00ce 45A8     		add	r0, sp, #276
 384 00d0 FFF7FEFF 		bl	_ZN3MatC1Ehh
 385              	.LVL23:
 386              	.LBB693:
 387              	.LBB694:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 388              		.loc 7 37 0
 389 00d4 9DF85431 		ldrb	r3, [sp, #340]	@ zero_extendqisi2
 390 00d8 13B1     		cbz	r3, .L24
 391 00da 9DF85531 		ldrb	r3, [sp, #341]	@ zero_extendqisi2
 392 00de 1BB9     		cbnz	r3, .L25
 393              	.L24:
 394              		.loc 7 38 0
 395 00e0 2621     		movs	r1, #38
 396 00e2 7348     		ldr	r0, .L47+4
 397 00e4 FFF7FEFF 		bl	_Error_Handler
 398              	.LVL24:
 399              	.L25:
 400              	.LBE694:
 401              	.LBE693:
  73:Core/Src/robot/robo_orientation.cpp ****         obs_model.at(0,0) = 1;
 402              		.loc 6 73 0
 403 00e8 4FF07E53 		mov	r3, #1065353216
 404 00ec 4593     		str	r3, [sp, #276]	@ float
 405              	.LVL25:
 406              	.LBB695:
 407              	.LBB696:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 408              		.loc 7 37 0
 409 00ee 9DF85431 		ldrb	r3, [sp, #340]	@ zero_extendqisi2
 410 00f2 1BB1     		cbz	r3, .L26
 411 00f4 9DF85531 		ldrb	r3, [sp, #341]	@ zero_extendqisi2
 412 00f8 012B     		cmp	r3, #1
 413 00fa 03D8     		bhi	.L27
 414              	.L26:
 415              		.loc 7 38 0
 416 00fc 2621     		movs	r1, #38
 417 00fe 6C48     		ldr	r0, .L47+4
 418 0100 FFF7FEFF 		bl	_Error_Handler
 419              	.LVL26:
 420              	.L27:
 421              	.LBE696:
 422              	.LBE695:
  74:Core/Src/robot/robo_orientation.cpp ****         obs_model.at(0,1) = 0;
 423              		.loc 6 74 0
 424 0104 0023     		movs	r3, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 13


 425 0106 4693     		str	r3, [sp, #280]	@ float
  75:Core/Src/robot/robo_orientation.cpp **** 
  76:Core/Src/robot/robo_orientation.cpp ****         Mat priori_error(2,2);
 426              		.loc 6 76 0
 427 0108 0222     		movs	r2, #2
 428 010a 1146     		mov	r1, r2
 429 010c 34A8     		add	r0, sp, #208
 430 010e FFF7FEFF 		bl	_ZN3MatC1Ehh
 431              	.LVL27:
 432              	.LBB697:
 433              	.LBB698:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 434              		.loc 7 37 0
 435 0112 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 436 0116 13B1     		cbz	r3, .L28
 437 0118 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 438 011c 1BB9     		cbnz	r3, .L29
 439              	.L28:
 440              		.loc 7 38 0
 441 011e 2621     		movs	r1, #38
 442 0120 6348     		ldr	r0, .L47+4
 443 0122 FFF7FEFF 		bl	_Error_Handler
 444              	.LVL28:
 445              	.L29:
 446              	.LBE698:
 447              	.LBE697:
  77:Core/Src/robot/robo_orientation.cpp ****         priori_error.at(0,0) = 10;
 448              		.loc 6 77 0
 449 0126 634B     		ldr	r3, .L47+8
 450 0128 3493     		str	r3, [sp, #208]	@ float
 451              	.LVL29:
 452              	.LBB699:
 453              	.LBB700:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 454              		.loc 7 37 0
 455 012a 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 456 012e 1BB1     		cbz	r3, .L30
 457 0130 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 458 0134 012B     		cmp	r3, #1
 459 0136 03D8     		bhi	.L31
 460              	.L30:
 461              		.loc 7 38 0
 462 0138 2621     		movs	r1, #38
 463 013a 5D48     		ldr	r0, .L47+4
 464 013c FFF7FEFF 		bl	_Error_Handler
 465              	.LVL30:
 466              	.L31:
 467              	.LBE700:
 468              	.LBE699:
  78:Core/Src/robot/robo_orientation.cpp ****         priori_error.at(0,1) = 0;
 469              		.loc 6 78 0
 470 0140 0023     		movs	r3, #0
 471 0142 3593     		str	r3, [sp, #212]	@ float
 472              	.LVL31:
 473              	.LBB701:
 474              	.LBB702:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 14


 475              		.loc 7 37 0
 476 0144 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 477 0148 012B     		cmp	r3, #1
 478 014a 02D9     		bls	.L32
 479 014c 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 480 0150 1BB9     		cbnz	r3, .L33
 481              	.L32:
 482              		.loc 7 38 0
 483 0152 2621     		movs	r1, #38
 484 0154 5648     		ldr	r0, .L47+4
 485 0156 FFF7FEFF 		bl	_Error_Handler
 486              	.LVL32:
 487              	.L33:
 488              	.LBE702:
 489              	.LBE701:
  79:Core/Src/robot/robo_orientation.cpp ****         priori_error.at(1,0) = 0;
 490              		.loc 6 79 0
 491 015a 0023     		movs	r3, #0
 492 015c 3893     		str	r3, [sp, #224]	@ float
 493              	.LVL33:
 494              	.LBB703:
 495              	.LBB704:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 496              		.loc 7 37 0
 497 015e 9DF81031 		ldrb	r3, [sp, #272]	@ zero_extendqisi2
 498 0162 012B     		cmp	r3, #1
 499 0164 40F29780 		bls	.L34
 500 0168 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 501 016c 012B     		cmp	r3, #1
 502 016e 40F29280 		bls	.L34
 503              	.L35:
 504              	.LVL34:
 505              	.LBE704:
 506              	.LBE703:
  80:Core/Src/robot/robo_orientation.cpp ****         priori_error.at(1,1) = 10;
 507              		.loc 6 80 0
 508 0172 504B     		ldr	r3, .L47+8
 509 0174 3993     		str	r3, [sp, #228]	@ float
  81:Core/Src/robot/robo_orientation.cpp **** 
  82:Core/Src/robot/robo_orientation.cpp ****         Mat process_error(2,2);
 510              		.loc 6 82 0
 511 0176 0222     		movs	r2, #2
 512 0178 1146     		mov	r1, r2
 513 017a 23A8     		add	r0, sp, #140
 514 017c FFF7FEFF 		bl	_ZN3MatC1Ehh
 515              	.LVL35:
 516              	.LBB706:
 517              	.LBB707:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 518              		.loc 7 37 0
 519 0180 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 520 0184 13B1     		cbz	r3, .L36
 521 0186 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 522 018a 1BB9     		cbnz	r3, .L37
 523              	.L36:
 524              		.loc 7 38 0
 525 018c 2621     		movs	r1, #38
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 15


 526 018e 4848     		ldr	r0, .L47+4
 527 0190 FFF7FEFF 		bl	_Error_Handler
 528              	.LVL36:
 529              	.L37:
 530              	.LBE707:
 531              	.LBE706:
  83:Core/Src/robot/robo_orientation.cpp ****         process_error.at(0,0) = 0.001;
 532              		.loc 6 83 0
 533 0194 484B     		ldr	r3, .L47+12
 534 0196 2393     		str	r3, [sp, #140]	@ float
 535              	.LVL37:
 536              	.LBB708:
 537              	.LBB709:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 538              		.loc 7 37 0
 539 0198 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 540 019c 1BB1     		cbz	r3, .L38
 541 019e 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 542 01a2 012B     		cmp	r3, #1
 543 01a4 03D8     		bhi	.L39
 544              	.L38:
 545              		.loc 7 38 0
 546 01a6 2621     		movs	r1, #38
 547 01a8 4148     		ldr	r0, .L47+4
 548 01aa FFF7FEFF 		bl	_Error_Handler
 549              	.LVL38:
 550              	.L39:
 551              	.LBE709:
 552              	.LBE708:
  84:Core/Src/robot/robo_orientation.cpp ****         process_error.at(0,1) = 0;
 553              		.loc 6 84 0
 554 01ae 0023     		movs	r3, #0
 555 01b0 2493     		str	r3, [sp, #144]	@ float
 556              	.LVL39:
 557              	.LBB710:
 558              	.LBB711:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 559              		.loc 7 37 0
 560 01b2 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 561 01b6 012B     		cmp	r3, #1
 562 01b8 02D9     		bls	.L40
 563 01ba 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 564 01be 1BB9     		cbnz	r3, .L41
 565              	.L40:
 566              		.loc 7 38 0
 567 01c0 2621     		movs	r1, #38
 568 01c2 3B48     		ldr	r0, .L47+4
 569 01c4 FFF7FEFF 		bl	_Error_Handler
 570              	.LVL40:
 571              	.L41:
 572              	.LBE711:
 573              	.LBE710:
  85:Core/Src/robot/robo_orientation.cpp ****         process_error.at(1,0) = 0;
 574              		.loc 6 85 0
 575 01c8 0023     		movs	r3, #0
 576 01ca 2793     		str	r3, [sp, #156]	@ float
 577              	.LVL41:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 16


 578              	.LBB712:
 579              	.LBB713:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 580              		.loc 7 37 0
 581 01cc 9DF8CC30 		ldrb	r3, [sp, #204]	@ zero_extendqisi2
 582 01d0 012B     		cmp	r3, #1
 583 01d2 65D9     		bls	.L42
 584 01d4 9DF8CD30 		ldrb	r3, [sp, #205]	@ zero_extendqisi2
 585 01d8 012B     		cmp	r3, #1
 586 01da 61D9     		bls	.L42
 587              	.L43:
 588              	.LVL42:
 589              	.LBE713:
 590              	.LBE712:
  86:Core/Src/robot/robo_orientation.cpp ****         process_error.at(1,1) = 0.003;
 591              		.loc 6 86 0
 592 01dc 374B     		ldr	r3, .L47+16
 593 01de 2893     		str	r3, [sp, #160]	@ float
  87:Core/Src/robot/robo_orientation.cpp ****         
  88:Core/Src/robot/robo_orientation.cpp ****         Mat measure_error(1,1);
 594              		.loc 6 88 0
 595 01e0 0122     		movs	r2, #1
 596 01e2 1146     		mov	r1, r2
 597 01e4 12A8     		add	r0, sp, #72
 598 01e6 FFF7FEFF 		bl	_ZN3MatC1Ehh
 599              	.LVL43:
 600              	.LBB715:
 601              	.LBB716:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 602              		.loc 7 37 0
 603 01ea 9DF88830 		ldrb	r3, [sp, #136]	@ zero_extendqisi2
 604 01ee 13B1     		cbz	r3, .L44
 605 01f0 9DF88930 		ldrb	r3, [sp, #137]	@ zero_extendqisi2
 606 01f4 1BB9     		cbnz	r3, .L45
 607              	.L44:
 608              		.loc 7 38 0
 609 01f6 2621     		movs	r1, #38
 610 01f8 2D48     		ldr	r0, .L47+4
 611 01fa FFF7FEFF 		bl	_Error_Handler
 612              	.LVL44:
 613              	.L45:
 614              	.LBE716:
 615              	.LBE715:
  89:Core/Src/robot/robo_orientation.cpp ****         measure_error.at(0,0) = 0.04;
 616              		.loc 6 89 0
 617 01fe 304B     		ldr	r3, .L47+20
 618 0200 1293     		str	r3, [sp, #72]	@ float
 619              	.LVL45:
 620              	.LBB717:
 621              	.LBB718:
 622              	.LBB719:
  39:Core/Inc/utils/mat.h ****                 }
  40:Core/Inc/utils/mat.h ****                 return matrix_[i][j];
  41:Core/Inc/utils/mat.h ****         }
  42:Core/Inc/utils/mat.h **** 
  43:Core/Inc/utils/mat.h **** 
  44:Core/Inc/utils/mat.h ****         Mat(const Mat &m);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 17


  45:Core/Inc/utils/mat.h **** 
  46:Core/Inc/utils/mat.h ****         Mat &operator=(const Mat &m) {
  47:Core/Inc/utils/mat.h ****                 Mat temp(m);
 623              		.loc 7 47 0
 624 0202 67A9     		add	r1, sp, #412
 625              	.LVL46:
 626 0204 01A8     		add	r0, sp, #4
 627 0206 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 628              	.LVL47:
  48:Core/Inc/utils/mat.h ****                 swap(*this, temp);
 629              		.loc 7 48 0
 630 020a 2E4C     		ldr	r4, .L47+24
 631 020c 01A9     		add	r1, sp, #4
 632 020e 2046     		mov	r0, r4
 633 0210 FFF7FEFF 		bl	_Z4swapR3MatS0_
 634              	.LVL48:
 635              	.LBE719:
 636              	.LBE718:
 637              	.LBE717:
 638              	.LBB720:
 639              	.LBB721:
 640              	.LBB722:
  47:Core/Inc/utils/mat.h ****                 swap(*this, temp);
 641              		.loc 7 47 0
 642 0214 56A9     		add	r1, sp, #344
 643              	.LVL49:
 644 0216 01A8     		add	r0, sp, #4
 645 0218 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 646              	.LVL50:
 647              		.loc 7 48 0
 648 021c 01A9     		add	r1, sp, #4
 649 021e 04F14400 		add	r0, r4, #68
 650 0222 FFF7FEFF 		bl	_Z4swapR3MatS0_
 651              	.LVL51:
 652              	.LBE722:
 653              	.LBE721:
 654              	.LBE720:
 655              	.LBB723:
 656              	.LBB724:
 657              	.LBB725:
  47:Core/Inc/utils/mat.h ****                 swap(*this, temp);
 658              		.loc 7 47 0
 659 0226 45A9     		add	r1, sp, #276
 660              	.LVL52:
 661 0228 01A8     		add	r0, sp, #4
 662 022a FFF7FEFF 		bl	_ZN3MatC1ERKS_
 663              	.LVL53:
 664              		.loc 7 48 0
 665 022e 01A9     		add	r1, sp, #4
 666 0230 04F18800 		add	r0, r4, #136
 667 0234 FFF7FEFF 		bl	_Z4swapR3MatS0_
 668              	.LVL54:
 669              	.LBE725:
 670              	.LBE724:
 671              	.LBE723:
 672              	.LBB726:
 673              	.LBB727:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 18


  22:Core/Inc/utils/kalman.h ****         void set_P(const Mat &p) { P_ = p; }
 674              		.loc 2 22 0
 675 0238 0221     		movs	r1, #2
 676 023a 01A8     		add	r0, sp, #4
 677 023c FFF7FEFF 		bl	_ZN3Mat3eyeEh
 678              	.LVL55:
 679 0240 4222     		movs	r2, #66
 680 0242 01A9     		add	r1, sp, #4
 681 0244 04F1CC00 		add	r0, r4, #204
 682 0248 FFF7FEFF 		bl	memcpy
 683              	.LVL56:
 684              	.LBE727:
 685              	.LBE726:
 686              	.LBB728:
 687              	.LBB729:
 688              	.LBB730:
  47:Core/Inc/utils/mat.h ****                 swap(*this, temp);
 689              		.loc 7 47 0
 690 024c 34A9     		add	r1, sp, #208
 691              	.LVL57:
 692 024e 01A8     		add	r0, sp, #4
 693 0250 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 694              	.LVL58:
 695              		.loc 7 48 0
 696 0254 01A9     		add	r1, sp, #4
 697 0256 04F58870 		add	r0, r4, #272
 698 025a FFF7FEFF 		bl	_Z4swapR3MatS0_
 699              	.LVL59:
 700              	.LBE730:
 701              	.LBE729:
 702              	.LBE728:
 703              	.LBB731:
 704              	.LBB732:
 705              	.LBB733:
  47:Core/Inc/utils/mat.h ****                 swap(*this, temp);
 706              		.loc 7 47 0
 707 025e 23A9     		add	r1, sp, #140
 708              	.LVL60:
 709 0260 01A8     		add	r0, sp, #4
 710 0262 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 711              	.LVL61:
 712              		.loc 7 48 0
 713 0266 01A9     		add	r1, sp, #4
 714 0268 04F5AA70 		add	r0, r4, #340
 715 026c FFF7FEFF 		bl	_Z4swapR3MatS0_
 716              	.LVL62:
 717              	.LBE733:
 718              	.LBE732:
 719              	.LBE731:
 720              	.LBB734:
 721              	.LBB735:
 722              	.LBB736:
  47:Core/Inc/utils/mat.h ****                 swap(*this, temp);
 723              		.loc 7 47 0
 724 0270 12A9     		add	r1, sp, #72
 725              	.LVL63:
 726 0272 01A8     		add	r0, sp, #4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 19


 727 0274 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 728              	.LVL64:
 729              		.loc 7 48 0
 730 0278 01A9     		add	r1, sp, #4
 731 027a 04F5CC70 		add	r0, r4, #408
 732 027e FFF7FEFF 		bl	_Z4swapR3MatS0_
 733              	.LVL65:
 734              	.LBE736:
 735              	.LBE735:
 736              	.LBE734:
  90:Core/Src/robot/robo_orientation.cpp **** 
  91:Core/Src/robot/robo_orientation.cpp ****         gAccel_Gyro.set_F(state_model);
  92:Core/Src/robot/robo_orientation.cpp ****         gAccel_Gyro.set_B(control_model);
  93:Core/Src/robot/robo_orientation.cpp ****         gAccel_Gyro.set_H(obs_model);
  94:Core/Src/robot/robo_orientation.cpp ****         gAccel_Gyro.set_I(2);
  95:Core/Src/robot/robo_orientation.cpp ****         gAccel_Gyro.set_P(priori_error);
  96:Core/Src/robot/robo_orientation.cpp ****         gAccel_Gyro.set_Q(process_error);
  97:Core/Src/robot/robo_orientation.cpp ****         gAccel_Gyro.set_R(measure_error);
  98:Core/Src/robot/robo_orientation.cpp **** 
  99:Core/Src/robot/robo_orientation.cpp ****         return 0;
 100:Core/Src/robot/robo_orientation.cpp **** }
 737              		.loc 6 100 0
 738 0282 0020     		movs	r0, #0
 739 0284 78B0     		add	sp, sp, #480
 740              	.LCFI4:
 741              		.cfi_remember_state
 742              		.cfi_def_cfa_offset 16
 743              		@ sp needed
 744 0286 BDEC028B 		vldm	sp!, {d8}
 745              	.LCFI5:
 746              		.cfi_restore 80
 747              		.cfi_restore 81
 748              		.cfi_def_cfa_offset 8
 749              	.LVL66:
 750 028a 10BD     		pop	{r4, pc}
 751              	.LVL67:
 752              	.L18:
 753              	.LCFI6:
 754              		.cfi_restore_state
 755              	.LBB737:
 756              	.LBB688:
  38:Core/Inc/utils/mat.h ****                 }
 757              		.loc 7 38 0
 758 028c 2621     		movs	r1, #38
 759 028e 0848     		ldr	r0, .L47+4
 760 0290 FFF7FEFF 		bl	_Error_Handler
 761              	.LVL68:
 762 0294 F8E6     		b	.L19
 763              	.LVL69:
 764              	.L34:
 765              	.LBE688:
 766              	.LBE737:
 767              	.LBB738:
 768              	.LBB705:
 769 0296 2621     		movs	r1, #38
 770 0298 0548     		ldr	r0, .L47+4
 771 029a FFF7FEFF 		bl	_Error_Handler
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 20


 772              	.LVL70:
 773 029e 68E7     		b	.L35
 774              	.LVL71:
 775              	.L42:
 776              	.LBE705:
 777              	.LBE738:
 778              	.LBB739:
 779              	.LBB714:
 780 02a0 2621     		movs	r1, #38
 781 02a2 0348     		ldr	r0, .L47+4
 782 02a4 FFF7FEFF 		bl	_Error_Handler
 783              	.LVL72:
 784 02a8 98E7     		b	.L43
 785              	.L48:
 786 02aa 00BF     		.align	2
 787              	.L47:
 788 02ac 00007A44 		.word	1148846080
 789 02b0 00000000 		.word	.LC0
 790 02b4 00002041 		.word	1092616192
 791 02b8 6F12833A 		.word	981668463
 792 02bc A69B443B 		.word	994352038
 793 02c0 0AD7233D 		.word	1025758986
 794 02c4 00000000 		.word	.LANCHOR2
 795              	.LBE714:
 796              	.LBE739:
 797              		.cfi_endproc
 798              	.LFE427:
 800              		.section	.text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE,"axG",%progbits,_ZN13Kalman_FilterC5EP11Ka
 801              		.align	1
 802              		.weak	_ZN13Kalman_FilterC2EP11Kalman_VarsPFimE
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	_ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:
 809              	.LFB409:
  37:Core/Inc/utils/kalman.h ****         x_(2,1), u_(1,1), z_(1,1), K_(2,1)
 810              		.loc 2 37 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              	.LVL73:
 815 0000 70B5     		push	{r4, r5, r6, lr}
 816              	.LCFI7:
 817              		.cfi_def_cfa_offset 16
 818              		.cfi_offset 4, -16
 819              		.cfi_offset 5, -12
 820              		.cfi_offset 6, -8
 821              		.cfi_offset 14, -4
 822 0002 0446     		mov	r4, r0
 823 0004 0E46     		mov	r6, r1
 824 0006 1546     		mov	r5, r2
 825              	.LBB740:
  38:Core/Inc/utils/kalman.h ****         {
 826              		.loc 2 38 0
 827 0008 0122     		movs	r2, #1
 828              	.LVL74:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 21


 829 000a 0221     		movs	r1, #2
 830              	.LVL75:
 831 000c 0C30     		adds	r0, r0, #12
 832              	.LVL76:
 833 000e FFF7FEFF 		bl	_ZN3MatC1Ehh
 834              	.LVL77:
 835 0012 0122     		movs	r2, #1
 836 0014 1146     		mov	r1, r2
 837 0016 04F15000 		add	r0, r4, #80
 838 001a FFF7FEFF 		bl	_ZN3MatC1Ehh
 839              	.LVL78:
 840 001e 0122     		movs	r2, #1
 841 0020 1146     		mov	r1, r2
 842 0022 04F19400 		add	r0, r4, #148
 843 0026 FFF7FEFF 		bl	_ZN3MatC1Ehh
 844              	.LVL79:
 845 002a 0122     		movs	r2, #1
 846 002c 0221     		movs	r1, #2
 847 002e 04F1D800 		add	r0, r4, #216
 848 0032 FFF7FEFF 		bl	_ZN3MatC1Ehh
 849              	.LVL80:
  40:Core/Inc/utils/kalman.h ****                 kv_ = kv;
 850              		.loc 2 40 0
 851 0036 0123     		movs	r3, #1
 852 0038 2371     		strb	r3, [r4, #4]
  41:Core/Inc/utils/kalman.h ****                 kv_init_ = kv_init;
 853              		.loc 2 41 0
 854 003a A660     		str	r6, [r4, #8]
  42:Core/Inc/utils/kalman.h ****         }
 855              		.loc 2 42 0
 856 003c 2560     		str	r5, [r4]
 857              	.LBE740:
  43:Core/Inc/utils/kalman.h ****         Kalman_Filter(Kalman_Filter &&) = default;
 858              		.loc 2 43 0
 859 003e 2046     		mov	r0, r4
 860 0040 70BD     		pop	{r4, r5, r6, pc}
 861              		.cfi_endproc
 862              	.LFE409:
 864              		.weak	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 865              		.thumb_set _ZN13Kalman_FilterC1EP11Kalman_VarsPFimE,_ZN13Kalman_FilterC2EP11Kalman_VarsPFimE
 866              		.section	.text._ZN13Kalman_Filter6filterEffm,"axG",%progbits,_ZN13Kalman_Filter6filterEffm,comdat
 867              		.align	1
 868              		.weak	_ZN13Kalman_Filter6filterEffm
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	_ZN13Kalman_Filter6filterEffm:
 875              	.LFB414:
  49:Core/Inc/utils/kalman.h ****         
  50:Core/Inc/utils/kalman.h ****         float filter(float measured, float control_input, uint32_t dt_millis) {
 876              		.loc 2 50 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 680
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880              	.LVL81:
 881 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 22


 882              	.LCFI8:
 883              		.cfi_def_cfa_offset 24
 884              		.cfi_offset 4, -24
 885              		.cfi_offset 5, -20
 886              		.cfi_offset 6, -16
 887              		.cfi_offset 7, -12
 888              		.cfi_offset 8, -8
 889              		.cfi_offset 14, -4
 890 0004 2DED028B 		vpush.64	{d8}
 891              	.LCFI9:
 892              		.cfi_def_cfa_offset 32
 893              		.cfi_offset 80, -32
 894              		.cfi_offset 81, -28
 895 0008 ADF52A7D 		sub	sp, sp, #680
 896              	.LCFI10:
 897              		.cfi_def_cfa_offset 712
 898 000c 0446     		mov	r4, r0
 899 000e B0EE408A 		vmov.f32	s16, s0
  51:Core/Inc/utils/kalman.h ****                 // float dt = (float)dt_millis / 1000.0;
  52:Core/Inc/utils/kalman.h ****                 // For first element of vector
  53:Core/Inc/utils/kalman.h ****                 if (is_first_) {
 900              		.loc 2 53 0
 901 0012 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 902 0014 13B3     		cbz	r3, .L52
  54:Core/Inc/utils/kalman.h ****                         // Initiaize all the variables at the first call
  55:Core/Inc/utils/kalman.h ****                         kv_init_(dt_millis);
 903              		.loc 2 55 0
 904 0016 0368     		ldr	r3, [r0]
 905 0018 0846     		mov	r0, r1
 906              	.LVL82:
 907 001a 9847     		blx	r3
 908              	.LVL83:
  56:Core/Inc/utils/kalman.h **** 
  57:Core/Inc/utils/kalman.h ****                         is_first_ = false;
 909              		.loc 2 57 0
 910 001c 0023     		movs	r3, #0
 911 001e 2371     		strb	r3, [r4, #4]
 912              	.LVL84:
 913              	.LBB825:
 914              	.LBB826:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 915              		.loc 7 37 0
 916 0020 94F84C30 		ldrb	r3, [r4, #76]	@ zero_extendqisi2
 917 0024 13B1     		cbz	r3, .L53
 918 0026 94F84D30 		ldrb	r3, [r4, #77]	@ zero_extendqisi2
 919 002a 1BB9     		cbnz	r3, .L54
 920              	.L53:
  38:Core/Inc/utils/mat.h ****                 }
 921              		.loc 7 38 0
 922 002c 2621     		movs	r1, #38
 923 002e AF48     		ldr	r0, .L67
 924 0030 FFF7FEFF 		bl	_Error_Handler
 925              	.LVL85:
 926              	.L54:
 927              	.LBE826:
 928              	.LBE825:
  58:Core/Inc/utils/kalman.h ****                         x_.at(0,0) = measured;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 23


 929              		.loc 2 58 0
 930 0034 84ED038A 		vstr.32	s16, [r4, #12]
 931              	.L55:
 932              	.LVL86:
 933              	.LBB827:
 934              	.LBB828:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 935              		.loc 7 37 0
 936 0038 94F84C30 		ldrb	r3, [r4, #76]	@ zero_extendqisi2
 937 003c 13B1     		cbz	r3, .L64
 938 003e 94F84D30 		ldrb	r3, [r4, #77]	@ zero_extendqisi2
 939 0042 1BB9     		cbnz	r3, .L65
 940              	.L64:
  38:Core/Inc/utils/mat.h ****                 }
 941              		.loc 7 38 0
 942 0044 2621     		movs	r1, #38
 943 0046 A948     		ldr	r0, .L67
 944 0048 FFF7FEFF 		bl	_Error_Handler
 945              	.LVL87:
 946              	.L65:
 947              	.LBE828:
 948              	.LBE827:
  59:Core/Inc/utils/kalman.h ****                         // u_.at(0,0) = control_input;
  60:Core/Inc/utils/kalman.h ****                 }
  61:Core/Inc/utils/kalman.h ****                 else {
  62:Core/Inc/utils/kalman.h ****                         u_.at(0,0) = control_input;
  63:Core/Inc/utils/kalman.h ****                         z_.at(0,0) = measured;
  64:Core/Inc/utils/kalman.h **** 
  65:Core/Inc/utils/kalman.h ****                         // Predict
  66:Core/Inc/utils/kalman.h ****                         x_ = (kv_->F_)*(x_) + (kv_->B_)*(u_);
  67:Core/Inc/utils/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
  68:Core/Inc/utils/kalman.h **** 
  69:Core/Inc/utils/kalman.h ****                         // Update
  70:Core/Inc/utils/kalman.h ****                         K_ = kv_->P_*(kv_->H_.trans())*(((kv_->H_*(kv_->P_)*(kv_->H_.trans())) + kv
  71:Core/Inc/utils/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
  72:Core/Inc/utils/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
  73:Core/Inc/utils/kalman.h ****                 }
  74:Core/Inc/utils/kalman.h **** 
  75:Core/Inc/utils/kalman.h ****                 return x_.at(0,0);
  76:Core/Inc/utils/kalman.h ****         }
 949              		.loc 2 76 0
 950 004c 94ED030A 		vldr.32	s0, [r4, #12]
 951 0050 0DF52A7D 		add	sp, sp, #680
 952              	.LCFI11:
 953              		.cfi_remember_state
 954              		.cfi_def_cfa_offset 32
 955              		@ sp needed
 956 0054 BDEC028B 		vldm	sp!, {d8}
 957              	.LCFI12:
 958              		.cfi_restore 80
 959              		.cfi_restore 81
 960              		.cfi_def_cfa_offset 24
 961              	.LVL88:
 962 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 963              	.LVL89:
 964              	.L52:
 965              	.LCFI13:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 24


 966              		.cfi_restore_state
 967 005c F0EE608A 		vmov.f32	s17, s1
 968              	.LVL90:
 969              	.LBB829:
 970              	.LBB830:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 971              		.loc 7 37 0
 972 0060 90F89030 		ldrb	r3, [r0, #144]	@ zero_extendqisi2
 973 0064 13B1     		cbz	r3, .L56
 974 0066 90F89130 		ldrb	r3, [r0, #145]	@ zero_extendqisi2
 975 006a 1BB9     		cbnz	r3, .L57
 976              	.L56:
  38:Core/Inc/utils/mat.h ****                 }
 977              		.loc 7 38 0
 978 006c 2621     		movs	r1, #38
 979              	.LVL91:
 980 006e 9F48     		ldr	r0, .L67
 981              	.LVL92:
 982 0070 FFF7FEFF 		bl	_Error_Handler
 983              	.LVL93:
 984              	.L57:
 985              	.LBE830:
 986              	.LBE829:
  62:Core/Inc/utils/kalman.h ****                         z_.at(0,0) = measured;
 987              		.loc 2 62 0
 988 0074 C4ED148A 		vstr.32	s17, [r4, #80]
 989              	.LVL94:
 990              	.LBB831:
 991              	.LBB832:
  37:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
 992              		.loc 7 37 0
 993 0078 94F8D430 		ldrb	r3, [r4, #212]	@ zero_extendqisi2
 994 007c 13B1     		cbz	r3, .L58
 995 007e 94F8D530 		ldrb	r3, [r4, #213]	@ zero_extendqisi2
 996 0082 1BB9     		cbnz	r3, .L59
 997              	.L58:
  38:Core/Inc/utils/mat.h ****                 }
 998              		.loc 7 38 0
 999 0084 2621     		movs	r1, #38
 1000 0086 9948     		ldr	r0, .L67
 1001 0088 FFF7FEFF 		bl	_Error_Handler
 1002              	.LVL95:
 1003              	.L59:
 1004              	.LBE832:
 1005              	.LBE831:
  63:Core/Inc/utils/kalman.h **** 
 1006              		.loc 2 63 0
 1007 008c 84ED258A 		vstr.32	s16, [r4, #148]
  66:Core/Inc/utils/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 1008              		.loc 2 66 0
 1009 0090 A168     		ldr	r1, [r4, #8]
 1010 0092 55A8     		add	r0, sp, #340
 1011 0094 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1012              	.LVL96:
 1013 0098 04F10C05 		add	r5, r4, #12
 1014              	.LVL97:
 1015              	.LBB833:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 25


 1016              	.LBB834:
  49:Core/Inc/utils/mat.h **** 
  50:Core/Inc/utils/mat.h ****                 return *this;
  51:Core/Inc/utils/mat.h ****         }
  52:Core/Inc/utils/mat.h **** 
  53:Core/Inc/utils/mat.h ****         Mat &operator+=(const Mat &rhs);
  54:Core/Inc/utils/mat.h ****         Mat &operator-=(const Mat &rhs);
  55:Core/Inc/utils/mat.h ****         Mat &operator*=(const Mat &rhs);
  56:Core/Inc/utils/mat.h ****         Mat &operator*=(const Vec3<float> &rhs);
  57:Core/Inc/utils/mat.h **** 
  58:Core/Inc/utils/mat.h ****         friend Mat operator+(Mat lhs, const Mat &rhs) {
  59:Core/Inc/utils/mat.h ****                 lhs += rhs;
  60:Core/Inc/utils/mat.h ****                 return lhs;
  61:Core/Inc/utils/mat.h ****         }
  62:Core/Inc/utils/mat.h **** 
  63:Core/Inc/utils/mat.h ****         friend Mat operator-(Mat lhs, const Mat &rhs) {
  64:Core/Inc/utils/mat.h ****                 lhs -= rhs;
  65:Core/Inc/utils/mat.h ****                 return lhs;
  66:Core/Inc/utils/mat.h ****         }
  67:Core/Inc/utils/mat.h **** 
  68:Core/Inc/utils/mat.h ****         friend Mat operator*(Mat lhs, const Mat &rhs) {
  69:Core/Inc/utils/mat.h ****                 lhs *= rhs;
 1017              		.loc 7 69 0
 1018 009c 2946     		mov	r1, r5
 1019 009e 55A8     		add	r0, sp, #340
 1020              	.LVL98:
 1021 00a0 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1022              	.LVL99:
  70:Core/Inc/utils/mat.h ****                 return lhs;
 1023              		.loc 7 70 0
 1024 00a4 4426     		movs	r6, #68
 1025 00a6 3246     		mov	r2, r6
 1026 00a8 55A9     		add	r1, sp, #340
 1027              	.LVL100:
 1028 00aa 66A8     		add	r0, sp, #408
 1029 00ac FFF7FEFF 		bl	memcpy
 1030              	.LVL101:
 1031              	.LBE834:
 1032              	.LBE833:
  66:Core/Inc/utils/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 1033              		.loc 2 66 0
 1034 00b0 A168     		ldr	r1, [r4, #8]
 1035 00b2 3144     		add	r1, r1, r6
 1036 00b4 77A8     		add	r0, sp, #476
 1037 00b6 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1038              	.LVL102:
 1039              	.LBB835:
 1040              	.LBB836:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1041              		.loc 7 69 0
 1042 00ba 04F15001 		add	r1, r4, #80
 1043              	.LVL103:
 1044 00be 77A8     		add	r0, sp, #476
 1045              	.LVL104:
 1046 00c0 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1047              	.LVL105:
 1048              		.loc 7 70 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 26


 1049 00c4 3246     		mov	r2, r6
 1050 00c6 77A9     		add	r1, sp, #476
 1051              	.LVL106:
 1052 00c8 88A8     		add	r0, sp, #544
 1053 00ca FFF7FEFF 		bl	memcpy
 1054              	.LVL107:
 1055              	.LBE836:
 1056              	.LBE835:
 1057              	.LBB837:
 1058              	.LBB838:
  59:Core/Inc/utils/mat.h ****                 return lhs;
 1059              		.loc 7 59 0
 1060 00ce 88A9     		add	r1, sp, #544
 1061              	.LVL108:
 1062 00d0 66A8     		add	r0, sp, #408
 1063              	.LVL109:
 1064 00d2 FFF7FEFF 		bl	_ZN3MatpLERKS_
 1065              	.LVL110:
  60:Core/Inc/utils/mat.h ****         }
 1066              		.loc 7 60 0
 1067 00d6 3246     		mov	r2, r6
 1068 00d8 66A9     		add	r1, sp, #408
 1069              	.LVL111:
 1070 00da 99A8     		add	r0, sp, #612
 1071 00dc FFF7FEFF 		bl	memcpy
 1072              	.LVL112:
 1073              	.LBE838:
 1074              	.LBE837:
  66:Core/Inc/utils/kalman.h ****                         kv_->P_ = (kv_->F_)*(kv_->P_)*((kv_->F_).trans()) + kv_->Q_;
 1075              		.loc 2 66 0
 1076 00e0 4227     		movs	r7, #66
 1077 00e2 3A46     		mov	r2, r7
 1078 00e4 99A9     		add	r1, sp, #612
 1079 00e6 2846     		mov	r0, r5
 1080 00e8 FFF7FEFF 		bl	memcpy
 1081              	.LVL113:
  67:Core/Inc/utils/kalman.h **** 
 1082              		.loc 2 67 0
 1083 00ec A168     		ldr	r1, [r4, #8]
 1084 00ee 55A8     		add	r0, sp, #340
 1085 00f0 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1086              	.LVL114:
 1087 00f4 A168     		ldr	r1, [r4, #8]
 1088              	.LVL115:
 1089              	.LBB839:
 1090              	.LBB840:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1091              		.loc 7 69 0
 1092 00f6 01F58871 		add	r1, r1, #272
 1093              	.LVL116:
 1094 00fa 55A8     		add	r0, sp, #340
 1095              	.LVL117:
 1096 00fc FFF7FEFF 		bl	_ZN3MatmLERKS_
 1097              	.LVL118:
 1098              		.loc 7 70 0
 1099 0100 3246     		mov	r2, r6
 1100 0102 55A9     		add	r1, sp, #340
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 27


 1101              	.LVL119:
 1102 0104 66A8     		add	r0, sp, #408
 1103 0106 FFF7FEFF 		bl	memcpy
 1104              	.LVL120:
 1105              	.LBE840:
 1106              	.LBE839:
 1107              	.LBB841:
 1108              	.LBB842:
  71:Core/Inc/utils/mat.h ****         }
  72:Core/Inc/utils/mat.h **** 
  73:Core/Inc/utils/mat.h ****         friend Mat operator*(Mat lhs, const Vec3<float> &rhs) {
  74:Core/Inc/utils/mat.h ****                 lhs *= rhs;
  75:Core/Inc/utils/mat.h ****                 return lhs;
  76:Core/Inc/utils/mat.h ****         }
  77:Core/Inc/utils/mat.h **** 
  78:Core/Inc/utils/mat.h ****         Mat mult(const Mat &m);
  79:Core/Inc/utils/mat.h ****         Mat mult_EW(float num);
  80:Core/Inc/utils/mat.h ****         Mat transpose();
  81:Core/Inc/utils/mat.h **** 
  82:Core/Inc/utils/mat.h ****         // Just an alias for getting transpose of a matrix
  83:Core/Inc/utils/mat.h ****         inline Mat trans() { return transpose(); }
 1109              		.loc 7 83 0
 1110 010a A168     		ldr	r1, [r4, #8]
 1111 010c 77A8     		add	r0, sp, #476
 1112 010e FFF7FEFF 		bl	_ZN3Mat9transposeEv
 1113              	.LVL121:
 1114              	.LBE842:
 1115              	.LBE841:
 1116              	.LBB843:
 1117              	.LBB844:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1118              		.loc 7 69 0
 1119 0112 77A9     		add	r1, sp, #476
 1120              	.LVL122:
 1121 0114 66A8     		add	r0, sp, #408
 1122              	.LVL123:
 1123 0116 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1124              	.LVL124:
  70:Core/Inc/utils/mat.h ****         }
 1125              		.loc 7 70 0
 1126 011a 3246     		mov	r2, r6
 1127 011c 66A9     		add	r1, sp, #408
 1128              	.LVL125:
 1129 011e 88A8     		add	r0, sp, #544
 1130 0120 FFF7FEFF 		bl	memcpy
 1131              	.LVL126:
 1132              	.LBE844:
 1133              	.LBE843:
  67:Core/Inc/utils/kalman.h **** 
 1134              		.loc 2 67 0
 1135 0124 A168     		ldr	r1, [r4, #8]
 1136              	.LVL127:
 1137              	.LBB845:
 1138              	.LBB846:
  59:Core/Inc/utils/mat.h ****                 return lhs;
 1139              		.loc 7 59 0
 1140 0126 01F5AA71 		add	r1, r1, #340
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 28


 1141              	.LVL128:
 1142 012a 88A8     		add	r0, sp, #544
 1143              	.LVL129:
 1144 012c FFF7FEFF 		bl	_ZN3MatpLERKS_
 1145              	.LVL130:
  60:Core/Inc/utils/mat.h ****         }
 1146              		.loc 7 60 0
 1147 0130 3246     		mov	r2, r6
 1148 0132 88A9     		add	r1, sp, #544
 1149              	.LVL131:
 1150 0134 99A8     		add	r0, sp, #612
 1151 0136 FFF7FEFF 		bl	memcpy
 1152              	.LVL132:
 1153              	.LBE846:
 1154              	.LBE845:
  67:Core/Inc/utils/kalman.h **** 
 1155              		.loc 2 67 0
 1156 013a A068     		ldr	r0, [r4, #8]
 1157 013c 3A46     		mov	r2, r7
 1158 013e 99A9     		add	r1, sp, #612
 1159 0140 00F58870 		add	r0, r0, #272
 1160 0144 FFF7FEFF 		bl	memcpy
 1161              	.LVL133:
  70:Core/Inc/utils/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1162              		.loc 2 70 0
 1163 0148 A168     		ldr	r1, [r4, #8]
 1164 014a 01F58871 		add	r1, r1, #272
 1165 014e 0DEB0600 		add	r0, sp, r6
 1166 0152 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1167              	.LVL134:
 1168 0156 A168     		ldr	r1, [r4, #8]
 1169              	.LVL135:
 1170              	.LBB847:
 1171              	.LBB848:
 1172              		.loc 7 83 0
 1173 0158 8831     		adds	r1, r1, #136
 1174              	.LVL136:
 1175 015a 6846     		mov	r0, sp
 1176 015c FFF7FEFF 		bl	_ZN3Mat9transposeEv
 1177              	.LVL137:
 1178              	.LBE848:
 1179              	.LBE847:
 1180              	.LBB849:
 1181              	.LBB850:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1182              		.loc 7 69 0
 1183 0160 6946     		mov	r1, sp
 1184 0162 0DEB0600 		add	r0, sp, r6
 1185 0166 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1186              	.LVL138:
  70:Core/Inc/utils/mat.h ****         }
 1187              		.loc 7 70 0
 1188 016a 3246     		mov	r2, r6
 1189 016c 0DEB0601 		add	r1, sp, r6
 1190 0170 22A8     		add	r0, sp, #136
 1191 0172 FFF7FEFF 		bl	memcpy
 1192              	.LVL139:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 29


 1193              	.LBE850:
 1194              	.LBE849:
  70:Core/Inc/utils/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1195              		.loc 2 70 0
 1196 0176 A168     		ldr	r1, [r4, #8]
 1197 0178 8831     		adds	r1, r1, #136
 1198 017a 33A8     		add	r0, sp, #204
 1199 017c FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1200              	.LVL140:
 1201 0180 A168     		ldr	r1, [r4, #8]
 1202              	.LVL141:
 1203              	.LBB851:
 1204              	.LBB852:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1205              		.loc 7 69 0
 1206 0182 01F58871 		add	r1, r1, #272
 1207              	.LVL142:
 1208 0186 33A8     		add	r0, sp, #204
 1209              	.LVL143:
 1210 0188 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1211              	.LVL144:
  70:Core/Inc/utils/mat.h ****         }
 1212              		.loc 7 70 0
 1213 018c 3246     		mov	r2, r6
 1214 018e 33A9     		add	r1, sp, #204
 1215              	.LVL145:
 1216 0190 44A8     		add	r0, sp, #272
 1217 0192 FFF7FEFF 		bl	memcpy
 1218              	.LVL146:
 1219              	.LBE852:
 1220              	.LBE851:
  70:Core/Inc/utils/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1221              		.loc 2 70 0
 1222 0196 A168     		ldr	r1, [r4, #8]
 1223              	.LVL147:
 1224              	.LBB853:
 1225              	.LBB854:
 1226              		.loc 7 83 0
 1227 0198 8831     		adds	r1, r1, #136
 1228              	.LVL148:
 1229 019a 55A8     		add	r0, sp, #340
 1230 019c FFF7FEFF 		bl	_ZN3Mat9transposeEv
 1231              	.LVL149:
 1232              	.LBE854:
 1233              	.LBE853:
 1234              	.LBB855:
 1235              	.LBB856:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1236              		.loc 7 69 0
 1237 01a0 55A9     		add	r1, sp, #340
 1238              	.LVL150:
 1239 01a2 44A8     		add	r0, sp, #272
 1240              	.LVL151:
 1241 01a4 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1242              	.LVL152:
  70:Core/Inc/utils/mat.h ****         }
 1243              		.loc 7 70 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 30


 1244 01a8 3246     		mov	r2, r6
 1245 01aa 44A9     		add	r1, sp, #272
 1246              	.LVL153:
 1247 01ac 66A8     		add	r0, sp, #408
 1248 01ae FFF7FEFF 		bl	memcpy
 1249              	.LVL154:
 1250              	.LBE856:
 1251              	.LBE855:
  70:Core/Inc/utils/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1252              		.loc 2 70 0
 1253 01b2 A168     		ldr	r1, [r4, #8]
 1254              	.LVL155:
 1255              	.LBB857:
 1256              	.LBB858:
  59:Core/Inc/utils/mat.h ****                 return lhs;
 1257              		.loc 7 59 0
 1258 01b4 01F5CC71 		add	r1, r1, #408
 1259              	.LVL156:
 1260 01b8 66A8     		add	r0, sp, #408
 1261              	.LVL157:
 1262 01ba FFF7FEFF 		bl	_ZN3MatpLERKS_
 1263              	.LVL158:
  60:Core/Inc/utils/mat.h ****         }
 1264              		.loc 7 60 0
 1265 01be 3246     		mov	r2, r6
 1266 01c0 66A9     		add	r1, sp, #408
 1267              	.LVL159:
 1268 01c2 77A8     		add	r0, sp, #476
 1269 01c4 FFF7FEFF 		bl	memcpy
 1270              	.LVL160:
 1271              	.LBE858:
 1272              	.LBE857:
 1273              	.LBB859:
 1274              	.LBB860:
  84:Core/Inc/utils/mat.h **** 
  85:Core/Inc/utils/mat.h ****         void fill(float num) {
  86:Core/Inc/utils/mat.h ****                 for (uint8_t i = 0; i < rows_; ++i) {
  87:Core/Inc/utils/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
  88:Core/Inc/utils/mat.h ****                                 matrix_[i][j] = num;
  89:Core/Inc/utils/mat.h ****                         }
  90:Core/Inc/utils/mat.h ****                 }
  91:Core/Inc/utils/mat.h ****         }
  92:Core/Inc/utils/mat.h **** 
  93:Core/Inc/utils/mat.h ****         template <size_t M, size_t N>
  94:Core/Inc/utils/mat.h ****         void fill(const float (&mat)[M][N]) {
  95:Core/Inc/utils/mat.h ****                 if (M != rows_ && N != cols_) {
  96:Core/Inc/utils/mat.h ****                         _Error_Handler(__FILE__, __LINE__);
  97:Core/Inc/utils/mat.h ****                 }
  98:Core/Inc/utils/mat.h ****                 for (uint8_t i = 0; i < M; ++i) {
  99:Core/Inc/utils/mat.h ****                         for (uint8_t j = 0; j < N; ++j) {
 100:Core/Inc/utils/mat.h ****                                 matrix_[i][j] = mat[i][j];
 101:Core/Inc/utils/mat.h ****                         }
 102:Core/Inc/utils/mat.h ****                 }
 103:Core/Inc/utils/mat.h ****         }
 104:Core/Inc/utils/mat.h **** 
 105:Core/Inc/utils/mat.h ****         void add_Rows(uint8_t r) {
 106:Core/Inc/utils/mat.h ****                 if (r + rows_ <= MAX_MATRIX_ROWS) {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 31


 107:Core/Inc/utils/mat.h ****                         rows_ += r;
 108:Core/Inc/utils/mat.h ****                 }
 109:Core/Inc/utils/mat.h ****         }
 110:Core/Inc/utils/mat.h **** 
 111:Core/Inc/utils/mat.h ****         void add_Cols(uint8_t c) {
 112:Core/Inc/utils/mat.h ****                 if (c + cols_ <= MAX_MATRIX_COLS) {
 113:Core/Inc/utils/mat.h ****                         cols_ += c;
 114:Core/Inc/utils/mat.h ****                 }
 115:Core/Inc/utils/mat.h ****         }
 116:Core/Inc/utils/mat.h **** 
 117:Core/Inc/utils/mat.h ****         static Mat eye(uint8_t n);
 118:Core/Inc/utils/mat.h **** 
 119:Core/Inc/utils/mat.h ****         bool is_Zero() const;
 120:Core/Inc/utils/mat.h ****         void swap_Rows(uint8_t a, uint8_t b);
 121:Core/Inc/utils/mat.h ****         void swap_Cols(size_t a, size_t b);        
 122:Core/Inc/utils/mat.h ****         bool inv(Mat &inv) const;
 123:Core/Inc/utils/mat.h **** 
 124:Core/Inc/utils/mat.h ****         Mat inv() const
 125:Core/Inc/utils/mat.h ****         {
 126:Core/Inc/utils/mat.h ****                 Mat i(rows_, cols_);
 1275              		.loc 7 126 0
 1276 01c8 9DF81D22 		ldrb	r2, [sp, #541]	@ zero_extendqisi2
 1277 01cc 9DF81C12 		ldrb	r1, [sp, #540]	@ zero_extendqisi2
 1278 01d0 88A8     		add	r0, sp, #544
 1279 01d2 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1280              	.LVL161:
 127:Core/Inc/utils/mat.h ****                 if(inv(i)) {
 1281              		.loc 7 127 0
 1282 01d6 88A9     		add	r1, sp, #544
 1283 01d8 77A8     		add	r0, sp, #476
 1284              	.LVL162:
 1285 01da FFF7FEFF 		bl	_ZNK3Mat3invERS_
 1286              	.LVL163:
 1287 01de 0028     		cmp	r0, #0
 1288 01e0 70D0     		beq	.L63
 1289              	.L60:
 1290              	.LVL164:
 1291              	.LBE860:
 1292              	.LBE859:
 1293              	.LBB865:
 1294              	.LBB866:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1295              		.loc 7 69 0
 1296 01e2 88A9     		add	r1, sp, #544
 1297              	.LVL165:
 1298 01e4 22A8     		add	r0, sp, #136
 1299              	.LVL166:
 1300 01e6 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1301              	.LVL167:
  70:Core/Inc/utils/mat.h ****         }
 1302              		.loc 7 70 0
 1303 01ea 4426     		movs	r6, #68
 1304 01ec 3246     		mov	r2, r6
 1305 01ee 22A9     		add	r1, sp, #136
 1306              	.LVL168:
 1307 01f0 99A8     		add	r0, sp, #612
 1308 01f2 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 32


 1309              	.LVL169:
 1310              	.LBE866:
 1311              	.LBE865:
  70:Core/Inc/utils/kalman.h ****                         x_ += K_*(z_ - (kv_->H_)*(x_));
 1312              		.loc 2 70 0
 1313 01f6 04F1D807 		add	r7, r4, #216
 1314 01fa 4FF04208 		mov	r8, #66
 1315 01fe 4246     		mov	r2, r8
 1316 0200 99A9     		add	r1, sp, #612
 1317 0202 3846     		mov	r0, r7
 1318 0204 FFF7FEFF 		bl	memcpy
 1319              	.LVL170:
  71:Core/Inc/utils/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
 1320              		.loc 2 71 0
 1321 0208 3946     		mov	r1, r7
 1322 020a 88A8     		add	r0, sp, #544
 1323 020c FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1324              	.LVL171:
 1325 0210 04F19401 		add	r1, r4, #148
 1326 0214 66A8     		add	r0, sp, #408
 1327 0216 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1328              	.LVL172:
 1329 021a A168     		ldr	r1, [r4, #8]
 1330 021c 8831     		adds	r1, r1, #136
 1331 021e 44A8     		add	r0, sp, #272
 1332 0220 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1333              	.LVL173:
 1334              	.LBB867:
 1335              	.LBB868:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1336              		.loc 7 69 0
 1337 0224 2946     		mov	r1, r5
 1338 0226 44A8     		add	r0, sp, #272
 1339              	.LVL174:
 1340 0228 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1341              	.LVL175:
  70:Core/Inc/utils/mat.h ****         }
 1342              		.loc 7 70 0
 1343 022c 3246     		mov	r2, r6
 1344 022e 44A9     		add	r1, sp, #272
 1345              	.LVL176:
 1346 0230 55A8     		add	r0, sp, #340
 1347 0232 FFF7FEFF 		bl	memcpy
 1348              	.LVL177:
 1349              	.LBE868:
 1350              	.LBE867:
 1351              	.LBB869:
 1352              	.LBB870:
  64:Core/Inc/utils/mat.h ****                 return lhs;
 1353              		.loc 7 64 0
 1354 0236 55A9     		add	r1, sp, #340
 1355              	.LVL178:
 1356 0238 66A8     		add	r0, sp, #408
 1357              	.LVL179:
 1358 023a FFF7FEFF 		bl	_ZN3MatmIERKS_
 1359              	.LVL180:
  65:Core/Inc/utils/mat.h ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 33


 1360              		.loc 7 65 0
 1361 023e 3246     		mov	r2, r6
 1362 0240 66A9     		add	r1, sp, #408
 1363              	.LVL181:
 1364 0242 77A8     		add	r0, sp, #476
 1365 0244 FFF7FEFF 		bl	memcpy
 1366              	.LVL182:
 1367              	.LBE870:
 1368              	.LBE869:
 1369              	.LBB871:
 1370              	.LBB872:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1371              		.loc 7 69 0
 1372 0248 77A9     		add	r1, sp, #476
 1373              	.LVL183:
 1374 024a 88A8     		add	r0, sp, #544
 1375              	.LVL184:
 1376 024c FFF7FEFF 		bl	_ZN3MatmLERKS_
 1377              	.LVL185:
  70:Core/Inc/utils/mat.h ****         }
 1378              		.loc 7 70 0
 1379 0250 3246     		mov	r2, r6
 1380 0252 88A9     		add	r1, sp, #544
 1381              	.LVL186:
 1382 0254 99A8     		add	r0, sp, #612
 1383 0256 FFF7FEFF 		bl	memcpy
 1384              	.LVL187:
 1385              	.LBE872:
 1386              	.LBE871:
  71:Core/Inc/utils/kalman.h ****                         kv_->P_ = (kv_->I_ - K_*(kv_->H_))*(kv_->P_);
 1387              		.loc 2 71 0
 1388 025a 99A9     		add	r1, sp, #612
 1389 025c 2846     		mov	r0, r5
 1390 025e FFF7FEFF 		bl	_ZN3MatpLERKS_
 1391              	.LVL188:
  72:Core/Inc/utils/kalman.h ****                 }
 1392              		.loc 2 72 0
 1393 0262 A168     		ldr	r1, [r4, #8]
 1394 0264 CC31     		adds	r1, r1, #204
 1395 0266 77A8     		add	r0, sp, #476
 1396 0268 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1397              	.LVL189:
 1398 026c 3946     		mov	r1, r7
 1399 026e 55A8     		add	r0, sp, #340
 1400 0270 FFF7FEFF 		bl	_ZN3MatC1ERKS_
 1401              	.LVL190:
 1402 0274 A168     		ldr	r1, [r4, #8]
 1403              	.LVL191:
 1404              	.LBB873:
 1405              	.LBB874:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1406              		.loc 7 69 0
 1407 0276 8831     		adds	r1, r1, #136
 1408              	.LVL192:
 1409 0278 55A8     		add	r0, sp, #340
 1410              	.LVL193:
 1411 027a FFF7FEFF 		bl	_ZN3MatmLERKS_
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 34


 1412              	.LVL194:
  70:Core/Inc/utils/mat.h ****         }
 1413              		.loc 7 70 0
 1414 027e 3246     		mov	r2, r6
 1415 0280 55A9     		add	r1, sp, #340
 1416              	.LVL195:
 1417 0282 66A8     		add	r0, sp, #408
 1418 0284 FFF7FEFF 		bl	memcpy
 1419              	.LVL196:
 1420              	.LBE874:
 1421              	.LBE873:
 1422              	.LBB875:
 1423              	.LBB876:
  64:Core/Inc/utils/mat.h ****                 return lhs;
 1424              		.loc 7 64 0
 1425 0288 66A9     		add	r1, sp, #408
 1426              	.LVL197:
 1427 028a 77A8     		add	r0, sp, #476
 1428              	.LVL198:
 1429 028c FFF7FEFF 		bl	_ZN3MatmIERKS_
 1430              	.LVL199:
  65:Core/Inc/utils/mat.h ****         }
 1431              		.loc 7 65 0
 1432 0290 3246     		mov	r2, r6
 1433 0292 77A9     		add	r1, sp, #476
 1434              	.LVL200:
 1435 0294 88A8     		add	r0, sp, #544
 1436 0296 FFF7FEFF 		bl	memcpy
 1437              	.LVL201:
 1438              	.LBE876:
 1439              	.LBE875:
  72:Core/Inc/utils/kalman.h ****                 }
 1440              		.loc 2 72 0
 1441 029a A168     		ldr	r1, [r4, #8]
 1442              	.LVL202:
 1443              	.LBB877:
 1444              	.LBB878:
  69:Core/Inc/utils/mat.h ****                 return lhs;
 1445              		.loc 7 69 0
 1446 029c 01F58871 		add	r1, r1, #272
 1447              	.LVL203:
 1448 02a0 88A8     		add	r0, sp, #544
 1449              	.LVL204:
 1450 02a2 FFF7FEFF 		bl	_ZN3MatmLERKS_
 1451              	.LVL205:
  70:Core/Inc/utils/mat.h ****         }
 1452              		.loc 7 70 0
 1453 02a6 3246     		mov	r2, r6
 1454 02a8 88A9     		add	r1, sp, #544
 1455              	.LVL206:
 1456 02aa 99A8     		add	r0, sp, #612
 1457 02ac FFF7FEFF 		bl	memcpy
 1458              	.LVL207:
 1459              	.LBE878:
 1460              	.LBE877:
  72:Core/Inc/utils/kalman.h ****                 }
 1461              		.loc 2 72 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 35


 1462 02b0 A068     		ldr	r0, [r4, #8]
 1463 02b2 4246     		mov	r2, r8
 1464 02b4 99A9     		add	r1, sp, #612
 1465 02b6 00F58870 		add	r0, r0, #272
 1466 02ba FFF7FEFF 		bl	memcpy
 1467              	.LVL208:
 1468 02be BBE6     		b	.L55
 1469              	.LVL209:
 1470              	.L61:
 1471              	.LBB879:
 1472              	.LBB864:
 1473              	.LBB861:
 1474              	.LBB862:
  86:Core/Inc/utils/mat.h ****                         for (uint8_t j = 0; j < cols_; ++j) {
 1475              		.loc 7 86 0
 1476 02c0 0130     		adds	r0, r0, #1
 1477              	.LVL210:
 1478 02c2 C0B2     		uxtb	r0, r0
 1479              	.LVL211:
 1480              	.L63:
 1481 02c4 9DF86032 		ldrb	r3, [sp, #608]	@ zero_extendqisi2
 1482 02c8 8342     		cmp	r3, r0
 1483 02ca 8AD9     		bls	.L60
 1484              	.LBB863:
  87:Core/Inc/utils/mat.h ****                                 matrix_[i][j] = num;
 1485              		.loc 7 87 0
 1486 02cc 0023     		movs	r3, #0
 1487              	.L62:
 1488              	.LVL212:
 1489 02ce 9DF86122 		ldrb	r2, [sp, #609]	@ zero_extendqisi2
 1490 02d2 9A42     		cmp	r2, r3
 1491 02d4 F4D9     		bls	.L61
  88:Core/Inc/utils/mat.h ****                         }
 1492              		.loc 7 88 0
 1493 02d6 03EB8002 		add	r2, r3, r0, lsl #2
 1494 02da AAA9     		add	r1, sp, #680
 1495 02dc 01EB8202 		add	r2, r1, r2, lsl #2
 1496 02e0 0021     		movs	r1, #0
 1497 02e2 42F8881C 		str	r1, [r2, #-136]	@ float
  87:Core/Inc/utils/mat.h ****                                 matrix_[i][j] = num;
 1498              		.loc 7 87 0
 1499 02e6 0133     		adds	r3, r3, #1
 1500              	.LVL213:
 1501 02e8 DBB2     		uxtb	r3, r3
 1502              	.LVL214:
 1503 02ea F0E7     		b	.L62
 1504              	.L68:
 1505              		.align	2
 1506              	.L67:
 1507 02ec 00000000 		.word	.LC0
 1508              	.LBE863:
 1509              	.LBE862:
 1510              	.LBE861:
 1511              	.LBE864:
 1512              	.LBE879:
 1513              		.cfi_endproc
 1514              	.LFE414:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 36


 1516              		.section	.text._ZN11Kalman_VarsC2Ev,"axG",%progbits,_ZN11Kalman_VarsC5Ev,comdat
 1517              		.align	1
 1518              		.weak	_ZN11Kalman_VarsC2Ev
 1519              		.syntax unified
 1520              		.thumb
 1521              		.thumb_func
 1522              		.fpu fpv4-sp-d16
 1524              	_ZN11Kalman_VarsC2Ev:
 1525              	.LFB423:
  16:Core/Inc/utils/kalman.h **** {
 1526              		.loc 2 16 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 1530              	.LVL215:
 1531 0000 10B5     		push	{r4, lr}
 1532              	.LCFI14:
 1533              		.cfi_def_cfa_offset 8
 1534              		.cfi_offset 4, -8
 1535              		.cfi_offset 14, -4
 1536 0002 0446     		mov	r4, r0
 1537              	.LVL216:
 1538              	.LBB880:
 1539              	.LBB881:
 1540              	.LBB882:
  21:Core/Inc/utils/mat.h ****         
 1541              		.loc 7 21 0
 1542 0004 0022     		movs	r2, #0
 1543 0006 1146     		mov	r1, r2
 1544 0008 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1545              	.LVL217:
 1546              	.LBE882:
 1547              	.LBE881:
 1548              	.LBB883:
 1549              	.LBB884:
 1550 000c 0022     		movs	r2, #0
 1551 000e 1146     		mov	r1, r2
 1552 0010 04F14400 		add	r0, r4, #68
 1553              	.LVL218:
 1554 0014 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1555              	.LVL219:
 1556              	.LBE884:
 1557              	.LBE883:
 1558              	.LBB885:
 1559              	.LBB886:
 1560 0018 0022     		movs	r2, #0
 1561 001a 1146     		mov	r1, r2
 1562 001c 04F18800 		add	r0, r4, #136
 1563              	.LVL220:
 1564 0020 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1565              	.LVL221:
 1566              	.LBE886:
 1567              	.LBE885:
 1568              	.LBB887:
 1569              	.LBB888:
 1570 0024 0022     		movs	r2, #0
 1571 0026 1146     		mov	r1, r2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 37


 1572 0028 04F1CC00 		add	r0, r4, #204
 1573              	.LVL222:
 1574 002c FFF7FEFF 		bl	_ZN3MatC1Ehh
 1575              	.LVL223:
 1576              	.LBE888:
 1577              	.LBE887:
 1578              	.LBB889:
 1579              	.LBB890:
 1580 0030 0022     		movs	r2, #0
 1581 0032 1146     		mov	r1, r2
 1582 0034 04F58870 		add	r0, r4, #272
 1583              	.LVL224:
 1584 0038 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1585              	.LVL225:
 1586              	.LBE890:
 1587              	.LBE889:
 1588              	.LBB891:
 1589              	.LBB892:
 1590 003c 0022     		movs	r2, #0
 1591 003e 1146     		mov	r1, r2
 1592 0040 04F5AA70 		add	r0, r4, #340
 1593              	.LVL226:
 1594 0044 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1595              	.LVL227:
 1596              	.LBE892:
 1597              	.LBE891:
 1598              	.LBB893:
 1599              	.LBB894:
 1600 0048 0022     		movs	r2, #0
 1601 004a 1146     		mov	r1, r2
 1602 004c 04F5CC70 		add	r0, r4, #408
 1603              	.LVL228:
 1604 0050 FFF7FEFF 		bl	_ZN3MatC1Ehh
 1605              	.LVL229:
 1606              	.LBE894:
 1607              	.LBE893:
 1608              	.LBE880:
  16:Core/Inc/utils/kalman.h **** {
 1609              		.loc 2 16 0
 1610 0054 2046     		mov	r0, r4
 1611 0056 10BD     		pop	{r4, pc}
 1612              		.cfi_endproc
 1613              	.LFE423:
 1615              		.weak	_ZN11Kalman_VarsC1Ev
 1616              		.thumb_set _ZN11Kalman_VarsC1Ev,_ZN11Kalman_VarsC2Ev
 1617              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 1618              		.align	1
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1622              		.fpu fpv4-sp-d16
 1624              	_Z41__static_initialization_and_destruction_0ii:
 1625              	.LFB463:
 101:Core/Src/robot/robo_orientation.cpp **** 
 102:Core/Src/robot/robo_orientation.cpp **** /**
 103:Core/Src/robot/robo_orientation.cpp ****  * @brief Function that provides the orientation of the robot
 104:Core/Src/robot/robo_orientation.cpp ****  * @param base_state This parameter is considered as one of the possible state
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 38


 105:Core/Src/robot/robo_orientation.cpp ****  *                   of robot.
 106:Core/Src/robot/robo_orientation.cpp ****  * @param dt_millis : The time period at which this function is called periodically
 107:Core/Src/robot/robo_orientation.cpp ****  * 
 108:Core/Src/robot/robo_orientation.cpp ****  * @retval orientation of the robot in degrees
 109:Core/Src/robot/robo_orientation.cpp ****  * 
 110:Core/Src/robot/robo_orientation.cpp ****  * 
 111:Core/Src/robot/robo_orientation.cpp ****  * <pre>
 112:Core/Src/robot/robo_orientation.cpp ****  * Tasks performed by this function
 113:Core/Src/robot/robo_orientation.cpp ****  * 1) Read the values from Accelerometer and the Gyroscope
 114:Core/Src/robot/robo_orientation.cpp ****  * </pre>
 115:Core/Src/robot/robo_orientation.cpp ****  */
 116:Core/Src/robot/robo_orientation.cpp **** 
 117:Core/Src/robot/robo_orientation.cpp **** Vec3<float> read_Orientation(uint32_t dt_millis)
 118:Core/Src/robot/robo_orientation.cpp **** {
 119:Core/Src/robot/robo_orientation.cpp ****         Vec3<float> accel;
 120:Core/Src/robot/robo_orientation.cpp ****         Vec3<float> gyro;
 121:Core/Src/robot/robo_orientation.cpp ****         Vec3<float> mag;
 122:Core/Src/robot/robo_orientation.cpp **** 	Vec3<float> mag_offset(-141, -167, 28);
 123:Core/Src/robot/robo_orientation.cpp ****         Vec3<float> angles;
 124:Core/Src/robot/robo_orientation.cpp **** 
 125:Core/Src/robot/robo_orientation.cpp **** #ifdef _ENABLE_I2C_ERROR_DETECTION
 126:Core/Src/robot/robo_orientation.cpp **** 
 127:Core/Src/robot/robo_orientation.cpp ****         bool mpu_is_ready(true), hmc_is_ready(true);
 128:Core/Src/robot/robo_orientation.cpp ****         
 129:Core/Src/robot/robo_orientation.cpp ****         // Read MPU6050 if it is ready to be read
 130:Core/Src/robot/robo_orientation.cpp ****         if (MPU6050_Read_NormAxes(&Body_IMU) != HAL_OK) {
 131:Core/Src/robot/robo_orientation.cpp ****                 mpu_is_ready = false;
 132:Core/Src/robot/robo_orientation.cpp ****         }
 133:Core/Src/robot/robo_orientation.cpp **** 
 134:Core/Src/robot/robo_orientation.cpp ****         // Read HMC5883 if it is ready to be read
 135:Core/Src/robot/robo_orientation.cpp ****         if (HMC5883_Read(&Body_HMC) != HAL_OK) {
 136:Core/Src/robot/robo_orientation.cpp ****                 hmc_is_ready = false;
 137:Core/Src/robot/robo_orientation.cpp ****         }
 138:Core/Src/robot/robo_orientation.cpp **** 
 139:Core/Src/robot/robo_orientation.cpp ****         if (!mpu_is_ready || !hmc_is_ready) {
 140:Core/Src/robot/robo_orientation.cpp ****                 //! Error Condition
 141:Core/Src/robot/robo_orientation.cpp ****                 HAL_GPIO_WritePin(B_BlueLED_GPIO_Port, B_BlueLED_Pin, GPIO_PIN_SET);
 142:Core/Src/robot/robo_orientation.cpp ****                 error(Error::PERIPHERAL_ERROR);
 143:Core/Src/robot/robo_orientation.cpp ****                 IMU_Init();
 144:Core/Src/robot/robo_orientation.cpp ****                 return angles;
 145:Core/Src/robot/robo_orientation.cpp ****         }
 146:Core/Src/robot/robo_orientation.cpp ****         else {
 147:Core/Src/robot/robo_orientation.cpp ****                 HAL_GPIO_WritePin(B_BlueLED_GPIO_Port, B_BlueLED_Pin, GPIO_PIN_RESET);
 148:Core/Src/robot/robo_orientation.cpp ****         }
 149:Core/Src/robot/robo_orientation.cpp **** #else
 150:Core/Src/robot/robo_orientation.cpp ****         MPU6050_Read_NormAxes(&Body_IMU);
 151:Core/Src/robot/robo_orientation.cpp ****         HMC5883_Read(&Body_HMC);
 152:Core/Src/robot/robo_orientation.cpp **** #endif  // _ENABLE_I2C_ERROR_DETECTION
 153:Core/Src/robot/robo_orientation.cpp **** 
 154:Core/Src/robot/robo_orientation.cpp ****         accel = Body_IMU.norm_a_axis;
 155:Core/Src/robot/robo_orientation.cpp ****         gyro = Body_IMU.norm_g_axis - gOmega_Bias;
 156:Core/Src/robot/robo_orientation.cpp ****         mag = Body_HMC.raw_axis;
 157:Core/Src/robot/robo_orientation.cpp **** 	mag -= mag_offset;
 158:Core/Src/robot/robo_orientation.cpp ****         // (accel.mult_EW(1000)).print();
 159:Core/Src/robot/robo_orientation.cpp ****         // printf("    ");
 160:Core/Src/robot/robo_orientation.cpp ****         // (gyro.mult_EW(4)).print();
 161:Core/Src/robot/robo_orientation.cpp ****         // printf("    ");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 39


 162:Core/Src/robot/robo_orientation.cpp ****         // mag.print();
 163:Core/Src/robot/robo_orientation.cpp ****         // printf("\n");
 164:Core/Src/robot/robo_orientation.cpp **** 
 165:Core/Src/robot/robo_orientation.cpp ****         // We will consider the rotation in order: psi-theta-phi
 166:Core/Src/robot/robo_orientation.cpp ****         float ax = gXAccelAlpha35.smooth(accel.getX());
 167:Core/Src/robot/robo_orientation.cpp ****         float ay = gYAccelAlpha35.smooth(accel.getY());
 168:Core/Src/robot/robo_orientation.cpp ****         float az = gZAccelAlpha35.smooth(accel.getZ());
 169:Core/Src/robot/robo_orientation.cpp **** 
 170:Core/Src/robot/robo_orientation.cpp ****         float gx = gXGyroAlpha35.smooth(gyro.getX());
 171:Core/Src/robot/robo_orientation.cpp ****         float gy = gYGyroAlpha35.smooth(gyro.getY());
 172:Core/Src/robot/robo_orientation.cpp ****         float gz = gZGyroAlpha35.smooth(gyro.getZ());
 173:Core/Src/robot/robo_orientation.cpp **** 
 174:Core/Src/robot/robo_orientation.cpp ****         float bx = gXMagAlpha35.smooth(mag.getX());
 175:Core/Src/robot/robo_orientation.cpp ****         float by = gYMagAlpha35.smooth(mag.getY());
 176:Core/Src/robot/robo_orientation.cpp ****         float bz = gZMagAlpha35.smooth(mag.getZ());
 177:Core/Src/robot/robo_orientation.cpp **** 
 178:Core/Src/robot/robo_orientation.cpp **** 	// printf("%ld %ld %ld\n", (int32_t)(bx), (int32_t)(by), (int32_t)(bz));
 179:Core/Src/robot/robo_orientation.cpp ****         
 180:Core/Src/robot/robo_orientation.cpp ****         float roll = atan2f(ay, az) * 57.3;
 181:Core/Src/robot/robo_orientation.cpp **** 
 182:Core/Src/robot/robo_orientation.cpp ****         roll = gRoll_Filter.filter(roll, gx, dt_millis);
 183:Core/Src/robot/robo_orientation.cpp ****         // printf("%ld,   ", (int32_t)(roll*1000));
 184:Core/Src/robot/robo_orientation.cpp **** 
 185:Core/Src/robot/robo_orientation.cpp ****         float sin_roll = sin(roll / 57.3);
 186:Core/Src/robot/robo_orientation.cpp ****         float cos_roll = cos(roll / 57.3);
 187:Core/Src/robot/robo_orientation.cpp ****         // Roll Compensated Pitch
 188:Core/Src/robot/robo_orientation.cpp ****         float pitch = atan2f((-ax), ay*sin_roll + az*cos_roll) * 57.3;
 189:Core/Src/robot/robo_orientation.cpp **** 
 190:Core/Src/robot/robo_orientation.cpp ****         pitch = gPitch_Filter.filter(pitch, gy, dt_millis);
 191:Core/Src/robot/robo_orientation.cpp ****         // printf("%ld,   ", (int32_t)(pitch*1000));
 192:Core/Src/robot/robo_orientation.cpp **** 
 193:Core/Src/robot/robo_orientation.cpp ****         float sin_pitch = sin(pitch / 57.3);
 194:Core/Src/robot/robo_orientation.cpp ****         float cos_pitch = cos(pitch / 57.3);
 195:Core/Src/robot/robo_orientation.cpp ****         // Tilt Compensated Yaw
 196:Core/Src/robot/robo_orientation.cpp ****         float yaw = atan2f((bz*sin_roll - by*cos_roll), (bx*cos_pitch + by*sin_roll*sin_pitch + bz*
 197:Core/Src/robot/robo_orientation.cpp ****         // printf("%ld\n", (int32_t)(yaw*1000));
 198:Core/Src/robot/robo_orientation.cpp **** 
 199:Core/Src/robot/robo_orientation.cpp ****         yaw = gYaw_Filter.filter(yaw, gz, dt_millis);
 200:Core/Src/robot/robo_orientation.cpp ****         // printf("%ld\n", (int32_t)(yaw*1000));
 201:Core/Src/robot/robo_orientation.cpp **** 
 202:Core/Src/robot/robo_orientation.cpp ****         angles.set_Values(roll, pitch, yaw);
 203:Core/Src/robot/robo_orientation.cpp **** 
 204:Core/Src/robot/robo_orientation.cpp ****         return angles;
 205:Core/Src/robot/robo_orientation.cpp **** }...
 1626              		.loc 6 205 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              	.LVL230:
 1631 0000 0128     		cmp	r0, #1
 1632 0002 00D0     		beq	.L77
 1633              	.L74:
 1634 0004 7047     		bx	lr
 1635              	.L77:
 1636              		.loc 6 205 0 is_stmt 0 discriminator 1
 1637 0006 4FF6FF73 		movw	r3, #65535
 1638 000a 9942     		cmp	r1, r3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 40


 1639 000c FAD1     		bne	.L74
 1640              		.loc 6 205 0
 1641 000e 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1642              	.LCFI15:
 1643              		.cfi_def_cfa_offset 24
 1644              		.cfi_offset 4, -24
 1645              		.cfi_offset 5, -20
 1646              		.cfi_offset 6, -16
 1647              		.cfi_offset 7, -12
 1648              		.cfi_offset 8, -8
 1649              		.cfi_offset 14, -4
 1650 0012 2DED028B 		vpush.64	{d8}
 1651              	.LCFI16:
 1652              		.cfi_def_cfa_offset 32
 1653              		.cfi_offset 80, -32
 1654              		.cfi_offset 81, -28
 1655              	.LVL231:
 1656              	.LBB895:
 1657              	.LBB896:
 1658              	.LBB897:
 1659              	.LBB898:
 1660              	.LBB899:
 1661              	.LBB900:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 1662              		.loc 3 37 0 is_stmt 1
 1663 0016 6048     		ldr	r0, .L78
 1664              	.LVL232:
 1665 0018 0023     		movs	r3, #0
 1666 001a 8380     		strh	r3, [r0, #4]	@ movhi
 1667              	.LVL233:
 1668              	.LBE900:
 1669              	.LBE899:
 1670              	.LBB901:
 1671              	.LBB902:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1672              		.loc 3 38 0
 1673 001c C380     		strh	r3, [r0, #6]	@ movhi
 1674              	.LVL234:
 1675              	.LBE902:
 1676              	.LBE901:
 1677              	.LBB903:
 1678              	.LBB904:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 1679              		.loc 3 39 0
 1680 001e 0381     		strh	r3, [r0, #8]	@ movhi
 1681              	.LVL235:
 1682              	.LBE904:
 1683              	.LBE903:
 1684              	.LBE898:
 1685              	.LBE897:
 1686              	.LBE896:
 1687              	.LBB905:
 1688              	.LBB906:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 41


 1689              	.LBB907:
 1690              	.LBB908:
 1691              	.LBB909:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1692              		.loc 3 37 0
 1693 0020 4381     		strh	r3, [r0, #10]	@ movhi
 1694              	.LVL236:
 1695              	.LBE909:
 1696              	.LBE908:
 1697              	.LBB910:
 1698              	.LBB911:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1699              		.loc 3 38 0
 1700 0022 8381     		strh	r3, [r0, #12]	@ movhi
 1701              	.LVL237:
 1702              	.LBE911:
 1703              	.LBE910:
 1704              	.LBB912:
 1705              	.LBB913:
 1706              		.loc 3 39 0
 1707 0024 C381     		strh	r3, [r0, #14]	@ movhi
 1708              	.LVL238:
 1709              	.LBE913:
 1710              	.LBE912:
 1711              	.LBE907:
 1712              	.LBE906:
 1713              	.LBE905:
 1714              	.LBB914:
 1715              	.LBB915:
 1716              	.LBB916:
 1717              	.LBB917:
 1718              	.LBB918:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1719              		.loc 3 37 0
 1720 0026 0025     		movs	r5, #0
 1721 0028 0561     		str	r5, [r0, #16]	@ float
 1722              	.LVL239:
 1723              	.LBE918:
 1724              	.LBE917:
 1725              	.LBB919:
 1726              	.LBB920:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1727              		.loc 3 38 0
 1728 002a 4561     		str	r5, [r0, #20]	@ float
 1729              	.LVL240:
 1730              	.LBE920:
 1731              	.LBE919:
 1732              	.LBB921:
 1733              	.LBB922:
 1734              		.loc 3 39 0
 1735 002c 8561     		str	r5, [r0, #24]	@ float
 1736              	.LVL241:
 1737              	.LBE922:
 1738              	.LBE921:
 1739              	.LBE916:
 1740              	.LBE915:
 1741              	.LBE914:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 42


 1742              	.LBB923:
 1743              	.LBB924:
 1744              	.LBB925:
 1745              	.LBB926:
 1746              	.LBB927:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1747              		.loc 3 37 0
 1748 002e C561     		str	r5, [r0, #28]	@ float
 1749              	.LVL242:
 1750              	.LBE927:
 1751              	.LBE926:
 1752              	.LBB928:
 1753              	.LBB929:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1754              		.loc 3 38 0
 1755 0030 0562     		str	r5, [r0, #32]	@ float
 1756              	.LVL243:
 1757              	.LBE929:
 1758              	.LBE928:
 1759              	.LBB930:
 1760              	.LBB931:
 1761              		.loc 3 39 0
 1762 0032 4562     		str	r5, [r0, #36]	@ float
 1763              	.LVL244:
 1764              	.LBE931:
 1765              	.LBE930:
 1766              	.LBE925:
 1767              	.LBE924:
 1768              	.LBE923:
 1769              	.LBE895:
   9:Core/Src/robot/robo_orientation.cpp **** struct MPU6050 Body_IMU;
 1770              		.loc 6 9 0
 1771 0034 594C     		ldr	r4, .L78+4
 1772 0036 2246     		mov	r2, r4
 1773 0038 5949     		ldr	r1, .L78+8
 1774              	.LVL245:
 1775 003a FFF7FEFF 		bl	__aeabi_atexit
 1776              	.LVL246:
 1777              	.LBB932:
 1778              	.LBB933:
 1779              	.LBB934:
 1780              	.LBB935:
 1781              	.LBB936:
 1782              	.LBB937:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1783              		.loc 3 37 0
 1784 003e 5948     		ldr	r0, .L78+12
 1785 0040 4560     		str	r5, [r0, #4]	@ float
 1786              	.LVL247:
 1787              	.LBE937:
 1788              	.LBE936:
 1789              	.LBB938:
 1790              	.LBB939:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 1791              		.loc 3 38 0
 1792 0042 8560     		str	r5, [r0, #8]	@ float
 1793              	.LVL248:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 43


 1794              	.LBE939:
 1795              	.LBE938:
 1796              	.LBB940:
 1797              	.LBB941:
 1798              		.loc 3 39 0
 1799 0044 C560     		str	r5, [r0, #12]	@ float
 1800              	.LVL249:
 1801              	.LBE941:
 1802              	.LBE940:
 1803              	.LBE935:
 1804              	.LBE934:
 1805              	.LBE933:
 1806              	.LBB942:
 1807              	.LBB943:
 1808              	.LBB944:
 1809              	.LBB945:
 1810              	.LBB946:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1811              		.loc 3 37 0
 1812 0046 4561     		str	r5, [r0, #20]	@ float
 1813              	.LVL250:
 1814              	.LBE946:
 1815              	.LBE945:
 1816              	.LBB947:
 1817              	.LBB948:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 1818              		.loc 3 38 0
 1819 0048 8561     		str	r5, [r0, #24]	@ float
 1820              	.LVL251:
 1821              	.LBE948:
 1822              	.LBE947:
 1823              	.LBB949:
 1824              	.LBB950:
 1825              		.loc 3 39 0
 1826 004a C561     		str	r5, [r0, #28]	@ float
 1827              	.LVL252:
 1828              	.LBE950:
 1829              	.LBE949:
 1830              	.LBE944:
 1831              	.LBE943:
 1832              	.LBE942:
 1833              	.LBE932:
  10:Core/Src/robot/robo_orientation.cpp **** struct HMC5883 Body_HMC;
 1834              		.loc 6 10 0
 1835 004c 2246     		mov	r2, r4
 1836 004e 5649     		ldr	r1, .L78+16
 1837 0050 FFF7FEFF 		bl	__aeabi_atexit
 1838              	.LVL253:
 1839              	.LBB951:
 1840              	.LBB952:
 1841              	.LBB953:
 1842              	.LBB954:
 1843              	.LBB955:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 1844              		.loc 3 37 0
 1845 0054 5548     		ldr	r0, .L78+20
 1846 0056 0560     		str	r5, [r0]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 44


 1847              	.LVL254:
 1848              	.LBE955:
 1849              	.LBE954:
 1850              	.LBB956:
 1851              	.LBB957:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 1852              		.loc 3 38 0
 1853 0058 4560     		str	r5, [r0, #4]	@ float
 1854              	.LVL255:
 1855              	.LBE957:
 1856              	.LBE956:
 1857              	.LBB958:
 1858              	.LBB959:
 1859              		.loc 3 39 0
 1860 005a 8560     		str	r5, [r0, #8]	@ float
 1861              	.LVL256:
 1862              	.LBE959:
 1863              	.LBE958:
 1864              	.LBE953:
 1865              	.LBE952:
 1866              	.LBE951:
  12:Core/Src/robot/robo_orientation.cpp **** static Vec3<float> gOmega_Bias;
 1867              		.loc 6 12 0
 1868 005c 2246     		mov	r2, r4
 1869 005e 5449     		ldr	r1, .L78+24
 1870 0060 FFF7FEFF 		bl	__aeabi_atexit
 1871              	.LVL257:
  14:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gXAccelAlpha35(0.035);
 1872              		.loc 6 14 0
 1873 0064 9FED538A 		vldr.32	s16, .L78+28
 1874 0068 534E     		ldr	r6, .L78+32
 1875 006a B0EE480A 		vmov.f32	s0, s16
 1876 006e 3046     		mov	r0, r6
 1877 0070 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1878              	.LVL258:
 1879 0074 514D     		ldr	r5, .L78+36
 1880 0076 2246     		mov	r2, r4
 1881 0078 2946     		mov	r1, r5
 1882 007a 3046     		mov	r0, r6
 1883 007c FFF7FEFF 		bl	__aeabi_atexit
 1884              	.LVL259:
  15:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gYAccelAlpha35(0.035);
 1885              		.loc 6 15 0
 1886 0080 4F4E     		ldr	r6, .L78+40
 1887 0082 B0EE480A 		vmov.f32	s0, s16
 1888 0086 3046     		mov	r0, r6
 1889 0088 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1890              	.LVL260:
 1891 008c 2246     		mov	r2, r4
 1892 008e 2946     		mov	r1, r5
 1893 0090 3046     		mov	r0, r6
 1894 0092 FFF7FEFF 		bl	__aeabi_atexit
 1895              	.LVL261:
  16:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gZAccelAlpha35(0.035);
 1896              		.loc 6 16 0
 1897 0096 4B4E     		ldr	r6, .L78+44
 1898 0098 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 45


 1899 009c 3046     		mov	r0, r6
 1900 009e FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1901              	.LVL262:
 1902 00a2 2246     		mov	r2, r4
 1903 00a4 2946     		mov	r1, r5
 1904 00a6 3046     		mov	r0, r6
 1905 00a8 FFF7FEFF 		bl	__aeabi_atexit
 1906              	.LVL263:
  18:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gXGyroAlpha35(0.035);
 1907              		.loc 6 18 0
 1908 00ac 464E     		ldr	r6, .L78+48
 1909 00ae B0EE480A 		vmov.f32	s0, s16
 1910 00b2 3046     		mov	r0, r6
 1911 00b4 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1912              	.LVL264:
 1913 00b8 2246     		mov	r2, r4
 1914 00ba 2946     		mov	r1, r5
 1915 00bc 3046     		mov	r0, r6
 1916 00be FFF7FEFF 		bl	__aeabi_atexit
 1917              	.LVL265:
  19:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gYGyroAlpha35(0.035);
 1918              		.loc 6 19 0
 1919 00c2 424E     		ldr	r6, .L78+52
 1920 00c4 B0EE480A 		vmov.f32	s0, s16
 1921 00c8 3046     		mov	r0, r6
 1922 00ca FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1923              	.LVL266:
 1924 00ce 2246     		mov	r2, r4
 1925 00d0 2946     		mov	r1, r5
 1926 00d2 3046     		mov	r0, r6
 1927 00d4 FFF7FEFF 		bl	__aeabi_atexit
 1928              	.LVL267:
  20:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gZGyroAlpha35(0.035);
 1929              		.loc 6 20 0
 1930 00d8 3D4E     		ldr	r6, .L78+56
 1931 00da B0EE480A 		vmov.f32	s0, s16
 1932 00de 3046     		mov	r0, r6
 1933 00e0 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1934              	.LVL268:
 1935 00e4 2246     		mov	r2, r4
 1936 00e6 2946     		mov	r1, r5
 1937 00e8 3046     		mov	r0, r6
 1938 00ea FFF7FEFF 		bl	__aeabi_atexit
 1939              	.LVL269:
  22:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gXMagAlpha35(0.035);
 1940              		.loc 6 22 0
 1941 00ee 394E     		ldr	r6, .L78+60
 1942 00f0 B0EE480A 		vmov.f32	s0, s16
 1943 00f4 3046     		mov	r0, r6
 1944 00f6 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1945              	.LVL270:
 1946 00fa 2246     		mov	r2, r4
 1947 00fc 2946     		mov	r1, r5
 1948 00fe 3046     		mov	r0, r6
 1949 0100 FFF7FEFF 		bl	__aeabi_atexit
 1950              	.LVL271:
  23:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gYMagAlpha35(0.035);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 46


 1951              		.loc 6 23 0
 1952 0104 344E     		ldr	r6, .L78+64
 1953 0106 B0EE480A 		vmov.f32	s0, s16
 1954 010a 3046     		mov	r0, r6
 1955 010c FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1956              	.LVL272:
 1957 0110 2246     		mov	r2, r4
 1958 0112 2946     		mov	r1, r5
 1959 0114 3046     		mov	r0, r6
 1960 0116 FFF7FEFF 		bl	__aeabi_atexit
 1961              	.LVL273:
  24:Core/Src/robot/robo_orientation.cpp **** static Exp_Smooth gZMagAlpha35(0.035);
 1962              		.loc 6 24 0
 1963 011a 304E     		ldr	r6, .L78+68
 1964 011c B0EE480A 		vmov.f32	s0, s16
 1965 0120 3046     		mov	r0, r6
 1966 0122 FFF7FEFF 		bl	_ZN10Exp_SmoothC1Ef
 1967              	.LVL274:
 1968 0126 2246     		mov	r2, r4
 1969 0128 2946     		mov	r1, r5
 1970 012a 3046     		mov	r0, r6
 1971 012c FFF7FEFF 		bl	__aeabi_atexit
 1972              	.LVL275:
  26:Core/Src/robot/robo_orientation.cpp **** static Kalman_Vars gAccel_Gyro;
 1973              		.loc 6 26 0
 1974 0130 2B4D     		ldr	r5, .L78+72
 1975 0132 2846     		mov	r0, r5
 1976 0134 FFF7FEFF 		bl	_ZN11Kalman_VarsC1Ev
 1977              	.LVL276:
 1978 0138 2246     		mov	r2, r4
 1979 013a 2A49     		ldr	r1, .L78+76
 1980 013c 2846     		mov	r0, r5
 1981 013e FFF7FEFF 		bl	__aeabi_atexit
 1982              	.LVL277:
  28:Core/Src/robot/robo_orientation.cpp **** static Kalman_Filter gRoll_Filter(&gAccel_Gyro, init_OriFilters);
 1983              		.loc 6 28 0
 1984 0142 294F     		ldr	r7, .L78+80
 1985 0144 DFF8A880 		ldr	r8, .L78+88
 1986 0148 3A46     		mov	r2, r7
 1987 014a 2946     		mov	r1, r5
 1988 014c 4046     		mov	r0, r8
 1989 014e FFF7FEFF 		bl	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 1990              	.LVL278:
 1991 0152 264E     		ldr	r6, .L78+84
 1992 0154 2246     		mov	r2, r4
 1993 0156 3146     		mov	r1, r6
 1994 0158 4046     		mov	r0, r8
 1995 015a FFF7FEFF 		bl	__aeabi_atexit
 1996              	.LVL279:
  29:Core/Src/robot/robo_orientation.cpp **** static Kalman_Filter gPitch_Filter(&gAccel_Gyro, init_OriFilters);
 1997              		.loc 6 29 0
 1998 015e DFF89480 		ldr	r8, .L78+92
 1999 0162 3A46     		mov	r2, r7
 2000 0164 2946     		mov	r1, r5
 2001 0166 4046     		mov	r0, r8
 2002 0168 FFF7FEFF 		bl	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 2003              	.LVL280:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 47


 2004 016c 2246     		mov	r2, r4
 2005 016e 3146     		mov	r1, r6
 2006 0170 4046     		mov	r0, r8
 2007 0172 FFF7FEFF 		bl	__aeabi_atexit
 2008              	.LVL281:
  30:Core/Src/robot/robo_orientation.cpp **** static Kalman_Filter gYaw_Filter(&gAccel_Gyro, init_OriFilters);
 2009              		.loc 6 30 0
 2010 0176 DFF88080 		ldr	r8, .L78+96
 2011 017a 3A46     		mov	r2, r7
 2012 017c 2946     		mov	r1, r5
 2013 017e 4046     		mov	r0, r8
 2014 0180 FFF7FEFF 		bl	_ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
 2015              	.LVL282:
 2016 0184 2246     		mov	r2, r4
 2017 0186 3146     		mov	r1, r6
 2018 0188 4046     		mov	r0, r8
 2019 018a FFF7FEFF 		bl	__aeabi_atexit
 2020              	.LVL283:
 2021              		.loc 6 205 0
 2022 018e BDEC028B 		vldm	sp!, {d8}
 2023              	.LCFI17:
 2024              		.cfi_restore 80
 2025              		.cfi_restore 81
 2026              		.cfi_def_cfa_offset 24
 2027 0192 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2028              	.L79:
 2029 0196 00BF     		.align	2
 2030              	.L78:
 2031 0198 00000000 		.word	.LANCHOR0
 2032 019c 00000000 		.word	__dso_handle
 2033 01a0 00000000 		.word	_ZN7MPU6050D1Ev
 2034 01a4 00000000 		.word	.LANCHOR1
 2035 01a8 00000000 		.word	_ZN7HMC5883D1Ev
 2036 01ac 00000000 		.word	.LANCHOR3
 2037 01b0 00000000 		.word	_ZN4Vec3IfED1Ev
 2038 01b4 295C0F3D 		.word	1024416809
 2039 01b8 00000000 		.word	.LANCHOR4
 2040 01bc 00000000 		.word	_ZN10Exp_SmoothD1Ev
 2041 01c0 00000000 		.word	.LANCHOR5
 2042 01c4 00000000 		.word	.LANCHOR6
 2043 01c8 00000000 		.word	.LANCHOR7
 2044 01cc 00000000 		.word	.LANCHOR8
 2045 01d0 00000000 		.word	.LANCHOR9
 2046 01d4 00000000 		.word	.LANCHOR10
 2047 01d8 00000000 		.word	.LANCHOR11
 2048 01dc 00000000 		.word	.LANCHOR12
 2049 01e0 00000000 		.word	.LANCHOR2
 2050 01e4 00000000 		.word	_ZN11Kalman_VarsD1Ev
 2051 01e8 00000000 		.word	_Z15init_OriFiltersm
 2052 01ec 00000000 		.word	_ZN13Kalman_FilterD1Ev
 2053 01f0 00000000 		.word	.LANCHOR13
 2054 01f4 00000000 		.word	.LANCHOR14
 2055 01f8 00000000 		.word	.LANCHOR15
 2056              		.cfi_endproc
 2057              	.LFE463:
 2059              		.section	.text._Z10Angle_Initv,"ax",%progbits
 2060              		.align	1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 48


 2061              		.global	_Z10Angle_Initv
 2062              		.syntax unified
 2063              		.thumb
 2064              		.thumb_func
 2065              		.fpu fpv4-sp-d16
 2067              	_Z10Angle_Initv:
 2068              	.LFB426:
  48:Core/Src/robot/robo_orientation.cpp **** {
 2069              		.loc 6 48 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 16
 2072              		@ frame_needed = 0, uses_anonymous_args = 0
 2073 0000 10B5     		push	{r4, lr}
 2074              	.LCFI18:
 2075              		.cfi_def_cfa_offset 8
 2076              		.cfi_offset 4, -8
 2077              		.cfi_offset 14, -4
 2078 0002 84B0     		sub	sp, sp, #16
 2079              	.LCFI19:
 2080              		.cfi_def_cfa_offset 24
  49:Core/Src/robot/robo_orientation.cpp **** 	IMU_Init();
 2081              		.loc 6 49 0
 2082 0004 FFF7FEFF 		bl	_ZL8IMU_Initv
 2083              	.LVL284:
  51:Core/Src/robot/robo_orientation.cpp **** 	gOmega_Bias = MPU6050_Calc_OmegaBias(&Body_IMU, 1000);
 2084              		.loc 6 51 0
 2085 0008 01AC     		add	r4, sp, #4
 2086 000a 4FF47A72 		mov	r2, #1000
 2087 000e 0649     		ldr	r1, .L82
 2088 0010 2046     		mov	r0, r4
 2089 0012 FFF7FEFF 		bl	_Z22MPU6050_Calc_OmegaBiasP7MPU6050m
 2090              	.LVL285:
 2091 0016 054B     		ldr	r3, .L82+4
 2092 0018 94E80700 		ldm	r4, {r0, r1, r2}
 2093 001c 83E80700 		stm	r3, {r0, r1, r2}
  54:Core/Src/robot/robo_orientation.cpp **** }
 2094              		.loc 6 54 0
 2095 0020 0020     		movs	r0, #0
 2096 0022 04B0     		add	sp, sp, #16
 2097              	.LCFI20:
 2098              		.cfi_def_cfa_offset 8
 2099              		@ sp needed
 2100 0024 10BD     		pop	{r4, pc}
 2101              	.L83:
 2102 0026 00BF     		.align	2
 2103              	.L82:
 2104 0028 00000000 		.word	.LANCHOR0
 2105 002c 00000000 		.word	.LANCHOR3
 2106              		.cfi_endproc
 2107              	.LFE426:
 2109              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 2110              		.align	1
 2111              		.weak	_Z12swap_ElementIfEvRT_S1_
 2112              		.syntax unified
 2113              		.thumb
 2114              		.thumb_func
 2115              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 49


 2117              	_Z12swap_ElementIfEvRT_S1_:
 2118              	.LFB462:
  16:Core/Inc/utils/vec3.h **** {
 2119              		.loc 3 16 0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 0
 2122              		@ frame_needed = 0, uses_anonymous_args = 0
 2123              		@ link register save eliminated.
 2124              	.LVL286:
  18:Core/Inc/utils/vec3.h ****         first = second;
 2125              		.loc 3 18 0
 2126 0000 0368     		ldr	r3, [r0]	@ float
 2127              	.LVL287:
  19:Core/Inc/utils/vec3.h ****         second = temp;
 2128              		.loc 3 19 0
 2129 0002 0A68     		ldr	r2, [r1]	@ float
 2130 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h **** }
 2131              		.loc 3 20 0
 2132 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** 
 2133              		.loc 3 21 0
 2134 0008 7047     		bx	lr
 2135              		.cfi_endproc
 2136              	.LFE462:
 2138              		.global	__aeabi_f2d
 2139              		.global	__aeabi_dmul
 2140              		.global	__aeabi_d2f
 2141              		.global	__aeabi_ddiv
 2142              		.section	.text._Z16read_Orientationm,"ax",%progbits
 2143              		.align	1
 2144              		.global	_Z16read_Orientationm
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2148              		.fpu fpv4-sp-d16
 2150              	_Z16read_Orientationm:
 2151              	.LFB428:
 118:Core/Src/robot/robo_orientation.cpp **** {
 2152              		.loc 6 118 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 72
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              	.LVL288:
 2157 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2158              	.LCFI21:
 2159              		.cfi_def_cfa_offset 20
 2160              		.cfi_offset 4, -20
 2161              		.cfi_offset 5, -16
 2162              		.cfi_offset 6, -12
 2163              		.cfi_offset 7, -8
 2164              		.cfi_offset 14, -4
 2165 0002 2DED0C8B 		vpush.64	{d8, d9, d10, d11, d12, d13}
 2166              	.LCFI22:
 2167              		.cfi_def_cfa_offset 68
 2168              		.cfi_offset 80, -68
 2169              		.cfi_offset 81, -64
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 50


 2170              		.cfi_offset 82, -60
 2171              		.cfi_offset 83, -56
 2172              		.cfi_offset 84, -52
 2173              		.cfi_offset 85, -48
 2174              		.cfi_offset 86, -44
 2175              		.cfi_offset 87, -40
 2176              		.cfi_offset 88, -36
 2177              		.cfi_offset 89, -32
 2178              		.cfi_offset 90, -28
 2179              		.cfi_offset 91, -24
 2180 0006 93B0     		sub	sp, sp, #76
 2181              	.LCFI23:
 2182              		.cfi_def_cfa_offset 144
 2183 0008 0446     		mov	r4, r0
 2184 000a 0F46     		mov	r7, r1
 2185              	.LVL289:
 2186              	.LBB1038:
 2187              	.LBB1039:
 2188              	.LBB1040:
 2189              	.LBB1041:
 2190              	.LBB1042:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 2191              		.loc 3 37 0
 2192 000c 0023     		movs	r3, #0
 2193 000e 0693     		str	r3, [sp, #24]	@ float
 2194              	.LVL290:
 2195              	.LBE1042:
 2196              	.LBE1041:
 2197              	.LBB1043:
 2198              	.LBB1044:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 2199              		.loc 3 38 0
 2200 0010 0793     		str	r3, [sp, #28]	@ float
 2201              	.LVL291:
 2202              	.LBE1044:
 2203              	.LBE1043:
 2204              	.LBB1045:
 2205              	.LBB1046:
 2206              		.loc 3 39 0
 2207 0012 0893     		str	r3, [sp, #32]	@ float
 2208              	.LVL292:
 2209              	.LBE1046:
 2210              	.LBE1045:
 2211              	.LBE1040:
 2212              	.LBE1039:
 2213              	.LBE1038:
 2214              	.LBB1047:
 2215              	.LBB1048:
 2216              	.LBB1049:
 2217              	.LBB1050:
 2218              	.LBB1051:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 2219              		.loc 3 37 0
 2220 0014 0393     		str	r3, [sp, #12]	@ float
 2221              	.LVL293:
 2222              	.LBE1051:
 2223              	.LBE1050:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 51


 2224              	.LBB1052:
 2225              	.LBB1053:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 2226              		.loc 3 38 0
 2227 0016 0493     		str	r3, [sp, #16]	@ float
 2228              	.LVL294:
 2229              	.LBE1053:
 2230              	.LBE1052:
 2231              	.LBB1054:
 2232              	.LBB1055:
 2233              		.loc 3 39 0
 2234 0018 0593     		str	r3, [sp, #20]	@ float
 2235              	.LVL295:
 2236              	.LBE1055:
 2237              	.LBE1054:
 2238              	.LBE1049:
 2239              	.LBE1048:
 2240              	.LBE1047:
 2241              	.LBB1056:
 2242              	.LBB1057:
 2243              	.LBB1058:
 2244              	.LBB1059:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 2245              		.loc 3 37 0
 2246 001a 0360     		str	r3, [r0]	@ float
 2247              	.LVL296:
 2248              	.LBE1059:
 2249              	.LBE1058:
 2250              	.LBB1060:
 2251              	.LBB1061:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 2252              		.loc 3 38 0
 2253 001c 4360     		str	r3, [r0, #4]	@ float
 2254              	.LVL297:
 2255              	.LBE1061:
 2256              	.LBE1060:
 2257              	.LBB1062:
 2258              	.LBB1063:
 2259              		.loc 3 39 0
 2260 001e 8360     		str	r3, [r0, #8]	@ float
 2261              	.LVL298:
 2262              	.LBE1063:
 2263              	.LBE1062:
 2264              	.LBE1057:
 2265              	.LBE1056:
 150:Core/Src/robot/robo_orientation.cpp ****         MPU6050_Read_NormAxes(&Body_IMU);
 2266              		.loc 6 150 0
 2267 0020 AF4D     		ldr	r5, .L87+8
 2268 0022 2846     		mov	r0, r5
 2269              	.LVL299:
 2270 0024 FFF7FEFF 		bl	_Z21MPU6050_Read_NormAxesP7MPU6050
 2271              	.LVL300:
 151:Core/Src/robot/robo_orientation.cpp ****         HMC5883_Read(&Body_HMC);
 2272              		.loc 6 151 0
 2273 0028 AE4E     		ldr	r6, .L87+12
 2274 002a 3046     		mov	r0, r6
 2275 002c FFF7FEFF 		bl	_Z12HMC5883_ReadP7HMC5883
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 52


 2276              	.LVL301:
 2277              	.LBB1064:
 2278              	.LBB1065:
 2279              	.LBB1066:
 2280              	.LBB1067:
 2281              	.LBB1068:
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 53


  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 2282              		.loc 3 129 0
 2283 0030 EB69     		ldr	r3, [r5, #28]	@ float
 2284 0032 0093     		str	r3, [sp]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 2285              		.loc 3 130 0
 2286 0034 2B6A     		ldr	r3, [r5, #32]	@ float
 2287 0036 0193     		str	r3, [sp, #4]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 2288              		.loc 3 131 0
 2289 0038 6B6A     		ldr	r3, [r5, #36]	@ float
 2290 003a 0293     		str	r3, [sp, #8]	@ float
 2291              	.LVL302:
 2292              	.LBE1068:
 2293              	.LBE1067:
 2294              	.LBE1066:
 2295              	.LBB1069:
 2296              	.LBB1070:
 132:Core/Inc/utils/vec3.h ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 54


 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 2297              		.loc 3 175 0
 2298 003c 6946     		mov	r1, sp
 2299 003e 06A8     		add	r0, sp, #24
 2300              	.LVL303:
 2301 0040 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 2302              	.LVL304:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 2303              		.loc 3 176 0
 2304 0044 01A9     		add	r1, sp, #4
 2305 0046 07A8     		add	r0, sp, #28
 2306 0048 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 2307              	.LVL305:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 2308              		.loc 3 177 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 55


 2309 004c 02A9     		add	r1, sp, #8
 2310 004e 08A8     		add	r0, sp, #32
 2311 0050 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 2312              	.LVL306:
 2313              	.LBE1070:
 2314              	.LBE1069:
 2315              	.LBE1065:
 2316              	.LBE1064:
 2317              	.LBB1071:
 2318              	.LBB1072:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 2319              		.loc 3 129 0
 2320 0054 95ED049A 		vldr.32	s18, [r5, #16]
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 2321              		.loc 3 130 0
 2322 0058 D5ED058A 		vldr.32	s17, [r5, #20]
 131:Core/Inc/utils/vec3.h ****         }
 2323              		.loc 3 131 0
 2324 005c 95ED068A 		vldr.32	s16, [r5, #24]
 2325              	.LVL307:
 2326              	.LBE1072:
 2327              	.LBE1071:
 2328              	.LBB1073:
 2329              	.LBB1074:
 2330              	.LBB1075:
 150:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 2331              		.loc 3 150 0
 2332 0060 A14B     		ldr	r3, .L87+16
 2333 0062 D3ED007A 		vldr.32	s15, [r3]
 2334 0066 39EE679A 		vsub.f32	s18, s18, s15
 151:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 2335              		.loc 3 151 0
 2336 006a D3ED017A 		vldr.32	s15, [r3, #4]
 2337 006e 78EEE78A 		vsub.f32	s17, s17, s15
 152:Core/Inc/utils/vec3.h **** 
 2338              		.loc 3 152 0
 2339 0072 D3ED027A 		vldr.32	s15, [r3, #8]
 2340 0076 38EE678A 		vsub.f32	s16, s16, s15
 2341              	.LVL308:
 2342              	.LBE1075:
 2343              	.LBE1074:
 2344              	.LBE1073:
 2345              	.LBB1076:
 2346              	.LBB1077:
 2347              	.LBB1078:
 2348              	.LBB1079:
 2349              	.LBB1080:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 2350              		.loc 3 129 0
 2351 007a 7368     		ldr	r3, [r6, #4]	@ float
 2352 007c 0093     		str	r3, [sp]	@ float
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 2353              		.loc 3 130 0
 2354 007e B368     		ldr	r3, [r6, #8]	@ float
 2355 0080 0193     		str	r3, [sp, #4]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 2356              		.loc 3 131 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 56


 2357 0082 F368     		ldr	r3, [r6, #12]	@ float
 2358 0084 0293     		str	r3, [sp, #8]	@ float
 2359              	.LVL309:
 2360              	.LBE1080:
 2361              	.LBE1079:
 2362              	.LBE1078:
 2363              	.LBB1081:
 2364              	.LBB1082:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 2365              		.loc 3 175 0
 2366 0086 6946     		mov	r1, sp
 2367 0088 03A8     		add	r0, sp, #12
 2368              	.LVL310:
 2369 008a FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 2370              	.LVL311:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 2371              		.loc 3 176 0
 2372 008e 01A9     		add	r1, sp, #4
 2373 0090 04A8     		add	r0, sp, #16
 2374 0092 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 2375              	.LVL312:
 2376              		.loc 3 177 0
 2377 0096 02A9     		add	r1, sp, #8
 2378 0098 05A8     		add	r0, sp, #20
 2379 009a FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 2380              	.LVL313:
 2381              	.LBE1082:
 2382              	.LBE1081:
 2383              	.LBE1077:
 2384              	.LBE1076:
 2385              	.LBB1083:
 2386              	.LBB1084:
 150:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 2387              		.loc 3 150 0
 2388 009e DDED037A 		vldr.32	s15, [sp, #12]
 2389 00a2 9FED927A 		vldr.32	s14, .L87+20
 2390 00a6 77EE877A 		vadd.f32	s15, s15, s14
 2391 00aa CDED037A 		vstr.32	s15, [sp, #12]
 151:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 2392              		.loc 3 151 0
 2393 00ae DDED047A 		vldr.32	s15, [sp, #16]
 2394 00b2 9FED8F7A 		vldr.32	s14, .L87+24
 2395 00b6 77EE877A 		vadd.f32	s15, s15, s14
 2396 00ba CDED047A 		vstr.32	s15, [sp, #16]
 152:Core/Inc/utils/vec3.h **** 
 2397              		.loc 3 152 0
 2398 00be DDED057A 		vldr.32	s15, [sp, #20]
 2399 00c2 B3EE0C7A 		vmov.f32	s14, #2.8e+1
 2400 00c6 77EEC77A 		vsub.f32	s15, s15, s14
 2401 00ca CDED057A 		vstr.32	s15, [sp, #20]
 2402              	.LVL314:
 2403              	.LBE1084:
 2404              	.LBE1083:
 166:Core/Src/robot/robo_orientation.cpp ****         float ax = gXAccelAlpha35.smooth(accel.getX());
 2405              		.loc 6 166 0
 2406 00ce 12A9     		add	r1, sp, #72
 2407 00d0 069B     		ldr	r3, [sp, #24]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 57


 2408 00d2 41F8243D 		str	r3, [r1, #-36]!	@ float
 2409 00d6 8748     		ldr	r0, .L87+28
 2410 00d8 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2411              	.LVL315:
 2412 00dc B0EE40DA 		vmov.f32	s26, s0
 2413              	.LVL316:
 167:Core/Src/robot/robo_orientation.cpp ****         float ay = gYAccelAlpha35.smooth(accel.getY());
 2414              		.loc 6 167 0
 2415 00e0 12A9     		add	r1, sp, #72
 2416 00e2 079B     		ldr	r3, [sp, #28]	@ float
 2417 00e4 41F8203D 		str	r3, [r1, #-32]!	@ float
 2418 00e8 8348     		ldr	r0, .L87+32
 2419 00ea FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2420              	.LVL317:
 2421 00ee F0EE40BA 		vmov.f32	s23, s0
 2422              	.LVL318:
 168:Core/Src/robot/robo_orientation.cpp ****         float az = gZAccelAlpha35.smooth(accel.getZ());
 2423              		.loc 6 168 0
 2424 00f2 12A9     		add	r1, sp, #72
 2425 00f4 089B     		ldr	r3, [sp, #32]	@ float
 2426 00f6 41F81C3D 		str	r3, [r1, #-28]!	@ float
 2427 00fa 8048     		ldr	r0, .L87+36
 2428 00fc FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2429              	.LVL319:
 2430 0100 F0EE409A 		vmov.f32	s19, s0
 2431              	.LVL320:
 170:Core/Src/robot/robo_orientation.cpp ****         float gx = gXGyroAlpha35.smooth(gyro.getX());
 2432              		.loc 6 170 0
 2433 0104 12A9     		add	r1, sp, #72
 2434 0106 19EE103A 		vmov	r3, s18
 2435 010a 41F8183D 		str	r3, [r1, #-24]!	@ float
 2436 010e 7C48     		ldr	r0, .L87+40
 2437 0110 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2438              	.LVL321:
 2439 0114 B0EE40AA 		vmov.f32	s20, s0
 2440              	.LVL322:
 171:Core/Src/robot/robo_orientation.cpp ****         float gy = gYGyroAlpha35.smooth(gyro.getY());
 2441              		.loc 6 171 0
 2442 0118 12A9     		add	r1, sp, #72
 2443 011a 18EE903A 		vmov	r3, s17
 2444 011e 41F8143D 		str	r3, [r1, #-20]!	@ float
 2445 0122 7848     		ldr	r0, .L87+44
 2446 0124 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2447              	.LVL323:
 2448 0128 F0EE40DA 		vmov.f32	s27, s0
 2449              	.LVL324:
 172:Core/Src/robot/robo_orientation.cpp ****         float gz = gZGyroAlpha35.smooth(gyro.getZ());
 2450              		.loc 6 172 0
 2451 012c 12A9     		add	r1, sp, #72
 2452 012e 18EE103A 		vmov	r3, s16
 2453 0132 41F8103D 		str	r3, [r1, #-16]!	@ float
 2454 0136 7448     		ldr	r0, .L87+48
 2455 0138 FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2456              	.LVL325:
 2457 013c B0EE40BA 		vmov.f32	s22, s0
 2458              	.LVL326:
 174:Core/Src/robot/robo_orientation.cpp ****         float bx = gXMagAlpha35.smooth(mag.getX());
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 58


 2459              		.loc 6 174 0
 2460 0140 12A9     		add	r1, sp, #72
 2461 0142 039B     		ldr	r3, [sp, #12]	@ float
 2462 0144 41F80C3D 		str	r3, [r1, #-12]!	@ float
 2463 0148 7048     		ldr	r0, .L87+52
 2464 014a FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2465              	.LVL327:
 2466 014e B0EE409A 		vmov.f32	s18, s0
 2467              	.LVL328:
 175:Core/Src/robot/robo_orientation.cpp ****         float by = gYMagAlpha35.smooth(mag.getY());
 2468              		.loc 6 175 0
 2469 0152 12A9     		add	r1, sp, #72
 2470 0154 049B     		ldr	r3, [sp, #16]	@ float
 2471 0156 41F8083D 		str	r3, [r1, #-8]!	@ float
 2472 015a 6D48     		ldr	r0, .L87+56
 2473 015c FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2474              	.LVL329:
 2475 0160 F0EE408A 		vmov.f32	s17, s0
 2476              	.LVL330:
 176:Core/Src/robot/robo_orientation.cpp ****         float bz = gZMagAlpha35.smooth(mag.getZ());
 2477              		.loc 6 176 0
 2478 0164 12A9     		add	r1, sp, #72
 2479 0166 059B     		ldr	r3, [sp, #20]	@ float
 2480 0168 41F8043D 		str	r3, [r1, #-4]!	@ float
 2481 016c 6948     		ldr	r0, .L87+60
 2482 016e FFF7FEFF 		bl	_ZN10Exp_Smooth6smoothERKf
 2483              	.LVL331:
 2484 0172 B0EE408A 		vmov.f32	s16, s0
 2485              	.LVL332:
 180:Core/Src/robot/robo_orientation.cpp ****         float roll = atan2f(ay, az) * 57.3;
 2486              		.loc 6 180 0
 2487 0176 F0EE690A 		vmov.f32	s1, s19
 2488 017a B0EE6B0A 		vmov.f32	s0, s23
 2489              	.LVL333:
 2490 017e FFF7FEFF 		bl	atan2f
 2491              	.LVL334:
 2492 0182 10EE100A 		vmov	r0, s0
 2493 0186 FFF7FEFF 		bl	__aeabi_f2d
 2494              	.LVL335:
 2495 018a 53A3     		adr	r3, .L87
 2496 018c D3E90023 		ldrd	r2, [r3]
 2497 0190 FFF7FEFF 		bl	__aeabi_dmul
 2498              	.LVL336:
 2499 0194 FFF7FEFF 		bl	__aeabi_d2f
 2500              	.LVL337:
 182:Core/Src/robot/robo_orientation.cpp ****         roll = gRoll_Filter.filter(roll, gx, dt_millis);
 2501              		.loc 6 182 0
 2502 0198 3946     		mov	r1, r7
 2503 019a F0EE4A0A 		vmov.f32	s1, s20
 2504 019e 00EE100A 		vmov	s0, r0
 2505 01a2 5D48     		ldr	r0, .L87+64
 2506              	.LVL338:
 2507 01a4 FFF7FEFF 		bl	_ZN13Kalman_Filter6filterEffm
 2508              	.LVL339:
 2509 01a8 10EE106A 		vmov	r6, s0
 2510              	.LVL340:
 185:Core/Src/robot/robo_orientation.cpp ****         float sin_roll = sin(roll / 57.3);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 59


 2511              		.loc 6 185 0
 2512 01ac 10EE100A 		vmov	r0, s0
 2513 01b0 FFF7FEFF 		bl	__aeabi_f2d
 2514              	.LVL341:
 2515 01b4 48A3     		adr	r3, .L87
 2516 01b6 D3E90023 		ldrd	r2, [r3]
 2517 01ba FFF7FEFF 		bl	__aeabi_ddiv
 2518              	.LVL342:
 2519 01be 41EC1A0B 		vmov	d10, r0, r1
 2520              	.LVL343:
 2521 01c2 41EC100B 		vmov	d0, r0, r1
 2522 01c6 FFF7FEFF 		bl	sin
 2523              	.LVL344:
 2524 01ca 51EC100B 		vmov	r0, r1, d0
 2525 01ce FFF7FEFF 		bl	__aeabi_d2f
 2526              	.LVL345:
 2527 01d2 0CEE900A 		vmov	s25, r0
 2528              	.LVL346:
 186:Core/Src/robot/robo_orientation.cpp ****         float cos_roll = cos(roll / 57.3);
 2529              		.loc 6 186 0
 2530 01d6 B0EE4A0A 		vmov.f32	s0, s20
 2531 01da F0EE6A0A 		vmov.f32	s1, s21
 2532 01de FFF7FEFF 		bl	cos
 2533              	.LVL347:
 2534 01e2 51EC100B 		vmov	r0, r1, d0
 2535 01e6 FFF7FEFF 		bl	__aeabi_d2f
 2536              	.LVL348:
 2537 01ea 0CEE100A 		vmov	s24, r0
 2538              	.LVL349:
 188:Core/Src/robot/robo_orientation.cpp ****         float pitch = atan2f((-ax), ay*sin_roll + az*cos_roll) * 57.3;
 2539              		.loc 6 188 0
 2540 01ee 6BEEAC0A 		vmul.f32	s1, s23, s25
 2541 01f2 69EE8C9A 		vmul.f32	s19, s19, s24
 2542              	.LVL350:
 2543 01f6 70EEA90A 		vadd.f32	s1, s1, s19
 2544 01fa B1EE4D0A 		vneg.f32	s0, s26
 2545 01fe FFF7FEFF 		bl	atan2f
 2546              	.LVL351:
 2547 0202 10EE100A 		vmov	r0, s0
 2548 0206 FFF7FEFF 		bl	__aeabi_f2d
 2549              	.LVL352:
 2550 020a 33A3     		adr	r3, .L87
 2551 020c D3E90023 		ldrd	r2, [r3]
 2552 0210 FFF7FEFF 		bl	__aeabi_dmul
 2553              	.LVL353:
 2554 0214 FFF7FEFF 		bl	__aeabi_d2f
 2555              	.LVL354:
 190:Core/Src/robot/robo_orientation.cpp ****         pitch = gPitch_Filter.filter(pitch, gy, dt_millis);
 2556              		.loc 6 190 0
 2557 0218 3946     		mov	r1, r7
 2558 021a F0EE6D0A 		vmov.f32	s1, s27
 2559 021e 00EE100A 		vmov	s0, r0
 2560 0222 3E48     		ldr	r0, .L87+68
 2561              	.LVL355:
 2562 0224 FFF7FEFF 		bl	_ZN13Kalman_Filter6filterEffm
 2563              	.LVL356:
 2564 0228 10EE105A 		vmov	r5, s0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 60


 2565              	.LVL357:
 193:Core/Src/robot/robo_orientation.cpp ****         float sin_pitch = sin(pitch / 57.3);
 2566              		.loc 6 193 0
 2567 022c 10EE100A 		vmov	r0, s0
 2568 0230 FFF7FEFF 		bl	__aeabi_f2d
 2569              	.LVL358:
 2570 0234 28A3     		adr	r3, .L87
 2571 0236 D3E90023 		ldrd	r2, [r3]
 2572 023a FFF7FEFF 		bl	__aeabi_ddiv
 2573              	.LVL359:
 2574 023e 41EC1A0B 		vmov	d10, r0, r1
 2575 0242 41EC100B 		vmov	d0, r0, r1
 2576 0246 FFF7FEFF 		bl	sin
 2577              	.LVL360:
 2578 024a 51EC100B 		vmov	r0, r1, d0
 2579 024e FFF7FEFF 		bl	__aeabi_d2f
 2580              	.LVL361:
 2581 0252 09EE900A 		vmov	s19, r0
 2582              	.LVL362:
 194:Core/Src/robot/robo_orientation.cpp ****         float cos_pitch = cos(pitch / 57.3);
 2583              		.loc 6 194 0
 2584 0256 B0EE4A0A 		vmov.f32	s0, s20
 2585 025a F0EE6A0A 		vmov.f32	s1, s21
 2586 025e FFF7FEFF 		bl	cos
 2587              	.LVL363:
 2588 0262 51EC100B 		vmov	r0, r1, d0
 2589 0266 FFF7FEFF 		bl	__aeabi_d2f
 2590              	.LVL364:
 196:Core/Src/robot/robo_orientation.cpp ****         float yaw = atan2f((bz*sin_roll - by*cos_roll), (bx*cos_pitch + by*sin_roll*sin_pitch + bz*
 2591              		.loc 6 196 0
 2592 026a 28EE2C0A 		vmul.f32	s0, s16, s25
 2593 026e 68EE8C7A 		vmul.f32	s15, s17, s24
 2594 0272 07EE100A 		vmov	s14, r0
 2595 0276 29EE079A 		vmul.f32	s18, s18, s14
 2596              	.LVL365:
 2597 027a 68EEAC8A 		vmul.f32	s17, s17, s25
 2598              	.LVL366:
 2599 027e 68EEA98A 		vmul.f32	s17, s17, s19
 2600 0282 79EE288A 		vadd.f32	s17, s18, s17
 2601 0286 28EE0C8A 		vmul.f32	s16, s16, s24
 2602              	.LVL367:
 2603 028a 28EE298A 		vmul.f32	s16, s16, s19
 2604 028e 78EE880A 		vadd.f32	s1, s17, s16
 2605 0292 30EE670A 		vsub.f32	s0, s0, s15
 2606 0296 FFF7FEFF 		bl	atan2f
 2607              	.LVL368:
 2608 029a 10EE100A 		vmov	r0, s0
 2609 029e FFF7FEFF 		bl	__aeabi_f2d
 2610              	.LVL369:
 2611 02a2 0DA3     		adr	r3, .L87
 2612 02a4 D3E90023 		ldrd	r2, [r3]
 2613 02a8 FFF7FEFF 		bl	__aeabi_dmul
 2614              	.LVL370:
 2615 02ac FFF7FEFF 		bl	__aeabi_d2f
 2616              	.LVL371:
 199:Core/Src/robot/robo_orientation.cpp ****         yaw = gYaw_Filter.filter(yaw, gz, dt_millis);
 2617              		.loc 6 199 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 61


 2618 02b0 3946     		mov	r1, r7
 2619 02b2 F0EE4B0A 		vmov.f32	s1, s22
 2620 02b6 00EE100A 		vmov	s0, r0
 2621 02ba 1948     		ldr	r0, .L87+72
 2622              	.LVL372:
 2623 02bc FFF7FEFF 		bl	_ZN13Kalman_Filter6filterEffm
 2624              	.LVL373:
 2625              	.LBB1085:
 2626              	.LBB1086:
 2627              	.LBB1087:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 2628              		.loc 3 37 0
 2629 02c0 2660     		str	r6, [r4]	@ float
 2630              	.LVL374:
 2631              	.LBE1087:
 2632              	.LBE1086:
 2633              	.LBB1088:
 2634              	.LBB1089:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 2635              		.loc 3 38 0
 2636 02c2 6560     		str	r5, [r4, #4]	@ float
 2637              	.LVL375:
 2638              	.LBE1089:
 2639              	.LBE1088:
 2640              	.LBB1090:
 2641              	.LBB1091:
  39:Core/Inc/utils/vec3.h **** 
 2642              		.loc 3 39 0
 2643 02c4 84ED020A 		vstr.32	s0, [r4, #8]
 2644              	.LVL376:
 2645              	.LBE1091:
 2646              	.LBE1090:
 2647              	.LBE1085:
 2648              		.loc 6 205 0
 2649 02c8 2046     		mov	r0, r4
 2650 02ca 13B0     		add	sp, sp, #76
 2651              	.LCFI24:
 2652              		.cfi_def_cfa_offset 68
 2653              		@ sp needed
 2654 02cc BDEC0C8B 		vldm	sp!, {d8-d13}
 2655              	.LCFI25:
 2656              		.cfi_restore 90
 2657              		.cfi_restore 91
 2658              		.cfi_restore 88
 2659              		.cfi_restore 89
 2660              		.cfi_restore 86
 2661              		.cfi_restore 87
 2662              		.cfi_restore 84
 2663              		.cfi_restore 85
 2664              		.cfi_restore 82
 2665              		.cfi_restore 83
 2666              		.cfi_restore 80
 2667              		.cfi_restore 81
 2668              		.cfi_def_cfa_offset 20
 2669              	.LVL377:
 2670 02d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 2671              	.LVL378:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 62


 2672              	.L88:
 2673 02d2 00BFAFF3 		.align	3
 2673      0080
 2674              	.L87:
 2675 02d8 66666666 		.word	1717986918
 2676 02dc 66A64C40 		.word	1078765158
 2677 02e0 00000000 		.word	.LANCHOR0
 2678 02e4 00000000 		.word	.LANCHOR1
 2679 02e8 00000000 		.word	.LANCHOR3
 2680 02ec 00000D43 		.word	1124925440
 2681 02f0 00002743 		.word	1126629376
 2682 02f4 00000000 		.word	.LANCHOR4
 2683 02f8 00000000 		.word	.LANCHOR5
 2684 02fc 00000000 		.word	.LANCHOR6
 2685 0300 00000000 		.word	.LANCHOR7
 2686 0304 00000000 		.word	.LANCHOR8
 2687 0308 00000000 		.word	.LANCHOR9
 2688 030c 00000000 		.word	.LANCHOR10
 2689 0310 00000000 		.word	.LANCHOR11
 2690 0314 00000000 		.word	.LANCHOR12
 2691 0318 00000000 		.word	.LANCHOR13
 2692 031c 00000000 		.word	.LANCHOR14
 2693 0320 00000000 		.word	.LANCHOR15
 2694              		.cfi_endproc
 2695              	.LFE428:
 2697              		.section	.text._GLOBAL__sub_I_Body_IMU,"ax",%progbits
 2698              		.align	1
 2699              		.syntax unified
 2700              		.thumb
 2701              		.thumb_func
 2702              		.fpu fpv4-sp-d16
 2704              	_GLOBAL__sub_I_Body_IMU:
 2705              	.LFB473:
 2706              		.loc 6 205 0
 2707              		.cfi_startproc
 2708              		@ args = 0, pretend = 0, frame = 0
 2709              		@ frame_needed = 0, uses_anonymous_args = 0
 2710 0000 08B5     		push	{r3, lr}
 2711              	.LCFI26:
 2712              		.cfi_def_cfa_offset 8
 2713              		.cfi_offset 3, -8
 2714              		.cfi_offset 14, -4
 2715              		.loc 6 205 0
 2716 0002 4FF6FF71 		movw	r1, #65535
 2717 0006 0120     		movs	r0, #1
 2718 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 2719              	.LVL379:
 2720 000c 08BD     		pop	{r3, pc}
 2721              		.cfi_endproc
 2722              	.LFE473:
 2724              		.section	.init_array,"aw",%init_array
 2725              		.align	2
 2726 0000 00000000 		.word	_GLOBAL__sub_I_Body_IMU(target1)
 2727              		.global	Body_HMC
 2728              		.global	Body_IMU
 2729              		.section	.bss.Body_HMC,"aw",%nobits
 2730              		.align	2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 63


 2731              		.set	.LANCHOR1,. + 0
 2734              	Body_HMC:
 2735 0000 00000000 		.space	32
 2735      00000000 
 2735      00000000 
 2735      00000000 
 2735      00000000 
 2736              		.section	.bss.Body_IMU,"aw",%nobits
 2737              		.align	2
 2738              		.set	.LANCHOR0,. + 0
 2741              	Body_IMU:
 2742 0000 00000000 		.space	52
 2742      00000000 
 2742      00000000 
 2742      00000000 
 2742      00000000 
 2743              		.section	.bss._ZL11gAccel_Gyro,"aw",%nobits
 2744              		.align	2
 2745              		.set	.LANCHOR2,. + 0
 2748              	_ZL11gAccel_Gyro:
 2749 0000 00000000 		.space	476
 2749      00000000 
 2749      00000000 
 2749      00000000 
 2749      00000000 
 2750              		.section	.bss._ZL11gOmega_Bias,"aw",%nobits
 2751              		.align	2
 2752              		.set	.LANCHOR3,. + 0
 2755              	_ZL11gOmega_Bias:
 2756 0000 00000000 		.space	12
 2756      00000000 
 2756      00000000 
 2757              		.section	.bss._ZL11gYaw_Filter,"aw",%nobits
 2758              		.align	2
 2759              		.set	.LANCHOR15,. + 0
 2762              	_ZL11gYaw_Filter:
 2763 0000 00000000 		.space	284
 2763      00000000 
 2763      00000000 
 2763      00000000 
 2763      00000000 
 2764              		.section	.bss._ZL12gRoll_Filter,"aw",%nobits
 2765              		.align	2
 2766              		.set	.LANCHOR13,. + 0
 2769              	_ZL12gRoll_Filter:
 2770 0000 00000000 		.space	284
 2770      00000000 
 2770      00000000 
 2770      00000000 
 2770      00000000 
 2771              		.section	.bss._ZL12gXMagAlpha35,"aw",%nobits
 2772              		.align	2
 2773              		.set	.LANCHOR10,. + 0
 2776              	_ZL12gXMagAlpha35:
 2777 0000 00000000 		.space	12
 2777      00000000 
 2777      00000000 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 64


 2778              		.section	.bss._ZL12gYMagAlpha35,"aw",%nobits
 2779              		.align	2
 2780              		.set	.LANCHOR11,. + 0
 2783              	_ZL12gYMagAlpha35:
 2784 0000 00000000 		.space	12
 2784      00000000 
 2784      00000000 
 2785              		.section	.bss._ZL12gZMagAlpha35,"aw",%nobits
 2786              		.align	2
 2787              		.set	.LANCHOR12,. + 0
 2790              	_ZL12gZMagAlpha35:
 2791 0000 00000000 		.space	12
 2791      00000000 
 2791      00000000 
 2792              		.section	.bss._ZL13gPitch_Filter,"aw",%nobits
 2793              		.align	2
 2794              		.set	.LANCHOR14,. + 0
 2797              	_ZL13gPitch_Filter:
 2798 0000 00000000 		.space	284
 2798      00000000 
 2798      00000000 
 2798      00000000 
 2798      00000000 
 2799              		.section	.bss._ZL13gXGyroAlpha35,"aw",%nobits
 2800              		.align	2
 2801              		.set	.LANCHOR7,. + 0
 2804              	_ZL13gXGyroAlpha35:
 2805 0000 00000000 		.space	12
 2805      00000000 
 2805      00000000 
 2806              		.section	.bss._ZL13gYGyroAlpha35,"aw",%nobits
 2807              		.align	2
 2808              		.set	.LANCHOR8,. + 0
 2811              	_ZL13gYGyroAlpha35:
 2812 0000 00000000 		.space	12
 2812      00000000 
 2812      00000000 
 2813              		.section	.bss._ZL13gZGyroAlpha35,"aw",%nobits
 2814              		.align	2
 2815              		.set	.LANCHOR9,. + 0
 2818              	_ZL13gZGyroAlpha35:
 2819 0000 00000000 		.space	12
 2819      00000000 
 2819      00000000 
 2820              		.section	.bss._ZL14gXAccelAlpha35,"aw",%nobits
 2821              		.align	2
 2822              		.set	.LANCHOR4,. + 0
 2825              	_ZL14gXAccelAlpha35:
 2826 0000 00000000 		.space	12
 2826      00000000 
 2826      00000000 
 2827              		.section	.bss._ZL14gYAccelAlpha35,"aw",%nobits
 2828              		.align	2
 2829              		.set	.LANCHOR5,. + 0
 2832              	_ZL14gYAccelAlpha35:
 2833 0000 00000000 		.space	12
 2833      00000000 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 65


 2833      00000000 
 2834              		.section	.bss._ZL14gZAccelAlpha35,"aw",%nobits
 2835              		.align	2
 2836              		.set	.LANCHOR6,. + 0
 2839              	_ZL14gZAccelAlpha35:
 2840 0000 00000000 		.space	12
 2840      00000000 
 2840      00000000 
 2841              		.section	.rodata._Z15init_OriFiltersm.str1.4,"aMS",%progbits,1
 2842              		.align	2
 2843              	.LC0:
 2844 0000 436F7265 		.ascii	"Core/Inc/utils/mat.h\000"
 2844      2F496E63 
 2844      2F757469 
 2844      6C732F6D 
 2844      61742E68 
 2845              		.text
 2846              	.Letext0:
 2847              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2848              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2849              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 2850              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2851              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2852              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2853              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 2854              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2855              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2856              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2857              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2858              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2859              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2860              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2861              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2862              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2863              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2864              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2865              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2866              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2867              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2868              		.file 29 "Core/Inc/periphs/i2c.h"
 2869              		.file 30 "Core/Inc/periphs/tim.h"
 2870              		.file 31 "Core/Inc/main.h"
 2871              		.file 32 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 66


DEFINED SYMBOLS
                            *ABS*:00000000 robo_orientation.cpp
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:18     .text._ZN10Exp_SmoothD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:25     .text._ZN10Exp_SmoothD2Ev:00000000 _ZN10Exp_SmoothD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:25     .text._ZN10Exp_SmoothD2Ev:00000000 _ZN10Exp_SmoothD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:42     .text._ZN13Kalman_FilterD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:49     .text._ZN13Kalman_FilterD2Ev:00000000 _ZN13Kalman_FilterD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:49     .text._ZN13Kalman_FilterD2Ev:00000000 _ZN13Kalman_FilterD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:66     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:73     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:73     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:90     .text._ZN7MPU6050D2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:97     .text._ZN7MPU6050D2Ev:00000000 _ZN7MPU6050D2Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:97     .text._ZN7MPU6050D2Ev:00000000 _ZN7MPU6050D1Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:114    .text._ZN7HMC5883D2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:121    .text._ZN7HMC5883D2Ev:00000000 _ZN7HMC5883D2Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:121    .text._ZN7HMC5883D2Ev:00000000 _ZN7HMC5883D1Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:138    .text._ZN11Kalman_VarsD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:145    .text._ZN11Kalman_VarsD2Ev:00000000 _ZN11Kalman_VarsD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:145    .text._ZN11Kalman_VarsD2Ev:00000000 _ZN11Kalman_VarsD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:161    .text._ZL8IMU_Initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:167    .text._ZL8IMU_Initv:00000000 _ZL8IMU_Initv
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:209    .text._ZL8IMU_Initv:0000002c $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:216    .text._Z15init_OriFiltersm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:223    .text._Z15init_OriFiltersm:00000000 _Z15init_OriFiltersm
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:788    .text._Z15init_OriFiltersm:000002ac $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:801    .text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:808    .text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:00000000 _ZN13Kalman_FilterC2EP11Kalman_VarsPFimE
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:808    .text._ZN13Kalman_FilterC2EP11Kalman_VarsPFimE:00000000 _ZN13Kalman_FilterC1EP11Kalman_VarsPFimE
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:867    .text._ZN13Kalman_Filter6filterEffm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:874    .text._ZN13Kalman_Filter6filterEffm:00000000 _ZN13Kalman_Filter6filterEffm
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:1507   .text._ZN13Kalman_Filter6filterEffm:000002ec $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:1517   .text._ZN11Kalman_VarsC2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:1524   .text._ZN11Kalman_VarsC2Ev:00000000 _ZN11Kalman_VarsC2Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:1524   .text._ZN11Kalman_VarsC2Ev:00000000 _ZN11Kalman_VarsC1Ev
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:1618   .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:1624   .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2031   .text._Z41__static_initialization_and_destruction_0ii:00000198 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2060   .text._Z10Angle_Initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2067   .text._Z10Angle_Initv:00000000 _Z10Angle_Initv
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2104   .text._Z10Angle_Initv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2110   .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2117   .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2143   .text._Z16read_Orientationm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2150   .text._Z16read_Orientationm:00000000 _Z16read_Orientationm
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2675   .text._Z16read_Orientationm:000002d8 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2698   .text._GLOBAL__sub_I_Body_IMU:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2704   .text._GLOBAL__sub_I_Body_IMU:00000000 _GLOBAL__sub_I_Body_IMU
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2725   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2734   .bss.Body_HMC:00000000 Body_HMC
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2741   .bss.Body_IMU:00000000 Body_IMU
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2730   .bss.Body_HMC:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2737   .bss.Body_IMU:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2744   .bss._ZL11gAccel_Gyro:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2748   .bss._ZL11gAccel_Gyro:00000000 _ZL11gAccel_Gyro
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2751   .bss._ZL11gOmega_Bias:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2755   .bss._ZL11gOmega_Bias:00000000 _ZL11gOmega_Bias
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 67


C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2758   .bss._ZL11gYaw_Filter:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2762   .bss._ZL11gYaw_Filter:00000000 _ZL11gYaw_Filter
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2765   .bss._ZL12gRoll_Filter:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2769   .bss._ZL12gRoll_Filter:00000000 _ZL12gRoll_Filter
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2772   .bss._ZL12gXMagAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2776   .bss._ZL12gXMagAlpha35:00000000 _ZL12gXMagAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2779   .bss._ZL12gYMagAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2783   .bss._ZL12gYMagAlpha35:00000000 _ZL12gYMagAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2786   .bss._ZL12gZMagAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2790   .bss._ZL12gZMagAlpha35:00000000 _ZL12gZMagAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2793   .bss._ZL13gPitch_Filter:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2797   .bss._ZL13gPitch_Filter:00000000 _ZL13gPitch_Filter
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2800   .bss._ZL13gXGyroAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2804   .bss._ZL13gXGyroAlpha35:00000000 _ZL13gXGyroAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2807   .bss._ZL13gYGyroAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2811   .bss._ZL13gYGyroAlpha35:00000000 _ZL13gYGyroAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2814   .bss._ZL13gZGyroAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2818   .bss._ZL13gZGyroAlpha35:00000000 _ZL13gZGyroAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2821   .bss._ZL14gXAccelAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2825   .bss._ZL14gXAccelAlpha35:00000000 _ZL14gXAccelAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2828   .bss._ZL14gYAccelAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2832   .bss._ZL14gYAccelAlpha35:00000000 _ZL14gYAccelAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2835   .bss._ZL14gZAccelAlpha35:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2839   .bss._ZL14gZAccelAlpha35:00000000 _ZL14gZAccelAlpha35
C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s:2842   .rodata._Z15init_OriFiltersm.str1.4:00000000 $d
                           .group:00000000 _ZN10Exp_SmoothD5Ev
                           .group:00000000 _ZN13Kalman_FilterD5Ev
                           .group:00000000 _ZN4Vec3IfED5Ev
                           .group:00000000 _ZN7MPU6050D5Ev
                           .group:00000000 _ZN7HMC5883D5Ev
                           .group:00000000 _ZN11Kalman_VarsD5Ev
                           .group:00000000 _ZN13Kalman_FilterC5EP11Kalman_VarsPFimE
                           .group:00000000 _ZN11Kalman_VarsC5Ev

UNDEFINED SYMBOLS
_Z12MPU6050_InitP7MPU6050
_Z12HMC5883_InitP7HMC5883
hi2c1
_ZN3MatC1Ehh
_Error_Handler
_ZN3MatC1ERKS_
_Z4swapR3MatS0_
_ZN3Mat3eyeEh
memcpy
_ZN3MatmLERKS_
_ZN3MatpLERKS_
_ZN3Mat9transposeEv
_ZNK3Mat3invERS_
_ZN3MatmIERKS_
__aeabi_atexit
_ZN10Exp_SmoothC1Ef
__dso_handle
_Z22MPU6050_Calc_OmegaBiasP7MPU6050m
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccvub8Rl.s 			page 68


_Z21MPU6050_Read_NormAxesP7MPU6050
_Z12HMC5883_ReadP7HMC5883
_ZN10Exp_Smooth6smoothERKf
atan2f
sin
cos
