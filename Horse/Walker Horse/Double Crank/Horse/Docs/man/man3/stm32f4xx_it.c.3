.TH "Src/sys/stm32f4xx_it.c" 3 "Sun May 12 2019" "ROBOCON_2019_HORSE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Src/sys/stm32f4xx_it.c \- Interrupt Service Routines\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'main\&.h'\fP
.br
\fC#include 'stm32f4xx_it\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBNMI_Handler\fP (void)"
.br
.RI "This function handles Non maskable interrupt\&. "
.ti -1c
.RI "void \fBHardFault_Handler\fP (void)"
.br
.RI "This function handles Hard fault interrupt\&. "
.ti -1c
.RI "void \fBMemManage_Handler\fP (void)"
.br
.RI "This function handles Memory management fault\&. "
.ti -1c
.RI "void \fBBusFault_Handler\fP (void)"
.br
.RI "This function handles Pre-fetch fault, memory access fault\&. "
.ti -1c
.RI "void \fBUsageFault_Handler\fP (void)"
.br
.RI "This function handles Undefined instruction or illegal state\&. "
.ti -1c
.RI "void \fBSVC_Handler\fP (void)"
.br
.RI "This function handles System service call via SWI instruction\&. "
.ti -1c
.RI "void \fBDebugMon_Handler\fP (void)"
.br
.RI "This function handles Debug monitor\&. "
.ti -1c
.RI "void \fBPendSV_Handler\fP (void)"
.br
.RI "This function handles Pendable request for system service\&. "
.ti -1c
.RI "void \fBSysTick_Handler\fP (void)"
.br
.RI "This function handles System tick timer\&. "
.ti -1c
.RI "void \fBEXTI0_IRQHandler\fP (void)"
.br
.RI "This function handles EXTI line0 interrupt\&. "
.ti -1c
.RI "void \fBEXTI1_IRQHandler\fP (void)"
.br
.RI "This function handles EXTI line1 interrupt\&. "
.ti -1c
.RI "void \fBEXTI2_IRQHandler\fP (void)"
.br
.RI "This function handles EXTI line2 interrupt\&. "
.ti -1c
.RI "void \fBEXTI3_IRQHandler\fP (void)"
.br
.RI "This function handles EXTI line3 interrupt\&. "
.ti -1c
.RI "void \fBEXTI4_IRQHandler\fP (void)"
.br
.RI "This function handles EXTI line4 interrupt\&. "
.ti -1c
.RI "void \fBEXTI9_5_IRQHandler\fP (void)"
.br
.RI "This function handles EXTI line[9:5] interrupts\&. "
.ti -1c
.RI "void \fBEXTI15_10_IRQHandler\fP (void)"
.br
.RI "This function handles EXTI line[15:10] interrupts\&. "
.in -1c
.SH "Detailed Description"
.PP 
Interrupt Service Routines\&. 

COPYRIGHT(c) 2019 STMicroelectronics
.PP
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
.IP "1." 4
Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer\&.
.IP "2." 4
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution\&.
.IP "3." 4
Neither the name of STMicroelectronics nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission\&.
.PP
.PP
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED\&. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\&. 
.PP
Definition in file \fBstm32f4xx_it\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "void BusFault_Handler (void)"

.PP
This function handles Pre-fetch fault, memory access fault\&. 
.PP
Definition at line 127 of file stm32f4xx_it\&.c\&.
.SS "void DebugMon_Handler (void)"

.PP
This function handles Debug monitor\&. 
.PP
Definition at line 170 of file stm32f4xx_it\&.c\&.
.SS "void EXTI0_IRQHandler (void)"

.PP
This function handles EXTI line0 interrupt\&. 
.PP
Definition at line 217 of file stm32f4xx_it\&.c\&.
.SS "void EXTI15_10_IRQHandler (void)"

.PP
This function handles EXTI line[15:10] interrupts\&. 
.PP
Definition at line 302 of file stm32f4xx_it\&.c\&.
.SS "void EXTI1_IRQHandler (void)"

.PP
This function handles EXTI line1 interrupt\&. 
.PP
Definition at line 231 of file stm32f4xx_it\&.c\&.
.SS "void EXTI2_IRQHandler (void)"

.PP
This function handles EXTI line2 interrupt\&. 
.PP
Definition at line 245 of file stm32f4xx_it\&.c\&.
.SS "void EXTI3_IRQHandler (void)"

.PP
This function handles EXTI line3 interrupt\&. 
.PP
Definition at line 259 of file stm32f4xx_it\&.c\&.
.SS "void EXTI4_IRQHandler (void)"

.PP
This function handles EXTI line4 interrupt\&. 
.PP
Definition at line 273 of file stm32f4xx_it\&.c\&.
.SS "void EXTI9_5_IRQHandler (void)"

.PP
This function handles EXTI line[9:5] interrupts\&. 
.PP
Definition at line 287 of file stm32f4xx_it\&.c\&.
.SS "void HardFault_Handler (void)"

.PP
This function handles Hard fault interrupt\&. 
.PP
Definition at line 97 of file stm32f4xx_it\&.c\&.
.SS "void MemManage_Handler (void)"

.PP
This function handles Memory management fault\&. 
.PP
Definition at line 112 of file stm32f4xx_it\&.c\&.
.SS "void NMI_Handler (void)"

.PP
This function handles Non maskable interrupt\&. 
.PP
Definition at line 84 of file stm32f4xx_it\&.c\&.
.SS "void PendSV_Handler (void)"

.PP
This function handles Pendable request for system service\&. 
.PP
Definition at line 183 of file stm32f4xx_it\&.c\&.
.SS "void SVC_Handler (void)"

.PP
This function handles System service call via SWI instruction\&. 
.PP
Definition at line 157 of file stm32f4xx_it\&.c\&.
.SS "void SysTick_Handler (void)"

.PP
This function handles System tick timer\&. 
.PP
Definition at line 196 of file stm32f4xx_it\&.c\&.
.SS "void UsageFault_Handler (void)"

.PP
This function handles Undefined instruction or illegal state\&. 
.PP
Definition at line 142 of file stm32f4xx_it\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ROBOCON_2019_HORSE from the source code\&.
