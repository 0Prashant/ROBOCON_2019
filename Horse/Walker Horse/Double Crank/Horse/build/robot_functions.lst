ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot_functions.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB507:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE507:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB513:
  50              		.file 2 "Core/Src/robot/robot_functions.cpp"
   1:Core/Src/robot/robot_functions.cpp **** 
   2:Core/Src/robot/robot_functions.cpp **** 
   3:Core/Src/robot/robot_functions.cpp **** #include "robot_functions.h"
   4:Core/Src/robot/robot_functions.cpp **** 
   5:Core/Src/robot/robot_functions.cpp **** extern leg leg[2];
   6:Core/Src/robot/robot_functions.cpp **** extern steering steering;
   7:Core/Src/robot/robot_functions.cpp **** extern bool USE_IMU_FLAG;
   8:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
   9:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
  10:Core/Src/robot/robot_functions.cpp **** 
  11:Core/Src/robot/robot_functions.cpp **** static const float robot_speed = 5;    //17 is the maximum with safe zone
  12:Core/Src/robot/robot_functions.cpp **** static const float steering_speed = 0.85; // 0.875 is the 100%
  13:Core/Src/robot/robot_functions.cpp **** static const float steering_angle_limit = 6 * PI / 180;
  14:Core/Src/robot/robot_functions.cpp **** 
  15:Core/Src/robot/robot_functions.cpp **** extern int steps[7];
  16:Core/Src/robot/robot_functions.cpp **** extern float angles[7];
  17:Core/Src/robot/robot_functions.cpp **** float robotx = 0;
  18:Core/Src/robot/robot_functions.cpp **** float summation_angle = 0;
  19:Core/Src/robot/robot_functions.cpp **** uint32_t start_time;
  20:Core/Src/robot/robot_functions.cpp **** 
  21:Core/Src/robot/robot_functions.cpp **** bool STEERING_FLAG = false;
  22:Core/Src/robot/robot_functions.cpp **** 
  23:Core/Src/robot/robot_functions.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  24:Core/Src/robot/robot_functions.cpp **** float tolerance = 3 * PI / 180;
  25:Core/Src/robot/robot_functions.cpp **** 
  26:Core/Src/robot/robot_functions.cpp **** /*
  27:Core/Src/robot/robot_functions.cpp ****  * \brief This function makes the robot to reach the provided steps and angle.
  28:Core/Src/robot/robot_functions.cpp ****  * \brief this function needs to be called every 10 ms unti it reaches the desired position.
  29:Core/Src/robot/robot_functions.cpp ****  * \params: number of steps and angle in degree the robot has to reach.
  30:Core/Src/robot/robot_functions.cpp ****  * \returns true if robot reaches to the provided steps and angle.
  31:Core/Src/robot/robot_functions.cpp ****  * The angles that are caalibrated in degrees needs to be converted to radian.
  32:Core/Src/robot/robot_functions.cpp ****  * The function move_leg() is called at the beginning which moves the leg upto the desired point.
  33:Core/Src/robot/robot_functions.cpp ****  * There are two parameters inside this function move_leg(), the steps parameter is used whereas th
  34:Core/Src/robot/robot_functions.cpp ****  * The condition is if statement is to ensure that the robot is not in sand dune and it has not rea
  35:Core/Src/robot/robot_functions.cpp ****  * Whenever the robot reaches the sand dune the number of steps is declared to 100, so the step != 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 3


  36:Core/Src/robot/robot_functions.cpp ****  * The function calculate_robot_angle() calculates its relative position from the initial state and
  37:Core/Src/robot/robot_functions.cpp ****  * This function operates until the desired steps and desired angles is reached. This is ensured by
  38:Core/Src/robot/robot_functions.cpp ****  * After the desired step and angle is reached, the function returns True.
  39:Core/Src/robot/robot_functions.cpp **** */
  40:Core/Src/robot/robot_functions.cpp **** bool go(int step, float angle)
  41:Core/Src/robot/robot_functions.cpp **** {
  42:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
  43:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
  44:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
  45:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
  46:Core/Src/robot/robot_functions.cpp **** 	}
  47:Core/Src/robot/robot_functions.cpp **** 	else{
  48:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
  49:Core/Src/robot/robot_functions.cpp **** 	}
  50:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
  51:Core/Src/robot/robot_functions.cpp **** 	//printf(" \nsteps = %d\t robot_angle = %d\t steering_angle = %d\t", (int)(leg[0].get_steps()), (i
  52:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
  53:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
  54:Core/Src/robot/robot_functions.cpp **** 
  55:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
  56:Core/Src/robot/robot_functions.cpp **** 	{
  57:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
  58:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
  59:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
  60:Core/Src/robot/robot_functions.cpp **** 		return true;
  61:Core/Src/robot/robot_functions.cpp **** 	}
  62:Core/Src/robot/robot_functions.cpp **** 	else
  63:Core/Src/robot/robot_functions.cpp **** 	{
  64:Core/Src/robot/robot_functions.cpp **** 		return false;
  65:Core/Src/robot/robot_functions.cpp **** 	}
  66:Core/Src/robot/robot_functions.cpp **** }
  67:Core/Src/robot/robot_functions.cpp **** /*
  68:Core/Src/robot/robot_functions.cpp ****  *The function move_leg() is the basic function to give speed to the motor.
  69:Core/Src/robot/robot_functions.cpp ****  *\return params: void
  70:Core/Src/robot/robot_functions.cpp ****  *\input parameter: steps, angle
  71:Core/Src/robot/robot_functions.cpp ****  *This function takes two input parameters: step and angle. Although the parameter angle is not use
  72:Core/Src/robot/robot_functions.cpp ****  *The variable leg_speed stores the value of speed. When the robot is in sand_dune region, the spee
  73:Core/Src/robot/robot_functions.cpp ****  *The variable del_speed stores the value of difference in speed in case where the legs are not in 
  74:Core/Src/robot/robot_functions.cpp ****  *If the legs are not in 180 degrees phase difference, some calculations need to be made in order t
  75:Core/Src/robot/robot_functions.cpp ****  *This is done by evaluating the angles every time. Whenever the returned angle is not in the desir
  76:Core/Src/robot/robot_functions.cpp ****  *difference is the two leg angles multiplied by leg_speed which is again multiplied by the factor 
  77:Core/Src/robot/robot_functions.cpp ****  *Following the above reference, the leg_speed is calculated in closed loop basis.
  78:Core/Src/robot/robot_functions.cpp **** */
  79:Core/Src/robot/robot_functions.cpp **** void move_leg(int step, float angle)
  80:Core/Src/robot/robot_functions.cpp **** {
  81:Core/Src/robot/robot_functions.cpp **** 	float del_speed = 0;
  82:Core/Src/robot/robot_functions.cpp **** 	float damping_constant = 0.65;
  83:Core/Src/robot/robot_functions.cpp **** 	float leg_speed = robot_speed; 
  84:Core/Src/robot/robot_functions.cpp **** 
  85:Core/Src/robot/robot_functions.cpp **** 	//Setting the slow speed in sand dune and tussok
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.2 : robot_speed;
  87:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[6]){
  88:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 5;
  89:Core/Src/robot/robot_functions.cpp **** 	}
  90:Core/Src/robot/robot_functions.cpp **** 	/*/
  91:Core/Src/robot/robot_functions.cpp **** 	float leg_speed[2] = {0, 0};
  92:Core/Src/robot/robot_functions.cpp **** 	float offset_angle = 0;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 4


  93:Core/Src/robot/robot_functions.cpp **** 	for(int i = 0; i < 2; i++)
  94:Core/Src/robot/robot_functions.cpp **** 	{
  95:Core/Src/robot/robot_functions.cpp **** 		if(i == 0){
  96:Core/Src/robot/robot_functions.cpp **** 			offset_angle = 0;}
  97:Core/Src/robot/robot_functions.cpp **** 		else{
  98:Core/Src/robot/robot_functions.cpp **** 			offset_angle = PI;}
  99:Core/Src/robot/robot_functions.cpp **** 		
 100:Core/Src/robot/robot_functions.cpp **** 		if(leg[0].is_raised() == Leg_condition::RAISED)
 101:Core/Src/robot/robot_functions.cpp **** 		if(leg[i].get_angle() >= (15 * PI/180 + offset_angle) && leg[i].get_angle() <= (165 * PI/180 + of
 102:Core/Src/robot/robot_functions.cpp **** 		{
 103:Core/Src/robot/robot_functions.cpp **** 			leg_speed[i] = leg_speed * 2;
 104:Core/Src/robot/robot_functions.cpp **** 		}
 105:Core/Src/robot/robot_functions.cpp **** 		else if(leg[i].get_angle() >= (195 * PI/180 - offset_angle) && leg[i].get_angle() <= (345 * PI/18
 106:Core/Src/robot/robot_functions.cpp **** 		{
 107:Core/Src/robot/robot_functions.cpp **** 			leg_speed[i] = leg_speed;
 108:Core/Src/robot/robot_functions.cpp **** 		}
 109:Core/Src/robot/robot_functions.cpp **** 
 110:Core/Src/robot/robot_functions.cpp **** 
 111:Core/Src/robot/robot_functions.cpp **** 		leg[i].set_omega(leg_speed[i]);
 112:Core/Src/robot/robot_functions.cpp **** 	}
 113:Core/Src/robot/robot_functions.cpp **** 	/*/
 114:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2*(leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 115:Core/Src/robot/robot_functions.cpp **** 	if(fabs(del_speed) >= leg_speed){
 116:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 117:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 118:Core/Src/robot/robot_functions.cpp **** 	}
 119:Core/Src/robot/robot_functions.cpp **** 	float damping_factor = (cos(2*leg[0].get_angle())) * leg_speed * damping_constant;
 120:Core/Src/robot/robot_functions.cpp **** 	leg_speed -= damping_factor;
 121:Core/Src/robot/robot_functions.cpp **** 	// if((leg[0].get_angle() > (150 * PI/180) && leg[0].get_angle() < (180 * PI/180)) ||
 122:Core/Src/robot/robot_functions.cpp **** 	// (leg[0].get_angle() > (330 * PI/180) && leg[0].get_angle() < (360 * PI/180))){
 123:Core/Src/robot/robot_functions.cpp **** 	// 	leg_speed = robot_speed/4;
 124:Core/Src/robot/robot_functions.cpp **** 	// }
 125:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 126:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 127:Core/Src/robot/robot_functions.cpp **** 	//*/
 128:Core/Src/robot/robot_functions.cpp **** 	// printf("\t%d \t%d \t", (int)(leg_speed + del_speed), (int)(leg_speed - del_speed));
 129:Core/Src/robot/robot_functions.cpp **** }
 130:Core/Src/robot/robot_functions.cpp **** 
 131:Core/Src/robot/robot_functions.cpp **** /*
 132:Core/Src/robot/robot_functions.cpp ****  *The function move_steering() is concerned with moving the steering to certain angle with certain 
 133:Core/Src/robot/robot_functions.cpp ****  *Return patameter: void
 134:Core/Src/robot/robot_functions.cpp ****  *Input parameters: step, angle
 135:Core/Src/robot/robot_functions.cpp ****  *During initialization, the summation_angle is set to 0. After the robot starts to move, there is 
 136:Core/Src/robot/robot_functions.cpp ****  * This error of course needs to be minimized. This minimization is done by  summing all the drifts
 137:Core/Src/robot/robot_functions.cpp ****  * that it gives to the robot. Whenever the steering sets the angle for robot, this error is also a
 138:Core/Src/robot/robot_functions.cpp ****  * The robot changes the angle whenever the outside leg is raised. For the robot and leg to be in t
 139:Core/Src/robot/robot_functions.cpp ****  * the outside leg is in fallen state.
 140:Core/Src/robot/robot_functions.cpp **** */
 141:Core/Src/robot/robot_functions.cpp **** void move_steering(int step, float angle)
 142:Core/Src/robot/robot_functions.cpp **** {
 143:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[0]){
 144:Core/Src/robot/robot_functions.cpp **** 		summation_angle +=robot_angle;
 145:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 146:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 147:Core/Src/robot/robot_functions.cpp **** 	}
 148:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 149:Core/Src/robot/robot_functions.cpp **** 	{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 5


 150:Core/Src/robot/robot_functions.cpp **** 		// printf("  raised  ");
 151:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 152:Core/Src/robot/robot_functions.cpp **** 	}
 153:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 154:Core/Src/robot/robot_functions.cpp **** 	{
 155:Core/Src/robot/robot_functions.cpp **** 		// printf("  fallen  ");
 156:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 157:Core/Src/robot/robot_functions.cpp **** 	}
 158:Core/Src/robot/robot_functions.cpp **** 	else
 159:Core/Src/robot/robot_functions.cpp **** 	{
 160:Core/Src/robot/robot_functions.cpp **** 		// printf("  nothing  ");
 161:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 162:Core/Src/robot/robot_functions.cpp **** 	}
 163:Core/Src/robot/robot_functions.cpp **** }
 164:Core/Src/robot/robot_functions.cpp **** /*
 165:Core/Src/robot/robot_functions.cpp ****  * The function set_angle() is concerned with setting the angle for steering.
 166:Core/Src/robot/robot_functions.cpp ****  * Return params : void
 167:Core/Src/robot/robot_functions.cpp ****  * Input patams : angle
 168:Core/Src/robot/robot_functions.cpp ****  * The variable del_angle stores the differnece in given input angle and the current angle returned
 169:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns positive value, it depicts that the robot has already reached the angl
 170:Core/Src/robot/robot_functions.cpp ****  * TO correct this to the desired angle the angle needs to be set.
 171:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns a negative value, it depicts that the robot has not reached the desire
 172:Core/Src/robot/robot_functions.cpp **** */
 173:Core/Src/robot/robot_functions.cpp **** void set_angle(float angle)
 174:Core/Src/robot/robot_functions.cpp **** {
 175:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 176:Core/Src/robot/robot_functions.cpp **** 	// printf("\tdel_angle = %d\t", (int)(del_angle));
 177:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 178:Core/Src/robot/robot_functions.cpp **** 	{
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 180:Core/Src/robot/robot_functions.cpp **** 	}
 181:Core/Src/robot/robot_functions.cpp **** 	else
 182:Core/Src/robot/robot_functions.cpp **** 	{
 183:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 184:Core/Src/robot/robot_functions.cpp **** 	}
 185:Core/Src/robot/robot_functions.cpp **** 	//*/
 186:Core/Src/robot/robot_functions.cpp **** }
 187:Core/Src/robot/robot_functions.cpp **** /*
 188:Core/Src/robot/robot_functions.cpp ****  * This function correct_steering_angle() is called whenever the outside leg is fallen and the stee
 189:Core/Src/robot/robot_functions.cpp ****  * return param: void
 190:Core/Src/robot/robot_functions.cpp ****  * input params: angle
 191:Core/Src/robot/robot_functions.cpp ****  * same as set_angle function. the difference is this function is called whenever the leg is not ra
 192:Core/Src/robot/robot_functions.cpp ****  * the leg is raised.
 193:Core/Src/robot/robot_functions.cpp **** */
 194:Core/Src/robot/robot_functions.cpp **** void correct_steering_angle(float angle)
 195:Core/Src/robot/robot_functions.cpp **** {
 196:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 197:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 198:Core/Src/robot/robot_functions.cpp **** 	{
 199:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 200:Core/Src/robot/robot_functions.cpp **** 		// printf("center_alligned\t");
 201:Core/Src/robot/robot_functions.cpp **** 	}
 202:Core/Src/robot/robot_functions.cpp **** 	else
 203:Core/Src/robot/robot_functions.cpp **** 	{
 204:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 205:Core/Src/robot/robot_functions.cpp **** 		// printf("peak_alligned\t");
 206:Core/Src/robot/robot_functions.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 6


 207:Core/Src/robot/robot_functions.cpp **** 	//*/
 208:Core/Src/robot/robot_functions.cpp **** }
 209:Core/Src/robot/robot_functions.cpp **** /**
 210:Core/Src/robot/robot_functions.cpp ****  * This function calculate_robot_angle() calculates the relative robot angle from the initial posit
 211:Core/Src/robot/robot_functions.cpp ****  * to zero and all other angles are taken with reference to this initial angle.
 212:Core/Src/robot/robot_functions.cpp ****  * return param : void
 213:Core/Src/robot/robot_functions.cpp ****  * /params input parameters : void
 214:Core/Src/robot/robot_functions.cpp ****  * The variable robot_angle stores the realtive value of robot angle from the original position
 215:Core/Src/robot/robot_functions.cpp ****  * The temp_robot_angle is just the temporary variable.
 216:Core/Src/robot/robot_functions.cpp **** */
 217:Core/Src/robot/robot_functions.cpp **** void calculate_robot_angle()
 218:Core/Src/robot/robot_functions.cpp **** {
 219:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 220:Core/Src/robot/robot_functions.cpp **** 	{
 221:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 222:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 223:Core/Src/robot/robot_functions.cpp **** 	}
 224:Core/Src/robot/robot_functions.cpp **** 	else
 225:Core/Src/robot/robot_functions.cpp **** 	{
 226:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 227:Core/Src/robot/robot_functions.cpp **** 		{
 228:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 229:Core/Src/robot/robot_functions.cpp **** 		}
 230:Core/Src/robot/robot_functions.cpp **** 		else
 231:Core/Src/robot/robot_functions.cpp **** 		{
 232:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 233:Core/Src/robot/robot_functions.cpp **** 		}
 234:Core/Src/robot/robot_functions.cpp **** 	}
 235:Core/Src/robot/robot_functions.cpp **** }
 236:Core/Src/robot/robot_functions.cpp **** 
 237:Core/Src/robot/robot_functions.cpp **** /**
 238:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the robot in erected position at the start of the game.
 239:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 240:Core/Src/robot/robot_functions.cpp ****  * \params void
 241:Core/Src/robot/robot_functions.cpp ****  * \returns void
 242:Core/Src/robot/robot_functions.cpp ****  */ 
 243:Core/Src/robot/robot_functions.cpp **** 
 244:Core/Src/robot/robot_functions.cpp **** void initialize_position(void)
 245:Core/Src/robot/robot_functions.cpp **** {
 246:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 247:Core/Src/robot/robot_functions.cpp **** 	while (true)
 248:Core/Src/robot/robot_functions.cpp **** 	{
 249:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 250:Core/Src/robot/robot_functions.cpp **** 		{
 251:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 252:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Leg_Orientation\t");
 253:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 254:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 255:Core/Src/robot/robot_functions.cpp **** 				break;
 256:Core/Src/robot/robot_functions.cpp **** 		}
 257:Core/Src/robot/robot_functions.cpp **** 	}
 258:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 259:Core/Src/robot/robot_functions.cpp **** 	{
 260:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 261:Core/Src/robot/robot_functions.cpp **** 		{
 262:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 263:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 7


 264:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 265:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 266:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 267:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 268:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 269:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_actual_angle(90 * PI / 180);
 270:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_actual_angle(90 * PI / 180);
 271:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 272:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 273:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 274:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 275:Core/Src/robot/robot_functions.cpp **** 		}
 276:Core/Src/robot/robot_functions.cpp **** 	}
 277:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 278:Core/Src/robot/robot_functions.cpp **** 	while (true)
 279:Core/Src/robot/robot_functions.cpp **** 	{
 280:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 281:Core/Src/robot/robot_functions.cpp **** 		{
 282:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 283:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 284:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 285:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 286:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 287:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 288:Core/Src/robot/robot_functions.cpp **** 				break;
 289:Core/Src/robot/robot_functions.cpp **** 		}
 290:Core/Src/robot/robot_functions.cpp **** 	}
 291:Core/Src/robot/robot_functions.cpp **** }
 292:Core/Src/robot/robot_functions.cpp **** 
 293:Core/Src/robot/robot_functions.cpp **** /**
 294:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the leg in erected position at the start of the game.
 295:Core/Src/robot/robot_functions.cpp ****  * \params void
 296:Core/Src/robot/robot_functions.cpp ****  * \returns true if leg is erected.
 297:Core/Src/robot/robot_functions.cpp ****  */ 
 298:Core/Src/robot/robot_functions.cpp **** bool initialize_leg_position(void)
 299:Core/Src/robot/robot_functions.cpp **** {
 300:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 301:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 302:Core/Src/robot/robot_functions.cpp **** 	static bool leg0_flag = false;
 303:Core/Src/robot/robot_functions.cpp **** 	static bool leg1_flag = false;
 304:Core/Src/robot/robot_functions.cpp **** 
 305:Core/Src/robot/robot_functions.cpp **** 	printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 306:Core/Src/robot/robot_functions.cpp **** 	, leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].get_a
 307:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 308:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 309:Core/Src/robot/robot_functions.cpp **** 	{
 310:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 311:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 312:Core/Src/robot/robot_functions.cpp **** 	}
 313:Core/Src/robot/robot_functions.cpp **** 	else
 314:Core/Src/robot/robot_functions.cpp **** 	{
 315:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(5);
 316:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 317:Core/Src/robot/robot_functions.cpp **** 	}
 318:Core/Src/robot/robot_functions.cpp **** 
 319:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 320:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 8


 321:Core/Src/robot/robot_functions.cpp **** 	{
 322:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 323:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 324:Core/Src/robot/robot_functions.cpp **** 	}
 325:Core/Src/robot/robot_functions.cpp **** 	else
 326:Core/Src/robot/robot_functions.cpp **** 	{
 327:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(5);
 328:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 329:Core/Src/robot/robot_functions.cpp **** 	}
 330:Core/Src/robot/robot_functions.cpp **** 
 331:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 332:Core/Src/robot/robot_functions.cpp **** 	{
 333:Core/Src/robot/robot_functions.cpp **** 		
 334:Core/Src/robot/robot_functions.cpp **** 		return true;
 335:Core/Src/robot/robot_functions.cpp **** 	}
 336:Core/Src/robot/robot_functions.cpp **** 	else
 337:Core/Src/robot/robot_functions.cpp **** 	{
 338:Core/Src/robot/robot_functions.cpp **** 		return false;
 339:Core/Src/robot/robot_functions.cpp **** 	}
 340:Core/Src/robot/robot_functions.cpp **** }
 341:Core/Src/robot/robot_functions.cpp **** 
 342:Core/Src/robot/robot_functions.cpp **** /**
 343:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 344:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the steering in center position at the start of the game.
 345:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 346:Core/Src/robot/robot_functions.cpp ****  * \params void
 347:Core/Src/robot/robot_functions.cpp ****  * \returns true if reached to 0 angle.
 348:Core/Src/robot/robot_functions.cpp ****  */ 
 349:Core/Src/robot/robot_functions.cpp **** bool initialize_steering_position(void)
 350:Core/Src/robot/robot_functions.cpp **** {
 351:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 352:Core/Src/robot/robot_functions.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 353:Core/Src/robot/robot_functions.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 354:Core/Src/robot/robot_functions.cpp **** 	if(((HAL_GetTick()-start_time) >= 500)){
 355:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 356:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 357:Core/Src/robot/robot_functions.cpp **** 		return true;	
 358:Core/Src/robot/robot_functions.cpp **** 	}
 359:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 360:Core/Src/robot/robot_functions.cpp **** 	{
 361:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 362:Core/Src/robot/robot_functions.cpp **** 		steering.reset_angle(0);
 363:Core/Src/robot/robot_functions.cpp **** 		return true;
 364:Core/Src/robot/robot_functions.cpp **** 	}
 365:Core/Src/robot/robot_functions.cpp **** 	else
 366:Core/Src/robot/robot_functions.cpp **** 	{
 367:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 368:Core/Src/robot/robot_functions.cpp **** 		return false;
 369:Core/Src/robot/robot_functions.cpp **** 	}	
 370:Core/Src/robot/robot_functions.cpp **** }
 371:Core/Src/robot/robot_functions.cpp **** 
 372:Core/Src/robot/robot_functions.cpp **** /**
 373:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 374:Core/Src/robot/robot_functions.cpp ****  * \brief This function calculates all the datas including the motor omegas, orientation and angles
 375:Core/Src/robot/robot_functions.cpp ****  * \remarks remember to call this function only once in every 10 ms.
 376:Core/Src/robot/robot_functions.cpp ****  * \params void
 377:Core/Src/robot/robot_functions.cpp ****  * \returns void
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 9


 378:Core/Src/robot/robot_functions.cpp ****  */
 379:Core/Src/robot/robot_functions.cpp **** void calculate_datas()
 380:Core/Src/robot/robot_functions.cpp **** {
 381:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 382:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 383:Core/Src/robot/robot_functions.cpp **** 	steering.calculate_omega();
 384:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 385:Core/Src/robot/robot_functions.cpp **** 	if(leg[0].is_raised()){
 386:Core/Src/robot/robot_functions.cpp **** 		calculate_robot_angle();
 387:Core/Src/robot/robot_functions.cpp **** 	}
 388:Core/Src/robot/robot_functions.cpp **** 	printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 389:Core/Src/robot/robot_functions.cpp **** 	HAL_ADC_Start(&hadc1);
 390:Core/Src/robot/robot_functions.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 391:Core/Src/robot/robot_functions.cpp **** 	{
 392:Core/Src/robot/robot_functions.cpp **** 		robotx = HAL_ADC_GetValue(&hadc1);
 393:Core/Src/robot/robot_functions.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 394:Core/Src/robot/robot_functions.cpp **** 	}
 395:Core/Src/robot/robot_functions.cpp **** }...
  51              		.loc 2 395 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 395 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 395 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB103:
  75              	.LBB104:
  76              	.LBB105:
  77              	.LBB106:
  78              	.LBB107:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 10


  85              	.LBE107:
  86              	.LBE106:
  87              	.LBB108:
  88              	.LBB109:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE109:
  93              	.LBE108:
  94              	.LBB110:
  95              	.LBB111:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE111:
 100              	.LBE110:
 101              	.LBE105:
 102              	.LBE104:
 103              	.LBE103:
   8:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
 104              		.loc 2 8 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB112:
 113              	.LBB113:
 114              	.LBB114:
 115              	.LBB115:
 116              	.LBB116:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE116:
 122              	.LBE115:
 123              	.LBB117:
 124              	.LBB118:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE118:
 129              	.LBE117:
 130              	.LBB119:
 131              	.LBB120:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE120:
 136              	.LBE119:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 11


 137              	.LBE114:
 138              	.LBE113:
 139              	.LBE112:
   9:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
 140              		.loc 2 9 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 395 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE513:
 157              		.section	.text._Z8move_legif,"ax",%progbits
 158              		.align	1
 159              		.global	_Z8move_legif
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	_Z8move_legif:
 166              	.LFB493:
  80:Core/Src/robot/robot_functions.cpp **** {
 167              		.loc 2 80 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              	.LVL13:
 172 0000 10B5     		push	{r4, lr}
 173              	.LCFI1:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
 177 0002 2DED028B 		vpush.64	{d8}
 178              	.LCFI2:
 179              		.cfi_def_cfa_offset 16
 180              		.cfi_offset 80, -16
 181              		.cfi_offset 81, -12
 182              	.LVL14:
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.2 : robot_speed;
 183              		.loc 2 86 0
 184 0006 6428     		cmp	r0, #100
 185 0008 46D0     		beq	.L16
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.2 : robot_speed;
 186              		.loc 2 86 0 is_stmt 0 discriminator 2
 187 000a 264B     		ldr	r3, .L23
 188 000c 1B69     		ldr	r3, [r3, #16]
 189 000e 8342     		cmp	r3, r0
 190 0010 3FD0     		beq	.L21
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.2 : robot_speed;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 12


 191              		.loc 2 86 0
 192 0012 F1EE048A 		vmov.f32	s17, #5.0e+0
 193              	.L12:
 194              	.LVL15:
  87:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[6]){
 195              		.loc 2 87 0 is_stmt 1 discriminator 6
 196 0016 234B     		ldr	r3, .L23
 197 0018 9B69     		ldr	r3, [r3, #24]
 198 001a 8342     		cmp	r3, r0
 199 001c 3FD0     		beq	.L22
 200              	.LVL16:
 201              	.L13:
 202              	.LBB121:
 203              	.LBB122:
 204              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 13


  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 205              		.loc 3 48 0
 206 001e 224C     		ldr	r4, .L23+4
 207 0020 2046     		mov	r0, r4
 208              	.LVL17:
 209 0022 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 210              	.LVL18:
 211 0026 B0EE408A 		vmov.f32	s16, s0
 212              	.LVL19:
 213              	.LBE122:
 214              	.LBE121:
 215              	.LBB123:
 216              	.LBB124:
 217 002a 04F15800 		add	r0, r4, #88
 218 002e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 219              	.LVL20:
 220              	.LBE124:
 221              	.LBE123:
 114:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2*(leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 222              		.loc 2 114 0
 223 0032 38EE400A 		vsub.f32	s0, s16, s0
 224 0036 30EE000A 		vadd.f32	s0, s0, s0
 225 003a 20EE288A 		vmul.f32	s16, s0, s17
 226              	.LVL21:
 227              	.LBB125:
 228              	.LBB126:
 229              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 14


  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 15


  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 16


 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 17


 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 230              		.loc 4 242 0
 231 003e F0EEC87A 		vabs.f32	s15, s16
 232              	.LVL22:
 233              	.LBE126:
 234              	.LBE125:
 115:Core/Src/robot/robot_functions.cpp **** 	if(fabs(del_speed) >= leg_speed){
 235              		.loc 2 115 0
 236 0042 F4EEE78A 		vcmpe.f32	s17, s15
 237 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 238 004a 03D8     		bhi	.L14
 116:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 18


 239              		.loc 2 116 0
 240 004c 88EE277A 		vdiv.f32	s14, s16, s15
 241              	.LVL23:
 117:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 242              		.loc 2 117 0
 243 0050 28EE878A 		vmul.f32	s16, s17, s14
 244              	.LVL24:
 245              	.L14:
 246              	.LBB127:
 247              	.LBB128:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 248              		.loc 3 47 0
 249 0054 144C     		ldr	r4, .L23+4
 250 0056 2046     		mov	r0, r4
 251 0058 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 252              	.LVL25:
 253              	.LBE128:
 254              	.LBE127:
 255              	.LBB129:
 256              	.LBB130:
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 257              		.loc 4 185 0
 258 005c 30EE000A 		vadd.f32	s0, s0, s0
 259              	.LVL26:
 260 0060 FFF7FEFF 		bl	cosf
 261              	.LVL27:
 262              	.LBE130:
 263              	.LBE129:
 119:Core/Src/robot/robot_functions.cpp **** 	float damping_factor = (cos(2*leg[0].get_angle())) * leg_speed * damping_constant;
 264              		.loc 2 119 0
 265 0064 28EE800A 		vmul.f32	s0, s17, s0
 266 0068 DFED107A 		vldr.32	s15, .L23+8
 267 006c 20EE270A 		vmul.f32	s0, s0, s15
 268              	.LVL28:
 120:Core/Src/robot/robot_functions.cpp **** 	leg_speed -= damping_factor;
 269              		.loc 2 120 0
 270 0070 78EEC08A 		vsub.f32	s17, s17, s0
 271              	.LVL29:
 125:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 272              		.loc 2 125 0
 273 0074 3C3C     		subs	r4, r4, #60
 274 0076 38EEC80A 		vsub.f32	s0, s17, s16
 275              	.LVL30:
 276 007a 2046     		mov	r0, r4
 277 007c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 278              	.LVL31:
 126:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 279              		.loc 2 126 0
 280 0080 38EE280A 		vadd.f32	s0, s16, s17
 281 0084 04F15800 		add	r0, r4, #88
 282 0088 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 283              	.LVL32:
 129:Core/Src/robot/robot_functions.cpp **** }
 284              		.loc 2 129 0
 285 008c BDEC028B 		vldm	sp!, {d8}
 286              	.LCFI3:
 287              		.cfi_remember_state
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 19


 288              		.cfi_restore 80
 289              		.cfi_restore 81
 290              		.cfi_def_cfa_offset 8
 291              	.LVL33:
 292 0090 10BD     		pop	{r4, pc}
 293              	.LVL34:
 294              	.L21:
 295              	.LCFI4:
 296              		.cfi_restore_state
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.2 : robot_speed;
 297              		.loc 2 86 0
 298 0092 DFED078A 		vldr.32	s17, .L23+12
 299 0096 BEE7     		b	.L12
 300              	.L16:
 301 0098 DFED058A 		vldr.32	s17, .L23+12
 302 009c BBE7     		b	.L12
 303              	.LVL35:
 304              	.L22:
  88:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 5;
 305              		.loc 2 88 0
 306 009e F1EE048A 		vmov.f32	s17, #5.0e+0
 307              	.LVL36:
 308 00a2 BCE7     		b	.L13
 309              	.L24:
 310              		.align	2
 311              	.L23:
 312 00a4 00000000 		.word	steps
 313 00a8 3C000000 		.word	leg+60
 314 00ac 6666263F 		.word	1059481190
 315 00b0 55558540 		.word	1082479957
 316              		.cfi_endproc
 317              	.LFE493:
 319              		.global	__aeabi_f2d
 320              		.global	__aeabi_ddiv
 321              		.global	__aeabi_d2f
 322              		.global	__aeabi_dcmpgt
 323              		.global	__aeabi_dcmplt
 324              		.section	.text._Z9set_anglef,"ax",%progbits
 325              		.align	1
 326              		.global	_Z9set_anglef
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	_Z9set_anglef:
 333              	.LFB495:
 174:Core/Src/robot/robot_functions.cpp **** {
 334              		.loc 2 174 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL37:
 339 0000 08B5     		push	{r3, lr}
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 3, -8
 343              		.cfi_offset 14, -4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 20


 344 0002 2DED028B 		vpush.64	{d8}
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 16
 347              		.cfi_offset 80, -16
 348              		.cfi_offset 81, -12
 175:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 349              		.loc 2 175 0
 350 0006 264B     		ldr	r3, .L39+24
 351 0008 D3ED007A 		vldr.32	s15, [r3]
 352 000c 30EE670A 		vsub.f32	s0, s0, s15
 353              	.LVL38:
 354 0010 DFED247A 		vldr.32	s15, .L39+28
 355 0014 60EE277A 		vmul.f32	s15, s0, s15
 356 0018 17EE900A 		vmov	r0, s15
 357 001c FFF7FEFF 		bl	__aeabi_f2d
 358              	.LVL39:
 359 0020 19A3     		adr	r3, .L39
 360 0022 D3E90023 		ldrd	r2, [r3]
 361 0026 FFF7FEFF 		bl	__aeabi_ddiv
 362              	.LVL40:
 363 002a FFF7FEFF 		bl	__aeabi_d2f
 364              	.LVL41:
 365 002e 08EE100A 		vmov	s16, r0
 366              	.LVL42:
 177:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 367              		.loc 2 177 0
 368 0032 B5EEC08A 		vcmpe.f32	s16, #0
 369 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 370 003a 12DB     		blt	.L36
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 371              		.loc 2 179 0
 372 003c FFF7FEFF 		bl	__aeabi_f2d
 373              	.LVL43:
 374 0040 13A3     		adr	r3, .L39+8
 375 0042 D3E90023 		ldrd	r2, [r3]
 376 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 377              	.LVL44:
 378 004a 38B9     		cbnz	r0, .L38
 379              	.LVL45:
 380              	.L28:
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 381              		.loc 2 179 0 is_stmt 0 discriminator 4
 382 004c B0EE480A 		vmov.f32	s0, s16
 383 0050 1548     		ldr	r0, .L39+32
 384 0052 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 385              	.LVL46:
 386              	.L25:
 186:Core/Src/robot/robot_functions.cpp **** }
 387              		.loc 2 186 0 is_stmt 1
 388 0056 BDEC028B 		vldm	sp!, {d8}
 389              	.LCFI7:
 390              		.cfi_remember_state
 391              		.cfi_restore 80
 392              		.cfi_restore 81
 393              		.cfi_def_cfa_offset 8
 394 005a 08BD     		pop	{r3, pc}
 395              	.LVL47:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 21


 396              	.L38:
 397              	.LCFI8:
 398              		.cfi_restore_state
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 399              		.loc 2 179 0
 400 005c B1EE088A 		vmov.f32	s16, #6.0e+0
 401              	.LVL48:
 402 0060 F4E7     		b	.L28
 403              	.LVL49:
 404              	.L36:
 183:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 405              		.loc 2 183 0
 406 0062 FFF7FEFF 		bl	__aeabi_f2d
 407              	.LVL50:
 408 0066 0CA3     		adr	r3, .L39+16
 409 0068 D3E90023 		ldrd	r2, [r3]
 410 006c FFF7FEFF 		bl	__aeabi_dcmplt
 411              	.LVL51:
 412 0070 08B1     		cbz	r0, .L31
 413 0072 B9EE088A 		vmov.f32	s16, #-6.0e+0
 414              	.LVL52:
 415              	.L31:
 183:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 416              		.loc 2 183 0 is_stmt 0 discriminator 4
 417 0076 B0EE480A 		vmov.f32	s0, s16
 418 007a 0B48     		ldr	r0, .L39+32
 419 007c FFF7FEFF 		bl	_ZN8steering9set_angleEf
 420              	.LVL53:
 186:Core/Src/robot/robot_functions.cpp **** }
 421              		.loc 2 186 0 is_stmt 1 discriminator 4
 422 0080 E9E7     		b	.L25
 423              	.L40:
 424 0082 00BFAFF3 		.align	3
 424      0080
 425              	.L39:
 426 0088 182D4454 		.word	1413754136
 427 008c FB210940 		.word	1074340347
 428 0090 8DD80401 		.word	17094797
 429 0094 00001840 		.word	1075314688
 430 0098 8DD80401 		.word	17094797
 431 009c 000018C0 		.word	-1072168960
 432 00a0 00000000 		.word	.LANCHOR2
 433 00a4 00003443 		.word	1127481344
 434 00a8 00000000 		.word	steering
 435              		.cfi_endproc
 436              	.LFE495:
 438              		.global	__aeabi_dcmple
 439              		.section	.text._Z22correct_steering_anglef,"ax",%progbits
 440              		.align	1
 441              		.global	_Z22correct_steering_anglef
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv4-sp-d16
 447              	_Z22correct_steering_anglef:
 448              	.LFB496:
 195:Core/Src/robot/robot_functions.cpp **** {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 22


 449              		.loc 2 195 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL54:
 454 0000 08B5     		push	{r3, lr}
 455              	.LCFI9:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 3, -8
 458              		.cfi_offset 14, -4
 459 0002 2DED028B 		vpush.64	{d8}
 460              	.LCFI10:
 461              		.cfi_def_cfa_offset 16
 462              		.cfi_offset 80, -16
 463              		.cfi_offset 81, -12
 196:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 464              		.loc 2 196 0
 465 0006 204B     		ldr	r3, .L54+16
 466 0008 D3ED007A 		vldr.32	s15, [r3]
 467 000c 30EE670A 		vsub.f32	s0, s0, s15
 468              	.LVL55:
 469 0010 DFED1E7A 		vldr.32	s15, .L54+20
 470 0014 60EE277A 		vmul.f32	s15, s0, s15
 471 0018 17EE900A 		vmov	r0, s15
 472 001c FFF7FEFF 		bl	__aeabi_f2d
 473              	.LVL56:
 474 0020 15A3     		adr	r3, .L54
 475 0022 D3E90023 		ldrd	r2, [r3]
 476 0026 FFF7FEFF 		bl	__aeabi_ddiv
 477              	.LVL57:
 478 002a FFF7FEFF 		bl	__aeabi_d2f
 479              	.LVL58:
 480 002e 08EE100A 		vmov	s16, r0
 481              	.LVL59:
 197:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 482              		.loc 2 197 0
 483 0032 F0EEC87A 		vabs.f32	s15, s16
 484 0036 17EE900A 		vmov	r0, s15
 485              	.LVL60:
 486 003a FFF7FEFF 		bl	__aeabi_f2d
 487              	.LVL61:
 488 003e 10A3     		adr	r3, .L54+8
 489 0040 D3E90023 		ldrd	r2, [r3]
 490 0044 FFF7FEFF 		bl	__aeabi_dcmple
 491              	.LVL62:
 492 0048 60B9     		cbnz	r0, .L53
 204:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 493              		.loc 2 204 0
 494 004a B5EEC08A 		vcmpe.f32	s16, #0
 495 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 496 0052 0DDD     		ble	.L51
 497 0054 B9EE080A 		vmov.f32	s0, #-6.0e+0
 498              	.L45:
 204:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 499              		.loc 2 204 0 is_stmt 0 discriminator 4
 500 0058 0D48     		ldr	r0, .L54+24
 501 005a FFF7FEFF 		bl	_ZN8steering9set_angleEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 23


 502              	.LVL63:
 503              	.L41:
 208:Core/Src/robot/robot_functions.cpp **** }
 504              		.loc 2 208 0 is_stmt 1
 505 005e BDEC028B 		vldm	sp!, {d8}
 506              	.LCFI11:
 507              		.cfi_remember_state
 508              		.cfi_restore 80
 509              		.cfi_restore 81
 510              		.cfi_def_cfa_offset 8
 511              	.LVL64:
 512 0062 08BD     		pop	{r3, pc}
 513              	.LVL65:
 514              	.L53:
 515              	.LCFI12:
 516              		.cfi_restore_state
 199:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 517              		.loc 2 199 0
 518 0064 9FED0B0A 		vldr.32	s0, .L54+28
 519 0068 0948     		ldr	r0, .L54+24
 520 006a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 521              	.LVL66:
 522 006e F6E7     		b	.L41
 523              	.L51:
 204:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 524              		.loc 2 204 0
 525 0070 B1EE080A 		vmov.f32	s0, #6.0e+0
 526 0074 F0E7     		b	.L45
 527              	.L55:
 528 0076 00BF     		.align	3
 529              	.L54:
 530 0078 182D4454 		.word	1413754136
 531 007c FB210940 		.word	1074340347
 532 0080 8DD80401 		.word	17094797
 533 0084 00001840 		.word	1075314688
 534 0088 00000000 		.word	.LANCHOR2
 535 008c 00003443 		.word	1127481344
 536 0090 00000000 		.word	steering
 537 0094 00000000 		.word	0
 538              		.cfi_endproc
 539              	.LFE496:
 541              		.section	.text._Z13move_steeringif,"ax",%progbits
 542              		.align	1
 543              		.global	_Z13move_steeringif
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv4-sp-d16
 549              	_Z13move_steeringif:
 550              	.LFB494:
 142:Core/Src/robot/robot_functions.cpp **** {
 551              		.loc 2 142 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              	.LVL67:
 556 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 24


 557              	.LCFI13:
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 3, -8
 560              		.cfi_offset 14, -4
 561 0002 2DED028B 		vpush.64	{d8}
 562              	.LCFI14:
 563              		.cfi_def_cfa_offset 16
 564              		.cfi_offset 80, -16
 565              		.cfi_offset 81, -12
 566 0006 B0EE408A 		vmov.f32	s16, s0
 143:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[0]){
 567              		.loc 2 143 0
 568 000a 184B     		ldr	r3, .L65
 569 000c 1B68     		ldr	r3, [r3]
 570 000e 8342     		cmp	r3, r0
 571 0010 0ED0     		beq	.L62
 572              	.LVL68:
 573              	.L57:
 148:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 574              		.loc 2 148 0
 575 0012 1748     		ldr	r0, .L65+4
 576              	.LVL69:
 577 0014 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 578              	.LVL70:
 579 0018 D8B1     		cbz	r0, .L63
 153:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 580              		.loc 2 153 0
 581 001a 1548     		ldr	r0, .L65+4
 582 001c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 583              	.LVL71:
 584 0020 0128     		cmp	r0, #1
 585 0022 1DD0     		beq	.L64
 161:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 586              		.loc 2 161 0
 587 0024 9FED130A 		vldr.32	s0, .L65+8
 588 0028 1348     		ldr	r0, .L65+12
 589 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 590              	.LVL72:
 163:Core/Src/robot/robot_functions.cpp **** }
 591              		.loc 2 163 0
 592 002e 14E0     		b	.L56
 593              	.LVL73:
 594              	.L62:
 144:Core/Src/robot/robot_functions.cpp **** 		summation_angle +=robot_angle;
 595              		.loc 2 144 0
 596 0030 124B     		ldr	r3, .L65+16
 597 0032 D3ED007A 		vldr.32	s15, [r3]
 598 0036 124A     		ldr	r2, .L65+20
 599 0038 92ED007A 		vldr.32	s14, [r2]
 600 003c 77EE877A 		vadd.f32	s15, s15, s14
 601 0040 C3ED007A 		vstr.32	s15, [r3]
 145:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 602              		.loc 2 145 0
 603 0044 F1EE677A 		vneg.f32	s15, s15
 604              	.LVL74:
 146:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 605              		.loc 2 146 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 25


 606 0048 9FED0E7A 		vldr.32	s14, .L65+24
 607 004c 87EE878A 		vdiv.f32	s16, s15, s14
 608              	.LVL75:
 609 0050 DFE7     		b	.L57
 610              	.LVL76:
 611              	.L63:
 151:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 612              		.loc 2 151 0
 613 0052 B0EE480A 		vmov.f32	s0, s16
 614 0056 FFF7FEFF 		bl	_Z9set_anglef
 615              	.LVL77:
 616              	.L56:
 163:Core/Src/robot/robot_functions.cpp **** }
 617              		.loc 2 163 0
 618 005a BDEC028B 		vldm	sp!, {d8}
 619              	.LCFI15:
 620              		.cfi_remember_state
 621              		.cfi_restore 80
 622              		.cfi_restore 81
 623              		.cfi_def_cfa_offset 8
 624              	.LVL78:
 625 005e 08BD     		pop	{r3, pc}
 626              	.LVL79:
 627              	.L64:
 628              	.LCFI16:
 629              		.cfi_restore_state
 156:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 630              		.loc 2 156 0
 631 0060 B0EE480A 		vmov.f32	s0, s16
 632 0064 FFF7FEFF 		bl	_Z22correct_steering_anglef
 633              	.LVL80:
 634 0068 F7E7     		b	.L56
 635              	.L66:
 636 006a 00BF     		.align	2
 637              	.L65:
 638 006c 00000000 		.word	steps
 639 0070 00000000 		.word	leg
 640 0074 00000000 		.word	0
 641 0078 00000000 		.word	steering
 642 007c 00000000 		.word	.LANCHOR3
 643 0080 00000000 		.word	.LANCHOR2
 644 0084 0000FA43 		.word	1140457472
 645              		.cfi_endproc
 646              	.LFE494:
 648              		.global	__aeabi_dmul
 649              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 650              		.align	1
 651              		.global	_Z21calculate_robot_anglev
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv4-sp-d16
 657              	_Z21calculate_robot_anglev:
 658              	.LFB497:
 218:Core/Src/robot/robot_functions.cpp **** {
 659              		.loc 2 218 0
 660              		.cfi_startproc
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 26


 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663 0000 08B5     		push	{r3, lr}
 664              	.LCFI17:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 3, -8
 667              		.cfi_offset 14, -4
 668 0002 2DED028B 		vpush.64	{d8}
 669              	.LCFI18:
 670              		.cfi_def_cfa_offset 16
 671              		.cfi_offset 80, -16
 672              		.cfi_offset 81, -12
 219:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 673              		.loc 2 219 0
 674 0006 204B     		ldr	r3, .L73+8
 675 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 676 000a EBB1     		cbz	r3, .L68
 677              	.LVL81:
 678              	.LBB131:
 679              	.LBB132:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 680              		.loc 1 36 0
 681 000c 1F4B     		ldr	r3, .L73+12
 682 000e 93ED027A 		vldr.32	s14, [r3, #8]
 683              	.LVL82:
 684              	.LBE132:
 685              	.LBE131:
 686              	.LBB133:
 687              	.LBB134:
 688 0012 1F4B     		ldr	r3, .L73+16
 689 0014 D3ED027A 		vldr.32	s15, [r3, #8]
 690              	.LVL83:
 691              	.LBE134:
 692              	.LBE133:
 221:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 693              		.loc 2 221 0
 694 0018 77EE677A 		vsub.f32	s15, s14, s15
 695 001c 17EE900A 		vmov	r0, s15
 696 0020 FFF7FEFF 		bl	__aeabi_f2d
 697              	.LVL84:
 698 0024 16A3     		adr	r3, .L73
 699 0026 D3E90023 		ldrd	r2, [r3]
 700 002a FFF7FEFF 		bl	__aeabi_dmul
 701              	.LVL85:
 702 002e 0022     		movs	r2, #0
 703 0030 184B     		ldr	r3, .L73+20
 704 0032 FFF7FEFF 		bl	__aeabi_ddiv
 705              	.LVL86:
 706 0036 FFF7FEFF 		bl	__aeabi_d2f
 707              	.LVL87:
 708 003a 174B     		ldr	r3, .L73+24
 709 003c 1860     		str	r0, [r3]	@ float
 222:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 710              		.loc 2 222 0
 711 003e 174B     		ldr	r3, .L73+28
 712 0040 1860     		str	r0, [r3]	@ float
 713              	.L67:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 27


 235:Core/Src/robot/robot_functions.cpp **** }
 714              		.loc 2 235 0
 715 0042 BDEC028B 		vldm	sp!, {d8}
 716              	.LCFI19:
 717              		.cfi_remember_state
 718              		.cfi_restore 80
 719              		.cfi_restore 81
 720              		.cfi_def_cfa_offset 8
 721 0046 08BD     		pop	{r3, pc}
 722              	.L68:
 723              	.LCFI20:
 724              		.cfi_restore_state
 226:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 725              		.loc 2 226 0
 726 0048 1548     		ldr	r0, .L73+32
 727 004a FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 728              	.LVL88:
 729 004e 58B9     		cbnz	r0, .L72
 232:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 730              		.loc 2 232 0
 731 0050 114B     		ldr	r3, .L73+24
 732 0052 93ED008A 		vldr.32	s16, [r3]
 733              	.LVL89:
 734              	.LBB135:
 735              	.LBB136:
 736              		.file 5 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 28


  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 29


  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 737              		.loc 5 112 0
 738 0056 1348     		ldr	r0, .L73+36
 739 0058 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 740              	.LVL90:
 741              	.LBE136:
 742              	.LBE135:
 232:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 743              		.loc 2 232 0
 744 005c 38EE400A 		vsub.f32	s0, s16, s0
 745 0060 0E4B     		ldr	r3, .L73+28
 746 0062 83ED000A 		vstr.32	s0, [r3]
 235:Core/Src/robot/robot_functions.cpp **** }
 747              		.loc 2 235 0
 748 0066 ECE7     		b	.L67
 749              	.L72:
 750              	.LVL91:
 751              	.LBB137:
 752              	.LBB138:
 753              		.loc 5 112 0
 754 0068 0E48     		ldr	r0, .L73+36
 755 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 756              	.LVL92:
 757              	.LBE138:
 758              	.LBE137:
 228:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 759              		.loc 2 228 0
 760 006e 0B4B     		ldr	r3, .L73+28
 761 0070 D3ED007A 		vldr.32	s15, [r3]
 762 0074 30EE270A 		vadd.f32	s0, s0, s15
 763 0078 074B     		ldr	r3, .L73+24
 764 007a 83ED000A 		vstr.32	s0, [r3]
 765 007e E0E7     		b	.L67
 766              	.L74:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 30


 767              		.align	3
 768              	.L73:
 769 0080 182D4454 		.word	1413754136
 770 0084 FB210940 		.word	1074340347
 771 0088 00000000 		.word	USE_IMU_FLAG
 772 008c 00000000 		.word	.LANCHOR0
 773 0090 00000000 		.word	.LANCHOR1
 774 0094 00806640 		.word	1080459264
 775 0098 00000000 		.word	.LANCHOR2
 776 009c 00000000 		.word	.LANCHOR4
 777 00a0 00000000 		.word	leg
 778 00a4 0C000000 		.word	steering+12
 779              		.cfi_endproc
 780              	.LFE497:
 782              		.global	__aeabi_d2iz
 783              		.section	.text._Z2goif,"ax",%progbits
 784              		.align	1
 785              		.global	_Z2goif
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu fpv4-sp-d16
 791              	_Z2goif:
 792              	.LFB492:
  41:Core/Src/robot/robot_functions.cpp **** {
 793              		.loc 2 41 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 8
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL93:
 798 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 799              	.LCFI21:
 800              		.cfi_def_cfa_offset 32
 801              		.cfi_offset 4, -32
 802              		.cfi_offset 5, -28
 803              		.cfi_offset 6, -24
 804              		.cfi_offset 7, -20
 805              		.cfi_offset 8, -16
 806              		.cfi_offset 9, -12
 807              		.cfi_offset 10, -8
 808              		.cfi_offset 14, -4
 809 0004 2DED028B 		vpush.64	{d8}
 810              	.LCFI22:
 811              		.cfi_def_cfa_offset 40
 812              		.cfi_offset 80, -40
 813              		.cfi_offset 81, -36
 814 0008 84B0     		sub	sp, sp, #16
 815              	.LCFI23:
 816              		.cfi_def_cfa_offset 56
 817 000a 0446     		mov	r4, r0
  42:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
 818              		.loc 2 42 0
 819 000c 10EE100A 		vmov	r0, s0
 820              	.LVL94:
 821 0010 FFF7FEFF 		bl	__aeabi_f2d
 822              	.LVL95:
 823 0014 59A3     		adr	r3, .L87+44
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 31


 824 0016 D3E90023 		ldrd	r2, [r3]
 825 001a FFF7FEFF 		bl	__aeabi_dmul
 826              	.LVL96:
 827 001e FFF7FEFF 		bl	__aeabi_d2f
 828              	.LVL97:
 829 0022 08EE100A 		vmov	s16, r0
 830              	.LVL98:
  43:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
 831              		.loc 2 43 0
 832 0026 00EE100A 		vmov	s0, r0
 833 002a 2046     		mov	r0, r4
 834              	.LVL99:
 835 002c FFF7FEFF 		bl	_Z8move_legif
 836              	.LVL100:
  44:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
 837              		.loc 2 44 0
 838 0030 642C     		cmp	r4, #100
 839 0032 03D0     		beq	.L76
  44:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
 840              		.loc 2 44 0 is_stmt 0 discriminator 1
 841 0034 4A4B     		ldr	r3, .L87+16
 842 0036 9B69     		ldr	r3, [r3, #24]
 843 0038 A342     		cmp	r3, r4
 844 003a 68D1     		bne	.L85
 845              	.L76:
  48:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 846              		.loc 2 48 0 is_stmt 1
 847 003c 9FED490A 		vldr.32	s0, .L87+20
 848 0040 4948     		ldr	r0, .L87+24
 849 0042 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 850              	.LVL101:
 851              	.L77:
  50:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 852              		.loc 2 50 0
 853 0046 FFF7FEFF 		bl	_Z21calculate_robot_anglev
 854              	.LVL102:
 855              	.LBB139:
 856              	.LBB140:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 857              		.loc 3 45 0
 858 004a 484D     		ldr	r5, .L87+28
 859 004c D5F810A0 		ldr	r10, [r5, #16]
 860              	.LVL103:
 861              	.LBE140:
 862              	.LBE139:
  53:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 863              		.loc 2 53 0
 864 0050 474B     		ldr	r3, .L87+32
 865 0052 D3ED007A 		vldr.32	s15, [r3]
 866 0056 DFED478A 		vldr.32	s17, .L87+36
 867 005a 67EEA87A 		vmul.f32	s15, s15, s17
 868 005e 17EE900A 		vmov	r0, s15
 869 0062 FFF7FEFF 		bl	__aeabi_f2d
 870              	.LVL104:
 871 0066 3AA3     		adr	r3, .L87
 872 0068 D3E90023 		ldrd	r2, [r3]
 873 006c FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 32


 874              	.LVL105:
 875 0070 0646     		mov	r6, r0
 876 0072 0F46     		mov	r7, r1
 877              	.LVL106:
 878              	.LBB141:
 879              	.LBB142:
 880              		.loc 3 48 0
 881 0074 05F13C00 		add	r0, r5, #60
 882 0078 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 883              	.LVL107:
 884              	.LBE142:
 885              	.LBE141:
  53:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 886              		.loc 2 53 0
 887 007c 60EE287A 		vmul.f32	s15, s0, s17
 888 0080 17EE900A 		vmov	r0, s15
 889 0084 FFF7FEFF 		bl	__aeabi_f2d
 890              	.LVL108:
 891 0088 31A3     		adr	r3, .L87
 892 008a D3E90023 		ldrd	r2, [r3]
 893 008e FFF7FEFF 		bl	__aeabi_ddiv
 894              	.LVL109:
 895 0092 8046     		mov	r8, r0
 896 0094 8946     		mov	r9, r1
 897              	.LVL110:
 898              	.LBB143:
 899              	.LBB144:
 900              		.loc 3 48 0
 901 0096 05F19400 		add	r0, r5, #148
 902 009a FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 903              	.LVL111:
 904              	.LBE144:
 905              	.LBE143:
  53:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 906              		.loc 2 53 0
 907 009e 60EE287A 		vmul.f32	s15, s0, s17
 908 00a2 17EE900A 		vmov	r0, s15
 909 00a6 FFF7FEFF 		bl	__aeabi_f2d
 910              	.LVL112:
 911 00aa 29A3     		adr	r3, .L87
 912 00ac D3E90023 		ldrd	r2, [r3]
 913 00b0 FFF7FEFF 		bl	__aeabi_ddiv
 914              	.LVL113:
 915 00b4 CDE90201 		strd	r0, [sp, #8]
  52:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
 916              		.loc 2 52 0
 917 00b8 4046     		mov	r0, r8
 918 00ba 4946     		mov	r1, r9
 919 00bc FFF7FEFF 		bl	__aeabi_d2iz
 920              	.LVL114:
 921 00c0 8046     		mov	r8, r0
 922 00c2 3046     		mov	r0, r6
 923 00c4 3946     		mov	r1, r7
 924 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 925              	.LVL115:
 926 00ca 0646     		mov	r6, r0
 927 00cc DDE90201 		ldrd	r0, [sp, #8]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 33


 928 00d0 FFF7FEFF 		bl	__aeabi_d2iz
 929              	.LVL116:
 930 00d4 0090     		str	r0, [sp]
 931 00d6 4346     		mov	r3, r8
 932 00d8 3246     		mov	r2, r6
 933 00da 5146     		mov	r1, r10
 934 00dc 2648     		ldr	r0, .L87+40
 935 00de FFF7FEFF 		bl	printf
 936              	.LVL117:
 937              	.LBB145:
 938              	.LBB146:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 939              		.loc 3 45 0
 940 00e2 2B69     		ldr	r3, [r5, #16]
 941              	.LVL118:
 942              	.LBE146:
 943              	.LBE145:
  55:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
 944              		.loc 2 55 0
 945 00e4 9C42     		cmp	r4, r3
 946 00e6 2CDC     		bgt	.L80
  55:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
 947              		.loc 2 55 0 is_stmt 0 discriminator 1
 948 00e8 214B     		ldr	r3, .L87+32
 949 00ea D3ED007A 		vldr.32	s15, [r3]
 950 00ee 38EE678A 		vsub.f32	s16, s16, s15
 951              	.LVL119:
 952 00f2 F0EEC87A 		vabs.f32	s15, s16
 953 00f6 17EE900A 		vmov	r0, s15
 954 00fa FFF7FEFF 		bl	__aeabi_f2d
 955              	.LVL120:
 956 00fe 16A3     		adr	r3, .L87+8
 957 0100 D3E90023 		ldrd	r2, [r3]
 958 0104 FFF7FEFF 		bl	__aeabi_dcmple
 959              	.LVL121:
 960 0108 38B9     		cbnz	r0, .L86
  64:Core/Src/robot/robot_functions.cpp **** 		return false;
 961              		.loc 2 64 0 is_stmt 1
 962 010a 0020     		movs	r0, #0
 963 010c 1AE0     		b	.L78
 964              	.LVL122:
 965              	.L85:
  45:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
 966              		.loc 2 45 0
 967 010e B0EE480A 		vmov.f32	s0, s16
 968 0112 2046     		mov	r0, r4
 969 0114 FFF7FEFF 		bl	_Z13move_steeringif
 970              	.LVL123:
 971 0118 95E7     		b	.L77
 972              	.LVL124:
 973              	.L86:
  57:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 974              		.loc 2 57 0
 975 011a 9FED128A 		vldr.32	s16, .L87+20
 976 011e B0EE480A 		vmov.f32	s0, s16
 977 0122 2846     		mov	r0, r5
 978 0124 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 34


 979              	.LVL125:
  58:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 980              		.loc 2 58 0
 981 0128 B0EE480A 		vmov.f32	s0, s16
 982 012c 05F15800 		add	r0, r5, #88
 983 0130 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 984              	.LVL126:
  59:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 985              		.loc 2 59 0
 986 0134 B0EE480A 		vmov.f32	s0, s16
 987 0138 0B48     		ldr	r0, .L87+24
 988 013a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 989              	.LVL127:
  60:Core/Src/robot/robot_functions.cpp **** 		return true;
 990              		.loc 2 60 0
 991 013e 0120     		movs	r0, #1
 992 0140 00E0     		b	.L78
 993              	.LVL128:
 994              	.L80:
  64:Core/Src/robot/robot_functions.cpp **** 		return false;
 995              		.loc 2 64 0
 996 0142 0020     		movs	r0, #0
 997              	.LVL129:
 998              	.L78:
  66:Core/Src/robot/robot_functions.cpp **** }
 999              		.loc 2 66 0
 1000 0144 04B0     		add	sp, sp, #16
 1001              	.LCFI24:
 1002              		.cfi_def_cfa_offset 40
 1003              		@ sp needed
 1004 0146 BDEC028B 		vldm	sp!, {d8}
 1005              	.LCFI25:
 1006              		.cfi_restore 80
 1007              		.cfi_restore 81
 1008              		.cfi_def_cfa_offset 32
 1009 014a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1010              	.LVL130:
 1011              	.L88:
 1012 014e 00BF     		.align	3
 1013              	.L87:
 1014 0150 182D4454 		.word	1413754136
 1015 0154 FB210940 		.word	1074340347
 1016 0158 9A999999 		.word	-1717986918
 1017 015c 9999B93F 		.word	1069128089
 1018 0160 00000000 		.word	steps
 1019 0164 00000000 		.word	0
 1020 0168 00000000 		.word	steering
 1021 016c 00000000 		.word	leg
 1022 0170 00000000 		.word	.LANCHOR2
 1023 0174 00003443 		.word	1127481344
 1024 0178 00000000 		.word	.LC0
 1025 017c 399D52A2 		.word	-1571644103
 1026 0180 46DF913F 		.word	1066524486
 1027              		.cfi_endproc
 1028              	.LFE492:
 1030              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 1031              		.align	1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 35


 1032              		.global	_Z23initialize_leg_positionv
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv4-sp-d16
 1038              	_Z23initialize_leg_positionv:
 1039              	.LFB499:
 299:Core/Src/robot/robot_functions.cpp **** {
 1040              		.loc 2 299 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 8
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1045              	.LCFI26:
 1046              		.cfi_def_cfa_offset 32
 1047              		.cfi_offset 4, -32
 1048              		.cfi_offset 5, -28
 1049              		.cfi_offset 6, -24
 1050              		.cfi_offset 7, -20
 1051              		.cfi_offset 8, -16
 1052              		.cfi_offset 9, -12
 1053              		.cfi_offset 10, -8
 1054              		.cfi_offset 14, -4
 1055 0004 2DED028B 		vpush.64	{d8}
 1056              	.LCFI27:
 1057              		.cfi_def_cfa_offset 40
 1058              		.cfi_offset 80, -40
 1059              		.cfi_offset 81, -36
 1060 0008 84B0     		sub	sp, sp, #16
 1061              	.LCFI28:
 1062              		.cfi_def_cfa_offset 56
 1063              	.LVL131:
 1064              	.LBB147:
 1065              	.LBB148:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1066              		.loc 3 45 0
 1067 000a 634E     		ldr	r6, .L107+24
 1068 000c 3569     		ldr	r5, [r6, #16]
 1069              	.LVL132:
 1070              	.LBE148:
 1071              	.LBE147:
 1072              	.LBB149:
 1073              	.LBB150:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1074              		.loc 3 47 0
 1075 000e 06F13C04 		add	r4, r6, #60
 1076 0012 2046     		mov	r0, r4
 1077 0014 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1078              	.LVL133:
 1079              	.LBE150:
 1080              	.LBE149:
 306:Core/Src/robot/robot_functions.cpp **** 	, leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].get_a
 1081              		.loc 2 306 0
 1082 0018 9FED608A 		vldr.32	s16, .L107+28
 1083 001c 60EE087A 		vmul.f32	s15, s0, s16
 1084 0020 17EE900A 		vmov	r0, s15
 1085 0024 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 36


 1086              	.LVL134:
 1087 0028 55A3     		adr	r3, .L107
 1088 002a D3E90023 		ldrd	r2, [r3]
 1089 002e FFF7FEFF 		bl	__aeabi_ddiv
 1090              	.LVL135:
 1091 0032 8046     		mov	r8, r0
 1092 0034 8946     		mov	r9, r1
 1093              	.LVL136:
 1094              	.LBB151:
 1095              	.LBB152:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1096              		.loc 3 45 0
 1097 0036 D6F868A0 		ldr	r10, [r6, #104]
 1098              	.LVL137:
 1099              	.LBE152:
 1100              	.LBE151:
 1101              	.LBB153:
 1102              	.LBB154:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1103              		.loc 3 47 0
 1104 003a 06F19400 		add	r0, r6, #148
 1105 003e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1106              	.LVL138:
 1107              	.LBE154:
 1108              	.LBE153:
 306:Core/Src/robot/robot_functions.cpp **** 	, leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].get_a
 1109              		.loc 2 306 0
 1110 0042 60EE087A 		vmul.f32	s15, s0, s16
 1111 0046 17EE900A 		vmov	r0, s15
 1112 004a FFF7FEFF 		bl	__aeabi_f2d
 1113              	.LVL139:
 1114 004e 4CA3     		adr	r3, .L107
 1115 0050 D3E90023 		ldrd	r2, [r3]
 1116 0054 FFF7FEFF 		bl	__aeabi_ddiv
 1117              	.LVL140:
 1118 0058 CDE90201 		strd	r0, [sp, #8]
 1119 005c 504B     		ldr	r3, .L107+32
 1120 005e D3ED007A 		vldr.32	s15, [r3]
 1121 0062 67EE887A 		vmul.f32	s15, s15, s16
 1122 0066 17EE900A 		vmov	r0, s15
 1123 006a FFF7FEFF 		bl	__aeabi_f2d
 1124              	.LVL141:
 1125 006e 44A3     		adr	r3, .L107
 1126 0070 D3E90023 		ldrd	r2, [r3]
 1127 0074 FFF7FEFF 		bl	__aeabi_ddiv
 1128              	.LVL142:
 1129 0078 0646     		mov	r6, r0
 1130 007a 0F46     		mov	r7, r1
 305:Core/Src/robot/robot_functions.cpp **** 	printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 1131              		.loc 2 305 0
 1132 007c 4046     		mov	r0, r8
 1133 007e 4946     		mov	r1, r9
 1134 0080 FFF7FEFF 		bl	__aeabi_d2iz
 1135              	.LVL143:
 1136 0084 8046     		mov	r8, r0
 1137 0086 3046     		mov	r0, r6
 1138 0088 3946     		mov	r1, r7
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 37


 1139 008a FFF7FEFF 		bl	__aeabi_d2iz
 1140              	.LVL144:
 1141 008e 0190     		str	r0, [sp, #4]
 1142 0090 DDE90201 		ldrd	r0, [sp, #8]
 1143 0094 FFF7FEFF 		bl	__aeabi_d2iz
 1144              	.LVL145:
 1145 0098 0090     		str	r0, [sp]
 1146 009a 5346     		mov	r3, r10
 1147 009c 4246     		mov	r2, r8
 1148 009e 2946     		mov	r1, r5
 1149 00a0 4048     		ldr	r0, .L107+36
 1150 00a2 FFF7FEFF 		bl	printf
 1151              	.LVL146:
 1152              	.LBB155:
 1153              	.LBB156:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1154              		.loc 3 47 0
 1155 00a6 2046     		mov	r0, r4
 1156 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1157              	.LVL147:
 1158              	.LBE156:
 1159              	.LBE155:
 307:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1160              		.loc 2 307 0
 1161 00ac 10EE100A 		vmov	r0, s0
 1162 00b0 FFF7FEFF 		bl	__aeabi_f2d
 1163              	.LVL148:
 1164 00b4 34A3     		adr	r3, .L107+8
 1165 00b6 D3E90023 		ldrd	r2, [r3]
 1166 00ba FFF7FEFF 		bl	__aeabi_dcmpgt
 1167              	.LVL149:
 1168 00be 88B1     		cbz	r0, .L90
 1169              	.LVL150:
 1170              	.LBB157:
 1171              	.LBB158:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1172              		.loc 3 47 0
 1173 00c0 2046     		mov	r0, r4
 1174 00c2 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1175              	.LVL151:
 1176              	.LBE158:
 1177              	.LBE157:
 308:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 1178              		.loc 2 308 0
 1179 00c6 10EE100A 		vmov	r0, s0
 1180 00ca FFF7FEFF 		bl	__aeabi_f2d
 1181              	.LVL152:
 307:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1182              		.loc 2 307 0
 1183 00ce 30A3     		adr	r3, .L107+16
 1184 00d0 D3E90023 		ldrd	r2, [r3]
 1185 00d4 FFF7FEFF 		bl	__aeabi_dcmplt
 1186              	.LVL153:
 1187 00d8 20B1     		cbz	r0, .L90
 1188              	.LVL154:
 1189              	.LBB159:
 1190              	.LBB160:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 38


  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1191              		.loc 3 45 0
 1192 00da A4F13C03 		sub	r3, r4, #60
 1193 00de 1B69     		ldr	r3, [r3, #16]
 1194              	.LVL155:
 1195              	.LBE160:
 1196              	.LBE159:
 308:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 1197              		.loc 2 308 0
 1198 00e0 002B     		cmp	r3, #0
 1199 00e2 36D1     		bne	.L106
 1200              	.L90:
 315:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(5);
 1201              		.loc 2 315 0 discriminator 3
 1202 00e4 B1EE040A 		vmov.f32	s0, #5.0e+0
 1203 00e8 2B48     		ldr	r0, .L107+24
 1204 00ea FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1205              	.LVL156:
 316:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 1206              		.loc 2 316 0 discriminator 3
 1207 00ee 2E4B     		ldr	r3, .L107+40
 1208 00f0 0022     		movs	r2, #0
 1209 00f2 1A70     		strb	r2, [r3]
 1210              	.L93:
 1211              	.LVL157:
 1212              	.LBB161:
 1213              	.LBB162:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1214              		.loc 3 47 0
 1215 00f4 2D48     		ldr	r0, .L107+44
 1216 00f6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1217              	.LVL158:
 1218              	.LBE162:
 1219              	.LBE161:
 319:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1220              		.loc 2 319 0
 1221 00fa 10EE100A 		vmov	r0, s0
 1222 00fe FFF7FEFF 		bl	__aeabi_f2d
 1223              	.LVL159:
 320:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 1224              		.loc 2 320 0
 1225 0102 21A3     		adr	r3, .L107+8
 1226 0104 D3E90023 		ldrd	r2, [r3]
 1227 0108 FFF7FEFF 		bl	__aeabi_dcmpgt
 1228              	.LVL160:
 1229 010c 78B1     		cbz	r0, .L94
 1230              	.LVL161:
 1231              	.LBB163:
 1232              	.LBB164:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1233              		.loc 3 47 0
 1234 010e 2748     		ldr	r0, .L107+44
 1235 0110 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1236              	.LVL162:
 1237              	.LBE164:
 1238              	.LBE163:
 320:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 39


 1239              		.loc 2 320 0
 1240 0114 10EE100A 		vmov	r0, s0
 1241 0118 FFF7FEFF 		bl	__aeabi_f2d
 1242              	.LVL163:
 319:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1243              		.loc 2 319 0
 1244 011c 1CA3     		adr	r3, .L107+16
 1245 011e D3E90023 		ldrd	r2, [r3]
 1246 0122 FFF7FEFF 		bl	__aeabi_dcmplt
 1247              	.LVL164:
 1248 0126 10B1     		cbz	r0, .L94
 1249              	.LVL165:
 1250              	.LBB165:
 1251              	.LBB166:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1252              		.loc 3 45 0
 1253 0128 1B4B     		ldr	r3, .L107+24
 1254 012a 9B6E     		ldr	r3, [r3, #104]
 1255              	.LVL166:
 1256              	.LBE166:
 1257              	.LBE165:
 320:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 1258              		.loc 2 320 0
 1259 012c DBB9     		cbnz	r3, .L97
 1260              	.L94:
 327:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(5);
 1261              		.loc 2 327 0 discriminator 2
 1262 012e B1EE040A 		vmov.f32	s0, #5.0e+0
 1263 0132 1F48     		ldr	r0, .L107+48
 1264 0134 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1265              	.LVL167:
 328:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 1266              		.loc 2 328 0 discriminator 2
 1267 0138 1E4B     		ldr	r3, .L107+52
 1268 013a 0022     		movs	r2, #0
 1269 013c 1A70     		strb	r2, [r3]
 1270              	.L98:
 331:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 1271              		.loc 2 331 0
 1272 013e 1A4B     		ldr	r3, .L107+40
 1273 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1274 0142 CBB1     		cbz	r3, .L100
 331:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 1275              		.loc 2 331 0 is_stmt 0 discriminator 1
 1276 0144 1B4B     		ldr	r3, .L107+52
 1277 0146 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1278              	.L99:
 340:Core/Src/robot/robot_functions.cpp **** }
 1279              		.loc 2 340 0 is_stmt 1
 1280 0148 04B0     		add	sp, sp, #16
 1281              	.LCFI29:
 1282              		.cfi_remember_state
 1283              		.cfi_def_cfa_offset 40
 1284              		@ sp needed
 1285 014a BDEC028B 		vldm	sp!, {d8}
 1286              	.LCFI30:
 1287              		.cfi_restore 80
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 40


 1288              		.cfi_restore 81
 1289              		.cfi_def_cfa_offset 32
 1290 014e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1291              	.L106:
 1292              	.LCFI31:
 1293              		.cfi_restore_state
 310:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 1294              		.loc 2 310 0
 1295 0152 9FED190A 		vldr.32	s0, .L107+56
 1296 0156 A4F13C00 		sub	r0, r4, #60
 1297 015a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1298              	.LVL168:
 311:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 1299              		.loc 2 311 0
 1300 015e 124B     		ldr	r3, .L107+40
 1301 0160 0122     		movs	r2, #1
 1302 0162 1A70     		strb	r2, [r3]
 1303 0164 C6E7     		b	.L93
 1304              	.L97:
 322:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1305              		.loc 2 322 0
 1306 0166 9FED140A 		vldr.32	s0, .L107+56
 1307 016a 1148     		ldr	r0, .L107+48
 1308 016c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1309              	.LVL169:
 323:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 1310              		.loc 2 323 0
 1311 0170 104B     		ldr	r3, .L107+52
 1312 0172 0122     		movs	r2, #1
 1313 0174 1A70     		strb	r2, [r3]
 1314 0176 E2E7     		b	.L98
 1315              	.L100:
 338:Core/Src/robot/robot_functions.cpp **** 		return false;
 1316              		.loc 2 338 0
 1317 0178 0020     		movs	r0, #0
 1318 017a E5E7     		b	.L99
 1319              	.L108:
 1320 017c AFF30080 		.align	3
 1321              	.L107:
 1322 0180 182D4454 		.word	1413754136
 1323 0184 FB210940 		.word	1074340347
 1324 0188 44031FEA 		.word	-367066300
 1325 018c 0604F83F 		.word	1073218566
 1326 0190 EC5669BE 		.word	-1100392724
 1327 0194 EF3FFA3F 		.word	1073364975
 1328 0198 00000000 		.word	leg
 1329 019c 00003443 		.word	1127481344
 1330 01a0 00000000 		.word	.LANCHOR2
 1331 01a4 00000000 		.word	.LC1
 1332 01a8 00000000 		.word	.LANCHOR5
 1333 01ac 94000000 		.word	leg+148
 1334 01b0 58000000 		.word	leg+88
 1335 01b4 00000000 		.word	.LANCHOR6
 1336 01b8 00000000 		.word	0
 1337              		.cfi_endproc
 1338              	.LFE499:
 1340              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 41


 1341              		.align	1
 1342              		.global	_Z28initialize_steering_positionv
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv4-sp-d16
 1348              	_Z28initialize_steering_positionv:
 1349              	.LFB500:
 350:Core/Src/robot/robot_functions.cpp **** {
 1350              		.loc 2 350 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354 0000 38B5     		push	{r3, r4, r5, lr}
 1355              	.LCFI32:
 1356              		.cfi_def_cfa_offset 16
 1357              		.cfi_offset 3, -16
 1358              		.cfi_offset 4, -12
 1359              		.cfi_offset 5, -8
 1360              		.cfi_offset 14, -4
 1361 0002 2DED028B 		vpush.64	{d8}
 1362              	.LCFI33:
 1363              		.cfi_def_cfa_offset 24
 1364              		.cfi_offset 80, -24
 1365              		.cfi_offset 81, -20
 1366              	.LVL170:
 1367              	.LBB167:
 1368              	.LBB168:
 1369              		.loc 5 112 0
 1370 0006 2648     		ldr	r0, .L116+8
 1371 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1372              	.LVL171:
 1373              	.LBE168:
 1374              	.LBE167:
 351:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 1375              		.loc 2 351 0
 1376 000c DFED257A 		vldr.32	s15, .L116+12
 1377 0010 60EE277A 		vmul.f32	s15, s0, s15
 1378 0014 17EE900A 		vmov	r0, s15
 1379 0018 FFF7FEFF 		bl	__aeabi_f2d
 1380              	.LVL172:
 1381 001c 1EA3     		adr	r3, .L116
 1382 001e D3E90023 		ldrd	r2, [r3]
 1383 0022 FFF7FEFF 		bl	__aeabi_ddiv
 1384              	.LVL173:
 1385 0026 FFF7FEFF 		bl	__aeabi_d2iz
 1386              	.LVL174:
 1387 002a 0146     		mov	r1, r0
 1388 002c 1E48     		ldr	r0, .L116+16
 1389 002e FFF7FEFF 		bl	printf
 1390              	.LVL175:
 354:Core/Src/robot/robot_functions.cpp **** 	if(((HAL_GetTick()-start_time) >= 500)){
 1391              		.loc 2 354 0
 1392 0032 FFF7FEFF 		bl	HAL_GetTick
 1393              	.LVL176:
 1394 0036 1D4B     		ldr	r3, .L116+20
 1395 0038 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 42


 1396 003a C01A     		subs	r0, r0, r3
 1397 003c B0F5FA7F 		cmp	r0, #500
 1398 0040 0BD2     		bcs	.L114
 359:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 1399              		.loc 2 359 0
 1400 0042 1B4B     		ldr	r3, .L116+24
 1401 0044 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1402 0046 ACB9     		cbnz	r4, .L115
 367:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 1403              		.loc 2 367 0
 1404 0048 B6EE000A 		vmov.f32	s0, #5.0e-1
 1405 004c 1948     		ldr	r0, .L116+28
 1406 004e FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1407              	.LVL177:
 1408              	.L111:
 370:Core/Src/robot/robot_functions.cpp **** }
 1409              		.loc 2 370 0
 1410 0052 2046     		mov	r0, r4
 1411 0054 BDEC028B 		vldm	sp!, {d8}
 1412              	.LCFI34:
 1413              		.cfi_remember_state
 1414              		.cfi_restore 80
 1415              		.cfi_restore 81
 1416              		.cfi_def_cfa_offset 16
 1417 0058 38BD     		pop	{r3, r4, r5, pc}
 1418              	.L114:
 1419              	.LCFI35:
 1420              		.cfi_restore_state
 355:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1421              		.loc 2 355 0
 1422 005a 9FED170A 		vldr.32	s0, .L116+32
 1423 005e 1548     		ldr	r0, .L116+28
 1424 0060 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1425              	.LVL178:
 356:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 1426              		.loc 2 356 0
 1427 0064 0122     		movs	r2, #1
 1428 0066 4FF48051 		mov	r1, #4096
 1429 006a 1448     		ldr	r0, .L116+36
 1430 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1431              	.LVL179:
 357:Core/Src/robot/robot_functions.cpp **** 		return true;	
 1432              		.loc 2 357 0
 1433 0070 0124     		movs	r4, #1
 1434 0072 EEE7     		b	.L111
 1435              	.L115:
 361:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1436              		.loc 2 361 0
 1437 0074 9FED108A 		vldr.32	s16, .L116+32
 1438 0078 0E4D     		ldr	r5, .L116+28
 1439 007a B0EE480A 		vmov.f32	s0, s16
 1440 007e 2846     		mov	r0, r5
 1441 0080 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1442              	.LVL180:
 1443              	.LBB169:
 1444              	.LBB170:
  94:Core/Inc/devs/steering.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 43


 1445              		.loc 5 94 0
 1446 0084 B0EE480A 		vmov.f32	s0, s16
 1447 0088 05F10C00 		add	r0, r5, #12
 1448 008c FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 1449              	.LVL181:
 1450              	.LBE170:
 1451              	.LBE169:
 363:Core/Src/robot/robot_functions.cpp **** 		return true;
 1452              		.loc 2 363 0
 1453 0090 DFE7     		b	.L111
 1454              	.L117:
 1455 0092 00BFAFF3 		.align	3
 1455      0080
 1456              	.L116:
 1457 0098 182D4454 		.word	1413754136
 1458 009c FB210940 		.word	1074340347
 1459 00a0 0C000000 		.word	steering+12
 1460 00a4 00003443 		.word	1127481344
 1461 00a8 00000000 		.word	.LC2
 1462 00ac 00000000 		.word	.LANCHOR7
 1463 00b0 00000000 		.word	.LANCHOR8
 1464 00b4 00000000 		.word	steering
 1465 00b8 00000000 		.word	0
 1466 00bc 000C0240 		.word	1073875968
 1467              		.cfi_endproc
 1468              	.LFE500:
 1470              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1471              		.align	1
 1472              		.global	_Z15calculate_datasv
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1476              		.fpu fpv4-sp-d16
 1478              	_Z15calculate_datasv:
 1479              	.LFB501:
 380:Core/Src/robot/robot_functions.cpp **** {
 1480              		.loc 2 380 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 16
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484 0000 30B5     		push	{r4, r5, lr}
 1485              	.LCFI36:
 1486              		.cfi_def_cfa_offset 12
 1487              		.cfi_offset 4, -12
 1488              		.cfi_offset 5, -8
 1489              		.cfi_offset 14, -4
 1490 0002 85B0     		sub	sp, sp, #20
 1491              	.LCFI37:
 1492              		.cfi_def_cfa_offset 32
 381:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 1493              		.loc 2 381 0
 1494 0004 324D     		ldr	r5, .L124+24
 1495 0006 2846     		mov	r0, r5
 1496 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1497              	.LVL182:
 382:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 1498              		.loc 2 382 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 44


 1499 000c 05F15800 		add	r0, r5, #88
 1500 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1501              	.LVL183:
 1502              	.LBB171:
 1503              	.LBB172:
 102:Core/Inc/devs/steering.h **** 
 1504              		.loc 5 102 0
 1505 0014 2F48     		ldr	r0, .L124+28
 1506 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1507              	.LVL184:
 1508              	.LBE172:
 1509              	.LBE171:
 384:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 1510              		.loc 2 384 0
 1511 001a 01AC     		add	r4, sp, #4
 1512 001c 0A21     		movs	r1, #10
 1513 001e 2046     		mov	r0, r4
 1514 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1515              	.LVL185:
 1516 0024 2C4B     		ldr	r3, .L124+32
 1517 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1518 002a 83E80700 		stm	r3, {r0, r1, r2}
 385:Core/Src/robot/robot_functions.cpp **** 	if(leg[0].is_raised()){
 1519              		.loc 2 385 0
 1520 002e 2846     		mov	r0, r5
 1521 0030 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 1522              	.LVL186:
 1523 0034 A0B9     		cbnz	r0, .L122
 1524              	.L119:
 1525              	.LVL187:
 1526              	.LBB173:
 1527              	.LBB174:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 1528              		.loc 1 36 0
 1529 0036 284B     		ldr	r3, .L124+32
 1530 0038 D3ED027A 		vldr.32	s15, [r3, #8]
 1531              	.LVL188:
 1532              	.LBE174:
 1533              	.LBE173:
 388:Core/Src/robot/robot_functions.cpp **** 	printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 1534              		.loc 2 388 0
 1535 003c FDEEE77A 		vcvt.s32.f32	s15, s15
 1536 0040 17EE901A 		vmov	r1, s15	@ int
 1537 0044 2548     		ldr	r0, .L124+36
 1538 0046 FFF7FEFF 		bl	printf
 1539              	.LVL189:
 389:Core/Src/robot/robot_functions.cpp **** 	HAL_ADC_Start(&hadc1);
 1540              		.loc 2 389 0
 1541 004a 254C     		ldr	r4, .L124+40
 1542 004c 2046     		mov	r0, r4
 1543 004e FFF7FEFF 		bl	HAL_ADC_Start
 1544              	.LVL190:
 390:Core/Src/robot/robot_functions.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 1545              		.loc 2 390 0
 1546 0052 0521     		movs	r1, #5
 1547 0054 2046     		mov	r0, r4
 1548 0056 FFF7FEFF 		bl	HAL_ADC_PollForConversion
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 45


 1549              	.LVL191:
 1550 005a 20B1     		cbz	r0, .L123
 1551              	.L118:
 1552              		.loc 2 395 0
 1553 005c 05B0     		add	sp, sp, #20
 1554              	.LCFI38:
 1555              		.cfi_remember_state
 1556              		.cfi_def_cfa_offset 12
 1557              		@ sp needed
 1558 005e 30BD     		pop	{r4, r5, pc}
 1559              	.L122:
 1560              	.LCFI39:
 1561              		.cfi_restore_state
 386:Core/Src/robot/robot_functions.cpp **** 		calculate_robot_angle();
 1562              		.loc 2 386 0
 1563 0060 FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1564              	.LVL192:
 1565 0064 E7E7     		b	.L119
 1566              	.L123:
 392:Core/Src/robot/robot_functions.cpp **** 		robotx = HAL_ADC_GetValue(&hadc1);
 1567              		.loc 2 392 0
 1568 0066 2046     		mov	r0, r4
 1569 0068 FFF7FEFF 		bl	HAL_ADC_GetValue
 1570              	.LVL193:
 1571 006c 07EE900A 		vmov	s15, r0	@ int
 1572 0070 F8EE677A 		vcvt.f32.u32	s15, s15
 1573 0074 1B4C     		ldr	r4, .L124+44
 1574 0076 C4ED007A 		vstr.32	s15, [r4]
 393:Core/Src/robot/robot_functions.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 1575              		.loc 2 393 0
 1576 007a 17EE900A 		vmov	r0, s15
 1577 007e FFF7FEFF 		bl	__aeabi_f2d
 1578              	.LVL194:
 1579 0082 0DA3     		adr	r3, .L124
 1580 0084 D3E90023 		ldrd	r2, [r3]
 1581 0088 FFF7FEFF 		bl	__aeabi_dmul
 1582              	.LVL195:
 1583 008c 0022     		movs	r2, #0
 1584 008e 164B     		ldr	r3, .L124+48
 1585 0090 FFF7FEFF 		bl	__aeabi_dmul
 1586              	.LVL196:
 1587 0094 9FED0A1B 		vldr.64	d1, .L124+8
 1588 0098 41EC100B 		vmov	d0, r0, r1
 1589 009c FFF7FEFF 		bl	pow
 1590              	.LVL197:
 1591 00a0 09A3     		adr	r3, .L124+16
 1592 00a2 D3E90023 		ldrd	r2, [r3]
 1593 00a6 51EC100B 		vmov	r0, r1, d0
 1594 00aa FFF7FEFF 		bl	__aeabi_dmul
 1595              	.LVL198:
 1596 00ae FFF7FEFF 		bl	__aeabi_d2f
 1597              	.LVL199:
 1598 00b2 2060     		str	r0, [r4]	@ float
 1599              		.loc 2 395 0
 1600 00b4 D2E7     		b	.L118
 1601              	.L125:
 1602 00b6 00BF     		.align	3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 46


 1603              	.L124:
 1604 00b8 66666666 		.word	1717986918
 1605 00bc 66660A40 		.word	1074423398
 1606 00c0 598638D6 		.word	-700938663
 1607 00c4 C56DF1BF 		.word	-1074696763
 1608 00c8 F6285C8F 		.word	-1889785610
 1609 00cc C2154F40 		.word	1078924738
 1610 00d0 00000000 		.word	leg
 1611 00d4 0C000000 		.word	steering+12
 1612 00d8 00000000 		.word	.LANCHOR1
 1613 00dc 00000000 		.word	.LC3
 1614 00e0 00000000 		.word	hadc1
 1615 00e4 00000000 		.word	.LANCHOR9
 1616 00e8 0000303F 		.word	1060110336
 1617              		.cfi_endproc
 1618              	.LFE501:
 1620              		.section	.text._Z19initialize_positionv,"ax",%progbits
 1621              		.align	1
 1622              		.global	_Z19initialize_positionv
 1623              		.syntax unified
 1624              		.thumb
 1625              		.thumb_func
 1626              		.fpu fpv4-sp-d16
 1628              	_Z19initialize_positionv:
 1629              	.LFB498:
 245:Core/Src/robot/robot_functions.cpp **** {
 1630              		.loc 2 245 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1635              	.LCFI40:
 1636              		.cfi_def_cfa_offset 24
 1637              		.cfi_offset 4, -24
 1638              		.cfi_offset 5, -20
 1639              		.cfi_offset 6, -16
 1640              		.cfi_offset 7, -12
 1641              		.cfi_offset 8, -8
 1642              		.cfi_offset 14, -4
 1643 0004 2DED028B 		vpush.64	{d8}
 1644              	.LCFI41:
 1645              		.cfi_def_cfa_offset 32
 1646              		.cfi_offset 80, -32
 1647              		.cfi_offset 81, -28
 246:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 1648              		.loc 2 246 0
 1649 0008 FFF7FEFF 		bl	HAL_GetTick
 1650              	.LVL200:
 1651 000c 0646     		mov	r6, r0
 1652              	.LVL201:
 1653              	.L127:
 249:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1654              		.loc 2 249 0
 1655 000e FFF7FEFF 		bl	HAL_GetTick
 1656              	.LVL202:
 1657 0012 801B     		subs	r0, r0, r6
 1658 0014 0928     		cmp	r0, #9
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 47


 1659 0016 FAD9     		bls	.L127
 251:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1660              		.loc 2 251 0
 1661 0018 FFF7FEFF 		bl	HAL_GetTick
 1662              	.LVL203:
 1663 001c 0646     		mov	r6, r0
 1664              	.LVL204:
 252:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Leg_Orientation\t");
 1665              		.loc 2 252 0
 1666 001e 3D48     		ldr	r0, .L135
 1667              	.LVL205:
 1668 0020 FFF7FEFF 		bl	printf
 1669              	.LVL206:
 253:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 1670              		.loc 2 253 0
 1671 0024 FFF7FEFF 		bl	_Z15calculate_datasv
 1672              	.LVL207:
 254:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 1673              		.loc 2 254 0
 1674 0028 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1675              	.LVL208:
 1676 002c 0028     		cmp	r0, #0
 1677 002e EED0     		beq	.L127
 1678              	.LBB175:
 258:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1679              		.loc 2 258 0
 1680 0030 0024     		movs	r4, #0
 1681 0032 00E0     		b	.L131
 1682              	.LVL209:
 1683              	.L130:
 258:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1684              		.loc 2 258 0 is_stmt 0 discriminator 2
 1685 0034 0134     		adds	r4, r4, #1
 1686              	.LVL210:
 1687              	.L131:
 258:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1688              		.loc 2 258 0 discriminator 1
 1689 0036 384B     		ldr	r3, .L135+4
 1690 0038 9C42     		cmp	r4, r3
 1691 003a 3EDC     		bgt	.L129
 260:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1692              		.loc 2 260 0 is_stmt 1
 1693 003c FFF7FEFF 		bl	HAL_GetTick
 1694              	.LVL211:
 1695 0040 801B     		subs	r0, r0, r6
 1696 0042 0928     		cmp	r0, #9
 1697 0044 F6D9     		bls	.L130
 262:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1698              		.loc 2 262 0
 1699 0046 FFF7FEFF 		bl	HAL_GetTick
 1700              	.LVL212:
 1701 004a 0646     		mov	r6, r0
 1702              	.LVL213:
 263:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1703              		.loc 2 263 0
 1704 004c 3348     		ldr	r0, .L135+8
 1705              	.LVL214:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 48


 1706 004e FFF7FEFF 		bl	printf
 1707              	.LVL215:
 264:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 1708              		.loc 2 264 0
 1709 0052 FFF7FEFF 		bl	_Z15calculate_datasv
 1710              	.LVL216:
 265:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 1711              		.loc 2 265 0
 1712 0056 324D     		ldr	r5, .L135+12
 1713 0058 0027     		movs	r7, #0
 1714 005a 2F61     		str	r7, [r5, #16]
 266:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 1715              		.loc 2 266 0
 1716 005c AF66     		str	r7, [r5, #104]
 267:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 1717              		.loc 2 267 0
 1718 005e 9FED318A 		vldr.32	s16, .L135+16
 1719 0062 B0EE480A 		vmov.f32	s0, s16
 1720 0066 2846     		mov	r0, r5
 1721 0068 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1722              	.LVL217:
 268:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 1723              		.loc 2 268 0
 1724 006c 05F15808 		add	r8, r5, #88
 1725 0070 B0EE480A 		vmov.f32	s0, s16
 1726 0074 4046     		mov	r0, r8
 1727 0076 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1728              	.LVL218:
 1729              	.LBB176:
 1730              	.LBB177:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1731              		.loc 3 40 0
 1732 007a B0EE480A 		vmov.f32	s0, s16
 1733 007e 05F13C00 		add	r0, r5, #60
 1734 0082 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1735              	.LVL219:
 1736              	.LBE177:
 1737              	.LBE176:
 1738              	.LBB178:
 1739              	.LBB179:
 1740 0086 B0EE480A 		vmov.f32	s0, s16
 1741 008a 05F19400 		add	r0, r5, #148
 1742 008e FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1743              	.LVL220:
 1744              	.LBE179:
 1745              	.LBE178:
 271:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1746              		.loc 2 271 0
 1747 0092 9FED258A 		vldr.32	s16, .L135+20
 1748 0096 B0EE480A 		vmov.f32	s0, s16
 1749 009a 2846     		mov	r0, r5
 1750 009c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1751              	.LVL221:
 272:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1752              		.loc 2 272 0
 1753 00a0 B0EE480A 		vmov.f32	s0, s16
 1754 00a4 4046     		mov	r0, r8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 49


 1755 00a6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1756              	.LVL222:
 273:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 1757              		.loc 2 273 0
 1758 00aa B0EE480A 		vmov.f32	s0, s16
 1759 00ae 1F48     		ldr	r0, .L135+24
 1760 00b0 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1761              	.LVL223:
 274:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 1762              		.loc 2 274 0
 1763 00b4 1E4B     		ldr	r3, .L135+28
 1764 00b6 1F70     		strb	r7, [r3]
 1765 00b8 BCE7     		b	.L130
 1766              	.L129:
 1767              	.LBE175:
 277:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1768              		.loc 2 277 0
 1769 00ba FFF7FEFF 		bl	HAL_GetTick
 1770              	.LVL224:
 1771 00be 1D4B     		ldr	r3, .L135+32
 1772 00c0 1860     		str	r0, [r3]
 1773              	.LVL225:
 1774              	.L132:
 280:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1775              		.loc 2 280 0
 1776 00c2 FFF7FEFF 		bl	HAL_GetTick
 1777              	.LVL226:
 1778 00c6 801B     		subs	r0, r0, r6
 1779 00c8 0928     		cmp	r0, #9
 1780 00ca FAD9     		bls	.L132
 282:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1781              		.loc 2 282 0
 1782 00cc FFF7FEFF 		bl	HAL_GetTick
 1783              	.LVL227:
 1784 00d0 0646     		mov	r6, r0
 1785              	.LVL228:
 283:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1786              		.loc 2 283 0
 1787 00d2 FFF7FEFF 		bl	HAL_GetTick
 1788              	.LVL229:
 1789 00d6 174B     		ldr	r3, .L135+32
 1790 00d8 1A68     		ldr	r2, [r3]
 1791 00da 0146     		mov	r1, r0
 1792 00dc 1648     		ldr	r0, .L135+36
 1793 00de FFF7FEFF 		bl	printf
 1794              	.LVL230:
 284:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1795              		.loc 2 284 0
 1796 00e2 9FED118A 		vldr.32	s16, .L135+20
 1797 00e6 0E4C     		ldr	r4, .L135+12
 1798 00e8 B0EE480A 		vmov.f32	s0, s16
 1799 00ec 2046     		mov	r0, r4
 1800 00ee FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1801              	.LVL231:
 285:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1802              		.loc 2 285 0
 1803 00f2 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 50


 1804 00f6 04F15800 		add	r0, r4, #88
 1805 00fa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1806              	.LVL232:
 286:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 1807              		.loc 2 286 0
 1808 00fe FFF7FEFF 		bl	_Z15calculate_datasv
 1809              	.LVL233:
 287:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1810              		.loc 2 287 0
 1811 0102 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1812              	.LVL234:
 1813 0106 0028     		cmp	r0, #0
 1814 0108 DBD0     		beq	.L132
 291:Core/Src/robot/robot_functions.cpp **** }
 1815              		.loc 2 291 0
 1816 010a BDEC028B 		vldm	sp!, {d8}
 1817              	.LCFI42:
 1818              		.cfi_restore 80
 1819              		.cfi_restore 81
 1820              		.cfi_def_cfa_offset 24
 1821 010e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1822              	.LVL235:
 1823              	.L136:
 1824 0112 00BF     		.align	2
 1825              	.L135:
 1826 0114 00000000 		.word	.LC4
 1827 0118 BFC62D00 		.word	2999999
 1828 011c 20000000 		.word	.LC5
 1829 0120 00000000 		.word	leg
 1830 0124 DB0FC93F 		.word	1070141403
 1831 0128 00000000 		.word	0
 1832 012c 00000000 		.word	steering
 1833 0130 00000000 		.word	.LANCHOR8
 1834 0134 00000000 		.word	.LANCHOR7
 1835 0138 34000000 		.word	.LC6
 1836              		.cfi_endproc
 1837              	.LFE498:
 1839              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1840              		.align	1
 1841              		.syntax unified
 1842              		.thumb
 1843              		.thumb_func
 1844              		.fpu fpv4-sp-d16
 1846              	_GLOBAL__sub_I_initial_angle:
 1847              	.LFB514:
 1848              		.loc 2 395 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 0, uses_anonymous_args = 0
 1852 0000 08B5     		push	{r3, lr}
 1853              	.LCFI43:
 1854              		.cfi_def_cfa_offset 8
 1855              		.cfi_offset 3, -8
 1856              		.cfi_offset 14, -4
 1857              		.loc 2 395 0
 1858 0002 4FF6FF71 		movw	r1, #65535
 1859 0006 0120     		movs	r0, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 51


 1860 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1861              	.LVL236:
 1862 000c 08BD     		pop	{r3, pc}
 1863              		.cfi_endproc
 1864              	.LFE514:
 1866              		.section	.init_array,"aw",%init_array
 1867              		.align	2
 1868 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1869              		.global	tolerance
 1870              		.global	temp_robot_angle
 1871              		.global	robot_angle
 1872              		.global	STEERING_FLAG
 1873              		.global	start_time
 1874              		.global	summation_angle
 1875              		.global	robotx
 1876              		.global	curr_angle
 1877              		.global	initial_angle
 1878              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1879              		.set	.LANCHOR8,. + 0
 1882              	STEERING_FLAG:
 1883 0000 00       		.space	1
 1884              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1885              		.set	.LANCHOR5,. + 0
 1888              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1889 0000 00       		.space	1
 1890              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1891              		.set	.LANCHOR6,. + 0
 1894              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1895 0000 00       		.space	1
 1896              		.section	.bss.curr_angle,"aw",%nobits
 1897              		.align	2
 1898              		.set	.LANCHOR1,. + 0
 1901              	curr_angle:
 1902 0000 00000000 		.space	12
 1902      00000000 
 1902      00000000 
 1903              		.section	.bss.initial_angle,"aw",%nobits
 1904              		.align	2
 1905              		.set	.LANCHOR0,. + 0
 1908              	initial_angle:
 1909 0000 00000000 		.space	12
 1909      00000000 
 1909      00000000 
 1910              		.section	.bss.robot_angle,"aw",%nobits
 1911              		.align	2
 1912              		.set	.LANCHOR2,. + 0
 1915              	robot_angle:
 1916 0000 00000000 		.space	4
 1917              		.section	.bss.robotx,"aw",%nobits
 1918              		.align	2
 1919              		.set	.LANCHOR9,. + 0
 1922              	robotx:
 1923 0000 00000000 		.space	4
 1924              		.section	.bss.start_time,"aw",%nobits
 1925              		.align	2
 1926              		.set	.LANCHOR7,. + 0
 1929              	start_time:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 52


 1930 0000 00000000 		.space	4
 1931              		.section	.bss.summation_angle,"aw",%nobits
 1932              		.align	2
 1933              		.set	.LANCHOR3,. + 0
 1936              	summation_angle:
 1937 0000 00000000 		.space	4
 1938              		.section	.bss.temp_robot_angle,"aw",%nobits
 1939              		.align	2
 1940              		.set	.LANCHOR4,. + 0
 1943              	temp_robot_angle:
 1944 0000 00000000 		.space	4
 1945              		.section	.data.tolerance,"aw",%progbits
 1946              		.align	2
 1949              	tolerance:
 1950 0000 5077563D 		.word	1029076816
 1951              		.section	.rodata._Z15calculate_datasv.str1.4,"aMS",%progbits,1
 1952              		.align	2
 1953              	.LC3:
 1954 0000 09616E67 		.ascii	"\011angleZ = %d\011\000"
 1954      6C655A20 
 1954      3D202564 
 1954      0900
 1955              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1956              		.align	2
 1957              	.LC4:
 1958 0000 09496E69 		.ascii	"\011Initializing_Leg_Orientation\011\000"
 1958      7469616C 
 1958      697A696E 
 1958      675F4C65 
 1958      675F4F72 
 1959 001f 00       		.space	1
 1960              	.LC5:
 1961 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1961      6974696E 
 1961      675F5468 
 1961      655F4C65 
 1961      67200900 
 1962              	.LC6:
 1963 0034 09496E69 		.ascii	"\011Initializing_Steering_Orientation\011 %d \011 %"
 1963      7469616C 
 1963      697A696E 
 1963      675F5374 
 1963      65657269 
 1964 005e 6400     		.ascii	"d\000"
 1965              		.section	.rodata._Z23initialize_leg_positionv.str1.4,"aMS",%progbits,1
 1966              		.align	2
 1967              	.LC1:
 1968 0000 0A097374 		.ascii	"\012\011steps0 = %d, angle0 = %d\011steps0 = %d, an"
 1968      65707330 
 1968      203D2025 
 1968      642C2061 
 1968      6E676C65 
 1969 002a 676C6530 		.ascii	"gle0 = %d, \011robot_angle = %d\000"
 1969      203D2025 
 1969      642C2009 
 1969      726F626F 
 1969      745F616E 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 53


 1970              		.section	.rodata._Z28initialize_steering_positionv.str1.4,"aMS",%progbits,1
 1971              		.align	2
 1972              	.LC2:
 1973 0000 0A616E67 		.ascii	"\012angle = %d\011\000"
 1973      6C65203D 
 1973      20256409 
 1973      00
 1974              		.section	.rodata._Z2goif.str1.4,"aMS",%progbits,1
 1975              		.align	2
 1976              	.LC0:
 1977 0000 20737465 		.ascii	" steps = %d\011 robot_angle = %d\011 leg_1_angle = "
 1977      7073203D 
 1977      20256409 
 1977      20726F62 
 1977      6F745F61 
 1978 002d 25640920 		.ascii	"%d\011 leg_2_angle = %d\012\000"
 1978      6C65675F 
 1978      325F616E 
 1978      676C6520 
 1978      3D202564 
 1979              		.text
 1980              	.Letext0:
 1981              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1982              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1983              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1984              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1985              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1986              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1987              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1988              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1989              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1990              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1991              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1992              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1993              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1994              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1995              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1996              		.file 21 "Core/Inc/periphs/tim.h"
 1997              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1998              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1999              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2000              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2001              		.file 26 "Core/Inc/devs/motor.h"
 2002              		.file 27 "Core/Inc/devs/encoder.h"
 2003              		.file 28 "Core/Inc/utils/pid_algorithms.h"
 2004              		.file 29 "Core/Inc/devs/limit_switch.h"
 2005              		.file 30 "Core/Inc/periphs/usart.h"
 2006              		.file 31 "Core/Inc/periphs/adc.h"
 2007              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2008              		.file 33 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2009              		.file 34 "<built-in>"
 2010              		.file 35 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 robot_functions.cpp
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:158    .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:165    .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:312    .text._Z8move_legif:000000a4 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:325    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:332    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:426    .text._Z9set_anglef:00000088 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:440    .text._Z22correct_steering_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:447    .text._Z22correct_steering_anglef:00000000 _Z22correct_steering_anglef
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:530    .text._Z22correct_steering_anglef:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:542    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:549    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:638    .text._Z13move_steeringif:0000006c $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:650    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:657    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:769    .text._Z21calculate_robot_anglev:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:784    .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:791    .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1014   .text._Z2goif:00000150 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1031   .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1038   .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1322   .text._Z23initialize_leg_positionv:00000180 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1341   .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1348   .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1457   .text._Z28initialize_steering_positionv:00000098 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1471   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1478   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1604   .text._Z15calculate_datasv:000000b8 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1621   .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1628   .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1826   .text._Z19initialize_positionv:00000114 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1840   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1846   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1867   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1949   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1943   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1915   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1882   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1929   .bss.start_time:00000000 start_time
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1936   .bss.summation_angle:00000000 summation_angle
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1922   .bss.robotx:00000000 robotx
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1901   .bss.curr_angle:00000000 curr_angle
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1908   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1883   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1888   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1889   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1894   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1895   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1897   .bss.curr_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1904   .bss.initial_angle:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s 			page 55


C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1911   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1918   .bss.robotx:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1925   .bss.start_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1932   .bss.summation_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1939   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1946   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1952   .rodata._Z15calculate_datasv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1956   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1966   .rodata._Z23initialize_leg_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1971   .rodata._Z28initialize_steering_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccw6PExk.s:1975   .rodata._Z2goif.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
_ZN7encoder16get_actual_angleEv
_ZN7encoder9get_angleEv
cosf
_ZN3leg9set_omegaEf
steps
leg
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN8steering9set_angleEf
steering
__aeabi_dcmple
_ZN3leg9is_raisedEv
_ZN8steering9set_omegaEf
__aeabi_dmul
_ZN3leg26is_raised_without_deadzoneEv
USE_IMU_FLAG
__aeabi_d2iz
printf
HAL_GetTick
HAL_GPIO_WritePin
_ZN7encoder11reset_angleEf
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
pow
hadc1
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
