ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot_functions.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB507:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE507:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB513:
  50              		.file 2 "Core/Src/robot/robot_functions.cpp"
   1:Core/Src/robot/robot_functions.cpp **** 
   2:Core/Src/robot/robot_functions.cpp **** 
   3:Core/Src/robot/robot_functions.cpp **** #include "robot_functions.h"
   4:Core/Src/robot/robot_functions.cpp **** 
   5:Core/Src/robot/robot_functions.cpp **** extern leg leg[2];
   6:Core/Src/robot/robot_functions.cpp **** extern steering steering;
   7:Core/Src/robot/robot_functions.cpp **** extern bool USE_IMU_FLAG;
   8:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
   9:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
  10:Core/Src/robot/robot_functions.cpp **** 
  11:Core/Src/robot/robot_functions.cpp **** static const float robot_speed = 7;
  12:Core/Src/robot/robot_functions.cpp **** static float leg_speed = robot_speed;     //17 is the maximum with safe zone
  13:Core/Src/robot/robot_functions.cpp **** static const float steering_speed = 0.85; // 0.875 is the 100%
  14:Core/Src/robot/robot_functions.cpp **** static const float steering_angle_limit = 6 * PI / 180;
  15:Core/Src/robot/robot_functions.cpp **** 
  16:Core/Src/robot/robot_functions.cpp **** extern int steps[7];
  17:Core/Src/robot/robot_functions.cpp **** extern float angles[7];
  18:Core/Src/robot/robot_functions.cpp **** float robotx = 0;
  19:Core/Src/robot/robot_functions.cpp **** float summation_angle = 0;
  20:Core/Src/robot/robot_functions.cpp **** uint32_t start_time;
  21:Core/Src/robot/robot_functions.cpp **** 
  22:Core/Src/robot/robot_functions.cpp **** bool STEERING_FLAG = false;
  23:Core/Src/robot/robot_functions.cpp **** 
  24:Core/Src/robot/robot_functions.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  25:Core/Src/robot/robot_functions.cpp **** float tolerance = 3 * PI / 180;
  26:Core/Src/robot/robot_functions.cpp **** 
  27:Core/Src/robot/robot_functions.cpp **** /*
  28:Core/Src/robot/robot_functions.cpp ****  * \brief This function makes the robot to reach the provided steps and angle.
  29:Core/Src/robot/robot_functions.cpp ****  * \brief this function needs to be called every 10 ms unti it reaches the desired position.
  30:Core/Src/robot/robot_functions.cpp ****  * \params: number of steps and angle in degree the robot has to reach.
  31:Core/Src/robot/robot_functions.cpp ****  * \returns true if robot reaches to the provided steps and angle.
  32:Core/Src/robot/robot_functions.cpp ****  * The angles that are caalibrated in degrees needs to be converted to radian.
  33:Core/Src/robot/robot_functions.cpp ****  * The function move_leg() is called at the beginning which moves the leg upto the desired point.
  34:Core/Src/robot/robot_functions.cpp ****  * There are two parameters inside this function move_leg(), the steps parameter is used whereas th
  35:Core/Src/robot/robot_functions.cpp ****  * The condition is if statement is to ensure that the robot is not in sand dune and it has not rea
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 3


  36:Core/Src/robot/robot_functions.cpp ****  * Whenever the robot reaches the sand dune the number of steps is declared to 100, so the step != 
  37:Core/Src/robot/robot_functions.cpp ****  * The function calculate_robot_angle() calculates its relative position from the initial state and
  38:Core/Src/robot/robot_functions.cpp ****  * This function operates until the desired steps and desired angles is reached. This is ensured by
  39:Core/Src/robot/robot_functions.cpp ****  * After the desired step and angle is reached, the function returns True.
  40:Core/Src/robot/robot_functions.cpp **** */
  41:Core/Src/robot/robot_functions.cpp **** bool go(int step, float angle)
  42:Core/Src/robot/robot_functions.cpp **** {
  43:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
  44:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
  45:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
  46:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
  47:Core/Src/robot/robot_functions.cpp **** 	}
  48:Core/Src/robot/robot_functions.cpp **** 	else{
  49:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
  50:Core/Src/robot/robot_functions.cpp **** 	}
  51:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
  52:Core/Src/robot/robot_functions.cpp **** 	//printf(" \nsteps = %d\t robot_angle = %d\t steering_angle = %d\t", (int)(leg[0].get_steps()), (i
  53:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
  54:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
  55:Core/Src/robot/robot_functions.cpp **** 
  56:Core/Src/robot/robot_functions.cpp **** 	if (((leg[0].get_steps() + leg[1].get_steps()) / 2 >= step) && (fabs(angle - robot_angle) <= 0.1))
  57:Core/Src/robot/robot_functions.cpp **** 	{
  58:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
  59:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
  60:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
  61:Core/Src/robot/robot_functions.cpp **** 		return true;
  62:Core/Src/robot/robot_functions.cpp **** 	}
  63:Core/Src/robot/robot_functions.cpp **** 	else
  64:Core/Src/robot/robot_functions.cpp **** 	{
  65:Core/Src/robot/robot_functions.cpp **** 		return false;
  66:Core/Src/robot/robot_functions.cpp **** 	}
  67:Core/Src/robot/robot_functions.cpp **** }
  68:Core/Src/robot/robot_functions.cpp **** /*
  69:Core/Src/robot/robot_functions.cpp ****  *The function move_leg() is the basic function to give speed to the motor.
  70:Core/Src/robot/robot_functions.cpp ****  *\return params: void
  71:Core/Src/robot/robot_functions.cpp ****  *\input parameter: steps, angle
  72:Core/Src/robot/robot_functions.cpp ****  *This function takes two input parameters: step and angle. Although the parameter angle is not use
  73:Core/Src/robot/robot_functions.cpp ****  *The variable leg_speed stores the value of speed. When the robot is in sand_dune region, the spee
  74:Core/Src/robot/robot_functions.cpp ****  *The variable del_speed stores the value of difference in speed in case where the legs are not in 
  75:Core/Src/robot/robot_functions.cpp ****  *If the legs are not in 180 degrees phase difference, some calculations need to be made in order t
  76:Core/Src/robot/robot_functions.cpp ****  *This is done by evaluating the angles every time. Whenever the returned angle is not in the desir
  77:Core/Src/robot/robot_functions.cpp ****  *difference is the two leg angles multiplied by leg_speed which is again multiplied by the factor 
  78:Core/Src/robot/robot_functions.cpp ****  *Following the above reference, the leg_speed is calculated in closed loop basis.
  79:Core/Src/robot/robot_functions.cpp **** */
  80:Core/Src/robot/robot_functions.cpp **** void move_leg(int step, float angle)
  81:Core/Src/robot/robot_functions.cpp **** {
  82:Core/Src/robot/robot_functions.cpp **** 	float del_speed = 0;
  83:Core/Src/robot/robot_functions.cpp **** 	float damping_constant = 0.65;
  84:Core/Src/robot/robot_functions.cpp **** 	//Setting the slow speed in sand dune and tussok
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.35 : robot_speed;
  86:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[6]){
  87:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 5;
  88:Core/Src/robot/robot_functions.cpp **** 	}
  89:Core/Src/robot/robot_functions.cpp **** 	
  90:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2*(leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
  91:Core/Src/robot/robot_functions.cpp **** 	if(fabs(del_speed) >= leg_speed){
  92:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 4


  93:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
  94:Core/Src/robot/robot_functions.cpp **** 	}
  95:Core/Src/robot/robot_functions.cpp **** 	float damping_factor = (cos(2*leg[0].get_angle())) * leg_speed * damping_constant;
  96:Core/Src/robot/robot_functions.cpp **** 	leg_speed -= damping_factor;
  97:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
  98:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
  99:Core/Src/robot/robot_functions.cpp **** 	// printf("\t%d \t%d \t", (int)(leg_speed + del_speed), (int)(leg_speed - del_speed));
 100:Core/Src/robot/robot_functions.cpp **** }
 101:Core/Src/robot/robot_functions.cpp **** 
 102:Core/Src/robot/robot_functions.cpp **** /*
 103:Core/Src/robot/robot_functions.cpp ****  *The function move_steering() is concerned with moving the steering to certain angle with certain 
 104:Core/Src/robot/robot_functions.cpp ****  *Return patameter: void
 105:Core/Src/robot/robot_functions.cpp ****  *Input parameters: step, angle
 106:Core/Src/robot/robot_functions.cpp ****  *During initialization, the summation_angle is set to 0. After the robot starts to move, there is 
 107:Core/Src/robot/robot_functions.cpp ****  * This error of course needs to be minimized. This minimization is done by  summing all the drifts
 108:Core/Src/robot/robot_functions.cpp ****  * that it gives to the robot. Whenever the steering sets the angle for robot, this error is also a
 109:Core/Src/robot/robot_functions.cpp ****  * The robot changes the angle whenever the outside leg is raised. For the robot and leg to be in t
 110:Core/Src/robot/robot_functions.cpp ****  * the outside leg is in fallen state.
 111:Core/Src/robot/robot_functions.cpp **** */
 112:Core/Src/robot/robot_functions.cpp **** void move_steering(int step, float angle)
 113:Core/Src/robot/robot_functions.cpp **** {
 114:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[0]){
 115:Core/Src/robot/robot_functions.cpp **** 		summation_angle +=robot_angle;
 116:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 117:Core/Src/robot/robot_functions.cpp **** 		angle /= 100;
 118:Core/Src/robot/robot_functions.cpp **** 	}
 119:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 120:Core/Src/robot/robot_functions.cpp **** 	{
 121:Core/Src/robot/robot_functions.cpp **** 		// printf("  raised  ");
 122:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 123:Core/Src/robot/robot_functions.cpp **** 	}
 124:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 125:Core/Src/robot/robot_functions.cpp **** 	{
 126:Core/Src/robot/robot_functions.cpp **** 		// printf("  fallen  ");
 127:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 128:Core/Src/robot/robot_functions.cpp **** 	}
 129:Core/Src/robot/robot_functions.cpp **** 	else
 130:Core/Src/robot/robot_functions.cpp **** 	{
 131:Core/Src/robot/robot_functions.cpp **** 		// printf("  nothing  ");
 132:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 133:Core/Src/robot/robot_functions.cpp **** 	}
 134:Core/Src/robot/robot_functions.cpp **** }
 135:Core/Src/robot/robot_functions.cpp **** /*
 136:Core/Src/robot/robot_functions.cpp ****  * The function set_angle() is concerned with setting the angle for steering.
 137:Core/Src/robot/robot_functions.cpp ****  * Return params : void
 138:Core/Src/robot/robot_functions.cpp ****  * Input patams : angle
 139:Core/Src/robot/robot_functions.cpp ****  * The variable del_angle stores the differnece in given input angle and the current angle returned
 140:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns positive value, it depicts that the robot has already reached the angl
 141:Core/Src/robot/robot_functions.cpp ****  * TO correct this to the desired angle the angle needs to be set.
 142:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns a negative value, it depicts that the robot has not reached the desire
 143:Core/Src/robot/robot_functions.cpp **** */
 144:Core/Src/robot/robot_functions.cpp **** void set_angle(float angle)
 145:Core/Src/robot/robot_functions.cpp **** {
 146:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 147:Core/Src/robot/robot_functions.cpp **** 	// printf("\tdel_angle = %d\t", (int)(del_angle));
 148:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 149:Core/Src/robot/robot_functions.cpp **** 	{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 5


 150:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 151:Core/Src/robot/robot_functions.cpp **** 	}
 152:Core/Src/robot/robot_functions.cpp **** 	else
 153:Core/Src/robot/robot_functions.cpp **** 	{
 154:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 155:Core/Src/robot/robot_functions.cpp **** 	}
 156:Core/Src/robot/robot_functions.cpp **** 	//*/
 157:Core/Src/robot/robot_functions.cpp **** }
 158:Core/Src/robot/robot_functions.cpp **** /*
 159:Core/Src/robot/robot_functions.cpp ****  * This function correct_steering_angle() is called whenever the outside leg is fallen and the stee
 160:Core/Src/robot/robot_functions.cpp ****  * return param: void
 161:Core/Src/robot/robot_functions.cpp ****  * input params: angle
 162:Core/Src/robot/robot_functions.cpp ****  * same as set_angle function. the difference is this function is called whenever the leg is not ra
 163:Core/Src/robot/robot_functions.cpp ****  * the leg is raised.
 164:Core/Src/robot/robot_functions.cpp **** */
 165:Core/Src/robot/robot_functions.cpp **** void correct_steering_angle(float angle)
 166:Core/Src/robot/robot_functions.cpp **** {
 167:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 168:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 169:Core/Src/robot/robot_functions.cpp **** 	{
 170:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 171:Core/Src/robot/robot_functions.cpp **** 		// printf("center_alligned\t");
 172:Core/Src/robot/robot_functions.cpp **** 	}
 173:Core/Src/robot/robot_functions.cpp **** 	else
 174:Core/Src/robot/robot_functions.cpp **** 	{
 175:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 176:Core/Src/robot/robot_functions.cpp **** 		// printf("peak_alligned\t");
 177:Core/Src/robot/robot_functions.cpp **** 	}
 178:Core/Src/robot/robot_functions.cpp **** 	//*/
 179:Core/Src/robot/robot_functions.cpp **** }
 180:Core/Src/robot/robot_functions.cpp **** /**
 181:Core/Src/robot/robot_functions.cpp ****  * This function calculate_robot_angle() calculates the relative robot angle from the initial posit
 182:Core/Src/robot/robot_functions.cpp ****  * to zero and all other angles are taken with reference to this initial angle.
 183:Core/Src/robot/robot_functions.cpp ****  * return param : void
 184:Core/Src/robot/robot_functions.cpp ****  * /params input parameters : void
 185:Core/Src/robot/robot_functions.cpp ****  * The variable robot_angle stores the realtive value of robot angle from the original position
 186:Core/Src/robot/robot_functions.cpp ****  * The temp_robot_angle is just the temporary variable.
 187:Core/Src/robot/robot_functions.cpp **** */
 188:Core/Src/robot/robot_functions.cpp **** void calculate_robot_angle()
 189:Core/Src/robot/robot_functions.cpp **** {
 190:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 191:Core/Src/robot/robot_functions.cpp **** 	{
 192:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 193:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 194:Core/Src/robot/robot_functions.cpp **** 	}
 195:Core/Src/robot/robot_functions.cpp **** 	else
 196:Core/Src/robot/robot_functions.cpp **** 	{
 197:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 198:Core/Src/robot/robot_functions.cpp **** 		{
 199:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 200:Core/Src/robot/robot_functions.cpp **** 		}
 201:Core/Src/robot/robot_functions.cpp **** 		else
 202:Core/Src/robot/robot_functions.cpp **** 		{
 203:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 204:Core/Src/robot/robot_functions.cpp **** 		}
 205:Core/Src/robot/robot_functions.cpp **** 	}
 206:Core/Src/robot/robot_functions.cpp **** }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 6


 207:Core/Src/robot/robot_functions.cpp **** 
 208:Core/Src/robot/robot_functions.cpp **** /**
 209:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the robot in erected position at the start of the game.
 210:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 211:Core/Src/robot/robot_functions.cpp ****  * \params void
 212:Core/Src/robot/robot_functions.cpp ****  * \returns void
 213:Core/Src/robot/robot_functions.cpp ****  */ 
 214:Core/Src/robot/robot_functions.cpp **** 
 215:Core/Src/robot/robot_functions.cpp **** void initialize_position(void)
 216:Core/Src/robot/robot_functions.cpp **** {
 217:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 218:Core/Src/robot/robot_functions.cpp **** 	while (true)
 219:Core/Src/robot/robot_functions.cpp **** 	{
 220:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 221:Core/Src/robot/robot_functions.cpp **** 		{
 222:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 223:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Leg_Orientation\t");
 224:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 225:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 226:Core/Src/robot/robot_functions.cpp **** 				break;
 227:Core/Src/robot/robot_functions.cpp **** 		}
 228:Core/Src/robot/robot_functions.cpp **** 	}
 229:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 230:Core/Src/robot/robot_functions.cpp **** 	{
 231:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 232:Core/Src/robot/robot_functions.cpp **** 		{
 233:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 234:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 235:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 236:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 237:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 238:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 239:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 240:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_actual_angle(90 * PI / 180);
 241:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_actual_angle(90 * PI / 180);
 242:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 243:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 244:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 245:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 246:Core/Src/robot/robot_functions.cpp **** 		}
 247:Core/Src/robot/robot_functions.cpp **** 	}
 248:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 249:Core/Src/robot/robot_functions.cpp **** 	while (true)
 250:Core/Src/robot/robot_functions.cpp **** 	{
 251:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 252:Core/Src/robot/robot_functions.cpp **** 		{
 253:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 254:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 255:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 256:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 257:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 258:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 259:Core/Src/robot/robot_functions.cpp **** 				break;
 260:Core/Src/robot/robot_functions.cpp **** 		}
 261:Core/Src/robot/robot_functions.cpp **** 	}
 262:Core/Src/robot/robot_functions.cpp **** }
 263:Core/Src/robot/robot_functions.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 7


 264:Core/Src/robot/robot_functions.cpp **** /**
 265:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the leg in erected position at the start of the game.
 266:Core/Src/robot/robot_functions.cpp ****  * \params void
 267:Core/Src/robot/robot_functions.cpp ****  * \returns true if leg is erected.
 268:Core/Src/robot/robot_functions.cpp ****  */ 
 269:Core/Src/robot/robot_functions.cpp **** bool initialize_leg_position(void)
 270:Core/Src/robot/robot_functions.cpp **** {
 271:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 272:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 273:Core/Src/robot/robot_functions.cpp **** 	static bool leg0_flag = false;
 274:Core/Src/robot/robot_functions.cpp **** 	static bool leg1_flag = false;
 275:Core/Src/robot/robot_functions.cpp **** 
 276:Core/Src/robot/robot_functions.cpp **** 	printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 277:Core/Src/robot/robot_functions.cpp **** 	, leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].get_a
 278:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 279:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 280:Core/Src/robot/robot_functions.cpp **** 	{
 281:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 282:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 283:Core/Src/robot/robot_functions.cpp **** 	}
 284:Core/Src/robot/robot_functions.cpp **** 	else
 285:Core/Src/robot/robot_functions.cpp **** 	{
 286:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(5);
 287:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 288:Core/Src/robot/robot_functions.cpp **** 	}
 289:Core/Src/robot/robot_functions.cpp **** 
 290:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 291:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 292:Core/Src/robot/robot_functions.cpp **** 	{
 293:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 294:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 295:Core/Src/robot/robot_functions.cpp **** 	}
 296:Core/Src/robot/robot_functions.cpp **** 	else
 297:Core/Src/robot/robot_functions.cpp **** 	{
 298:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(5);
 299:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 300:Core/Src/robot/robot_functions.cpp **** 	}
 301:Core/Src/robot/robot_functions.cpp **** 
 302:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 303:Core/Src/robot/robot_functions.cpp **** 	{
 304:Core/Src/robot/robot_functions.cpp **** 		
 305:Core/Src/robot/robot_functions.cpp **** 		return true;
 306:Core/Src/robot/robot_functions.cpp **** 	}
 307:Core/Src/robot/robot_functions.cpp **** 	else
 308:Core/Src/robot/robot_functions.cpp **** 	{
 309:Core/Src/robot/robot_functions.cpp **** 		return false;
 310:Core/Src/robot/robot_functions.cpp **** 	}
 311:Core/Src/robot/robot_functions.cpp **** }
 312:Core/Src/robot/robot_functions.cpp **** 
 313:Core/Src/robot/robot_functions.cpp **** /**
 314:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 315:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the steering in center position at the start of the game.
 316:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 317:Core/Src/robot/robot_functions.cpp ****  * \params void
 318:Core/Src/robot/robot_functions.cpp ****  * \returns true if reached to 0 angle.
 319:Core/Src/robot/robot_functions.cpp ****  */ 
 320:Core/Src/robot/robot_functions.cpp **** bool initialize_steering_position(void)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 8


 321:Core/Src/robot/robot_functions.cpp **** {
 322:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 323:Core/Src/robot/robot_functions.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 324:Core/Src/robot/robot_functions.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 325:Core/Src/robot/robot_functions.cpp **** 	if(((HAL_GetTick()-start_time) >= 800)){
 326:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 327:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 328:Core/Src/robot/robot_functions.cpp **** 		return true;	
 329:Core/Src/robot/robot_functions.cpp **** 	}
 330:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 331:Core/Src/robot/robot_functions.cpp **** 	{
 332:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 333:Core/Src/robot/robot_functions.cpp **** 		steering.reset_angle(0);
 334:Core/Src/robot/robot_functions.cpp **** 		return true;
 335:Core/Src/robot/robot_functions.cpp **** 	}
 336:Core/Src/robot/robot_functions.cpp **** 	else
 337:Core/Src/robot/robot_functions.cpp **** 	{
 338:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 339:Core/Src/robot/robot_functions.cpp **** 		return false;
 340:Core/Src/robot/robot_functions.cpp **** 	}	
 341:Core/Src/robot/robot_functions.cpp **** }
 342:Core/Src/robot/robot_functions.cpp **** 
 343:Core/Src/robot/robot_functions.cpp **** /**
 344:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 345:Core/Src/robot/robot_functions.cpp ****  * \brief This function calculates all the datas including the motor omegas, orientation and angles
 346:Core/Src/robot/robot_functions.cpp ****  * \remarks remember to call this function only once in every 10 ms.
 347:Core/Src/robot/robot_functions.cpp ****  * \params void
 348:Core/Src/robot/robot_functions.cpp ****  * \returns void
 349:Core/Src/robot/robot_functions.cpp ****  */
 350:Core/Src/robot/robot_functions.cpp **** void calculate_datas()
 351:Core/Src/robot/robot_functions.cpp **** {
 352:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 353:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 354:Core/Src/robot/robot_functions.cpp **** 	steering.calculate_omega();
 355:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 356:Core/Src/robot/robot_functions.cpp **** 	if(leg[0].is_raised()){
 357:Core/Src/robot/robot_functions.cpp **** 		calculate_robot_angle();
 358:Core/Src/robot/robot_functions.cpp **** 	}
 359:Core/Src/robot/robot_functions.cpp **** 	// printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 360:Core/Src/robot/robot_functions.cpp **** 	HAL_ADC_Start(&hadc1);
 361:Core/Src/robot/robot_functions.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 362:Core/Src/robot/robot_functions.cpp **** 	{
 363:Core/Src/robot/robot_functions.cpp **** 		robotx = HAL_ADC_GetValue(&hadc1);
 364:Core/Src/robot/robot_functions.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 365:Core/Src/robot/robot_functions.cpp **** 	}
 366:Core/Src/robot/robot_functions.cpp **** }...
  51              		.loc 2 366 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 366 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 9


  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 366 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB103:
  75              	.LBB104:
  76              	.LBB105:
  77              	.LBB106:
  78              	.LBB107:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE107:
  86              	.LBE106:
  87              	.LBB108:
  88              	.LBB109:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE109:
  93              	.LBE108:
  94              	.LBB110:
  95              	.LBB111:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE111:
 100              	.LBE110:
 101              	.LBE105:
 102              	.LBE104:
 103              	.LBE103:
   8:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
 104              		.loc 2 8 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 10


 111              	.LVL8:
 112              	.LBB112:
 113              	.LBB113:
 114              	.LBB114:
 115              	.LBB115:
 116              	.LBB116:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE116:
 122              	.LBE115:
 123              	.LBB117:
 124              	.LBB118:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE118:
 129              	.LBE117:
 130              	.LBB119:
 131              	.LBB120:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE120:
 136              	.LBE119:
 137              	.LBE114:
 138              	.LBE113:
 139              	.LBE112:
   9:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
 140              		.loc 2 9 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 366 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE513:
 157              		.section	.text._Z8move_legif,"ax",%progbits
 158              		.align	1
 159              		.global	_Z8move_legif
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	_Z8move_legif:
 166              	.LFB493:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 11


  81:Core/Src/robot/robot_functions.cpp **** {
 167              		.loc 2 81 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              	.LVL13:
 172 0000 38B5     		push	{r3, r4, r5, lr}
 173              	.LCFI1:
 174              		.cfi_def_cfa_offset 16
 175              		.cfi_offset 3, -16
 176              		.cfi_offset 4, -12
 177              		.cfi_offset 5, -8
 178              		.cfi_offset 14, -4
 179 0002 2DED028B 		vpush.64	{d8}
 180              	.LCFI2:
 181              		.cfi_def_cfa_offset 24
 182              		.cfi_offset 80, -24
 183              		.cfi_offset 81, -20
 184              	.LVL14:
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.35 : robot_speed;
 185              		.loc 2 85 0
 186 0006 6428     		cmp	r0, #100
 187 0008 50D0     		beq	.L16
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.35 : robot_speed;
 188              		.loc 2 85 0 is_stmt 0 discriminator 2
 189 000a 2B4B     		ldr	r3, .L22
 190 000c 1B69     		ldr	r3, [r3, #16]
 191 000e 8342     		cmp	r3, r0
 192 0010 4AD0     		beq	.L20
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.35 : robot_speed;
 193              		.loc 2 85 0
 194 0012 2A4A     		ldr	r2, .L22+4
 195              	.L12:
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.35 : robot_speed;
 196              		.loc 2 85 0 discriminator 6
 197 0014 2A4B     		ldr	r3, .L22+8
 198 0016 1A60     		str	r2, [r3]	@ float
  86:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[6]){
 199              		.loc 2 86 0 is_stmt 1 discriminator 6
 200 0018 274B     		ldr	r3, .L22
 201 001a 9B69     		ldr	r3, [r3, #24]
 202 001c 8342     		cmp	r3, r0
 203 001e 47D0     		beq	.L21
 204              	.L13:
 205              	.LVL15:
 206              	.LBB121:
 207              	.LBB122:
 208              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 12


  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 209              		.loc 3 48 0
 210 0020 284C     		ldr	r4, .L22+12
 211 0022 2046     		mov	r0, r4
 212              	.LVL16:
 213 0024 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 214              	.LVL17:
 215 0028 B0EE408A 		vmov.f32	s16, s0
 216              	.LVL18:
 217              	.LBE122:
 218              	.LBE121:
 219              	.LBB123:
 220              	.LBB124:
 221 002c 04F15800 		add	r0, r4, #88
 222 0030 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 223              	.LVL19:
 224              	.LBE124:
 225              	.LBE123:
  90:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2*(leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 13


 226              		.loc 2 90 0
 227 0034 38EE400A 		vsub.f32	s0, s16, s0
 228 0038 30EE000A 		vadd.f32	s0, s0, s0
 229 003c 204B     		ldr	r3, .L22+8
 230 003e D3ED007A 		vldr.32	s15, [r3]
 231 0042 20EE278A 		vmul.f32	s16, s0, s15
 232              	.LVL20:
 233              	.LBB125:
 234              	.LBB126:
 235              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 14


  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 15


 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 16


 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 17


 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 236              		.loc 4 242 0
 237 0046 B0EEC87A 		vabs.f32	s14, s16
 238              	.LVL21:
 239              	.LBE126:
 240              	.LBE125:
  91:Core/Src/robot/robot_functions.cpp **** 	if(fabs(del_speed) >= leg_speed){
 241              		.loc 2 91 0
 242 004a F4EEC77A 		vcmpe.f32	s15, s14
 243 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 244 0052 03D8     		bhi	.L14
  92:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 245              		.loc 2 92 0
 246 0054 C8EE076A 		vdiv.f32	s13, s16, s14
 247              	.LVL22:
  93:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 248              		.loc 2 93 0
 249 0058 27EEA68A 		vmul.f32	s16, s15, s13
 250              	.LVL23:
 251              	.L14:
 252              	.LBB127:
 253              	.LBB128:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 254              		.loc 3 47 0
 255 005c 194C     		ldr	r4, .L22+12
 256 005e 2046     		mov	r0, r4
 257 0060 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 258              	.LVL24:
 259              	.LBE128:
 260              	.LBE127:
 261              	.LBB129:
 262              	.LBB130:
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 263              		.loc 4 185 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 18


 264 0064 30EE000A 		vadd.f32	s0, s0, s0
 265              	.LVL25:
 266 0068 FFF7FEFF 		bl	cosf
 267              	.LVL26:
 268              	.LBE130:
 269              	.LBE129:
  95:Core/Src/robot/robot_functions.cpp **** 	float damping_factor = (cos(2*leg[0].get_angle())) * leg_speed * damping_constant;
 270              		.loc 2 95 0
 271 006c 144D     		ldr	r5, .L22+8
 272 006e D5ED007A 		vldr.32	s15, [r5]
 273 0072 27EE800A 		vmul.f32	s0, s15, s0
 274 0076 9FED147A 		vldr.32	s14, .L22+16
 275 007a 20EE070A 		vmul.f32	s0, s0, s14
 276              	.LVL27:
  96:Core/Src/robot/robot_functions.cpp **** 	leg_speed -= damping_factor;
 277              		.loc 2 96 0
 278 007e 37EEC00A 		vsub.f32	s0, s15, s0
 279              	.LVL28:
 280 0082 85ED000A 		vstr.32	s0, [r5]
  97:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 281              		.loc 2 97 0
 282 0086 3C3C     		subs	r4, r4, #60
 283 0088 30EE480A 		vsub.f32	s0, s0, s16
 284 008c 2046     		mov	r0, r4
 285 008e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 286              	.LVL29:
  98:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 287              		.loc 2 98 0
 288 0092 95ED000A 		vldr.32	s0, [r5]
 289 0096 38EE000A 		vadd.f32	s0, s16, s0
 290 009a 04F15800 		add	r0, r4, #88
 291 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 292              	.LVL30:
 100:Core/Src/robot/robot_functions.cpp **** }
 293              		.loc 2 100 0
 294 00a2 BDEC028B 		vldm	sp!, {d8}
 295              	.LCFI3:
 296              		.cfi_remember_state
 297              		.cfi_restore 80
 298              		.cfi_restore 81
 299              		.cfi_def_cfa_offset 16
 300              	.LVL31:
 301 00a6 38BD     		pop	{r3, r4, r5, pc}
 302              	.LVL32:
 303              	.L20:
 304              	.LCFI4:
 305              		.cfi_restore_state
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100 || step == steps[4]) ? robot_speed / 1.35 : robot_speed;
 306              		.loc 2 85 0
 307 00a8 084A     		ldr	r2, .L22+20
 308 00aa B3E7     		b	.L12
 309              	.L16:
 310 00ac 074A     		ldr	r2, .L22+20
 311 00ae B1E7     		b	.L12
 312              	.L21:
  87:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 5;
 313              		.loc 2 87 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 19


 314 00b0 034B     		ldr	r3, .L22+8
 315 00b2 074A     		ldr	r2, .L22+24
 316 00b4 1A60     		str	r2, [r3]	@ float
 317 00b6 B3E7     		b	.L13
 318              	.L23:
 319              		.align	2
 320              	.L22:
 321 00b8 00000000 		.word	steps
 322 00bc 0000E040 		.word	1088421888
 323 00c0 00000000 		.word	.LANCHOR2
 324 00c4 3C000000 		.word	leg+60
 325 00c8 6666263F 		.word	1059481190
 326 00cc 09EDA540 		.word	1084615945
 327 00d0 0000A040 		.word	1084227584
 328              		.cfi_endproc
 329              	.LFE493:
 331              		.global	__aeabi_f2d
 332              		.global	__aeabi_ddiv
 333              		.global	__aeabi_d2f
 334              		.global	__aeabi_dcmpgt
 335              		.global	__aeabi_dcmplt
 336              		.section	.text._Z9set_anglef,"ax",%progbits
 337              		.align	1
 338              		.global	_Z9set_anglef
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
 344              	_Z9set_anglef:
 345              	.LFB495:
 145:Core/Src/robot/robot_functions.cpp **** {
 346              		.loc 2 145 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL33:
 351 0000 08B5     		push	{r3, lr}
 352              	.LCFI5:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 356 0002 2DED028B 		vpush.64	{d8}
 357              	.LCFI6:
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 80, -16
 360              		.cfi_offset 81, -12
 146:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 361              		.loc 2 146 0
 362 0006 264B     		ldr	r3, .L38+24
 363 0008 D3ED007A 		vldr.32	s15, [r3]
 364 000c 30EE670A 		vsub.f32	s0, s0, s15
 365              	.LVL34:
 366 0010 DFED247A 		vldr.32	s15, .L38+28
 367 0014 60EE277A 		vmul.f32	s15, s0, s15
 368 0018 17EE900A 		vmov	r0, s15
 369 001c FFF7FEFF 		bl	__aeabi_f2d
 370              	.LVL35:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 20


 371 0020 19A3     		adr	r3, .L38
 372 0022 D3E90023 		ldrd	r2, [r3]
 373 0026 FFF7FEFF 		bl	__aeabi_ddiv
 374              	.LVL36:
 375 002a FFF7FEFF 		bl	__aeabi_d2f
 376              	.LVL37:
 377 002e 08EE100A 		vmov	s16, r0
 378              	.LVL38:
 148:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 379              		.loc 2 148 0
 380 0032 B5EEC08A 		vcmpe.f32	s16, #0
 381 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 382 003a 12DB     		blt	.L35
 150:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 383              		.loc 2 150 0
 384 003c FFF7FEFF 		bl	__aeabi_f2d
 385              	.LVL39:
 386 0040 13A3     		adr	r3, .L38+8
 387 0042 D3E90023 		ldrd	r2, [r3]
 388 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 389              	.LVL40:
 390 004a 38B9     		cbnz	r0, .L37
 391              	.LVL41:
 392              	.L27:
 150:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 393              		.loc 2 150 0 is_stmt 0 discriminator 4
 394 004c B0EE480A 		vmov.f32	s0, s16
 395 0050 1548     		ldr	r0, .L38+32
 396 0052 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 397              	.LVL42:
 398              	.L24:
 157:Core/Src/robot/robot_functions.cpp **** }
 399              		.loc 2 157 0 is_stmt 1
 400 0056 BDEC028B 		vldm	sp!, {d8}
 401              	.LCFI7:
 402              		.cfi_remember_state
 403              		.cfi_restore 80
 404              		.cfi_restore 81
 405              		.cfi_def_cfa_offset 8
 406 005a 08BD     		pop	{r3, pc}
 407              	.LVL43:
 408              	.L37:
 409              	.LCFI8:
 410              		.cfi_restore_state
 150:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 411              		.loc 2 150 0
 412 005c B1EE088A 		vmov.f32	s16, #6.0e+0
 413              	.LVL44:
 414 0060 F4E7     		b	.L27
 415              	.LVL45:
 416              	.L35:
 154:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 417              		.loc 2 154 0
 418 0062 FFF7FEFF 		bl	__aeabi_f2d
 419              	.LVL46:
 420 0066 0CA3     		adr	r3, .L38+16
 421 0068 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 21


 422 006c FFF7FEFF 		bl	__aeabi_dcmplt
 423              	.LVL47:
 424 0070 08B1     		cbz	r0, .L30
 425 0072 B9EE088A 		vmov.f32	s16, #-6.0e+0
 426              	.LVL48:
 427              	.L30:
 154:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 428              		.loc 2 154 0 is_stmt 0 discriminator 4
 429 0076 B0EE480A 		vmov.f32	s0, s16
 430 007a 0B48     		ldr	r0, .L38+32
 431 007c FFF7FEFF 		bl	_ZN8steering9set_angleEf
 432              	.LVL49:
 157:Core/Src/robot/robot_functions.cpp **** }
 433              		.loc 2 157 0 is_stmt 1 discriminator 4
 434 0080 E9E7     		b	.L24
 435              	.L39:
 436 0082 00BFAFF3 		.align	3
 436      0080
 437              	.L38:
 438 0088 182D4454 		.word	1413754136
 439 008c FB210940 		.word	1074340347
 440 0090 8DD80401 		.word	17094797
 441 0094 00001840 		.word	1075314688
 442 0098 8DD80401 		.word	17094797
 443 009c 000018C0 		.word	-1072168960
 444 00a0 00000000 		.word	.LANCHOR3
 445 00a4 00003443 		.word	1127481344
 446 00a8 00000000 		.word	steering
 447              		.cfi_endproc
 448              	.LFE495:
 450              		.global	__aeabi_dcmple
 451              		.section	.text._Z22correct_steering_anglef,"ax",%progbits
 452              		.align	1
 453              		.global	_Z22correct_steering_anglef
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv4-sp-d16
 459              	_Z22correct_steering_anglef:
 460              	.LFB496:
 166:Core/Src/robot/robot_functions.cpp **** {
 461              		.loc 2 166 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              	.LVL50:
 466 0000 08B5     		push	{r3, lr}
 467              	.LCFI9:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 3, -8
 470              		.cfi_offset 14, -4
 471 0002 2DED028B 		vpush.64	{d8}
 472              	.LCFI10:
 473              		.cfi_def_cfa_offset 16
 474              		.cfi_offset 80, -16
 475              		.cfi_offset 81, -12
 167:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 22


 476              		.loc 2 167 0
 477 0006 204B     		ldr	r3, .L53+16
 478 0008 D3ED007A 		vldr.32	s15, [r3]
 479 000c 30EE670A 		vsub.f32	s0, s0, s15
 480              	.LVL51:
 481 0010 DFED1E7A 		vldr.32	s15, .L53+20
 482 0014 60EE277A 		vmul.f32	s15, s0, s15
 483 0018 17EE900A 		vmov	r0, s15
 484 001c FFF7FEFF 		bl	__aeabi_f2d
 485              	.LVL52:
 486 0020 15A3     		adr	r3, .L53
 487 0022 D3E90023 		ldrd	r2, [r3]
 488 0026 FFF7FEFF 		bl	__aeabi_ddiv
 489              	.LVL53:
 490 002a FFF7FEFF 		bl	__aeabi_d2f
 491              	.LVL54:
 492 002e 08EE100A 		vmov	s16, r0
 493              	.LVL55:
 168:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 494              		.loc 2 168 0
 495 0032 F0EEC87A 		vabs.f32	s15, s16
 496 0036 17EE900A 		vmov	r0, s15
 497              	.LVL56:
 498 003a FFF7FEFF 		bl	__aeabi_f2d
 499              	.LVL57:
 500 003e 10A3     		adr	r3, .L53+8
 501 0040 D3E90023 		ldrd	r2, [r3]
 502 0044 FFF7FEFF 		bl	__aeabi_dcmple
 503              	.LVL58:
 504 0048 60B9     		cbnz	r0, .L52
 175:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 505              		.loc 2 175 0
 506 004a B5EEC08A 		vcmpe.f32	s16, #0
 507 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 508 0052 0DDD     		ble	.L50
 509 0054 B9EE080A 		vmov.f32	s0, #-6.0e+0
 510              	.L44:
 175:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 511              		.loc 2 175 0 is_stmt 0 discriminator 4
 512 0058 0D48     		ldr	r0, .L53+24
 513 005a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 514              	.LVL59:
 515              	.L40:
 179:Core/Src/robot/robot_functions.cpp **** }
 516              		.loc 2 179 0 is_stmt 1
 517 005e BDEC028B 		vldm	sp!, {d8}
 518              	.LCFI11:
 519              		.cfi_remember_state
 520              		.cfi_restore 80
 521              		.cfi_restore 81
 522              		.cfi_def_cfa_offset 8
 523              	.LVL60:
 524 0062 08BD     		pop	{r3, pc}
 525              	.LVL61:
 526              	.L52:
 527              	.LCFI12:
 528              		.cfi_restore_state
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 23


 170:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 529              		.loc 2 170 0
 530 0064 9FED0B0A 		vldr.32	s0, .L53+28
 531 0068 0948     		ldr	r0, .L53+24
 532 006a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 533              	.LVL62:
 534 006e F6E7     		b	.L40
 535              	.L50:
 175:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 536              		.loc 2 175 0
 537 0070 B1EE080A 		vmov.f32	s0, #6.0e+0
 538 0074 F0E7     		b	.L44
 539              	.L54:
 540 0076 00BF     		.align	3
 541              	.L53:
 542 0078 182D4454 		.word	1413754136
 543 007c FB210940 		.word	1074340347
 544 0080 8DD80401 		.word	17094797
 545 0084 00001840 		.word	1075314688
 546 0088 00000000 		.word	.LANCHOR3
 547 008c 00003443 		.word	1127481344
 548 0090 00000000 		.word	steering
 549 0094 00000000 		.word	0
 550              		.cfi_endproc
 551              	.LFE496:
 553              		.section	.text._Z13move_steeringif,"ax",%progbits
 554              		.align	1
 555              		.global	_Z13move_steeringif
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_Z13move_steeringif:
 562              	.LFB494:
 113:Core/Src/robot/robot_functions.cpp **** {
 563              		.loc 2 113 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              	.LVL63:
 568 0000 08B5     		push	{r3, lr}
 569              	.LCFI13:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 3, -8
 572              		.cfi_offset 14, -4
 573 0002 2DED028B 		vpush.64	{d8}
 574              	.LCFI14:
 575              		.cfi_def_cfa_offset 16
 576              		.cfi_offset 80, -16
 577              		.cfi_offset 81, -12
 578 0006 B0EE408A 		vmov.f32	s16, s0
 114:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[0]){
 579              		.loc 2 114 0
 580 000a 184B     		ldr	r3, .L64
 581 000c 1B68     		ldr	r3, [r3]
 582 000e 8342     		cmp	r3, r0
 583 0010 0ED0     		beq	.L61
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 24


 584              	.LVL64:
 585              	.L56:
 119:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 586              		.loc 2 119 0
 587 0012 1748     		ldr	r0, .L64+4
 588              	.LVL65:
 589 0014 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 590              	.LVL66:
 591 0018 D8B1     		cbz	r0, .L62
 124:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 592              		.loc 2 124 0
 593 001a 1548     		ldr	r0, .L64+4
 594 001c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 595              	.LVL67:
 596 0020 0128     		cmp	r0, #1
 597 0022 1DD0     		beq	.L63
 132:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 598              		.loc 2 132 0
 599 0024 9FED130A 		vldr.32	s0, .L64+8
 600 0028 1348     		ldr	r0, .L64+12
 601 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 602              	.LVL68:
 134:Core/Src/robot/robot_functions.cpp **** }
 603              		.loc 2 134 0
 604 002e 14E0     		b	.L55
 605              	.LVL69:
 606              	.L61:
 115:Core/Src/robot/robot_functions.cpp **** 		summation_angle +=robot_angle;
 607              		.loc 2 115 0
 608 0030 124B     		ldr	r3, .L64+16
 609 0032 D3ED007A 		vldr.32	s15, [r3]
 610 0036 124A     		ldr	r2, .L64+20
 611 0038 92ED007A 		vldr.32	s14, [r2]
 612 003c 77EE877A 		vadd.f32	s15, s15, s14
 613 0040 C3ED007A 		vstr.32	s15, [r3]
 116:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 614              		.loc 2 116 0
 615 0044 F1EE677A 		vneg.f32	s15, s15
 616              	.LVL70:
 117:Core/Src/robot/robot_functions.cpp **** 		angle /= 100;
 617              		.loc 2 117 0
 618 0048 9FED0E7A 		vldr.32	s14, .L64+24
 619 004c 87EE878A 		vdiv.f32	s16, s15, s14
 620              	.LVL71:
 621 0050 DFE7     		b	.L56
 622              	.LVL72:
 623              	.L62:
 122:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 624              		.loc 2 122 0
 625 0052 B0EE480A 		vmov.f32	s0, s16
 626 0056 FFF7FEFF 		bl	_Z9set_anglef
 627              	.LVL73:
 628              	.L55:
 134:Core/Src/robot/robot_functions.cpp **** }
 629              		.loc 2 134 0
 630 005a BDEC028B 		vldm	sp!, {d8}
 631              	.LCFI15:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 25


 632              		.cfi_remember_state
 633              		.cfi_restore 80
 634              		.cfi_restore 81
 635              		.cfi_def_cfa_offset 8
 636              	.LVL74:
 637 005e 08BD     		pop	{r3, pc}
 638              	.LVL75:
 639              	.L63:
 640              	.LCFI16:
 641              		.cfi_restore_state
 127:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 642              		.loc 2 127 0
 643 0060 B0EE480A 		vmov.f32	s0, s16
 644 0064 FFF7FEFF 		bl	_Z22correct_steering_anglef
 645              	.LVL76:
 646 0068 F7E7     		b	.L55
 647              	.L65:
 648 006a 00BF     		.align	2
 649              	.L64:
 650 006c 00000000 		.word	steps
 651 0070 00000000 		.word	leg
 652 0074 00000000 		.word	0
 653 0078 00000000 		.word	steering
 654 007c 00000000 		.word	.LANCHOR4
 655 0080 00000000 		.word	.LANCHOR3
 656 0084 0000C842 		.word	1120403456
 657              		.cfi_endproc
 658              	.LFE494:
 660              		.global	__aeabi_dmul
 661              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 662              		.align	1
 663              		.global	_Z21calculate_robot_anglev
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	_Z21calculate_robot_anglev:
 670              	.LFB497:
 189:Core/Src/robot/robot_functions.cpp **** {
 671              		.loc 2 189 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 08B5     		push	{r3, lr}
 676              	.LCFI17:
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 3, -8
 679              		.cfi_offset 14, -4
 680 0002 2DED028B 		vpush.64	{d8}
 681              	.LCFI18:
 682              		.cfi_def_cfa_offset 16
 683              		.cfi_offset 80, -16
 684              		.cfi_offset 81, -12
 190:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 685              		.loc 2 190 0
 686 0006 204B     		ldr	r3, .L72+8
 687 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 26


 688 000a EBB1     		cbz	r3, .L67
 689              	.LVL77:
 690              	.LBB131:
 691              	.LBB132:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 692              		.loc 1 36 0
 693 000c 1F4B     		ldr	r3, .L72+12
 694 000e 93ED027A 		vldr.32	s14, [r3, #8]
 695              	.LVL78:
 696              	.LBE132:
 697              	.LBE131:
 698              	.LBB133:
 699              	.LBB134:
 700 0012 1F4B     		ldr	r3, .L72+16
 701 0014 D3ED027A 		vldr.32	s15, [r3, #8]
 702              	.LVL79:
 703              	.LBE134:
 704              	.LBE133:
 192:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 705              		.loc 2 192 0
 706 0018 77EE677A 		vsub.f32	s15, s14, s15
 707 001c 17EE900A 		vmov	r0, s15
 708 0020 FFF7FEFF 		bl	__aeabi_f2d
 709              	.LVL80:
 710 0024 16A3     		adr	r3, .L72
 711 0026 D3E90023 		ldrd	r2, [r3]
 712 002a FFF7FEFF 		bl	__aeabi_dmul
 713              	.LVL81:
 714 002e 0022     		movs	r2, #0
 715 0030 184B     		ldr	r3, .L72+20
 716 0032 FFF7FEFF 		bl	__aeabi_ddiv
 717              	.LVL82:
 718 0036 FFF7FEFF 		bl	__aeabi_d2f
 719              	.LVL83:
 720 003a 174B     		ldr	r3, .L72+24
 721 003c 1860     		str	r0, [r3]	@ float
 193:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 722              		.loc 2 193 0
 723 003e 174B     		ldr	r3, .L72+28
 724 0040 1860     		str	r0, [r3]	@ float
 725              	.L66:
 206:Core/Src/robot/robot_functions.cpp **** }
 726              		.loc 2 206 0
 727 0042 BDEC028B 		vldm	sp!, {d8}
 728              	.LCFI19:
 729              		.cfi_remember_state
 730              		.cfi_restore 80
 731              		.cfi_restore 81
 732              		.cfi_def_cfa_offset 8
 733 0046 08BD     		pop	{r3, pc}
 734              	.L67:
 735              	.LCFI20:
 736              		.cfi_restore_state
 197:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 737              		.loc 2 197 0
 738 0048 1548     		ldr	r0, .L72+32
 739 004a FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 27


 740              	.LVL84:
 741 004e 58B9     		cbnz	r0, .L71
 203:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 742              		.loc 2 203 0
 743 0050 114B     		ldr	r3, .L72+24
 744 0052 93ED008A 		vldr.32	s16, [r3]
 745              	.LVL85:
 746              	.LBB135:
 747              	.LBB136:
 748              		.file 5 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 28


  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 29


 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 749              		.loc 5 112 0
 750 0056 1348     		ldr	r0, .L72+36
 751 0058 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 752              	.LVL86:
 753              	.LBE136:
 754              	.LBE135:
 203:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 755              		.loc 2 203 0
 756 005c 38EE400A 		vsub.f32	s0, s16, s0
 757 0060 0E4B     		ldr	r3, .L72+28
 758 0062 83ED000A 		vstr.32	s0, [r3]
 206:Core/Src/robot/robot_functions.cpp **** }
 759              		.loc 2 206 0
 760 0066 ECE7     		b	.L66
 761              	.L71:
 762              	.LVL87:
 763              	.LBB137:
 764              	.LBB138:
 765              		.loc 5 112 0
 766 0068 0E48     		ldr	r0, .L72+36
 767 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 768              	.LVL88:
 769              	.LBE138:
 770              	.LBE137:
 199:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 771              		.loc 2 199 0
 772 006e 0B4B     		ldr	r3, .L72+28
 773 0070 D3ED007A 		vldr.32	s15, [r3]
 774 0074 30EE270A 		vadd.f32	s0, s0, s15
 775 0078 074B     		ldr	r3, .L72+24
 776 007a 83ED000A 		vstr.32	s0, [r3]
 777 007e E0E7     		b	.L66
 778              	.L73:
 779              		.align	3
 780              	.L72:
 781 0080 182D4454 		.word	1413754136
 782 0084 FB210940 		.word	1074340347
 783 0088 00000000 		.word	USE_IMU_FLAG
 784 008c 00000000 		.word	.LANCHOR0
 785 0090 00000000 		.word	.LANCHOR1
 786 0094 00806640 		.word	1080459264
 787 0098 00000000 		.word	.LANCHOR3
 788 009c 00000000 		.word	.LANCHOR5
 789 00a0 00000000 		.word	leg
 790 00a4 0C000000 		.word	steering+12
 791              		.cfi_endproc
 792              	.LFE497:
 794              		.global	__aeabi_d2iz
 795              		.section	.text._Z2goif,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 30


 796              		.align	1
 797              		.global	_Z2goif
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu fpv4-sp-d16
 803              	_Z2goif:
 804              	.LFB492:
  42:Core/Src/robot/robot_functions.cpp **** {
 805              		.loc 2 42 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL89:
 810 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 811              	.LCFI21:
 812              		.cfi_def_cfa_offset 32
 813              		.cfi_offset 4, -32
 814              		.cfi_offset 5, -28
 815              		.cfi_offset 6, -24
 816              		.cfi_offset 7, -20
 817              		.cfi_offset 8, -16
 818              		.cfi_offset 9, -12
 819              		.cfi_offset 10, -8
 820              		.cfi_offset 14, -4
 821 0004 2DED028B 		vpush.64	{d8}
 822              	.LCFI22:
 823              		.cfi_def_cfa_offset 40
 824              		.cfi_offset 80, -40
 825              		.cfi_offset 81, -36
 826 0008 84B0     		sub	sp, sp, #16
 827              	.LCFI23:
 828              		.cfi_def_cfa_offset 56
 829 000a 0546     		mov	r5, r0
  43:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
 830              		.loc 2 43 0
 831 000c 10EE100A 		vmov	r0, s0
 832              	.LVL90:
 833 0010 FFF7FEFF 		bl	__aeabi_f2d
 834              	.LVL91:
 835 0014 5BA3     		adr	r3, .L86+44
 836 0016 D3E90023 		ldrd	r2, [r3]
 837 001a FFF7FEFF 		bl	__aeabi_dmul
 838              	.LVL92:
 839 001e FFF7FEFF 		bl	__aeabi_d2f
 840              	.LVL93:
 841 0022 08EE100A 		vmov	s16, r0
 842              	.LVL94:
  44:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
 843              		.loc 2 44 0
 844 0026 00EE100A 		vmov	s0, r0
 845 002a 2846     		mov	r0, r5
 846              	.LVL95:
 847 002c FFF7FEFF 		bl	_Z8move_legif
 848              	.LVL96:
  45:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
 849              		.loc 2 45 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 31


 850 0030 642D     		cmp	r5, #100
 851 0032 03D0     		beq	.L75
  45:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
 852              		.loc 2 45 0 is_stmt 0 discriminator 1
 853 0034 4C4B     		ldr	r3, .L86+16
 854 0036 9B69     		ldr	r3, [r3, #24]
 855 0038 AB42     		cmp	r3, r5
 856 003a 6DD1     		bne	.L84
 857              	.L75:
  49:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 858              		.loc 2 49 0 is_stmt 1
 859 003c 9FED4B0A 		vldr.32	s0, .L86+20
 860 0040 4B48     		ldr	r0, .L86+24
 861 0042 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 862              	.LVL97:
 863              	.L76:
  51:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 864              		.loc 2 51 0
 865 0046 FFF7FEFF 		bl	_Z21calculate_robot_anglev
 866              	.LVL98:
 867              	.LBB139:
 868              	.LBB140:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 869              		.loc 3 45 0
 870 004a 4A4C     		ldr	r4, .L86+28
 871 004c D4F810A0 		ldr	r10, [r4, #16]
 872              	.LVL99:
 873              	.LBE140:
 874              	.LBE139:
  54:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 875              		.loc 2 54 0
 876 0050 494B     		ldr	r3, .L86+32
 877 0052 D3ED007A 		vldr.32	s15, [r3]
 878 0056 DFED498A 		vldr.32	s17, .L86+36
 879 005a 67EEA87A 		vmul.f32	s15, s15, s17
 880 005e 17EE900A 		vmov	r0, s15
 881 0062 FFF7FEFF 		bl	__aeabi_f2d
 882              	.LVL100:
 883 0066 3CA3     		adr	r3, .L86
 884 0068 D3E90023 		ldrd	r2, [r3]
 885 006c FFF7FEFF 		bl	__aeabi_ddiv
 886              	.LVL101:
 887 0070 0646     		mov	r6, r0
 888 0072 0F46     		mov	r7, r1
 889              	.LVL102:
 890              	.LBB141:
 891              	.LBB142:
 892              		.loc 3 48 0
 893 0074 04F13C00 		add	r0, r4, #60
 894 0078 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 895              	.LVL103:
 896              	.LBE142:
 897              	.LBE141:
  54:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 898              		.loc 2 54 0
 899 007c 60EE287A 		vmul.f32	s15, s0, s17
 900 0080 17EE900A 		vmov	r0, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 32


 901 0084 FFF7FEFF 		bl	__aeabi_f2d
 902              	.LVL104:
 903 0088 33A3     		adr	r3, .L86
 904 008a D3E90023 		ldrd	r2, [r3]
 905 008e FFF7FEFF 		bl	__aeabi_ddiv
 906              	.LVL105:
 907 0092 8046     		mov	r8, r0
 908 0094 8946     		mov	r9, r1
 909              	.LVL106:
 910              	.LBB143:
 911              	.LBB144:
 912              		.loc 3 48 0
 913 0096 04F19400 		add	r0, r4, #148
 914 009a FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 915              	.LVL107:
 916              	.LBE144:
 917              	.LBE143:
  54:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 918              		.loc 2 54 0
 919 009e 60EE287A 		vmul.f32	s15, s0, s17
 920 00a2 17EE900A 		vmov	r0, s15
 921 00a6 FFF7FEFF 		bl	__aeabi_f2d
 922              	.LVL108:
 923 00aa 2BA3     		adr	r3, .L86
 924 00ac D3E90023 		ldrd	r2, [r3]
 925 00b0 FFF7FEFF 		bl	__aeabi_ddiv
 926              	.LVL109:
 927 00b4 CDE90201 		strd	r0, [sp, #8]
  53:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
 928              		.loc 2 53 0
 929 00b8 4046     		mov	r0, r8
 930 00ba 4946     		mov	r1, r9
 931 00bc FFF7FEFF 		bl	__aeabi_d2iz
 932              	.LVL110:
 933 00c0 8046     		mov	r8, r0
 934 00c2 3046     		mov	r0, r6
 935 00c4 3946     		mov	r1, r7
 936 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 937              	.LVL111:
 938 00ca 0646     		mov	r6, r0
 939 00cc DDE90201 		ldrd	r0, [sp, #8]
 940 00d0 FFF7FEFF 		bl	__aeabi_d2iz
 941              	.LVL112:
 942 00d4 0090     		str	r0, [sp]
 943 00d6 4346     		mov	r3, r8
 944 00d8 3246     		mov	r2, r6
 945 00da 5146     		mov	r1, r10
 946 00dc 2848     		ldr	r0, .L86+40
 947 00de FFF7FEFF 		bl	printf
 948              	.LVL113:
 949              	.LBB145:
 950              	.LBB146:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 951              		.loc 3 45 0
 952 00e2 2369     		ldr	r3, [r4, #16]
 953              	.LVL114:
 954              	.LBE146:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 33


 955              	.LBE145:
 956              	.LBB147:
 957              	.LBB148:
 958 00e4 A26E     		ldr	r2, [r4, #104]
 959              	.LVL115:
 960              	.LBE148:
 961              	.LBE147:
  56:Core/Src/robot/robot_functions.cpp **** 	if (((leg[0].get_steps() + leg[1].get_steps()) / 2 >= step) && (fabs(angle - robot_angle) <= 0.1))
 962              		.loc 2 56 0
 963 00e6 1344     		add	r3, r3, r2
 964 00e8 03EBD373 		add	r3, r3, r3, lsr #31
 965 00ec B5EB630F 		cmp	r5, r3, asr #1
 966 00f0 2CDC     		bgt	.L79
  56:Core/Src/robot/robot_functions.cpp **** 	if (((leg[0].get_steps() + leg[1].get_steps()) / 2 >= step) && (fabs(angle - robot_angle) <= 0.1))
 967              		.loc 2 56 0 is_stmt 0 discriminator 1
 968 00f2 214B     		ldr	r3, .L86+32
 969 00f4 D3ED007A 		vldr.32	s15, [r3]
 970 00f8 38EE678A 		vsub.f32	s16, s16, s15
 971              	.LVL116:
 972 00fc F0EEC87A 		vabs.f32	s15, s16
 973 0100 17EE900A 		vmov	r0, s15
 974 0104 FFF7FEFF 		bl	__aeabi_f2d
 975              	.LVL117:
 976 0108 15A3     		adr	r3, .L86+8
 977 010a D3E90023 		ldrd	r2, [r3]
 978 010e FFF7FEFF 		bl	__aeabi_dcmple
 979              	.LVL118:
 980 0112 38B9     		cbnz	r0, .L85
  65:Core/Src/robot/robot_functions.cpp **** 		return false;
 981              		.loc 2 65 0 is_stmt 1
 982 0114 0020     		movs	r0, #0
 983 0116 1AE0     		b	.L77
 984              	.LVL119:
 985              	.L84:
  46:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
 986              		.loc 2 46 0
 987 0118 B0EE480A 		vmov.f32	s0, s16
 988 011c 2846     		mov	r0, r5
 989 011e FFF7FEFF 		bl	_Z13move_steeringif
 990              	.LVL120:
 991 0122 90E7     		b	.L76
 992              	.LVL121:
 993              	.L85:
  58:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 994              		.loc 2 58 0
 995 0124 9FED118A 		vldr.32	s16, .L86+20
 996 0128 B0EE480A 		vmov.f32	s0, s16
 997 012c 2046     		mov	r0, r4
 998 012e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 999              	.LVL122:
  59:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1000              		.loc 2 59 0
 1001 0132 B0EE480A 		vmov.f32	s0, s16
 1002 0136 04F15800 		add	r0, r4, #88
 1003 013a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1004              	.LVL123:
  60:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 34


 1005              		.loc 2 60 0
 1006 013e B0EE480A 		vmov.f32	s0, s16
 1007 0142 0B48     		ldr	r0, .L86+24
 1008 0144 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1009              	.LVL124:
  61:Core/Src/robot/robot_functions.cpp **** 		return true;
 1010              		.loc 2 61 0
 1011 0148 0120     		movs	r0, #1
 1012 014a 00E0     		b	.L77
 1013              	.LVL125:
 1014              	.L79:
  65:Core/Src/robot/robot_functions.cpp **** 		return false;
 1015              		.loc 2 65 0
 1016 014c 0020     		movs	r0, #0
 1017              	.LVL126:
 1018              	.L77:
  67:Core/Src/robot/robot_functions.cpp **** }
 1019              		.loc 2 67 0
 1020 014e 04B0     		add	sp, sp, #16
 1021              	.LCFI24:
 1022              		.cfi_def_cfa_offset 40
 1023              		@ sp needed
 1024 0150 BDEC028B 		vldm	sp!, {d8}
 1025              	.LCFI25:
 1026              		.cfi_restore 80
 1027              		.cfi_restore 81
 1028              		.cfi_def_cfa_offset 32
 1029 0154 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1030              	.LVL127:
 1031              	.L87:
 1032              		.align	3
 1033              	.L86:
 1034 0158 182D4454 		.word	1413754136
 1035 015c FB210940 		.word	1074340347
 1036 0160 9A999999 		.word	-1717986918
 1037 0164 9999B93F 		.word	1069128089
 1038 0168 00000000 		.word	steps
 1039 016c 00000000 		.word	0
 1040 0170 00000000 		.word	steering
 1041 0174 00000000 		.word	leg
 1042 0178 00000000 		.word	.LANCHOR3
 1043 017c 00003443 		.word	1127481344
 1044 0180 00000000 		.word	.LC0
 1045 0184 399D52A2 		.word	-1571644103
 1046 0188 46DF913F 		.word	1066524486
 1047              		.cfi_endproc
 1048              	.LFE492:
 1050              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 1051              		.align	1
 1052              		.global	_Z23initialize_leg_positionv
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1056              		.fpu fpv4-sp-d16
 1058              	_Z23initialize_leg_positionv:
 1059              	.LFB499:
 270:Core/Src/robot/robot_functions.cpp **** {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 35


 1060              		.loc 2 270 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 8
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1065              	.LCFI26:
 1066              		.cfi_def_cfa_offset 32
 1067              		.cfi_offset 4, -32
 1068              		.cfi_offset 5, -28
 1069              		.cfi_offset 6, -24
 1070              		.cfi_offset 7, -20
 1071              		.cfi_offset 8, -16
 1072              		.cfi_offset 9, -12
 1073              		.cfi_offset 10, -8
 1074              		.cfi_offset 14, -4
 1075 0004 2DED028B 		vpush.64	{d8}
 1076              	.LCFI27:
 1077              		.cfi_def_cfa_offset 40
 1078              		.cfi_offset 80, -40
 1079              		.cfi_offset 81, -36
 1080 0008 84B0     		sub	sp, sp, #16
 1081              	.LCFI28:
 1082              		.cfi_def_cfa_offset 56
 1083              	.LVL128:
 1084              	.LBB149:
 1085              	.LBB150:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1086              		.loc 3 45 0
 1087 000a 634E     		ldr	r6, .L106+24
 1088 000c 3569     		ldr	r5, [r6, #16]
 1089              	.LVL129:
 1090              	.LBE150:
 1091              	.LBE149:
 1092              	.LBB151:
 1093              	.LBB152:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1094              		.loc 3 47 0
 1095 000e 06F13C04 		add	r4, r6, #60
 1096 0012 2046     		mov	r0, r4
 1097 0014 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1098              	.LVL130:
 1099              	.LBE152:
 1100              	.LBE151:
 277:Core/Src/robot/robot_functions.cpp **** 	, leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].get_a
 1101              		.loc 2 277 0
 1102 0018 9FED608A 		vldr.32	s16, .L106+28
 1103 001c 60EE087A 		vmul.f32	s15, s0, s16
 1104 0020 17EE900A 		vmov	r0, s15
 1105 0024 FFF7FEFF 		bl	__aeabi_f2d
 1106              	.LVL131:
 1107 0028 55A3     		adr	r3, .L106
 1108 002a D3E90023 		ldrd	r2, [r3]
 1109 002e FFF7FEFF 		bl	__aeabi_ddiv
 1110              	.LVL132:
 1111 0032 8046     		mov	r8, r0
 1112 0034 8946     		mov	r9, r1
 1113              	.LVL133:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 36


 1114              	.LBB153:
 1115              	.LBB154:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1116              		.loc 3 45 0
 1117 0036 D6F868A0 		ldr	r10, [r6, #104]
 1118              	.LVL134:
 1119              	.LBE154:
 1120              	.LBE153:
 1121              	.LBB155:
 1122              	.LBB156:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1123              		.loc 3 47 0
 1124 003a 06F19400 		add	r0, r6, #148
 1125 003e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1126              	.LVL135:
 1127              	.LBE156:
 1128              	.LBE155:
 277:Core/Src/robot/robot_functions.cpp **** 	, leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].get_a
 1129              		.loc 2 277 0
 1130 0042 60EE087A 		vmul.f32	s15, s0, s16
 1131 0046 17EE900A 		vmov	r0, s15
 1132 004a FFF7FEFF 		bl	__aeabi_f2d
 1133              	.LVL136:
 1134 004e 4CA3     		adr	r3, .L106
 1135 0050 D3E90023 		ldrd	r2, [r3]
 1136 0054 FFF7FEFF 		bl	__aeabi_ddiv
 1137              	.LVL137:
 1138 0058 CDE90201 		strd	r0, [sp, #8]
 1139 005c 504B     		ldr	r3, .L106+32
 1140 005e D3ED007A 		vldr.32	s15, [r3]
 1141 0062 67EE887A 		vmul.f32	s15, s15, s16
 1142 0066 17EE900A 		vmov	r0, s15
 1143 006a FFF7FEFF 		bl	__aeabi_f2d
 1144              	.LVL138:
 1145 006e 44A3     		adr	r3, .L106
 1146 0070 D3E90023 		ldrd	r2, [r3]
 1147 0074 FFF7FEFF 		bl	__aeabi_ddiv
 1148              	.LVL139:
 1149 0078 0646     		mov	r6, r0
 1150 007a 0F46     		mov	r7, r1
 276:Core/Src/robot/robot_functions.cpp **** 	printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 1151              		.loc 2 276 0
 1152 007c 4046     		mov	r0, r8
 1153 007e 4946     		mov	r1, r9
 1154 0080 FFF7FEFF 		bl	__aeabi_d2iz
 1155              	.LVL140:
 1156 0084 8046     		mov	r8, r0
 1157 0086 3046     		mov	r0, r6
 1158 0088 3946     		mov	r1, r7
 1159 008a FFF7FEFF 		bl	__aeabi_d2iz
 1160              	.LVL141:
 1161 008e 0190     		str	r0, [sp, #4]
 1162 0090 DDE90201 		ldrd	r0, [sp, #8]
 1163 0094 FFF7FEFF 		bl	__aeabi_d2iz
 1164              	.LVL142:
 1165 0098 0090     		str	r0, [sp]
 1166 009a 5346     		mov	r3, r10
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 37


 1167 009c 4246     		mov	r2, r8
 1168 009e 2946     		mov	r1, r5
 1169 00a0 4048     		ldr	r0, .L106+36
 1170 00a2 FFF7FEFF 		bl	printf
 1171              	.LVL143:
 1172              	.LBB157:
 1173              	.LBB158:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1174              		.loc 3 47 0
 1175 00a6 2046     		mov	r0, r4
 1176 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1177              	.LVL144:
 1178              	.LBE158:
 1179              	.LBE157:
 278:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1180              		.loc 2 278 0
 1181 00ac 10EE100A 		vmov	r0, s0
 1182 00b0 FFF7FEFF 		bl	__aeabi_f2d
 1183              	.LVL145:
 1184 00b4 34A3     		adr	r3, .L106+8
 1185 00b6 D3E90023 		ldrd	r2, [r3]
 1186 00ba FFF7FEFF 		bl	__aeabi_dcmpgt
 1187              	.LVL146:
 1188 00be 88B1     		cbz	r0, .L89
 1189              	.LVL147:
 1190              	.LBB159:
 1191              	.LBB160:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1192              		.loc 3 47 0
 1193 00c0 2046     		mov	r0, r4
 1194 00c2 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1195              	.LVL148:
 1196              	.LBE160:
 1197              	.LBE159:
 279:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 1198              		.loc 2 279 0
 1199 00c6 10EE100A 		vmov	r0, s0
 1200 00ca FFF7FEFF 		bl	__aeabi_f2d
 1201              	.LVL149:
 278:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1202              		.loc 2 278 0
 1203 00ce 30A3     		adr	r3, .L106+16
 1204 00d0 D3E90023 		ldrd	r2, [r3]
 1205 00d4 FFF7FEFF 		bl	__aeabi_dcmplt
 1206              	.LVL150:
 1207 00d8 20B1     		cbz	r0, .L89
 1208              	.LVL151:
 1209              	.LBB161:
 1210              	.LBB162:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1211              		.loc 3 45 0
 1212 00da A4F13C03 		sub	r3, r4, #60
 1213 00de 1B69     		ldr	r3, [r3, #16]
 1214              	.LVL152:
 1215              	.LBE162:
 1216              	.LBE161:
 279:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 38


 1217              		.loc 2 279 0
 1218 00e0 002B     		cmp	r3, #0
 1219 00e2 36D1     		bne	.L105
 1220              	.L89:
 286:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(5);
 1221              		.loc 2 286 0 discriminator 3
 1222 00e4 B1EE040A 		vmov.f32	s0, #5.0e+0
 1223 00e8 2B48     		ldr	r0, .L106+24
 1224 00ea FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1225              	.LVL153:
 287:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 1226              		.loc 2 287 0 discriminator 3
 1227 00ee 2E4B     		ldr	r3, .L106+40
 1228 00f0 0022     		movs	r2, #0
 1229 00f2 1A70     		strb	r2, [r3]
 1230              	.L92:
 1231              	.LVL154:
 1232              	.LBB163:
 1233              	.LBB164:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1234              		.loc 3 47 0
 1235 00f4 2D48     		ldr	r0, .L106+44
 1236 00f6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1237              	.LVL155:
 1238              	.LBE164:
 1239              	.LBE163:
 290:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1240              		.loc 2 290 0
 1241 00fa 10EE100A 		vmov	r0, s0
 1242 00fe FFF7FEFF 		bl	__aeabi_f2d
 1243              	.LVL156:
 291:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 1244              		.loc 2 291 0
 1245 0102 21A3     		adr	r3, .L106+8
 1246 0104 D3E90023 		ldrd	r2, [r3]
 1247 0108 FFF7FEFF 		bl	__aeabi_dcmpgt
 1248              	.LVL157:
 1249 010c 78B1     		cbz	r0, .L93
 1250              	.LVL158:
 1251              	.LBB165:
 1252              	.LBB166:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1253              		.loc 3 47 0
 1254 010e 2748     		ldr	r0, .L106+44
 1255 0110 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1256              	.LVL159:
 1257              	.LBE166:
 1258              	.LBE165:
 291:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 1259              		.loc 2 291 0
 1260 0114 10EE100A 		vmov	r0, s0
 1261 0118 FFF7FEFF 		bl	__aeabi_f2d
 1262              	.LVL160:
 290:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1263              		.loc 2 290 0
 1264 011c 1CA3     		adr	r3, .L106+16
 1265 011e D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 39


 1266 0122 FFF7FEFF 		bl	__aeabi_dcmplt
 1267              	.LVL161:
 1268 0126 10B1     		cbz	r0, .L93
 1269              	.LVL162:
 1270              	.LBB167:
 1271              	.LBB168:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1272              		.loc 3 45 0
 1273 0128 1B4B     		ldr	r3, .L106+24
 1274 012a 9B6E     		ldr	r3, [r3, #104]
 1275              	.LVL163:
 1276              	.LBE168:
 1277              	.LBE167:
 291:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 1278              		.loc 2 291 0
 1279 012c DBB9     		cbnz	r3, .L96
 1280              	.L93:
 298:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(5);
 1281              		.loc 2 298 0 discriminator 2
 1282 012e B1EE040A 		vmov.f32	s0, #5.0e+0
 1283 0132 1F48     		ldr	r0, .L106+48
 1284 0134 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1285              	.LVL164:
 299:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 1286              		.loc 2 299 0 discriminator 2
 1287 0138 1E4B     		ldr	r3, .L106+52
 1288 013a 0022     		movs	r2, #0
 1289 013c 1A70     		strb	r2, [r3]
 1290              	.L97:
 302:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 1291              		.loc 2 302 0
 1292 013e 1A4B     		ldr	r3, .L106+40
 1293 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1294 0142 CBB1     		cbz	r3, .L99
 302:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 1295              		.loc 2 302 0 is_stmt 0 discriminator 1
 1296 0144 1B4B     		ldr	r3, .L106+52
 1297 0146 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1298              	.L98:
 311:Core/Src/robot/robot_functions.cpp **** }
 1299              		.loc 2 311 0 is_stmt 1
 1300 0148 04B0     		add	sp, sp, #16
 1301              	.LCFI29:
 1302              		.cfi_remember_state
 1303              		.cfi_def_cfa_offset 40
 1304              		@ sp needed
 1305 014a BDEC028B 		vldm	sp!, {d8}
 1306              	.LCFI30:
 1307              		.cfi_restore 80
 1308              		.cfi_restore 81
 1309              		.cfi_def_cfa_offset 32
 1310 014e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1311              	.L105:
 1312              	.LCFI31:
 1313              		.cfi_restore_state
 281:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 1314              		.loc 2 281 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 40


 1315 0152 9FED190A 		vldr.32	s0, .L106+56
 1316 0156 A4F13C00 		sub	r0, r4, #60
 1317 015a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1318              	.LVL165:
 282:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 1319              		.loc 2 282 0
 1320 015e 124B     		ldr	r3, .L106+40
 1321 0160 0122     		movs	r2, #1
 1322 0162 1A70     		strb	r2, [r3]
 1323 0164 C6E7     		b	.L92
 1324              	.L96:
 293:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1325              		.loc 2 293 0
 1326 0166 9FED140A 		vldr.32	s0, .L106+56
 1327 016a 1148     		ldr	r0, .L106+48
 1328 016c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1329              	.LVL166:
 294:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 1330              		.loc 2 294 0
 1331 0170 104B     		ldr	r3, .L106+52
 1332 0172 0122     		movs	r2, #1
 1333 0174 1A70     		strb	r2, [r3]
 1334 0176 E2E7     		b	.L97
 1335              	.L99:
 309:Core/Src/robot/robot_functions.cpp **** 		return false;
 1336              		.loc 2 309 0
 1337 0178 0020     		movs	r0, #0
 1338 017a E5E7     		b	.L98
 1339              	.L107:
 1340 017c AFF30080 		.align	3
 1341              	.L106:
 1342 0180 182D4454 		.word	1413754136
 1343 0184 FB210940 		.word	1074340347
 1344 0188 44031FEA 		.word	-367066300
 1345 018c 0604F83F 		.word	1073218566
 1346 0190 EC5669BE 		.word	-1100392724
 1347 0194 EF3FFA3F 		.word	1073364975
 1348 0198 00000000 		.word	leg
 1349 019c 00003443 		.word	1127481344
 1350 01a0 00000000 		.word	.LANCHOR3
 1351 01a4 00000000 		.word	.LC1
 1352 01a8 00000000 		.word	.LANCHOR6
 1353 01ac 94000000 		.word	leg+148
 1354 01b0 58000000 		.word	leg+88
 1355 01b4 00000000 		.word	.LANCHOR7
 1356 01b8 00000000 		.word	0
 1357              		.cfi_endproc
 1358              	.LFE499:
 1360              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 1361              		.align	1
 1362              		.global	_Z28initialize_steering_positionv
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv4-sp-d16
 1368              	_Z28initialize_steering_positionv:
 1369              	.LFB500:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 41


 321:Core/Src/robot/robot_functions.cpp **** {
 1370              		.loc 2 321 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 38B5     		push	{r3, r4, r5, lr}
 1375              	.LCFI32:
 1376              		.cfi_def_cfa_offset 16
 1377              		.cfi_offset 3, -16
 1378              		.cfi_offset 4, -12
 1379              		.cfi_offset 5, -8
 1380              		.cfi_offset 14, -4
 1381 0002 2DED028B 		vpush.64	{d8}
 1382              	.LCFI33:
 1383              		.cfi_def_cfa_offset 24
 1384              		.cfi_offset 80, -24
 1385              		.cfi_offset 81, -20
 1386              	.LVL167:
 1387              	.LBB169:
 1388              	.LBB170:
 1389              		.loc 5 112 0
 1390 0006 2648     		ldr	r0, .L115+8
 1391 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1392              	.LVL168:
 1393              	.LBE170:
 1394              	.LBE169:
 322:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 1395              		.loc 2 322 0
 1396 000c DFED257A 		vldr.32	s15, .L115+12
 1397 0010 60EE277A 		vmul.f32	s15, s0, s15
 1398 0014 17EE900A 		vmov	r0, s15
 1399 0018 FFF7FEFF 		bl	__aeabi_f2d
 1400              	.LVL169:
 1401 001c 1EA3     		adr	r3, .L115
 1402 001e D3E90023 		ldrd	r2, [r3]
 1403 0022 FFF7FEFF 		bl	__aeabi_ddiv
 1404              	.LVL170:
 1405 0026 FFF7FEFF 		bl	__aeabi_d2iz
 1406              	.LVL171:
 1407 002a 0146     		mov	r1, r0
 1408 002c 1E48     		ldr	r0, .L115+16
 1409 002e FFF7FEFF 		bl	printf
 1410              	.LVL172:
 325:Core/Src/robot/robot_functions.cpp **** 	if(((HAL_GetTick()-start_time) >= 800)){
 1411              		.loc 2 325 0
 1412 0032 FFF7FEFF 		bl	HAL_GetTick
 1413              	.LVL173:
 1414 0036 1D4B     		ldr	r3, .L115+20
 1415 0038 1B68     		ldr	r3, [r3]
 1416 003a C01A     		subs	r0, r0, r3
 1417 003c B0F5487F 		cmp	r0, #800
 1418 0040 0BD2     		bcs	.L113
 330:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 1419              		.loc 2 330 0
 1420 0042 1B4B     		ldr	r3, .L115+24
 1421 0044 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1422 0046 ACB9     		cbnz	r4, .L114
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 42


 338:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 1423              		.loc 2 338 0
 1424 0048 B6EE000A 		vmov.f32	s0, #5.0e-1
 1425 004c 1948     		ldr	r0, .L115+28
 1426 004e FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1427              	.LVL174:
 1428              	.L110:
 341:Core/Src/robot/robot_functions.cpp **** }
 1429              		.loc 2 341 0
 1430 0052 2046     		mov	r0, r4
 1431 0054 BDEC028B 		vldm	sp!, {d8}
 1432              	.LCFI34:
 1433              		.cfi_remember_state
 1434              		.cfi_restore 80
 1435              		.cfi_restore 81
 1436              		.cfi_def_cfa_offset 16
 1437 0058 38BD     		pop	{r3, r4, r5, pc}
 1438              	.L113:
 1439              	.LCFI35:
 1440              		.cfi_restore_state
 326:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1441              		.loc 2 326 0
 1442 005a 9FED170A 		vldr.32	s0, .L115+32
 1443 005e 1548     		ldr	r0, .L115+28
 1444 0060 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1445              	.LVL175:
 327:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 1446              		.loc 2 327 0
 1447 0064 0122     		movs	r2, #1
 1448 0066 4FF48051 		mov	r1, #4096
 1449 006a 1448     		ldr	r0, .L115+36
 1450 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1451              	.LVL176:
 328:Core/Src/robot/robot_functions.cpp **** 		return true;	
 1452              		.loc 2 328 0
 1453 0070 0124     		movs	r4, #1
 1454 0072 EEE7     		b	.L110
 1455              	.L114:
 332:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1456              		.loc 2 332 0
 1457 0074 9FED108A 		vldr.32	s16, .L115+32
 1458 0078 0E4D     		ldr	r5, .L115+28
 1459 007a B0EE480A 		vmov.f32	s0, s16
 1460 007e 2846     		mov	r0, r5
 1461 0080 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1462              	.LVL177:
 1463              	.LBB171:
 1464              	.LBB172:
  94:Core/Inc/devs/steering.h **** 
 1465              		.loc 5 94 0
 1466 0084 B0EE480A 		vmov.f32	s0, s16
 1467 0088 05F10C00 		add	r0, r5, #12
 1468 008c FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 1469              	.LVL178:
 1470              	.LBE172:
 1471              	.LBE171:
 334:Core/Src/robot/robot_functions.cpp **** 		return true;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 43


 1472              		.loc 2 334 0
 1473 0090 DFE7     		b	.L110
 1474              	.L116:
 1475 0092 00BFAFF3 		.align	3
 1475      0080
 1476              	.L115:
 1477 0098 182D4454 		.word	1413754136
 1478 009c FB210940 		.word	1074340347
 1479 00a0 0C000000 		.word	steering+12
 1480 00a4 00003443 		.word	1127481344
 1481 00a8 00000000 		.word	.LC2
 1482 00ac 00000000 		.word	.LANCHOR8
 1483 00b0 00000000 		.word	.LANCHOR9
 1484 00b4 00000000 		.word	steering
 1485 00b8 00000000 		.word	0
 1486 00bc 000C0240 		.word	1073875968
 1487              		.cfi_endproc
 1488              	.LFE500:
 1490              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1491              		.align	1
 1492              		.global	_Z15calculate_datasv
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
 1498              	_Z15calculate_datasv:
 1499              	.LFB501:
 351:Core/Src/robot/robot_functions.cpp **** {
 1500              		.loc 2 351 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 16
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504 0000 30B5     		push	{r4, r5, lr}
 1505              	.LCFI36:
 1506              		.cfi_def_cfa_offset 12
 1507              		.cfi_offset 4, -12
 1508              		.cfi_offset 5, -8
 1509              		.cfi_offset 14, -4
 1510 0002 85B0     		sub	sp, sp, #20
 1511              	.LCFI37:
 1512              		.cfi_def_cfa_offset 32
 352:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 1513              		.loc 2 352 0
 1514 0004 2E4D     		ldr	r5, .L123+24
 1515 0006 2846     		mov	r0, r5
 1516 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1517              	.LVL179:
 353:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 1518              		.loc 2 353 0
 1519 000c 05F15800 		add	r0, r5, #88
 1520 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1521              	.LVL180:
 1522              	.LBB173:
 1523              	.LBB174:
 102:Core/Inc/devs/steering.h **** 
 1524              		.loc 5 102 0
 1525 0014 2B48     		ldr	r0, .L123+28
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 44


 1526 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1527              	.LVL181:
 1528              	.LBE174:
 1529              	.LBE173:
 355:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 1530              		.loc 2 355 0
 1531 001a 01AC     		add	r4, sp, #4
 1532 001c 0A21     		movs	r1, #10
 1533 001e 2046     		mov	r0, r4
 1534 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1535              	.LVL182:
 1536 0024 284B     		ldr	r3, .L123+32
 1537 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1538 002a 83E80700 		stm	r3, {r0, r1, r2}
 356:Core/Src/robot/robot_functions.cpp **** 	if(leg[0].is_raised()){
 1539              		.loc 2 356 0
 1540 002e 2846     		mov	r0, r5
 1541 0030 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 1542              	.LVL183:
 1543 0034 50B9     		cbnz	r0, .L121
 1544              	.L118:
 360:Core/Src/robot/robot_functions.cpp **** 	HAL_ADC_Start(&hadc1);
 1545              		.loc 2 360 0
 1546 0036 254C     		ldr	r4, .L123+36
 1547 0038 2046     		mov	r0, r4
 1548 003a FFF7FEFF 		bl	HAL_ADC_Start
 1549              	.LVL184:
 361:Core/Src/robot/robot_functions.cpp **** 	if (HAL_ADC_PollForConversion(&hadc1, 5) == HAL_OK)
 1550              		.loc 2 361 0
 1551 003e 0521     		movs	r1, #5
 1552 0040 2046     		mov	r0, r4
 1553 0042 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1554              	.LVL185:
 1555 0046 20B1     		cbz	r0, .L122
 1556              	.L117:
 1557              		.loc 2 366 0
 1558 0048 05B0     		add	sp, sp, #20
 1559              	.LCFI38:
 1560              		.cfi_remember_state
 1561              		.cfi_def_cfa_offset 12
 1562              		@ sp needed
 1563 004a 30BD     		pop	{r4, r5, pc}
 1564              	.L121:
 1565              	.LCFI39:
 1566              		.cfi_restore_state
 357:Core/Src/robot/robot_functions.cpp **** 		calculate_robot_angle();
 1567              		.loc 2 357 0
 1568 004c FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1569              	.LVL186:
 1570 0050 F1E7     		b	.L118
 1571              	.L122:
 363:Core/Src/robot/robot_functions.cpp **** 		robotx = HAL_ADC_GetValue(&hadc1);
 1572              		.loc 2 363 0
 1573 0052 2046     		mov	r0, r4
 1574 0054 FFF7FEFF 		bl	HAL_ADC_GetValue
 1575              	.LVL187:
 1576 0058 07EE900A 		vmov	s15, r0	@ int
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 45


 1577 005c F8EE677A 		vcvt.f32.u32	s15, s15
 1578 0060 1B4C     		ldr	r4, .L123+40
 1579 0062 C4ED007A 		vstr.32	s15, [r4]
 364:Core/Src/robot/robot_functions.cpp **** 		robotx = 62.17 * pow(((robotx * 3.3) / 4096), -1.0893);
 1580              		.loc 2 364 0
 1581 0066 17EE900A 		vmov	r0, s15
 1582 006a FFF7FEFF 		bl	__aeabi_f2d
 1583              	.LVL188:
 1584 006e 0EA3     		adr	r3, .L123
 1585 0070 D3E90023 		ldrd	r2, [r3]
 1586 0074 FFF7FEFF 		bl	__aeabi_dmul
 1587              	.LVL189:
 1588 0078 0022     		movs	r2, #0
 1589 007a 164B     		ldr	r3, .L123+44
 1590 007c FFF7FEFF 		bl	__aeabi_dmul
 1591              	.LVL190:
 1592 0080 9FED0B1B 		vldr.64	d1, .L123+8
 1593 0084 41EC100B 		vmov	d0, r0, r1
 1594 0088 FFF7FEFF 		bl	pow
 1595              	.LVL191:
 1596 008c 0AA3     		adr	r3, .L123+16
 1597 008e D3E90023 		ldrd	r2, [r3]
 1598 0092 51EC100B 		vmov	r0, r1, d0
 1599 0096 FFF7FEFF 		bl	__aeabi_dmul
 1600              	.LVL192:
 1601 009a FFF7FEFF 		bl	__aeabi_d2f
 1602              	.LVL193:
 1603 009e 2060     		str	r0, [r4]	@ float
 1604              		.loc 2 366 0
 1605 00a0 D2E7     		b	.L117
 1606              	.L124:
 1607 00a2 00BFAFF3 		.align	3
 1607      0080
 1608              	.L123:
 1609 00a8 66666666 		.word	1717986918
 1610 00ac 66660A40 		.word	1074423398
 1611 00b0 598638D6 		.word	-700938663
 1612 00b4 C56DF1BF 		.word	-1074696763
 1613 00b8 F6285C8F 		.word	-1889785610
 1614 00bc C2154F40 		.word	1078924738
 1615 00c0 00000000 		.word	leg
 1616 00c4 0C000000 		.word	steering+12
 1617 00c8 00000000 		.word	.LANCHOR1
 1618 00cc 00000000 		.word	hadc1
 1619 00d0 00000000 		.word	.LANCHOR10
 1620 00d4 0000303F 		.word	1060110336
 1621              		.cfi_endproc
 1622              	.LFE501:
 1624              		.section	.text._Z19initialize_positionv,"ax",%progbits
 1625              		.align	1
 1626              		.global	_Z19initialize_positionv
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu fpv4-sp-d16
 1632              	_Z19initialize_positionv:
 1633              	.LFB498:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 46


 216:Core/Src/robot/robot_functions.cpp **** {
 1634              		.loc 2 216 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1639              	.LCFI40:
 1640              		.cfi_def_cfa_offset 24
 1641              		.cfi_offset 4, -24
 1642              		.cfi_offset 5, -20
 1643              		.cfi_offset 6, -16
 1644              		.cfi_offset 7, -12
 1645              		.cfi_offset 8, -8
 1646              		.cfi_offset 14, -4
 1647 0004 2DED028B 		vpush.64	{d8}
 1648              	.LCFI41:
 1649              		.cfi_def_cfa_offset 32
 1650              		.cfi_offset 80, -32
 1651              		.cfi_offset 81, -28
 217:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 1652              		.loc 2 217 0
 1653 0008 FFF7FEFF 		bl	HAL_GetTick
 1654              	.LVL194:
 1655 000c 0646     		mov	r6, r0
 1656              	.LVL195:
 1657              	.L126:
 220:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1658              		.loc 2 220 0
 1659 000e FFF7FEFF 		bl	HAL_GetTick
 1660              	.LVL196:
 1661 0012 801B     		subs	r0, r0, r6
 1662 0014 0928     		cmp	r0, #9
 1663 0016 FAD9     		bls	.L126
 222:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1664              		.loc 2 222 0
 1665 0018 FFF7FEFF 		bl	HAL_GetTick
 1666              	.LVL197:
 1667 001c 0646     		mov	r6, r0
 1668              	.LVL198:
 223:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Leg_Orientation\t");
 1669              		.loc 2 223 0
 1670 001e 3D48     		ldr	r0, .L134
 1671              	.LVL199:
 1672 0020 FFF7FEFF 		bl	printf
 1673              	.LVL200:
 224:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 1674              		.loc 2 224 0
 1675 0024 FFF7FEFF 		bl	_Z15calculate_datasv
 1676              	.LVL201:
 225:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 1677              		.loc 2 225 0
 1678 0028 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1679              	.LVL202:
 1680 002c 0028     		cmp	r0, #0
 1681 002e EED0     		beq	.L126
 1682              	.LBB175:
 229:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 47


 1683              		.loc 2 229 0
 1684 0030 0024     		movs	r4, #0
 1685 0032 00E0     		b	.L130
 1686              	.LVL203:
 1687              	.L129:
 229:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1688              		.loc 2 229 0 is_stmt 0 discriminator 2
 1689 0034 0134     		adds	r4, r4, #1
 1690              	.LVL204:
 1691              	.L130:
 229:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1692              		.loc 2 229 0 discriminator 1
 1693 0036 384B     		ldr	r3, .L134+4
 1694 0038 9C42     		cmp	r4, r3
 1695 003a 3EDC     		bgt	.L128
 231:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1696              		.loc 2 231 0 is_stmt 1
 1697 003c FFF7FEFF 		bl	HAL_GetTick
 1698              	.LVL205:
 1699 0040 801B     		subs	r0, r0, r6
 1700 0042 0928     		cmp	r0, #9
 1701 0044 F6D9     		bls	.L129
 233:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1702              		.loc 2 233 0
 1703 0046 FFF7FEFF 		bl	HAL_GetTick
 1704              	.LVL206:
 1705 004a 0646     		mov	r6, r0
 1706              	.LVL207:
 234:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1707              		.loc 2 234 0
 1708 004c 3348     		ldr	r0, .L134+8
 1709              	.LVL208:
 1710 004e FFF7FEFF 		bl	printf
 1711              	.LVL209:
 235:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 1712              		.loc 2 235 0
 1713 0052 FFF7FEFF 		bl	_Z15calculate_datasv
 1714              	.LVL210:
 236:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 1715              		.loc 2 236 0
 1716 0056 324D     		ldr	r5, .L134+12
 1717 0058 0027     		movs	r7, #0
 1718 005a 2F61     		str	r7, [r5, #16]
 237:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 1719              		.loc 2 237 0
 1720 005c AF66     		str	r7, [r5, #104]
 238:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 1721              		.loc 2 238 0
 1722 005e 9FED318A 		vldr.32	s16, .L134+16
 1723 0062 B0EE480A 		vmov.f32	s0, s16
 1724 0066 2846     		mov	r0, r5
 1725 0068 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1726              	.LVL211:
 239:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 1727              		.loc 2 239 0
 1728 006c 05F15808 		add	r8, r5, #88
 1729 0070 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 48


 1730 0074 4046     		mov	r0, r8
 1731 0076 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1732              	.LVL212:
 1733              	.LBB176:
 1734              	.LBB177:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1735              		.loc 3 40 0
 1736 007a B0EE480A 		vmov.f32	s0, s16
 1737 007e 05F13C00 		add	r0, r5, #60
 1738 0082 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1739              	.LVL213:
 1740              	.LBE177:
 1741              	.LBE176:
 1742              	.LBB178:
 1743              	.LBB179:
 1744 0086 B0EE480A 		vmov.f32	s0, s16
 1745 008a 05F19400 		add	r0, r5, #148
 1746 008e FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1747              	.LVL214:
 1748              	.LBE179:
 1749              	.LBE178:
 242:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1750              		.loc 2 242 0
 1751 0092 9FED258A 		vldr.32	s16, .L134+20
 1752 0096 B0EE480A 		vmov.f32	s0, s16
 1753 009a 2846     		mov	r0, r5
 1754 009c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1755              	.LVL215:
 243:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1756              		.loc 2 243 0
 1757 00a0 B0EE480A 		vmov.f32	s0, s16
 1758 00a4 4046     		mov	r0, r8
 1759 00a6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1760              	.LVL216:
 244:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 1761              		.loc 2 244 0
 1762 00aa B0EE480A 		vmov.f32	s0, s16
 1763 00ae 1F48     		ldr	r0, .L134+24
 1764 00b0 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1765              	.LVL217:
 245:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 1766              		.loc 2 245 0
 1767 00b4 1E4B     		ldr	r3, .L134+28
 1768 00b6 1F70     		strb	r7, [r3]
 1769 00b8 BCE7     		b	.L129
 1770              	.L128:
 1771              	.LBE175:
 248:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1772              		.loc 2 248 0
 1773 00ba FFF7FEFF 		bl	HAL_GetTick
 1774              	.LVL218:
 1775 00be 1D4B     		ldr	r3, .L134+32
 1776 00c0 1860     		str	r0, [r3]
 1777              	.LVL219:
 1778              	.L131:
 251:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1779              		.loc 2 251 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 49


 1780 00c2 FFF7FEFF 		bl	HAL_GetTick
 1781              	.LVL220:
 1782 00c6 801B     		subs	r0, r0, r6
 1783 00c8 0928     		cmp	r0, #9
 1784 00ca FAD9     		bls	.L131
 253:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1785              		.loc 2 253 0
 1786 00cc FFF7FEFF 		bl	HAL_GetTick
 1787              	.LVL221:
 1788 00d0 0646     		mov	r6, r0
 1789              	.LVL222:
 254:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1790              		.loc 2 254 0
 1791 00d2 FFF7FEFF 		bl	HAL_GetTick
 1792              	.LVL223:
 1793 00d6 174B     		ldr	r3, .L134+32
 1794 00d8 1A68     		ldr	r2, [r3]
 1795 00da 0146     		mov	r1, r0
 1796 00dc 1648     		ldr	r0, .L134+36
 1797 00de FFF7FEFF 		bl	printf
 1798              	.LVL224:
 255:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1799              		.loc 2 255 0
 1800 00e2 9FED118A 		vldr.32	s16, .L134+20
 1801 00e6 0E4C     		ldr	r4, .L134+12
 1802 00e8 B0EE480A 		vmov.f32	s0, s16
 1803 00ec 2046     		mov	r0, r4
 1804 00ee FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1805              	.LVL225:
 256:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1806              		.loc 2 256 0
 1807 00f2 B0EE480A 		vmov.f32	s0, s16
 1808 00f6 04F15800 		add	r0, r4, #88
 1809 00fa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1810              	.LVL226:
 257:Core/Src/robot/robot_functions.cpp **** 			calculate_datas();
 1811              		.loc 2 257 0
 1812 00fe FFF7FEFF 		bl	_Z15calculate_datasv
 1813              	.LVL227:
 258:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1814              		.loc 2 258 0
 1815 0102 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1816              	.LVL228:
 1817 0106 0028     		cmp	r0, #0
 1818 0108 DBD0     		beq	.L131
 262:Core/Src/robot/robot_functions.cpp **** }
 1819              		.loc 2 262 0
 1820 010a BDEC028B 		vldm	sp!, {d8}
 1821              	.LCFI42:
 1822              		.cfi_restore 80
 1823              		.cfi_restore 81
 1824              		.cfi_def_cfa_offset 24
 1825 010e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1826              	.LVL229:
 1827              	.L135:
 1828 0112 00BF     		.align	2
 1829              	.L134:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 50


 1830 0114 00000000 		.word	.LC3
 1831 0118 BFC62D00 		.word	2999999
 1832 011c 20000000 		.word	.LC4
 1833 0120 00000000 		.word	leg
 1834 0124 DB0FC93F 		.word	1070141403
 1835 0128 00000000 		.word	0
 1836 012c 00000000 		.word	steering
 1837 0130 00000000 		.word	.LANCHOR9
 1838 0134 00000000 		.word	.LANCHOR8
 1839 0138 34000000 		.word	.LC5
 1840              		.cfi_endproc
 1841              	.LFE498:
 1843              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1844              		.align	1
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv4-sp-d16
 1850              	_GLOBAL__sub_I_initial_angle:
 1851              	.LFB514:
 1852              		.loc 2 366 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856 0000 08B5     		push	{r3, lr}
 1857              	.LCFI43:
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 3, -8
 1860              		.cfi_offset 14, -4
 1861              		.loc 2 366 0
 1862 0002 4FF6FF71 		movw	r1, #65535
 1863 0006 0120     		movs	r0, #1
 1864 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1865              	.LVL230:
 1866 000c 08BD     		pop	{r3, pc}
 1867              		.cfi_endproc
 1868              	.LFE514:
 1870              		.section	.init_array,"aw",%init_array
 1871              		.align	2
 1872 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1873              		.global	tolerance
 1874              		.global	temp_robot_angle
 1875              		.global	robot_angle
 1876              		.global	STEERING_FLAG
 1877              		.global	start_time
 1878              		.global	summation_angle
 1879              		.global	robotx
 1880              		.global	curr_angle
 1881              		.global	initial_angle
 1882              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1883              		.set	.LANCHOR9,. + 0
 1886              	STEERING_FLAG:
 1887 0000 00       		.space	1
 1888              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1889              		.set	.LANCHOR6,. + 0
 1892              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1893 0000 00       		.space	1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 51


 1894              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1895              		.set	.LANCHOR7,. + 0
 1898              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1899 0000 00       		.space	1
 1900              		.section	.bss.curr_angle,"aw",%nobits
 1901              		.align	2
 1902              		.set	.LANCHOR1,. + 0
 1905              	curr_angle:
 1906 0000 00000000 		.space	12
 1906      00000000 
 1906      00000000 
 1907              		.section	.bss.initial_angle,"aw",%nobits
 1908              		.align	2
 1909              		.set	.LANCHOR0,. + 0
 1912              	initial_angle:
 1913 0000 00000000 		.space	12
 1913      00000000 
 1913      00000000 
 1914              		.section	.bss.robot_angle,"aw",%nobits
 1915              		.align	2
 1916              		.set	.LANCHOR3,. + 0
 1919              	robot_angle:
 1920 0000 00000000 		.space	4
 1921              		.section	.bss.robotx,"aw",%nobits
 1922              		.align	2
 1923              		.set	.LANCHOR10,. + 0
 1926              	robotx:
 1927 0000 00000000 		.space	4
 1928              		.section	.bss.start_time,"aw",%nobits
 1929              		.align	2
 1930              		.set	.LANCHOR8,. + 0
 1933              	start_time:
 1934 0000 00000000 		.space	4
 1935              		.section	.bss.summation_angle,"aw",%nobits
 1936              		.align	2
 1937              		.set	.LANCHOR4,. + 0
 1940              	summation_angle:
 1941 0000 00000000 		.space	4
 1942              		.section	.bss.temp_robot_angle,"aw",%nobits
 1943              		.align	2
 1944              		.set	.LANCHOR5,. + 0
 1947              	temp_robot_angle:
 1948 0000 00000000 		.space	4
 1949              		.section	.data._ZL9leg_speed,"aw",%progbits
 1950              		.align	2
 1951              		.set	.LANCHOR2,. + 0
 1954              	_ZL9leg_speed:
 1955 0000 0000E040 		.word	1088421888
 1956              		.section	.data.tolerance,"aw",%progbits
 1957              		.align	2
 1960              	tolerance:
 1961 0000 5077563D 		.word	1029076816
 1962              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1963              		.align	2
 1964              	.LC3:
 1965 0000 09496E69 		.ascii	"\011Initializing_Leg_Orientation\011\000"
 1965      7469616C 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 52


 1965      697A696E 
 1965      675F4C65 
 1965      675F4F72 
 1966 001f 00       		.space	1
 1967              	.LC4:
 1968 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1968      6974696E 
 1968      675F5468 
 1968      655F4C65 
 1968      67200900 
 1969              	.LC5:
 1970 0034 09496E69 		.ascii	"\011Initializing_Steering_Orientation\011 %d \011 %"
 1970      7469616C 
 1970      697A696E 
 1970      675F5374 
 1970      65657269 
 1971 005e 6400     		.ascii	"d\000"
 1972              		.section	.rodata._Z23initialize_leg_positionv.str1.4,"aMS",%progbits,1
 1973              		.align	2
 1974              	.LC1:
 1975 0000 0A097374 		.ascii	"\012\011steps0 = %d, angle0 = %d\011steps0 = %d, an"
 1975      65707330 
 1975      203D2025 
 1975      642C2061 
 1975      6E676C65 
 1976 002a 676C6530 		.ascii	"gle0 = %d, \011robot_angle = %d\000"
 1976      203D2025 
 1976      642C2009 
 1976      726F626F 
 1976      745F616E 
 1977              		.section	.rodata._Z28initialize_steering_positionv.str1.4,"aMS",%progbits,1
 1978              		.align	2
 1979              	.LC2:
 1980 0000 0A616E67 		.ascii	"\012angle = %d\011\000"
 1980      6C65203D 
 1980      20256409 
 1980      00
 1981              		.section	.rodata._Z2goif.str1.4,"aMS",%progbits,1
 1982              		.align	2
 1983              	.LC0:
 1984 0000 20737465 		.ascii	" steps = %d\011 robot_angle = %d\011 leg_1_angle = "
 1984      7073203D 
 1984      20256409 
 1984      20726F62 
 1984      6F745F61 
 1985 002d 25640920 		.ascii	"%d\011 leg_2_angle = %d\012\000"
 1985      6C65675F 
 1985      325F616E 
 1985      676C6520 
 1985      3D202564 
 1986              		.text
 1987              	.Letext0:
 1988              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1989              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1990              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1991              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1992              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 53


 1993              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1994              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1995              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1996              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1997              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1998              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1999              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2000              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2001              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2002              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2003              		.file 21 "Core/Inc/periphs/tim.h"
 2004              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2005              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2006              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2007              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2008              		.file 26 "Core/Inc/devs/motor.h"
 2009              		.file 27 "Core/Inc/devs/encoder.h"
 2010              		.file 28 "Core/Inc/utils/pid_algorithms.h"
 2011              		.file 29 "Core/Inc/devs/limit_switch.h"
 2012              		.file 30 "Core/Inc/periphs/usart.h"
 2013              		.file 31 "Core/Inc/periphs/adc.h"
 2014              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2015              		.file 33 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2016              		.file 34 "<built-in>"
 2017              		.file 35 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 robot_functions.cpp
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:158    .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:165    .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:321    .text._Z8move_legif:000000b8 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:337    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:344    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:438    .text._Z9set_anglef:00000088 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:452    .text._Z22correct_steering_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:459    .text._Z22correct_steering_anglef:00000000 _Z22correct_steering_anglef
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:542    .text._Z22correct_steering_anglef:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:554    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:561    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:650    .text._Z13move_steeringif:0000006c $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:662    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:669    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:781    .text._Z21calculate_robot_anglev:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:796    .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:803    .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1034   .text._Z2goif:00000158 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1051   .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1058   .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1342   .text._Z23initialize_leg_positionv:00000180 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1361   .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1368   .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1477   .text._Z28initialize_steering_positionv:00000098 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1491   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1498   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1609   .text._Z15calculate_datasv:000000a8 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1625   .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1632   .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1830   .text._Z19initialize_positionv:00000114 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1844   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1850   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1871   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1960   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1947   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1919   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1886   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1933   .bss.start_time:00000000 start_time
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1940   .bss.summation_angle:00000000 summation_angle
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1926   .bss.robotx:00000000 robotx
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1905   .bss.curr_angle:00000000 curr_angle
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1912   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1887   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1892   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1893   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1898   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1899   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1901   .bss.curr_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1908   .bss.initial_angle:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s 			page 55


C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1915   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1922   .bss.robotx:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1929   .bss.start_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1936   .bss.summation_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1943   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1950   .data._ZL9leg_speed:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1954   .data._ZL9leg_speed:00000000 _ZL9leg_speed
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1957   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1963   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1973   .rodata._Z23initialize_leg_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1978   .rodata._Z28initialize_steering_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccWRPcYW.s:1982   .rodata._Z2goif.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
_ZN7encoder16get_actual_angleEv
_ZN7encoder9get_angleEv
cosf
_ZN3leg9set_omegaEf
steps
leg
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN8steering9set_angleEf
steering
__aeabi_dcmple
_ZN3leg9is_raisedEv
_ZN8steering9set_omegaEf
__aeabi_dmul
_ZN3leg26is_raised_without_deadzoneEv
USE_IMU_FLAG
__aeabi_d2iz
printf
HAL_GetTick
HAL_GPIO_WritePin
_ZN7encoder11reset_angleEf
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
pow
hadc1
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
