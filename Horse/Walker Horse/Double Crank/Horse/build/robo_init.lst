ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_init.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN12Discrete_PIDD2Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN12Discrete_PIDD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN12Discrete_PIDD2Ev:
  26              	.LFB396:
  27              		.file 1 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 2


  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 59 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE396:
  39              		.weak	_ZN12Discrete_PIDD1Ev
  40              		.thumb_set _ZN12Discrete_PIDD1Ev,_ZN12Discrete_PIDD2Ev
  41              		.section	.text._ZN12Discrete_PID7computeEfm,"axG",%progbits,_ZN12Discrete_PID7computeEfm,comdat
  42              		.align	1
  43              		.weak	_ZN12Discrete_PID7computeEfm
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZN12Discrete_PID7computeEfm:
  50              	.LFB399:
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 3


  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  51              		.loc 1 75 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL1:
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  57              		.loc 1 77 0
  58 0000 07EE901A 		vmov	s15, r1	@ int
  59 0004 F8EE676A 		vcvt.f32.u32	s13, s15
  60 0008 DFED217A 		vldr.32	s15, .L11
  61 000c 86EEA77A 		vdiv.f32	s14, s13, s15
  62              	.LVL2:
  63              	.LBB322:
  64              	.LBB323:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  65              		.loc 1 20 0
  66 0010 90ED016A 		vldr.32	s12, [r0, #4]
  67              	.LVL3:
  68              	.LBE323:
  69              	.LBE322:
  70              	.LBB324:
  71              	.LBB325:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  72              		.loc 1 21 0
  73 0014 D0ED025A 		vldr.32	s11, [r0, #8]
  74              	.LVL4:
  75              	.LBE325:
  76              	.LBE324:
  77              	.LBB326:
  78              	.LBB327:
  22:Core/Inc/utils/pid_algorithms.h **** 
  79              		.loc 1 22 0
  80 0018 D0ED037A 		vldr.32	s15, [r0, #12]
  81              	.LVL5:
  82              	.LBE327:
  83              	.LBE326:
  78:Core/Inc/utils/pid_algorithms.h **** 
  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
  84              		.loc 1 81 0
  85 001c C7EE876A 		vdiv.f32	s13, s15, s14
  86              	.LVL6:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
  87              		.loc 1 83 0
  88 0020 76EE867A 		vadd.f32	s15, s13, s12
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 4


  89              	.LVL7:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
  90              		.loc 1 84 0
  91 0024 27EE257A 		vmul.f32	s14, s14, s11
  92              	.LVL8:
  93 0028 37EE467A 		vsub.f32	s14, s14, s12
  94 002c 36EEA66A 		vadd.f32	s12, s13, s13
  95 0030 37EE467A 		vsub.f32	s14, s14, s12
  96              	.LVL9:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
  97              		.loc 1 87 0
  98 0034 67EE807A 		vmul.f32	s15, s15, s0
  99              	.LVL10:
 100 0038 90ED076A 		vldr.32	s12, [r0, #28]
 101 003c 26EE077A 		vmul.f32	s14, s12, s14
 102              	.LVL11:
 103 0040 77EE877A 		vadd.f32	s15, s15, s14
 104 0044 90ED087A 		vldr.32	s14, [r0, #32]
 105 0048 67EE266A 		vmul.f32	s13, s14, s13
 106              	.LVL12:
 107 004c 77EEA67A 		vadd.f32	s15, s15, s13
 108 0050 90ED067A 		vldr.32	s14, [r0, #24]
 109 0054 77EE877A 		vadd.f32	s15, s15, s14
 110 0058 C0ED067A 		vstr.32	s15, [r0, #24]
 111              	.LVL13:
 112              	.LBB328:
 113              	.LBB329:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 114              		.loc 1 30 0
 115 005c 90ED047A 		vldr.32	s14, [r0, #16]
 116              	.LVL14:
 117              	.LBE329:
 118              	.LBE328:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 119              		.loc 1 89 0
 120 0060 F4EEC77A 		vcmpe.f32	s15, s14
 121 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 122 0068 09DC     		bgt	.L10
 123              	.LVL15:
 124              	.LBB330:
 125              	.LBB331:
  31:Core/Inc/utils/pid_algorithms.h **** 
 126              		.loc 1 31 0
 127 006a 90ED057A 		vldr.32	s14, [r0, #20]
 128              	.LVL16:
 129              	.LBE331:
 130              	.LBE330:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 131              		.loc 1 93 0
 132 006e F4EEC77A 		vcmpe.f32	s15, s14
 133 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 5


 134 0076 04D5     		bpl	.L5
  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 135              		.loc 1 95 0
 136 0078 80ED067A 		vstr.32	s14, [r0, #24]
 137 007c 01E0     		b	.L5
 138              	.L10:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 139              		.loc 1 91 0
 140 007e 80ED067A 		vstr.32	s14, [r0, #24]
 141              	.L5:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 142              		.loc 1 98 0
 143 0082 80ED086A 		vstr.32	s12, [r0, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 144              		.loc 1 99 0
 145 0086 80ED070A 		vstr.32	s0, [r0, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 102:Core/Inc/utils/pid_algorithms.h ****         }
 146              		.loc 1 102 0
 147 008a 90ED060A 		vldr.32	s0, [r0, #24]
 148              	.LVL17:
 149 008e 7047     		bx	lr
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 0090 00007A44 		.word	1148846080
 154              		.cfi_endproc
 155              	.LFE399:
 157              		.section	.text._ZN9Angle_PIDD2Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 158              		.align	1
 159              		.weak	_ZN9Angle_PIDD2Ev
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	_ZN9Angle_PIDD2Ev:
 166              	.LFB419:
 103:Core/Inc/utils/pid_algorithms.h **** 
 104:Core/Inc/utils/pid_algorithms.h ****       private:
 105:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 106:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 107:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 108:Core/Inc/utils/pid_algorithms.h **** };
 109:Core/Inc/utils/pid_algorithms.h **** 
 110:Core/Inc/utils/pid_algorithms.h **** class FilteredDiscrete_PID : public PID_Algorithm
 111:Core/Inc/utils/pid_algorithms.h **** {
 112:Core/Inc/utils/pid_algorithms.h ****       public:
 113:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(float p, float i, float d, float N = 0) : PID_Algorithm(p, i, d)
 114:Core/Inc/utils/pid_algorithms.h ****         {
 115:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 116:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 117:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 118:Core/Inc/utils/pid_algorithms.h ****                 set_N(N);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 6


 119:Core/Inc/utils/pid_algorithms.h ****         }
 120:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID()
 121:Core/Inc/utils/pid_algorithms.h ****         {
 122:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 123:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 124:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 125:Core/Inc/utils/pid_algorithms.h ****                 set_N(0);
 126:Core/Inc/utils/pid_algorithms.h ****         }
 127:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(FilteredDiscrete_PID &&) = default;
 128:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(const FilteredDiscrete_PID &) = default;
 129:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(FilteredDiscrete_PID &&) = default;
 130:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(const FilteredDiscrete_PID &) = default;
 131:Core/Inc/utils/pid_algorithms.h ****         ~FilteredDiscrete_PID() {}
 132:Core/Inc/utils/pid_algorithms.h **** 
 133:Core/Inc/utils/pid_algorithms.h ****         void set_N(float N) { N_ = N; }
 134:Core/Inc/utils/pid_algorithms.h **** 
 135:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 136:Core/Inc/utils/pid_algorithms.h ****          * 1) Filtered Discrete PID control Algorithm
 137:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
 138:Core/Inc/utils/pid_algorithms.h ****          * 3) Filtered Derivative used
 139:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
 140:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
 141:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*N*(z-1)/{(z -1) + N*Ts}
 142:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
 143:Core/Inc/utils/pid_algorithms.h ****          *      y(t) = (1 + a)*y(t-1) - a*y(t-2) + alpha*x(t) + beta*x(t-1) + gamma*x(t-2)
 144:Core/Inc/utils/pid_algorithms.h ****          *      where,
 145:Core/Inc/utils/pid_algorithms.h ****          *              a = 1 - N_*Ts
 146:Core/Inc/utils/pid_algorithms.h ****          *              alpha = P + D*N
 147:Core/Inc/utils/pid_algorithms.h ****          *              beta = -(1 + a)*P + I*Ts - 2*D*N
 148:Core/Inc/utils/pid_algorithms.h ****          *              gamma = a*P - a*I*Ts + D*N
 149:Core/Inc/utils/pid_algorithms.h ****          */
 150:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 151:Core/Inc/utils/pid_algorithms.h ****         {
 152:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
 153:Core/Inc/utils/pid_algorithms.h **** 
 154:Core/Inc/utils/pid_algorithms.h ****                 float a, alpha, beta, gamma;
 155:Core/Inc/utils/pid_algorithms.h ****                 float output;
 156:Core/Inc/utils/pid_algorithms.h **** 
 157:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 158:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 159:Core/Inc/utils/pid_algorithms.h ****                 float D = get_D();
 160:Core/Inc/utils/pid_algorithms.h **** 
 161:Core/Inc/utils/pid_algorithms.h ****                 a = 1 - N_ * Ts;
 162:Core/Inc/utils/pid_algorithms.h ****                 alpha = P + D * N_;
 163:Core/Inc/utils/pid_algorithms.h ****                 beta = -(1 + a) * P + I * Ts - 2 * D * N_;
 164:Core/Inc/utils/pid_algorithms.h ****                 gamma = a * P - a * I * Ts + D * N_;
 165:Core/Inc/utils/pid_algorithms.h **** 
 166:Core/Inc/utils/pid_algorithms.h ****                 output = (1 + a) * l_output_ - a * ll_output_ + alpha * error + beta * l_err_ + gam
 167:Core/Inc/utils/pid_algorithms.h **** 
 168:Core/Inc/utils/pid_algorithms.h ****                 ll_output_ = l_output_;
 169:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = output;
 170:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 171:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 172:Core/Inc/utils/pid_algorithms.h **** 
 173:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 174:Core/Inc/utils/pid_algorithms.h ****                 {
 175:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 7


 176:Core/Inc/utils/pid_algorithms.h ****                 }
 177:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 178:Core/Inc/utils/pid_algorithms.h ****                 {
 179:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 180:Core/Inc/utils/pid_algorithms.h ****                 }
 181:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 182:Core/Inc/utils/pid_algorithms.h ****         }
 183:Core/Inc/utils/pid_algorithms.h **** 
 184:Core/Inc/utils/pid_algorithms.h ****       private:
 185:Core/Inc/utils/pid_algorithms.h ****         float N_;
 186:Core/Inc/utils/pid_algorithms.h **** 
 187:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 188:Core/Inc/utils/pid_algorithms.h ****         float ll_output_;
 189:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 190:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 191:Core/Inc/utils/pid_algorithms.h **** };
 192:Core/Inc/utils/pid_algorithms.h **** 
 193:Core/Inc/utils/pid_algorithms.h **** class Angle_PID : public PID_Algorithm
 194:Core/Inc/utils/pid_algorithms.h **** {
 195:Core/Inc/utils/pid_algorithms.h ****       public:
 196:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
 197:Core/Inc/utils/pid_algorithms.h ****         {
 198:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 199:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 200:Core/Inc/utils/pid_algorithms.h ****         }
 201:Core/Inc/utils/pid_algorithms.h **** 
 202:Core/Inc/utils/pid_algorithms.h ****         Angle_PID()
 203:Core/Inc/utils/pid_algorithms.h ****         {
 204:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 205:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 206:Core/Inc/utils/pid_algorithms.h ****         }
 207:Core/Inc/utils/pid_algorithms.h **** 
 208:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(Angle_PID &&) = default;
 209:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(const Angle_PID &) = default;
 210:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(Angle_PID &&) = default;
 211:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(const Angle_PID &) = default;
 212:Core/Inc/utils/pid_algorithms.h ****         ~Angle_PID() { }
 167              		.loc 1 212 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL18:
 173              		.loc 1 212 0
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE419:
 178              		.weak	_ZN9Angle_PIDD1Ev
 179              		.thumb_set _ZN9Angle_PIDD1Ev,_ZN9Angle_PIDD2Ev
 180              		.section	.text._ZN9Angle_PID7computeEfm,"axG",%progbits,_ZN9Angle_PID7computeEfm,comdat
 181              		.align	1
 182              		.weak	_ZN9Angle_PID7computeEfm
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	_ZN9Angle_PID7computeEfm:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 8


 189              	.LFB422:
 213:Core/Inc/utils/pid_algorithms.h **** 
 214:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 215:Core/Inc/utils/pid_algorithms.h ****                 * 1) Angle PID control Algorithm
 216:Core/Inc/utils/pid_algorithms.h ****                 * 2) Use of Proportional Controller Only 
 217:Core/Inc/utils/pid_algorithms.h ****                 * 3) Output Limited
 218:Core/Inc/utils/pid_algorithms.h ****                 * 4) Compensator formula in Time Domain: 
 219:Core/Inc/utils/pid_algorithms.h ****                 *              y(t) = P * {(x(t) - x(t-1))/Ts}
 220:Core/Inc/utils/pid_algorithms.h ****                 */
 221:Core/Inc/utils/pid_algorithms.h **** 
 222:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 190              		.loc 1 222 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LVL19:
 196              	.LBB332:
 197              	.LBB333:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 198              		.loc 1 20 0
 199 0000 D0ED016A 		vldr.32	s13, [r0, #4]
 200              	.LVL20:
 201              	.LBE333:
 202              	.LBE332:
 203              	.LBB334:
 204              	.LBB335:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 205              		.loc 1 21 0
 206 0004 90ED027A 		vldr.32	s14, [r0, #8]
 207              	.LVL21:
 208              	.LBE335:
 209              	.LBE334:
 223:Core/Inc/utils/pid_algorithms.h ****         {
 224:Core/Inc/utils/pid_algorithms.h ****                 // float Ts = (float)dt_millis / 1000.0;
 225:Core/Inc/utils/pid_algorithms.h **** 
 226:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 227:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 228:Core/Inc/utils/pid_algorithms.h **** 
 229:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ += error;
 210              		.loc 1 229 0
 211 0008 D0ED077A 		vldr.32	s15, [r0, #28]
 212 000c 70EE277A 		vadd.f32	s15, s0, s15
 213 0010 C0ED077A 		vstr.32	s15, [r0, #28]
 230:Core/Inc/utils/pid_algorithms.h ****                 float i_term = I * err_sum_;
 214              		.loc 1 230 0
 215 0014 67EE877A 		vmul.f32	s15, s15, s14
 216              	.LVL22:
 217              	.LBB336:
 218              	.LBB337:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 219              		.loc 1 30 0
 220 0018 90ED047A 		vldr.32	s14, [r0, #16]
 221              	.LVL23:
 222              	.LBE337:
 223              	.LBE336:
 231:Core/Inc/utils/pid_algorithms.h ****                 // Clamping Integral Term
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 9


 232:Core/Inc/utils/pid_algorithms.h ****                 if (i_term > get_Upper()) {
 224              		.loc 1 232 0
 225 001c F4EEC77A 		vcmpe.f32	s15, s14
 226 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 227 0024 18DD     		ble	.L27
 228              	.LVL24:
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 234:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 229              		.loc 1 234 0
 230 0026 0023     		movs	r3, #0
 231 0028 C361     		str	r3, [r0, #28]	@ float
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 232              		.loc 1 233 0
 233 002a F0EE477A 		vmov.f32	s15, s14
 234              	.L17:
 235              	.LVL25:
 235:Core/Inc/utils/pid_algorithms.h ****                 }
 236:Core/Inc/utils/pid_algorithms.h ****                 else if (i_term < get_Lower()) {
 237:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 238:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 239:Core/Inc/utils/pid_algorithms.h ****                 }
 240:Core/Inc/utils/pid_algorithms.h **** 
 241:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = P * error + i_term;
 236              		.loc 1 241 0
 237 002e 20EE260A 		vmul.f32	s0, s0, s13
 238              	.LVL26:
 239 0032 70EE277A 		vadd.f32	s15, s0, s15
 240              	.LVL27:
 241 0036 C0ED067A 		vstr.32	s15, [r0, #24]
 242:Core/Inc/utils/pid_algorithms.h **** 
 243:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 242              		.loc 1 243 0
 243 003a F4EEC77A 		vcmpe.f32	s15, s14
 244 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 245 0042 15DC     		bgt	.L29
 246              	.LVL28:
 247              	.LBB338:
 248              	.LBB339:
  31:Core/Inc/utils/pid_algorithms.h **** 
 249              		.loc 1 31 0
 250 0044 90ED057A 		vldr.32	s14, [r0, #20]
 251              	.LVL29:
 252              	.LBE339:
 253              	.LBE338:
 244:Core/Inc/utils/pid_algorithms.h ****                 {
 245:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
 246:Core/Inc/utils/pid_algorithms.h ****                 }
 247:Core/Inc/utils/pid_algorithms.h **** 
 248:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 254              		.loc 1 248 0
 255 0048 F4EEC77A 		vcmpe.f32	s15, s14
 256 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 257 0050 10D5     		bpl	.L21
 249:Core/Inc/utils/pid_algorithms.h ****                 {
 250:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 258              		.loc 1 250 0
 259 0052 80ED067A 		vstr.32	s14, [r0, #24]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 10


 260 0056 0DE0     		b	.L21
 261              	.LVL30:
 262              	.L27:
 263              	.LBB340:
 264              	.LBB341:
  31:Core/Inc/utils/pid_algorithms.h **** 
 265              		.loc 1 31 0
 266 0058 90ED056A 		vldr.32	s12, [r0, #20]
 267              	.LVL31:
 268              	.LBE341:
 269              	.LBE340:
 236:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 270              		.loc 1 236 0
 271 005c F4EEC67A 		vcmpe.f32	s15, s12
 272 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 273 0064 E3D5     		bpl	.L17
 274              	.LVL32:
 238:Core/Inc/utils/pid_algorithms.h ****                 }
 275              		.loc 1 238 0
 276 0066 0023     		movs	r3, #0
 277 0068 C361     		str	r3, [r0, #28]	@ float
 237:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 278              		.loc 1 237 0
 279 006a F0EE467A 		vmov.f32	s15, s12
 280 006e DEE7     		b	.L17
 281              	.LVL33:
 282              	.L29:
 245:Core/Inc/utils/pid_algorithms.h ****                 }
 283              		.loc 1 245 0
 284 0070 80ED067A 		vstr.32	s14, [r0, #24]
 285              	.L21:
 251:Core/Inc/utils/pid_algorithms.h ****                 }
 252:Core/Inc/utils/pid_algorithms.h **** 
 253:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 254:Core/Inc/utils/pid_algorithms.h ****         }
 286              		.loc 1 254 0
 287 0074 90ED060A 		vldr.32	s0, [r0, #24]
 288 0078 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE422:
 292              		.section	.text._ZN8steeringD2Ev,"axG",%progbits,_ZN8steeringD5Ev,comdat
 293              		.align	1
 294              		.weak	_ZN8steeringD2Ev
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	_ZN8steeringD2Ev:
 301              	.LFB455:
 302              		.file 2 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 11


   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
 303              		.loc 2 33 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL34:
 309              		.loc 2 33 0
 310 0000 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE455:
 314              		.weak	_ZN8steeringD1Ev
 315              		.thumb_set _ZN8steeringD1Ev,_ZN8steeringD2Ev
 316              		.section	.text._ZL8leg_initv,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	_ZL8leg_initv:
 324              	.LFB493:
 325              		.file 3 "Core/Src/robot/robo_init.cpp"
   1:Core/Src/robot/robo_init.cpp **** #include "robo_init.h"
   2:Core/Src/robot/robo_init.cpp **** 
   3:Core/Src/robot/robo_init.cpp **** leg leg[2];
   4:Core/Src/robot/robo_init.cpp **** steering steering;
   5:Core/Src/robot/robo_init.cpp **** 
   6:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
   7:Core/Src/robot/robo_init.cpp **** static  encoder_config encoder_configurations[3];
   8:Core/Src/robot/robo_init.cpp **** 
   9:Core/Src/robot/robo_init.cpp **** 
  10:Core/Src/robot/robo_init.cpp **** static void motor_init();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 12


  11:Core/Src/robot/robo_init.cpp **** static void encoder_init();
  12:Core/Src/robot/robo_init.cpp **** static void pid_init();
  13:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(); 
  14:Core/Src/robot/robo_init.cpp **** static void leg_init();
  15:Core/Src/robot/robo_init.cpp **** static void steering_init();
  16:Core/Src/robot/robo_init.cpp **** 
  17:Core/Src/robot/robo_init.cpp **** void robo_init(){ 
  18:Core/Src/robot/robo_init.cpp **** 	motor_init();
  19:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
  20:Core/Src/robot/robo_init.cpp **** 	pid_init();
  21:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
  22:Core/Src/robot/robo_init.cpp **** 	leg_init();
  23:Core/Src/robot/robo_init.cpp **** 	steering_init();
  24:Core/Src/robot/robo_init.cpp **** }
  25:Core/Src/robot/robo_init.cpp **** 
  26:Core/Src/robot/robo_init.cpp **** void leg_init(){
 326              		.loc 3 26 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331              	.LVL35:
 332              	.LBB342:
 333              	.LBB343:
 334              	.LBB344:
 335              		.file 4 "Core/Inc/devs/motor.h"
   1:Core/Inc/devs/motor.h **** #ifndef _MOTOR_H_
   2:Core/Inc/devs/motor.h **** #define _MOTOR_H_
   3:Core/Inc/devs/motor.h **** 
   4:Core/Inc/devs/motor.h **** #include "stm32f4xx_hal.h"
   5:Core/Inc/devs/motor.h **** #include "tim.h"
   6:Core/Inc/devs/motor.h **** #include <math.h>
   7:Core/Inc/devs/motor.h **** 
   8:Core/Inc/devs/motor.h **** enum Direction{
   9:Core/Inc/devs/motor.h **** 	CLOCKWISE,
  10:Core/Inc/devs/motor.h **** 	ANTICLOCKWISE,
  11:Core/Inc/devs/motor.h **** 	STOP
  12:Core/Inc/devs/motor.h **** };
  13:Core/Inc/devs/motor.h **** 
  14:Core/Inc/devs/motor.h **** struct motor_config{
  15:Core/Inc/devs/motor.h **** 	float max_omega;
  16:Core/Inc/devs/motor.h **** 	float tolerance;
  17:Core/Inc/devs/motor.h **** 
  18:Core/Inc/devs/motor.h **** 	GPIO_TypeDef *in1_port;	
  19:Core/Inc/devs/motor.h ****         uint16_t in1_pin;
  20:Core/Inc/devs/motor.h ****         GPIO_TypeDef *in2_port;
  21:Core/Inc/devs/motor.h ****         uint16_t in2_pin;
  22:Core/Inc/devs/motor.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  23:Core/Inc/devs/motor.h ****         uint32_t channel;               // PWM Channel
  24:Core/Inc/devs/motor.h **** };
  25:Core/Inc/devs/motor.h **** 
  26:Core/Inc/devs/motor.h **** class motor
  27:Core/Inc/devs/motor.h **** {
  28:Core/Inc/devs/motor.h **** public:
  29:Core/Inc/devs/motor.h **** 	motor(){motor_ = 0;}
  30:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
  31:Core/Inc/devs/motor.h **** 	motor(motor &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 13


  32:Core/Inc/devs/motor.h **** 	motor(const motor &) = default;
  33:Core/Inc/devs/motor.h **** 	motor &operator=(motor &&) = default;
  34:Core/Inc/devs/motor.h **** 	motor &operator=(const motor &) = default;
  35:Core/Inc/devs/motor.h **** 	~motor(){}
  36:Core/Inc/devs/motor.h ****         void set_config(motor_config *motor) { motor_ = motor;}
 336              		.loc 4 36 0
 337 0000 074B     		ldr	r3, .L32
 338 0002 0849     		ldr	r1, .L32+4
 339 0004 9963     		str	r1, [r3, #56]
 340              	.LVL36:
 341              	.LBE344:
 342              	.LBE343:
 343              	.LBB345:
 344              	.LBB346:
 345              		.file 5 "Core/Inc/devs/encoder.h"
   1:Core/Inc/devs/encoder.h **** #ifndef _ENCODER_H_
   2:Core/Inc/devs/encoder.h **** #define _ENCODER_H_
   3:Core/Inc/devs/encoder.h **** 
   4:Core/Inc/devs/encoder.h **** #include "defines.h"
   5:Core/Inc/devs/encoder.h **** #include "stm32f4xx_hal.h"
   6:Core/Inc/devs/encoder.h **** #include "tim.h"
   7:Core/Inc/devs/encoder.h **** #include "math.h"
   8:Core/Inc/devs/encoder.h **** 
   9:Core/Inc/devs/encoder.h **** 
  10:Core/Inc/devs/encoder.h **** struct encoder_config{
  11:Core/Inc/devs/encoder.h **** 	uint8_t id;
  12:Core/Inc/devs/encoder.h **** 	TIM_HandleTypeDef *henc;
  13:Core/Inc/devs/encoder.h **** 	uint16_t ppr;
  14:Core/Inc/devs/encoder.h **** };
  15:Core/Inc/devs/encoder.h **** 
  16:Core/Inc/devs/encoder.h **** class encoder
  17:Core/Inc/devs/encoder.h **** {
  18:Core/Inc/devs/encoder.h **** public:
  19:Core/Inc/devs/encoder.h **** 	encoder(){encoder_ = 0;}
  20:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
  21:Core/Inc/devs/encoder.h **** 	encoder(encoder &&) = default;
  22:Core/Inc/devs/encoder.h **** 	encoder(const encoder &) = default;
  23:Core/Inc/devs/encoder.h **** 	encoder &operator=(encoder &&) = default;
  24:Core/Inc/devs/encoder.h **** 	encoder &operator=(const encoder &) = default;
  25:Core/Inc/devs/encoder.h **** 	~encoder(){}
  26:Core/Inc/devs/encoder.h ****         void set_config(encoder_config *encoder) { encoder_ = encoder; }
 346              		.loc 5 26 0
 347 0006 084A     		ldr	r2, .L32+8
 348 0008 DA63     		str	r2, [r3, #60]
 349              	.LVL37:
 350              	.LBE346:
 351              	.LBE345:
 352              	.LBE342:
 353              	.LBB347:
 354              	.LBB348:
 355              	.LBB349:
 356              		.loc 4 36 0
 357 000a 2031     		adds	r1, r1, #32
 358 000c C3F89010 		str	r1, [r3, #144]
 359              	.LVL38:
 360              	.LBE349:
 361              	.LBE348:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 14


 362              	.LBB350:
 363              	.LBB351:
 364              		.loc 5 26 0
 365 0010 0C32     		adds	r2, r2, #12
 366 0012 C3F89420 		str	r2, [r3, #148]
 367              	.LVL39:
 368              	.LBE351:
 369              	.LBE350:
 370              	.LBE347:
 371              	.LBB352:
 372              	.LBB353:
 373              		.file 6 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
 374              		.loc 6 38 0
 375 0016 054A     		ldr	r2, .L32+12
 376 0018 5A65     		str	r2, [r3, #84]	@ float
 377              	.LVL40:
 378              	.LBE353:
 379              	.LBE352:
 380              	.LBB354:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 15


 381              	.LBB355:
 382 001a C3F8AC20 		str	r2, [r3, #172]	@ float
 383              	.LVL41:
 384              	.LBE355:
 385              	.LBE354:
  27:Core/Src/robot/robo_init.cpp **** 	leg[0].set_config(&motor_configurations[0], &encoder_configurations[0]);
  28:Core/Src/robot/robo_init.cpp **** 	leg[1].set_config(&motor_configurations[1], &encoder_configurations[1]);
  29:Core/Src/robot/robo_init.cpp **** 	leg[0].set_gravity_compensator_constant(0.49);
  30:Core/Src/robot/robo_init.cpp **** 	leg[1].set_gravity_compensator_constant(0.49);
  31:Core/Src/robot/robo_init.cpp **** }	
 386              		.loc 3 31 0
 387 001e 7047     		bx	lr
 388              	.L33:
 389              		.align	2
 390              	.L32:
 391 0020 00000000 		.word	.LANCHOR0
 392 0024 00000000 		.word	.LANCHOR1
 393 0028 00000000 		.word	.LANCHOR2
 394 002c 48E1FA3E 		.word	1056629064
 395              		.cfi_endproc
 396              	.LFE493:
 398              		.section	.text._ZL13steering_initv,"ax",%progbits
 399              		.align	1
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	_ZL13steering_initv:
 406              	.LFB494:
  32:Core/Src/robot/robo_init.cpp **** 
  33:Core/Src/robot/robo_init.cpp **** void steering_init(){
 407              		.loc 3 33 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL42:
 413              	.LBB356:
 414              	.LBB357:
 415              	.LBB358:
 416              		.loc 4 36 0
 417 0000 024B     		ldr	r3, .L35
 418 0002 034A     		ldr	r2, .L35+4
 419 0004 9A60     		str	r2, [r3, #8]
 420              	.LVL43:
 421              	.LBE358:
 422              	.LBE357:
 423              	.LBB359:
 424              	.LBB360:
 425              		.loc 5 26 0
 426 0006 034A     		ldr	r2, .L35+8
 427 0008 DA60     		str	r2, [r3, #12]
 428              	.LVL44:
 429              	.LBE360:
 430              	.LBE359:
 431              	.LBE356:
  34:Core/Src/robot/robo_init.cpp **** 	steering.set_config(&motor_configurations[2], &encoder_configurations[2]);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 16


  35:Core/Src/robot/robo_init.cpp **** }
 432              		.loc 3 35 0
 433 000a 7047     		bx	lr
 434              	.L36:
 435              		.align	2
 436              	.L35:
 437 000c 00000000 		.word	.LANCHOR3
 438 0010 40000000 		.word	.LANCHOR1+64
 439 0014 18000000 		.word	.LANCHOR2+24
 440              		.cfi_endproc
 441              	.LFE494:
 443              		.section	.text._ZL8pid_initv,"ax",%progbits
 444              		.align	1
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	_ZL8pid_initv:
 451              	.LFB495:
  36:Core/Src/robot/robo_init.cpp **** 
  37:Core/Src/robot/robo_init.cpp **** static void pid_init(){
 452              		.loc 3 37 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL45:
 458              	.LBB361:
 459              	.LBB362:
 460              	.LBB363:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 461              		.loc 1 11 0
 462 0000 164B     		ldr	r3, .L38
 463 0002 174A     		ldr	r2, .L38+4
 464 0004 9A61     		str	r2, [r3, #24]	@ float
 465              	.LVL46:
 466              	.LBE363:
 467              	.LBE362:
 468              	.LBB364:
 469              	.LBB365:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 470              		.loc 1 12 0
 471 0006 174A     		ldr	r2, .L38+8
 472 0008 DA61     		str	r2, [r3, #28]	@ float
 473              	.LVL47:
 474              	.LBE365:
 475              	.LBE364:
 476              	.LBB366:
 477              	.LBB367:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 478              		.loc 1 13 0
 479 000a 174A     		ldr	r2, .L38+12
 480 000c 1A62     		str	r2, [r3, #32]	@ float
 481              	.LVL48:
 482              	.LBE367:
 483              	.LBE366:
 484              	.LBB368:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 17


 485              	.LBB369:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 486              		.loc 1 26 0
 487 000e 1748     		ldr	r0, .L38+16
 488 0010 5862     		str	r0, [r3, #36]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 489              		.loc 1 27 0
 490 0012 1749     		ldr	r1, .L38+20
 491 0014 9962     		str	r1, [r3, #40]	@ float
 492              	.LVL49:
 493              	.LBE369:
 494              	.LBE368:
 495              	.LBE361:
 496              	.LBB370:
 497              	.LBB371:
 498              	.LBB372:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 499              		.loc 1 11 0
 500 0016 4FF08042 		mov	r2, #1073741824
 501 001a 1A67     		str	r2, [r3, #112]	@ float
 502              	.LVL50:
 503              	.LBE372:
 504              	.LBE371:
 505              	.LBB373:
 506              	.LBB374:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 507              		.loc 1 12 0
 508 001c 154A     		ldr	r2, .L38+24
 509 001e 5A67     		str	r2, [r3, #116]	@ float
 510              	.LVL51:
 511              	.LBE374:
 512              	.LBE373:
 513              	.LBB375:
 514              	.LBB376:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 515              		.loc 1 13 0
 516 0020 0022     		movs	r2, #0
 517 0022 9A67     		str	r2, [r3, #120]	@ float
 518              	.LVL52:
 519              	.LBE376:
 520              	.LBE375:
 521              	.LBB377:
 522              	.LBB378:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 523              		.loc 1 26 0
 524 0024 D867     		str	r0, [r3, #124]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 525              		.loc 1 27 0
 526 0026 C3F88010 		str	r1, [r3, #128]	@ float
 527              	.LVL53:
 528              	.LBE378:
 529              	.LBE377:
 530              	.LBE370:
 531              	.LBB379:
 532              	.LBB380:
 533              	.LBB381:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 18


 534              		.loc 1 11 0
 535 002a 134B     		ldr	r3, .L38+28
 536 002c 4FF07E51 		mov	r1, #1065353216
 537 0030 9962     		str	r1, [r3, #40]	@ float
 538              	.LVL54:
 539              	.LBE381:
 540              	.LBE380:
 541              	.LBB382:
 542              	.LBB383:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 543              		.loc 1 12 0
 544 0032 1249     		ldr	r1, .L38+32
 545 0034 D962     		str	r1, [r3, #44]	@ float
 546              	.LVL55:
 547              	.LBE383:
 548              	.LBE382:
 549              	.LBB384:
 550              	.LBB385:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 551              		.loc 1 13 0
 552 0036 1A63     		str	r2, [r3, #48]	@ float
 553              	.LVL56:
 554              	.LBE385:
 555              	.LBE384:
 556              	.LBB386:
 557              	.LBB387:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 558              		.loc 1 26 0
 559 0038 1149     		ldr	r1, .L38+36
 560 003a 5963     		str	r1, [r3, #52]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 561              		.loc 1 27 0
 562 003c 1149     		ldr	r1, .L38+40
 563 003e 9963     		str	r1, [r3, #56]	@ float
 564              	.LVL57:
 565              	.LBE387:
 566              	.LBE386:
 567              	.LBE379:
 568              	.LBB388:
 569              	.LBB389:
 570              	.LBB390:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 571              		.loc 1 11 0
 572 0040 4FF07851 		mov	r1, #1040187392
 573 0044 D964     		str	r1, [r3, #76]	@ float
 574              	.LVL58:
 575              	.LBE390:
 576              	.LBE389:
 577              	.LBB391:
 578              	.LBB392:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 579              		.loc 1 12 0
 580 0046 1049     		ldr	r1, .L38+44
 581 0048 1965     		str	r1, [r3, #80]	@ float
 582              	.LVL59:
 583              	.LBE392:
 584              	.LBE391:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 19


 585              	.LBB393:
 586              	.LBB394:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 587              		.loc 1 13 0
 588 004a 5A65     		str	r2, [r3, #84]	@ float
 589              	.LVL60:
 590              	.LBE394:
 591              	.LBE393:
 592              	.LBB395:
 593              	.LBB396:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 594              		.loc 1 26 0
 595 004c 4FF07C52 		mov	r2, #1056964608
 596 0050 9A65     		str	r2, [r3, #88]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 597              		.loc 1 27 0
 598 0052 4FF03F42 		mov	r2, #-1090519040
 599 0056 DA65     		str	r2, [r3, #92]	@ float
 600              	.LVL61:
 601              	.LBE396:
 602              	.LBE395:
 603              	.LBE388:
  38:Core/Src/robot/robo_init.cpp **** 
  39:Core/Src/robot/robo_init.cpp **** 	leg[0].set_PID_constants( 1.8, 34.0, 0.014, -17.5, 17.5);		//2.0, 30.0, 0, //for crank = 70  // 25
  40:Core/Src/robot/robo_init.cpp **** 	leg[1].set_PID_constants( 2.0, 30.0, 0, -17.5, 17.5);
  41:Core/Src/robot/robo_init.cpp **** 	steering.set_PID_constants( 1.0, 100, 0, -2.42, 2.42);			//for crank = 100 // 17.8, 0.3103, 255.2	
  42:Core/Src/robot/robo_init.cpp **** 	steering.set_angle_PID_constants( 0.125, 0.0005, 0, -0.5, 0.5);
  43:Core/Src/robot/robo_init.cpp **** }
 604              		.loc 3 43 0
 605 0058 7047     		bx	lr
 606              	.L39:
 607 005a 00BF     		.align	2
 608              	.L38:
 609 005c 00000000 		.word	.LANCHOR0
 610 0060 6666E63F 		.word	1072064102
 611 0064 00000842 		.word	1107820544
 612 0068 4260653C 		.word	1013276738
 613 006c 00008C41 		.word	1099694080
 614 0070 00008CC1 		.word	-1047789568
 615 0074 0000F041 		.word	1106247680
 616 0078 00000000 		.word	.LANCHOR3
 617 007c 0000C842 		.word	1120403456
 618 0080 48E11A40 		.word	1075503432
 619 0084 48E11AC0 		.word	-1071980216
 620 0088 6F12033A 		.word	973279855
 621              		.cfi_endproc
 622              	.LFE495:
 624              		.section	.text._ZL17limit_switch_initv,"ax",%progbits
 625              		.align	1
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu fpv4-sp-d16
 631              	_ZL17limit_switch_initv:
 632              	.LFB496:
  44:Core/Src/robot/robo_init.cpp **** 
  45:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(){
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 20


 633              		.loc 3 45 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		@ link register save eliminated.
  46:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_port = GPIOC;
 638              		.loc 3 46 0
 639 0000 044B     		ldr	r3, .L41
 640 0002 054A     		ldr	r2, .L41+4
 641 0004 1A60     		str	r2, [r3]
  47:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_pin = GPIO_PIN_0;
 642              		.loc 3 47 0
 643 0006 0122     		movs	r2, #1
 644 0008 9A80     		strh	r2, [r3, #4]	@ movhi
  48:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_port = GPIOA;
 645              		.loc 3 48 0
 646 000a 044A     		ldr	r2, .L41+8
 647 000c 9A60     		str	r2, [r3, #8]
  49:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_pin = GPIO_PIN_2;
 648              		.loc 3 49 0
 649 000e 0422     		movs	r2, #4
 650 0010 9A81     		strh	r2, [r3, #12]	@ movhi
  50:Core/Src/robot/robo_init.cpp **** 
  51:Core/Src/robot/robo_init.cpp **** 	//steering.limit_switch__[0].int_port = GPIOD;
  52:Core/Src/robot/robo_init.cpp **** 	//steering.limit_switch__[0].int_pin = GPIO_PIN_4;
  53:Core/Src/robot/robo_init.cpp **** }
 651              		.loc 3 53 0
 652 0012 7047     		bx	lr
 653              	.L42:
 654              		.align	2
 655              	.L41:
 656 0014 00000000 		.word	.LANCHOR0
 657 0018 00080240 		.word	1073874944
 658 001c 00000240 		.word	1073872896
 659              		.cfi_endproc
 660              	.LFE496:
 662              		.section	.text.__tcf_0,"ax",%progbits
 663              		.align	1
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	__tcf_0:
 670              	.LFB500:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 671              		.loc 3 3 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		@ link register save eliminated.
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 676              		.loc 3 3 0
 677 0000 034B     		ldr	r3, .L46
 678              	.L45:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 679              		.loc 3 3 0 is_stmt 0 discriminator 5
 680 0002 044A     		ldr	r2, .L46+4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 21


 681 0004 9342     		cmp	r3, r2
 682 0006 01D0     		beq	.L43
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 683              		.loc 3 3 0 discriminator 4
 684 0008 583B     		subs	r3, r3, #88
 685              	.LVL62:
 686 000a FAE7     		b	.L45
 687              	.LVL63:
 688              	.L43:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 689              		.loc 3 3 0
 690 000c 7047     		bx	lr
 691              	.L47:
 692 000e 00BF     		.align	2
 693              	.L46:
 694 0010 B0000000 		.word	.LANCHOR0+176
 695 0014 00000000 		.word	.LANCHOR0
 696              		.cfi_endproc
 697              	.LFE500:
 699              		.section	.text._ZL10motor_initv,"ax",%progbits
 700              		.align	1
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu fpv4-sp-d16
 706              	_ZL10motor_initv:
 707              	.LFB497:
  54:Core/Src/robot/robo_init.cpp **** 
  55:Core/Src/robot/robo_init.cpp **** void motor_init(){
 708              		.loc 3 55 0 is_stmt 1
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 713              	.LCFI0:
 714              		.cfi_def_cfa_offset 24
 715              		.cfi_offset 3, -24
 716              		.cfi_offset 4, -20
 717              		.cfi_offset 5, -16
 718              		.cfi_offset 6, -12
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
  56:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].htim = &htim8;
 721              		.loc 3 56 0
 722 0002 1F4C     		ldr	r4, .L50
 723 0004 1F48     		ldr	r0, .L50+4
 724 0006 A061     		str	r0, [r4, #24]
  57:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_port = GPIOD;
 725              		.loc 3 57 0
 726 0008 1F4B     		ldr	r3, .L50+8
 727 000a A360     		str	r3, [r4, #8]
  58:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_pin = GPIO_PIN_2; 
 728              		.loc 3 58 0
 729 000c 0425     		movs	r5, #4
 730 000e A581     		strh	r5, [r4, #12]	@ movhi
  59:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_port = GPIOD;
 731              		.loc 3 59 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 22


 732 0010 2361     		str	r3, [r4, #16]
  60:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_pin = GPIO_PIN_0;
 733              		.loc 3 60 0
 734 0012 0123     		movs	r3, #1
 735 0014 A382     		strh	r3, [r4, #20]	@ movhi
  61:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].channel = TIM_CHANNEL_3;
 736              		.loc 3 61 0
 737 0016 0827     		movs	r7, #8
 738 0018 E761     		str	r7, [r4, #28]
  62:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].max_omega = 17.5;
 739              		.loc 3 62 0
 740 001a 1C49     		ldr	r1, .L50+12
 741 001c 2160     		str	r1, [r4]	@ float
  63:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].tolerance = 0.2;
 742              		.loc 3 63 0
 743 001e 1C4A     		ldr	r2, .L50+16
 744 0020 6260     		str	r2, [r4, #4]	@ float
  64:Core/Src/robot/robo_init.cpp **** 
  65:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].htim = &htim8;
 745              		.loc 3 65 0
 746 0022 A063     		str	r0, [r4, #56]
  66:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_port = GPIOC;
 747              		.loc 3 66 0
 748 0024 1B4B     		ldr	r3, .L50+20
 749 0026 A362     		str	r3, [r4, #40]
  67:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_pin = GPIO_PIN_11;
 750              		.loc 3 67 0
 751 0028 4FF40063 		mov	r3, #2048
 752 002c A385     		strh	r3, [r4, #44]	@ movhi
  68:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_port = GPIOA;
 753              		.loc 3 68 0
 754 002e 1A4B     		ldr	r3, .L50+24
 755 0030 2363     		str	r3, [r4, #48]
  69:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_pin = GPIO_PIN_15;
 756              		.loc 3 69 0
 757 0032 4FF40046 		mov	r6, #32768
 758 0036 A686     		strh	r6, [r4, #52]	@ movhi
  70:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].channel = TIM_CHANNEL_2;
 759              		.loc 3 70 0
 760 0038 E563     		str	r5, [r4, #60]
  71:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].max_omega = 17.5;
 761              		.loc 3 71 0
 762 003a 2162     		str	r1, [r4, #32]	@ float
  72:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].tolerance = 0.2;
 763              		.loc 3 72 0
 764 003c 6262     		str	r2, [r4, #36]	@ float
  73:Core/Src/robot/robo_init.cpp ****         
  74:Core/Src/robot/robo_init.cpp **** 
  75:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].htim = &htim8;
 765              		.loc 3 75 0
 766 003e A065     		str	r0, [r4, #88]
  76:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_port = GPIOA;
 767              		.loc 3 76 0
 768 0040 A364     		str	r3, [r4, #72]
  77:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_pin = GPIO_PIN_8;
 769              		.loc 3 77 0
 770 0042 4FF48072 		mov	r2, #256
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 23


 771 0046 A4F84C20 		strh	r2, [r4, #76]	@ movhi
  78:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_port = GPIOA;
 772              		.loc 3 78 0
 773 004a 2365     		str	r3, [r4, #80]
  79:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_pin = GPIO_PIN_10;
 774              		.loc 3 79 0
 775 004c 4FF48063 		mov	r3, #1024
 776 0050 A4F85430 		strh	r3, [r4, #84]	@ movhi
  80:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].channel = TIM_CHANNEL_4;
 777              		.loc 3 80 0
 778 0054 0C26     		movs	r6, #12
 779 0056 E665     		str	r6, [r4, #92]
  81:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].max_omega = 2.42;
 780              		.loc 3 81 0
 781 0058 104B     		ldr	r3, .L50+28
 782 005a 2364     		str	r3, [r4, #64]	@ float
  82:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].tolerance = 0.1;
 783              		.loc 3 82 0
 784 005c 104B     		ldr	r3, .L50+32
 785 005e 6364     		str	r3, [r4, #68]	@ float
  83:Core/Src/robot/robo_init.cpp **** 
  84:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Base_Start(&htim8);
 786              		.loc 3 84 0
 787 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start
 788              	.LVL64:
  85:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_PWM_Start(motor_configurations[0].htim, TIM_CHANNEL_3);
 789              		.loc 3 85 0
 790 0064 3946     		mov	r1, r7
 791 0066 A069     		ldr	r0, [r4, #24]
 792 0068 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 793              	.LVL65:
  86:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[1].htim, TIM_CHANNEL_2);
 794              		.loc 3 86 0
 795 006c 2946     		mov	r1, r5
 796 006e A06B     		ldr	r0, [r4, #56]
 797 0070 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 798              	.LVL66:
  87:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[2].htim, TIM_CHANNEL_4);
 799              		.loc 3 87 0
 800 0074 3146     		mov	r1, r6
 801 0076 A06D     		ldr	r0, [r4, #88]
 802 0078 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 803              	.LVL67:
  88:Core/Src/robot/robo_init.cpp **** }
 804              		.loc 3 88 0
 805 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 806              	.L51:
 807 007e 00BF     		.align	2
 808              	.L50:
 809 0080 00000000 		.word	.LANCHOR1
 810 0084 00000000 		.word	htim8
 811 0088 000C0240 		.word	1073875968
 812 008c 00008C41 		.word	1099694080
 813 0090 CDCC4C3E 		.word	1045220557
 814 0094 00080240 		.word	1073874944
 815 0098 00000240 		.word	1073872896
 816 009c 48E11A40 		.word	1075503432
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 24


 817 00a0 CDCCCC3D 		.word	1036831949
 818              		.cfi_endproc
 819              	.LFE497:
 821              		.section	.text._ZL12encoder_initv,"ax",%progbits
 822              		.align	1
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu fpv4-sp-d16
 828              	_ZL12encoder_initv:
 829              	.LFB498:
  89:Core/Src/robot/robo_init.cpp **** 
  90:Core/Src/robot/robo_init.cpp **** void encoder_init(){
 830              		.loc 3 90 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834 0000 38B5     		push	{r3, r4, r5, lr}
 835              	.LCFI1:
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 3, -16
 838              		.cfi_offset 4, -12
 839              		.cfi_offset 5, -8
 840              		.cfi_offset 14, -4
  91:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].id = 0;
 841              		.loc 3 91 0
 842 0002 0F4C     		ldr	r4, .L54
 843 0004 0023     		movs	r3, #0
 844 0006 2370     		strb	r3, [r4]
  92:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 845              		.loc 3 92 0
 846 0008 4FF47A65 		mov	r5, #4000
 847 000c 2581     		strh	r5, [r4, #8]	@ movhi
  93:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].henc = &htim2;
 848              		.loc 3 93 0
 849 000e 0D48     		ldr	r0, .L54+4
 850 0010 6060     		str	r0, [r4, #4]
  94:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[0].henc, TIM_CHANNEL_ALL);
 851              		.loc 3 94 0
 852 0012 1821     		movs	r1, #24
 853 0014 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 854              	.LVL68:
  95:Core/Src/robot/robo_init.cpp **** 
  96:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].id = 1;
 855              		.loc 3 96 0
 856 0018 0123     		movs	r3, #1
 857 001a 2373     		strb	r3, [r4, #12]
  97:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 858              		.loc 3 97 0
 859 001c A582     		strh	r5, [r4, #20]	@ movhi
  98:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].henc = &htim1;
 860              		.loc 3 98 0
 861 001e 0A48     		ldr	r0, .L54+8
 862 0020 2061     		str	r0, [r4, #16]
  99:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[1].henc, TIM_CHANNEL_ALL);
 863              		.loc 3 99 0
 864 0022 1821     		movs	r1, #24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 25


 865 0024 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 866              	.LVL69:
 100:Core/Src/robot/robo_init.cpp **** 	
 101:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].id = 2;
 867              		.loc 3 101 0
 868 0028 0223     		movs	r3, #2
 869 002a 2376     		strb	r3, [r4, #24]
 102:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].ppr = 850 *BEARING_TO_STEERING_RATIO*4;
 870              		.loc 3 102 0
 871 002c 46F64023 		movw	r3, #27200
 872 0030 2384     		strh	r3, [r4, #32]	@ movhi
 103:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].henc = &htim3;
 873              		.loc 3 103 0
 874 0032 0648     		ldr	r0, .L54+12
 875 0034 E061     		str	r0, [r4, #28]
 104:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[2].henc, TIM_CHANNEL_ALL);
 876              		.loc 3 104 0
 877 0036 1821     		movs	r1, #24
 878 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 879              	.LVL70:
 105:Core/Src/robot/robo_init.cpp **** }
 880              		.loc 3 105 0
 881 003c 38BD     		pop	{r3, r4, r5, pc}
 882              	.L55:
 883 003e 00BF     		.align	2
 884              	.L54:
 885 0040 00000000 		.word	.LANCHOR2
 886 0044 00000000 		.word	htim2
 887 0048 00000000 		.word	htim1
 888 004c 00000000 		.word	htim3
 889              		.cfi_endproc
 890              	.LFE498:
 892              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 893              		.align	1
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	_Z41__static_initialization_and_destruction_0ii:
 900              	.LFB499:
 901              		.loc 3 105 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL71:
 906 0000 0128     		cmp	r0, #1
 907 0002 00D0     		beq	.L64
 908              	.L61:
 909 0004 7047     		bx	lr
 910              	.L64:
 911              		.loc 3 105 0 is_stmt 0 discriminator 1
 912 0006 4FF6FF73 		movw	r3, #65535
 913 000a 9942     		cmp	r1, r3
 914 000c FAD1     		bne	.L61
 915              		.loc 3 105 0
 916 000e 10B5     		push	{r4, lr}
 917              	.LCFI2:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 26


 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 4, -8
 920              		.cfi_offset 14, -4
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 921              		.loc 3 3 0 is_stmt 1
 922 0010 1E4B     		ldr	r3, .L65
 923              	.LVL72:
 924              	.L59:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 925              		.loc 3 3 0 is_stmt 0 discriminator 4
 926 0012 0028     		cmp	r0, #0
 927 0014 15DB     		blt	.L58
 928              	.LVL73:
 929              	.LBB397:
 930              	.LBB398:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 931              		.loc 6 18 0 is_stmt 1
 932 0016 0021     		movs	r1, #0
 933 0018 1961     		str	r1, [r3, #16]
 934              	.LVL74:
 935              	.LBB399:
 936              	.LBB400:
 937              	.LBB401:
 938              	.LBB402:
 939              	.LBB403:
 940              	.LBB404:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 941              		.loc 1 11 0
 942 001a 0022     		movs	r2, #0
 943 001c 9A61     		str	r2, [r3, #24]	@ float
 944              	.LVL75:
 945              	.LBE404:
 946              	.LBE403:
 947              	.LBB405:
 948              	.LBB406:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 949              		.loc 1 12 0
 950 001e DA61     		str	r2, [r3, #28]	@ float
 951              	.LVL76:
 952              	.LBE406:
 953              	.LBE405:
 954              	.LBB407:
 955              	.LBB408:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 956              		.loc 1 13 0
 957 0020 1A62     		str	r2, [r3, #32]	@ float
 958              	.LVL77:
 959              	.LBE408:
 960              	.LBE407:
 961              	.LBE402:
 962              	.LBE401:
  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 963              		.loc 1 50 0
 964 0022 1B4C     		ldr	r4, .L65+4
 965 0024 5C61     		str	r4, [r3, #20]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 966              		.loc 1 51 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 27


 967 0026 DA62     		str	r2, [r3, #44]	@ float
  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 968              		.loc 1 52 0
 969 0028 1A63     		str	r2, [r3, #48]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 970              		.loc 1 53 0
 971 002a 5A63     		str	r2, [r3, #52]	@ float
 972              	.LVL78:
 973              	.LBE400:
 974              	.LBE399:
 975              	.LBB409:
 976              	.LBB410:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
 977              		.loc 4 29 0
 978 002c 9963     		str	r1, [r3, #56]
 979              	.LVL79:
 980              	.LBE410:
 981              	.LBE409:
 982              	.LBB411:
 983              	.LBB412:
  19:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 984              		.loc 5 19 0
 985 002e 1964     		str	r1, [r3, #64]
 986 0030 5A64     		str	r2, [r3, #68]	@ float
 987 0032 9A64     		str	r2, [r3, #72]	@ float
 988 0034 DA64     		str	r2, [r3, #76]	@ float
 989 0036 1965     		str	r1, [r3, #80]
 990 0038 D963     		str	r1, [r3, #60]
 991              	.LVL80:
 992              	.LBE412:
 993              	.LBE411:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 994              		.loc 6 18 0
 995 003a 5A65     		str	r2, [r3, #84]	@ float
 996              	.LVL81:
 997              	.LBE398:
 998              	.LBE397:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 999              		.loc 3 3 0
 1000 003c 5833     		adds	r3, r3, #88
 1001 003e 0138     		subs	r0, r0, #1
 1002 0040 E7E7     		b	.L59
 1003              	.L58:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 1004              		.loc 3 3 0 is_stmt 0 discriminator 2
 1005 0042 144C     		ldr	r4, .L65+8
 1006 0044 2246     		mov	r2, r4
 1007 0046 1449     		ldr	r1, .L65+12
 1008 0048 0020     		movs	r0, #0
 1009 004a FFF7FEFF 		bl	__aeabi_atexit
 1010              	.LVL82:
 1011              	.LBB413:
 1012              	.LBB414:
 1013              	.LBB415:
 1014              	.LBB416:
 1015              	.LBB417:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 28


 1016              		.loc 4 29 0 is_stmt 1 discriminator 2
 1017 004e 1348     		ldr	r0, .L65+16
 1018 0050 0022     		movs	r2, #0
 1019 0052 8260     		str	r2, [r0, #8]
 1020              	.LVL83:
 1021              	.LBE417:
 1022              	.LBE416:
 1023              	.LBE415:
 1024              	.LBB418:
 1025              	.LBB419:
 1026              	.LBB420:
  19:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 1027              		.loc 5 19 0 discriminator 2
 1028 0054 0261     		str	r2, [r0, #16]
 1029 0056 0023     		movs	r3, #0
 1030 0058 4361     		str	r3, [r0, #20]	@ float
 1031 005a 8361     		str	r3, [r0, #24]	@ float
 1032 005c C361     		str	r3, [r0, #28]	@ float
 1033 005e 0262     		str	r2, [r0, #32]
 1034 0060 C260     		str	r2, [r0, #12]
 1035              	.LVL84:
 1036              	.LBE420:
 1037              	.LBE419:
 1038              	.LBE418:
 1039              	.LBB421:
 1040              	.LBB422:
 1041              	.LBB423:
 1042              	.LBB424:
 1043              	.LBB425:
 1044              	.LBB426:
 1045              	.LBB427:
 1046              	.LBB428:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1047              		.loc 1 11 0 discriminator 2
 1048 0062 8362     		str	r3, [r0, #40]	@ float
 1049              	.LVL85:
 1050              	.LBE428:
 1051              	.LBE427:
 1052              	.LBB429:
 1053              	.LBB430:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1054              		.loc 1 12 0 discriminator 2
 1055 0064 C362     		str	r3, [r0, #44]	@ float
 1056              	.LVL86:
 1057              	.LBE430:
 1058              	.LBE429:
 1059              	.LBB431:
 1060              	.LBB432:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1061              		.loc 1 13 0 discriminator 2
 1062 0066 0363     		str	r3, [r0, #48]	@ float
 1063              	.LVL87:
 1064              	.LBE432:
 1065              	.LBE431:
 1066              	.LBE426:
 1067              	.LBE425:
 1068              	.LBE424:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 29


  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1069              		.loc 1 50 0 discriminator 2
 1070 0068 094A     		ldr	r2, .L65+4
 1071 006a 4262     		str	r2, [r0, #36]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 1072              		.loc 1 51 0 discriminator 2
 1073 006c C363     		str	r3, [r0, #60]	@ float
  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 1074              		.loc 1 52 0 discriminator 2
 1075 006e 0364     		str	r3, [r0, #64]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 1076              		.loc 1 53 0 discriminator 2
 1077 0070 4364     		str	r3, [r0, #68]	@ float
 1078              	.LVL88:
 1079              	.LBE423:
 1080              	.LBE422:
 1081              	.LBE421:
 1082              	.LBB433:
 1083              	.LBB434:
 1084              	.LBB435:
 1085              	.LBB436:
 1086              	.LBB437:
 1087              	.LBB438:
 1088              	.LBB439:
 1089              	.LBB440:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1090              		.loc 1 11 0 discriminator 2
 1091 0072 C364     		str	r3, [r0, #76]	@ float
 1092              	.LVL89:
 1093              	.LBE440:
 1094              	.LBE439:
 1095              	.LBB441:
 1096              	.LBB442:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1097              		.loc 1 12 0 discriminator 2
 1098 0074 0365     		str	r3, [r0, #80]	@ float
 1099              	.LVL90:
 1100              	.LBE442:
 1101              	.LBE441:
 1102              	.LBB443:
 1103              	.LBB444:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1104              		.loc 1 13 0 discriminator 2
 1105 0076 4365     		str	r3, [r0, #84]	@ float
 1106              	.LVL91:
 1107              	.LBE444:
 1108              	.LBE443:
 1109              	.LBE438:
 1110              	.LBE437:
 1111              	.LBE436:
 203:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1112              		.loc 1 203 0 discriminator 2
 1113 0078 094A     		ldr	r2, .L65+20
 1114 007a 8264     		str	r2, [r0, #72]
 204:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 1115              		.loc 1 204 0 discriminator 2
 1116 007c 0366     		str	r3, [r0, #96]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 30


 205:Core/Inc/utils/pid_algorithms.h ****         }
 1117              		.loc 1 205 0 discriminator 2
 1118 007e 4366     		str	r3, [r0, #100]	@ float
 1119              	.LVL92:
 1120              	.LBE435:
 1121              	.LBE434:
 1122              	.LBE433:
 1123              	.LBE414:
 1124              	.LBE413:
   4:Core/Src/robot/robo_init.cpp **** 
 1125              		.loc 3 4 0 discriminator 2
 1126 0080 2246     		mov	r2, r4
 1127 0082 0849     		ldr	r1, .L65+24
 1128 0084 FFF7FEFF 		bl	__aeabi_atexit
 1129              	.LVL93:
 1130              		.loc 3 105 0 discriminator 2
 1131 0088 10BD     		pop	{r4, pc}
 1132              	.L66:
 1133 008a 00BF     		.align	2
 1134              	.L65:
 1135 008c 00000000 		.word	.LANCHOR0
 1136 0090 08000000 		.word	_ZTV12Discrete_PID+8
 1137 0094 00000000 		.word	__dso_handle
 1138 0098 00000000 		.word	__tcf_0
 1139 009c 00000000 		.word	.LANCHOR3
 1140 00a0 08000000 		.word	_ZTV9Angle_PID+8
 1141 00a4 00000000 		.word	_ZN8steeringD1Ev
 1142              		.cfi_endproc
 1143              	.LFE499:
 1145              		.section	.text._ZN9Angle_PIDD0Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 1146              		.align	1
 1147              		.weak	_ZN9Angle_PIDD0Ev
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1151              		.fpu fpv4-sp-d16
 1153              	_ZN9Angle_PIDD0Ev:
 1154              	.LFB421:
 212:Core/Inc/utils/pid_algorithms.h **** 
 1155              		.loc 1 212 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              	.LVL94:
 1160 0000 10B5     		push	{r4, lr}
 1161              	.LCFI3:
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 4, -8
 1164              		.cfi_offset 14, -4
 1165 0002 0446     		mov	r4, r0
 212:Core/Inc/utils/pid_algorithms.h **** 
 1166              		.loc 1 212 0
 1167 0004 2021     		movs	r1, #32
 1168 0006 FFF7FEFF 		bl	_ZdlPvj
 1169              	.LVL95:
 1170 000a 2046     		mov	r0, r4
 1171 000c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 31


 1172              		.cfi_endproc
 1173              	.LFE421:
 1175              		.section	.text._ZN12Discrete_PIDD0Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
 1176              		.align	1
 1177              		.weak	_ZN12Discrete_PIDD0Ev
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv4-sp-d16
 1183              	_ZN12Discrete_PIDD0Ev:
 1184              	.LFB398:
  59:Core/Inc/utils/pid_algorithms.h **** 
 1185              		.loc 1 59 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              	.LVL96:
 1190 0000 10B5     		push	{r4, lr}
 1191              	.LCFI4:
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 4, -8
 1194              		.cfi_offset 14, -4
 1195 0002 0446     		mov	r4, r0
  59:Core/Inc/utils/pid_algorithms.h **** 
 1196              		.loc 1 59 0
 1197 0004 2421     		movs	r1, #36
 1198 0006 FFF7FEFF 		bl	_ZdlPvj
 1199              	.LVL97:
 1200 000a 2046     		mov	r0, r4
 1201 000c 10BD     		pop	{r4, pc}
 1202              		.cfi_endproc
 1203              	.LFE398:
 1205              		.section	.text._Z9robo_initv,"ax",%progbits
 1206              		.align	1
 1207              		.global	_Z9robo_initv
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	_Z9robo_initv:
 1214              	.LFB492:
  17:Core/Src/robot/robo_init.cpp **** 	motor_init();
 1215              		.loc 3 17 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219 0000 08B5     		push	{r3, lr}
 1220              	.LCFI5:
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 3, -8
 1223              		.cfi_offset 14, -4
  18:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
 1224              		.loc 3 18 0
 1225 0002 FFF7FEFF 		bl	_ZL10motor_initv
 1226              	.LVL98:
  19:Core/Src/robot/robo_init.cpp **** 	pid_init();
 1227              		.loc 3 19 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 32


 1228 0006 FFF7FEFF 		bl	_ZL12encoder_initv
 1229              	.LVL99:
  20:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
 1230              		.loc 3 20 0
 1231 000a FFF7FEFF 		bl	_ZL8pid_initv
 1232              	.LVL100:
  21:Core/Src/robot/robo_init.cpp **** 	leg_init();
 1233              		.loc 3 21 0
 1234 000e FFF7FEFF 		bl	_ZL17limit_switch_initv
 1235              	.LVL101:
  22:Core/Src/robot/robo_init.cpp **** 	steering_init();
 1236              		.loc 3 22 0
 1237 0012 FFF7FEFF 		bl	_ZL8leg_initv
 1238              	.LVL102:
  23:Core/Src/robot/robo_init.cpp **** }
 1239              		.loc 3 23 0
 1240 0016 FFF7FEFF 		bl	_ZL13steering_initv
 1241              	.LVL103:
  24:Core/Src/robot/robo_init.cpp **** 
 1242              		.loc 3 24 0
 1243 001a 08BD     		pop	{r3, pc}
 1244              		.cfi_endproc
 1245              	.LFE492:
 1247              		.section	.text._GLOBAL__sub_I_leg,"ax",%progbits
 1248              		.align	1
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu fpv4-sp-d16
 1254              	_GLOBAL__sub_I_leg:
 1255              	.LFB501:
 1256              		.loc 3 105 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260 0000 08B5     		push	{r3, lr}
 1261              	.LCFI6:
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 3, -8
 1264              		.cfi_offset 14, -4
 1265              		.loc 3 105 0
 1266 0002 4FF6FF71 		movw	r1, #65535
 1267 0006 0120     		movs	r0, #1
 1268 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1269              	.LVL104:
 1270 000c 08BD     		pop	{r3, pc}
 1271              		.cfi_endproc
 1272              	.LFE501:
 1274              		.section	.init_array,"aw",%init_array
 1275              		.align	2
 1276 0000 00000000 		.word	_GLOBAL__sub_I_leg(target1)
 1277              		.weak	_ZTS13PID_Algorithm
 1278              		.section	.rodata._ZTS13PID_Algorithm,"aG",%progbits,_ZTS13PID_Algorithm,comdat
 1279              		.align	2
 1282              	_ZTS13PID_Algorithm:
 1283 0000 31335049 		.ascii	"13PID_Algorithm\000"
 1283      445F416C 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 33


 1283      676F7269 
 1283      74686D00 
 1284              		.weak	_ZTI13PID_Algorithm
 1285              		.section	.rodata._ZTI13PID_Algorithm,"aG",%progbits,_ZTI13PID_Algorithm,comdat
 1286              		.align	2
 1289              	_ZTI13PID_Algorithm:
 1290 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 1291 0004 00000000 		.word	_ZTS13PID_Algorithm
 1292              		.weak	_ZTS12Discrete_PID
 1293              		.section	.rodata._ZTS12Discrete_PID,"aG",%progbits,_ZTS12Discrete_PID,comdat
 1294              		.align	2
 1297              	_ZTS12Discrete_PID:
 1298 0000 31324469 		.ascii	"12Discrete_PID\000"
 1298      73637265 
 1298      74655F50 
 1298      494400
 1299              		.weak	_ZTI12Discrete_PID
 1300              		.section	.rodata._ZTI12Discrete_PID,"aG",%progbits,_ZTI12Discrete_PID,comdat
 1301              		.align	2
 1304              	_ZTI12Discrete_PID:
 1305 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1306 0004 00000000 		.word	_ZTS12Discrete_PID
 1307 0008 00000000 		.word	_ZTI13PID_Algorithm
 1308              		.weak	_ZTS9Angle_PID
 1309              		.section	.rodata._ZTS9Angle_PID,"aG",%progbits,_ZTS9Angle_PID,comdat
 1310              		.align	2
 1313              	_ZTS9Angle_PID:
 1314 0000 39416E67 		.ascii	"9Angle_PID\000"
 1314      6C655F50 
 1314      494400
 1315              		.weak	_ZTI9Angle_PID
 1316              		.section	.rodata._ZTI9Angle_PID,"aG",%progbits,_ZTI9Angle_PID,comdat
 1317              		.align	2
 1320              	_ZTI9Angle_PID:
 1321 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1322 0004 00000000 		.word	_ZTS9Angle_PID
 1323 0008 00000000 		.word	_ZTI13PID_Algorithm
 1324              		.weak	_ZTV12Discrete_PID
 1325              		.section	.rodata._ZTV12Discrete_PID,"aG",%progbits,_ZTV12Discrete_PID,comdat
 1326              		.align	2
 1329              	_ZTV12Discrete_PID:
 1330 0000 00000000 		.word	0
 1331 0004 00000000 		.word	_ZTI12Discrete_PID
 1332 0008 00000000 		.word	_ZN12Discrete_PID7computeEfm
 1333 000c 00000000 		.word	_ZN12Discrete_PIDD1Ev
 1334 0010 00000000 		.word	_ZN12Discrete_PIDD0Ev
 1335              		.weak	_ZTV9Angle_PID
 1336              		.section	.rodata._ZTV9Angle_PID,"aG",%progbits,_ZTV9Angle_PID,comdat
 1337              		.align	2
 1340              	_ZTV9Angle_PID:
 1341 0000 00000000 		.word	0
 1342 0004 00000000 		.word	_ZTI9Angle_PID
 1343 0008 00000000 		.word	_ZN9Angle_PID7computeEfm
 1344 000c 00000000 		.word	_ZN9Angle_PIDD1Ev
 1345 0010 00000000 		.word	_ZN9Angle_PIDD0Ev
 1346              		.global	steering
 1347              		.global	leg
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 34


 1348              		.section	.bss._ZL20motor_configurations,"aw",%nobits
 1349              		.align	2
 1350              		.set	.LANCHOR1,. + 0
 1353              	_ZL20motor_configurations:
 1354 0000 00000000 		.space	96
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1355              		.section	.bss._ZL22encoder_configurations,"aw",%nobits
 1356              		.align	2
 1357              		.set	.LANCHOR2,. + 0
 1360              	_ZL22encoder_configurations:
 1361 0000 00000000 		.space	36
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1362              		.section	.bss.leg,"aw",%nobits
 1363              		.align	2
 1364              		.set	.LANCHOR0,. + 0
 1367              	leg:
 1368 0000 00000000 		.space	176
 1368      00000000 
 1368      00000000 
 1368      00000000 
 1368      00000000 
 1369              		.section	.bss.steering,"aw",%nobits
 1370              		.align	2
 1371              		.set	.LANCHOR3,. + 0
 1374              	steering:
 1375 0000 00000000 		.space	104
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1376              		.text
 1377              	.Letext0:
 1378              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1379              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1380              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1381              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1382              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1383              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1384              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1385              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1386              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1387              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1388              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1389              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1390              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1391              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1392              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1393              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1394              		.file 23 "Core/Inc/periphs/tim.h"
 1395              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1396              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 35


 1397              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1398              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1399              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1400              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1401              		.file 30 "Core/Inc/devs/limit_switch.h"
 1402              		.file 31 "Core/Inc/periphs/usart.h"
 1403              		.file 32 "Core/Inc/periphs/adc.h"
 1404              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 robo_init.cpp
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:18     .text._ZN12Discrete_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:42     .text._ZN12Discrete_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:49     .text._ZN12Discrete_PID7computeEfm:00000000 _ZN12Discrete_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:153    .text._ZN12Discrete_PID7computeEfm:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:158    .text._ZN9Angle_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:181    .text._ZN9Angle_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:188    .text._ZN9Angle_PID7computeEfm:00000000 _ZN9Angle_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:293    .text._ZN8steeringD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:317    .text._ZL8leg_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:323    .text._ZL8leg_initv:00000000 _ZL8leg_initv
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:391    .text._ZL8leg_initv:00000020 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:399    .text._ZL13steering_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:405    .text._ZL13steering_initv:00000000 _ZL13steering_initv
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:437    .text._ZL13steering_initv:0000000c $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:444    .text._ZL8pid_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:450    .text._ZL8pid_initv:00000000 _ZL8pid_initv
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:609    .text._ZL8pid_initv:0000005c $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:625    .text._ZL17limit_switch_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:631    .text._ZL17limit_switch_initv:00000000 _ZL17limit_switch_initv
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:656    .text._ZL17limit_switch_initv:00000014 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:663    .text.__tcf_0:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:669    .text.__tcf_0:00000000 __tcf_0
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:694    .text.__tcf_0:00000010 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:700    .text._ZL10motor_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:706    .text._ZL10motor_initv:00000000 _ZL10motor_initv
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:809    .text._ZL10motor_initv:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:822    .text._ZL12encoder_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:828    .text._ZL12encoder_initv:00000000 _ZL12encoder_initv
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:885    .text._ZL12encoder_initv:00000040 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:893    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:899    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1135   .text._Z41__static_initialization_and_destruction_0ii:0000008c $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1329   .rodata._ZTV12Discrete_PID:00000000 _ZTV12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1340   .rodata._ZTV9Angle_PID:00000000 _ZTV9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1146   .text._ZN9Angle_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1153   .text._ZN9Angle_PIDD0Ev:00000000 _ZN9Angle_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1176   .text._ZN12Discrete_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1183   .text._ZN12Discrete_PIDD0Ev:00000000 _ZN12Discrete_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1206   .text._Z9robo_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1213   .text._Z9robo_initv:00000000 _Z9robo_initv
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1248   .text._GLOBAL__sub_I_leg:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1254   .text._GLOBAL__sub_I_leg:00000000 _GLOBAL__sub_I_leg
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1275   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1282   .rodata._ZTS13PID_Algorithm:00000000 _ZTS13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1279   .rodata._ZTS13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1289   .rodata._ZTI13PID_Algorithm:00000000 _ZTI13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1286   .rodata._ZTI13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1297   .rodata._ZTS12Discrete_PID:00000000 _ZTS12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1294   .rodata._ZTS12Discrete_PID:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s 			page 37


C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1304   .rodata._ZTI12Discrete_PID:00000000 _ZTI12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1301   .rodata._ZTI12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1313   .rodata._ZTS9Angle_PID:00000000 _ZTS9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1310   .rodata._ZTS9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1320   .rodata._ZTI9Angle_PID:00000000 _ZTI9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1317   .rodata._ZTI9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1326   .rodata._ZTV12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1337   .rodata._ZTV9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1374   .bss.steering:00000000 steering
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1367   .bss.leg:00000000 leg
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1349   .bss._ZL20motor_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1353   .bss._ZL20motor_configurations:00000000 _ZL20motor_configurations
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1356   .bss._ZL22encoder_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1360   .bss._ZL22encoder_configurations:00000000 _ZL22encoder_configurations
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1363   .bss.leg:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccugMZJf.s:1370   .bss.steering:00000000 $d
                           .group:00000000 _ZN12Discrete_PIDD5Ev
                           .group:00000000 _ZN9Angle_PIDD5Ev
                           .group:00000000 _ZN8steeringD5Ev

UNDEFINED SYMBOLS
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
htim8
HAL_TIM_Encoder_Start
htim2
htim1
htim3
__aeabi_atexit
__dso_handle
_ZdlPvj
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
