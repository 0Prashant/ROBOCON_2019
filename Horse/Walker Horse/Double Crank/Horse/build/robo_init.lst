ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_init.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN12Discrete_PIDD2Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN12Discrete_PIDD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN12Discrete_PIDD2Ev:
  26              	.LFB396:
  27              		.file 1 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 2


  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 59 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE396:
  39              		.weak	_ZN12Discrete_PIDD1Ev
  40              		.thumb_set _ZN12Discrete_PIDD1Ev,_ZN12Discrete_PIDD2Ev
  41              		.section	.text._ZN12Discrete_PID7computeEfm,"axG",%progbits,_ZN12Discrete_PID7computeEfm,comdat
  42              		.align	1
  43              		.weak	_ZN12Discrete_PID7computeEfm
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZN12Discrete_PID7computeEfm:
  50              	.LFB399:
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 3


  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  51              		.loc 1 75 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL1:
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  57              		.loc 1 77 0
  58 0000 07EE901A 		vmov	s15, r1	@ int
  59 0004 F8EE676A 		vcvt.f32.u32	s13, s15
  60 0008 DFED217A 		vldr.32	s15, .L11
  61 000c 86EEA77A 		vdiv.f32	s14, s13, s15
  62              	.LVL2:
  63              	.LBB322:
  64              	.LBB323:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  65              		.loc 1 20 0
  66 0010 90ED016A 		vldr.32	s12, [r0, #4]
  67              	.LVL3:
  68              	.LBE323:
  69              	.LBE322:
  70              	.LBB324:
  71              	.LBB325:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  72              		.loc 1 21 0
  73 0014 D0ED025A 		vldr.32	s11, [r0, #8]
  74              	.LVL4:
  75              	.LBE325:
  76              	.LBE324:
  77              	.LBB326:
  78              	.LBB327:
  22:Core/Inc/utils/pid_algorithms.h **** 
  79              		.loc 1 22 0
  80 0018 D0ED037A 		vldr.32	s15, [r0, #12]
  81              	.LVL5:
  82              	.LBE327:
  83              	.LBE326:
  78:Core/Inc/utils/pid_algorithms.h **** 
  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
  84              		.loc 1 81 0
  85 001c C7EE876A 		vdiv.f32	s13, s15, s14
  86              	.LVL6:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
  87              		.loc 1 83 0
  88 0020 76EE867A 		vadd.f32	s15, s13, s12
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 4


  89              	.LVL7:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
  90              		.loc 1 84 0
  91 0024 27EE257A 		vmul.f32	s14, s14, s11
  92              	.LVL8:
  93 0028 37EE467A 		vsub.f32	s14, s14, s12
  94 002c 36EEA66A 		vadd.f32	s12, s13, s13
  95 0030 37EE467A 		vsub.f32	s14, s14, s12
  96              	.LVL9:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
  97              		.loc 1 87 0
  98 0034 67EE807A 		vmul.f32	s15, s15, s0
  99              	.LVL10:
 100 0038 90ED076A 		vldr.32	s12, [r0, #28]
 101 003c 26EE077A 		vmul.f32	s14, s12, s14
 102              	.LVL11:
 103 0040 77EE877A 		vadd.f32	s15, s15, s14
 104 0044 90ED087A 		vldr.32	s14, [r0, #32]
 105 0048 67EE266A 		vmul.f32	s13, s14, s13
 106              	.LVL12:
 107 004c 77EEA67A 		vadd.f32	s15, s15, s13
 108 0050 90ED067A 		vldr.32	s14, [r0, #24]
 109 0054 77EE877A 		vadd.f32	s15, s15, s14
 110 0058 C0ED067A 		vstr.32	s15, [r0, #24]
 111              	.LVL13:
 112              	.LBB328:
 113              	.LBB329:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 114              		.loc 1 30 0
 115 005c 90ED047A 		vldr.32	s14, [r0, #16]
 116              	.LVL14:
 117              	.LBE329:
 118              	.LBE328:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 119              		.loc 1 89 0
 120 0060 F4EEC77A 		vcmpe.f32	s15, s14
 121 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 122 0068 09DC     		bgt	.L10
 123              	.LVL15:
 124              	.LBB330:
 125              	.LBB331:
  31:Core/Inc/utils/pid_algorithms.h **** 
 126              		.loc 1 31 0
 127 006a 90ED057A 		vldr.32	s14, [r0, #20]
 128              	.LVL16:
 129              	.LBE331:
 130              	.LBE330:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 131              		.loc 1 93 0
 132 006e F4EEC77A 		vcmpe.f32	s15, s14
 133 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 5


 134 0076 04D5     		bpl	.L5
  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 135              		.loc 1 95 0
 136 0078 80ED067A 		vstr.32	s14, [r0, #24]
 137 007c 01E0     		b	.L5
 138              	.L10:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 139              		.loc 1 91 0
 140 007e 80ED067A 		vstr.32	s14, [r0, #24]
 141              	.L5:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 142              		.loc 1 98 0
 143 0082 80ED086A 		vstr.32	s12, [r0, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 144              		.loc 1 99 0
 145 0086 80ED070A 		vstr.32	s0, [r0, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 102:Core/Inc/utils/pid_algorithms.h ****         }
 146              		.loc 1 102 0
 147 008a 90ED060A 		vldr.32	s0, [r0, #24]
 148              	.LVL17:
 149 008e 7047     		bx	lr
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 0090 00007A44 		.word	1148846080
 154              		.cfi_endproc
 155              	.LFE399:
 157              		.section	.text._ZN9Angle_PIDD2Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 158              		.align	1
 159              		.weak	_ZN9Angle_PIDD2Ev
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	_ZN9Angle_PIDD2Ev:
 166              	.LFB419:
 103:Core/Inc/utils/pid_algorithms.h **** 
 104:Core/Inc/utils/pid_algorithms.h ****       private:
 105:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 106:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 107:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 108:Core/Inc/utils/pid_algorithms.h **** };
 109:Core/Inc/utils/pid_algorithms.h **** 
 110:Core/Inc/utils/pid_algorithms.h **** class FilteredDiscrete_PID : public PID_Algorithm
 111:Core/Inc/utils/pid_algorithms.h **** {
 112:Core/Inc/utils/pid_algorithms.h ****       public:
 113:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(float p, float i, float d, float N = 0) : PID_Algorithm(p, i, d)
 114:Core/Inc/utils/pid_algorithms.h ****         {
 115:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 116:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 117:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 118:Core/Inc/utils/pid_algorithms.h ****                 set_N(N);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 6


 119:Core/Inc/utils/pid_algorithms.h ****         }
 120:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID()
 121:Core/Inc/utils/pid_algorithms.h ****         {
 122:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 123:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 124:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 125:Core/Inc/utils/pid_algorithms.h ****                 set_N(0);
 126:Core/Inc/utils/pid_algorithms.h ****         }
 127:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(FilteredDiscrete_PID &&) = default;
 128:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(const FilteredDiscrete_PID &) = default;
 129:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(FilteredDiscrete_PID &&) = default;
 130:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(const FilteredDiscrete_PID &) = default;
 131:Core/Inc/utils/pid_algorithms.h ****         ~FilteredDiscrete_PID() {}
 132:Core/Inc/utils/pid_algorithms.h **** 
 133:Core/Inc/utils/pid_algorithms.h ****         void set_N(float N) { N_ = N; }
 134:Core/Inc/utils/pid_algorithms.h **** 
 135:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 136:Core/Inc/utils/pid_algorithms.h ****          * 1) Filtered Discrete PID control Algorithm
 137:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
 138:Core/Inc/utils/pid_algorithms.h ****          * 3) Filtered Derivative used
 139:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
 140:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
 141:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*N*(z-1)/{(z -1) + N*Ts}
 142:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
 143:Core/Inc/utils/pid_algorithms.h ****          *      y(t) = (1 + a)*y(t-1) - a*y(t-2) + alpha*x(t) + beta*x(t-1) + gamma*x(t-2)
 144:Core/Inc/utils/pid_algorithms.h ****          *      where,
 145:Core/Inc/utils/pid_algorithms.h ****          *              a = 1 - N_*Ts
 146:Core/Inc/utils/pid_algorithms.h ****          *              alpha = P + D*N
 147:Core/Inc/utils/pid_algorithms.h ****          *              beta = -(1 + a)*P + I*Ts - 2*D*N
 148:Core/Inc/utils/pid_algorithms.h ****          *              gamma = a*P - a*I*Ts + D*N
 149:Core/Inc/utils/pid_algorithms.h ****          */
 150:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 151:Core/Inc/utils/pid_algorithms.h ****         {
 152:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
 153:Core/Inc/utils/pid_algorithms.h **** 
 154:Core/Inc/utils/pid_algorithms.h ****                 float a, alpha, beta, gamma;
 155:Core/Inc/utils/pid_algorithms.h ****                 float output;
 156:Core/Inc/utils/pid_algorithms.h **** 
 157:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 158:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 159:Core/Inc/utils/pid_algorithms.h ****                 float D = get_D();
 160:Core/Inc/utils/pid_algorithms.h **** 
 161:Core/Inc/utils/pid_algorithms.h ****                 a = 1 - N_ * Ts;
 162:Core/Inc/utils/pid_algorithms.h ****                 alpha = P + D * N_;
 163:Core/Inc/utils/pid_algorithms.h ****                 beta = -(1 + a) * P + I * Ts - 2 * D * N_;
 164:Core/Inc/utils/pid_algorithms.h ****                 gamma = a * P - a * I * Ts + D * N_;
 165:Core/Inc/utils/pid_algorithms.h **** 
 166:Core/Inc/utils/pid_algorithms.h ****                 output = (1 + a) * l_output_ - a * ll_output_ + alpha * error + beta * l_err_ + gam
 167:Core/Inc/utils/pid_algorithms.h **** 
 168:Core/Inc/utils/pid_algorithms.h ****                 ll_output_ = l_output_;
 169:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = output;
 170:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 171:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 172:Core/Inc/utils/pid_algorithms.h **** 
 173:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 174:Core/Inc/utils/pid_algorithms.h ****                 {
 175:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 7


 176:Core/Inc/utils/pid_algorithms.h ****                 }
 177:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 178:Core/Inc/utils/pid_algorithms.h ****                 {
 179:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 180:Core/Inc/utils/pid_algorithms.h ****                 }
 181:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 182:Core/Inc/utils/pid_algorithms.h ****         }
 183:Core/Inc/utils/pid_algorithms.h **** 
 184:Core/Inc/utils/pid_algorithms.h ****       private:
 185:Core/Inc/utils/pid_algorithms.h ****         float N_;
 186:Core/Inc/utils/pid_algorithms.h **** 
 187:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 188:Core/Inc/utils/pid_algorithms.h ****         float ll_output_;
 189:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 190:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 191:Core/Inc/utils/pid_algorithms.h **** };
 192:Core/Inc/utils/pid_algorithms.h **** 
 193:Core/Inc/utils/pid_algorithms.h **** class Angle_PID : public PID_Algorithm
 194:Core/Inc/utils/pid_algorithms.h **** {
 195:Core/Inc/utils/pid_algorithms.h ****       public:
 196:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
 197:Core/Inc/utils/pid_algorithms.h ****         {
 198:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 199:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 200:Core/Inc/utils/pid_algorithms.h ****         }
 201:Core/Inc/utils/pid_algorithms.h **** 
 202:Core/Inc/utils/pid_algorithms.h ****         Angle_PID()
 203:Core/Inc/utils/pid_algorithms.h ****         {
 204:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 205:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 206:Core/Inc/utils/pid_algorithms.h ****         }
 207:Core/Inc/utils/pid_algorithms.h **** 
 208:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(Angle_PID &&) = default;
 209:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(const Angle_PID &) = default;
 210:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(Angle_PID &&) = default;
 211:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(const Angle_PID &) = default;
 212:Core/Inc/utils/pid_algorithms.h ****         ~Angle_PID() { }
 167              		.loc 1 212 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL18:
 173              		.loc 1 212 0
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE419:
 178              		.weak	_ZN9Angle_PIDD1Ev
 179              		.thumb_set _ZN9Angle_PIDD1Ev,_ZN9Angle_PIDD2Ev
 180              		.section	.text._ZN9Angle_PID7computeEfm,"axG",%progbits,_ZN9Angle_PID7computeEfm,comdat
 181              		.align	1
 182              		.weak	_ZN9Angle_PID7computeEfm
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	_ZN9Angle_PID7computeEfm:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 8


 189              	.LFB422:
 213:Core/Inc/utils/pid_algorithms.h **** 
 214:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 215:Core/Inc/utils/pid_algorithms.h ****                 * 1) Angle PID control Algorithm
 216:Core/Inc/utils/pid_algorithms.h ****                 * 2) Use of Proportional Controller Only 
 217:Core/Inc/utils/pid_algorithms.h ****                 * 3) Output Limited
 218:Core/Inc/utils/pid_algorithms.h ****                 * 4) Compensator formula in Time Domain: 
 219:Core/Inc/utils/pid_algorithms.h ****                 *              y(t) = P * {(x(t) - x(t-1))/Ts}
 220:Core/Inc/utils/pid_algorithms.h ****                 */
 221:Core/Inc/utils/pid_algorithms.h **** 
 222:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 190              		.loc 1 222 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LVL19:
 196              	.LBB332:
 197              	.LBB333:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 198              		.loc 1 20 0
 199 0000 D0ED016A 		vldr.32	s13, [r0, #4]
 200              	.LVL20:
 201              	.LBE333:
 202              	.LBE332:
 203              	.LBB334:
 204              	.LBB335:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 205              		.loc 1 21 0
 206 0004 90ED027A 		vldr.32	s14, [r0, #8]
 207              	.LVL21:
 208              	.LBE335:
 209              	.LBE334:
 223:Core/Inc/utils/pid_algorithms.h ****         {
 224:Core/Inc/utils/pid_algorithms.h ****                 // float Ts = (float)dt_millis / 1000.0;
 225:Core/Inc/utils/pid_algorithms.h **** 
 226:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 227:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 228:Core/Inc/utils/pid_algorithms.h **** 
 229:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ += error;
 210              		.loc 1 229 0
 211 0008 D0ED077A 		vldr.32	s15, [r0, #28]
 212 000c 70EE277A 		vadd.f32	s15, s0, s15
 213 0010 C0ED077A 		vstr.32	s15, [r0, #28]
 230:Core/Inc/utils/pid_algorithms.h ****                 float i_term = I * err_sum_;
 214              		.loc 1 230 0
 215 0014 67EE877A 		vmul.f32	s15, s15, s14
 216              	.LVL22:
 217              	.LBB336:
 218              	.LBB337:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 219              		.loc 1 30 0
 220 0018 90ED047A 		vldr.32	s14, [r0, #16]
 221              	.LVL23:
 222              	.LBE337:
 223              	.LBE336:
 231:Core/Inc/utils/pid_algorithms.h ****                 // Clamping Integral Term
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 9


 232:Core/Inc/utils/pid_algorithms.h ****                 if (i_term > get_Upper()) {
 224              		.loc 1 232 0
 225 001c F4EEC77A 		vcmpe.f32	s15, s14
 226 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 227 0024 18DD     		ble	.L27
 228              	.LVL24:
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 234:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 229              		.loc 1 234 0
 230 0026 0023     		movs	r3, #0
 231 0028 C361     		str	r3, [r0, #28]	@ float
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 232              		.loc 1 233 0
 233 002a F0EE477A 		vmov.f32	s15, s14
 234              	.L17:
 235              	.LVL25:
 235:Core/Inc/utils/pid_algorithms.h ****                 }
 236:Core/Inc/utils/pid_algorithms.h ****                 else if (i_term < get_Lower()) {
 237:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 238:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 239:Core/Inc/utils/pid_algorithms.h ****                 }
 240:Core/Inc/utils/pid_algorithms.h **** 
 241:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = P * error + i_term;
 236              		.loc 1 241 0
 237 002e 20EE260A 		vmul.f32	s0, s0, s13
 238              	.LVL26:
 239 0032 70EE277A 		vadd.f32	s15, s0, s15
 240              	.LVL27:
 241 0036 C0ED067A 		vstr.32	s15, [r0, #24]
 242:Core/Inc/utils/pid_algorithms.h **** 
 243:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 242              		.loc 1 243 0
 243 003a F4EEC77A 		vcmpe.f32	s15, s14
 244 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 245 0042 15DC     		bgt	.L29
 246              	.LVL28:
 247              	.LBB338:
 248              	.LBB339:
  31:Core/Inc/utils/pid_algorithms.h **** 
 249              		.loc 1 31 0
 250 0044 90ED057A 		vldr.32	s14, [r0, #20]
 251              	.LVL29:
 252              	.LBE339:
 253              	.LBE338:
 244:Core/Inc/utils/pid_algorithms.h ****                 {
 245:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
 246:Core/Inc/utils/pid_algorithms.h ****                 }
 247:Core/Inc/utils/pid_algorithms.h **** 
 248:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 254              		.loc 1 248 0
 255 0048 F4EEC77A 		vcmpe.f32	s15, s14
 256 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 257 0050 10D5     		bpl	.L21
 249:Core/Inc/utils/pid_algorithms.h ****                 {
 250:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 258              		.loc 1 250 0
 259 0052 80ED067A 		vstr.32	s14, [r0, #24]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 10


 260 0056 0DE0     		b	.L21
 261              	.LVL30:
 262              	.L27:
 263              	.LBB340:
 264              	.LBB341:
  31:Core/Inc/utils/pid_algorithms.h **** 
 265              		.loc 1 31 0
 266 0058 90ED056A 		vldr.32	s12, [r0, #20]
 267              	.LVL31:
 268              	.LBE341:
 269              	.LBE340:
 236:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 270              		.loc 1 236 0
 271 005c F4EEC67A 		vcmpe.f32	s15, s12
 272 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 273 0064 E3D5     		bpl	.L17
 274              	.LVL32:
 238:Core/Inc/utils/pid_algorithms.h ****                 }
 275              		.loc 1 238 0
 276 0066 0023     		movs	r3, #0
 277 0068 C361     		str	r3, [r0, #28]	@ float
 237:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 278              		.loc 1 237 0
 279 006a F0EE467A 		vmov.f32	s15, s12
 280 006e DEE7     		b	.L17
 281              	.LVL33:
 282              	.L29:
 245:Core/Inc/utils/pid_algorithms.h ****                 }
 283              		.loc 1 245 0
 284 0070 80ED067A 		vstr.32	s14, [r0, #24]
 285              	.L21:
 251:Core/Inc/utils/pid_algorithms.h ****                 }
 252:Core/Inc/utils/pid_algorithms.h **** 
 253:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 254:Core/Inc/utils/pid_algorithms.h ****         }
 286              		.loc 1 254 0
 287 0074 90ED060A 		vldr.32	s0, [r0, #24]
 288 0078 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE422:
 292              		.section	.text._ZN8steeringD2Ev,"axG",%progbits,_ZN8steeringD5Ev,comdat
 293              		.align	1
 294              		.weak	_ZN8steeringD2Ev
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	_ZN8steeringD2Ev:
 301              	.LFB455:
 302              		.file 2 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 11


   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
 303              		.loc 2 33 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL34:
 309              		.loc 2 33 0
 310 0000 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE455:
 314              		.weak	_ZN8steeringD1Ev
 315              		.thumb_set _ZN8steeringD1Ev,_ZN8steeringD2Ev
 316              		.section	.text._ZL8leg_initv,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	_ZL8leg_initv:
 324              	.LFB493:
 325              		.file 3 "Core/Src/robot/robo_init.cpp"
   1:Core/Src/robot/robo_init.cpp **** #include "robo_init.h"
   2:Core/Src/robot/robo_init.cpp **** 
   3:Core/Src/robot/robo_init.cpp **** leg leg[2];
   4:Core/Src/robot/robo_init.cpp **** steering steering;
   5:Core/Src/robot/robo_init.cpp **** 
   6:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
   7:Core/Src/robot/robo_init.cpp **** static  encoder_config encoder_configurations[3];
   8:Core/Src/robot/robo_init.cpp **** 
   9:Core/Src/robot/robo_init.cpp **** 
  10:Core/Src/robot/robo_init.cpp **** static void motor_init();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 12


  11:Core/Src/robot/robo_init.cpp **** static void encoder_init();
  12:Core/Src/robot/robo_init.cpp **** static void pid_init();
  13:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(); 
  14:Core/Src/robot/robo_init.cpp **** static void leg_init();
  15:Core/Src/robot/robo_init.cpp **** static void steering_init();
  16:Core/Src/robot/robo_init.cpp **** 
  17:Core/Src/robot/robo_init.cpp **** void robo_init(){ 
  18:Core/Src/robot/robo_init.cpp **** 	motor_init();
  19:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
  20:Core/Src/robot/robo_init.cpp **** 	pid_init();
  21:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
  22:Core/Src/robot/robo_init.cpp **** 	leg_init();
  23:Core/Src/robot/robo_init.cpp **** 	steering_init();
  24:Core/Src/robot/robo_init.cpp **** }
  25:Core/Src/robot/robo_init.cpp **** 
  26:Core/Src/robot/robo_init.cpp **** void leg_init(){
 326              		.loc 3 26 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331              	.LVL35:
 332              	.LBB342:
 333              	.LBB343:
 334              	.LBB344:
 335              		.file 4 "Core/Inc/devs/motor.h"
   1:Core/Inc/devs/motor.h **** #ifndef _MOTOR_H_
   2:Core/Inc/devs/motor.h **** #define _MOTOR_H_
   3:Core/Inc/devs/motor.h **** 
   4:Core/Inc/devs/motor.h **** #include "stm32f4xx_hal.h"
   5:Core/Inc/devs/motor.h **** #include "tim.h"
   6:Core/Inc/devs/motor.h **** #include <math.h>
   7:Core/Inc/devs/motor.h **** 
   8:Core/Inc/devs/motor.h **** enum Direction{
   9:Core/Inc/devs/motor.h **** 	CLOCKWISE,
  10:Core/Inc/devs/motor.h **** 	ANTICLOCKWISE,
  11:Core/Inc/devs/motor.h **** 	STOP
  12:Core/Inc/devs/motor.h **** };
  13:Core/Inc/devs/motor.h **** 
  14:Core/Inc/devs/motor.h **** struct motor_config{
  15:Core/Inc/devs/motor.h **** 	float max_omega;
  16:Core/Inc/devs/motor.h **** 	float tolerance;
  17:Core/Inc/devs/motor.h **** 
  18:Core/Inc/devs/motor.h **** 	GPIO_TypeDef *in1_port;	
  19:Core/Inc/devs/motor.h ****         uint16_t in1_pin;
  20:Core/Inc/devs/motor.h ****         GPIO_TypeDef *in2_port;
  21:Core/Inc/devs/motor.h ****         uint16_t in2_pin;
  22:Core/Inc/devs/motor.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  23:Core/Inc/devs/motor.h ****         uint32_t channel;               // PWM Channel
  24:Core/Inc/devs/motor.h **** };
  25:Core/Inc/devs/motor.h **** 
  26:Core/Inc/devs/motor.h **** class motor
  27:Core/Inc/devs/motor.h **** {
  28:Core/Inc/devs/motor.h **** public:
  29:Core/Inc/devs/motor.h **** 	motor(){motor_ = 0;}
  30:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
  31:Core/Inc/devs/motor.h **** 	motor(motor &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 13


  32:Core/Inc/devs/motor.h **** 	motor(const motor &) = default;
  33:Core/Inc/devs/motor.h **** 	motor &operator=(motor &&) = default;
  34:Core/Inc/devs/motor.h **** 	motor &operator=(const motor &) = default;
  35:Core/Inc/devs/motor.h **** 	~motor(){}
  36:Core/Inc/devs/motor.h ****         void set_config(motor_config *motor) { motor_ = motor;}
 336              		.loc 4 36 0
 337 0000 094B     		ldr	r3, .L32
 338 0002 0A49     		ldr	r1, .L32+4
 339 0004 9963     		str	r1, [r3, #56]
 340              	.LVL36:
 341              	.LBE344:
 342              	.LBE343:
 343              	.LBB345:
 344              	.LBB346:
 345              		.file 5 "Core/Inc/devs/encoder.h"
   1:Core/Inc/devs/encoder.h **** #ifndef _ENCODER_H_
   2:Core/Inc/devs/encoder.h **** #define _ENCODER_H_
   3:Core/Inc/devs/encoder.h **** 
   4:Core/Inc/devs/encoder.h **** #include "defines.h"
   5:Core/Inc/devs/encoder.h **** #include "stm32f4xx_hal.h"
   6:Core/Inc/devs/encoder.h **** #include "tim.h"
   7:Core/Inc/devs/encoder.h **** #include "math.h"
   8:Core/Inc/devs/encoder.h **** 
   9:Core/Inc/devs/encoder.h **** 
  10:Core/Inc/devs/encoder.h **** struct encoder_config{
  11:Core/Inc/devs/encoder.h **** 	TIM_HandleTypeDef *henc;
  12:Core/Inc/devs/encoder.h **** 	uint16_t ppr;
  13:Core/Inc/devs/encoder.h **** };
  14:Core/Inc/devs/encoder.h **** 
  15:Core/Inc/devs/encoder.h **** class encoder
  16:Core/Inc/devs/encoder.h **** {
  17:Core/Inc/devs/encoder.h **** public:
  18:Core/Inc/devs/encoder.h **** 	encoder(){encoder_ = 0;}
  19:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
  20:Core/Inc/devs/encoder.h **** 	encoder(encoder &&) = default;
  21:Core/Inc/devs/encoder.h **** 	encoder(const encoder &) = default;
  22:Core/Inc/devs/encoder.h **** 	encoder &operator=(encoder &&) = default;
  23:Core/Inc/devs/encoder.h **** 	encoder &operator=(const encoder &) = default;
  24:Core/Inc/devs/encoder.h **** 	~encoder(){}
  25:Core/Inc/devs/encoder.h ****         void set_config(encoder_config *encoder) { encoder_ = encoder; }
 346              		.loc 5 25 0
 347 0006 0A4A     		ldr	r2, .L32+8
 348 0008 DA63     		str	r2, [r3, #60]
 349              	.LVL37:
 350              	.LBE346:
 351              	.LBE345:
 352              	.LBE342:
 353              	.LBB347:
 354              	.LBB348:
 355              	.LBB349:
 356              		.loc 4 36 0
 357 000a 2031     		adds	r1, r1, #32
 358 000c C3F89410 		str	r1, [r3, #148]
 359              	.LVL38:
 360              	.LBE349:
 361              	.LBE348:
 362              	.LBB350:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 14


 363              	.LBB351:
 364              		.loc 5 25 0
 365 0010 0832     		adds	r2, r2, #8
 366 0012 C3F89820 		str	r2, [r3, #152]
 367              	.LVL39:
 368              	.LBE351:
 369              	.LBE350:
 370              	.LBE347:
 371              	.LBB352:
 372              	.LBB353:
 373              		.file 6 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kbody, float kleg){kb_ = kbody; kl_ = kleg;}
 374              		.loc 6 38 0
 375 0016 4FF07A52 		mov	r2, #1048576000
 376 001a 5A65     		str	r2, [r3, #84]	@ float
 377 001c 9A65     		str	r2, [r3, #88]	@ float
 378              	.LVL40:
 379              	.LBE353:
 380              	.LBE352:
 381              	.LBB354:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 15


 382              	.LBB355:
 383 001e C3F8B020 		str	r2, [r3, #176]	@ float
 384 0022 C3F8B420 		str	r2, [r3, #180]	@ float
 385              	.LVL41:
 386              	.LBE355:
 387              	.LBE354:
  27:Core/Src/robot/robo_init.cpp **** 	leg[0].set_config(&motor_configurations[0], &encoder_configurations[0]);
  28:Core/Src/robot/robo_init.cpp **** 	leg[1].set_config(&motor_configurations[1], &encoder_configurations[1]);
  29:Core/Src/robot/robo_init.cpp **** 	leg[0].set_gravity_compensator_constant(0.25, 0.25);
  30:Core/Src/robot/robo_init.cpp **** 	leg[1].set_gravity_compensator_constant(0.25, 0.25);
  31:Core/Src/robot/robo_init.cpp **** 
  32:Core/Src/robot/robo_init.cpp **** }	
 388              		.loc 3 32 0
 389 0026 7047     		bx	lr
 390              	.L33:
 391              		.align	2
 392              	.L32:
 393 0028 00000000 		.word	.LANCHOR0
 394 002c 00000000 		.word	.LANCHOR1
 395 0030 00000000 		.word	.LANCHOR2
 396              		.cfi_endproc
 397              	.LFE493:
 399              		.section	.text._ZL13steering_initv,"ax",%progbits
 400              		.align	1
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv4-sp-d16
 406              	_ZL13steering_initv:
 407              	.LFB494:
  33:Core/Src/robot/robo_init.cpp **** 
  34:Core/Src/robot/robo_init.cpp **** void steering_init(){
 408              		.loc 3 34 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LVL42:
 414              	.LBB356:
 415              	.LBB357:
 416              	.LBB358:
 417              		.loc 4 36 0
 418 0000 024B     		ldr	r3, .L35
 419 0002 034A     		ldr	r2, .L35+4
 420 0004 9A60     		str	r2, [r3, #8]
 421              	.LVL43:
 422              	.LBE358:
 423              	.LBE357:
 424              	.LBB359:
 425              	.LBB360:
 426              		.loc 5 25 0
 427 0006 034A     		ldr	r2, .L35+8
 428 0008 DA60     		str	r2, [r3, #12]
 429              	.LVL44:
 430              	.LBE360:
 431              	.LBE359:
 432              	.LBE356:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 16


  35:Core/Src/robot/robo_init.cpp **** 	steering.set_config(&motor_configurations[2], &encoder_configurations[2]);
  36:Core/Src/robot/robo_init.cpp **** }
 433              		.loc 3 36 0
 434 000a 7047     		bx	lr
 435              	.L36:
 436              		.align	2
 437              	.L35:
 438 000c 00000000 		.word	.LANCHOR3
 439 0010 40000000 		.word	.LANCHOR1+64
 440 0014 10000000 		.word	.LANCHOR2+16
 441              		.cfi_endproc
 442              	.LFE494:
 444              		.section	.text._ZL8pid_initv,"ax",%progbits
 445              		.align	1
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	_ZL8pid_initv:
 452              	.LFB495:
  37:Core/Src/robot/robo_init.cpp **** 
  38:Core/Src/robot/robo_init.cpp **** static void pid_init(){
 453              		.loc 3 38 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458 0000 30B4     		push	{r4, r5}
 459              	.LCFI0:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 5, -4
 463              	.LVL45:
 464              	.LBB361:
 465              	.LBB362:
 466              	.LBB363:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 467              		.loc 1 11 0
 468 0002 144B     		ldr	r3, .L39
 469 0004 4FF08045 		mov	r5, #1073741824
 470 0008 9D61     		str	r5, [r3, #24]	@ float
 471              	.LVL46:
 472              	.LBE363:
 473              	.LBE362:
 474              	.LBB364:
 475              	.LBB365:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 476              		.loc 1 12 0
 477 000a 134C     		ldr	r4, .L39+4
 478 000c DC61     		str	r4, [r3, #28]	@ float
 479              	.LVL47:
 480              	.LBE365:
 481              	.LBE364:
 482              	.LBB366:
 483              	.LBB367:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 484              		.loc 1 13 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 17


 485 000e 0022     		movs	r2, #0
 486 0010 1A62     		str	r2, [r3, #32]	@ float
 487              	.LVL48:
 488              	.LBE367:
 489              	.LBE366:
 490              	.LBB368:
 491              	.LBB369:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 492              		.loc 1 26 0
 493 0012 1248     		ldr	r0, .L39+8
 494 0014 5862     		str	r0, [r3, #36]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 495              		.loc 1 27 0
 496 0016 1249     		ldr	r1, .L39+12
 497 0018 9962     		str	r1, [r3, #40]	@ float
 498              	.LVL49:
 499              	.LBE369:
 500              	.LBE368:
 501              	.LBE361:
 502              	.LBB370:
 503              	.LBB371:
 504              	.LBB372:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 505              		.loc 1 11 0
 506 001a 5D67     		str	r5, [r3, #116]	@ float
 507              	.LVL50:
 508              	.LBE372:
 509              	.LBE371:
 510              	.LBB373:
 511              	.LBB374:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 512              		.loc 1 12 0
 513 001c 9C67     		str	r4, [r3, #120]	@ float
 514              	.LVL51:
 515              	.LBE374:
 516              	.LBE373:
 517              	.LBB375:
 518              	.LBB376:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 519              		.loc 1 13 0
 520 001e DA67     		str	r2, [r3, #124]	@ float
 521              	.LVL52:
 522              	.LBE376:
 523              	.LBE375:
 524              	.LBB377:
 525              	.LBB378:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 526              		.loc 1 26 0
 527 0020 C3F88000 		str	r0, [r3, #128]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 528              		.loc 1 27 0
 529 0024 C3F88410 		str	r1, [r3, #132]	@ float
 530              	.LVL53:
 531              	.LBE378:
 532              	.LBE377:
 533              	.LBE370:
 534              	.LBB379:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 18


 535              	.LBB380:
 536              	.LBB381:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 537              		.loc 1 11 0
 538 0028 0E4B     		ldr	r3, .L39+16
 539 002a 4FF07F51 		mov	r1, #1069547520
 540 002e 9962     		str	r1, [r3, #40]	@ float
 541              	.LVL54:
 542              	.LBE381:
 543              	.LBE380:
 544              	.LBB382:
 545              	.LBB383:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 546              		.loc 1 12 0
 547 0030 0D48     		ldr	r0, .L39+20
 548 0032 D862     		str	r0, [r3, #44]	@ float
 549              	.LVL55:
 550              	.LBE383:
 551              	.LBE382:
 552              	.LBB384:
 553              	.LBB385:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 554              		.loc 1 13 0
 555 0034 1A63     		str	r2, [r3, #48]	@ float
 556              	.LVL56:
 557              	.LBE385:
 558              	.LBE384:
 559              	.LBB386:
 560              	.LBB387:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 561              		.loc 1 26 0
 562 0036 0D48     		ldr	r0, .L39+24
 563 0038 5863     		str	r0, [r3, #52]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 564              		.loc 1 27 0
 565 003a 0D48     		ldr	r0, .L39+28
 566 003c 9863     		str	r0, [r3, #56]	@ float
 567              	.LVL57:
 568              	.LBE387:
 569              	.LBE386:
 570              	.LBE379:
 571              	.LBB388:
 572              	.LBB389:
 573              	.LBB390:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 574              		.loc 1 11 0
 575 003e D964     		str	r1, [r3, #76]	@ float
 576              	.LVL58:
 577              	.LBE390:
 578              	.LBE389:
 579              	.LBB391:
 580              	.LBB392:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 581              		.loc 1 12 0
 582 0040 4FF07C51 		mov	r1, #1056964608
 583 0044 1965     		str	r1, [r3, #80]	@ float
 584              	.LVL59:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 19


 585              	.LBE392:
 586              	.LBE391:
 587              	.LBB393:
 588              	.LBB394:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 589              		.loc 1 13 0
 590 0046 5A65     		str	r2, [r3, #84]	@ float
 591              	.LVL60:
 592              	.LBE394:
 593              	.LBE393:
 594              	.LBB395:
 595              	.LBB396:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 596              		.loc 1 26 0
 597 0048 0A4A     		ldr	r2, .L39+32
 598 004a 9A65     		str	r2, [r3, #88]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 599              		.loc 1 27 0
 600 004c 0A4A     		ldr	r2, .L39+36
 601 004e DA65     		str	r2, [r3, #92]	@ float
 602              	.LVL61:
 603              	.LBE396:
 604              	.LBE395:
 605              	.LBE388:
  39:Core/Src/robot/robo_init.cpp **** 
  40:Core/Src/robot/robo_init.cpp **** 	leg[0].set_PID_constants( 2.0, 30.0, 0, -17.5, 17.5);		//for crank = 70  // 25.42, 3.082, 2.385	
  41:Core/Src/robot/robo_init.cpp **** 	leg[1].set_PID_constants( 2.0, 30.0, 0, -17.5, 17.5);
  42:Core/Src/robot/robo_init.cpp **** 	steering.set_PID_constants( 1.5, 8.5, 0, -0.875, 0.875);			//for crank = 100 // 17.8, 0.3103, 255.
  43:Core/Src/robot/robo_init.cpp **** 	steering.set_angle_PID_constants( 1.5, 0.5, 0, -7, 7);
  44:Core/Src/robot/robo_init.cpp **** }
 606              		.loc 3 44 0
 607 0050 30BC     		pop	{r4, r5}
 608              	.LCFI1:
 609              		.cfi_restore 5
 610              		.cfi_restore 4
 611              		.cfi_def_cfa_offset 0
 612 0052 7047     		bx	lr
 613              	.L40:
 614              		.align	2
 615              	.L39:
 616 0054 00000000 		.word	.LANCHOR0
 617 0058 0000F041 		.word	1106247680
 618 005c 00008C41 		.word	1099694080
 619 0060 00008CC1 		.word	-1047789568
 620 0064 00000000 		.word	.LANCHOR3
 621 0068 00000841 		.word	1091043328
 622 006c 0000603F 		.word	1063256064
 623 0070 000060BF 		.word	-1084227584
 624 0074 0000E040 		.word	1088421888
 625 0078 0000E0C0 		.word	-1059061760
 626              		.cfi_endproc
 627              	.LFE495:
 629              		.section	.text._ZL17limit_switch_initv,"ax",%progbits
 630              		.align	1
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 20


 634              		.fpu fpv4-sp-d16
 636              	_ZL17limit_switch_initv:
 637              	.LFB496:
  45:Core/Src/robot/robo_init.cpp **** 
  46:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(){
 638              		.loc 3 46 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
  47:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_port = GPIOC;
 643              		.loc 3 47 0
 644 0000 044B     		ldr	r3, .L42
 645 0002 054A     		ldr	r2, .L42+4
 646 0004 1A60     		str	r2, [r3]
  48:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_pin = GPIO_PIN_0;
 647              		.loc 3 48 0
 648 0006 0122     		movs	r2, #1
 649 0008 9A80     		strh	r2, [r3, #4]	@ movhi
  49:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_port = GPIOA;
 650              		.loc 3 49 0
 651 000a 044A     		ldr	r2, .L42+8
 652 000c 9A60     		str	r2, [r3, #8]
  50:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_pin = GPIO_PIN_2;
 653              		.loc 3 50 0
 654 000e 0422     		movs	r2, #4
 655 0010 9A81     		strh	r2, [r3, #12]	@ movhi
  51:Core/Src/robot/robo_init.cpp **** 
  52:Core/Src/robot/robo_init.cpp **** 	//steering.limit_switch__[0].int_port = GPIOD;
  53:Core/Src/robot/robo_init.cpp **** 	//steering.limit_switch__[0].int_pin = GPIO_PIN_4;
  54:Core/Src/robot/robo_init.cpp **** }
 656              		.loc 3 54 0
 657 0012 7047     		bx	lr
 658              	.L43:
 659              		.align	2
 660              	.L42:
 661 0014 00000000 		.word	.LANCHOR0
 662 0018 00080240 		.word	1073874944
 663 001c 00000240 		.word	1073872896
 664              		.cfi_endproc
 665              	.LFE496:
 667              		.section	.text.__tcf_0,"ax",%progbits
 668              		.align	1
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu fpv4-sp-d16
 674              	__tcf_0:
 675              	.LFB500:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 676              		.loc 3 3 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              		@ link register save eliminated.
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 681              		.loc 3 3 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 21


 682 0000 034B     		ldr	r3, .L47
 683              	.L46:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 684              		.loc 3 3 0 is_stmt 0 discriminator 5
 685 0002 044A     		ldr	r2, .L47+4
 686 0004 9342     		cmp	r3, r2
 687 0006 01D0     		beq	.L44
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 688              		.loc 3 3 0 discriminator 4
 689 0008 5C3B     		subs	r3, r3, #92
 690              	.LVL62:
 691 000a FAE7     		b	.L46
 692              	.LVL63:
 693              	.L44:
   3:Core/Src/robot/robo_init.cpp **** steering steering;
 694              		.loc 3 3 0
 695 000c 7047     		bx	lr
 696              	.L48:
 697 000e 00BF     		.align	2
 698              	.L47:
 699 0010 B8000000 		.word	.LANCHOR0+184
 700 0014 00000000 		.word	.LANCHOR0
 701              		.cfi_endproc
 702              	.LFE500:
 704              		.section	.text._ZL10motor_initv,"ax",%progbits
 705              		.align	1
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 709              		.fpu fpv4-sp-d16
 711              	_ZL10motor_initv:
 712              	.LFB497:
  55:Core/Src/robot/robo_init.cpp **** 
  56:Core/Src/robot/robo_init.cpp **** void motor_init(){
 713              		.loc 3 56 0 is_stmt 1
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 718              	.LCFI2:
 719              		.cfi_def_cfa_offset 24
 720              		.cfi_offset 3, -24
 721              		.cfi_offset 4, -20
 722              		.cfi_offset 5, -16
 723              		.cfi_offset 6, -12
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
  57:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].htim = &htim8;
 726              		.loc 3 57 0
 727 0002 1F4C     		ldr	r4, .L51
 728 0004 1F48     		ldr	r0, .L51+4
 729 0006 A061     		str	r0, [r4, #24]
  58:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_port = GPIOD;
 730              		.loc 3 58 0
 731 0008 1F4B     		ldr	r3, .L51+8
 732 000a A360     		str	r3, [r4, #8]
  59:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_pin = GPIO_PIN_2; 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 22


 733              		.loc 3 59 0
 734 000c 0425     		movs	r5, #4
 735 000e A581     		strh	r5, [r4, #12]	@ movhi
  60:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_port = GPIOD;
 736              		.loc 3 60 0
 737 0010 2361     		str	r3, [r4, #16]
  61:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_pin = GPIO_PIN_0;
 738              		.loc 3 61 0
 739 0012 0123     		movs	r3, #1
 740 0014 A382     		strh	r3, [r4, #20]	@ movhi
  62:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].channel = TIM_CHANNEL_3;
 741              		.loc 3 62 0
 742 0016 0827     		movs	r7, #8
 743 0018 E761     		str	r7, [r4, #28]
  63:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].max_omega = 17.5;
 744              		.loc 3 63 0
 745 001a 1C49     		ldr	r1, .L51+12
 746 001c 2160     		str	r1, [r4]	@ float
  64:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].tolerance = 0.2;
 747              		.loc 3 64 0
 748 001e 1C4A     		ldr	r2, .L51+16
 749 0020 6260     		str	r2, [r4, #4]	@ float
  65:Core/Src/robot/robo_init.cpp **** 
  66:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].htim = &htim8;
 750              		.loc 3 66 0
 751 0022 A063     		str	r0, [r4, #56]
  67:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_port = GPIOC;
 752              		.loc 3 67 0
 753 0024 1B4B     		ldr	r3, .L51+20
 754 0026 A362     		str	r3, [r4, #40]
  68:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_pin = GPIO_PIN_11;
 755              		.loc 3 68 0
 756 0028 4FF40063 		mov	r3, #2048
 757 002c A385     		strh	r3, [r4, #44]	@ movhi
  69:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_port = GPIOA;
 758              		.loc 3 69 0
 759 002e 1A4B     		ldr	r3, .L51+24
 760 0030 2363     		str	r3, [r4, #48]
  70:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_pin = GPIO_PIN_15;
 761              		.loc 3 70 0
 762 0032 4FF40046 		mov	r6, #32768
 763 0036 A686     		strh	r6, [r4, #52]	@ movhi
  71:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].channel = TIM_CHANNEL_2;
 764              		.loc 3 71 0
 765 0038 E563     		str	r5, [r4, #60]
  72:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].max_omega = 17.5;
 766              		.loc 3 72 0
 767 003a 2162     		str	r1, [r4, #32]	@ float
  73:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].tolerance = 0.2;
 768              		.loc 3 73 0
 769 003c 6262     		str	r2, [r4, #36]	@ float
  74:Core/Src/robot/robo_init.cpp ****         
  75:Core/Src/robot/robo_init.cpp **** 
  76:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].htim = &htim8;
 770              		.loc 3 76 0
 771 003e A065     		str	r0, [r4, #88]
  77:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_port = GPIOA;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 23


 772              		.loc 3 77 0
 773 0040 A364     		str	r3, [r4, #72]
  78:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_pin = GPIO_PIN_10;
 774              		.loc 3 78 0
 775 0042 4FF48062 		mov	r2, #1024
 776 0046 A4F84C20 		strh	r2, [r4, #76]	@ movhi
  79:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_port = GPIOA;
 777              		.loc 3 79 0
 778 004a 2365     		str	r3, [r4, #80]
  80:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_pin = GPIO_PIN_8;
 779              		.loc 3 80 0
 780 004c 4FF48073 		mov	r3, #256
 781 0050 A4F85430 		strh	r3, [r4, #84]	@ movhi
  81:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].channel = TIM_CHANNEL_4;
 782              		.loc 3 81 0
 783 0054 0C26     		movs	r6, #12
 784 0056 E665     		str	r6, [r4, #92]
  82:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].max_omega = 0.875;
 785              		.loc 3 82 0
 786 0058 104B     		ldr	r3, .L51+28
 787 005a 2364     		str	r3, [r4, #64]	@ float
  83:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].tolerance = 0.1;
 788              		.loc 3 83 0
 789 005c 104B     		ldr	r3, .L51+32
 790 005e 6364     		str	r3, [r4, #68]	@ float
  84:Core/Src/robot/robo_init.cpp **** 
  85:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Base_Start(&htim8);
 791              		.loc 3 85 0
 792 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start
 793              	.LVL64:
  86:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_PWM_Start(motor_configurations[0].htim, TIM_CHANNEL_3);
 794              		.loc 3 86 0
 795 0064 3946     		mov	r1, r7
 796 0066 A069     		ldr	r0, [r4, #24]
 797 0068 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 798              	.LVL65:
  87:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[1].htim, TIM_CHANNEL_2);
 799              		.loc 3 87 0
 800 006c 2946     		mov	r1, r5
 801 006e A06B     		ldr	r0, [r4, #56]
 802 0070 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 803              	.LVL66:
  88:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[2].htim, TIM_CHANNEL_4);
 804              		.loc 3 88 0
 805 0074 3146     		mov	r1, r6
 806 0076 A06D     		ldr	r0, [r4, #88]
 807 0078 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 808              	.LVL67:
  89:Core/Src/robot/robo_init.cpp **** }
 809              		.loc 3 89 0
 810 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 811              	.L52:
 812 007e 00BF     		.align	2
 813              	.L51:
 814 0080 00000000 		.word	.LANCHOR1
 815 0084 00000000 		.word	htim8
 816 0088 000C0240 		.word	1073875968
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 24


 817 008c 00008C41 		.word	1099694080
 818 0090 CDCC4C3E 		.word	1045220557
 819 0094 00080240 		.word	1073874944
 820 0098 00000240 		.word	1073872896
 821 009c 0000603F 		.word	1063256064
 822 00a0 CDCCCC3D 		.word	1036831949
 823              		.cfi_endproc
 824              	.LFE497:
 826              		.section	.text._ZL12encoder_initv,"ax",%progbits
 827              		.align	1
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv4-sp-d16
 833              	_ZL12encoder_initv:
 834              	.LFB498:
  90:Core/Src/robot/robo_init.cpp **** 
  91:Core/Src/robot/robo_init.cpp **** void encoder_init(){
 835              		.loc 3 91 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839 0000 38B5     		push	{r3, r4, r5, lr}
 840              	.LCFI3:
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 3, -16
 843              		.cfi_offset 4, -12
 844              		.cfi_offset 5, -8
 845              		.cfi_offset 14, -4
  92:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 846              		.loc 3 92 0
 847 0002 0C4C     		ldr	r4, .L55
 848 0004 4FF47A65 		mov	r5, #4000
 849 0008 A580     		strh	r5, [r4, #4]	@ movhi
  93:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].henc = &htim2;
 850              		.loc 3 93 0
 851 000a 0B48     		ldr	r0, .L55+4
 852 000c 2060     		str	r0, [r4]
  94:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[0].henc, TIM_CHANNEL_ALL);
 853              		.loc 3 94 0
 854 000e 1821     		movs	r1, #24
 855 0010 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 856              	.LVL68:
  95:Core/Src/robot/robo_init.cpp **** 
  96:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 857              		.loc 3 96 0
 858 0014 A581     		strh	r5, [r4, #12]	@ movhi
  97:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].henc = &htim1;
 859              		.loc 3 97 0
 860 0016 0948     		ldr	r0, .L55+8
 861 0018 A060     		str	r0, [r4, #8]
  98:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[1].henc, TIM_CHANNEL_ALL);
 862              		.loc 3 98 0
 863 001a 1821     		movs	r1, #24
 864 001c FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 865              	.LVL69:
  99:Core/Src/robot/robo_init.cpp **** 	
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 25


 100:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].ppr = 180 *BEARING_TO_STEERING_RATIO*4;
 866              		.loc 3 100 0
 867 0020 4FF4B453 		mov	r3, #5760
 868 0024 A382     		strh	r3, [r4, #20]	@ movhi
 101:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].henc = &htim3;
 869              		.loc 3 101 0
 870 0026 0648     		ldr	r0, .L55+12
 871 0028 2061     		str	r0, [r4, #16]
 102:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[2].henc, TIM_CHANNEL_ALL);
 872              		.loc 3 102 0
 873 002a 1821     		movs	r1, #24
 874 002c FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 875              	.LVL70:
 103:Core/Src/robot/robo_init.cpp **** }
 876              		.loc 3 103 0
 877 0030 38BD     		pop	{r3, r4, r5, pc}
 878              	.L56:
 879 0032 00BF     		.align	2
 880              	.L55:
 881 0034 00000000 		.word	.LANCHOR2
 882 0038 00000000 		.word	htim2
 883 003c 00000000 		.word	htim1
 884 0040 00000000 		.word	htim3
 885              		.cfi_endproc
 886              	.LFE498:
 888              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 889              		.align	1
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu fpv4-sp-d16
 895              	_Z41__static_initialization_and_destruction_0ii:
 896              	.LFB499:
 897              		.loc 3 103 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL71:
 902 0000 0128     		cmp	r0, #1
 903 0002 00D0     		beq	.L65
 904              	.L62:
 905 0004 7047     		bx	lr
 906              	.L65:
 907              		.loc 3 103 0 is_stmt 0 discriminator 1
 908 0006 4FF6FF73 		movw	r3, #65535
 909 000a 9942     		cmp	r1, r3
 910 000c FAD1     		bne	.L62
 911              		.loc 3 103 0
 912 000e 10B5     		push	{r4, lr}
 913              	.LCFI4:
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 4, -8
 916              		.cfi_offset 14, -4
   3:Core/Src/robot/robo_init.cpp **** 
 917              		.loc 3 3 0 is_stmt 1
 918 0010 1E4B     		ldr	r3, .L66
 919              	.LVL72:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 26


 920              	.L60:
   3:Core/Src/robot/robo_init.cpp **** 
 921              		.loc 3 3 0 is_stmt 0 discriminator 4
 922 0012 0028     		cmp	r0, #0
 923 0014 16DB     		blt	.L59
 924              	.LVL73:
 925              	.LBB397:
 926              	.LBB398:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 927              		.loc 6 18 0 is_stmt 1
 928 0016 0021     		movs	r1, #0
 929 0018 1961     		str	r1, [r3, #16]
 930              	.LVL74:
 931              	.LBB399:
 932              	.LBB400:
 933              	.LBB401:
 934              	.LBB402:
 935              	.LBB403:
 936              	.LBB404:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 937              		.loc 1 11 0
 938 001a 0022     		movs	r2, #0
 939 001c 9A61     		str	r2, [r3, #24]	@ float
 940              	.LVL75:
 941              	.LBE404:
 942              	.LBE403:
 943              	.LBB405:
 944              	.LBB406:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 945              		.loc 1 12 0
 946 001e DA61     		str	r2, [r3, #28]	@ float
 947              	.LVL76:
 948              	.LBE406:
 949              	.LBE405:
 950              	.LBB407:
 951              	.LBB408:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 952              		.loc 1 13 0
 953 0020 1A62     		str	r2, [r3, #32]	@ float
 954              	.LVL77:
 955              	.LBE408:
 956              	.LBE407:
 957              	.LBE402:
 958              	.LBE401:
  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 959              		.loc 1 50 0
 960 0022 1B4C     		ldr	r4, .L66+4
 961 0024 5C61     		str	r4, [r3, #20]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 962              		.loc 1 51 0
 963 0026 DA62     		str	r2, [r3, #44]	@ float
  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 964              		.loc 1 52 0
 965 0028 1A63     		str	r2, [r3, #48]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 966              		.loc 1 53 0
 967 002a 5A63     		str	r2, [r3, #52]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 27


 968              	.LVL78:
 969              	.LBE400:
 970              	.LBE399:
 971              	.LBB409:
 972              	.LBB410:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
 973              		.loc 4 29 0
 974 002c 9963     		str	r1, [r3, #56]
 975              	.LVL79:
 976              	.LBE410:
 977              	.LBE409:
 978              	.LBB411:
 979              	.LBB412:
  18:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 980              		.loc 5 18 0
 981 002e 1964     		str	r1, [r3, #64]
 982 0030 5A64     		str	r2, [r3, #68]	@ float
 983 0032 9A64     		str	r2, [r3, #72]	@ float
 984 0034 DA64     		str	r2, [r3, #76]	@ float
 985 0036 1965     		str	r1, [r3, #80]
 986 0038 D963     		str	r1, [r3, #60]
 987              	.LVL80:
 988              	.LBE412:
 989              	.LBE411:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 990              		.loc 6 18 0
 991 003a 5A65     		str	r2, [r3, #84]	@ float
 992 003c 9A65     		str	r2, [r3, #88]	@ float
 993              	.LVL81:
 994              	.LBE398:
 995              	.LBE397:
   3:Core/Src/robot/robo_init.cpp **** 
 996              		.loc 3 3 0
 997 003e 5C33     		adds	r3, r3, #92
 998 0040 0138     		subs	r0, r0, #1
 999 0042 E6E7     		b	.L60
 1000              	.L59:
   3:Core/Src/robot/robo_init.cpp **** 
 1001              		.loc 3 3 0 is_stmt 0 discriminator 2
 1002 0044 134C     		ldr	r4, .L66+8
 1003 0046 2246     		mov	r2, r4
 1004 0048 1349     		ldr	r1, .L66+12
 1005 004a 0020     		movs	r0, #0
 1006 004c FFF7FEFF 		bl	__aeabi_atexit
 1007              	.LVL82:
 1008              	.LBB413:
 1009              	.LBB414:
 1010              	.LBB415:
 1011              	.LBB416:
 1012              	.LBB417:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
 1013              		.loc 4 29 0 is_stmt 1 discriminator 2
 1014 0050 1248     		ldr	r0, .L66+16
 1015 0052 0022     		movs	r2, #0
 1016 0054 8260     		str	r2, [r0, #8]
 1017              	.LVL83:
 1018              	.LBE417:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 28


 1019              	.LBE416:
 1020              	.LBE415:
 1021              	.LBB418:
 1022              	.LBB419:
 1023              	.LBB420:
  18:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 1024              		.loc 5 18 0 discriminator 2
 1025 0056 0261     		str	r2, [r0, #16]
 1026 0058 0023     		movs	r3, #0
 1027 005a 4361     		str	r3, [r0, #20]	@ float
 1028 005c 8361     		str	r3, [r0, #24]	@ float
 1029 005e C361     		str	r3, [r0, #28]	@ float
 1030 0060 0262     		str	r2, [r0, #32]
 1031 0062 C260     		str	r2, [r0, #12]
 1032              	.LVL84:
 1033              	.LBE420:
 1034              	.LBE419:
 1035              	.LBE418:
 1036              	.LBB421:
 1037              	.LBB422:
 1038              	.LBB423:
 1039              	.LBB424:
 1040              	.LBB425:
 1041              	.LBB426:
 1042              	.LBB427:
 1043              	.LBB428:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1044              		.loc 1 11 0 discriminator 2
 1045 0064 8362     		str	r3, [r0, #40]	@ float
 1046              	.LVL85:
 1047              	.LBE428:
 1048              	.LBE427:
 1049              	.LBB429:
 1050              	.LBB430:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1051              		.loc 1 12 0 discriminator 2
 1052 0066 C362     		str	r3, [r0, #44]	@ float
 1053              	.LVL86:
 1054              	.LBE430:
 1055              	.LBE429:
 1056              	.LBB431:
 1057              	.LBB432:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1058              		.loc 1 13 0 discriminator 2
 1059 0068 0363     		str	r3, [r0, #48]	@ float
 1060              	.LVL87:
 1061              	.LBE432:
 1062              	.LBE431:
 1063              	.LBE426:
 1064              	.LBE425:
 1065              	.LBE424:
  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1066              		.loc 1 50 0 discriminator 2
 1067 006a 094A     		ldr	r2, .L66+4
 1068 006c 4262     		str	r2, [r0, #36]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 1069              		.loc 1 51 0 discriminator 2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 29


 1070 006e C363     		str	r3, [r0, #60]	@ float
  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 1071              		.loc 1 52 0 discriminator 2
 1072 0070 0364     		str	r3, [r0, #64]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 1073              		.loc 1 53 0 discriminator 2
 1074 0072 4364     		str	r3, [r0, #68]	@ float
 1075              	.LVL88:
 1076              	.LBE423:
 1077              	.LBE422:
 1078              	.LBE421:
 1079              	.LBB433:
 1080              	.LBB434:
 1081              	.LBB435:
 1082              	.LBB436:
 1083              	.LBB437:
 1084              	.LBB438:
 1085              	.LBB439:
 1086              	.LBB440:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1087              		.loc 1 11 0 discriminator 2
 1088 0074 C364     		str	r3, [r0, #76]	@ float
 1089              	.LVL89:
 1090              	.LBE440:
 1091              	.LBE439:
 1092              	.LBB441:
 1093              	.LBB442:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1094              		.loc 1 12 0 discriminator 2
 1095 0076 0365     		str	r3, [r0, #80]	@ float
 1096              	.LVL90:
 1097              	.LBE442:
 1098              	.LBE441:
 1099              	.LBB443:
 1100              	.LBB444:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1101              		.loc 1 13 0 discriminator 2
 1102 0078 4365     		str	r3, [r0, #84]	@ float
 1103              	.LVL91:
 1104              	.LBE444:
 1105              	.LBE443:
 1106              	.LBE438:
 1107              	.LBE437:
 1108              	.LBE436:
 203:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1109              		.loc 1 203 0 discriminator 2
 1110 007a 094A     		ldr	r2, .L66+20
 1111 007c 8264     		str	r2, [r0, #72]
 204:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 1112              		.loc 1 204 0 discriminator 2
 1113 007e 0366     		str	r3, [r0, #96]	@ float
 205:Core/Inc/utils/pid_algorithms.h ****         }
 1114              		.loc 1 205 0 discriminator 2
 1115 0080 4366     		str	r3, [r0, #100]	@ float
 1116              	.LVL92:
 1117              	.LBE435:
 1118              	.LBE434:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 30


 1119              	.LBE433:
 1120              	.LBE414:
 1121              	.LBE413:
   4:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 1122              		.loc 3 4 0 discriminator 2
 1123 0082 2246     		mov	r2, r4
 1124 0084 0749     		ldr	r1, .L66+24
 1125 0086 FFF7FEFF 		bl	__aeabi_atexit
 1126              	.LVL93:
 1127              		.loc 3 103 0 discriminator 2
 1128 008a 10BD     		pop	{r4, pc}
 1129              	.L67:
 1130              		.align	2
 1131              	.L66:
 1132 008c 00000000 		.word	.LANCHOR0
 1133 0090 08000000 		.word	_ZTV12Discrete_PID+8
 1134 0094 00000000 		.word	__dso_handle
 1135 0098 00000000 		.word	__tcf_0
 1136 009c 00000000 		.word	.LANCHOR3
 1137 00a0 08000000 		.word	_ZTV9Angle_PID+8
 1138 00a4 00000000 		.word	_ZN8steeringD1Ev
 1139              		.cfi_endproc
 1140              	.LFE499:
 1142              		.section	.text._ZN9Angle_PIDD0Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 1143              		.align	1
 1144              		.weak	_ZN9Angle_PIDD0Ev
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1148              		.fpu fpv4-sp-d16
 1150              	_ZN9Angle_PIDD0Ev:
 1151              	.LFB421:
 212:Core/Inc/utils/pid_algorithms.h **** 
 1152              		.loc 1 212 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              	.LVL94:
 1157 0000 10B5     		push	{r4, lr}
 1158              	.LCFI5:
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 4, -8
 1161              		.cfi_offset 14, -4
 1162 0002 0446     		mov	r4, r0
 212:Core/Inc/utils/pid_algorithms.h **** 
 1163              		.loc 1 212 0
 1164 0004 2021     		movs	r1, #32
 1165 0006 FFF7FEFF 		bl	_ZdlPvj
 1166              	.LVL95:
 1167 000a 2046     		mov	r0, r4
 1168 000c 10BD     		pop	{r4, pc}
 1169              		.cfi_endproc
 1170              	.LFE421:
 1172              		.section	.text._ZN12Discrete_PIDD0Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
 1173              		.align	1
 1174              		.weak	_ZN12Discrete_PIDD0Ev
 1175              		.syntax unified
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 31


 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu fpv4-sp-d16
 1180              	_ZN12Discrete_PIDD0Ev:
 1181              	.LFB398:
  59:Core/Inc/utils/pid_algorithms.h **** 
 1182              		.loc 1 59 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              	.LVL96:
 1187 0000 10B5     		push	{r4, lr}
 1188              	.LCFI6:
 1189              		.cfi_def_cfa_offset 8
 1190              		.cfi_offset 4, -8
 1191              		.cfi_offset 14, -4
 1192 0002 0446     		mov	r4, r0
  59:Core/Inc/utils/pid_algorithms.h **** 
 1193              		.loc 1 59 0
 1194 0004 2421     		movs	r1, #36
 1195 0006 FFF7FEFF 		bl	_ZdlPvj
 1196              	.LVL97:
 1197 000a 2046     		mov	r0, r4
 1198 000c 10BD     		pop	{r4, pc}
 1199              		.cfi_endproc
 1200              	.LFE398:
 1202              		.section	.text._Z9robo_initv,"ax",%progbits
 1203              		.align	1
 1204              		.global	_Z9robo_initv
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	_Z9robo_initv:
 1211              	.LFB492:
  17:Core/Src/robot/robo_init.cpp **** 	motor_init();
 1212              		.loc 3 17 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216 0000 08B5     		push	{r3, lr}
 1217              	.LCFI7:
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 3, -8
 1220              		.cfi_offset 14, -4
  18:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
 1221              		.loc 3 18 0
 1222 0002 FFF7FEFF 		bl	_ZL10motor_initv
 1223              	.LVL98:
  19:Core/Src/robot/robo_init.cpp **** 	pid_init();
 1224              		.loc 3 19 0
 1225 0006 FFF7FEFF 		bl	_ZL12encoder_initv
 1226              	.LVL99:
  20:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
 1227              		.loc 3 20 0
 1228 000a FFF7FEFF 		bl	_ZL8pid_initv
 1229              	.LVL100:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 32


  21:Core/Src/robot/robo_init.cpp **** 	leg_init();
 1230              		.loc 3 21 0
 1231 000e FFF7FEFF 		bl	_ZL17limit_switch_initv
 1232              	.LVL101:
  22:Core/Src/robot/robo_init.cpp **** 	steering_init();
 1233              		.loc 3 22 0
 1234 0012 FFF7FEFF 		bl	_ZL8leg_initv
 1235              	.LVL102:
  23:Core/Src/robot/robo_init.cpp **** }
 1236              		.loc 3 23 0
 1237 0016 FFF7FEFF 		bl	_ZL13steering_initv
 1238              	.LVL103:
  24:Core/Src/robot/robo_init.cpp **** 
 1239              		.loc 3 24 0
 1240 001a 08BD     		pop	{r3, pc}
 1241              		.cfi_endproc
 1242              	.LFE492:
 1244              		.section	.text._GLOBAL__sub_I_leg,"ax",%progbits
 1245              		.align	1
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1249              		.fpu fpv4-sp-d16
 1251              	_GLOBAL__sub_I_leg:
 1252              	.LFB501:
 1253              		.loc 3 103 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257 0000 08B5     		push	{r3, lr}
 1258              	.LCFI8:
 1259              		.cfi_def_cfa_offset 8
 1260              		.cfi_offset 3, -8
 1261              		.cfi_offset 14, -4
 1262              		.loc 3 103 0
 1263 0002 4FF6FF71 		movw	r1, #65535
 1264 0006 0120     		movs	r0, #1
 1265 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1266              	.LVL104:
 1267 000c 08BD     		pop	{r3, pc}
 1268              		.cfi_endproc
 1269              	.LFE501:
 1271              		.section	.init_array,"aw",%init_array
 1272              		.align	2
 1273 0000 00000000 		.word	_GLOBAL__sub_I_leg(target1)
 1274              		.weak	_ZTS13PID_Algorithm
 1275              		.section	.rodata._ZTS13PID_Algorithm,"aG",%progbits,_ZTS13PID_Algorithm,comdat
 1276              		.align	2
 1279              	_ZTS13PID_Algorithm:
 1280 0000 31335049 		.ascii	"13PID_Algorithm\000"
 1280      445F416C 
 1280      676F7269 
 1280      74686D00 
 1281              		.weak	_ZTI13PID_Algorithm
 1282              		.section	.rodata._ZTI13PID_Algorithm,"aG",%progbits,_ZTI13PID_Algorithm,comdat
 1283              		.align	2
 1286              	_ZTI13PID_Algorithm:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 33


 1287 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 1288 0004 00000000 		.word	_ZTS13PID_Algorithm
 1289              		.weak	_ZTS12Discrete_PID
 1290              		.section	.rodata._ZTS12Discrete_PID,"aG",%progbits,_ZTS12Discrete_PID,comdat
 1291              		.align	2
 1294              	_ZTS12Discrete_PID:
 1295 0000 31324469 		.ascii	"12Discrete_PID\000"
 1295      73637265 
 1295      74655F50 
 1295      494400
 1296              		.weak	_ZTI12Discrete_PID
 1297              		.section	.rodata._ZTI12Discrete_PID,"aG",%progbits,_ZTI12Discrete_PID,comdat
 1298              		.align	2
 1301              	_ZTI12Discrete_PID:
 1302 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1303 0004 00000000 		.word	_ZTS12Discrete_PID
 1304 0008 00000000 		.word	_ZTI13PID_Algorithm
 1305              		.weak	_ZTS9Angle_PID
 1306              		.section	.rodata._ZTS9Angle_PID,"aG",%progbits,_ZTS9Angle_PID,comdat
 1307              		.align	2
 1310              	_ZTS9Angle_PID:
 1311 0000 39416E67 		.ascii	"9Angle_PID\000"
 1311      6C655F50 
 1311      494400
 1312              		.weak	_ZTI9Angle_PID
 1313              		.section	.rodata._ZTI9Angle_PID,"aG",%progbits,_ZTI9Angle_PID,comdat
 1314              		.align	2
 1317              	_ZTI9Angle_PID:
 1318 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1319 0004 00000000 		.word	_ZTS9Angle_PID
 1320 0008 00000000 		.word	_ZTI13PID_Algorithm
 1321              		.weak	_ZTV12Discrete_PID
 1322              		.section	.rodata._ZTV12Discrete_PID,"aG",%progbits,_ZTV12Discrete_PID,comdat
 1323              		.align	2
 1326              	_ZTV12Discrete_PID:
 1327 0000 00000000 		.word	0
 1328 0004 00000000 		.word	_ZTI12Discrete_PID
 1329 0008 00000000 		.word	_ZN12Discrete_PID7computeEfm
 1330 000c 00000000 		.word	_ZN12Discrete_PIDD1Ev
 1331 0010 00000000 		.word	_ZN12Discrete_PIDD0Ev
 1332              		.weak	_ZTV9Angle_PID
 1333              		.section	.rodata._ZTV9Angle_PID,"aG",%progbits,_ZTV9Angle_PID,comdat
 1334              		.align	2
 1337              	_ZTV9Angle_PID:
 1338 0000 00000000 		.word	0
 1339 0004 00000000 		.word	_ZTI9Angle_PID
 1340 0008 00000000 		.word	_ZN9Angle_PID7computeEfm
 1341 000c 00000000 		.word	_ZN9Angle_PIDD1Ev
 1342 0010 00000000 		.word	_ZN9Angle_PIDD0Ev
 1343              		.global	steering
 1344              		.global	leg
 1345              		.section	.bss._ZL20motor_configurations,"aw",%nobits
 1346              		.align	2
 1347              		.set	.LANCHOR1,. + 0
 1350              	_ZL20motor_configurations:
 1351 0000 00000000 		.space	96
 1351      00000000 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 34


 1351      00000000 
 1351      00000000 
 1351      00000000 
 1352              		.section	.bss._ZL22encoder_configurations,"aw",%nobits
 1353              		.align	2
 1354              		.set	.LANCHOR2,. + 0
 1357              	_ZL22encoder_configurations:
 1358 0000 00000000 		.space	24
 1358      00000000 
 1358      00000000 
 1358      00000000 
 1358      00000000 
 1359              		.section	.bss.leg,"aw",%nobits
 1360              		.align	2
 1361              		.set	.LANCHOR0,. + 0
 1364              	leg:
 1365 0000 00000000 		.space	184
 1365      00000000 
 1365      00000000 
 1365      00000000 
 1365      00000000 
 1366              		.section	.bss.steering,"aw",%nobits
 1367              		.align	2
 1368              		.set	.LANCHOR3,. + 0
 1371              	steering:
 1372 0000 00000000 		.space	104
 1372      00000000 
 1372      00000000 
 1372      00000000 
 1372      00000000 
 1373              		.text
 1374              	.Letext0:
 1375              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1376              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1377              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1378              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1379              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1380              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1381              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1382              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1383              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1384              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1385              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1386              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1387              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1388              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1389              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1390              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1391              		.file 23 "Core/Inc/periphs/tim.h"
 1392              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1393              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1394              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1395              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1396              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1397              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1398              		.file 30 "Core/Inc/devs/limit_switch.h"
 1399              		.file 31 "Core/Inc/periphs/usart.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 35


 1400              		.file 32 "Core/Inc/periphs/adc.h"
 1401              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 robo_init.cpp
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:18     .text._ZN12Discrete_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:42     .text._ZN12Discrete_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:49     .text._ZN12Discrete_PID7computeEfm:00000000 _ZN12Discrete_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:153    .text._ZN12Discrete_PID7computeEfm:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:158    .text._ZN9Angle_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:181    .text._ZN9Angle_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:188    .text._ZN9Angle_PID7computeEfm:00000000 _ZN9Angle_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:293    .text._ZN8steeringD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:317    .text._ZL8leg_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:323    .text._ZL8leg_initv:00000000 _ZL8leg_initv
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:393    .text._ZL8leg_initv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:400    .text._ZL13steering_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:406    .text._ZL13steering_initv:00000000 _ZL13steering_initv
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:438    .text._ZL13steering_initv:0000000c $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:445    .text._ZL8pid_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:451    .text._ZL8pid_initv:00000000 _ZL8pid_initv
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:616    .text._ZL8pid_initv:00000054 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:630    .text._ZL17limit_switch_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:636    .text._ZL17limit_switch_initv:00000000 _ZL17limit_switch_initv
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:661    .text._ZL17limit_switch_initv:00000014 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:668    .text.__tcf_0:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:674    .text.__tcf_0:00000000 __tcf_0
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:699    .text.__tcf_0:00000010 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:705    .text._ZL10motor_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:711    .text._ZL10motor_initv:00000000 _ZL10motor_initv
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:814    .text._ZL10motor_initv:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:827    .text._ZL12encoder_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:833    .text._ZL12encoder_initv:00000000 _ZL12encoder_initv
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:881    .text._ZL12encoder_initv:00000034 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:889    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:895    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1132   .text._Z41__static_initialization_and_destruction_0ii:0000008c $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1326   .rodata._ZTV12Discrete_PID:00000000 _ZTV12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1337   .rodata._ZTV9Angle_PID:00000000 _ZTV9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1143   .text._ZN9Angle_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1150   .text._ZN9Angle_PIDD0Ev:00000000 _ZN9Angle_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1173   .text._ZN12Discrete_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1180   .text._ZN12Discrete_PIDD0Ev:00000000 _ZN12Discrete_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1203   .text._Z9robo_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1210   .text._Z9robo_initv:00000000 _Z9robo_initv
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1245   .text._GLOBAL__sub_I_leg:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1251   .text._GLOBAL__sub_I_leg:00000000 _GLOBAL__sub_I_leg
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1272   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1279   .rodata._ZTS13PID_Algorithm:00000000 _ZTS13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1276   .rodata._ZTS13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1286   .rodata._ZTI13PID_Algorithm:00000000 _ZTI13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1283   .rodata._ZTI13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1294   .rodata._ZTS12Discrete_PID:00000000 _ZTS12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1291   .rodata._ZTS12Discrete_PID:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s 			page 37


C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1301   .rodata._ZTI12Discrete_PID:00000000 _ZTI12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1298   .rodata._ZTI12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1310   .rodata._ZTS9Angle_PID:00000000 _ZTS9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1307   .rodata._ZTS9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1317   .rodata._ZTI9Angle_PID:00000000 _ZTI9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1314   .rodata._ZTI9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1323   .rodata._ZTV12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1334   .rodata._ZTV9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1371   .bss.steering:00000000 steering
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1364   .bss.leg:00000000 leg
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1346   .bss._ZL20motor_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1350   .bss._ZL20motor_configurations:00000000 _ZL20motor_configurations
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1353   .bss._ZL22encoder_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1357   .bss._ZL22encoder_configurations:00000000 _ZL22encoder_configurations
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1360   .bss.leg:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccDyxGgR.s:1367   .bss.steering:00000000 $d
                           .group:00000000 _ZN12Discrete_PIDD5Ev
                           .group:00000000 _ZN9Angle_PIDD5Ev
                           .group:00000000 _ZN8steeringD5Ev

UNDEFINED SYMBOLS
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
htim8
HAL_TIM_Encoder_Start
htim2
htim1
htim3
__aeabi_atexit
__dso_handle
_ZdlPvj
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
