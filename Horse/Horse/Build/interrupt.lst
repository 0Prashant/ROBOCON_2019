ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interrupt.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_GPIO_EXTI_Callback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LFB132:
  27              		.file 1 "Core/Src/interrupt.cpp"
   1:Core/Src/interrupt.cpp **** /*1-27-2019*/
   2:Core/Src/interrupt.cpp **** 
   3:Core/Src/interrupt.cpp **** #include "interrupt.h"
   4:Core/Src/interrupt.cpp **** #include "robo_init.h"
   5:Core/Src/interrupt.cpp **** #include "blnc_motor.h"
   6:Core/Src/interrupt.cpp **** 
   7:Core/Src/interrupt.cpp **** extern struct Blnc balance;
   8:Core/Src/interrupt.cpp **** extern State gRobo_State;
   9:Core/Src/interrupt.cpp **** extern State_ID gcurrent_position;
  10:Core/Src/interrupt.cpp **** bool _first = false;
  11:Core/Src/interrupt.cpp **** 
  12:Core/Src/interrupt.cpp **** // gRobo_State.get_ID() -> giv
  13:Core/Src/interrupt.cpp **** 
  14:Core/Src/interrupt.cpp **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_PIN)
  15:Core/Src/interrupt.cpp **** {       if(GPIO_PIN == GPIO_PIN_0)	//blnc_motor_chA_Pin
  28              		.loc 1 15 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  41              		.loc 1 15 0
  42 0004 0128     		cmp	r0, #1
  43 0006 13D0     		beq	.L11
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s 			page 2


  44              	.LVL1:
  45              	.L2:
  16:Core/Src/interrupt.cpp ****         {
  17:Core/Src/interrupt.cpp ****                 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == 0)	//blnc_motor_chB_Port-pin
  18:Core/Src/interrupt.cpp ****                 {
  19:Core/Src/interrupt.cpp ****                         balance.motor.encoder->count--;
  20:Core/Src/interrupt.cpp ****                 }
  21:Core/Src/interrupt.cpp ****                 else
  22:Core/Src/interrupt.cpp ****                 {
  23:Core/Src/interrupt.cpp ****                         balance.motor.encoder->count++;
  24:Core/Src/interrupt.cpp ****                 }
  25:Core/Src/interrupt.cpp **** 
  26:Core/Src/interrupt.cpp ****         } 
  27:Core/Src/interrupt.cpp **** 	if (GPIO_PIN == balance.interrupt[0].int_pin)
  46              		.loc 1 27 0
  47 0008 264B     		ldr	r3, .L16
  48 000a 9B8F     		ldrh	r3, [r3, #60]
  49 000c A342     		cmp	r3, r4
  50 000e 22D0     		beq	.L12
  51              	.L4:
  28:Core/Src/interrupt.cpp **** 	{
  29:Core/Src/interrupt.cpp **** 		if(gRobo_State.get_ID() == State_ID::WS3)
  30:Core/Src/interrupt.cpp **** 		{
  31:Core/Src/interrupt.cpp **** 			gcurrent_position = State_ID::WS3;
  32:Core/Src/interrupt.cpp **** 			setDutyCycle(&balance.motor, 0);
  33:Core/Src/interrupt.cpp **** 			setDirection(&balance.motor, DIR_BRAKE);
  34:Core/Src/interrupt.cpp **** 		}    
  35:Core/Src/interrupt.cpp ****         	printf("A\n");
  36:Core/Src/interrupt.cpp ****     	}
  37:Core/Src/interrupt.cpp ****    	if (GPIO_PIN == balance.interrupt[1].int_pin)
  52              		.loc 1 37 0
  53 0010 244B     		ldr	r3, .L16
  54 0012 B3F84830 		ldrh	r3, [r3, #72]
  55 0016 A342     		cmp	r3, r4
  56 0018 21D0     		beq	.L13
  57              	.L5:
  38:Core/Src/interrupt.cpp ****    	{
  39:Core/Src/interrupt.cpp ****    		if(gRobo_State.get_ID() == State_ID::WS4)	
  40:Core/Src/interrupt.cpp **** 		{	
  41:Core/Src/interrupt.cpp **** 			gcurrent_position = State_ID::WS4;
  42:Core/Src/interrupt.cpp **** 			setDutyCycle(&balance.motor, 0);	
  43:Core/Src/interrupt.cpp **** 			setDirection(&balance.motor, DIR_BRAKE);
  44:Core/Src/interrupt.cpp **** 		}	
  45:Core/Src/interrupt.cpp **** 		printf("B\n");
  46:Core/Src/interrupt.cpp ****    	}
  47:Core/Src/interrupt.cpp ****    	if (GPIO_PIN == balance.interrupt[2].int_pin)
  58              		.loc 1 47 0
  59 001a 224B     		ldr	r3, .L16
  60 001c B3F85430 		ldrh	r3, [r3, #84]
  61 0020 A342     		cmp	r3, r4
  62 0022 20D0     		beq	.L14
  63              	.L6:
  48:Core/Src/interrupt.cpp ****    	{
  49:Core/Src/interrupt.cpp ****    		if((gRobo_State.get_ID()==State_ID::HOME) || (gRobo_State.get_ID()==State_ID::WS1))	
  50:Core/Src/interrupt.cpp **** 		{	
  51:Core/Src/interrupt.cpp **** 			if(_first)
  52:Core/Src/interrupt.cpp **** 			{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s 			page 3


  53:Core/Src/interrupt.cpp **** 				_first = true;
  54:Core/Src/interrupt.cpp **** 				gcurrent_position = State_ID::HOME;
  55:Core/Src/interrupt.cpp **** 			}
  56:Core/Src/interrupt.cpp **** 			else
  57:Core/Src/interrupt.cpp **** 			{
  58:Core/Src/interrupt.cpp **** 				gcurrent_position = State_ID::HOME;
  59:Core/Src/interrupt.cpp **** 			}
  60:Core/Src/interrupt.cpp **** 			setDutyCycle(&balance.motor, 0);
  61:Core/Src/interrupt.cpp **** 			setDirection(&balance.motor, DIR_BRAKE);	
  62:Core/Src/interrupt.cpp **** 		}	
  63:Core/Src/interrupt.cpp **** 		printf("C\n");
  64:Core/Src/interrupt.cpp ****    	}
  65:Core/Src/interrupt.cpp **** 	
  66:Core/Src/interrupt.cpp ****    	if (GPIO_PIN == balance.interrupt[3].int_pin)
  64              		.loc 1 66 0
  65 0024 1F4B     		ldr	r3, .L16
  66 0026 B3F86030 		ldrh	r3, [r3, #96]
  67 002a A342     		cmp	r3, r4
  68 002c 35D0     		beq	.L15
  69              	.L1:
  67:Core/Src/interrupt.cpp ****    	{	
  68:Core/Src/interrupt.cpp **** 		if(gRobo_State.get_ID() == State_ID::WS2)	
  69:Core/Src/interrupt.cpp **** 		{
  70:Core/Src/interrupt.cpp **** 			gcurrent_position = State_ID::WS2;
  71:Core/Src/interrupt.cpp **** 			setDutyCycle(&balance.motor, 0);
  72:Core/Src/interrupt.cpp **** 			setDirection(&balance.motor, DIR_BRAKE);
  73:Core/Src/interrupt.cpp **** 		}
  74:Core/Src/interrupt.cpp **** 		printf("D\n");
  75:Core/Src/interrupt.cpp ****     	}     
  76:Core/Src/interrupt.cpp **** }
  70              		.loc 1 76 0
  71 002e 38BD     		pop	{r3, r4, r5, pc}
  72              	.LVL2:
  73              	.L11:
  17:Core/Src/interrupt.cpp ****                 {
  74              		.loc 1 17 0
  75 0030 0121     		movs	r1, #1
  76 0032 1D48     		ldr	r0, .L16+4
  77              	.LVL3:
  78 0034 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  79              	.LVL4:
  80 0038 30B9     		cbnz	r0, .L3
  19:Core/Src/interrupt.cpp ****                 }
  81              		.loc 1 19 0
  82 003a 1A4B     		ldr	r3, .L16
  83 003c 1A6B     		ldr	r2, [r3, #48]
  84 003e B2F90630 		ldrsh	r3, [r2, #6]
  85 0042 013B     		subs	r3, r3, #1
  86 0044 D380     		strh	r3, [r2, #6]	@ movhi
  87 0046 DFE7     		b	.L2
  88              	.L3:
  23:Core/Src/interrupt.cpp ****                 }
  89              		.loc 1 23 0
  90 0048 164B     		ldr	r3, .L16
  91 004a 1A6B     		ldr	r2, [r3, #48]
  92 004c B2F90630 		ldrsh	r3, [r2, #6]
  93 0050 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s 			page 4


  94 0052 D380     		strh	r3, [r2, #6]	@ movhi
  95 0054 D8E7     		b	.L2
  96              	.L12:
  35:Core/Src/interrupt.cpp ****     	}
  97              		.loc 1 35 0
  98 0056 1548     		ldr	r0, .L16+8
  99 0058 FFF7FEFF 		bl	puts
 100              	.LVL5:
 101 005c D8E7     		b	.L4
 102              	.L13:
  45:Core/Src/interrupt.cpp ****    	}
 103              		.loc 1 45 0
 104 005e 1448     		ldr	r0, .L16+12
 105 0060 FFF7FEFF 		bl	puts
 106              	.LVL6:
 107 0064 D9E7     		b	.L5
 108              	.L14:
  51:Core/Src/interrupt.cpp **** 			{
 109              		.loc 1 51 0 discriminator 3
 110 0066 134B     		ldr	r3, .L16+16
 111 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 006a 93B1     		cbz	r3, .L7
  53:Core/Src/interrupt.cpp **** 				gcurrent_position = State_ID::HOME;
 113              		.loc 1 53 0
 114 006c 114B     		ldr	r3, .L16+16
 115 006e 0122     		movs	r2, #1
 116 0070 1A70     		strb	r2, [r3]
  54:Core/Src/interrupt.cpp **** 			}
 117              		.loc 1 54 0
 118 0072 114B     		ldr	r3, .L16+20
 119 0074 0022     		movs	r2, #0
 120 0076 1A60     		str	r2, [r3]
 121              	.L8:
  60:Core/Src/interrupt.cpp **** 			setDirection(&balance.motor, DIR_BRAKE);	
 122              		.loc 1 60 0
 123 0078 0A4D     		ldr	r5, .L16
 124 007a 0021     		movs	r1, #0
 125 007c 2846     		mov	r0, r5
 126 007e FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 127              	.LVL7:
  61:Core/Src/interrupt.cpp **** 		}	
 128              		.loc 1 61 0
 129 0082 0321     		movs	r1, #3
 130 0084 2846     		mov	r0, r5
 131 0086 FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 132              	.LVL8:
  63:Core/Src/interrupt.cpp ****    	}
 133              		.loc 1 63 0
 134 008a 0C48     		ldr	r0, .L16+24
 135 008c FFF7FEFF 		bl	puts
 136              	.LVL9:
 137 0090 C8E7     		b	.L6
 138              	.L7:
  58:Core/Src/interrupt.cpp **** 			}
 139              		.loc 1 58 0
 140 0092 094B     		ldr	r3, .L16+20
 141 0094 0022     		movs	r2, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s 			page 5


 142 0096 1A60     		str	r2, [r3]
 143 0098 EEE7     		b	.L8
 144              	.L15:
  74:Core/Src/interrupt.cpp ****     	}     
 145              		.loc 1 74 0
 146 009a 0948     		ldr	r0, .L16+28
 147 009c FFF7FEFF 		bl	puts
 148              	.LVL10:
 149              		.loc 1 76 0
 150 00a0 C5E7     		b	.L1
 151              	.L17:
 152 00a2 00BF     		.align	2
 153              	.L16:
 154 00a4 00000000 		.word	balance
 155 00a8 00000240 		.word	1073872896
 156 00ac 00000000 		.word	.LC0
 157 00b0 04000000 		.word	.LC1
 158 00b4 00000000 		.word	.LANCHOR0
 159 00b8 00000000 		.word	gcurrent_position
 160 00bc 08000000 		.word	.LC2
 161 00c0 0C000000 		.word	.LC3
 162              		.cfi_endproc
 163              	.LFE132:
 165              		.global	_first
 166              		.section	.bss._first,"aw",%nobits
 167              		.set	.LANCHOR0,. + 0
 170              	_first:
 171 0000 00       		.space	1
 172              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 173              		.align	2
 174              	.LC0:
 175 0000 4100     		.ascii	"A\000"
 176 0002 0000     		.space	2
 177              	.LC1:
 178 0004 4200     		.ascii	"B\000"
 179 0006 0000     		.space	2
 180              	.LC2:
 181 0008 4300     		.ascii	"C\000"
 182 000a 0000     		.space	2
 183              	.LC3:
 184 000c 4400     		.ascii	"D\000"
 185              		.text
 186              	.Letext0:
 187              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 188              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 189              		.file 4 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core
 190              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 191              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 192              		.file 7 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 193              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 194              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 195              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 196              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 197              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 198              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 199              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 200              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s 			page 6


 201              		.file 16 "Core/Inc/interrupt.h"
 202              		.file 17 "Core/Inc/periphs/tim.h"
 203              		.file 18 "Core/Inc/encoder.h"
 204              		.file 19 "Core/Inc/motor.h"
 205              		.file 20 "Core/Inc/pid.h"
 206              		.file 21 "Core/Inc/blnc_motor.h"
 207              		.file 22 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.cpp
C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s:18     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s:154    .text.HAL_GPIO_EXTI_Callback:000000a4 $d
C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s:170    .bss._first:00000000 _first
C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s:171    .bss._first:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccVoR5pZ.s:173    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
puts
_Z12setDutyCycleP8motorStrt
_Z12setDirectionP8motorStr14motorDirection
balance
gcurrent_position
