ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interrupt.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_GPIO_EXTI_Callback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LFB136:
  27              		.file 1 "Core/Src/robot/interrupt.cpp"
   1:Core/Src/robot/interrupt.cpp **** /*1-27-2019*/
   2:Core/Src/robot/interrupt.cpp **** 
   3:Core/Src/robot/interrupt.cpp **** #include "interrupt.h"
   4:Core/Src/robot/interrupt.cpp **** #include "robo_init.h"
   5:Core/Src/robot/interrupt.cpp **** #include "blnc_motor.h"
   6:Core/Src/robot/interrupt.cpp **** #include "robo_states.h"
   7:Core/Src/robot/interrupt.cpp **** 
   8:Core/Src/robot/interrupt.cpp **** // void Balance_Handle_Interrupt(uint16_t GPIO_Pin);
   9:Core/Src/robot/interrupt.cpp **** 
  10:Core/Src/robot/interrupt.cpp **** extern State gHorse_State;
  11:Core/Src/robot/interrupt.cpp **** extern Blnc gBallet;
  12:Core/Src/robot/interrupt.cpp **** 
  13:Core/Src/robot/interrupt.cpp **** //! This is dangerous
  14:Core/Src/robot/interrupt.cpp **** State_ID gCurrent_Position = State_ID::WS3;
  15:Core/Src/robot/interrupt.cpp **** 
  16:Core/Src/robot/interrupt.cpp **** static bool gFirst_Home_Interrupt = true;
  17:Core/Src/robot/interrupt.cpp **** 
  18:Core/Src/robot/interrupt.cpp **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_PIN)
  19:Core/Src/robot/interrupt.cpp **** {
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 2


  40 0002 0446     		mov	r4, r0
  20:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == int_arr[0].int_pin)
  41              		.loc 1 20 0
  42 0004 694B     		ldr	r3, .L38
  43 0006 1B89     		ldrh	r3, [r3, #8]
  44 0008 8342     		cmp	r3, r0
  45 000a 20D0     		beq	.L22
  46              	.LVL1:
  47              	.L2:
  21:Core/Src/robot/interrupt.cpp ****         {
  22:Core/Src/robot/interrupt.cpp ****                 printf("Motor_1 \n");
  23:Core/Src/robot/interrupt.cpp ****                 if (int_arr[0].intState == STATE_B)
  24:Core/Src/robot/interrupt.cpp ****                 {
  25:Core/Src/robot/interrupt.cpp ****                         int_arr[0].intState = STATE_A;
  26:Core/Src/robot/interrupt.cpp ****                 }
  27:Core/Src/robot/interrupt.cpp ****                 else if (int_arr[0].intState == STATE_HOME)
  28:Core/Src/robot/interrupt.cpp ****                 {
  29:Core/Src/robot/interrupt.cpp ****                         int_arr[0].fhome_pos = 1;
  30:Core/Src/robot/interrupt.cpp ****                 }
  31:Core/Src/robot/interrupt.cpp ****         }
  32:Core/Src/robot/interrupt.cpp **** 
  33:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == int_arr[1].int_pin)
  48              		.loc 1 33 0
  49 000c 674B     		ldr	r3, .L38
  50 000e 9B8A     		ldrh	r3, [r3, #20]
  51 0010 A342     		cmp	r3, r4
  52 0012 2DD0     		beq	.L23
  53              	.L4:
  34:Core/Src/robot/interrupt.cpp ****         {
  35:Core/Src/robot/interrupt.cpp ****                 printf("Motor_2 \n");
  36:Core/Src/robot/interrupt.cpp ****                 if (int_arr[1].intState == STATE_B)
  37:Core/Src/robot/interrupt.cpp ****                 {
  38:Core/Src/robot/interrupt.cpp ****                         int_arr[1].intState = STATE_A;
  39:Core/Src/robot/interrupt.cpp ****                 }
  40:Core/Src/robot/interrupt.cpp ****                 else if (int_arr[1].intState == STATE_HOME)
  41:Core/Src/robot/interrupt.cpp ****                 {
  42:Core/Src/robot/interrupt.cpp ****                         int_arr[1].fhome_pos = 1;
  43:Core/Src/robot/interrupt.cpp ****                 }
  44:Core/Src/robot/interrupt.cpp ****         }
  45:Core/Src/robot/interrupt.cpp **** 
  46:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == int_arr[2].int_pin)
  54              		.loc 1 46 0
  55 0014 654B     		ldr	r3, .L38
  56 0016 1B8C     		ldrh	r3, [r3, #32]
  57 0018 A342     		cmp	r3, r4
  58 001a 3AD0     		beq	.L24
  59              	.L6:
  47:Core/Src/robot/interrupt.cpp ****         {
  48:Core/Src/robot/interrupt.cpp ****                 printf("Motor_3 \n");
  49:Core/Src/robot/interrupt.cpp ****                 if (int_arr[2].intState == STATE_B)
  50:Core/Src/robot/interrupt.cpp ****                 {
  51:Core/Src/robot/interrupt.cpp ****                         int_arr[2].intState = STATE_A;
  52:Core/Src/robot/interrupt.cpp ****                 }
  53:Core/Src/robot/interrupt.cpp ****                 else if (int_arr[2].intState == STATE_HOME)
  54:Core/Src/robot/interrupt.cpp ****                 {
  55:Core/Src/robot/interrupt.cpp ****                         int_arr[2].fhome_pos = 1;
  56:Core/Src/robot/interrupt.cpp ****                 }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 3


  57:Core/Src/robot/interrupt.cpp ****         }
  58:Core/Src/robot/interrupt.cpp **** 
  59:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == int_arr[3].int_pin)
  60              		.loc 1 59 0
  61 001c 634B     		ldr	r3, .L38
  62 001e 9B8D     		ldrh	r3, [r3, #44]
  63 0020 A342     		cmp	r3, r4
  64 0022 49D0     		beq	.L25
  65              	.L8:
  60:Core/Src/robot/interrupt.cpp ****         {
  61:Core/Src/robot/interrupt.cpp ****                 printf("Motor_4 \n");
  62:Core/Src/robot/interrupt.cpp ****                 if (int_arr[3].intState == STATE_B)
  63:Core/Src/robot/interrupt.cpp ****                 {
  64:Core/Src/robot/interrupt.cpp ****                         int_arr[3].intState = STATE_A;
  65:Core/Src/robot/interrupt.cpp ****                 }
  66:Core/Src/robot/interrupt.cpp ****                 else if (int_arr[3].intState == STATE_HOME)
  67:Core/Src/robot/interrupt.cpp ****                 {
  68:Core/Src/robot/interrupt.cpp ****                         int_arr[3].fhome_pos = 1;
  69:Core/Src/robot/interrupt.cpp ****                 }
  70:Core/Src/robot/interrupt.cpp ****         }
  71:Core/Src/robot/interrupt.cpp **** 
  72:Core/Src/robot/interrupt.cpp ****         //! This zombie code is here for position pid purpose
  73:Core/Src/robot/interrupt.cpp ****         // if (GPIO_PIN == GPIO_PIN_12) //blnc_motor_chA_Pin
  74:Core/Src/robot/interrupt.cpp ****         // {
  75:Core/Src/robot/interrupt.cpp ****         //         printf("int\n");
  76:Core/Src/robot/interrupt.cpp ****         //         if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) != GPIO_PIN_RESET) //blnc_motor_chB_Port
  77:Core/Src/robot/interrupt.cpp ****         //         {
  78:Core/Src/robot/interrupt.cpp ****         //                 ++gCounter;
  79:Core/Src/robot/interrupt.cpp ****         //         }
  80:Core/Src/robot/interrupt.cpp ****         //         else
  81:Core/Src/robot/interrupt.cpp ****         //         {
  82:Core/Src/robot/interrupt.cpp ****         //                 --gCounter;
  83:Core/Src/robot/interrupt.cpp ****         //         }
  84:Core/Src/robot/interrupt.cpp ****         //         // balance.motor.encoder->count = gCounter;
  85:Core/Src/robot/interrupt.cpp ****         // }
  86:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == gBallet.interrupt[0].int_pin)
  66              		.loc 1 86 0
  67 0024 624B     		ldr	r3, .L38+4
  68 0026 9B8F     		ldrh	r3, [r3, #60]
  69 0028 A342     		cmp	r3, r4
  70 002a 59D0     		beq	.L26
  71              	.L10:
  87:Core/Src/robot/interrupt.cpp ****         {
  88:Core/Src/robot/interrupt.cpp ****                 if (gHorse_State.get_ID() == State_ID::WS3)
  89:Core/Src/robot/interrupt.cpp ****                 {
  90:Core/Src/robot/interrupt.cpp ****                         gCurrent_Position = State_ID::WS3;
  91:Core/Src/robot/interrupt.cpp ****                         setDutyCycle(&gBallet.motor, 0);
  92:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
  93:Core/Src/robot/interrupt.cpp ****                 }
  94:Core/Src/robot/interrupt.cpp **** 		printf("A\n");
  95:Core/Src/robot/interrupt.cpp ****         }
  96:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == gBallet.interrupt[1].int_pin)
  72              		.loc 1 96 0
  73 002c 604B     		ldr	r3, .L38+4
  74 002e B3F84830 		ldrh	r3, [r3, #72]
  75 0032 A342     		cmp	r3, r4
  76 0034 6AD0     		beq	.L27
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 4


  77              	.L12:
  97:Core/Src/robot/interrupt.cpp ****         {
  98:Core/Src/robot/interrupt.cpp ****                 if (gHorse_State.get_ID() == State_ID::WS4)
  99:Core/Src/robot/interrupt.cpp ****                 {
 100:Core/Src/robot/interrupt.cpp ****                         gCurrent_Position = State_ID::WS4;
 101:Core/Src/robot/interrupt.cpp ****                         setDutyCycle(&gBallet.motor, 0);
 102:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
 103:Core/Src/robot/interrupt.cpp ****                 }
 104:Core/Src/robot/interrupt.cpp **** 		printf("B\n");
 105:Core/Src/robot/interrupt.cpp ****         }
 106:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == gBallet.interrupt[2].int_pin)
  78              		.loc 1 106 0
  79 0036 5E4B     		ldr	r3, .L38+4
  80 0038 B3F85430 		ldrh	r3, [r3, #84]
  81 003c A342     		cmp	r3, r4
  82 003e 7BD0     		beq	.L28
  83              	.L14:
 107:Core/Src/robot/interrupt.cpp ****         {
 108:Core/Src/robot/interrupt.cpp ****                 if ((gHorse_State.get_ID() == State_ID::HOME) || (gHorse_State.get_ID() == State_ID
 109:Core/Src/robot/interrupt.cpp ****                 {
 110:Core/Src/robot/interrupt.cpp ****                         if (gFirst_Home_Interrupt)
 111:Core/Src/robot/interrupt.cpp ****                         {
 112:Core/Src/robot/interrupt.cpp ****                                 gFirst_Home_Interrupt = false;
 113:Core/Src/robot/interrupt.cpp ****                                 gCurrent_Position = State_ID::HOME;
 114:Core/Src/robot/interrupt.cpp ****                         }
 115:Core/Src/robot/interrupt.cpp ****                         else
 116:Core/Src/robot/interrupt.cpp ****                         {
 117:Core/Src/robot/interrupt.cpp ****                                 gCurrent_Position = State_ID::WS1;
 118:Core/Src/robot/interrupt.cpp ****                         }
 119:Core/Src/robot/interrupt.cpp ****                         setDutyCycle(&gBallet.motor, 0);
 120:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
 121:Core/Src/robot/interrupt.cpp ****                 }
 122:Core/Src/robot/interrupt.cpp ****                 printf("C\n");
 123:Core/Src/robot/interrupt.cpp ****         }
 124:Core/Src/robot/interrupt.cpp **** 
 125:Core/Src/robot/interrupt.cpp ****         if (GPIO_PIN == gBallet.interrupt[3].int_pin)
  84              		.loc 1 125 0
  85 0040 5B4B     		ldr	r3, .L38+4
  86 0042 B3F86030 		ldrh	r3, [r3, #96]
  87 0046 A342     		cmp	r3, r4
  88 0048 00F09980 		beq	.L29
  89              	.L1:
 126:Core/Src/robot/interrupt.cpp ****         {
 127:Core/Src/robot/interrupt.cpp ****                 if (gHorse_State.get_ID() == State_ID::WS2)
 128:Core/Src/robot/interrupt.cpp ****                 {
 129:Core/Src/robot/interrupt.cpp ****                         gCurrent_Position = State_ID::WS2;
 130:Core/Src/robot/interrupt.cpp ****                         setDutyCycle(&gBallet.motor, 0);
 131:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
 132:Core/Src/robot/interrupt.cpp ****                 }
 133:Core/Src/robot/interrupt.cpp ****                 printf("D\n");
 134:Core/Src/robot/interrupt.cpp ****         }
 135:Core/Src/robot/interrupt.cpp **** }
  90              		.loc 1 135 0
  91 004c 70BD     		pop	{r4, r5, r6, pc}
  92              	.LVL2:
  93              	.L22:
  22:Core/Src/robot/interrupt.cpp ****                 if (int_arr[0].intState == STATE_B)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 5


  94              		.loc 1 22 0
  95 004e 5948     		ldr	r0, .L38+8
  96              	.LVL3:
  97 0050 FFF7FEFF 		bl	puts
  98              	.LVL4:
  23:Core/Src/robot/interrupt.cpp ****                 {
  99              		.loc 1 23 0
 100 0054 554B     		ldr	r3, .L38
 101 0056 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 102 0058 012B     		cmp	r3, #1
 103 005a 05D0     		beq	.L30
  27:Core/Src/robot/interrupt.cpp ****                 {
 104              		.loc 1 27 0
 105 005c 022B     		cmp	r3, #2
 106 005e D5D1     		bne	.L2
  29:Core/Src/robot/interrupt.cpp ****                 }
 107              		.loc 1 29 0
 108 0060 524B     		ldr	r3, .L38
 109 0062 0122     		movs	r2, #1
 110 0064 5A70     		strb	r2, [r3, #1]
 111 0066 D1E7     		b	.L2
 112              	.L30:
  25:Core/Src/robot/interrupt.cpp ****                 }
 113              		.loc 1 25 0
 114 0068 504B     		ldr	r3, .L38
 115 006a 0022     		movs	r2, #0
 116 006c 9A72     		strb	r2, [r3, #10]
 117 006e CDE7     		b	.L2
 118              	.L23:
  35:Core/Src/robot/interrupt.cpp ****                 if (int_arr[1].intState == STATE_B)
 119              		.loc 1 35 0
 120 0070 5148     		ldr	r0, .L38+12
 121 0072 FFF7FEFF 		bl	puts
 122              	.LVL5:
  36:Core/Src/robot/interrupt.cpp ****                 {
 123              		.loc 1 36 0
 124 0076 4D4B     		ldr	r3, .L38
 125 0078 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 126 007a 012B     		cmp	r3, #1
 127 007c 05D0     		beq	.L31
  40:Core/Src/robot/interrupt.cpp ****                 {
 128              		.loc 1 40 0
 129 007e 022B     		cmp	r3, #2
 130 0080 C8D1     		bne	.L4
  42:Core/Src/robot/interrupt.cpp ****                 }
 131              		.loc 1 42 0
 132 0082 4A4B     		ldr	r3, .L38
 133 0084 0122     		movs	r2, #1
 134 0086 5A73     		strb	r2, [r3, #13]
 135 0088 C4E7     		b	.L4
 136              	.L31:
  38:Core/Src/robot/interrupt.cpp ****                 }
 137              		.loc 1 38 0
 138 008a 484B     		ldr	r3, .L38
 139 008c 0022     		movs	r2, #0
 140 008e 9A75     		strb	r2, [r3, #22]
 141 0090 C0E7     		b	.L4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 6


 142              	.L24:
  48:Core/Src/robot/interrupt.cpp ****                 if (int_arr[2].intState == STATE_B)
 143              		.loc 1 48 0
 144 0092 4A48     		ldr	r0, .L38+16
 145 0094 FFF7FEFF 		bl	puts
 146              	.LVL6:
  49:Core/Src/robot/interrupt.cpp ****                 {
 147              		.loc 1 49 0
 148 0098 444B     		ldr	r3, .L38
 149 009a 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 150 009e 012B     		cmp	r3, #1
 151 00a0 05D0     		beq	.L32
  53:Core/Src/robot/interrupt.cpp ****                 {
 152              		.loc 1 53 0
 153 00a2 022B     		cmp	r3, #2
 154 00a4 BAD1     		bne	.L6
  55:Core/Src/robot/interrupt.cpp ****                 }
 155              		.loc 1 55 0
 156 00a6 414B     		ldr	r3, .L38
 157 00a8 0122     		movs	r2, #1
 158 00aa 5A76     		strb	r2, [r3, #25]
 159 00ac B6E7     		b	.L6
 160              	.L32:
  51:Core/Src/robot/interrupt.cpp ****                 }
 161              		.loc 1 51 0
 162 00ae 3F4B     		ldr	r3, .L38
 163 00b0 0022     		movs	r2, #0
 164 00b2 83F82220 		strb	r2, [r3, #34]
 165 00b6 B1E7     		b	.L6
 166              	.L25:
  61:Core/Src/robot/interrupt.cpp ****                 if (int_arr[3].intState == STATE_B)
 167              		.loc 1 61 0
 168 00b8 4148     		ldr	r0, .L38+20
 169 00ba FFF7FEFF 		bl	puts
 170              	.LVL7:
  62:Core/Src/robot/interrupt.cpp ****                 {
 171              		.loc 1 62 0
 172 00be 3B4B     		ldr	r3, .L38
 173 00c0 93F82E30 		ldrb	r3, [r3, #46]	@ zero_extendqisi2
 174 00c4 012B     		cmp	r3, #1
 175 00c6 06D0     		beq	.L33
  66:Core/Src/robot/interrupt.cpp ****                 {
 176              		.loc 1 66 0
 177 00c8 022B     		cmp	r3, #2
 178 00ca ABD1     		bne	.L8
  68:Core/Src/robot/interrupt.cpp ****                 }
 179              		.loc 1 68 0
 180 00cc 374B     		ldr	r3, .L38
 181 00ce 0122     		movs	r2, #1
 182 00d0 83F82520 		strb	r2, [r3, #37]
 183 00d4 A6E7     		b	.L8
 184              	.L33:
  64:Core/Src/robot/interrupt.cpp ****                 }
 185              		.loc 1 64 0
 186 00d6 354B     		ldr	r3, .L38
 187 00d8 0022     		movs	r2, #0
 188 00da 83F82E20 		strb	r2, [r3, #46]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 7


 189 00de A1E7     		b	.L8
 190              	.L26:
  88:Core/Src/robot/interrupt.cpp ****                 {
 191              		.loc 1 88 0
 192 00e0 3848     		ldr	r0, .L38+24
 193 00e2 FFF7FEFF 		bl	_ZN5State6get_IDEv
 194              	.LVL8:
 195 00e6 0328     		cmp	r0, #3
 196 00e8 03D0     		beq	.L34
 197              	.L11:
  94:Core/Src/robot/interrupt.cpp ****         }
 198              		.loc 1 94 0
 199 00ea 3748     		ldr	r0, .L38+28
 200 00ec FFF7FEFF 		bl	puts
 201              	.LVL9:
 202 00f0 9CE7     		b	.L10
 203              	.L34:
  90:Core/Src/robot/interrupt.cpp ****                         setDutyCycle(&gBallet.motor, 0);
 204              		.loc 1 90 0
 205 00f2 0326     		movs	r6, #3
 206 00f4 354B     		ldr	r3, .L38+32
 207 00f6 1E60     		str	r6, [r3]
  91:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
 208              		.loc 1 91 0
 209 00f8 2D4D     		ldr	r5, .L38+4
 210 00fa 0021     		movs	r1, #0
 211 00fc 2846     		mov	r0, r5
 212 00fe FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 213              	.LVL10:
  92:Core/Src/robot/interrupt.cpp ****                 }
 214              		.loc 1 92 0
 215 0102 3146     		mov	r1, r6
 216 0104 2846     		mov	r0, r5
 217 0106 FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 218              	.LVL11:
 219 010a EEE7     		b	.L11
 220              	.L27:
  98:Core/Src/robot/interrupt.cpp ****                 {
 221              		.loc 1 98 0
 222 010c 2D48     		ldr	r0, .L38+24
 223 010e FFF7FEFF 		bl	_ZN5State6get_IDEv
 224              	.LVL12:
 225 0112 0428     		cmp	r0, #4
 226 0114 03D0     		beq	.L35
 227              	.L13:
 104:Core/Src/robot/interrupt.cpp ****         }
 228              		.loc 1 104 0
 229 0116 2E48     		ldr	r0, .L38+36
 230 0118 FFF7FEFF 		bl	puts
 231              	.LVL13:
 232 011c 8BE7     		b	.L12
 233              	.L35:
 100:Core/Src/robot/interrupt.cpp ****                         setDutyCycle(&gBallet.motor, 0);
 234              		.loc 1 100 0
 235 011e 2B4B     		ldr	r3, .L38+32
 236 0120 0422     		movs	r2, #4
 237 0122 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 8


 101:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
 238              		.loc 1 101 0
 239 0124 224D     		ldr	r5, .L38+4
 240 0126 0021     		movs	r1, #0
 241 0128 2846     		mov	r0, r5
 242 012a FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 243              	.LVL14:
 102:Core/Src/robot/interrupt.cpp ****                 }
 244              		.loc 1 102 0
 245 012e 0321     		movs	r1, #3
 246 0130 2846     		mov	r0, r5
 247 0132 FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 248              	.LVL15:
 249 0136 EEE7     		b	.L13
 250              	.L28:
 108:Core/Src/robot/interrupt.cpp ****                 {
 251              		.loc 1 108 0
 252 0138 2248     		ldr	r0, .L38+24
 253 013a FFF7FEFF 		bl	_ZN5State6get_IDEv
 254              	.LVL16:
 255 013e A0B9     		cbnz	r0, .L36
 256              	.L15:
 110:Core/Src/robot/interrupt.cpp ****                         {
 257              		.loc 1 110 0 discriminator 3
 258 0140 244B     		ldr	r3, .L38+40
 259 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 0144 BBB1     		cbz	r3, .L17
 112:Core/Src/robot/interrupt.cpp ****                                 gCurrent_Position = State_ID::HOME;
 261              		.loc 1 112 0
 262 0146 0023     		movs	r3, #0
 263 0148 224A     		ldr	r2, .L38+40
 264 014a 1370     		strb	r3, [r2]
 113:Core/Src/robot/interrupt.cpp ****                         }
 265              		.loc 1 113 0
 266 014c 1F4A     		ldr	r2, .L38+32
 267 014e 1360     		str	r3, [r2]
 268              	.L18:
 119:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
 269              		.loc 1 119 0
 270 0150 174D     		ldr	r5, .L38+4
 271 0152 0021     		movs	r1, #0
 272 0154 2846     		mov	r0, r5
 273 0156 FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 274              	.LVL17:
 120:Core/Src/robot/interrupt.cpp ****                 }
 275              		.loc 1 120 0
 276 015a 0321     		movs	r1, #3
 277 015c 2846     		mov	r0, r5
 278 015e FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 279              	.LVL18:
 280              	.L16:
 122:Core/Src/robot/interrupt.cpp ****         }
 281              		.loc 1 122 0
 282 0162 1D48     		ldr	r0, .L38+44
 283 0164 FFF7FEFF 		bl	puts
 284              	.LVL19:
 285 0168 6AE7     		b	.L14
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 9


 286              	.L36:
 108:Core/Src/robot/interrupt.cpp ****                 {
 287              		.loc 1 108 0 discriminator 2
 288 016a 1648     		ldr	r0, .L38+24
 289 016c FFF7FEFF 		bl	_ZN5State6get_IDEv
 290              	.LVL20:
 291 0170 0128     		cmp	r0, #1
 292 0172 F6D1     		bne	.L16
 293 0174 E4E7     		b	.L15
 294              	.L17:
 117:Core/Src/robot/interrupt.cpp ****                         }
 295              		.loc 1 117 0
 296 0176 154B     		ldr	r3, .L38+32
 297 0178 0122     		movs	r2, #1
 298 017a 1A60     		str	r2, [r3]
 299 017c E8E7     		b	.L18
 300              	.L29:
 127:Core/Src/robot/interrupt.cpp ****                 {
 301              		.loc 1 127 0
 302 017e 1148     		ldr	r0, .L38+24
 303 0180 FFF7FEFF 		bl	_ZN5State6get_IDEv
 304              	.LVL21:
 305 0184 0228     		cmp	r0, #2
 306 0186 03D0     		beq	.L37
 307              	.L20:
 133:Core/Src/robot/interrupt.cpp ****         }
 308              		.loc 1 133 0
 309 0188 1448     		ldr	r0, .L38+48
 310 018a FFF7FEFF 		bl	puts
 311              	.LVL22:
 312              		.loc 1 135 0
 313 018e 5DE7     		b	.L1
 314              	.L37:
 129:Core/Src/robot/interrupt.cpp ****                         setDutyCycle(&gBallet.motor, 0);
 315              		.loc 1 129 0
 316 0190 0E4B     		ldr	r3, .L38+32
 317 0192 0222     		movs	r2, #2
 318 0194 1A60     		str	r2, [r3]
 130:Core/Src/robot/interrupt.cpp ****                         setDirection(&gBallet.motor, DIR_BRAKE);
 319              		.loc 1 130 0
 320 0196 064C     		ldr	r4, .L38+4
 321 0198 0021     		movs	r1, #0
 322 019a 2046     		mov	r0, r4
 323 019c FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 324              	.LVL23:
 131:Core/Src/robot/interrupt.cpp ****                 }
 325              		.loc 1 131 0
 326 01a0 0321     		movs	r1, #3
 327 01a2 2046     		mov	r0, r4
 328 01a4 FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 329              	.LVL24:
 330 01a8 EEE7     		b	.L20
 331              	.L39:
 332 01aa 00BF     		.align	2
 333              	.L38:
 334 01ac 00000000 		.word	int_arr
 335 01b0 00000000 		.word	gBallet
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 10


 336 01b4 00000000 		.word	.LC0
 337 01b8 0C000000 		.word	.LC1
 338 01bc 18000000 		.word	.LC2
 339 01c0 24000000 		.word	.LC3
 340 01c4 00000000 		.word	gHorse_State
 341 01c8 30000000 		.word	.LC4
 342 01cc 00000000 		.word	.LANCHOR0
 343 01d0 34000000 		.word	.LC5
 344 01d4 00000000 		.word	.LANCHOR1
 345 01d8 38000000 		.word	.LC6
 346 01dc 3C000000 		.word	.LC7
 347              		.cfi_endproc
 348              	.LFE136:
 350              		.global	gCurrent_Position
 351              		.section	.data._ZL21gFirst_Home_Interrupt,"aw",%progbits
 352              		.set	.LANCHOR1,. + 0
 355              	_ZL21gFirst_Home_Interrupt:
 356 0000 01       		.byte	1
 357              		.section	.data.gCurrent_Position,"aw",%progbits
 358              		.align	2
 359              		.set	.LANCHOR0,. + 0
 362              	gCurrent_Position:
 363 0000 03000000 		.word	3
 364              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 365              		.align	2
 366              	.LC0:
 367 0000 4D6F746F 		.ascii	"Motor_1 \000"
 367      725F3120 
 367      00
 368 0009 000000   		.space	3
 369              	.LC1:
 370 000c 4D6F746F 		.ascii	"Motor_2 \000"
 370      725F3220 
 370      00
 371 0015 000000   		.space	3
 372              	.LC2:
 373 0018 4D6F746F 		.ascii	"Motor_3 \000"
 373      725F3320 
 373      00
 374 0021 000000   		.space	3
 375              	.LC3:
 376 0024 4D6F746F 		.ascii	"Motor_4 \000"
 376      725F3420 
 376      00
 377 002d 000000   		.space	3
 378              	.LC4:
 379 0030 4100     		.ascii	"A\000"
 380 0032 0000     		.space	2
 381              	.LC5:
 382 0034 4200     		.ascii	"B\000"
 383 0036 0000     		.space	2
 384              	.LC6:
 385 0038 4300     		.ascii	"C\000"
 386 003a 0000     		.space	2
 387              	.LC7:
 388 003c 4400     		.ascii	"D\000"
 389              		.text
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 11


 390              	.Letext0:
 391              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 392              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 393              		.file 4 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core
 394              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 395              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 396              		.file 7 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 397              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 398              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 399              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 400              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 401              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 402              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 403              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 404              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 405              		.file 16 "Core/Inc/robot/interrupt.h"
 406              		.file 17 "Core/Inc/periphs/tim.h"
 407              		.file 18 "Core/Inc/robot/feed_forward.h"
 408              		.file 19 "Core/Inc/devs/encoder.h"
 409              		.file 20 "Core/Inc/devs/motor.h"
 410              		.file 21 "Core/Inc/utils/pid.h"
 411              		.file 22 "Core/Inc/robot/fsm.h"
 412              		.file 23 "Core/Inc/robot/robo_init.h"
 413              		.file 24 "Core/Inc/devs/blnc_motor.h"
 414              		.file 25 "Core/Inc/robot/robo_states.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.cpp
C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s:18     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s:334    .text.HAL_GPIO_EXTI_Callback:000001ac $d
C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s:362    .data.gCurrent_Position:00000000 gCurrent_Position
C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s:355    .data._ZL21gFirst_Home_Interrupt:00000000 _ZL21gFirst_Home_Interrupt
C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s:358    .data.gCurrent_Position:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdk5adC.s:365    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d

UNDEFINED SYMBOLS
puts
_ZN5State6get_IDEv
_Z12setDutyCycleP8motorStrt
_Z12setDirectionP8motorStr14motorDirection
int_arr
gBallet
gHorse_State
