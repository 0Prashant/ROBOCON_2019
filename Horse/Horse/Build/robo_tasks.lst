ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_tasks.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN5StateD2Ev,"axG",%progbits,_ZN5StateD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN5StateD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN5StateD2Ev:
  26              	.LFB136:
  27              		.file 1 "Core/Inc/robot/robo_states.h"
   1:Core/Inc/robot/robo_states.h **** /*
   2:Core/Inc/robot/robo_states.h ****  * robo_states.h
   3:Core/Inc/robot/robo_states.h ****  * 
   4:Core/Inc/robot/robo_states.h ****  * Created : 02/18/2019
   5:Core/Inc/robot/robo_states.h ****  *  Author : n-is
   6:Core/Inc/robot/robo_states.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/robot/robo_states.h ****  */
   8:Core/Inc/robot/robo_states.h **** 
   9:Core/Inc/robot/robo_states.h **** #ifndef _ROBO_STATES_H_
  10:Core/Inc/robot/robo_states.h **** #define _ROBO_STATES_H_
  11:Core/Inc/robot/robo_states.h **** 
  12:Core/Inc/robot/robo_states.h **** #include "node.h"
  13:Core/Inc/robot/robo_states.h **** 
  14:Core/Inc/robot/robo_states.h **** enum class State_ID
  15:Core/Inc/robot/robo_states.h **** {
  16:Core/Inc/robot/robo_states.h ****         HOME,
  17:Core/Inc/robot/robo_states.h ****         WS1,
  18:Core/Inc/robot/robo_states.h ****         WS2,
  19:Core/Inc/robot/robo_states.h ****         WS3,
  20:Core/Inc/robot/robo_states.h ****         WS4
  21:Core/Inc/robot/robo_states.h **** };
  22:Core/Inc/robot/robo_states.h **** 
  23:Core/Inc/robot/robo_states.h **** 
  24:Core/Inc/robot/robo_states.h **** class State
  25:Core/Inc/robot/robo_states.h **** {
  26:Core/Inc/robot/robo_states.h **** public:
  27:Core/Inc/robot/robo_states.h ****         State(State &&) = default;
  28:Core/Inc/robot/robo_states.h ****         State(const State &) = default;
  29:Core/Inc/robot/robo_states.h ****         State &operator=(State &&) = default;
  30:Core/Inc/robot/robo_states.h ****         State &operator=(const State &) = default;
  31:Core/Inc/robot/robo_states.h ****         ~State() { }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 2


  28              		.loc 1 31 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 31 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE136:
  39              		.weak	_ZN5StateD1Ev
  40              		.thumb_set _ZN5StateD1Ev,_ZN5StateD2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB145:
  50              		.file 2 "Core/Src/robo_tasks.cpp"
   1:Core/Src/robo_tasks.cpp **** /*
   2:Core/Src/robo_tasks.cpp ****  *
   3:Core/Src/robo_tasks.cpp ****  */
   4:Core/Src/robo_tasks.cpp **** 
   5:Core/Src/robo_tasks.cpp **** #include "FreeRTOS.h"
   6:Core/Src/robo_tasks.cpp **** #include "task.h"
   7:Core/Src/robo_tasks.cpp **** #include "main.h"
   8:Core/Src/robo_tasks.cpp **** #include "cmsis_os.h"
   9:Core/Src/robo_tasks.cpp **** 
  10:Core/Src/robo_tasks.cpp **** #include "robo_states.h"
  11:Core/Src/robo_tasks.cpp **** #include "robo_init.h"
  12:Core/Src/robo_tasks.cpp **** #include "fsm_tasks.h"
  13:Core/Src/robo_tasks.cpp **** #include "pneumatic.h"
  14:Core/Src/robo_tasks.cpp **** #include "blnc_motor.h"
  15:Core/Src/robo_tasks.cpp **** 
  16:Core/Src/robo_tasks.cpp **** extern "C" void StartDefaultTask(void const *argument);
  17:Core/Src/robo_tasks.cpp **** extern "C" void MotorThread(void const *argument);
  18:Core/Src/robo_tasks.cpp **** extern "C" void PneumaticThread(void const *argument);
  19:Core/Src/robo_tasks.cpp **** extern "C" void MovingMassThread(void const *argument);
  20:Core/Src/robo_tasks.cpp **** 
  21:Core/Src/robo_tasks.cpp **** // This is the state of the robot that only the MotorThread is allowed to
  22:Core/Src/robo_tasks.cpp **** // modify
  23:Core/Src/robo_tasks.cpp **** 
  24:Core/Src/robo_tasks.cpp **** State gHorse_State = State::get_Instance();
  25:Core/Src/robo_tasks.cpp **** 
  26:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_StartDefaultTask */
  27:Core/Src/robo_tasks.cpp **** /**
  28:Core/Src/robo_tasks.cpp ****   * @brief  Function implementing the defaultTask thread.
  29:Core/Src/robo_tasks.cpp ****   * @param  argument: Not used 
  30:Core/Src/robo_tasks.cpp ****   * @retval None
  31:Core/Src/robo_tasks.cpp ****   */
  32:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_StartDefaultTask */
  33:Core/Src/robo_tasks.cpp **** void StartDefaultTask(void const *argument)
  34:Core/Src/robo_tasks.cpp **** {
  35:Core/Src/robo_tasks.cpp **** 
  36:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN StartDefaultTask */
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 3


  37:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
  38:Core/Src/robo_tasks.cpp ****         for (;;)
  39:Core/Src/robo_tasks.cpp ****         {
  40:Core/Src/robo_tasks.cpp ****                 // printf("Hello from Default Thread!!\n");
  41:Core/Src/robo_tasks.cpp ****                 osDelay(10000);
  42:Core/Src/robo_tasks.cpp ****         }
  43:Core/Src/robo_tasks.cpp ****         /* USER CODE END StartDefaultTask */
  44:Core/Src/robo_tasks.cpp **** }
  45:Core/Src/robo_tasks.cpp **** 
  46:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_MotorThread */
  47:Core/Src/robo_tasks.cpp **** /**
  48:Core/Src/robo_tasks.cpp **** * @brief Function implementing the Motor thread.
  49:Core/Src/robo_tasks.cpp **** * @param argument: Not used
  50:Core/Src/robo_tasks.cpp **** * @retval None
  51:Core/Src/robo_tasks.cpp **** */
  52:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_MotorThread */
  53:Core/Src/robo_tasks.cpp **** void MotorThread(void const *argument)
  54:Core/Src/robo_tasks.cpp **** {
  55:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN MotorThread */
  56:Core/Src/robo_tasks.cpp ****         roboInit();
  57:Core/Src/robo_tasks.cpp ****         bool switch_pressed = false;
  58:Core/Src/robo_tasks.cpp **** 
  59:Core/Src/robo_tasks.cpp ****         uint32_t sample_period = 10;
  60:Core/Src/robo_tasks.cpp ****         uint32_t dt = HAL_GetTick();
  61:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
  62:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
  63:Core/Src/robo_tasks.cpp ****         osDelay(sample_period);
  64:Core/Src/robo_tasks.cpp **** 
  65:Core/Src/robo_tasks.cpp ****         // Khangai_Robot.check_Actuators();
  66:Core/Src/robo_tasks.cpp **** 
  67:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
  68:Core/Src/robo_tasks.cpp ****         for (;;)
  69:Core/Src/robo_tasks.cpp ****         {
  70:Core/Src/robo_tasks.cpp ****                 // Since this is the highest priority task, we can be sure that
  71:Core/Src/robo_tasks.cpp ****                 // another task won't start when this task is running
  72:Core/Src/robo_tasks.cpp ****                 dt_tmp = HAL_GetTick();
  73:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
  74:Core/Src/robo_tasks.cpp ****                 
  75:Core/Src/robo_tasks.cpp ****                 // Run Code Here
  76:Core/Src/robo_tasks.cpp ****                 if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) && !switch_pressed)
  77:Core/Src/robo_tasks.cpp ****                 {
  78:Core/Src/robo_tasks.cpp ****                         switch_pressed = true;
  79:Core/Src/robo_tasks.cpp ****                         gHorse_State.update_State();
  80:Core/Src/robo_tasks.cpp ****                 }
  81:Core/Src/robo_tasks.cpp ****                 else
  82:Core/Src/robo_tasks.cpp ****                 {
  83:Core/Src/robo_tasks.cpp ****                         startFSM(&fsm);
  84:Core/Src/robo_tasks.cpp ****                         updateOmegas();
  85:Core/Src/robo_tasks.cpp ****                 }
  86:Core/Src/robo_tasks.cpp ****   
  87:Core/Src/robo_tasks.cpp ****                 dt = HAL_GetTick();
  88:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
  89:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
  90:Core/Src/robo_tasks.cpp **** 
  91:Core/Src/robo_tasks.cpp ****                 // Check for timing Issues
  92:Core/Src/robo_tasks.cpp ****                 if (last_run_time > sample_period / 2) {
  93:Core/Src/robo_tasks.cpp ****                         // Timing Issue Occured since run time is more than half
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 4


  94:Core/Src/robo_tasks.cpp ****                         // of sample time
  95:Core/Src/robo_tasks.cpp ****                 }
  96:Core/Src/robo_tasks.cpp **** 
  97:Core/Src/robo_tasks.cpp ****                 // Sleep for remaining time of the sampling period if there is
  98:Core/Src/robo_tasks.cpp ****                 // time left
  99:Core/Src/robo_tasks.cpp ****                 if (dt_tmp < sample_period) {
 100:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 101:Core/Src/robo_tasks.cpp ****                 }
 102:Core/Src/robo_tasks.cpp ****         }
 103:Core/Src/robo_tasks.cpp ****         /* USER CODE END MotorThread */
 104:Core/Src/robo_tasks.cpp **** }
 105:Core/Src/robo_tasks.cpp **** 
 106:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_PneumaticThread */
 107:Core/Src/robo_tasks.cpp **** /**
 108:Core/Src/robo_tasks.cpp **** * @brief Function implementing the Pnematic thread.
 109:Core/Src/robo_tasks.cpp **** * @param argument: Not used
 110:Core/Src/robo_tasks.cpp **** * @retval None
 111:Core/Src/robo_tasks.cpp **** */
 112:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_PneumaticThread */
 113:Core/Src/robo_tasks.cpp **** void PneumaticThread(void const *argument)
 114:Core/Src/robo_tasks.cpp **** {
 115:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN PneumaticThread */
 116:Core/Src/robo_tasks.cpp ****         pneu_Init();
 117:Core/Src/robo_tasks.cpp **** 
 118:Core/Src/robo_tasks.cpp ****         uint32_t sample_period = 20;
 119:Core/Src/robo_tasks.cpp ****         uint32_t dt = HAL_GetTick();
 120:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 121:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 122:Core/Src/robo_tasks.cpp ****         osDelay(sample_period);
 123:Core/Src/robo_tasks.cpp **** 
 124:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
 125:Core/Src/robo_tasks.cpp ****         for (;;)
 126:Core/Src/robo_tasks.cpp ****         {
 127:Core/Src/robo_tasks.cpp ****                 // Since this is the highest priority task, we can be sure that
 128:Core/Src/robo_tasks.cpp ****                 // another task won't start when this task is running
 129:Core/Src/robo_tasks.cpp ****                 dt_tmp = HAL_GetTick();
 130:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
 131:Core/Src/robo_tasks.cpp **** 
 132:Core/Src/robo_tasks.cpp ****                 // Run Code Here
 133:Core/Src/robo_tasks.cpp ****                 pneu_Loop();
 134:Core/Src/robo_tasks.cpp ****   
 135:Core/Src/robo_tasks.cpp ****                 dt = HAL_GetTick();
 136:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
 137:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
 138:Core/Src/robo_tasks.cpp **** 
 139:Core/Src/robo_tasks.cpp ****                 // Check for timing Issues
 140:Core/Src/robo_tasks.cpp ****                 if (last_run_time > sample_period / 2) {
 141:Core/Src/robo_tasks.cpp ****                         // Timing Issue Occured since run time is more than half
 142:Core/Src/robo_tasks.cpp ****                         // of sample time
 143:Core/Src/robo_tasks.cpp ****                 }
 144:Core/Src/robo_tasks.cpp **** 
 145:Core/Src/robo_tasks.cpp ****                 // Sleep for remaining time of the sampling period if there is
 146:Core/Src/robo_tasks.cpp ****                 // time left
 147:Core/Src/robo_tasks.cpp ****                 if (dt_tmp < sample_period) {
 148:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 149:Core/Src/robo_tasks.cpp ****                 }
 150:Core/Src/robo_tasks.cpp ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 5


 151:Core/Src/robo_tasks.cpp ****         /* USER CODE END PneumaticThread */
 152:Core/Src/robo_tasks.cpp **** }
 153:Core/Src/robo_tasks.cpp **** 
 154:Core/Src/robo_tasks.cpp **** /* USER CODE BEGIN Header_MovingMassThread */
 155:Core/Src/robo_tasks.cpp **** /**
 156:Core/Src/robo_tasks.cpp **** * @brief Function implementing the MovingMass thread.
 157:Core/Src/robo_tasks.cpp **** * @param argument: Not used
 158:Core/Src/robo_tasks.cpp **** * @retval None
 159:Core/Src/robo_tasks.cpp **** */
 160:Core/Src/robo_tasks.cpp **** /* USER CODE END Header_MovingMassThread */
 161:Core/Src/robo_tasks.cpp **** void MovingMassThread(void const *argument)
 162:Core/Src/robo_tasks.cpp **** {
 163:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN MovingMassThread */
 164:Core/Src/robo_tasks.cpp ****         balance_Init();
 165:Core/Src/robo_tasks.cpp **** 
 166:Core/Src/robo_tasks.cpp ****         uint32_t sample_period = 20;
 167:Core/Src/robo_tasks.cpp ****         uint32_t dt = HAL_GetTick();
 168:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 169:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 170:Core/Src/robo_tasks.cpp ****         osDelay(sample_period);
 171:Core/Src/robo_tasks.cpp **** 
 172:Core/Src/robo_tasks.cpp ****         /* Infinite loop */
 173:Core/Src/robo_tasks.cpp ****         for (;;)
 174:Core/Src/robo_tasks.cpp ****         {
 175:Core/Src/robo_tasks.cpp ****                 // Since this is the highest priority task, we can be sure that
 176:Core/Src/robo_tasks.cpp ****                 // another task won't start when this task is running
 177:Core/Src/robo_tasks.cpp ****                 dt_tmp = HAL_GetTick();
 178:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
 179:Core/Src/robo_tasks.cpp **** 
 180:Core/Src/robo_tasks.cpp ****                 // Run Code Here
 181:Core/Src/robo_tasks.cpp ****                 balance_Loop();
 182:Core/Src/robo_tasks.cpp ****   
 183:Core/Src/robo_tasks.cpp ****                 dt = HAL_GetTick();
 184:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
 185:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
 186:Core/Src/robo_tasks.cpp **** 
 187:Core/Src/robo_tasks.cpp ****                 // Check for timing Issues
 188:Core/Src/robo_tasks.cpp ****                 if (last_run_time > sample_period / 2) {
 189:Core/Src/robo_tasks.cpp ****                         // Timing Issue Occured since run time is more than half
 190:Core/Src/robo_tasks.cpp ****                         // of sample time
 191:Core/Src/robo_tasks.cpp ****                 }
 192:Core/Src/robo_tasks.cpp **** 
 193:Core/Src/robo_tasks.cpp ****                 // Sleep for remaining time of the sampling period if there is
 194:Core/Src/robo_tasks.cpp ****                 // time left
 195:Core/Src/robo_tasks.cpp ****                 if (dt_tmp < sample_period) {
 196:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 197:Core/Src/robo_tasks.cpp ****                 }
 198:Core/Src/robo_tasks.cpp ****         }
 199:Core/Src/robo_tasks.cpp ****         /* USER CODE END MovingMassThread */
 200:Core/Src/robo_tasks.cpp **** }
  51              		.loc 2 200 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 6


  58 0004 7047     		bx	lr
  59              	.L8:
  60              		.loc 2 200 0 is_stmt 0 discriminator 1
  61 0006 08B5     		push	{r3, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 3, -8
  65              		.cfi_offset 14, -4
  66              		.loc 2 200 0 is_stmt 1 discriminator 1
  67 0008 4FF6FF73 		movw	r3, #65535
  68 000c 9942     		cmp	r1, r3
  69 000e 00D0     		beq	.L9
  70              	.LVL2:
  71              	.L2:
  72              		.loc 2 200 0 is_stmt 0
  73 0010 08BD     		pop	{r3, pc}
  74              	.LVL3:
  75              	.L9:
  24:Core/Src/robo_tasks.cpp **** 
  76              		.loc 2 24 0 is_stmt 1
  77 0012 FFF7FEFF 		bl	_ZN5State12get_InstanceEv
  78              	.LVL4:
  79 0016 044B     		ldr	r3, .L10
  80 0018 0268     		ldr	r2, [r0]
  81 001a 1A60     		str	r2, [r3]
  82 001c 034A     		ldr	r2, .L10+4
  83 001e 0449     		ldr	r1, .L10+8
  84 0020 1846     		mov	r0, r3
  85 0022 FFF7FEFF 		bl	__aeabi_atexit
  86              	.LVL5:
  87              		.loc 2 200 0
  88 0026 F3E7     		b	.L2
  89              	.L11:
  90              		.align	2
  91              	.L10:
  92 0028 00000000 		.word	.LANCHOR0
  93 002c 00000000 		.word	__dso_handle
  94 0030 00000000 		.word	_ZN5StateD1Ev
  95              		.cfi_endproc
  96              	.LFE145:
  98              		.section	.text.StartDefaultTask,"ax",%progbits
  99              		.align	1
 100              		.global	StartDefaultTask
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	StartDefaultTask:
 107              	.LFB141:
  34:Core/Src/robo_tasks.cpp **** 
 108              		.loc 2 34 0
 109              		.cfi_startproc
 110              		@ Volatile: function does not return.
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL6:
 114 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 7


 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 3, -8
 118              		.cfi_offset 14, -4
 119              	.LVL7:
 120              	.L13:
  41:Core/Src/robo_tasks.cpp ****         }
 121              		.loc 2 41 0 discriminator 1
 122 0002 42F21070 		movw	r0, #10000
 123 0006 FFF7FEFF 		bl	osDelay
 124              	.LVL8:
 125 000a FAE7     		b	.L13
 126              		.cfi_endproc
 127              	.LFE141:
 129              		.section	.text.MotorThread,"ax",%progbits
 130              		.align	1
 131              		.global	MotorThread
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	MotorThread:
 138              	.LFB142:
  54:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN MotorThread */
 139              		.loc 2 54 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL9:
 144 0000 38B5     		push	{r3, r4, r5, lr}
 145              	.LCFI2:
 146              		.cfi_def_cfa_offset 16
 147              		.cfi_offset 3, -16
 148              		.cfi_offset 4, -12
 149              		.cfi_offset 5, -8
 150              		.cfi_offset 14, -4
  56:Core/Src/robo_tasks.cpp ****         bool switch_pressed = false;
 151              		.loc 2 56 0
 152 0002 FFF7FEFF 		bl	_Z8roboInitv
 153              	.LVL10:
  60:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 154              		.loc 2 60 0
 155 0006 FFF7FEFF 		bl	HAL_GetTick
 156              	.LVL11:
  61:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 157              		.loc 2 61 0
 158 000a FFF7FEFF 		bl	HAL_GetTick
 159              	.LVL12:
  63:Core/Src/robo_tasks.cpp **** 
 160              		.loc 2 63 0
 161 000e 0A20     		movs	r0, #10
 162 0010 FFF7FEFF 		bl	osDelay
 163              	.LVL13:
  57:Core/Src/robo_tasks.cpp **** 
 164              		.loc 2 57 0
 165 0014 0025     		movs	r5, #0
 166 0016 0DE0     		b	.L16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 8


 167              	.LVL14:
 168              	.L17:
  83:Core/Src/robo_tasks.cpp ****                         updateOmegas();
 169              		.loc 2 83 0
 170 0018 0E48     		ldr	r0, .L21
 171 001a FFF7FEFF 		bl	_Z8startFSMP6fsmStr
 172              	.LVL15:
  84:Core/Src/robo_tasks.cpp ****                 }
 173              		.loc 2 84 0
 174 001e FFF7FEFF 		bl	_Z12updateOmegasv
 175              	.LVL16:
 176              	.L18:
  87:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
 177              		.loc 2 87 0
 178 0022 FFF7FEFF 		bl	HAL_GetTick
 179              	.LVL17:
  88:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
 180              		.loc 2 88 0
 181 0026 001B     		subs	r0, r0, r4
 182              	.LVL18:
  99:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 183              		.loc 2 99 0
 184 0028 0928     		cmp	r0, #9
 185 002a 03D8     		bhi	.L16
 100:Core/Src/robo_tasks.cpp ****                 }
 186              		.loc 2 100 0
 187 002c C0F10A00 		rsb	r0, r0, #10
 188              	.LVL19:
 189 0030 FFF7FEFF 		bl	osDelay
 190              	.LVL20:
 191              	.L16:
  72:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
 192              		.loc 2 72 0
 193 0034 FFF7FEFF 		bl	HAL_GetTick
 194              	.LVL21:
 195 0038 0446     		mov	r4, r0
 196              	.LVL22:
  76:Core/Src/robo_tasks.cpp ****                 {
 197              		.loc 2 76 0
 198 003a 0121     		movs	r1, #1
 199 003c 0648     		ldr	r0, .L21+4
 200              	.LVL23:
 201 003e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 202              	.LVL24:
 203 0042 0028     		cmp	r0, #0
 204 0044 E8D0     		beq	.L17
  76:Core/Src/robo_tasks.cpp ****                 {
 205              		.loc 2 76 0 is_stmt 0 discriminator 1
 206 0046 002D     		cmp	r5, #0
 207 0048 E6D1     		bne	.L17
 208              	.LVL25:
  79:Core/Src/robo_tasks.cpp ****                 }
 209              		.loc 2 79 0 is_stmt 1
 210 004a 0448     		ldr	r0, .L21+8
 211 004c FFF7FEFF 		bl	_ZN5State12update_StateEv
 212              	.LVL26:
  78:Core/Src/robo_tasks.cpp ****                         gHorse_State.update_State();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 9


 213              		.loc 2 78 0
 214 0050 0125     		movs	r5, #1
 215 0052 E6E7     		b	.L18
 216              	.L22:
 217              		.align	2
 218              	.L21:
 219 0054 00000000 		.word	fsm
 220 0058 00000240 		.word	1073872896
 221 005c 00000000 		.word	.LANCHOR0
 222              		.cfi_endproc
 223              	.LFE142:
 225              		.section	.text.PneumaticThread,"ax",%progbits
 226              		.align	1
 227              		.global	PneumaticThread
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv4-sp-d16
 233              	PneumaticThread:
 234              	.LFB143:
 114:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN PneumaticThread */
 235              		.loc 2 114 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL27:
 240 0000 10B5     		push	{r4, lr}
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 116:Core/Src/robo_tasks.cpp **** 
 245              		.loc 2 116 0
 246 0002 FFF7FEFF 		bl	_Z9pneu_Initv
 247              	.LVL28:
 119:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 248              		.loc 2 119 0
 249 0006 FFF7FEFF 		bl	HAL_GetTick
 250              	.LVL29:
 120:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 251              		.loc 2 120 0
 252 000a FFF7FEFF 		bl	HAL_GetTick
 253              	.LVL30:
 122:Core/Src/robo_tasks.cpp **** 
 254              		.loc 2 122 0
 255 000e 1420     		movs	r0, #20
 256 0010 FFF7FEFF 		bl	osDelay
 257              	.LVL31:
 258              	.L24:
 129:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
 259              		.loc 2 129 0
 260 0014 FFF7FEFF 		bl	HAL_GetTick
 261              	.LVL32:
 262 0018 0446     		mov	r4, r0
 263              	.LVL33:
 133:Core/Src/robo_tasks.cpp ****   
 264              		.loc 2 133 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 10


 265 001a FFF7FEFF 		bl	_Z9pneu_Loopv
 266              	.LVL34:
 135:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
 267              		.loc 2 135 0
 268 001e FFF7FEFF 		bl	HAL_GetTick
 269              	.LVL35:
 136:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
 270              		.loc 2 136 0
 271 0022 001B     		subs	r0, r0, r4
 272              	.LVL36:
 147:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 273              		.loc 2 147 0
 274 0024 1328     		cmp	r0, #19
 275 0026 F5D8     		bhi	.L24
 148:Core/Src/robo_tasks.cpp ****                 }
 276              		.loc 2 148 0
 277 0028 C0F11400 		rsb	r0, r0, #20
 278              	.LVL37:
 279 002c FFF7FEFF 		bl	osDelay
 280              	.LVL38:
 281 0030 F0E7     		b	.L24
 282              		.cfi_endproc
 283              	.LFE143:
 285              		.section	.text.MovingMassThread,"ax",%progbits
 286              		.align	1
 287              		.global	MovingMassThread
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	MovingMassThread:
 294              	.LFB144:
 162:Core/Src/robo_tasks.cpp ****         /* USER CODE BEGIN MovingMassThread */
 295              		.loc 2 162 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              	.LVL39:
 300 0000 10B5     		push	{r4, lr}
 301              	.LCFI4:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 4, -8
 304              		.cfi_offset 14, -4
 164:Core/Src/robo_tasks.cpp **** 
 305              		.loc 2 164 0
 306 0002 FFF7FEFF 		bl	_Z12balance_Initv
 307              	.LVL40:
 167:Core/Src/robo_tasks.cpp ****         uint32_t dt_tmp = HAL_GetTick();
 308              		.loc 2 167 0
 309 0006 FFF7FEFF 		bl	HAL_GetTick
 310              	.LVL41:
 168:Core/Src/robo_tasks.cpp ****         uint32_t last_run_time = 0;
 311              		.loc 2 168 0
 312 000a FFF7FEFF 		bl	HAL_GetTick
 313              	.LVL42:
 170:Core/Src/robo_tasks.cpp **** 
 314              		.loc 2 170 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 11


 315 000e 1420     		movs	r0, #20
 316 0010 FFF7FEFF 		bl	osDelay
 317              	.LVL43:
 318              	.L28:
 177:Core/Src/robo_tasks.cpp ****                 dt = dt_tmp - dt;
 319              		.loc 2 177 0
 320 0014 FFF7FEFF 		bl	HAL_GetTick
 321              	.LVL44:
 322 0018 0446     		mov	r4, r0
 323              	.LVL45:
 181:Core/Src/robo_tasks.cpp ****   
 324              		.loc 2 181 0
 325 001a FFF7FEFF 		bl	_Z12balance_Loopv
 326              	.LVL46:
 183:Core/Src/robo_tasks.cpp ****                 dt_tmp = dt - dt_tmp;
 327              		.loc 2 183 0
 328 001e FFF7FEFF 		bl	HAL_GetTick
 329              	.LVL47:
 184:Core/Src/robo_tasks.cpp ****                 last_run_time = dt_tmp;
 330              		.loc 2 184 0
 331 0022 001B     		subs	r0, r0, r4
 332              	.LVL48:
 195:Core/Src/robo_tasks.cpp ****                         osDelay(sample_period - dt_tmp);
 333              		.loc 2 195 0
 334 0024 1328     		cmp	r0, #19
 335 0026 F5D8     		bhi	.L28
 196:Core/Src/robo_tasks.cpp ****                 }
 336              		.loc 2 196 0
 337 0028 C0F11400 		rsb	r0, r0, #20
 338              	.LVL49:
 339 002c FFF7FEFF 		bl	osDelay
 340              	.LVL50:
 341 0030 F0E7     		b	.L28
 342              		.cfi_endproc
 343              	.LFE144:
 345              		.section	.text._GLOBAL__sub_I_gHorse_State,"ax",%progbits
 346              		.align	1
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu fpv4-sp-d16
 352              	_GLOBAL__sub_I_gHorse_State:
 353              	.LFB146:
 354              		.loc 2 200 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 08B5     		push	{r3, lr}
 359              	.LCFI5:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 3, -8
 362              		.cfi_offset 14, -4
 363              		.loc 2 200 0
 364 0002 4FF6FF71 		movw	r1, #65535
 365 0006 0120     		movs	r0, #1
 366 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 367              	.LVL51:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 12


 368 000c 08BD     		pop	{r3, pc}
 369              		.cfi_endproc
 370              	.LFE146:
 372              		.section	.init_array,"aw",%init_array
 373              		.align	2
 374 0000 00000000 		.word	_GLOBAL__sub_I_gHorse_State(target1)
 375              		.global	gHorse_State
 376              		.section	.bss.gHorse_State,"aw",%nobits
 377              		.align	2
 378              		.set	.LANCHOR0,. + 0
 381              	gHorse_State:
 382 0000 00000000 		.space	4
 383              		.text
 384              	.Letext0:
 385              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 386              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 387              		.file 5 "Core/Inc/sys/FreeRTOSConfig.h"
 388              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core
 389              		.file 7 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 390              		.file 8 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 391              		.file 9 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 392              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 393              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 394              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 395              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 396              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 397              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 398              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 399              		.file 17 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 400              		.file 18 "Core/Inc/periphs/tim.h"
 401              		.file 19 "Core/Inc/robot/feed_forward.h"
 402              		.file 20 "Core/Inc/robot/interrupt.h"
 403              		.file 21 "Core/Inc/devs/encoder.h"
 404              		.file 22 "Core/Inc/devs/motor.h"
 405              		.file 23 "Core/Inc/utils/pid.h"
 406              		.file 24 "Core/Inc/robot/fsm.h"
 407              		.file 25 "Core/Inc/robot/robo_init.h"
 408              		.file 26 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/F
 409              		.file 27 "Core/Inc/devs/blnc_motor.h"
 410              		.file 28 "Core/Inc/devs/pneumatic.h"
 411              		.file 29 "Core/Inc/robot/fsm_tasks.h"
 412              		.file 30 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 robo_tasks.cpp
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:18     .text._ZN5StateD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:25     .text._ZN5StateD2Ev:00000000 _ZN5StateD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:25     .text._ZN5StateD2Ev:00000000 _ZN5StateD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:92     .text._Z41__static_initialization_and_destruction_0ii:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:99     .text.StartDefaultTask:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:106    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:130    .text.MotorThread:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:137    .text.MotorThread:00000000 MotorThread
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:219    .text.MotorThread:00000054 $d
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:226    .text.PneumaticThread:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:233    .text.PneumaticThread:00000000 PneumaticThread
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:286    .text.MovingMassThread:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:293    .text.MovingMassThread:00000000 MovingMassThread
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:346    .text._GLOBAL__sub_I_gHorse_State:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:352    .text._GLOBAL__sub_I_gHorse_State:00000000 _GLOBAL__sub_I_gHorse_State
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:373    .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:381    .bss.gHorse_State:00000000 gHorse_State
C:\Users\Prashant\AppData\Local\Temp\ccdtTAgo.s:377    .bss.gHorse_State:00000000 $d
                           .group:00000000 _ZN5StateD5Ev

UNDEFINED SYMBOLS
_ZN5State12get_InstanceEv
__aeabi_atexit
__dso_handle
osDelay
_Z8roboInitv
HAL_GetTick
_Z8startFSMP6fsmStr
_Z12updateOmegasv
HAL_GPIO_ReadPin
_ZN5State12update_StateEv
fsm
_Z9pneu_Initv
_Z9pneu_Loopv
_Z12balance_Initv
_Z12balance_Loopv
