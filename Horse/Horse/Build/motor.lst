ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motor.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z8floatAbsf,"ax",%progbits
  18              		.align	1
  19              		.global	_Z8floatAbsf
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z8floatAbsf:
  26              	.LFB348:
  27              		.file 1 "Core/Src/motor.cpp"
   1:Core/Src/motor.cpp **** /*22-1-2019*/
   2:Core/Src/motor.cpp **** 
   3:Core/Src/motor.cpp **** #include <math.h>
   4:Core/Src/motor.cpp **** #include "motor.h"
   5:Core/Src/motor.cpp **** 
   6:Core/Src/motor.cpp **** float floatAbs(float num)
   7:Core/Src/motor.cpp **** {
  28              		.loc 1 7 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
   8:Core/Src/motor.cpp ****     if (num < 0) 
  34              		.loc 1 8 0
  35 0000 B5EEC00A 		vcmpe.f32	s0, #0
  36 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  37 0008 00D4     		bmi	.L5
  38              	.LVL1:
  39              	.L2:
   9:Core/Src/motor.cpp ****         return (-1) * num;
  10:Core/Src/motor.cpp ****     else 
  11:Core/Src/motor.cpp ****         return num;
  12:Core/Src/motor.cpp **** }
  40              		.loc 1 12 0
  41 000a 7047     		bx	lr
  42              	.LVL2:
  43              	.L5:
   9:Core/Src/motor.cpp ****         return (-1) * num;
  44              		.loc 1 9 0
  45 000c B1EE400A 		vneg.f32	s0, s0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 2


  46              	.LVL3:
  47 0010 FBE7     		b	.L2
  48              		.cfi_endproc
  49              	.LFE348:
  51              		.section	.text._Z17calculateVelocityP8motorStr,"ax",%progbits
  52              		.align	1
  53              		.global	_Z17calculateVelocityP8motorStr
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	_Z17calculateVelocityP8motorStr:
  60              	.LFB349:
  13:Core/Src/motor.cpp **** 
  14:Core/Src/motor.cpp **** void calculateVelocity(struct motorStr *motor)
  15:Core/Src/motor.cpp **** {
  61              		.loc 1 15 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL4:
  16:Core/Src/motor.cpp ****     motor->velocity = motor->omega * motor->radius;
  67              		.loc 1 16 0
  68 0000 D0ED007A 		vldr.32	s15, [r0]
  69 0004 90ED027A 		vldr.32	s14, [r0, #8]
  70 0008 67EE877A 		vmul.f32	s15, s15, s14
  71 000c C0ED037A 		vstr.32	s15, [r0, #12]
  17:Core/Src/motor.cpp **** }
  72              		.loc 1 17 0
  73 0010 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE349:
  77              		.section	.text._Z12setDirectionP8motorStr14motorDirection,"ax",%progbits
  78              		.align	1
  79              		.global	_Z12setDirectionP8motorStr14motorDirection
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	_Z12setDirectionP8motorStr14motorDirection:
  86              	.LFB350:
  18:Core/Src/motor.cpp **** 
  19:Core/Src/motor.cpp **** void setDirection(struct motorStr *motor, enum motorDirection d)
  20:Core/Src/motor.cpp **** {
  87              		.loc 1 20 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL5:
  92 0000 10B5     		push	{r4, lr}
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 4, -8
  96              		.cfi_offset 14, -4
  97 0002 0446     		mov	r4, r0
  21:Core/Src/motor.cpp ****     if (d == DIR_CLOCKWISE)       
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 3


  98              		.loc 1 21 0
  99 0004 31B1     		cbz	r1, .L13
  22:Core/Src/motor.cpp ****     {
  23:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir1_port, motor->dir1_pin, GPIO_PIN_SET);
  24:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_RESET);
  25:Core/Src/motor.cpp ****     }
  26:Core/Src/motor.cpp ****     else if (d == DIR_ANTICLOCKWISE)
 100              		.loc 1 26 0
 101 0006 0129     		cmp	r1, #1
 102 0008 0FD0     		beq	.L14
  27:Core/Src/motor.cpp ****     {
  28:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir1_port, motor->dir1_pin, GPIO_PIN_RESET);
  29:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_SET);
  30:Core/Src/motor.cpp ****     }
  31:Core/Src/motor.cpp ****     else if (d == DIR_HALT)
 103              		.loc 1 31 0
 104 000a 0229     		cmp	r1, #2
 105 000c 18D0     		beq	.L15
  32:Core/Src/motor.cpp ****     {
  33:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir1_port, motor->dir1_pin, GPIO_PIN_RESET);
  34:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_RESET);
  35:Core/Src/motor.cpp ****     }
  36:Core/Src/motor.cpp ****     else if (d == DIR_BRAKE)
 106              		.loc 1 36 0
 107 000e 0329     		cmp	r1, #3
 108 0010 21D0     		beq	.L16
 109              	.LVL6:
 110              	.L7:
  37:Core/Src/motor.cpp ****     {
  38:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir1_port, motor->dir1_pin, GPIO_PIN_SET);
  39:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_SET);
  40:Core/Src/motor.cpp ****     }
  41:Core/Src/motor.cpp ****     
  42:Core/Src/motor.cpp ****     else
  43:Core/Src/motor.cpp ****     {
  44:Core/Src/motor.cpp ****         // error
  45:Core/Src/motor.cpp ****     }
  46:Core/Src/motor.cpp **** }
 111              		.loc 1 46 0
 112 0012 10BD     		pop	{r4, pc}
 113              	.LVL7:
 114              	.L13:
  23:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_RESET);
 115              		.loc 1 23 0
 116 0014 0122     		movs	r2, #1
 117 0016 818B     		ldrh	r1, [r0, #28]
 118              	.LVL8:
 119 0018 8069     		ldr	r0, [r0, #24]
 120              	.LVL9:
 121 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL10:
  24:Core/Src/motor.cpp ****     }
 123              		.loc 1 24 0
 124 001e 0022     		movs	r2, #0
 125 0020 A18C     		ldrh	r1, [r4, #36]
 126 0022 206A     		ldr	r0, [r4, #32]
 127 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 4


 128              	.LVL11:
 129 0028 F3E7     		b	.L7
 130              	.LVL12:
 131              	.L14:
  28:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_SET);
 132              		.loc 1 28 0
 133 002a 0022     		movs	r2, #0
 134 002c 818B     		ldrh	r1, [r0, #28]
 135              	.LVL13:
 136 002e 8069     		ldr	r0, [r0, #24]
 137              	.LVL14:
 138 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139              	.LVL15:
  29:Core/Src/motor.cpp ****     }
 140              		.loc 1 29 0
 141 0034 0122     		movs	r2, #1
 142 0036 A18C     		ldrh	r1, [r4, #36]
 143 0038 206A     		ldr	r0, [r4, #32]
 144 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL16:
 146 003e E8E7     		b	.L7
 147              	.LVL17:
 148              	.L15:
  33:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_RESET);
 149              		.loc 1 33 0
 150 0040 0022     		movs	r2, #0
 151 0042 818B     		ldrh	r1, [r0, #28]
 152              	.LVL18:
 153 0044 8069     		ldr	r0, [r0, #24]
 154              	.LVL19:
 155 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL20:
  34:Core/Src/motor.cpp ****     }
 157              		.loc 1 34 0
 158 004a 0022     		movs	r2, #0
 159 004c A18C     		ldrh	r1, [r4, #36]
 160 004e 206A     		ldr	r0, [r4, #32]
 161 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 162              	.LVL21:
 163 0054 DDE7     		b	.L7
 164              	.LVL22:
 165              	.L16:
  38:Core/Src/motor.cpp ****         HAL_GPIO_WritePin(motor->dir2_port, motor->dir2_pin, GPIO_PIN_SET);
 166              		.loc 1 38 0
 167 0056 0122     		movs	r2, #1
 168 0058 818B     		ldrh	r1, [r0, #28]
 169              	.LVL23:
 170 005a 8069     		ldr	r0, [r0, #24]
 171              	.LVL24:
 172 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 173              	.LVL25:
  39:Core/Src/motor.cpp ****     }
 174              		.loc 1 39 0
 175 0060 0122     		movs	r2, #1
 176 0062 A18C     		ldrh	r1, [r4, #36]
 177 0064 206A     		ldr	r0, [r4, #32]
 178 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 5


 179              	.LVL26:
 180              		.loc 1 46 0
 181 006a D2E7     		b	.L7
 182              		.cfi_endproc
 183              	.LFE350:
 185              		.section	.text._Z12setDutyCycleP8motorStrt,"ax",%progbits
 186              		.align	1
 187              		.global	_Z12setDutyCycleP8motorStrt
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	_Z12setDutyCycleP8motorStrt:
 194              	.LFB351:
  47:Core/Src/motor.cpp **** 
  48:Core/Src/motor.cpp **** void setDutyCycle(struct motorStr *motor, uint16_t dutyCycle)
  49:Core/Src/motor.cpp **** {
 195              		.loc 1 49 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL27:
  50:Core/Src/motor.cpp ****     uint16_t mapped_value;
  51:Core/Src/motor.cpp ****     mapped_value = (10499 * dutyCycle) / 65535;
 201              		.loc 1 51 0
 202 0000 42F60313 		movw	r3, #10499
 203 0004 03FB01F3 		mul	r3, r3, r1
 204 0008 0649     		ldr	r1, .L18
 205              	.LVL28:
 206 000a 81FB0321 		smull	r2, r1, r1, r3
 207 000e 1944     		add	r1, r1, r3
 208              	.LVL29:
  52:Core/Src/motor.cpp ****     
  53:Core/Src/motor.cpp ****     __HAL_TIM_SET_COMPARE(motor->htim, motor->channel, mapped_value); 
 209              		.loc 1 53 0
 210 0010 836A     		ldr	r3, [r0, #40]
 211 0012 1B68     		ldr	r3, [r3]
 212 0014 3433     		adds	r3, r3, #52
 213 0016 C26A     		ldr	r2, [r0, #44]
 214 0018 9208     		lsrs	r2, r2, #2
 215 001a C1F3CF31 		ubfx	r1, r1, #15, #16
 216              	.LVL30:
 217 001e 43F82210 		str	r1, [r3, r2, lsl #2]
  54:Core/Src/motor.cpp **** }
 218              		.loc 1 54 0
 219 0022 7047     		bx	lr
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0024 01800080 		.word	-2147450879
 224              		.cfi_endproc
 225              	.LFE351:
 227              		.global	__aeabi_f2d
 228              		.global	__aeabi_dmul
 229              		.global	__aeabi_d2uiz
 230              		.section	.text._Z8setOmegaP8motorStrf,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 6


 231              		.align	1
 232              		.global	_Z8setOmegaP8motorStrf
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv4-sp-d16
 238              	_Z8setOmegaP8motorStrf:
 239              	.LFB352:
  55:Core/Src/motor.cpp **** 
  56:Core/Src/motor.cpp **** void setOmega(struct motorStr *motor, float omega)
  57:Core/Src/motor.cpp **** {
 240              		.loc 1 57 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              	.LVL31:
 245 0000 38B5     		push	{r3, r4, r5, lr}
 246              	.LCFI1:
 247              		.cfi_def_cfa_offset 16
 248              		.cfi_offset 3, -16
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 5, -8
 251              		.cfi_offset 14, -4
 252 0002 2DED028B 		vpush.64	{d8}
 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 24
 255              		.cfi_offset 80, -24
 256              		.cfi_offset 81, -20
 257 0006 0446     		mov	r4, r0
 258 0008 B0EE408A 		vmov.f32	s16, s0
  58:Core/Src/motor.cpp ****     uint16_t new_omega = (65535.0 / MAX_OMEGA) * fabs(omega);
 259              		.loc 1 58 0
 260 000c F0EEC07A 		vabs.f32	s15, s0
 261 0010 17EE900A 		vmov	r0, s15
 262              	.LVL32:
 263 0014 FFF7FEFF 		bl	__aeabi_f2d
 264              	.LVL33:
 265 0018 17A3     		adr	r3, .L33
 266 001a D3E90023 		ldrd	r2, [r3]
 267 001e FFF7FEFF 		bl	__aeabi_dmul
 268              	.LVL34:
 269 0022 FFF7FEFF 		bl	__aeabi_d2uiz
 270              	.LVL35:
 271 0026 85B2     		uxth	r5, r0
 272              	.LVL36:
  59:Core/Src/motor.cpp ****     if (omega > 0) 
 273              		.loc 1 59 0
 274 0028 B5EEC08A 		vcmpe.f32	s16, #0
 275 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 276 0030 0DDC     		bgt	.L31
  60:Core/Src/motor.cpp ****     {
  61:Core/Src/motor.cpp ****             setDirection(motor, DIR_CLOCKWISE);
  62:Core/Src/motor.cpp ****             setDutyCycle(motor, new_omega);
  63:Core/Src/motor.cpp ****     }
  64:Core/Src/motor.cpp ****     
  65:Core/Src/motor.cpp ****     else if (omega < 0) 
 277              		.loc 1 65 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 7


 278 0032 B5EEC08A 		vcmpe.f32	s16, #0
 279 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 280 003a 13D4     		bmi	.L32
  66:Core/Src/motor.cpp ****     {
  67:Core/Src/motor.cpp ****             setDirection(motor, DIR_ANTICLOCKWISE);
  68:Core/Src/motor.cpp ****             setDutyCycle(motor, new_omega);
  69:Core/Src/motor.cpp ****     }
  70:Core/Src/motor.cpp ****     
  71:Core/Src/motor.cpp ****     else 
  72:Core/Src/motor.cpp ****     {
  73:Core/Src/motor.cpp ****             setDirection(motor, DIR_HALT);
 281              		.loc 1 73 0
 282 003c 0221     		movs	r1, #2
 283 003e 2046     		mov	r0, r4
 284 0040 FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 285              	.LVL37:
  74:Core/Src/motor.cpp ****             setDutyCycle(motor, 0);
 286              		.loc 1 74 0
 287 0044 0021     		movs	r1, #0
 288 0046 2046     		mov	r0, r4
 289 0048 FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 290              	.LVL38:
  75:Core/Src/motor.cpp ****     }
  76:Core/Src/motor.cpp **** }
 291              		.loc 1 76 0
 292 004c 07E0     		b	.L20
 293              	.L31:
  61:Core/Src/motor.cpp ****             setDutyCycle(motor, new_omega);
 294              		.loc 1 61 0
 295 004e 0021     		movs	r1, #0
 296 0050 2046     		mov	r0, r4
 297 0052 FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 298              	.LVL39:
  62:Core/Src/motor.cpp ****     }
 299              		.loc 1 62 0
 300 0056 2946     		mov	r1, r5
 301 0058 2046     		mov	r0, r4
 302 005a FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 303              	.LVL40:
 304              	.L20:
 305              		.loc 1 76 0
 306 005e BDEC028B 		vldm	sp!, {d8}
 307              	.LCFI3:
 308              		.cfi_remember_state
 309              		.cfi_restore 80
 310              		.cfi_restore 81
 311              		.cfi_def_cfa_offset 16
 312              	.LVL41:
 313 0062 38BD     		pop	{r3, r4, r5, pc}
 314              	.LVL42:
 315              	.L32:
 316              	.LCFI4:
 317              		.cfi_restore_state
  67:Core/Src/motor.cpp ****             setDutyCycle(motor, new_omega);
 318              		.loc 1 67 0
 319 0064 0121     		movs	r1, #1
 320 0066 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 8


 321 0068 FFF7FEFF 		bl	_Z12setDirectionP8motorStr14motorDirection
 322              	.LVL43:
  68:Core/Src/motor.cpp ****     }
 323              		.loc 1 68 0
 324 006c 2946     		mov	r1, r5
 325 006e 2046     		mov	r0, r4
 326 0070 FFF7FEFF 		bl	_Z12setDutyCycleP8motorStrt
 327              	.LVL44:
 328 0074 F3E7     		b	.L20
 329              	.L34:
 330 0076 00BF     		.align	3
 331              	.L33:
 332 0078 00000000 		.word	0
 333 007c 001EAE40 		.word	1085152768
 334              		.cfi_endproc
 335              	.LFE352:
 337              		.section	.text._Z8getAngleP8motorStr,"ax",%progbits
 338              		.align	1
 339              		.global	_Z8getAngleP8motorStr
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv4-sp-d16
 345              	_Z8getAngleP8motorStr:
 346              	.LFB353:
  77:Core/Src/motor.cpp **** 
  78:Core/Src/motor.cpp **** void getAngle(struct motorStr *motor)
  79:Core/Src/motor.cpp **** {
 347              		.loc 1 79 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL45:
 352 0000 10B5     		push	{r4, lr}
 353              	.LCFI5:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 4, -8
 356              		.cfi_offset 14, -4
 357 0002 0446     		mov	r4, r0
  80:Core/Src/motor.cpp ****     motor->angle = calculateAngle(motor->encoder);
 358              		.loc 1 80 0
 359 0004 006B     		ldr	r0, [r0, #48]
 360              	.LVL46:
 361 0006 FFF7FEFF 		bl	_Z14calculateAngleP10encoderStr
 362              	.LVL47:
 363 000a 84ED010A 		vstr.32	s0, [r4, #4]
  81:Core/Src/motor.cpp **** }
 364              		.loc 1 81 0
 365 000e 10BD     		pop	{r4, pc}
 366              		.cfi_endproc
 367              	.LFE353:
 369              		.section	.text._Z8getOmegaP8motorStr,"ax",%progbits
 370              		.align	1
 371              		.global	_Z8getOmegaP8motorStr
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 9


 375              		.fpu fpv4-sp-d16
 377              	_Z8getOmegaP8motorStr:
 378              	.LFB354:
  82:Core/Src/motor.cpp **** 
  83:Core/Src/motor.cpp **** void getOmega(struct motorStr *motor)
  84:Core/Src/motor.cpp **** {
 379              		.loc 1 84 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL48:
 384 0000 10B5     		push	{r4, lr}
 385              	.LCFI6:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 389 0002 0446     		mov	r4, r0
  85:Core/Src/motor.cpp ****     motor->omega = calculateOmega(motor->encoder);
 390              		.loc 1 85 0
 391 0004 006B     		ldr	r0, [r0, #48]
 392              	.LVL49:
 393 0006 FFF7FEFF 		bl	_Z14calculateOmegaP10encoderStr
 394              	.LVL50:
 395 000a 84ED000A 		vstr.32	s0, [r4]
  86:Core/Src/motor.cpp **** }
 396              		.loc 1 86 0
 397 000e 10BD     		pop	{r4, pc}
 398              		.cfi_endproc
 399              	.LFE354:
 401              		.section	.text._Z10resetAngleP8motorStr,"ax",%progbits
 402              		.align	1
 403              		.global	_Z10resetAngleP8motorStr
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	_Z10resetAngleP8motorStr:
 410              	.LFB355:
  87:Core/Src/motor.cpp **** 
  88:Core/Src/motor.cpp **** void resetAngle(struct motorStr *motor)
  89:Core/Src/motor.cpp **** {
 411              		.loc 1 89 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              	.LVL51:
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
  90:Core/Src/motor.cpp ****     resetEncoderAngle(motor->encoder);
 421              		.loc 1 90 0
 422 0002 006B     		ldr	r0, [r0, #48]
 423              	.LVL52:
 424 0004 FFF7FEFF 		bl	_Z17resetEncoderAngleP10encoderStr
 425              	.LVL53:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 10


  91:Core/Src/motor.cpp **** }
 426              		.loc 1 91 0
 427 0008 08BD     		pop	{r3, pc}
 428              		.cfi_endproc
 429              	.LFE355:
 431              		.text
 432              	.Letext0:
 433              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 434              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 435              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 436              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 437              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 438              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 439              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 440              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 441              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 442              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 443              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 444              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/cor
 445              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/S
 446              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/S
 447              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 448              		.file 17 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 449              		.file 18 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 450              		.file 19 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 451              		.file 20 "Core/Inc/periphs/tim.h"
 452              		.file 21 "Core/Inc/encoder.h"
 453              		.file 22 "Core/Inc/motor.h"
 454              		.file 23 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 motor.cpp
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:18     .text._Z8floatAbsf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:25     .text._Z8floatAbsf:00000000 _Z8floatAbsf
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:52     .text._Z17calculateVelocityP8motorStr:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:59     .text._Z17calculateVelocityP8motorStr:00000000 _Z17calculateVelocityP8motorStr
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:78     .text._Z12setDirectionP8motorStr14motorDirection:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:85     .text._Z12setDirectionP8motorStr14motorDirection:00000000 _Z12setDirectionP8motorStr14motorDirection
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:186    .text._Z12setDutyCycleP8motorStrt:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:193    .text._Z12setDutyCycleP8motorStrt:00000000 _Z12setDutyCycleP8motorStrt
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:223    .text._Z12setDutyCycleP8motorStrt:00000024 $d
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:231    .text._Z8setOmegaP8motorStrf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:238    .text._Z8setOmegaP8motorStrf:00000000 _Z8setOmegaP8motorStrf
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:332    .text._Z8setOmegaP8motorStrf:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:338    .text._Z8getAngleP8motorStr:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:345    .text._Z8getAngleP8motorStr:00000000 _Z8getAngleP8motorStr
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:370    .text._Z8getOmegaP8motorStr:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:377    .text._Z8getOmegaP8motorStr:00000000 _Z8getOmegaP8motorStr
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:402    .text._Z10resetAngleP8motorStr:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccak8ueF.s:409    .text._Z10resetAngleP8motorStr:00000000 _Z10resetAngleP8motorStr

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
_Z14calculateAngleP10encoderStr
_Z14calculateOmegaP10encoderStr
_Z17resetEncoderAngleP10encoderStr
