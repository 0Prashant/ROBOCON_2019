ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z18SystemClock_Configv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z18SystemClock_Configv:
  26              	.LFB130:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * This notice applies to any and all portions of this file
   8:Core/Src/main.cpp ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.cpp ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.cpp ****   * inserted by the user or by software development tools
  11:Core/Src/main.cpp ****   * are owned by their respective copyright owners.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Core/Src/main.cpp ****   * All rights reserved.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   * Redistribution and use in source and binary forms, with or without 
  17:Core/Src/main.cpp ****   * modification, are permitted, provided that the following conditions are met:
  18:Core/Src/main.cpp ****   *
  19:Core/Src/main.cpp ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Core/Src/main.cpp ****   *    this list of conditions and the following disclaimer.
  21:Core/Src/main.cpp ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Core/Src/main.cpp ****   *    this list of conditions and the following disclaimer in the documentation
  23:Core/Src/main.cpp ****   *    and/or other materials provided with the distribution.
  24:Core/Src/main.cpp ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Core/Src/main.cpp ****   *    contributors to this software may be used to endorse or promote products 
  26:Core/Src/main.cpp ****   *    derived from this software without specific written permission.
  27:Core/Src/main.cpp ****   * 4. This software, including modifications and/or derivative works of this 
  28:Core/Src/main.cpp ****   *    software, must execute solely and exclusively on microcontroller or
  29:Core/Src/main.cpp ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Core/Src/main.cpp ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Core/Src/main.cpp ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 2


  32:Core/Src/main.cpp ****   *    this license. 
  33:Core/Src/main.cpp ****   *
  34:Core/Src/main.cpp ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Core/Src/main.cpp ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Core/Src/main.cpp ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Core/Src/main.cpp ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Core/Src/main.cpp ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Core/Src/main.cpp ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Core/Src/main.cpp ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Core/Src/main.cpp ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Core/Src/main.cpp ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Core/Src/main.cpp ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Core/Src/main.cpp ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Core/Src/main.cpp ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Core/Src/main.cpp ****   *
  47:Core/Src/main.cpp ****   ******************************************************************************
  48:Core/Src/main.cpp ****   */
  49:Core/Src/main.cpp **** /* USER CODE END Header */
  50:Core/Src/main.cpp **** 
  51:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  52:Core/Src/main.cpp **** #include "main.h"
  53:Core/Src/main.cpp **** #include "cmsis_os.h"
  54:Core/Src/main.cpp **** #include "tim.h"
  55:Core/Src/main.cpp **** #include "usart.h"
  56:Core/Src/main.cpp **** #include "gpio.h"
  57:Core/Src/main.cpp **** 
  58:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  59:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  60:Core/Src/main.cpp **** 
  61:Core/Src/main.cpp **** /* USER CODE END Includes */
  62:Core/Src/main.cpp **** 
  63:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  64:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  65:Core/Src/main.cpp **** 
  66:Core/Src/main.cpp **** /* USER CODE END PTD */
  67:Core/Src/main.cpp **** 
  68:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  69:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  70:Core/Src/main.cpp **** 
  71:Core/Src/main.cpp **** /* USER CODE END PD */
  72:Core/Src/main.cpp **** 
  73:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  74:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  75:Core/Src/main.cpp **** 
  76:Core/Src/main.cpp **** /* USER CODE END PM */
  77:Core/Src/main.cpp **** 
  78:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  79:Core/Src/main.cpp **** 
  80:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  81:Core/Src/main.cpp **** 
  82:Core/Src/main.cpp **** /* USER CODE END PV */
  83:Core/Src/main.cpp **** 
  84:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  85:Core/Src/main.cpp **** void SystemClock_Config(void);
  86:Core/Src/main.cpp **** extern "C" void MX_FREERTOS_Init(void);
  87:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  88:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 3


  89:Core/Src/main.cpp **** /* USER CODE END PFP */
  90:Core/Src/main.cpp **** 
  91:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  92:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp **** /* USER CODE END 0 */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp **** /**
  97:Core/Src/main.cpp ****   * @brief  The application entry point.
  98:Core/Src/main.cpp ****   * @retval int
  99:Core/Src/main.cpp ****   */
 100:Core/Src/main.cpp **** int main(void)
 101:Core/Src/main.cpp ****  {
 102:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
 103:Core/Src/main.cpp **** 
 104:Core/Src/main.cpp ****         /* USER CODE END 1 */
 105:Core/Src/main.cpp ****  
 106:Core/Src/main.cpp ****         /* MCU Configuration--------------------------------------------------------*/
 107:Core/Src/main.cpp **** 
 108:Core/Src/main.cpp ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Core/Src/main.cpp ****         HAL_Init();
 110:Core/Src/main.cpp **** 
 111:Core/Src/main.cpp ****         /* USER CODE BEGIN Init */
 112:Core/Src/main.cpp **** 
 113:Core/Src/main.cpp ****         /* USER CODE END Init */
 114:Core/Src/main.cpp **** 
 115:Core/Src/main.cpp ****         /* Configure the system clock */
 116:Core/Src/main.cpp ****         SystemClock_Config();
 117:Core/Src/main.cpp **** 
 118:Core/Src/main.cpp ****         /* USER CODE BEGIN SysInit */
 119:Core/Src/main.cpp **** 
 120:Core/Src/main.cpp ****         /* USER CODE END SysInit */
 121:Core/Src/main.cpp **** 
 122:Core/Src/main.cpp ****         /* Initialize all configured peripherals */
 123:Core/Src/main.cpp ****         MX_GPIO_Init();
 124:Core/Src/main.cpp ****         MX_TIM1_Init();
 125:Core/Src/main.cpp ****         MX_TIM4_Init();
 126:Core/Src/main.cpp ****         MX_TIM8_Init();
 127:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 128:Core/Src/main.cpp ****         MX_TIM5_Init();
 129:Core/Src/main.cpp ****         MX_TIM3_Init();
 130:Core/Src/main.cpp ****         MX_TIM2_Init();
 131:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 132:Core/Src/main.cpp **** 
 133:Core/Src/main.cpp ****         /* USER CODE END 2 */
 134:Core/Src/main.cpp **** 
 135:Core/Src/main.cpp ****         /* Call init function for freertos objects (in freertos.c) */
 136:Core/Src/main.cpp ****         MX_FREERTOS_Init();
 137:Core/Src/main.cpp **** 
 138:Core/Src/main.cpp ****         /* Start scheduler */
 139:Core/Src/main.cpp ****         osKernelStart();
 140:Core/Src/main.cpp **** 
 141:Core/Src/main.cpp ****         /* We should never get here as control is now taken by the scheduler */
 142:Core/Src/main.cpp **** 
 143:Core/Src/main.cpp ****         /* Infinite loop */
 144:Core/Src/main.cpp ****         /* USER CODE BEGIN WHILE */
 145:Core/Src/main.cpp ****         while (1)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 4


 146:Core/Src/main.cpp ****         {
 147:Core/Src/main.cpp ****                 /* USER CODE END WHILE */
 148:Core/Src/main.cpp **** 
 149:Core/Src/main.cpp ****                 /* USER CODE BEGIN 3 */
 150:Core/Src/main.cpp ****         }
 151:Core/Src/main.cpp ****         /* USER CODE END 3 */
 152:Core/Src/main.cpp **** }
 153:Core/Src/main.cpp **** 
 154:Core/Src/main.cpp **** /**
 155:Core/Src/main.cpp ****   * @brief System Clock Configuration
 156:Core/Src/main.cpp ****   * @retval None
 157:Core/Src/main.cpp ****   */
 158:Core/Src/main.cpp **** void SystemClock_Config(void)
 159:Core/Src/main.cpp **** {
  28              		.loc 1 159 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 95B0     		sub	sp, sp, #84
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 96
 160:Core/Src/main.cpp ****         RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 160 0
  42 0004 3022     		movs	r2, #48
  43 0006 0021     		movs	r1, #0
  44 0008 08A8     		add	r0, sp, #32
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 161:Core/Src/main.cpp ****         RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 161 0
  48 000e 0024     		movs	r4, #0
  49 0010 0394     		str	r4, [sp, #12]
  50 0012 0494     		str	r4, [sp, #16]
  51 0014 0594     		str	r4, [sp, #20]
  52 0016 0694     		str	r4, [sp, #24]
  53 0018 0794     		str	r4, [sp, #28]
  54              	.LBB2:
 162:Core/Src/main.cpp **** 
 163:Core/Src/main.cpp ****         /**Configure the main internal regulator output voltage 
 164:Core/Src/main.cpp ****   */
 165:Core/Src/main.cpp ****         __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 165 0
  56 001a 0194     		str	r4, [sp, #4]
  57 001c 1B4B     		ldr	r3, .L3
  58 001e 1A6C     		ldr	r2, [r3, #64]
  59 0020 42F08052 		orr	r2, r2, #268435456
  60 0024 1A64     		str	r2, [r3, #64]
  61 0026 1B6C     		ldr	r3, [r3, #64]
  62 0028 03F08053 		and	r3, r3, #268435456
  63 002c 0193     		str	r3, [sp, #4]
  64 002e 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 5


  65              	.LBE2:
  66              	.LBB3:
 166:Core/Src/main.cpp ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  67              		.loc 1 166 0
  68 0030 0294     		str	r4, [sp, #8]
  69 0032 174B     		ldr	r3, .L3+4
  70 0034 1A68     		ldr	r2, [r3]
  71 0036 42F48042 		orr	r2, r2, #16384
  72 003a 1A60     		str	r2, [r3]
  73 003c 1B68     		ldr	r3, [r3]
  74 003e 03F48043 		and	r3, r3, #16384
  75 0042 0293     		str	r3, [sp, #8]
  76 0044 029B     		ldr	r3, [sp, #8]
  77              	.LBE3:
 167:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 168:Core/Src/main.cpp ****   */
 169:Core/Src/main.cpp ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  78              		.loc 1 169 0
  79 0046 0123     		movs	r3, #1
  80 0048 0893     		str	r3, [sp, #32]
 170:Core/Src/main.cpp ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  81              		.loc 1 170 0
  82 004a 4FF48033 		mov	r3, #65536
  83 004e 0993     		str	r3, [sp, #36]
 171:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  84              		.loc 1 171 0
  85 0050 0225     		movs	r5, #2
  86 0052 0E95     		str	r5, [sp, #56]
 172:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  87              		.loc 1 172 0
  88 0054 4FF48003 		mov	r3, #4194304
  89 0058 0F93     		str	r3, [sp, #60]
 173:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLM = 4;
  90              		.loc 1 173 0
  91 005a 0423     		movs	r3, #4
  92 005c 1093     		str	r3, [sp, #64]
 174:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLN = 168;
  93              		.loc 1 174 0
  94 005e A822     		movs	r2, #168
  95 0060 1192     		str	r2, [sp, #68]
 175:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  96              		.loc 1 175 0
  97 0062 1295     		str	r5, [sp, #72]
 176:Core/Src/main.cpp ****         RCC_OscInitStruct.PLL.PLLQ = 4;
  98              		.loc 1 176 0
  99 0064 1393     		str	r3, [sp, #76]
 177:Core/Src/main.cpp ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 100              		.loc 1 177 0
 101 0066 08A8     		add	r0, sp, #32
 102 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 103              	.LVL1:
 178:Core/Src/main.cpp ****         {
 179:Core/Src/main.cpp ****                 Error_Handler();
 180:Core/Src/main.cpp ****         }
 181:Core/Src/main.cpp ****         /**Initializes the CPU, AHB and APB busses clocks 
 182:Core/Src/main.cpp ****   */
 183:Core/Src/main.cpp ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 6


 104              		.loc 1 183 0
 105 006c 0F23     		movs	r3, #15
 106 006e 0393     		str	r3, [sp, #12]
 184:Core/Src/main.cpp ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 107              		.loc 1 184 0
 108 0070 0495     		str	r5, [sp, #16]
 185:Core/Src/main.cpp ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 109              		.loc 1 185 0
 110 0072 0594     		str	r4, [sp, #20]
 186:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 111              		.loc 1 186 0
 112 0074 4FF4A053 		mov	r3, #5120
 113 0078 0693     		str	r3, [sp, #24]
 187:Core/Src/main.cpp ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 114              		.loc 1 187 0
 115 007a 4FF48053 		mov	r3, #4096
 116 007e 0793     		str	r3, [sp, #28]
 188:Core/Src/main.cpp **** 
 189:Core/Src/main.cpp ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 117              		.loc 1 189 0
 118 0080 0521     		movs	r1, #5
 119 0082 03A8     		add	r0, sp, #12
 120 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 121              	.LVL2:
 190:Core/Src/main.cpp ****         {
 191:Core/Src/main.cpp ****                 Error_Handler();
 192:Core/Src/main.cpp ****         }
 193:Core/Src/main.cpp **** }
 122              		.loc 1 193 0
 123 0088 15B0     		add	sp, sp, #84
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 12
 126              		@ sp needed
 127 008a 30BD     		pop	{r4, r5, pc}
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 008c 00380240 		.word	1073887232
 132 0090 00700040 		.word	1073770496
 133              		.cfi_endproc
 134              	.LFE130:
 136              		.section	.text.main,"ax",%progbits
 137              		.align	1
 138              		.global	main
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
 144              	main:
 145              	.LFB129:
 101:Core/Src/main.cpp ****         /* USER CODE BEGIN 1 */
 146              		.loc 1 101 0
 147              		.cfi_startproc
 148              		@ Volatile: function does not return.
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 7


 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
 109:Core/Src/main.cpp **** 
 156              		.loc 1 109 0
 157 0002 FFF7FEFF 		bl	HAL_Init
 158              	.LVL3:
 116:Core/Src/main.cpp **** 
 159              		.loc 1 116 0
 160 0006 FFF7FEFF 		bl	_Z18SystemClock_Configv
 161              	.LVL4:
 123:Core/Src/main.cpp ****         MX_TIM1_Init();
 162              		.loc 1 123 0
 163 000a FFF7FEFF 		bl	MX_GPIO_Init
 164              	.LVL5:
 124:Core/Src/main.cpp ****         MX_TIM4_Init();
 165              		.loc 1 124 0
 166 000e FFF7FEFF 		bl	MX_TIM1_Init
 167              	.LVL6:
 125:Core/Src/main.cpp ****         MX_TIM8_Init();
 168              		.loc 1 125 0
 169 0012 FFF7FEFF 		bl	MX_TIM4_Init
 170              	.LVL7:
 126:Core/Src/main.cpp ****         MX_USART3_UART_Init();
 171              		.loc 1 126 0
 172 0016 FFF7FEFF 		bl	MX_TIM8_Init
 173              	.LVL8:
 127:Core/Src/main.cpp ****         MX_TIM5_Init();
 174              		.loc 1 127 0
 175 001a FFF7FEFF 		bl	MX_USART3_UART_Init
 176              	.LVL9:
 128:Core/Src/main.cpp ****         MX_TIM3_Init();
 177              		.loc 1 128 0
 178 001e FFF7FEFF 		bl	MX_TIM5_Init
 179              	.LVL10:
 129:Core/Src/main.cpp ****         MX_TIM2_Init();
 180              		.loc 1 129 0
 181 0022 FFF7FEFF 		bl	MX_TIM3_Init
 182              	.LVL11:
 130:Core/Src/main.cpp ****         /* USER CODE BEGIN 2 */
 183              		.loc 1 130 0
 184 0026 FFF7FEFF 		bl	MX_TIM2_Init
 185              	.LVL12:
 136:Core/Src/main.cpp **** 
 186              		.loc 1 136 0
 187 002a FFF7FEFF 		bl	MX_FREERTOS_Init
 188              	.LVL13:
 139:Core/Src/main.cpp **** 
 189              		.loc 1 139 0
 190 002e FFF7FEFF 		bl	osKernelStart
 191              	.LVL14:
 192              	.L6:
 193 0032 FEE7     		b	.L6
 194              		.cfi_endproc
 195              	.LFE129:
 197              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 8


 198              		.align	1
 199              		.global	HAL_TIM_PeriodElapsedCallback
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	HAL_TIM_PeriodElapsedCallback:
 206              	.LFB131:
 194:Core/Src/main.cpp **** 
 195:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 196:Core/Src/main.cpp **** 
 197:Core/Src/main.cpp **** /* USER CODE END 4 */
 198:Core/Src/main.cpp **** 
 199:Core/Src/main.cpp **** /**
 200:Core/Src/main.cpp ****   * @brief  Period elapsed callback in non blocking mode
 201:Core/Src/main.cpp ****   * @note   This function is called  when TIM14 interrupt took place, inside
 202:Core/Src/main.cpp ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 203:Core/Src/main.cpp ****   * a global variable "uwTick" used as application time base.
 204:Core/Src/main.cpp ****   * @param  htim : TIM handle
 205:Core/Src/main.cpp ****   * @retval None
 206:Core/Src/main.cpp ****   */
 207:Core/Src/main.cpp **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 208:Core/Src/main.cpp **** {
 207              		.loc 1 208 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              	.LVL15:
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI4:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 209:Core/Src/main.cpp ****         /* USER CODE BEGIN Callback 0 */
 210:Core/Src/main.cpp **** 
 211:Core/Src/main.cpp ****         /* USER CODE END Callback 0 */
 212:Core/Src/main.cpp ****         if (htim->Instance == TIM14)
 217              		.loc 1 212 0
 218 0002 0268     		ldr	r2, [r0]
 219 0004 034B     		ldr	r3, .L12
 220 0006 9A42     		cmp	r2, r3
 221 0008 00D0     		beq	.L11
 222              	.LVL16:
 223              	.L8:
 213:Core/Src/main.cpp ****         {
 214:Core/Src/main.cpp ****                 HAL_IncTick();
 215:Core/Src/main.cpp ****         }
 216:Core/Src/main.cpp ****         /* USER CODE BEGIN Callback 1 */
 217:Core/Src/main.cpp **** 
 218:Core/Src/main.cpp ****         /* USER CODE END Callback 1 */
 219:Core/Src/main.cpp **** }
 224              		.loc 1 219 0
 225 000a 08BD     		pop	{r3, pc}
 226              	.LVL17:
 227              	.L11:
 214:Core/Src/main.cpp ****         }
 228              		.loc 1 214 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 9


 229 000c FFF7FEFF 		bl	HAL_IncTick
 230              	.LVL18:
 231              		.loc 1 219 0
 232 0010 FBE7     		b	.L8
 233              	.L13:
 234 0012 00BF     		.align	2
 235              	.L12:
 236 0014 00200040 		.word	1073750016
 237              		.cfi_endproc
 238              	.LFE131:
 240              		.section	.text.Error_Handler,"ax",%progbits
 241              		.align	1
 242              		.global	Error_Handler
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu fpv4-sp-d16
 248              	Error_Handler:
 249              	.LFB132:
 220:Core/Src/main.cpp **** 
 221:Core/Src/main.cpp **** /**
 222:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 223:Core/Src/main.cpp ****   * @retval None
 224:Core/Src/main.cpp ****   */
 225:Core/Src/main.cpp **** void Error_Handler(void)
 226:Core/Src/main.cpp **** {
 250              		.loc 1 226 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 227:Core/Src/main.cpp ****         /* USER CODE BEGIN Error_Handler_Debug */
 228:Core/Src/main.cpp ****         /* User can add his own implementation to report the HAL error return state */
 229:Core/Src/main.cpp ****         
 230:Core/Src/main.cpp ****         /* USER CODE END Error_Handler_Debug */
 231:Core/Src/main.cpp **** }
 255              		.loc 1 231 0
 256 0000 7047     		bx	lr
 257              		.cfi_endproc
 258              	.LFE132:
 260              		.section	.text._Z14_Error_HandlerPKcj,"ax",%progbits
 261              		.align	1
 262              		.global	_Z14_Error_HandlerPKcj
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	_Z14_Error_HandlerPKcj:
 269              	.LFB133:
 232:Core/Src/main.cpp **** void _Error_Handler(const char *file, size_t line)
 233:Core/Src/main.cpp **** {
 270              		.loc 1 233 0
 271              		.cfi_startproc
 272              		@ Volatile: function does not return.
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 10


 276              	.LVL19:
 277              	.L16:
 278 0000 FEE7     		b	.L16
 279              		.cfi_endproc
 280              	.LFE133:
 282              		.section	.text.assert_failed,"ax",%progbits
 283              		.align	1
 284              		.global	assert_failed
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	assert_failed:
 291              	.LFB134:
 234:Core/Src/main.cpp ****         while(1) {
 235:Core/Src/main.cpp **** 
 236:Core/Src/main.cpp ****         }
 237:Core/Src/main.cpp **** }
 238:Core/Src/main.cpp **** 
 239:Core/Src/main.cpp **** #ifdef USE_FULL_ASSERT
 240:Core/Src/main.cpp **** /**
 241:Core/Src/main.cpp ****   * @brief  Reports the name of the source file and the source line number
 242:Core/Src/main.cpp ****   *         where the assert_param error has occurred.
 243:Core/Src/main.cpp ****   * @param  file: pointer to the source file name
 244:Core/Src/main.cpp ****   * @param  line: assert_param error line source number
 245:Core/Src/main.cpp ****   * @retval None
 246:Core/Src/main.cpp ****   */
 247:Core/Src/main.cpp **** void assert_failed(uint8_t *file, uint32_t line)
 248:Core/Src/main.cpp **** {
 292              		.loc 1 248 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297              	.LVL20:
 249:Core/Src/main.cpp ****         /* USER CODE BEGIN 6 */
 250:Core/Src/main.cpp ****         /* User can add his own implementation to report the file name and line number,
 251:Core/Src/main.cpp ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 252:Core/Src/main.cpp ****         /* USER CODE END 6 */
 253:Core/Src/main.cpp **** }
 298              		.loc 1 253 0
 299 0000 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE134:
 303              		.text
 304              	.Letext0:
 305              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 306              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 307              		.file 4 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core
 308              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 309              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/ST
 310              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 311              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 312              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 313              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 314              		.file 11 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 315              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 11


 316              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 317              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 318              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 319              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 320              		.file 17 "Core/Inc/periphs/tim.h"
 321              		.file 18 "Core/Inc/periphs/usart.h"
 322              		.file 19 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Dri
 323              		.file 20 "Core/Inc/periphs/gpio.h"
 324              		.file 21 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/F
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:18     .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:25     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:131    .text._Z18SystemClock_Configv:0000008c $d
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:137    .text.main:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:144    .text.main:00000000 main
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:198    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:205    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:236    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:241    .text.Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:248    .text.Error_Handler:00000000 Error_Handler
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:261    .text._Z14_Error_HandlerPKcj:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:268    .text._Z14_Error_HandlerPKcj:00000000 _Z14_Error_HandlerPKcj
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:283    .text.assert_failed:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEfVlxY.s:290    .text.assert_failed:00000000 assert_failed

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_TIM4_Init
MX_TIM8_Init
MX_USART3_UART_Init
MX_TIM5_Init
MX_TIM3_Init
MX_TIM2_Init
MX_FREERTOS_Init
osKernelStart
HAL_IncTick
