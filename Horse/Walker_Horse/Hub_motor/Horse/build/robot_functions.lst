ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot_functions.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB508:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE508:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB514:
  50              		.file 2 "Core/Src/robot/robot_functions.cpp"
   1:Core/Src/robot/robot_functions.cpp **** 
   2:Core/Src/robot/robot_functions.cpp **** 
   3:Core/Src/robot/robot_functions.cpp **** #include "robot_functions.h"
   4:Core/Src/robot/robot_functions.cpp **** 
   5:Core/Src/robot/robot_functions.cpp **** extern leg leg[2];
   6:Core/Src/robot/robot_functions.cpp **** extern steering steering;
   7:Core/Src/robot/robot_functions.cpp **** extern bool USE_IMU_FLAG;
   8:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
   9:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
  10:Core/Src/robot/robot_functions.cpp **** 
  11:Core/Src/robot/robot_functions.cpp **** static const float robot_speed = 4;    //17 is the maximum with safe zone
  12:Core/Src/robot/robot_functions.cpp **** static const float steering_speed = 0.8; // 0.875 is the 100%
  13:Core/Src/robot/robot_functions.cpp **** static const float steering_angle_limit = 6 * PI / 180;
  14:Core/Src/robot/robot_functions.cpp **** 
  15:Core/Src/robot/robot_functions.cpp **** extern int steps[7];
  16:Core/Src/robot/robot_functions.cpp **** extern float angles[7];
  17:Core/Src/robot/robot_functions.cpp **** float summation_angle = 0;
  18:Core/Src/robot/robot_functions.cpp **** uint32_t start_time;
  19:Core/Src/robot/robot_functions.cpp **** 
  20:Core/Src/robot/robot_functions.cpp **** bool STEERING_FLAG = false;
  21:Core/Src/robot/robot_functions.cpp **** 
  22:Core/Src/robot/robot_functions.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  23:Core/Src/robot/robot_functions.cpp **** float tolerance = 3 * PI / 180;
  24:Core/Src/robot/robot_functions.cpp **** 
  25:Core/Src/robot/robot_functions.cpp **** /*
  26:Core/Src/robot/robot_functions.cpp ****  * \brief This function makes the robot to reach the provided steps and angle.
  27:Core/Src/robot/robot_functions.cpp ****  * \brief this function needs to be called every 10 ms unti it reaches the desired position.
  28:Core/Src/robot/robot_functions.cpp ****  * \params: number of steps and angle in degree the robot has to reach.
  29:Core/Src/robot/robot_functions.cpp ****  * \returns true if robot reaches to the provided steps and angle.
  30:Core/Src/robot/robot_functions.cpp ****  * The angles that are caalibrated in degrees needs to be converted to radian.
  31:Core/Src/robot/robot_functions.cpp ****  * The function move_leg() is called at the beginning which moves the leg upto the desired point.
  32:Core/Src/robot/robot_functions.cpp ****  * There are two parameters inside this function move_leg(), the steps parameter is used whereas th
  33:Core/Src/robot/robot_functions.cpp ****  * The condition is if statement is to ensure that the robot is not in sand dune and it has not rea
  34:Core/Src/robot/robot_functions.cpp ****  * Whenever the robot reaches the sand dune the number of steps is declared to 100, so the step != 
  35:Core/Src/robot/robot_functions.cpp ****  * The function calculate_robot_angle() calculates its relative position from the initial state and
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 3


  36:Core/Src/robot/robot_functions.cpp ****  * This function operates until the desired steps and desired angles is reached. This is ensured by
  37:Core/Src/robot/robot_functions.cpp ****  * After the desired step and angle is reached, the function returns True.
  38:Core/Src/robot/robot_functions.cpp **** */
  39:Core/Src/robot/robot_functions.cpp **** bool go(int step, float angle)
  40:Core/Src/robot/robot_functions.cpp **** {
  41:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
  42:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
  43:Core/Src/robot/robot_functions.cpp **** 	move_steering(step, angle);
  44:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
  45:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
  46:Core/Src/robot/robot_functions.cpp **** 	}
  47:Core/Src/robot/robot_functions.cpp **** 	else{
  48:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = true;
  49:Core/Src/robot/robot_functions.cpp **** 	}
  50:Core/Src/robot/robot_functions.cpp **** 	// printf(" \nsteps = %d\t robot_angle = %d\t curr_angle = %d\t", (int)(leg[0].get_steps()), (int)
  51:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
  52:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
  53:Core/Src/robot/robot_functions.cpp **** 
  54:Core/Src/robot/robot_functions.cpp **** 	// if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
  55:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps()   >= step )
  56:Core/Src/robot/robot_functions.cpp **** 	{
  57:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
  58:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
  59:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
  60:Core/Src/robot/robot_functions.cpp **** 		return true;
  61:Core/Src/robot/robot_functions.cpp **** 	}
  62:Core/Src/robot/robot_functions.cpp **** 	else
  63:Core/Src/robot/robot_functions.cpp **** 	{
  64:Core/Src/robot/robot_functions.cpp **** 		return false;
  65:Core/Src/robot/robot_functions.cpp **** 	}
  66:Core/Src/robot/robot_functions.cpp **** }
  67:Core/Src/robot/robot_functions.cpp **** /*
  68:Core/Src/robot/robot_functions.cpp ****  *The function move_leg() is the basic function to give speed to the motor.
  69:Core/Src/robot/robot_functions.cpp ****  *\return params: void
  70:Core/Src/robot/robot_functions.cpp ****  *\input parameter: steps, angle
  71:Core/Src/robot/robot_functions.cpp ****  *This function takes two input parameters: step and angle. Although the parameter angle is not use
  72:Core/Src/robot/robot_functions.cpp ****  *The variable leg_speed stores the value of speed. When the robot is in sand_dune region, the spee
  73:Core/Src/robot/robot_functions.cpp ****  *The variable del_speed stores the value of difference in speed in case where the legs are not in 
  74:Core/Src/robot/robot_functions.cpp ****  *If the legs are not in 180 degrees phase difference, some calculations need to be made in order t
  75:Core/Src/robot/robot_functions.cpp ****  *This is done by evaluating the angles every time. Whenever the returned angle is not in the desir
  76:Core/Src/robot/robot_functions.cpp ****  *difference is the two leg angles multiplied by leg_speed which is again multiplied by the factor 
  77:Core/Src/robot/robot_functions.cpp ****  *Following the above reference, the leg_speed is calculated in closed loop basis.
  78:Core/Src/robot/robot_functions.cpp **** */
  79:Core/Src/robot/robot_functions.cpp **** void move_leg(int step, float angle)
  80:Core/Src/robot/robot_functions.cpp **** {
  81:Core/Src/robot/robot_functions.cpp **** 	float del_speed = 0;
  82:Core/Src/robot/robot_functions.cpp **** 	float leg_speed = robot_speed; 
  83:Core/Src/robot/robot_functions.cpp **** 
  84:Core/Src/robot/robot_functions.cpp **** 	//Setting the slow speed in sand dune and tussok
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100) ? robot_speed / 1.3 : robot_speed;
  86:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[6]){
  87:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 4;
  88:Core/Src/robot/robot_functions.cpp **** 	}
  89:Core/Src/robot/robot_functions.cpp **** 
  90:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
  91:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2*(leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
  92:Core/Src/robot/robot_functions.cpp **** 	if(fabs(del_speed) >= leg_speed){
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 4


  93:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
  94:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
  95:Core/Src/robot/robot_functions.cpp **** 	}
  96:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
  97:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
  98:Core/Src/robot/robot_functions.cpp **** 
  99:Core/Src/robot/robot_functions.cpp **** }
 100:Core/Src/robot/robot_functions.cpp **** 
 101:Core/Src/robot/robot_functions.cpp **** /*
 102:Core/Src/robot/robot_functions.cpp ****  *The function move_steering() is concerned with moving the steering to certain angle with certain 
 103:Core/Src/robot/robot_functions.cpp ****  *Return patameter: void
 104:Core/Src/robot/robot_functions.cpp ****  *Input parameters: step, angle
 105:Core/Src/robot/robot_functions.cpp ****  *During initialization, the summation_angle is set to 0. After the robot starts to move, there is 
 106:Core/Src/robot/robot_functions.cpp ****  * This error of course needs to be minimized. This minimization is done by  summing all the drifts
 107:Core/Src/robot/robot_functions.cpp ****  * that it gives to the robot. Whenever the steering sets the angle for robot, this error is also a
 108:Core/Src/robot/robot_functions.cpp ****  * The robot changes the angle whenever the outside leg is raised. For the robot and leg to be in t
 109:Core/Src/robot/robot_functions.cpp ****  * the outside leg is in fallen state.
 110:Core/Src/robot/robot_functions.cpp **** */
 111:Core/Src/robot/robot_functions.cpp **** void move_steering(int step, float angle)
 112:Core/Src/robot/robot_functions.cpp **** {
 113:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[0]){
 114:Core/Src/robot/robot_functions.cpp **** 		summation_angle +=robot_angle;
 115:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 116:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 117:Core/Src/robot/robot_functions.cpp **** 	}
 118:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 119:Core/Src/robot/robot_functions.cpp **** 	{
 120:Core/Src/robot/robot_functions.cpp **** 		// printf("  raised  ");
 121:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 122:Core/Src/robot/robot_functions.cpp **** 	}
 123:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 124:Core/Src/robot/robot_functions.cpp **** 	{
 125:Core/Src/robot/robot_functions.cpp **** 		// printf("  fallen  ");
 126:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 127:Core/Src/robot/robot_functions.cpp **** 	}
 128:Core/Src/robot/robot_functions.cpp **** 	else
 129:Core/Src/robot/robot_functions.cpp **** 	{
 130:Core/Src/robot/robot_functions.cpp **** 		// printf("  nothing  ");
 131:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 132:Core/Src/robot/robot_functions.cpp **** 	}
 133:Core/Src/robot/robot_functions.cpp **** }
 134:Core/Src/robot/robot_functions.cpp **** /*
 135:Core/Src/robot/robot_functions.cpp ****  * The function set_angle() is concerned with setting the angle for steering.
 136:Core/Src/robot/robot_functions.cpp ****  * Return params : void
 137:Core/Src/robot/robot_functions.cpp ****  * Input patams : angle
 138:Core/Src/robot/robot_functions.cpp ****  * The variable del_angle stores the differnece in given input angle and the current angle returned
 139:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns positive value, it depicts that the robot has already reached the angl
 140:Core/Src/robot/robot_functions.cpp ****  * TO correct this to the desired angle the angle needs to be set.
 141:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns a negative value, it depicts that the robot has not reached the desire
 142:Core/Src/robot/robot_functions.cpp **** */
 143:Core/Src/robot/robot_functions.cpp **** void set_angle(float angle)
 144:Core/Src/robot/robot_functions.cpp **** {
 145:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 146:Core/Src/robot/robot_functions.cpp **** 	// printf("\tdel_angle = %d\t", (int)(del_angle));
 147:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 148:Core/Src/robot/robot_functions.cpp **** 	{
 149:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 5


 150:Core/Src/robot/robot_functions.cpp **** 	}
 151:Core/Src/robot/robot_functions.cpp **** 	else
 152:Core/Src/robot/robot_functions.cpp **** 	{
 153:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 154:Core/Src/robot/robot_functions.cpp **** 	}
 155:Core/Src/robot/robot_functions.cpp **** 	//*/
 156:Core/Src/robot/robot_functions.cpp **** }
 157:Core/Src/robot/robot_functions.cpp **** /*
 158:Core/Src/robot/robot_functions.cpp ****  * This function correct_steering_angle() is called whenever the outside leg is fallen and the stee
 159:Core/Src/robot/robot_functions.cpp ****  * return param: void
 160:Core/Src/robot/robot_functions.cpp ****  * input params: angle
 161:Core/Src/robot/robot_functions.cpp ****  * same as set_angle function. the difference is this function is called whenever the leg is not ra
 162:Core/Src/robot/robot_functions.cpp ****  * the leg is raised.
 163:Core/Src/robot/robot_functions.cpp **** */
 164:Core/Src/robot/robot_functions.cpp **** void correct_steering_angle(float angle)
 165:Core/Src/robot/robot_functions.cpp **** {
 166:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 167:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 168:Core/Src/robot/robot_functions.cpp **** 	{
 169:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 170:Core/Src/robot/robot_functions.cpp **** 		// printf("center_alligned\t");
 171:Core/Src/robot/robot_functions.cpp **** 	}
 172:Core/Src/robot/robot_functions.cpp **** 	else
 173:Core/Src/robot/robot_functions.cpp **** 	{
 174:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 175:Core/Src/robot/robot_functions.cpp **** 		// printf("peak_alligned\t");
 176:Core/Src/robot/robot_functions.cpp **** 	}
 177:Core/Src/robot/robot_functions.cpp **** 	//*/
 178:Core/Src/robot/robot_functions.cpp **** }
 179:Core/Src/robot/robot_functions.cpp **** /**
 180:Core/Src/robot/robot_functions.cpp ****  * This function calculate_robot_angle() calculates the relative robot angle from the initial posit
 181:Core/Src/robot/robot_functions.cpp ****  * to zero and all other angles are taken with reference to this initial angle.
 182:Core/Src/robot/robot_functions.cpp ****  * return param : void
 183:Core/Src/robot/robot_functions.cpp ****  * /params input parameters : void
 184:Core/Src/robot/robot_functions.cpp ****  * The variable robot_angle stores the realtive value of robot angle from the original position
 185:Core/Src/robot/robot_functions.cpp ****  * The temp_robot_angle is just the temporary variable.
 186:Core/Src/robot/robot_functions.cpp **** */
 187:Core/Src/robot/robot_functions.cpp **** void calculate_robot_angle()
 188:Core/Src/robot/robot_functions.cpp **** {
 189:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 190:Core/Src/robot/robot_functions.cpp **** 	{
 191:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 192:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 193:Core/Src/robot/robot_functions.cpp **** 	}
 194:Core/Src/robot/robot_functions.cpp **** 	else
 195:Core/Src/robot/robot_functions.cpp **** 	{
 196:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 197:Core/Src/robot/robot_functions.cpp **** 		{
 198:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 199:Core/Src/robot/robot_functions.cpp **** 		}
 200:Core/Src/robot/robot_functions.cpp **** 		else
 201:Core/Src/robot/robot_functions.cpp **** 		{
 202:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 203:Core/Src/robot/robot_functions.cpp **** 		}
 204:Core/Src/robot/robot_functions.cpp **** 	}
 205:Core/Src/robot/robot_functions.cpp **** }
 206:Core/Src/robot/robot_functions.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 6


 207:Core/Src/robot/robot_functions.cpp **** /**
 208:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the robot in erected position at the start of the game.
 209:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 210:Core/Src/robot/robot_functions.cpp ****  * \params void
 211:Core/Src/robot/robot_functions.cpp ****  * \returns void
 212:Core/Src/robot/robot_functions.cpp ****  */ 
 213:Core/Src/robot/robot_functions.cpp **** 
 214:Core/Src/robot/robot_functions.cpp **** void initialize_position(void)
 215:Core/Src/robot/robot_functions.cpp **** {
 216:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 217:Core/Src/robot/robot_functions.cpp **** 	while (true)
 218:Core/Src/robot/robot_functions.cpp **** 	{
 219:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 220:Core/Src/robot/robot_functions.cpp **** 		{
 221:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 222:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 223:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 224:Core/Src/robot/robot_functions.cpp **** 				break;
 225:Core/Src/robot/robot_functions.cpp **** 		}
 226:Core/Src/robot/robot_functions.cpp **** 	}
 227:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 228:Core/Src/robot/robot_functions.cpp **** 	{
 229:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 230:Core/Src/robot/robot_functions.cpp **** 		{
 231:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 232:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 233:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 234:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 235:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 236:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 237:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_actual_angle(90 * PI / 180);
 238:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_actual_angle(90 * PI / 180);
 239:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 240:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 241:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 242:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 243:Core/Src/robot/robot_functions.cpp **** 		}
 244:Core/Src/robot/robot_functions.cpp **** 	}
 245:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 246:Core/Src/robot/robot_functions.cpp **** 	while (true)
 247:Core/Src/robot/robot_functions.cpp **** 	{
 248:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 249:Core/Src/robot/robot_functions.cpp **** 		{
 250:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 251:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 252:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 253:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 254:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 255:Core/Src/robot/robot_functions.cpp **** 				break;
 256:Core/Src/robot/robot_functions.cpp **** 		}
 257:Core/Src/robot/robot_functions.cpp **** 	}
 258:Core/Src/robot/robot_functions.cpp **** }
 259:Core/Src/robot/robot_functions.cpp **** 
 260:Core/Src/robot/robot_functions.cpp **** /**
 261:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the leg in erected position at the start of the game.
 262:Core/Src/robot/robot_functions.cpp ****  * \params void
 263:Core/Src/robot/robot_functions.cpp ****  * \returns true if leg is erected.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 7


 264:Core/Src/robot/robot_functions.cpp ****  */ 
 265:Core/Src/robot/robot_functions.cpp **** bool initialize_leg_position(void)
 266:Core/Src/robot/robot_functions.cpp **** {
 267:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 3;
 268:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 269:Core/Src/robot/robot_functions.cpp **** 	static bool leg0_flag = false;
 270:Core/Src/robot/robot_functions.cpp **** 	static bool leg1_flag = false;
 271:Core/Src/robot/robot_functions.cpp **** 
 272:Core/Src/robot/robot_functions.cpp **** 	// printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 273:Core/Src/robot/robot_functions.cpp **** 	// , leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].ge
 274:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 275:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 276:Core/Src/robot/robot_functions.cpp **** 	{
 277:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 278:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 279:Core/Src/robot/robot_functions.cpp **** 	}
 280:Core/Src/robot/robot_functions.cpp **** 	else
 281:Core/Src/robot/robot_functions.cpp **** 	{
 282:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 283:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 284:Core/Src/robot/robot_functions.cpp **** 	}
 285:Core/Src/robot/robot_functions.cpp **** 
 286:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 287:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 288:Core/Src/robot/robot_functions.cpp **** 	{
 289:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 290:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 291:Core/Src/robot/robot_functions.cpp **** 	}
 292:Core/Src/robot/robot_functions.cpp **** 	else
 293:Core/Src/robot/robot_functions.cpp **** 	{
 294:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 295:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 296:Core/Src/robot/robot_functions.cpp **** 	}
 297:Core/Src/robot/robot_functions.cpp **** 
 298:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 299:Core/Src/robot/robot_functions.cpp **** 	{
 300:Core/Src/robot/robot_functions.cpp **** 		
 301:Core/Src/robot/robot_functions.cpp **** 		return true;
 302:Core/Src/robot/robot_functions.cpp **** 	}
 303:Core/Src/robot/robot_functions.cpp **** 	else
 304:Core/Src/robot/robot_functions.cpp **** 	{
 305:Core/Src/robot/robot_functions.cpp **** 		return false;
 306:Core/Src/robot/robot_functions.cpp **** 	}
 307:Core/Src/robot/robot_functions.cpp **** }
 308:Core/Src/robot/robot_functions.cpp ****  
 309:Core/Src/robot/robot_functions.cpp **** /**
 310:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 311:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the steering in center position at the start of the game.
 312:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 313:Core/Src/robot/robot_functions.cpp ****  * \params void
 314:Core/Src/robot/robot_functions.cpp ****  * \returns true if reached to 0 angle.
 315:Core/Src/robot/robot_functions.cpp ****  */ 
 316:Core/Src/robot/robot_functions.cpp **** bool initialize_steering_position(void)
 317:Core/Src/robot/robot_functions.cpp **** {
 318:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 319:Core/Src/robot/robot_functions.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 320:Core/Src/robot/robot_functions.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 8


 321:Core/Src/robot/robot_functions.cpp **** 	if(((HAL_GetTick()-start_time) >= 500)){
 322:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 323:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 324:Core/Src/robot/robot_functions.cpp **** 		return true;	
 325:Core/Src/robot/robot_functions.cpp **** 	}
 326:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 327:Core/Src/robot/robot_functions.cpp **** 	{
 328:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 329:Core/Src/robot/robot_functions.cpp **** 		steering.reset_angle(0);
 330:Core/Src/robot/robot_functions.cpp **** 		return true;
 331:Core/Src/robot/robot_functions.cpp **** 	}
 332:Core/Src/robot/robot_functions.cpp **** 	else
 333:Core/Src/robot/robot_functions.cpp **** 	{
 334:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 335:Core/Src/robot/robot_functions.cpp **** 		return false;
 336:Core/Src/robot/robot_functions.cpp **** 	}	
 337:Core/Src/robot/robot_functions.cpp **** }
 338:Core/Src/robot/robot_functions.cpp **** 
 339:Core/Src/robot/robot_functions.cpp **** /**
 340:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 341:Core/Src/robot/robot_functions.cpp ****  * \brief This function calculates all the datas including the motor omegas, orientation and angles
 342:Core/Src/robot/robot_functions.cpp ****  * \remarks remember to call this function only once in every 10 ms.
 343:Core/Src/robot/robot_functions.cpp ****  * \params void
 344:Core/Src/robot/robot_functions.cpp ****  * \returns void
 345:Core/Src/robot/robot_functions.cpp ****  */
 346:Core/Src/robot/robot_functions.cpp **** void calculate_datas()
 347:Core/Src/robot/robot_functions.cpp **** {
 348:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 349:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 350:Core/Src/robot/robot_functions.cpp **** 	steering.calculate_omega();
 351:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 352:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 353:Core/Src/robot/robot_functions.cpp **** 	// printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 354:Core/Src/robot/robot_functions.cpp **** 	// printf("\trobot_angle = %d\t", (int)(robot_angle*180/PI));
 355:Core/Src/robot/robot_functions.cpp **** 	HAL_ADC_Start(&hadc1);
 356:Core/Src/robot/robot_functions.cpp **** }
 357:Core/Src/robot/robot_functions.cpp **** 
 358:Core/Src/robot/robot_functions.cpp **** float motion_profile(float angle_in_degrees, float min_speed, float max_speed)
 359:Core/Src/robot/robot_functions.cpp **** {
 360:Core/Src/robot/robot_functions.cpp **** 	float damping_angle = 25;
 361:Core/Src/robot/robot_functions.cpp **** 	float speed = 0;
 362:Core/Src/robot/robot_functions.cpp **** 	min_speed = 2.5;
 363:Core/Src/robot/robot_functions.cpp **** 	if(angle_in_degrees > 180)
 364:Core/Src/robot/robot_functions.cpp **** 	{
 365:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 366:Core/Src/robot/robot_functions.cpp **** 		// max_speed = 10;
 367:Core/Src/robot/robot_functions.cpp **** 	}
 368:Core/Src/robot/robot_functions.cpp **** 	if((angle_in_degrees >= 0 ) && (angle_in_degrees <= damping_angle)){
 369:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 370:Core/Src/robot/robot_functions.cpp **** 		// printf("condition1");
 371:Core/Src/robot/robot_functions.cpp **** 	} 
 372:Core/Src/robot/robot_functions.cpp **** 
 373:Core/Src/robot/robot_functions.cpp **** 	else if((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180)){
 374:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 375:Core/Src/robot/robot_functions.cpp **** 		// printf("conditionelseif");
 376:Core/Src/robot/robot_functions.cpp **** 	} 
 377:Core/Src/robot/robot_functions.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 9


 378:Core/Src/robot/robot_functions.cpp **** 	else{
 379:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 380:Core/Src/robot/robot_functions.cpp **** 		// printf("else");
 381:Core/Src/robot/robot_functions.cpp **** 	} 
 382:Core/Src/robot/robot_functions.cpp **** 	// printf("\tSpeed = %d", (int)(speed*100));
 383:Core/Src/robot/robot_functions.cpp **** 
 384:Core/Src/robot/robot_functions.cpp **** 	return speed;
 385:Core/Src/robot/robot_functions.cpp **** }...
  51              		.loc 2 385 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 385 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 385 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB89:
  75              	.LBB90:
  76              	.LBB91:
  77              	.LBB92:
  78              	.LBB93:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE93:
  86              	.LBE92:
  87              	.LBB94:
  88              	.LBB95:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE95:
  93              	.LBE94:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 10


  94              	.LBB96:
  95              	.LBB97:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE97:
 100              	.LBE96:
 101              	.LBE91:
 102              	.LBE90:
 103              	.LBE89:
   8:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
 104              		.loc 2 8 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB98:
 113              	.LBB99:
 114              	.LBB100:
 115              	.LBB101:
 116              	.LBB102:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE102:
 122              	.LBE101:
 123              	.LBB103:
 124              	.LBB104:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE104:
 129              	.LBE103:
 130              	.LBB105:
 131              	.LBB106:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE106:
 136              	.LBE105:
 137              	.LBE100:
 138              	.LBE99:
 139              	.LBE98:
   9:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
 140              		.loc 2 9 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 385 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 11


 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE514:
 157              		.global	__aeabi_f2d
 158              		.global	__aeabi_ddiv
 159              		.global	__aeabi_d2f
 160              		.global	__aeabi_dcmpgt
 161              		.global	__aeabi_dcmplt
 162              		.section	.text._Z9set_anglef,"ax",%progbits
 163              		.align	1
 164              		.global	_Z9set_anglef
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	_Z9set_anglef:
 171              	.LFB495:
 144:Core/Src/robot/robot_functions.cpp **** {
 172              		.loc 2 144 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL13:
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 182 0002 2DED028B 		vpush.64	{d8}
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 80, -16
 186              		.cfi_offset 81, -12
 145:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 187              		.loc 2 145 0
 188 0006 264B     		ldr	r3, .L25+24
 189 0008 D3ED007A 		vldr.32	s15, [r3]
 190 000c 30EE670A 		vsub.f32	s0, s0, s15
 191              	.LVL14:
 192 0010 DFED247A 		vldr.32	s15, .L25+28
 193 0014 60EE277A 		vmul.f32	s15, s0, s15
 194 0018 17EE900A 		vmov	r0, s15
 195 001c FFF7FEFF 		bl	__aeabi_f2d
 196              	.LVL15:
 197 0020 19A3     		adr	r3, .L25
 198 0022 D3E90023 		ldrd	r2, [r3]
 199 0026 FFF7FEFF 		bl	__aeabi_ddiv
 200              	.LVL16:
 201 002a FFF7FEFF 		bl	__aeabi_d2f
 202              	.LVL17:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 12


 203 002e 08EE100A 		vmov	s16, r0
 204              	.LVL18:
 147:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 205              		.loc 2 147 0
 206 0032 B5EEC08A 		vcmpe.f32	s16, #0
 207 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 208 003a 12DB     		blt	.L22
 149:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 209              		.loc 2 149 0
 210 003c FFF7FEFF 		bl	__aeabi_f2d
 211              	.LVL19:
 212 0040 13A3     		adr	r3, .L25+8
 213 0042 D3E90023 		ldrd	r2, [r3]
 214 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 215              	.LVL20:
 216 004a 38B9     		cbnz	r0, .L24
 217              	.LVL21:
 218              	.L14:
 149:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 219              		.loc 2 149 0 is_stmt 0 discriminator 4
 220 004c B0EE480A 		vmov.f32	s0, s16
 221 0050 1548     		ldr	r0, .L25+32
 222 0052 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 223              	.LVL22:
 224              	.L11:
 156:Core/Src/robot/robot_functions.cpp **** }
 225              		.loc 2 156 0 is_stmt 1
 226 0056 BDEC028B 		vldm	sp!, {d8}
 227              	.LCFI3:
 228              		.cfi_remember_state
 229              		.cfi_restore 80
 230              		.cfi_restore 81
 231              		.cfi_def_cfa_offset 8
 232 005a 08BD     		pop	{r3, pc}
 233              	.LVL23:
 234              	.L24:
 235              	.LCFI4:
 236              		.cfi_restore_state
 149:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 237              		.loc 2 149 0
 238 005c B1EE088A 		vmov.f32	s16, #6.0e+0
 239              	.LVL24:
 240 0060 F4E7     		b	.L14
 241              	.LVL25:
 242              	.L22:
 153:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 243              		.loc 2 153 0
 244 0062 FFF7FEFF 		bl	__aeabi_f2d
 245              	.LVL26:
 246 0066 0CA3     		adr	r3, .L25+16
 247 0068 D3E90023 		ldrd	r2, [r3]
 248 006c FFF7FEFF 		bl	__aeabi_dcmplt
 249              	.LVL27:
 250 0070 08B1     		cbz	r0, .L17
 251 0072 B9EE088A 		vmov.f32	s16, #-6.0e+0
 252              	.LVL28:
 253              	.L17:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 13


 153:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 254              		.loc 2 153 0 is_stmt 0 discriminator 4
 255 0076 B0EE480A 		vmov.f32	s0, s16
 256 007a 0B48     		ldr	r0, .L25+32
 257 007c FFF7FEFF 		bl	_ZN8steering9set_angleEf
 258              	.LVL29:
 156:Core/Src/robot/robot_functions.cpp **** }
 259              		.loc 2 156 0 is_stmt 1 discriminator 4
 260 0080 E9E7     		b	.L11
 261              	.L26:
 262 0082 00BFAFF3 		.align	3
 262      0080
 263              	.L25:
 264 0088 182D4454 		.word	1413754136
 265 008c FB210940 		.word	1074340347
 266 0090 8DD80401 		.word	17094797
 267 0094 00001840 		.word	1075314688
 268 0098 8DD80401 		.word	17094797
 269 009c 000018C0 		.word	-1072168960
 270 00a0 00000000 		.word	.LANCHOR2
 271 00a4 00003443 		.word	1127481344
 272 00a8 00000000 		.word	steering
 273              		.cfi_endproc
 274              	.LFE495:
 276              		.global	__aeabi_dcmple
 277              		.section	.text._Z22correct_steering_anglef,"ax",%progbits
 278              		.align	1
 279              		.global	_Z22correct_steering_anglef
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	_Z22correct_steering_anglef:
 286              	.LFB496:
 165:Core/Src/robot/robot_functions.cpp **** {
 287              		.loc 2 165 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL30:
 292 0000 08B5     		push	{r3, lr}
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 297 0002 2DED028B 		vpush.64	{d8}
 298              	.LCFI6:
 299              		.cfi_def_cfa_offset 16
 300              		.cfi_offset 80, -16
 301              		.cfi_offset 81, -12
 166:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 302              		.loc 2 166 0
 303 0006 204B     		ldr	r3, .L40+16
 304 0008 D3ED007A 		vldr.32	s15, [r3]
 305 000c 30EE670A 		vsub.f32	s0, s0, s15
 306              	.LVL31:
 307 0010 DFED1E7A 		vldr.32	s15, .L40+20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 14


 308 0014 60EE277A 		vmul.f32	s15, s0, s15
 309 0018 17EE900A 		vmov	r0, s15
 310 001c FFF7FEFF 		bl	__aeabi_f2d
 311              	.LVL32:
 312 0020 15A3     		adr	r3, .L40
 313 0022 D3E90023 		ldrd	r2, [r3]
 314 0026 FFF7FEFF 		bl	__aeabi_ddiv
 315              	.LVL33:
 316 002a FFF7FEFF 		bl	__aeabi_d2f
 317              	.LVL34:
 318 002e 08EE100A 		vmov	s16, r0
 319              	.LVL35:
 167:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 320              		.loc 2 167 0
 321 0032 F0EEC87A 		vabs.f32	s15, s16
 322 0036 17EE900A 		vmov	r0, s15
 323              	.LVL36:
 324 003a FFF7FEFF 		bl	__aeabi_f2d
 325              	.LVL37:
 326 003e 10A3     		adr	r3, .L40+8
 327 0040 D3E90023 		ldrd	r2, [r3]
 328 0044 FFF7FEFF 		bl	__aeabi_dcmple
 329              	.LVL38:
 330 0048 60B9     		cbnz	r0, .L39
 174:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 331              		.loc 2 174 0
 332 004a B5EEC08A 		vcmpe.f32	s16, #0
 333 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 334 0052 0DDD     		ble	.L37
 335 0054 B9EE080A 		vmov.f32	s0, #-6.0e+0
 336              	.L31:
 174:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 337              		.loc 2 174 0 is_stmt 0 discriminator 4
 338 0058 0D48     		ldr	r0, .L40+24
 339 005a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 340              	.LVL39:
 341              	.L27:
 178:Core/Src/robot/robot_functions.cpp **** }
 342              		.loc 2 178 0 is_stmt 1
 343 005e BDEC028B 		vldm	sp!, {d8}
 344              	.LCFI7:
 345              		.cfi_remember_state
 346              		.cfi_restore 80
 347              		.cfi_restore 81
 348              		.cfi_def_cfa_offset 8
 349              	.LVL40:
 350 0062 08BD     		pop	{r3, pc}
 351              	.LVL41:
 352              	.L39:
 353              	.LCFI8:
 354              		.cfi_restore_state
 169:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 355              		.loc 2 169 0
 356 0064 9FED0B0A 		vldr.32	s0, .L40+28
 357 0068 0948     		ldr	r0, .L40+24
 358 006a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 359              	.LVL42:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 15


 360 006e F6E7     		b	.L27
 361              	.L37:
 174:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 362              		.loc 2 174 0
 363 0070 B1EE080A 		vmov.f32	s0, #6.0e+0
 364 0074 F0E7     		b	.L31
 365              	.L41:
 366 0076 00BF     		.align	3
 367              	.L40:
 368 0078 182D4454 		.word	1413754136
 369 007c FB210940 		.word	1074340347
 370 0080 8DD80401 		.word	17094797
 371 0084 00001840 		.word	1075314688
 372 0088 00000000 		.word	.LANCHOR2
 373 008c 00003443 		.word	1127481344
 374 0090 00000000 		.word	steering
 375 0094 00000000 		.word	0
 376              		.cfi_endproc
 377              	.LFE496:
 379              		.section	.text._Z13move_steeringif,"ax",%progbits
 380              		.align	1
 381              		.global	_Z13move_steeringif
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	_Z13move_steeringif:
 388              	.LFB494:
 112:Core/Src/robot/robot_functions.cpp **** {
 389              		.loc 2 112 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL43:
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI9:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 399 0002 2DED028B 		vpush.64	{d8}
 400              	.LCFI10:
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 80, -16
 403              		.cfi_offset 81, -12
 404 0006 B0EE408A 		vmov.f32	s16, s0
 113:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[0]){
 405              		.loc 2 113 0
 406 000a 184B     		ldr	r3, .L51
 407 000c 1B68     		ldr	r3, [r3]
 408 000e 8342     		cmp	r3, r0
 409 0010 0ED0     		beq	.L48
 410              	.LVL44:
 411              	.L43:
 118:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 412              		.loc 2 118 0
 413 0012 1748     		ldr	r0, .L51+4
 414              	.LVL45:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 16


 415 0014 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 416              	.LVL46:
 417 0018 D8B1     		cbz	r0, .L49
 123:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 418              		.loc 2 123 0
 419 001a 1548     		ldr	r0, .L51+4
 420 001c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 421              	.LVL47:
 422 0020 0128     		cmp	r0, #1
 423 0022 1DD0     		beq	.L50
 131:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 424              		.loc 2 131 0
 425 0024 9FED130A 		vldr.32	s0, .L51+8
 426 0028 1348     		ldr	r0, .L51+12
 427 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 428              	.LVL48:
 133:Core/Src/robot/robot_functions.cpp **** }
 429              		.loc 2 133 0
 430 002e 14E0     		b	.L42
 431              	.LVL49:
 432              	.L48:
 114:Core/Src/robot/robot_functions.cpp **** 		summation_angle +=robot_angle;
 433              		.loc 2 114 0
 434 0030 124B     		ldr	r3, .L51+16
 435 0032 D3ED007A 		vldr.32	s15, [r3]
 436 0036 124A     		ldr	r2, .L51+20
 437 0038 92ED007A 		vldr.32	s14, [r2]
 438 003c 77EE877A 		vadd.f32	s15, s15, s14
 439 0040 C3ED007A 		vstr.32	s15, [r3]
 115:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 440              		.loc 2 115 0
 441 0044 F1EE677A 		vneg.f32	s15, s15
 442              	.LVL50:
 116:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 443              		.loc 2 116 0
 444 0048 9FED0E7A 		vldr.32	s14, .L51+24
 445 004c 87EE878A 		vdiv.f32	s16, s15, s14
 446              	.LVL51:
 447 0050 DFE7     		b	.L43
 448              	.LVL52:
 449              	.L49:
 121:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 450              		.loc 2 121 0
 451 0052 B0EE480A 		vmov.f32	s0, s16
 452 0056 FFF7FEFF 		bl	_Z9set_anglef
 453              	.LVL53:
 454              	.L42:
 133:Core/Src/robot/robot_functions.cpp **** }
 455              		.loc 2 133 0
 456 005a BDEC028B 		vldm	sp!, {d8}
 457              	.LCFI11:
 458              		.cfi_remember_state
 459              		.cfi_restore 80
 460              		.cfi_restore 81
 461              		.cfi_def_cfa_offset 8
 462              	.LVL54:
 463 005e 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 17


 464              	.LVL55:
 465              	.L50:
 466              	.LCFI12:
 467              		.cfi_restore_state
 126:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 468              		.loc 2 126 0
 469 0060 B0EE480A 		vmov.f32	s0, s16
 470 0064 FFF7FEFF 		bl	_Z22correct_steering_anglef
 471              	.LVL56:
 472 0068 F7E7     		b	.L42
 473              	.L52:
 474 006a 00BF     		.align	2
 475              	.L51:
 476 006c 00000000 		.word	steps
 477 0070 00000000 		.word	leg
 478 0074 00000000 		.word	0
 479 0078 00000000 		.word	steering
 480 007c 00000000 		.word	.LANCHOR3
 481 0080 00000000 		.word	.LANCHOR2
 482 0084 0000FA43 		.word	1140457472
 483              		.cfi_endproc
 484              	.LFE494:
 486              		.global	__aeabi_dmul
 487              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 488              		.align	1
 489              		.global	_Z21calculate_robot_anglev
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv4-sp-d16
 495              	_Z21calculate_robot_anglev:
 496              	.LFB497:
 188:Core/Src/robot/robot_functions.cpp **** {
 497              		.loc 2 188 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              	.LCFI13:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 3, -8
 505              		.cfi_offset 14, -4
 506 0002 2DED028B 		vpush.64	{d8}
 507              	.LCFI14:
 508              		.cfi_def_cfa_offset 16
 509              		.cfi_offset 80, -16
 510              		.cfi_offset 81, -12
 189:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 511              		.loc 2 189 0
 512 0006 204B     		ldr	r3, .L59+8
 513 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 514 000a EBB1     		cbz	r3, .L54
 515              	.LVL57:
 516              	.LBB107:
 517              	.LBB108:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 518              		.loc 1 36 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 18


 519 000c 1F4B     		ldr	r3, .L59+12
 520 000e 93ED027A 		vldr.32	s14, [r3, #8]
 521              	.LVL58:
 522              	.LBE108:
 523              	.LBE107:
 524              	.LBB109:
 525              	.LBB110:
 526 0012 1F4B     		ldr	r3, .L59+16
 527 0014 D3ED027A 		vldr.32	s15, [r3, #8]
 528              	.LVL59:
 529              	.LBE110:
 530              	.LBE109:
 191:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 531              		.loc 2 191 0
 532 0018 77EE677A 		vsub.f32	s15, s14, s15
 533 001c 17EE900A 		vmov	r0, s15
 534 0020 FFF7FEFF 		bl	__aeabi_f2d
 535              	.LVL60:
 536 0024 16A3     		adr	r3, .L59
 537 0026 D3E90023 		ldrd	r2, [r3]
 538 002a FFF7FEFF 		bl	__aeabi_dmul
 539              	.LVL61:
 540 002e 0022     		movs	r2, #0
 541 0030 184B     		ldr	r3, .L59+20
 542 0032 FFF7FEFF 		bl	__aeabi_ddiv
 543              	.LVL62:
 544 0036 FFF7FEFF 		bl	__aeabi_d2f
 545              	.LVL63:
 546 003a 174B     		ldr	r3, .L59+24
 547 003c 1860     		str	r0, [r3]	@ float
 192:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 548              		.loc 2 192 0
 549 003e 174B     		ldr	r3, .L59+28
 550 0040 1860     		str	r0, [r3]	@ float
 551              	.L53:
 205:Core/Src/robot/robot_functions.cpp **** }
 552              		.loc 2 205 0
 553 0042 BDEC028B 		vldm	sp!, {d8}
 554              	.LCFI15:
 555              		.cfi_remember_state
 556              		.cfi_restore 80
 557              		.cfi_restore 81
 558              		.cfi_def_cfa_offset 8
 559 0046 08BD     		pop	{r3, pc}
 560              	.L54:
 561              	.LCFI16:
 562              		.cfi_restore_state
 196:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 563              		.loc 2 196 0
 564 0048 1548     		ldr	r0, .L59+32
 565 004a FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 566              	.LVL64:
 567 004e 58B9     		cbnz	r0, .L58
 202:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 568              		.loc 2 202 0
 569 0050 114B     		ldr	r3, .L59+24
 570 0052 93ED008A 		vldr.32	s16, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 19


 571              	.LVL65:
 572              	.LBB111:
 573              	.LBB112:
 574              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 20


  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 21


 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 575              		.loc 3 112 0
 576 0056 1348     		ldr	r0, .L59+36
 577 0058 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 578              	.LVL66:
 579              	.LBE112:
 580              	.LBE111:
 202:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 581              		.loc 2 202 0
 582 005c 38EE400A 		vsub.f32	s0, s16, s0
 583 0060 0E4B     		ldr	r3, .L59+28
 584 0062 83ED000A 		vstr.32	s0, [r3]
 205:Core/Src/robot/robot_functions.cpp **** }
 585              		.loc 2 205 0
 586 0066 ECE7     		b	.L53
 587              	.L58:
 588              	.LVL67:
 589              	.LBB113:
 590              	.LBB114:
 591              		.loc 3 112 0
 592 0068 0E48     		ldr	r0, .L59+36
 593 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 594              	.LVL68:
 595              	.LBE114:
 596              	.LBE113:
 198:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 597              		.loc 2 198 0
 598 006e 0B4B     		ldr	r3, .L59+28
 599 0070 D3ED007A 		vldr.32	s15, [r3]
 600 0074 30EE270A 		vadd.f32	s0, s0, s15
 601 0078 074B     		ldr	r3, .L59+24
 602 007a 83ED000A 		vstr.32	s0, [r3]
 603 007e E0E7     		b	.L53
 604              	.L60:
 605              		.align	3
 606              	.L59:
 607 0080 182D4454 		.word	1413754136
 608 0084 FB210940 		.word	1074340347
 609 0088 00000000 		.word	USE_IMU_FLAG
 610 008c 00000000 		.word	.LANCHOR0
 611 0090 00000000 		.word	.LANCHOR1
 612 0094 00806640 		.word	1080459264
 613 0098 00000000 		.word	.LANCHOR2
 614 009c 00000000 		.word	.LANCHOR4
 615 00a0 00000000 		.word	leg
 616 00a4 0C000000 		.word	steering+12
 617              		.cfi_endproc
 618              	.LFE497:
 620              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 621              		.align	1
 622              		.global	_Z23initialize_leg_positionv
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	_Z23initialize_leg_positionv:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 22


 629              	.LFB499:
 266:Core/Src/robot/robot_functions.cpp **** {
 630              		.loc 2 266 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634 0000 08B5     		push	{r3, lr}
 635              	.LCFI17:
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 3, -8
 638              		.cfi_offset 14, -4
 639              	.LVL69:
 640              	.LBB115:
 641              	.LBB116:
 642              		.file 4 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 23


  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 643              		.loc 4 47 0
 644 0002 3748     		ldr	r0, .L79+16
 645 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 646              	.LVL70:
 647              	.LBE116:
 648              	.LBE115:
 274:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 649              		.loc 2 274 0
 650 0008 10EE100A 		vmov	r0, s0
 651 000c FFF7FEFF 		bl	__aeabi_f2d
 652              	.LVL71:
 653 0010 2FA3     		adr	r3, .L79
 654 0012 D3E90023 		ldrd	r2, [r3]
 655 0016 FFF7FEFF 		bl	__aeabi_dcmpgt
 656              	.LVL72:
 657 001a 80B1     		cbz	r0, .L62
 658              	.LVL73:
 659              	.LBB117:
 660              	.LBB118:
 661              		.loc 4 47 0
 662 001c 3048     		ldr	r0, .L79+16
 663 001e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 664              	.LVL74:
 665              	.LBE118:
 666              	.LBE117:
 275:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 667              		.loc 2 275 0
 668 0022 10EE100A 		vmov	r0, s0
 669 0026 FFF7FEFF 		bl	__aeabi_f2d
 670              	.LVL75:
 274:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 671              		.loc 2 274 0
 672 002a 2BA3     		adr	r3, .L79+8
 673 002c D3E90023 		ldrd	r2, [r3]
 674 0030 FFF7FEFF 		bl	__aeabi_dcmplt
 675              	.LVL76:
 676 0034 18B1     		cbz	r0, .L62
 677              	.LVL77:
 678              	.LBB119:
 679              	.LBB120:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 680              		.loc 4 45 0
 681 0036 2B4B     		ldr	r3, .L79+20
 682 0038 1B69     		ldr	r3, [r3, #16]
 683              	.LVL78:
 684              	.LBE120:
 685              	.LBE119:
 275:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 686              		.loc 2 275 0
 687 003a 002B     		cmp	r3, #0
 688 003c 32D1     		bne	.L78
 689              	.L62:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 24


 282:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 690              		.loc 2 282 0 discriminator 3
 691 003e B0EE080A 		vmov.f32	s0, #3.0e+0
 692 0042 2848     		ldr	r0, .L79+20
 693 0044 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 694              	.LVL79:
 283:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 695              		.loc 2 283 0 discriminator 3
 696 0048 274B     		ldr	r3, .L79+24
 697 004a 0022     		movs	r2, #0
 698 004c 1A70     		strb	r2, [r3]
 699              	.L65:
 700              	.LVL80:
 701              	.LBB121:
 702              	.LBB122:
 703              		.loc 4 47 0
 704 004e 2748     		ldr	r0, .L79+28
 705 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 706              	.LVL81:
 707              	.LBE122:
 708              	.LBE121:
 286:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 709              		.loc 2 286 0
 710 0054 10EE100A 		vmov	r0, s0
 711 0058 FFF7FEFF 		bl	__aeabi_f2d
 712              	.LVL82:
 287:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 713              		.loc 2 287 0
 714 005c 1CA3     		adr	r3, .L79
 715 005e D3E90023 		ldrd	r2, [r3]
 716 0062 FFF7FEFF 		bl	__aeabi_dcmpgt
 717              	.LVL83:
 718 0066 78B1     		cbz	r0, .L66
 719              	.LVL84:
 720              	.LBB123:
 721              	.LBB124:
 722              		.loc 4 47 0
 723 0068 2048     		ldr	r0, .L79+28
 724 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 725              	.LVL85:
 726              	.LBE124:
 727              	.LBE123:
 287:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 728              		.loc 2 287 0
 729 006e 10EE100A 		vmov	r0, s0
 730 0072 FFF7FEFF 		bl	__aeabi_f2d
 731              	.LVL86:
 286:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 732              		.loc 2 286 0
 733 0076 18A3     		adr	r3, .L79+8
 734 0078 D3E90023 		ldrd	r2, [r3]
 735 007c FFF7FEFF 		bl	__aeabi_dcmplt
 736              	.LVL87:
 737 0080 10B1     		cbz	r0, .L66
 738              	.LVL88:
 739              	.LBB125:
 740              	.LBB126:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 25


  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 741              		.loc 4 45 0
 742 0082 184B     		ldr	r3, .L79+20
 743 0084 9B6E     		ldr	r3, [r3, #104]
 744              	.LVL89:
 745              	.LBE126:
 746              	.LBE125:
 287:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 747              		.loc 2 287 0
 748 0086 B3B9     		cbnz	r3, .L69
 749              	.L66:
 294:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 750              		.loc 2 294 0 discriminator 2
 751 0088 B0EE080A 		vmov.f32	s0, #3.0e+0
 752 008c 1848     		ldr	r0, .L79+32
 753 008e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 754              	.LVL90:
 295:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 755              		.loc 2 295 0 discriminator 2
 756 0092 184B     		ldr	r3, .L79+36
 757 0094 0022     		movs	r2, #0
 758 0096 1A70     		strb	r2, [r3]
 759              	.L70:
 298:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 760              		.loc 2 298 0
 761 0098 134B     		ldr	r3, .L79+24
 762 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 763 009c A3B1     		cbz	r3, .L72
 298:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 764              		.loc 2 298 0 is_stmt 0 discriminator 1
 765 009e 154B     		ldr	r3, .L79+36
 766 00a0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 767              	.L71:
 307:Core/Src/robot/robot_functions.cpp **** }
 768              		.loc 2 307 0 is_stmt 1
 769 00a2 08BD     		pop	{r3, pc}
 770              	.L78:
 277:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 771              		.loc 2 277 0
 772 00a4 9FED140A 		vldr.32	s0, .L79+40
 773 00a8 0E48     		ldr	r0, .L79+20
 774 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 775              	.LVL91:
 278:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 776              		.loc 2 278 0
 777 00ae 0E4B     		ldr	r3, .L79+24
 778 00b0 0122     		movs	r2, #1
 779 00b2 1A70     		strb	r2, [r3]
 780 00b4 CBE7     		b	.L65
 781              	.L69:
 289:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 782              		.loc 2 289 0
 783 00b6 9FED100A 		vldr.32	s0, .L79+40
 784 00ba 0D48     		ldr	r0, .L79+32
 785 00bc FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 786              	.LVL92:
 290:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 26


 787              		.loc 2 290 0
 788 00c0 0C4B     		ldr	r3, .L79+36
 789 00c2 0122     		movs	r2, #1
 790 00c4 1A70     		strb	r2, [r3]
 791 00c6 E7E7     		b	.L70
 792              	.L72:
 305:Core/Src/robot/robot_functions.cpp **** 		return false;
 793              		.loc 2 305 0
 794 00c8 0020     		movs	r0, #0
 795 00ca EAE7     		b	.L71
 796              	.L80:
 797 00cc AFF30080 		.align	3
 798              	.L79:
 799 00d0 B94DA804 		.word	78138809
 800 00d4 844BF83F 		.word	1073236868
 801 00d8 760CE0A3 		.word	-1545597834
 802 00dc 72F8F93F 		.word	1073346674
 803 00e0 3C000000 		.word	leg+60
 804 00e4 00000000 		.word	leg
 805 00e8 00000000 		.word	.LANCHOR5
 806 00ec 94000000 		.word	leg+148
 807 00f0 58000000 		.word	leg+88
 808 00f4 00000000 		.word	.LANCHOR6
 809 00f8 00000000 		.word	0
 810              		.cfi_endproc
 811              	.LFE499:
 813              		.global	__aeabi_d2iz
 814              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 815              		.align	1
 816              		.global	_Z28initialize_steering_positionv
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	_Z28initialize_steering_positionv:
 823              	.LFB500:
 317:Core/Src/robot/robot_functions.cpp **** {
 824              		.loc 2 317 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828 0000 38B5     		push	{r3, r4, r5, lr}
 829              	.LCFI18:
 830              		.cfi_def_cfa_offset 16
 831              		.cfi_offset 3, -16
 832              		.cfi_offset 4, -12
 833              		.cfi_offset 5, -8
 834              		.cfi_offset 14, -4
 835 0002 2DED028B 		vpush.64	{d8}
 836              	.LCFI19:
 837              		.cfi_def_cfa_offset 24
 838              		.cfi_offset 80, -24
 839              		.cfi_offset 81, -20
 840              	.LVL93:
 841              	.LBB127:
 842              	.LBB128:
 843              		.loc 3 112 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 27


 844 0006 2648     		ldr	r0, .L88+8
 845 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 846              	.LVL94:
 847              	.LBE128:
 848              	.LBE127:
 318:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t",(int)(steering.get_angle()*180/PI) );
 849              		.loc 2 318 0
 850 000c DFED257A 		vldr.32	s15, .L88+12
 851 0010 60EE277A 		vmul.f32	s15, s0, s15
 852 0014 17EE900A 		vmov	r0, s15
 853 0018 FFF7FEFF 		bl	__aeabi_f2d
 854              	.LVL95:
 855 001c 1EA3     		adr	r3, .L88
 856 001e D3E90023 		ldrd	r2, [r3]
 857 0022 FFF7FEFF 		bl	__aeabi_ddiv
 858              	.LVL96:
 859 0026 FFF7FEFF 		bl	__aeabi_d2iz
 860              	.LVL97:
 861 002a 0146     		mov	r1, r0
 862 002c 1E48     		ldr	r0, .L88+16
 863 002e FFF7FEFF 		bl	printf
 864              	.LVL98:
 321:Core/Src/robot/robot_functions.cpp **** 	if(((HAL_GetTick()-start_time) >= 500)){
 865              		.loc 2 321 0
 866 0032 FFF7FEFF 		bl	HAL_GetTick
 867              	.LVL99:
 868 0036 1D4B     		ldr	r3, .L88+20
 869 0038 1B68     		ldr	r3, [r3]
 870 003a C01A     		subs	r0, r0, r3
 871 003c B0F5FA7F 		cmp	r0, #500
 872 0040 0BD2     		bcs	.L86
 326:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 873              		.loc 2 326 0
 874 0042 1B4B     		ldr	r3, .L88+24
 875 0044 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 876 0046 ACB9     		cbnz	r4, .L87
 334:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 877              		.loc 2 334 0
 878 0048 B6EE000A 		vmov.f32	s0, #5.0e-1
 879 004c 1948     		ldr	r0, .L88+28
 880 004e FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 881              	.LVL100:
 882              	.L83:
 337:Core/Src/robot/robot_functions.cpp **** }
 883              		.loc 2 337 0
 884 0052 2046     		mov	r0, r4
 885 0054 BDEC028B 		vldm	sp!, {d8}
 886              	.LCFI20:
 887              		.cfi_remember_state
 888              		.cfi_restore 80
 889              		.cfi_restore 81
 890              		.cfi_def_cfa_offset 16
 891 0058 38BD     		pop	{r3, r4, r5, pc}
 892              	.L86:
 893              	.LCFI21:
 894              		.cfi_restore_state
 322:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 28


 895              		.loc 2 322 0
 896 005a 9FED170A 		vldr.32	s0, .L88+32
 897 005e 1548     		ldr	r0, .L88+28
 898 0060 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 899              	.LVL101:
 323:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 900              		.loc 2 323 0
 901 0064 0122     		movs	r2, #1
 902 0066 4FF48051 		mov	r1, #4096
 903 006a 1448     		ldr	r0, .L88+36
 904 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 905              	.LVL102:
 324:Core/Src/robot/robot_functions.cpp **** 		return true;	
 906              		.loc 2 324 0
 907 0070 0124     		movs	r4, #1
 908 0072 EEE7     		b	.L83
 909              	.L87:
 328:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 910              		.loc 2 328 0
 911 0074 9FED108A 		vldr.32	s16, .L88+32
 912 0078 0E4D     		ldr	r5, .L88+28
 913 007a B0EE480A 		vmov.f32	s0, s16
 914 007e 2846     		mov	r0, r5
 915 0080 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 916              	.LVL103:
 917              	.LBB129:
 918              	.LBB130:
  94:Core/Inc/devs/steering.h **** 
 919              		.loc 3 94 0
 920 0084 B0EE480A 		vmov.f32	s0, s16
 921 0088 05F10C00 		add	r0, r5, #12
 922 008c FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 923              	.LVL104:
 924              	.LBE130:
 925              	.LBE129:
 330:Core/Src/robot/robot_functions.cpp **** 		return true;
 926              		.loc 2 330 0
 927 0090 DFE7     		b	.L83
 928              	.L89:
 929 0092 00BFAFF3 		.align	3
 929      0080
 930              	.L88:
 931 0098 182D4454 		.word	1413754136
 932 009c FB210940 		.word	1074340347
 933 00a0 0C000000 		.word	steering+12
 934 00a4 00003443 		.word	1127481344
 935 00a8 00000000 		.word	.LC0
 936 00ac 00000000 		.word	.LANCHOR7
 937 00b0 00000000 		.word	.LANCHOR8
 938 00b4 00000000 		.word	steering
 939 00b8 00000000 		.word	0
 940 00bc 000C0240 		.word	1073875968
 941              		.cfi_endproc
 942              	.LFE500:
 944              		.section	.text._Z19initialize_positionv,"ax",%progbits
 945              		.align	1
 946              		.global	_Z19initialize_positionv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 29


 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 950              		.fpu fpv4-sp-d16
 952              	_Z19initialize_positionv:
 953              	.LFB498:
 215:Core/Src/robot/robot_functions.cpp **** {
 954              		.loc 2 215 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 959              	.LCFI22:
 960              		.cfi_def_cfa_offset 24
 961              		.cfi_offset 4, -24
 962              		.cfi_offset 5, -20
 963              		.cfi_offset 6, -16
 964              		.cfi_offset 7, -12
 965              		.cfi_offset 8, -8
 966              		.cfi_offset 14, -4
 967 0004 2DED028B 		vpush.64	{d8}
 968              	.LCFI23:
 969              		.cfi_def_cfa_offset 32
 970              		.cfi_offset 80, -32
 971              		.cfi_offset 81, -28
 216:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 972              		.loc 2 216 0
 973 0008 FFF7FEFF 		bl	HAL_GetTick
 974              	.LVL105:
 975 000c 0646     		mov	r6, r0
 976              	.LVL106:
 977              	.L91:
 219:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 978              		.loc 2 219 0
 979 000e FFF7FEFF 		bl	HAL_GetTick
 980              	.LVL107:
 981 0012 801B     		subs	r0, r0, r6
 982 0014 0928     		cmp	r0, #9
 983 0016 FAD9     		bls	.L91
 221:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 984              		.loc 2 221 0
 985 0018 FFF7FEFF 		bl	HAL_GetTick
 986              	.LVL108:
 987 001c 0646     		mov	r6, r0
 988              	.LVL109:
 222:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 989              		.loc 2 222 0
 990 001e 3A48     		ldr	r0, .L99
 991              	.LVL110:
 992 0020 FFF7FEFF 		bl	printf
 993              	.LVL111:
 223:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 994              		.loc 2 223 0
 995 0024 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 996              	.LVL112:
 997 0028 0028     		cmp	r0, #0
 998 002a F0D0     		beq	.L91
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 30


 999              	.LBB131:
 227:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1000              		.loc 2 227 0
 1001 002c 0024     		movs	r4, #0
 1002 002e 00E0     		b	.L95
 1003              	.LVL113:
 1004              	.L94:
 227:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1005              		.loc 2 227 0 is_stmt 0 discriminator 2
 1006 0030 0134     		adds	r4, r4, #1
 1007              	.LVL114:
 1008              	.L95:
 227:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1009              		.loc 2 227 0 discriminator 1
 1010 0032 364B     		ldr	r3, .L99+4
 1011 0034 9C42     		cmp	r4, r3
 1012 0036 3CDC     		bgt	.L93
 229:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1013              		.loc 2 229 0 is_stmt 1
 1014 0038 FFF7FEFF 		bl	HAL_GetTick
 1015              	.LVL115:
 1016 003c 801B     		subs	r0, r0, r6
 1017 003e 0928     		cmp	r0, #9
 1018 0040 F6D9     		bls	.L94
 231:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1019              		.loc 2 231 0
 1020 0042 FFF7FEFF 		bl	HAL_GetTick
 1021              	.LVL116:
 1022 0046 0646     		mov	r6, r0
 1023              	.LVL117:
 232:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1024              		.loc 2 232 0
 1025 0048 3148     		ldr	r0, .L99+8
 1026              	.LVL118:
 1027 004a FFF7FEFF 		bl	printf
 1028              	.LVL119:
 233:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 1029              		.loc 2 233 0
 1030 004e 314D     		ldr	r5, .L99+12
 1031 0050 0027     		movs	r7, #0
 1032 0052 2F61     		str	r7, [r5, #16]
 234:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 1033              		.loc 2 234 0
 1034 0054 AF66     		str	r7, [r5, #104]
 235:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 1035              		.loc 2 235 0
 1036 0056 9FED308A 		vldr.32	s16, .L99+16
 1037 005a B0EE480A 		vmov.f32	s0, s16
 1038 005e 2846     		mov	r0, r5
 1039 0060 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1040              	.LVL120:
 236:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 1041              		.loc 2 236 0
 1042 0064 05F15808 		add	r8, r5, #88
 1043 0068 B0EE480A 		vmov.f32	s0, s16
 1044 006c 4046     		mov	r0, r8
 1045 006e FFF7FEFF 		bl	_ZN3leg11reset_angleEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 31


 1046              	.LVL121:
 1047              	.LBB132:
 1048              	.LBB133:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1049              		.loc 4 40 0
 1050 0072 B0EE480A 		vmov.f32	s0, s16
 1051 0076 05F13C00 		add	r0, r5, #60
 1052 007a FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1053              	.LVL122:
 1054              	.LBE133:
 1055              	.LBE132:
 1056              	.LBB134:
 1057              	.LBB135:
 1058 007e B0EE480A 		vmov.f32	s0, s16
 1059 0082 05F19400 		add	r0, r5, #148
 1060 0086 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1061              	.LVL123:
 1062              	.LBE135:
 1063              	.LBE134:
 239:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1064              		.loc 2 239 0
 1065 008a 9FED248A 		vldr.32	s16, .L99+20
 1066 008e B0EE480A 		vmov.f32	s0, s16
 1067 0092 2846     		mov	r0, r5
 1068 0094 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1069              	.LVL124:
 240:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1070              		.loc 2 240 0
 1071 0098 B0EE480A 		vmov.f32	s0, s16
 1072 009c 4046     		mov	r0, r8
 1073 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1074              	.LVL125:
 241:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 1075              		.loc 2 241 0
 1076 00a2 B0EE480A 		vmov.f32	s0, s16
 1077 00a6 1E48     		ldr	r0, .L99+24
 1078 00a8 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1079              	.LVL126:
 242:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 1080              		.loc 2 242 0
 1081 00ac 1D4B     		ldr	r3, .L99+28
 1082 00ae 1F70     		strb	r7, [r3]
 1083 00b0 BEE7     		b	.L94
 1084              	.L93:
 1085              	.LBE131:
 245:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1086              		.loc 2 245 0
 1087 00b2 FFF7FEFF 		bl	HAL_GetTick
 1088              	.LVL127:
 1089 00b6 1C4B     		ldr	r3, .L99+32
 1090 00b8 1860     		str	r0, [r3]
 1091              	.LVL128:
 1092              	.L96:
 248:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1093              		.loc 2 248 0
 1094 00ba FFF7FEFF 		bl	HAL_GetTick
 1095              	.LVL129:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 32


 1096 00be 801B     		subs	r0, r0, r6
 1097 00c0 0928     		cmp	r0, #9
 1098 00c2 FAD9     		bls	.L96
 250:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1099              		.loc 2 250 0
 1100 00c4 FFF7FEFF 		bl	HAL_GetTick
 1101              	.LVL130:
 1102 00c8 0646     		mov	r6, r0
 1103              	.LVL131:
 251:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1104              		.loc 2 251 0
 1105 00ca FFF7FEFF 		bl	HAL_GetTick
 1106              	.LVL132:
 1107 00ce 164B     		ldr	r3, .L99+32
 1108 00d0 1A68     		ldr	r2, [r3]
 1109 00d2 0146     		mov	r1, r0
 1110 00d4 1548     		ldr	r0, .L99+36
 1111 00d6 FFF7FEFF 		bl	printf
 1112              	.LVL133:
 252:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1113              		.loc 2 252 0
 1114 00da 9FED108A 		vldr.32	s16, .L99+20
 1115 00de 0D4C     		ldr	r4, .L99+12
 1116 00e0 B0EE480A 		vmov.f32	s0, s16
 1117 00e4 2046     		mov	r0, r4
 1118 00e6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1119              	.LVL134:
 253:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1120              		.loc 2 253 0
 1121 00ea B0EE480A 		vmov.f32	s0, s16
 1122 00ee 04F15800 		add	r0, r4, #88
 1123 00f2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1124              	.LVL135:
 254:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1125              		.loc 2 254 0
 1126 00f6 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1127              	.LVL136:
 1128 00fa 0028     		cmp	r0, #0
 1129 00fc DDD0     		beq	.L96
 258:Core/Src/robot/robot_functions.cpp **** }
 1130              		.loc 2 258 0
 1131 00fe BDEC028B 		vldm	sp!, {d8}
 1132              	.LCFI24:
 1133              		.cfi_restore 80
 1134              		.cfi_restore 81
 1135              		.cfi_def_cfa_offset 24
 1136 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1137              	.LVL137:
 1138              	.L100:
 1139 0106 00BF     		.align	2
 1140              	.L99:
 1141 0108 00000000 		.word	.LC1
 1142 010c BFC62D00 		.word	2999999
 1143 0110 20000000 		.word	.LC2
 1144 0114 00000000 		.word	leg
 1145 0118 DB0FC93F 		.word	1070141403
 1146 011c 00000000 		.word	0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 33


 1147 0120 00000000 		.word	steering
 1148 0124 00000000 		.word	.LANCHOR8
 1149 0128 00000000 		.word	.LANCHOR7
 1150 012c 34000000 		.word	.LC3
 1151              		.cfi_endproc
 1152              	.LFE498:
 1154              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1155              		.align	1
 1156              		.global	_Z15calculate_datasv
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1160              		.fpu fpv4-sp-d16
 1162              	_Z15calculate_datasv:
 1163              	.LFB501:
 347:Core/Src/robot/robot_functions.cpp **** {
 1164              		.loc 2 347 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 16
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168 0000 10B5     		push	{r4, lr}
 1169              	.LCFI25:
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 4, -8
 1172              		.cfi_offset 14, -4
 1173 0002 84B0     		sub	sp, sp, #16
 1174              	.LCFI26:
 1175              		.cfi_def_cfa_offset 24
 348:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 1176              		.loc 2 348 0
 1177 0004 0D4C     		ldr	r4, .L103
 1178 0006 2046     		mov	r0, r4
 1179 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1180              	.LVL138:
 349:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 1181              		.loc 2 349 0
 1182 000c 04F15800 		add	r0, r4, #88
 1183 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1184              	.LVL139:
 1185              	.LBB136:
 1186              	.LBB137:
 102:Core/Inc/devs/steering.h **** 
 1187              		.loc 3 102 0
 1188 0014 0A48     		ldr	r0, .L103+4
 1189 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1190              	.LVL140:
 1191              	.LBE137:
 1192              	.LBE136:
 351:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 1193              		.loc 2 351 0
 1194 001a 01AC     		add	r4, sp, #4
 1195 001c 0A21     		movs	r1, #10
 1196 001e 2046     		mov	r0, r4
 1197 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1198              	.LVL141:
 1199 0024 074B     		ldr	r3, .L103+8
 1200 0026 94E80700 		ldm	r4, {r0, r1, r2}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 34


 1201 002a 83E80700 		stm	r3, {r0, r1, r2}
 352:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 1202              		.loc 2 352 0
 1203 002e FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1204              	.LVL142:
 355:Core/Src/robot/robot_functions.cpp **** 	HAL_ADC_Start(&hadc1);
 1205              		.loc 2 355 0
 1206 0032 0548     		ldr	r0, .L103+12
 1207 0034 FFF7FEFF 		bl	HAL_ADC_Start
 1208              	.LVL143:
 356:Core/Src/robot/robot_functions.cpp **** }
 1209              		.loc 2 356 0
 1210 0038 04B0     		add	sp, sp, #16
 1211              	.LCFI27:
 1212              		.cfi_def_cfa_offset 8
 1213              		@ sp needed
 1214 003a 10BD     		pop	{r4, pc}
 1215              	.L104:
 1216              		.align	2
 1217              	.L103:
 1218 003c 00000000 		.word	leg
 1219 0040 0C000000 		.word	steering+12
 1220 0044 00000000 		.word	.LANCHOR1
 1221 0048 00000000 		.word	hadc1
 1222              		.cfi_endproc
 1223              	.LFE501:
 1225              		.section	.text._Z14motion_profilefff,"ax",%progbits
 1226              		.align	1
 1227              		.global	_Z14motion_profilefff
 1228              		.syntax unified
 1229              		.thumb
 1230              		.thumb_func
 1231              		.fpu fpv4-sp-d16
 1233              	_Z14motion_profilefff:
 1234              	.LFB502:
 359:Core/Src/robot/robot_functions.cpp **** {
 1235              		.loc 2 359 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240              	.LVL144:
 363:Core/Src/robot/robot_functions.cpp **** 	if(angle_in_degrees > 180)
 1241              		.loc 2 363 0
 1242 0000 DFED237A 		vldr.32	s15, .L124
 1243 0004 B4EEE70A 		vcmpe.f32	s0, s15
 1244 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1245 000c 01DD     		ble	.L106
 365:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 1246              		.loc 2 365 0
 1247 000e 30EE670A 		vsub.f32	s0, s0, s15
 1248              	.LVL145:
 1249              	.L106:
 368:Core/Src/robot/robot_functions.cpp **** 	if((angle_in_degrees >= 0 ) && (angle_in_degrees <= damping_angle)){
 1250              		.loc 2 368 0
 1251 0012 B5EEC00A 		vcmpe.f32	s0, #0
 1252 0016 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 35


 1253 001a 06DB     		blt	.L108
 368:Core/Src/robot/robot_functions.cpp **** 	if((angle_in_degrees >= 0 ) && (angle_in_degrees <= damping_angle)){
 1254              		.loc 2 368 0 is_stmt 0 discriminator 1
 1255 001c F3EE097A 		vmov.f32	s15, #2.5e+1
 1256 0020 B4EEE70A 		vcmpe.f32	s0, s15
 1257 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1258 0028 1ED9     		bls	.L123
 1259              	.L108:
 373:Core/Src/robot/robot_functions.cpp **** 	else if((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180)){
 1260              		.loc 2 373 0 is_stmt 1
 1261 002a DFED1A7A 		vldr.32	s15, .L124+4
 1262 002e B4EEE70A 		vcmpe.f32	s0, s15
 1263 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1264 0036 24DB     		blt	.L121
 373:Core/Src/robot/robot_functions.cpp **** 	else if((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180)){
 1265              		.loc 2 373 0 is_stmt 0 discriminator 1
 1266 0038 DFED157A 		vldr.32	s15, .L124
 1267 003c B4EEE70A 		vcmpe.f32	s0, s15
 1268 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1269 0044 20D8     		bhi	.L122
 374:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 1270              		.loc 2 374 0 is_stmt 1
 1271 0046 F0EE047A 		vmov.f32	s15, #2.5e+0
 1272 004a 77EEC17A 		vsub.f32	s15, s15, s2
 1273 004e F3EE096A 		vmov.f32	s13, #2.5e+1
 1274 0052 87EEA67A 		vdiv.f32	s14, s15, s13
 1275 0056 DFED0F7A 		vldr.32	s15, .L124+4
 1276 005a 70EE677A 		vsub.f32	s15, s0, s15
 1277 005e 27EE270A 		vmul.f32	s0, s14, s15
 1278              	.LVL146:
 1279 0062 30EE010A 		vadd.f32	s0, s0, s2
 1280              	.LVL147:
 1281 0066 7047     		bx	lr
 1282              	.LVL148:
 1283              	.L123:
 369:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 1284              		.loc 2 369 0
 1285 0068 B0EE047A 		vmov.f32	s14, #2.5e+0
 1286 006c 71EE477A 		vsub.f32	s15, s2, s14
 1287 0070 F3EE096A 		vmov.f32	s13, #2.5e+1
 1288 0074 87EEA61A 		vdiv.f32	s2, s15, s13
 1289              	.LVL149:
 1290 0078 21EE001A 		vmul.f32	s2, s2, s0
 1291 007c 31EE070A 		vadd.f32	s0, s2, s14
 1292              	.LVL150:
 1293 0080 7047     		bx	lr
 1294              	.LVL151:
 1295              	.L121:
 379:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 1296              		.loc 2 379 0
 1297 0082 B0EE410A 		vmov.f32	s0, s2
 1298              	.LVL152:
 1299 0086 7047     		bx	lr
 1300              	.LVL153:
 1301              	.L122:
 1302 0088 B0EE410A 		vmov.f32	s0, s2
 1303              	.LVL154:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 36


 1304              		.loc 2 385 0
 1305 008c 7047     		bx	lr
 1306              	.L125:
 1307 008e 00BF     		.align	2
 1308              	.L124:
 1309 0090 00003443 		.word	1127481344
 1310 0094 00001B43 		.word	1125842944
 1311              		.cfi_endproc
 1312              	.LFE502:
 1314              		.section	.text._Z8move_legif,"ax",%progbits
 1315              		.align	1
 1316              		.global	_Z8move_legif
 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1320              		.fpu fpv4-sp-d16
 1322              	_Z8move_legif:
 1323              	.LFB493:
  80:Core/Src/robot/robot_functions.cpp **** {
 1324              		.loc 2 80 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              	.LVL155:
 1329 0000 10B5     		push	{r4, lr}
 1330              	.LCFI28:
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 4, -8
 1333              		.cfi_offset 14, -4
 1334 0002 2DED028B 		vpush.64	{d8}
 1335              	.LCFI29:
 1336              		.cfi_def_cfa_offset 16
 1337              		.cfi_offset 80, -16
 1338              		.cfi_offset 81, -12
 1339              	.LVL156:
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100) ? robot_speed / 1.3 : robot_speed;
 1340              		.loc 2 85 0
 1341 0006 6428     		cmp	r0, #100
 1342 0008 4BD0     		beq	.L135
 1343 000a B1EE008A 		vmov.f32	s16, #4.0e+0
 1344              	.L127:
 1345              	.LVL157:
  86:Core/Src/robot/robot_functions.cpp **** 	if(step == steps[6]){
 1346              		.loc 2 86 0 discriminator 4
 1347 000e 2A4B     		ldr	r3, .L137+8
 1348 0010 9B69     		ldr	r3, [r3, #24]
 1349 0012 8342     		cmp	r3, r0
 1350 0014 48D0     		beq	.L136
 1351              	.LVL158:
 1352              	.L128:
 1353              	.LBB138:
 1354              	.LBB139:
 1355              		.loc 4 47 0
 1356 0016 294C     		ldr	r4, .L137+12
 1357 0018 2046     		mov	r0, r4
 1358              	.LVL159:
 1359 001a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 37


 1360              	.LVL160:
 1361              	.LBE139:
 1362              	.LBE138:
  90:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
 1363              		.loc 2 90 0
 1364 001e DFED287A 		vldr.32	s15, .L137+16
 1365 0022 60EE277A 		vmul.f32	s15, s0, s15
 1366 0026 17EE900A 		vmov	r0, s15
 1367 002a FFF7FEFF 		bl	__aeabi_f2d
 1368              	.LVL161:
 1369 002e 20A3     		adr	r3, .L137
 1370 0030 D3E90023 		ldrd	r2, [r3]
 1371 0034 FFF7FEFF 		bl	__aeabi_ddiv
 1372              	.LVL162:
 1373 0038 FFF7FEFF 		bl	__aeabi_d2f
 1374              	.LVL163:
 1375 003c B0EE481A 		vmov.f32	s2, s16
 1376 0040 F7EE000A 		vmov.f32	s1, #1.0e+0
 1377 0044 00EE100A 		vmov	s0, r0
 1378 0048 FFF7FEFF 		bl	_Z14motion_profilefff
 1379              	.LVL164:
 1380 004c F0EE408A 		vmov.f32	s17, s0
 1381              	.LVL165:
 1382              	.LBB140:
 1383              	.LBB141:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1384              		.loc 4 48 0
 1385 0050 2046     		mov	r0, r4
 1386 0052 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1387              	.LVL166:
 1388 0056 B0EE408A 		vmov.f32	s16, s0
 1389              	.LVL167:
 1390              	.LBE141:
 1391              	.LBE140:
 1392              	.LBB142:
 1393              	.LBB143:
 1394 005a 04F15800 		add	r0, r4, #88
 1395 005e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1396              	.LVL168:
 1397              	.LBE143:
 1398              	.LBE142:
  91:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2*(leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 1399              		.loc 2 91 0
 1400 0062 38EE400A 		vsub.f32	s0, s16, s0
 1401 0066 30EE000A 		vadd.f32	s0, s0, s0
 1402 006a 20EE288A 		vmul.f32	s16, s0, s17
 1403              	.LVL169:
 1404              	.LBB144:
 1405              	.LBB145:
 1406              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 38


   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 39


  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 40


 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 41


 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 42


 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 1407              		.loc 5 242 0
 1408 006e F0EEC87A 		vabs.f32	s15, s16
 1409              	.LVL170:
 1410              	.LBE145:
 1411              	.LBE144:
  92:Core/Src/robot/robot_functions.cpp **** 	if(fabs(del_speed) >= leg_speed){
 1412              		.loc 2 92 0
 1413 0072 F4EEE78A 		vcmpe.f32	s17, s15
 1414 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1415 007a 03D8     		bhi	.L129
  93:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 1416              		.loc 2 93 0
 1417 007c 88EE277A 		vdiv.f32	s14, s16, s15
 1418              	.LVL171:
  94:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 1419              		.loc 2 94 0
 1420 0080 28EE878A 		vmul.f32	s16, s17, s14
 1421              	.LVL172:
 1422              	.L129:
  96:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 1423              		.loc 2 96 0
 1424 0084 0F4C     		ldr	r4, .L137+20
 1425 0086 38EEC80A 		vsub.f32	s0, s17, s16
 1426 008a 2046     		mov	r0, r4
 1427 008c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1428              	.LVL173:
  97:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 1429              		.loc 2 97 0
 1430 0090 38EE280A 		vadd.f32	s0, s16, s17
 1431 0094 04F15800 		add	r0, r4, #88
 1432 0098 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1433              	.LVL174:
  99:Core/Src/robot/robot_functions.cpp **** }
 1434              		.loc 2 99 0
 1435 009c BDEC028B 		vldm	sp!, {d8}
 1436              	.LCFI30:
 1437              		.cfi_remember_state
 1438              		.cfi_restore 80
 1439              		.cfi_restore 81
 1440              		.cfi_def_cfa_offset 8
 1441              	.LVL175:
 1442 00a0 10BD     		pop	{r4, pc}
 1443              	.LVL176:
 1444              	.L135:
 1445              	.LCFI31:
 1446              		.cfi_restore_state
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (step == 100) ? robot_speed / 1.3 : robot_speed;
 1447              		.loc 2 85 0
 1448 00a2 9FED098A 		vldr.32	s16, .L137+24
 1449 00a6 B2E7     		b	.L127
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 43


 1450              	.LVL177:
 1451              	.L136:
  87:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 4;
 1452              		.loc 2 87 0
 1453 00a8 B1EE008A 		vmov.f32	s16, #4.0e+0
 1454              	.LVL178:
 1455 00ac B3E7     		b	.L128
 1456              	.L138:
 1457 00ae 00BF     		.align	3
 1458              	.L137:
 1459 00b0 182D4454 		.word	1413754136
 1460 00b4 FB210940 		.word	1074340347
 1461 00b8 00000000 		.word	steps
 1462 00bc 3C000000 		.word	leg+60
 1463 00c0 00003443 		.word	1127481344
 1464 00c4 00000000 		.word	leg
 1465 00c8 4FEC4440 		.word	1078258767
 1466              		.cfi_endproc
 1467              	.LFE493:
 1469              		.section	.text._Z2goif,"ax",%progbits
 1470              		.align	1
 1471              		.global	_Z2goif
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	_Z2goif:
 1478              	.LFB492:
  40:Core/Src/robot/robot_functions.cpp **** {
 1479              		.loc 2 40 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 8
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              	.LVL179:
 1484 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1485              	.LCFI32:
 1486              		.cfi_def_cfa_offset 32
 1487              		.cfi_offset 4, -32
 1488              		.cfi_offset 5, -28
 1489              		.cfi_offset 6, -24
 1490              		.cfi_offset 7, -20
 1491              		.cfi_offset 8, -16
 1492              		.cfi_offset 9, -12
 1493              		.cfi_offset 10, -8
 1494              		.cfi_offset 14, -4
 1495 0004 2DED028B 		vpush.64	{d8}
 1496              	.LCFI33:
 1497              		.cfi_def_cfa_offset 40
 1498              		.cfi_offset 80, -40
 1499              		.cfi_offset 81, -36
 1500 0008 84B0     		sub	sp, sp, #16
 1501              	.LCFI34:
 1502              		.cfi_def_cfa_offset 56
 1503 000a 0446     		mov	r4, r0
  41:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
 1504              		.loc 2 41 0
 1505 000c 10EE100A 		vmov	r0, s0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 44


 1506              	.LVL180:
 1507 0010 FFF7FEFF 		bl	__aeabi_f2d
 1508              	.LVL181:
 1509 0014 4EA3     		adr	r3, .L146+40
 1510 0016 D3E90023 		ldrd	r2, [r3]
 1511 001a FFF7FEFF 		bl	__aeabi_dmul
 1512              	.LVL182:
 1513 001e FFF7FEFF 		bl	__aeabi_d2f
 1514              	.LVL183:
 1515 0022 08EE100A 		vmov	s16, r0
 1516              	.LVL184:
  42:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
 1517              		.loc 2 42 0
 1518 0026 00EE100A 		vmov	s0, r0
 1519 002a 2046     		mov	r0, r4
 1520              	.LVL185:
 1521 002c FFF7FEFF 		bl	_Z8move_legif
 1522              	.LVL186:
  43:Core/Src/robot/robot_functions.cpp **** 	move_steering(step, angle);
 1523              		.loc 2 43 0
 1524 0030 B0EE480A 		vmov.f32	s0, s16
 1525 0034 2046     		mov	r0, r4
 1526 0036 FFF7FEFF 		bl	_Z13move_steeringif
 1527              	.LVL187:
  44:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
 1528              		.loc 2 44 0
 1529 003a 642C     		cmp	r4, #100
 1530 003c 07D0     		beq	.L140
  44:Core/Src/robot/robot_functions.cpp **** 	if((step != 100) && (step != steps[6])){
 1531              		.loc 2 44 0 is_stmt 0 discriminator 1
 1532 003e 3C4B     		ldr	r3, .L146+8
 1533 0040 9B69     		ldr	r3, [r3, #24]
 1534 0042 A342     		cmp	r3, r4
 1535 0044 03D0     		beq	.L140
  45:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
 1536              		.loc 2 45 0 is_stmt 1
 1537 0046 3B4B     		ldr	r3, .L146+12
 1538 0048 0022     		movs	r2, #0
 1539 004a 1A70     		strb	r2, [r3]
 1540 004c 02E0     		b	.L141
 1541              	.L140:
  48:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = true;
 1542              		.loc 2 48 0
 1543 004e 394B     		ldr	r3, .L146+12
 1544 0050 0122     		movs	r2, #1
 1545 0052 1A70     		strb	r2, [r3]
 1546              	.L141:
 1547              	.LVL188:
 1548              	.LBB146:
 1549              	.LBB147:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1550              		.loc 4 45 0
 1551 0054 384D     		ldr	r5, .L146+16
 1552 0056 D5F810A0 		ldr	r10, [r5, #16]
 1553              	.LVL189:
 1554              	.LBE147:
 1555              	.LBE146:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 45


  52:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 1556              		.loc 2 52 0
 1557 005a 384B     		ldr	r3, .L146+20
 1558 005c D3ED007A 		vldr.32	s15, [r3]
 1559 0060 9FED378A 		vldr.32	s16, .L146+24
 1560              	.LVL190:
 1561 0064 67EE887A 		vmul.f32	s15, s15, s16
 1562 0068 17EE900A 		vmov	r0, s15
 1563 006c FFF7FEFF 		bl	__aeabi_f2d
 1564              	.LVL191:
 1565 0070 2DA3     		adr	r3, .L146
 1566 0072 D3E90023 		ldrd	r2, [r3]
 1567 0076 FFF7FEFF 		bl	__aeabi_ddiv
 1568              	.LVL192:
 1569 007a 0646     		mov	r6, r0
 1570 007c 0F46     		mov	r7, r1
 1571              	.LVL193:
 1572              	.LBB148:
 1573              	.LBB149:
 1574              		.loc 4 48 0
 1575 007e 05F13C00 		add	r0, r5, #60
 1576 0082 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1577              	.LVL194:
 1578              	.LBE149:
 1579              	.LBE148:
  52:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 1580              		.loc 2 52 0
 1581 0086 60EE087A 		vmul.f32	s15, s0, s16
 1582 008a 17EE900A 		vmov	r0, s15
 1583 008e FFF7FEFF 		bl	__aeabi_f2d
 1584              	.LVL195:
 1585 0092 25A3     		adr	r3, .L146
 1586 0094 D3E90023 		ldrd	r2, [r3]
 1587 0098 FFF7FEFF 		bl	__aeabi_ddiv
 1588              	.LVL196:
 1589 009c 8046     		mov	r8, r0
 1590 009e 8946     		mov	r9, r1
 1591              	.LVL197:
 1592              	.LBB150:
 1593              	.LBB151:
 1594              		.loc 4 48 0
 1595 00a0 05F19400 		add	r0, r5, #148
 1596 00a4 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1597              	.LVL198:
 1598              	.LBE151:
 1599              	.LBE150:
  52:Core/Src/robot/robot_functions.cpp **** 	 (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].get_actu
 1600              		.loc 2 52 0
 1601 00a8 60EE087A 		vmul.f32	s15, s0, s16
 1602 00ac 17EE900A 		vmov	r0, s15
 1603 00b0 FFF7FEFF 		bl	__aeabi_f2d
 1604              	.LVL199:
 1605 00b4 1CA3     		adr	r3, .L146
 1606 00b6 D3E90023 		ldrd	r2, [r3]
 1607 00ba FFF7FEFF 		bl	__aeabi_ddiv
 1608              	.LVL200:
 1609 00be CDE90201 		strd	r0, [sp, #8]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 46


  51:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
 1610              		.loc 2 51 0
 1611 00c2 4046     		mov	r0, r8
 1612 00c4 4946     		mov	r1, r9
 1613 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 1614              	.LVL201:
 1615 00ca 8046     		mov	r8, r0
 1616 00cc 3046     		mov	r0, r6
 1617 00ce 3946     		mov	r1, r7
 1618 00d0 FFF7FEFF 		bl	__aeabi_d2iz
 1619              	.LVL202:
 1620 00d4 0646     		mov	r6, r0
 1621 00d6 DDE90201 		ldrd	r0, [sp, #8]
 1622 00da FFF7FEFF 		bl	__aeabi_d2iz
 1623              	.LVL203:
 1624 00de 0090     		str	r0, [sp]
 1625 00e0 4346     		mov	r3, r8
 1626 00e2 3246     		mov	r2, r6
 1627 00e4 5146     		mov	r1, r10
 1628 00e6 1748     		ldr	r0, .L146+28
 1629 00e8 FFF7FEFF 		bl	printf
 1630              	.LVL204:
 1631              	.LBB152:
 1632              	.LBB153:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1633              		.loc 4 45 0
 1634 00ec 2B69     		ldr	r3, [r5, #16]
 1635              	.LVL205:
 1636              	.LBE153:
 1637              	.LBE152:
  55:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps()   >= step )
 1638              		.loc 2 55 0
 1639 00ee 9C42     		cmp	r4, r3
 1640 00f0 05DD     		ble	.L145
  64:Core/Src/robot/robot_functions.cpp **** 		return false;
 1641              		.loc 2 64 0
 1642 00f2 0020     		movs	r0, #0
 1643              	.L142:
  66:Core/Src/robot/robot_functions.cpp **** }
 1644              		.loc 2 66 0
 1645 00f4 04B0     		add	sp, sp, #16
 1646              	.LCFI35:
 1647              		.cfi_remember_state
 1648              		.cfi_def_cfa_offset 40
 1649              		@ sp needed
 1650 00f6 BDEC028B 		vldm	sp!, {d8}
 1651              	.LCFI36:
 1652              		.cfi_restore 80
 1653              		.cfi_restore 81
 1654              		.cfi_def_cfa_offset 32
 1655 00fa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1656              	.LVL206:
 1657              	.L145:
 1658              	.LCFI37:
 1659              		.cfi_restore_state
  57:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 1660              		.loc 2 57 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 47


 1661 00fe 9FED128A 		vldr.32	s16, .L146+32
 1662 0102 B0EE480A 		vmov.f32	s0, s16
 1663 0106 2846     		mov	r0, r5
 1664 0108 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1665              	.LVL207:
  58:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1666              		.loc 2 58 0
 1667 010c B0EE480A 		vmov.f32	s0, s16
 1668 0110 05F15800 		add	r0, r5, #88
 1669 0114 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1670              	.LVL208:
  59:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1671              		.loc 2 59 0
 1672 0118 B0EE480A 		vmov.f32	s0, s16
 1673 011c 0B48     		ldr	r0, .L146+36
 1674 011e FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1675              	.LVL209:
  60:Core/Src/robot/robot_functions.cpp **** 		return true;
 1676              		.loc 2 60 0
 1677 0122 0120     		movs	r0, #1
 1678 0124 E6E7     		b	.L142
 1679              	.L147:
 1680 0126 00BF     		.align	3
 1681              	.L146:
 1682 0128 182D4454 		.word	1413754136
 1683 012c FB210940 		.word	1074340347
 1684 0130 00000000 		.word	steps
 1685 0134 00000000 		.word	USE_IMU_FLAG
 1686 0138 00000000 		.word	leg
 1687 013c 00000000 		.word	.LANCHOR2
 1688 0140 00003443 		.word	1127481344
 1689 0144 00000000 		.word	.LC4
 1690 0148 00000000 		.word	0
 1691 014c 00000000 		.word	steering
 1692 0150 399D52A2 		.word	-1571644103
 1693 0154 46DF913F 		.word	1066524486
 1694              		.cfi_endproc
 1695              	.LFE492:
 1697              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1698              		.align	1
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1702              		.fpu fpv4-sp-d16
 1704              	_GLOBAL__sub_I_initial_angle:
 1705              	.LFB515:
 1706              		.loc 2 385 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710 0000 08B5     		push	{r3, lr}
 1711              	.LCFI38:
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 3, -8
 1714              		.cfi_offset 14, -4
 1715              		.loc 2 385 0
 1716 0002 4FF6FF71 		movw	r1, #65535
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 48


 1717 0006 0120     		movs	r0, #1
 1718 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1719              	.LVL210:
 1720 000c 08BD     		pop	{r3, pc}
 1721              		.cfi_endproc
 1722              	.LFE515:
 1724              		.section	.init_array,"aw",%init_array
 1725              		.align	2
 1726 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1727              		.global	tolerance
 1728              		.global	temp_robot_angle
 1729              		.global	robot_angle
 1730              		.global	STEERING_FLAG
 1731              		.global	start_time
 1732              		.global	summation_angle
 1733              		.global	curr_angle
 1734              		.global	initial_angle
 1735              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1736              		.set	.LANCHOR8,. + 0
 1739              	STEERING_FLAG:
 1740 0000 00       		.space	1
 1741              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1742              		.set	.LANCHOR5,. + 0
 1745              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1746 0000 00       		.space	1
 1747              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1748              		.set	.LANCHOR6,. + 0
 1751              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1752 0000 00       		.space	1
 1753              		.section	.bss.curr_angle,"aw",%nobits
 1754              		.align	2
 1755              		.set	.LANCHOR1,. + 0
 1758              	curr_angle:
 1759 0000 00000000 		.space	12
 1759      00000000 
 1759      00000000 
 1760              		.section	.bss.initial_angle,"aw",%nobits
 1761              		.align	2
 1762              		.set	.LANCHOR0,. + 0
 1765              	initial_angle:
 1766 0000 00000000 		.space	12
 1766      00000000 
 1766      00000000 
 1767              		.section	.bss.robot_angle,"aw",%nobits
 1768              		.align	2
 1769              		.set	.LANCHOR2,. + 0
 1772              	robot_angle:
 1773 0000 00000000 		.space	4
 1774              		.section	.bss.start_time,"aw",%nobits
 1775              		.align	2
 1776              		.set	.LANCHOR7,. + 0
 1779              	start_time:
 1780 0000 00000000 		.space	4
 1781              		.section	.bss.summation_angle,"aw",%nobits
 1782              		.align	2
 1783              		.set	.LANCHOR3,. + 0
 1786              	summation_angle:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 49


 1787 0000 00000000 		.space	4
 1788              		.section	.bss.temp_robot_angle,"aw",%nobits
 1789              		.align	2
 1790              		.set	.LANCHOR4,. + 0
 1793              	temp_robot_angle:
 1794 0000 00000000 		.space	4
 1795              		.section	.data.tolerance,"aw",%progbits
 1796              		.align	2
 1799              	tolerance:
 1800 0000 5077563D 		.word	1029076816
 1801              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1802              		.align	2
 1803              	.LC1:
 1804 0000 0A496E69 		.ascii	"\012Initializing_Leg_Orientation\011\000"
 1804      7469616C 
 1804      697A696E 
 1804      675F4C65 
 1804      675F4F72 
 1805 001f 00       		.space	1
 1806              	.LC2:
 1807 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1807      6974696E 
 1807      675F5468 
 1807      655F4C65 
 1807      67200900 
 1808              	.LC3:
 1809 0034 09496E69 		.ascii	"\011Initializing_Steering_Orientation\011 %d \011 %"
 1809      7469616C 
 1809      697A696E 
 1809      675F5374 
 1809      65657269 
 1810 005e 6400     		.ascii	"d\000"
 1811              		.section	.rodata._Z28initialize_steering_positionv.str1.4,"aMS",%progbits,1
 1812              		.align	2
 1813              	.LC0:
 1814 0000 0A616E67 		.ascii	"\012angle = %d\011\000"
 1814      6C65203D 
 1814      20256409 
 1814      00
 1815              		.section	.rodata._Z2goif.str1.4,"aMS",%progbits,1
 1816              		.align	2
 1817              	.LC4:
 1818 0000 20737465 		.ascii	" steps = %d\011 robot_angle = %d\011 leg_1_angle = "
 1818      7073203D 
 1818      20256409 
 1818      20726F62 
 1818      6F745F61 
 1819 002d 25640920 		.ascii	"%d\011 leg_2_angle = %d\012\000"
 1819      6C65675F 
 1819      325F616E 
 1819      676C6520 
 1819      3D202564 
 1820              		.text
 1821              	.Letext0:
 1822              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1823              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1824              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 50


 1825              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1826              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1827              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1828              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1829              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1830              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1831              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1832              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1833              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1834              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1835              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1836              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1837              		.file 21 "Core/Inc/periphs/tim.h"
 1838              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1839              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1840              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1841              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1842              		.file 26 "Core/Inc/devs/motor.h"
 1843              		.file 27 "Core/Inc/devs/encoder.h"
 1844              		.file 28 "Core/Inc/utils/pid_algorithms.h"
 1845              		.file 29 "Core/Inc/devs/limit_switch.h"
 1846              		.file 30 "Core/Inc/periphs/usart.h"
 1847              		.file 31 "Core/Inc/periphs/adc.h"
 1848              		.file 32 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1849              		.file 33 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1850              		.file 34 "<built-in>"
 1851              		.file 35 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 robot_functions.cpp
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:163    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:170    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:264    .text._Z9set_anglef:00000088 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:278    .text._Z22correct_steering_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:285    .text._Z22correct_steering_anglef:00000000 _Z22correct_steering_anglef
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:368    .text._Z22correct_steering_anglef:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:380    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:387    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:476    .text._Z13move_steeringif:0000006c $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:488    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:495    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:607    .text._Z21calculate_robot_anglev:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:621    .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:628    .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:799    .text._Z23initialize_leg_positionv:000000d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:815    .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:822    .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:931    .text._Z28initialize_steering_positionv:00000098 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:945    .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:952    .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1141   .text._Z19initialize_positionv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1155   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1162   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1218   .text._Z15calculate_datasv:0000003c $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1226   .text._Z14motion_profilefff:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1233   .text._Z14motion_profilefff:00000000 _Z14motion_profilefff
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1309   .text._Z14motion_profilefff:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1315   .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1322   .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1459   .text._Z8move_legif:000000b0 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1470   .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1477   .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1682   .text._Z2goif:00000128 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1698   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1704   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1725   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1799   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1793   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1772   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1739   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1779   .bss.start_time:00000000 start_time
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1786   .bss.summation_angle:00000000 summation_angle
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1758   .bss.curr_angle:00000000 curr_angle
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1765   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1740   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1745   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1746   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1751   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1752   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s 			page 52


C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1754   .bss.curr_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1761   .bss.initial_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1768   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1775   .bss.start_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1782   .bss.summation_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1789   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1796   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1802   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1812   .rodata._Z28initialize_steering_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccx5IVYg.s:1816   .rodata._Z2goif.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN8steering9set_angleEf
steering
__aeabi_dcmple
_ZN3leg9is_raisedEv
_ZN8steering9set_omegaEf
steps
leg
__aeabi_dmul
_ZN3leg26is_raised_without_deadzoneEv
_ZN7encoder9get_angleEv
USE_IMU_FLAG
_ZN3leg9set_omegaEf
__aeabi_d2iz
printf
HAL_GetTick
HAL_GPIO_WritePin
_ZN7encoder11reset_angleEf
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
HAL_ADC_Start
hadc1
_ZN7encoder16get_actual_angleEv
