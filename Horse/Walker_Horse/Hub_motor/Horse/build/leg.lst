ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"leg.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN3leg9set_omegaEf,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN3leg9set_omegaEf
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN3leg9set_omegaEf:
  26              	.LFB451:
  27              		.file 1 "Core/Src/devs/leg.cpp"
   1:Core/Src/devs/leg.cpp **** #include "leg.h"
   2:Core/Src/devs/leg.cpp **** static float ramped_value = 0;
   3:Core/Src/devs/leg.cpp **** float computed;
   4:Core/Src/devs/leg.cpp **** 
   5:Core/Src/devs/leg.cpp **** void leg::set_omega(float omega){
  28              		.loc 1 5 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 2DED028B 		vpush.64	{d8}
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 24
  43              		.cfi_offset 80, -24
  44              		.cfi_offset 81, -20
  45 0006 0546     		mov	r5, r0
  46              	.LVL1:
  47              	.LBB62:
  48              	.LBB63:
  49              		.file 2 "Core/Inc/devs/motor.h"
   1:Core/Inc/devs/motor.h **** #ifndef _MOTOR_H_
   2:Core/Inc/devs/motor.h **** #define _MOTOR_H_
   3:Core/Inc/devs/motor.h **** 
   4:Core/Inc/devs/motor.h **** #include "stm32f4xx_hal.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 2


   5:Core/Inc/devs/motor.h **** #include "tim.h"
   6:Core/Inc/devs/motor.h **** #include <math.h>
   7:Core/Inc/devs/motor.h **** 
   8:Core/Inc/devs/motor.h **** enum Direction{
   9:Core/Inc/devs/motor.h **** 	CLOCKWISE,
  10:Core/Inc/devs/motor.h **** 	ANTICLOCKWISE,
  11:Core/Inc/devs/motor.h **** 	STOP
  12:Core/Inc/devs/motor.h **** };
  13:Core/Inc/devs/motor.h **** 
  14:Core/Inc/devs/motor.h **** struct motor_config{
  15:Core/Inc/devs/motor.h **** 	float max_omega;
  16:Core/Inc/devs/motor.h **** 	float tolerance;
  17:Core/Inc/devs/motor.h **** 
  18:Core/Inc/devs/motor.h **** 	GPIO_TypeDef *in1_port;	
  19:Core/Inc/devs/motor.h ****         uint16_t in1_pin;
  20:Core/Inc/devs/motor.h ****         GPIO_TypeDef *in2_port;
  21:Core/Inc/devs/motor.h ****         uint16_t in2_pin;
  22:Core/Inc/devs/motor.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  23:Core/Inc/devs/motor.h ****         uint32_t channel;               // PWM Channel
  24:Core/Inc/devs/motor.h **** };
  25:Core/Inc/devs/motor.h **** 
  26:Core/Inc/devs/motor.h **** class motor
  27:Core/Inc/devs/motor.h **** {
  28:Core/Inc/devs/motor.h **** public:
  29:Core/Inc/devs/motor.h **** 	motor(){motor_ = 0;}
  30:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
  31:Core/Inc/devs/motor.h **** 	motor(motor &&) = default;
  32:Core/Inc/devs/motor.h **** 	motor(const motor &) = default;
  33:Core/Inc/devs/motor.h **** 	motor &operator=(motor &&) = default;
  34:Core/Inc/devs/motor.h **** 	motor &operator=(const motor &) = default;
  35:Core/Inc/devs/motor.h **** 	~motor(){}
  36:Core/Inc/devs/motor.h ****         void set_config(motor_config *motor) { motor_ = motor;}
  37:Core/Inc/devs/motor.h **** 	float get_max_omega(){return motor_->max_omega;}
  50              		.loc 2 37 0
  51 0008 836B     		ldr	r3, [r0, #56]
  52 000a 93ED008A 		vldr.32	s16, [r3]
  53              	.LVL2:
  54              	.LBE63:
  55              	.LBE62:
   6:Core/Src/devs/leg.cpp **** 
   7:Core/Src/devs/leg.cpp **** 	if (omega>motor__.get_max_omega())
  56              		.loc 1 7 0
  57 000e B4EEC80A 		vcmpe.f32	s0, s16
  58 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  59 0016 06DC     		bgt	.L2
   8:Core/Src/devs/leg.cpp **** 	{
   9:Core/Src/devs/leg.cpp **** 		omega = motor__.get_max_omega();
  10:Core/Src/devs/leg.cpp **** 	}
  11:Core/Src/devs/leg.cpp **** 	else if(omega < -motor__.get_max_omega())
  60              		.loc 1 11 0
  61 0018 B1EE488A 		vneg.f32	s16, s16
  62 001c B4EEC08A 		vcmpe.f32	s16, s0
  63 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  64 0024 40DD     		ble	.L11
  65              	.L2:
  66              	.LVL3:
  12:Core/Src/devs/leg.cpp **** 	{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 3


  13:Core/Src/devs/leg.cpp **** 		omega = -motor__.get_max_omega();
  14:Core/Src/devs/leg.cpp **** 	}
  15:Core/Src/devs/leg.cpp **** 
  16:Core/Src/devs/leg.cpp **** 	float computed_omega = dpid_.compute(omega - encoder__.get_omega(), SAMPLE_TIME);
  67              		.loc 1 16 0
  68 0026 05F11404 		add	r4, r5, #20
  69 002a 05F13C00 		add	r0, r5, #60
  70              	.LVL4:
  71 002e FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
  72              	.LVL5:
  73 0032 38EE400A 		vsub.f32	s0, s16, s0
  74              	.LVL6:
  75              	.LBB64:
  76              	.LBB65:
  77              	.LBB66:
  78              	.LBB67:
  79              		.file 3 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
  80              		.loc 3 20 0
  81 0036 94ED016A 		vldr.32	s12, [r4, #4]
  82              	.LVL7:
  83              	.LBE67:
  84              	.LBE66:
  85              	.LBB68:
  86              	.LBB69:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  87              		.loc 3 21 0
  88 003a 94ED027A 		vldr.32	s14, [r4, #8]
  89              	.LVL8:
  90              	.LBE69:
  91              	.LBE68:
  92              	.LBB70:
  93              	.LBB71:
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  94              		.loc 3 22 0
  95 003e D4ED037A 		vldr.32	s15, [r4, #12]
  96              	.LVL9:
  97              	.LBE71:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 4


  98              	.LBE70:
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  78:Core/Inc/utils/pid_algorithms.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 5


  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
  99              		.loc 3 81 0
 100 0042 DFED245A 		vldr.32	s11, .L13
 101 0046 C7EEA56A 		vdiv.f32	s13, s15, s11
 102              	.LVL10:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
 103              		.loc 3 83 0
 104 004a 76EE267A 		vadd.f32	s15, s12, s13
 105              	.LVL11:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
 106              		.loc 3 84 0
 107 004e 27EE257A 		vmul.f32	s14, s14, s11
 108 0052 37EE467A 		vsub.f32	s14, s14, s12
 109 0056 36EEA66A 		vadd.f32	s12, s13, s13
 110 005a 37EE467A 		vsub.f32	s14, s14, s12
 111              	.LVL12:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
 112              		.loc 3 87 0
 113 005e 60EE277A 		vmul.f32	s15, s0, s15
 114              	.LVL13:
 115 0062 94ED076A 		vldr.32	s12, [r4, #28]
 116 0066 27EE067A 		vmul.f32	s14, s14, s12
 117              	.LVL14:
 118 006a 77EE877A 		vadd.f32	s15, s15, s14
 119 006e 94ED087A 		vldr.32	s14, [r4, #32]
 120 0072 66EE876A 		vmul.f32	s13, s13, s14
 121              	.LVL15:
 122 0076 77EEA67A 		vadd.f32	s15, s15, s13
 123 007a 94ED067A 		vldr.32	s14, [r4, #24]
 124 007e 77EE877A 		vadd.f32	s15, s15, s14
 125 0082 C4ED067A 		vstr.32	s15, [r4, #24]
 126              	.LVL16:
 127              	.LBB72:
 128              	.LBB73:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 129              		.loc 3 30 0
 130 0086 94ED047A 		vldr.32	s14, [r4, #16]
 131              	.LVL17:
 132              	.LBE73:
 133              	.LBE72:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 134              		.loc 3 89 0
 135 008a F4EEC77A 		vcmpe.f32	s15, s14
 136 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 137 0092 0CDC     		bgt	.L12
 138              	.LVL18:
 139              	.LBB74:
 140              	.LBB75:
  31:Core/Inc/utils/pid_algorithms.h **** 
 141              		.loc 3 31 0
 142 0094 94ED057A 		vldr.32	s14, [r4, #20]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 6


 143              	.LVL19:
 144              	.LBE75:
 145              	.LBE74:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 146              		.loc 3 93 0
 147 0098 F4EEC77A 		vcmpe.f32	s15, s14
 148 009c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 149 00a0 07D5     		bpl	.L5
  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 150              		.loc 3 95 0
 151 00a2 84ED067A 		vstr.32	s14, [r4, #24]
 152 00a6 04E0     		b	.L5
 153              	.LVL20:
 154              	.L11:
 155              	.LBE65:
 156              	.LBE64:
  11:Core/Src/devs/leg.cpp **** 	{
 157              		.loc 1 11 0
 158 00a8 B0EE408A 		vmov.f32	s16, s0
 159 00ac BBE7     		b	.L2
 160              	.LVL21:
 161              	.L12:
 162              	.LBB77:
 163              	.LBB76:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 164              		.loc 3 91 0
 165 00ae 84ED067A 		vstr.32	s14, [r4, #24]
 166              	.L5:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 167              		.loc 3 98 0
 168 00b2 84ED086A 		vstr.32	s12, [r4, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 169              		.loc 3 99 0
 170 00b6 84ED070A 		vstr.32	s0, [r4, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 171              		.loc 3 101 0
 172 00ba 94ED060A 		vldr.32	s0, [r4, #24]
 173              	.LVL22:
 174              	.LBE76:
 175              	.LBE77:
  17:Core/Src/devs/leg.cpp **** 	computed = computed_omega;
 176              		.loc 1 17 0
 177 00be 064B     		ldr	r3, .L13+4
 178 00c0 83ED000A 		vstr.32	s0, [r3]
  18:Core/Src/devs/leg.cpp **** 	// float computed_omega = omega;
  19:Core/Src/devs/leg.cpp **** 	motor__.set_omega(computed_omega);
 179              		.loc 1 19 0
 180 00c4 05F13800 		add	r0, r5, #56
 181 00c8 FFF7FEFF 		bl	_ZN5motor9set_omegaEf
 182              	.LVL23:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 7


  20:Core/Src/devs/leg.cpp **** }
 183              		.loc 1 20 0
 184 00cc BDEC028B 		vldm	sp!, {d8}
 185              	.LCFI2:
 186              		.cfi_restore 80
 187              		.cfi_restore 81
 188              		.cfi_def_cfa_offset 16
 189              	.LVL24:
 190 00d0 38BD     		pop	{r3, r4, r5, pc}
 191              	.LVL25:
 192              	.L14:
 193 00d2 00BF     		.align	2
 194              	.L13:
 195 00d4 0AD7233C 		.word	1008981770
 196 00d8 00000000 		.word	.LANCHOR0
 197              		.cfi_endproc
 198              	.LFE451:
 200              		.section	.text._ZN3leg4rampEf,"ax",%progbits
 201              		.align	1
 202              		.global	_ZN3leg4rampEf
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	_ZN3leg4rampEf:
 209              	.LFB452:
  21:Core/Src/devs/leg.cpp **** 
  22:Core/Src/devs/leg.cpp **** float leg::ramp(float omega){
 210              		.loc 1 22 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              	.LVL26:
  23:Core/Src/devs/leg.cpp **** 	int factor = 1;
  24:Core/Src/devs/leg.cpp **** 
  25:Core/Src/devs/leg.cpp **** 	if(ramped_value < (omega-factor)){
 216              		.loc 1 25 0
 217 0000 B7EE007A 		vmov.f32	s14, #1.0e+0
 218 0004 30EE477A 		vsub.f32	s14, s0, s14
 219 0008 134B     		ldr	r3, .L27
 220 000a D3ED007A 		vldr.32	s15, [r3]
 221 000e B4EEE77A 		vcmpe.f32	s14, s15
 222 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 223 0016 0CDC     		bgt	.L25
  26:Core/Src/devs/leg.cpp **** 		ramped_value += factor;
  27:Core/Src/devs/leg.cpp **** 	}
  28:Core/Src/devs/leg.cpp **** 	else if(ramped_value > (omega+factor)){
 224              		.loc 1 28 0
 225 0018 B7EE007A 		vmov.f32	s14, #1.0e+0
 226 001c 30EE077A 		vadd.f32	s14, s0, s14
 227 0020 F4EEC77A 		vcmpe.f32	s15, s14
 228 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 229 0028 0DDC     		bgt	.L26
  29:Core/Src/devs/leg.cpp **** 		ramped_value -= factor;
  30:Core/Src/devs/leg.cpp **** 	}
  31:Core/Src/devs/leg.cpp **** 	else{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 8


  32:Core/Src/devs/leg.cpp **** 		ramped_value = omega;
 230              		.loc 1 32 0
 231 002a 0B4B     		ldr	r3, .L27
 232 002c 83ED000A 		vstr.32	s0, [r3]
 233 0030 05E0     		b	.L18
 234              	.L25:
  26:Core/Src/devs/leg.cpp **** 		ramped_value += factor;
 235              		.loc 1 26 0
 236 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
 237 0036 77EE877A 		vadd.f32	s15, s15, s14
 238 003a C3ED007A 		vstr.32	s15, [r3]
 239              	.L18:
  33:Core/Src/devs/leg.cpp **** 	}
  34:Core/Src/devs/leg.cpp **** 	return ramped_value;
  35:Core/Src/devs/leg.cpp **** }
 240              		.loc 1 35 0
 241 003e 064B     		ldr	r3, .L27
 242 0040 93ED000A 		vldr.32	s0, [r3]
 243              	.LVL27:
 244 0044 7047     		bx	lr
 245              	.LVL28:
 246              	.L26:
  29:Core/Src/devs/leg.cpp **** 		ramped_value -= factor;
 247              		.loc 1 29 0
 248 0046 B7EE007A 		vmov.f32	s14, #1.0e+0
 249 004a 77EEC77A 		vsub.f32	s15, s15, s14
 250 004e 024B     		ldr	r3, .L27
 251 0050 C3ED007A 		vstr.32	s15, [r3]
 252 0054 F3E7     		b	.L18
 253              	.L28:
 254 0056 00BF     		.align	2
 255              	.L27:
 256 0058 00000000 		.word	.LANCHOR1
 257              		.cfi_endproc
 258              	.LFE452:
 260              		.global	__aeabi_f2d
 261              		.global	__aeabi_dcmple
 262              		.global	__aeabi_dcmpge
 263              		.section	.text._ZN3leg9is_raisedEv,"ax",%progbits
 264              		.align	1
 265              		.global	_ZN3leg9is_raisedEv
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	_ZN3leg9is_raisedEv:
 272              	.LFB453:
  36:Core/Src/devs/leg.cpp **** 
  37:Core/Src/devs/leg.cpp **** Leg_condition leg::is_raised(){
 273              		.loc 1 37 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL29:
 278 0000 10B5     		push	{r4, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 9


 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283              	.LVL30:
 284              	.LBB78:
 285              	.LBB79:
 286              		.file 4 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 287              		.loc 4 47 0
 288 0002 00F13C04 		add	r4, r0, #60
 289 0006 2046     		mov	r0, r4
 290              	.LVL31:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 10


 291 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 292              	.LVL32:
 293              	.LBE79:
 294              	.LBE78:
  38:Core/Src/devs/leg.cpp **** 	float dead_angle = 15*PI/180;
  39:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=(0+dead_angle)) && (this->get_angle()<=(PI-dead_angle)))  ||
 295              		.loc 1 39 0
 296 000c DFED427A 		vldr.32	s15, .L50+48
 297 0010 B4EEE70A 		vcmpe.f32	s0, s15
 298 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 299 0018 0DDB     		blt	.L30
 300              	.LVL33:
 301              	.LBB80:
 302              	.LBB81:
 303              		.loc 4 47 0
 304 001a 2046     		mov	r0, r4
 305 001c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 306              	.LVL34:
 307              	.LBE81:
 308              	.LBE80:
 309              		.loc 1 39 0
 310 0020 10EE100A 		vmov	r0, s0
 311 0024 FFF7FEFF 		bl	__aeabi_f2d
 312              	.LVL35:
 313 0028 2FA3     		adr	r3, .L50
 314 002a D3E90023 		ldrd	r2, [r3]
 315 002e FFF7FEFF 		bl	__aeabi_dcmple
 316              	.LVL36:
 317 0032 0028     		cmp	r0, #0
 318 0034 4ED1     		bne	.L38
 319              	.L30:
 320              	.LVL37:
 321              	.LBB82:
 322              	.LBB83:
 323              		.loc 4 47 0 discriminator 4
 324 0036 2046     		mov	r0, r4
 325 0038 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 326              	.LVL38:
 327              	.LBE83:
 328              	.LBE82:
  40:Core/Src/devs/leg.cpp **** 	   ((this->get_angle()<=(-PI-dead_angle)) && (this->get_angle()>=(-2*PI+dead_angle)))){
 329              		.loc 1 40 0 discriminator 4
 330 003c 10EE100A 		vmov	r0, s0
 331 0040 FFF7FEFF 		bl	__aeabi_f2d
 332              	.LVL39:
  39:Core/Src/devs/leg.cpp **** 	   ((this->get_angle()<=(-PI-dead_angle)) && (this->get_angle()>=(-2*PI+dead_angle)))){
 333              		.loc 1 39 0 discriminator 4
 334 0044 2AA3     		adr	r3, .L50+8
 335 0046 D3E90023 		ldrd	r2, [r3]
 336 004a FFF7FEFF 		bl	__aeabi_dcmple
 337              	.LVL40:
 338 004e 60B1     		cbz	r0, .L33
 339              	.LVL41:
 340              	.LBB84:
 341              	.LBB85:
 342              		.loc 4 47 0
 343 0050 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 11


 344 0052 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 345              	.LVL42:
 346              	.LBE85:
 347              	.LBE84:
 348              		.loc 1 40 0
 349 0056 10EE100A 		vmov	r0, s0
 350 005a FFF7FEFF 		bl	__aeabi_f2d
 351              	.LVL43:
 352 005e 26A3     		adr	r3, .L50+16
 353 0060 D3E90023 		ldrd	r2, [r3]
 354 0064 FFF7FEFF 		bl	__aeabi_dcmpge
 355              	.LVL44:
 356 0068 B0BB     		cbnz	r0, .L39
 357              	.L33:
 358              	.LVL45:
 359              	.LBB86:
 360              	.LBB87:
 361              		.loc 4 47 0 discriminator 5
 362 006a 2046     		mov	r0, r4
 363 006c FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 364              	.LVL46:
 365              	.LBE87:
 366              	.LBE86:
  41:Core/Src/devs/leg.cpp **** 		return RAISED;
  42:Core/Src/devs/leg.cpp **** 	}
  43:Core/Src/devs/leg.cpp **** 	else if(((this->get_angle()>=(PI+dead_angle)) && (this->get_angle()<=(2*PI-dead_angle)))  ||
 367              		.loc 1 43 0 discriminator 5
 368 0070 10EE100A 		vmov	r0, s0
 369 0074 FFF7FEFF 		bl	__aeabi_f2d
 370              	.LVL47:
 371 0078 21A3     		adr	r3, .L50+24
 372 007a D3E90023 		ldrd	r2, [r3]
 373 007e FFF7FEFF 		bl	__aeabi_dcmpge
 374              	.LVL48:
 375 0082 60B1     		cbz	r0, .L35
 376              	.LVL49:
 377              	.LBB88:
 378              	.LBB89:
 379              		.loc 4 47 0
 380 0084 2046     		mov	r0, r4
 381 0086 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 382              	.LVL50:
 383              	.LBE89:
 384              	.LBE88:
 385              		.loc 1 43 0
 386 008a 10EE100A 		vmov	r0, s0
 387 008e FFF7FEFF 		bl	__aeabi_f2d
 388              	.LVL51:
 389 0092 1DA3     		adr	r3, .L50+32
 390 0094 D3E90023 		ldrd	r2, [r3]
 391 0098 FFF7FEFF 		bl	__aeabi_dcmple
 392              	.LVL52:
 393 009c F0B9     		cbnz	r0, .L40
 394              	.L35:
 395              	.LVL53:
 396              	.LBB90:
 397              	.LBB91:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 12


 398              		.loc 4 47 0 discriminator 4
 399 009e 2046     		mov	r0, r4
 400 00a0 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 401              	.LVL54:
 402              	.LBE91:
 403              	.LBE90:
 404              		.loc 1 43 0 discriminator 4
 405 00a4 DFED1D7A 		vldr.32	s15, .L50+52
 406 00a8 B4EEE70A 		vcmpe.f32	s0, s15
 407 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 408 00b0 16D8     		bhi	.L47
 409              	.LVL55:
 410              	.LBB92:
 411              	.LBB93:
 412              		.loc 4 47 0
 413 00b2 2046     		mov	r0, r4
 414 00b4 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 415              	.LVL56:
 416              	.LBE93:
 417              	.LBE92:
  44:Core/Src/devs/leg.cpp **** 		((this->get_angle()<=(-dead_angle)) && (this->get_angle()>=(-PI+dead_angle)))){
 418              		.loc 1 44 0
 419 00b8 10EE100A 		vmov	r0, s0
 420 00bc FFF7FEFF 		bl	__aeabi_f2d
 421              	.LVL57:
 422 00c0 13A3     		adr	r3, .L50+40
 423 00c2 D3E90023 		ldrd	r2, [r3]
 424 00c6 FFF7FEFF 		bl	__aeabi_dcmpge
 425              	.LVL58:
 426 00ca 08B1     		cbz	r0, .L49
  45:Core/Src/devs/leg.cpp **** 		return FALLEN;
 427              		.loc 1 45 0
 428 00cc 0120     		movs	r0, #1
 429 00ce 02E0     		b	.L32
 430              	.L49:
  46:Core/Src/devs/leg.cpp **** 	}
  47:Core/Src/devs/leg.cpp **** 	else{
  48:Core/Src/devs/leg.cpp **** 		return UNDEFINED;
 431              		.loc 1 48 0
 432 00d0 0220     		movs	r0, #2
 433 00d2 00E0     		b	.L32
 434              	.L38:
  41:Core/Src/devs/leg.cpp **** 	}
 435              		.loc 1 41 0
 436 00d4 0020     		movs	r0, #0
 437              	.L32:
  49:Core/Src/devs/leg.cpp **** 	}         
  50:Core/Src/devs/leg.cpp **** }
 438              		.loc 1 50 0
 439 00d6 10BD     		pop	{r4, pc}
 440              	.LVL59:
 441              	.L39:
  41:Core/Src/devs/leg.cpp **** 	}
 442              		.loc 1 41 0
 443 00d8 0020     		movs	r0, #0
 444 00da FCE7     		b	.L32
 445              	.L40:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 13


  45:Core/Src/devs/leg.cpp **** 	}
 446              		.loc 1 45 0
 447 00dc 0120     		movs	r0, #1
 448 00de FAE7     		b	.L32
 449              	.L47:
  48:Core/Src/devs/leg.cpp **** 	}         
 450              		.loc 1 48 0
 451 00e0 0220     		movs	r0, #2
 452 00e2 F8E7     		b	.L32
 453              	.L51:
 454 00e4 AFF30080 		.align	3
 455              	.L50:
 456 00e8 182D440C 		.word	205794584
 457 00ec D1090740 		.word	1074203089
 458 00f0 182D449C 		.word	-1673253608
 459 00f4 253A0BC0 		.word	-1073006043
 460 00f8 182D4430 		.word	809774360
 461 00fc E61518C0 		.word	-1072163354
 462 0100 182D449C 		.word	-1673253608
 463 0104 253A0B40 		.word	1074477605
 464 0108 182D4430 		.word	809774360
 465 010c E6151840 		.word	1075320294
 466 0110 182D440C 		.word	205794584
 467 0114 D10907C0 		.word	-1073280559
 468 0118 920A863E 		.word	1048971922
 469 011c 920A86BE 		.word	-1098511726
 470              		.cfi_endproc
 471              	.LFE453:
 473              		.section	.text._ZN3leg26is_raised_without_deadzoneEv,"ax",%progbits
 474              		.align	1
 475              		.global	_ZN3leg26is_raised_without_deadzoneEv
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv4-sp-d16
 481              	_ZN3leg26is_raised_without_deadzoneEv:
 482              	.LFB454:
  51:Core/Src/devs/leg.cpp **** 
  52:Core/Src/devs/leg.cpp **** bool leg::is_raised_without_deadzone(){
 483              		.loc 1 52 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              	.LVL60:
 488 0000 10B5     		push	{r4, lr}
 489              	.LCFI4:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 4, -8
 492              		.cfi_offset 14, -4
 493              	.LVL61:
 494              	.LBB94:
 495              	.LBB95:
 496              		.loc 4 47 0
 497 0002 00F13C04 		add	r4, r0, #60
 498 0006 2046     		mov	r0, r4
 499              	.LVL62:
 500 0008 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 14


 501              	.LVL63:
 502              	.LBE95:
 503              	.LBE94:
  53:Core/Src/devs/leg.cpp **** 	if(((this->get_angle()>=0) && (this->get_angle()<=(PI)))  ||  ((this->get_angle()<=(-PI)) && (this
 504              		.loc 1 53 0
 505 000c B5EEC00A 		vcmpe.f32	s0, #0
 506 0010 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 507 0014 0CDB     		blt	.L53
 508              	.LVL64:
 509              	.LBB96:
 510              	.LBB97:
 511              		.loc 4 47 0
 512 0016 2046     		mov	r0, r4
 513 0018 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 514              	.LVL65:
 515              	.LBE97:
 516              	.LBE96:
 517              		.loc 1 53 0
 518 001c 10EE100A 		vmov	r0, s0
 519 0020 FFF7FEFF 		bl	__aeabi_f2d
 520              	.LVL66:
 521 0024 14A3     		adr	r3, .L65
 522 0026 D3E90023 		ldrd	r2, [r3]
 523 002a FFF7FEFF 		bl	__aeabi_dcmple
 524              	.LVL67:
 525 002e F0B9     		cbnz	r0, .L57
 526              	.L53:
 527              	.LVL68:
 528              	.LBB98:
 529              	.LBB99:
 530              		.loc 4 47 0 discriminator 4
 531 0030 2046     		mov	r0, r4
 532 0032 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 533              	.LVL69:
 534              	.LBE99:
 535              	.LBE98:
 536              		.loc 1 53 0 discriminator 4
 537 0036 10EE100A 		vmov	r0, s0
 538 003a FFF7FEFF 		bl	__aeabi_f2d
 539              	.LVL70:
 540 003e 10A3     		adr	r3, .L65+8
 541 0040 D3E90023 		ldrd	r2, [r3]
 542 0044 FFF7FEFF 		bl	__aeabi_dcmple
 543              	.LVL71:
 544 0048 08B9     		cbnz	r0, .L64
  54:Core/Src/devs/leg.cpp **** 		return true;
  55:Core/Src/devs/leg.cpp **** 	}
  56:Core/Src/devs/leg.cpp **** 	else{
  57:Core/Src/devs/leg.cpp **** 		return false;
 545              		.loc 1 57 0
 546 004a 0020     		movs	r0, #0
 547              	.L55:
  58:Core/Src/devs/leg.cpp **** 	}
  59:Core/Src/devs/leg.cpp **** 
  60:Core/Src/devs/leg.cpp **** }
 548              		.loc 1 60 0
 549 004c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 15


 550              	.LVL72:
 551              	.L64:
 552              	.LBB100:
 553              	.LBB101:
 554              		.loc 4 47 0
 555 004e 2046     		mov	r0, r4
 556 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 557              	.LVL73:
 558              	.LBE101:
 559              	.LBE100:
  53:Core/Src/devs/leg.cpp **** 		return true;
 560              		.loc 1 53 0
 561 0054 10EE100A 		vmov	r0, s0
 562 0058 FFF7FEFF 		bl	__aeabi_f2d
 563              	.LVL74:
 564 005c 0AA3     		adr	r3, .L65+16
 565 005e D3E90023 		ldrd	r2, [r3]
 566 0062 FFF7FEFF 		bl	__aeabi_dcmpge
 567              	.LVL75:
 568 0066 0028     		cmp	r0, #0
 569 0068 F0D0     		beq	.L55
  54:Core/Src/devs/leg.cpp **** 		return true;
 570              		.loc 1 54 0
 571 006a 0120     		movs	r0, #1
 572 006c EEE7     		b	.L55
 573              	.L57:
 574 006e 0120     		movs	r0, #1
 575 0070 ECE7     		b	.L55
 576              	.L66:
 577 0072 00BFAFF3 		.align	3
 577      0080
 578              	.L65:
 579 0078 182D4454 		.word	1413754136
 580 007c FB210940 		.word	1074340347
 581 0080 182D4454 		.word	1413754136
 582 0084 FB2109C0 		.word	-1073143301
 583 0088 182D4454 		.word	1413754136
 584 008c FB2119C0 		.word	-1072094725
 585              		.cfi_endproc
 586              	.LFE454:
 588              		.section	.text._ZN3leg11reset_angleEf,"ax",%progbits
 589              		.align	1
 590              		.global	_ZN3leg11reset_angleEf
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv4-sp-d16
 596              	_ZN3leg11reset_angleEf:
 597              	.LFB455:
  61:Core/Src/devs/leg.cpp **** 
  62:Core/Src/devs/leg.cpp **** void leg::reset_angle(float angle_in_radians){
 598              		.loc 1 62 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL76:
 603 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 16


 604              	.LCFI5:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 3, -8
 607              		.cfi_offset 14, -4
  63:Core/Src/devs/leg.cpp **** 	encoder__.reset_angle(angle_in_radians);
 608              		.loc 1 63 0
 609 0002 3C30     		adds	r0, r0, #60
 610              	.LVL77:
 611 0004 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 612              	.LVL78:
  64:Core/Src/devs/leg.cpp **** }
 613              		.loc 1 64 0
 614 0008 08BD     		pop	{r3, pc}
 615              		.cfi_endproc
 616              	.LFE455:
 618              		.section	.text._ZN3leg15calculate_omegaEv,"ax",%progbits
 619              		.align	1
 620              		.global	_ZN3leg15calculate_omegaEv
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv4-sp-d16
 626              	_ZN3leg15calculate_omegaEv:
 627              	.LFB456:
  65:Core/Src/devs/leg.cpp **** 
  66:Core/Src/devs/leg.cpp **** void leg::calculate_omega(){
 628              		.loc 1 66 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              	.LVL79:
 633 0000 08B5     		push	{r3, lr}
 634              	.LCFI6:
 635              		.cfi_def_cfa_offset 8
 636              		.cfi_offset 3, -8
 637              		.cfi_offset 14, -4
  67:Core/Src/devs/leg.cpp **** 	encoder__.calculate_omega();
 638              		.loc 1 67 0
 639 0002 3C30     		adds	r0, r0, #60
 640              	.LVL80:
 641 0004 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 642              	.LVL81:
  68:Core/Src/devs/leg.cpp **** }
 643              		.loc 1 68 0
 644 0008 08BD     		pop	{r3, pc}
 645              		.cfi_endproc
 646              	.LFE456:
 648              		.global	computed
 649              		.section	.bss._ZL12ramped_value,"aw",%nobits
 650              		.align	2
 651              		.set	.LANCHOR1,. + 0
 654              	_ZL12ramped_value:
 655 0000 00000000 		.space	4
 656              		.section	.bss.computed,"aw",%nobits
 657              		.align	2
 658              		.set	.LANCHOR0,. + 0
 661              	computed:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 17


 662 0000 00000000 		.space	4
 663              		.text
 664              	.Letext0:
 665              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 666              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 667              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 668              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 669              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 670              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 671              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 672              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 673              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 674              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 675              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 676              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 677              		.file 17 "Core/Inc/periphs/tim.h"
 678              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 679              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 680              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 681              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 682              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 683              		.file 23 "Core/Inc/devs/encoder.h"
 684              		.file 24 "Core/Inc/devs/limit_switch.h"
 685              		.file 25 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 leg.cpp
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:18     .text._ZN3leg9set_omegaEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:25     .text._ZN3leg9set_omegaEf:00000000 _ZN3leg9set_omegaEf
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:195    .text._ZN3leg9set_omegaEf:000000d4 $d
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:201    .text._ZN3leg4rampEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:208    .text._ZN3leg4rampEf:00000000 _ZN3leg4rampEf
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:256    .text._ZN3leg4rampEf:00000058 $d
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:264    .text._ZN3leg9is_raisedEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:271    .text._ZN3leg9is_raisedEv:00000000 _ZN3leg9is_raisedEv
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:456    .text._ZN3leg9is_raisedEv:000000e8 $d
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:474    .text._ZN3leg26is_raised_without_deadzoneEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:481    .text._ZN3leg26is_raised_without_deadzoneEv:00000000 _ZN3leg26is_raised_without_deadzoneEv
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:579    .text._ZN3leg26is_raised_without_deadzoneEv:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:589    .text._ZN3leg11reset_angleEf:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:596    .text._ZN3leg11reset_angleEf:00000000 _ZN3leg11reset_angleEf
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:619    .text._ZN3leg15calculate_omegaEv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:626    .text._ZN3leg15calculate_omegaEv:00000000 _ZN3leg15calculate_omegaEv
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:661    .bss.computed:00000000 computed
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:650    .bss._ZL12ramped_value:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:654    .bss._ZL12ramped_value:00000000 _ZL12ramped_value
C:\Users\Prashant\AppData\Local\Temp\cc8Eu2Uk.s:657    .bss.computed:00000000 $d

UNDEFINED SYMBOLS
_ZN7encoder9get_omegaEv
_ZN5motor9set_omegaEf
__aeabi_f2d
__aeabi_dcmple
__aeabi_dcmpge
_ZN7encoder9get_angleEv
_ZN7encoder11reset_angleEf
_ZN7encoder15calculate_omegaEv
