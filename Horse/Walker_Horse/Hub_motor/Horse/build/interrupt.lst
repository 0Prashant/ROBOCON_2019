ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interrupt.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_d2iz
  20              		.global	__aeabi_i2d
  21              		.global	__aeabi_dmul
  22              		.global	__aeabi_dadd
  23              		.global	__aeabi_d2f
  24              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_GPIO_EXTI_Callback
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	HAL_GPIO_EXTI_Callback:
  33              	.LFB492:
  34              		.file 1 "Core/Src/devs/interrupt.cpp"
   1:Core/Src/devs/interrupt.cpp **** 
   2:Core/Src/devs/interrupt.cpp **** #include "robo_init.h"
   3:Core/Src/devs/interrupt.cpp **** 
   4:Core/Src/devs/interrupt.cpp **** extern leg leg[2];
   5:Core/Src/devs/interrupt.cpp **** extern steering steering;
   6:Core/Src/devs/interrupt.cpp **** 
   7:Core/Src/devs/interrupt.cpp **** extern bool ROBOT_START_FLAG;
   8:Core/Src/devs/interrupt.cpp **** extern bool STEERING_FLAG;
   9:Core/Src/devs/interrupt.cpp **** extern bool FRONT_PROXIMITY_FLAG;
  10:Core/Src/devs/interrupt.cpp **** extern bool BACK_PROXIMITY_FLAG;
  11:Core/Src/devs/interrupt.cpp **** extern bool GEREGE_FLAG;
  12:Core/Src/devs/interrupt.cpp **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  13:Core/Src/devs/interrupt.cpp **** {
  35              		.loc 1 13 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              	.LVL0:
  40 0000 70B5     		push	{r4, r5, r6, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 5, -12
  45              		.cfi_offset 6, -8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 2


  46              		.cfi_offset 14, -4
  47              	.LBB16:
  14:Core/Src/devs/interrupt.cpp ****         switch (GPIO_Pin) {
  48              		.loc 1 14 0
  49 0002 B0F5006F 		cmp	r0, #2048
  50 0006 00F0B580 		beq	.L3
  51 000a 12D9     		bls	.L14
  52 000c B0F5005F 		cmp	r0, #8192
  53 0010 30D0     		beq	.L8
  54 0012 1FD9     		bls	.L15
  55 0014 B0F5804F 		cmp	r0, #16384
  56 0018 64D0     		beq	.L11
  57 001a B0F5004F 		cmp	r0, #32768
  58 001e 18D1     		bne	.L1
  59              	.LBB17:
  15:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
  16:Core/Src/devs/interrupt.cpp **** 			ROBOT_START_FLAG = true;
  17:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!start_pressed!!\n\n");
  18:Core/Src/devs/interrupt.cpp **** 		}break;
  19:Core/Src/devs/interrupt.cpp **** 
  20:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_13 : {
  21:Core/Src/devs/interrupt.cpp ****                         // leg[0].steps++;
  22:Core/Src/devs/interrupt.cpp **** 			float leg0_reset_angle = 270*PI/180;
  23:Core/Src/devs/interrupt.cpp ****                         leg[0].reset_angle(leg0_reset_angle);
  24:Core/Src/devs/interrupt.cpp **** 			int temp = round(leg[0].get_actual_angle()/ (360*PI/180));
  25:Core/Src/devs/interrupt.cpp **** 			leg[0].reset_actual_angle((int)(temp-1)*2*PI + leg0_reset_angle);
  26:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\tRobot interrupt0\t %d \t %d\n", leg[0].steps, temp);
  27:Core/Src/devs/interrupt.cpp ****                 } break;
  28:Core/Src/devs/interrupt.cpp **** 
  29:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_14: {
  30:Core/Src/devs/interrupt.cpp ****                         // leg[1].steps++;
  31:Core/Src/devs/interrupt.cpp **** 			float leg1_reset_angle =270*PI/180;
  32:Core/Src/devs/interrupt.cpp ****                         leg[1].reset_angle(leg1_reset_angle);
  33:Core/Src/devs/interrupt.cpp **** 			int temp = round(leg[1].get_actual_angle() / (360*PI/180));
  34:Core/Src/devs/interrupt.cpp **** 			leg[1].reset_actual_angle((int)(temp-1)*2*PI + leg1_reset_angle);
  35:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\tRobot interrupt1\t %d\n", leg[1].steps);
  36:Core/Src/devs/interrupt.cpp ****                 } break;
  37:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_15: {
  38:Core/Src/devs/interrupt.cpp **** 			STEERING_FLAG = true;
  60              		.loc 1 38 0
  61 0020 614B     		ldr	r3, .L16+24
  62 0022 0122     		movs	r2, #1
  63 0024 1A70     		strb	r2, [r3]
  64              	.LVL1:
  65              	.LBB18:
  66              	.LBB19:
  67              		.file 2 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 3


  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 4


  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  68              		.loc 2 94 0
  69 0026 9FED610A 		vldr.32	s0, .L16+28
  70 002a 6148     		ldr	r0, .L16+32
  71              	.LVL2:
  72 002c FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
  73              	.LVL3:
  74 0030 0FE0     		b	.L1
  75              	.LVL4:
  76              	.L14:
  77              	.LBE19:
  78              	.LBE18:
  79              	.LBE17:
  14:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
  80              		.loc 1 14 0
  81 0032 B0F5807F 		cmp	r0, #256
  82 0036 00F09480 		beq	.L5
  83 003a B0F5806F 		cmp	r0, #1024
  84 003e 00F08780 		beq	.L6
  85 0042 0128     		cmp	r0, #1
  86 0044 05D1     		bne	.L1
  87              	.LBB30:
  16:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!start_pressed!!\n\n");
  88              		.loc 1 16 0
  89 0046 5B4B     		ldr	r3, .L16+36
  90 0048 0122     		movs	r2, #1
  91 004a 1A70     		strb	r2, [r3]
  17:Core/Src/devs/interrupt.cpp **** 		}break;
  92              		.loc 1 17 0
  93 004c 5A48     		ldr	r0, .L16+40
  94              	.LVL5:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 5


  95 004e FFF7FEFF 		bl	puts
  96              	.LVL6:
  97              	.L1:
  98              	.LBE30:
  99              	.LBE16:
  39:Core/Src/devs/interrupt.cpp **** 			steering.reset_angle(0.7*PI/180);
  40:Core/Src/devs/interrupt.cpp **** 			//  printf("\n\n\t\t\tsteering interrupt \t\n");
  41:Core/Src/devs/interrupt.cpp ****                 } break;
  42:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_10: {
  43:Core/Src/devs/interrupt.cpp **** 			FRONT_PROXIMITY_FLAG = true;
  44:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tFRONT_PROXIMITY_FLAG interrupt \t\n");
  45:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
  46:Core/Src/devs/interrupt.cpp **** 		}
  47:Core/Src/devs/interrupt.cpp **** 		break;
  48:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_8: {
  49:Core/Src/devs/interrupt.cpp **** 			BACK_PROXIMITY_FLAG = true;
  50:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tBACK_PROXIMITY_FLAG interrupt \t\n");
  51:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
  52:Core/Src/devs/interrupt.cpp **** 		}
  53:Core/Src/devs/interrupt.cpp **** 		break;
  54:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_12: {
  55:Core/Src/devs/interrupt.cpp **** 			GEREGE_FLAG = true;	
  56:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!Gerege Passed!!\n\n");
  57:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);
  58:Core/Src/devs/interrupt.cpp **** 		}
  59:Core/Src/devs/interrupt.cpp **** 		break;
  60:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_11: {
  61:Core/Src/devs/interrupt.cpp **** 			GEREGE_FLAG = true;	
  62:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!Gerege Passed!!\n\n");
  63:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);
  64:Core/Src/devs/interrupt.cpp **** 		}
  65:Core/Src/devs/interrupt.cpp **** 		break;
  66:Core/Src/devs/interrupt.cpp ****         }
  67:Core/Src/devs/interrupt.cpp **** }...
 100              		.loc 1 67 0
 101 0052 70BD     		pop	{r4, r5, r6, pc}
 102              	.LVL7:
 103              	.L15:
 104              	.LBB32:
  14:Core/Src/devs/interrupt.cpp ****         switch (GPIO_Pin) {
 105              		.loc 1 14 0
 106 0054 B0F5805F 		cmp	r0, #4096
 107 0058 FBD1     		bne	.L1
 108              	.LBB31:
  55:Core/Src/devs/interrupt.cpp **** 			GEREGE_FLAG = true;	
 109              		.loc 1 55 0
 110 005a 0124     		movs	r4, #1
 111 005c 574B     		ldr	r3, .L16+44
 112 005e 1C70     		strb	r4, [r3]
  56:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!Gerege Passed!!\n\n");
 113              		.loc 1 56 0
 114 0060 5748     		ldr	r0, .L16+48
 115              	.LVL8:
 116 0062 FFF7FEFF 		bl	puts
 117              	.LVL9:
  57:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);
 118              		.loc 1 57 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 6


 119 0066 2246     		mov	r2, r4
 120 0068 4FF48061 		mov	r1, #1024
 121 006c 5548     		ldr	r0, .L16+52
 122 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL10:
  59:Core/Src/devs/interrupt.cpp **** 		break;
 124              		.loc 1 59 0
 125 0072 EEE7     		b	.L1
 126              	.LVL11:
 127              	.L8:
 128              	.LBB20:
  23:Core/Src/devs/interrupt.cpp ****                         leg[0].reset_angle(leg0_reset_angle);
 129              		.loc 1 23 0
 130 0074 544C     		ldr	r4, .L16+56
 131 0076 9FED550A 		vldr.32	s0, .L16+60
 132 007a 2046     		mov	r0, r4
 133              	.LVL12:
 134 007c FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 135              	.LVL13:
 136              	.LBB21:
 137              	.LBB22:
 138              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 7


  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 139              		.loc 3 48 0
 140 0080 04F13C06 		add	r6, r4, #60
 141 0084 3046     		mov	r0, r6
 142 0086 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 143              	.LVL14:
 144              	.LBE22:
 145              	.LBE21:
  24:Core/Src/devs/interrupt.cpp **** 			int temp = round(leg[0].get_actual_angle()/ (360*PI/180));
 146              		.loc 1 24 0
 147 008a 10EE100A 		vmov	r0, s0
 148 008e FFF7FEFF 		bl	__aeabi_f2d
 149              	.LVL15:
 150 0092 3FA3     		adr	r3, .L16
 151 0094 D3E90023 		ldrd	r2, [r3]
 152 0098 FFF7FEFF 		bl	__aeabi_ddiv
 153              	.LVL16:
 154 009c 41EC100B 		vmov	d0, r0, r1
 155 00a0 FFF7FEFF 		bl	round
 156              	.LVL17:
 157 00a4 51EC100B 		vmov	r0, r1, d0
 158 00a8 FFF7FEFF 		bl	__aeabi_d2iz
 159              	.LVL18:
 160 00ac 0546     		mov	r5, r0
 161              	.LVL19:
  25:Core/Src/devs/interrupt.cpp **** 			leg[0].reset_actual_angle((int)(temp-1)*2*PI + leg0_reset_angle);
 162              		.loc 1 25 0
 163 00ae 0138     		subs	r0, r0, #1
 164              	.LVL20:
 165 00b0 4000     		lsls	r0, r0, #1
 166 00b2 FFF7FEFF 		bl	__aeabi_i2d
 167              	.LVL21:
 168 00b6 38A3     		adr	r3, .L16+8
 169 00b8 D3E90023 		ldrd	r2, [r3]
 170 00bc FFF7FEFF 		bl	__aeabi_dmul
 171              	.LVL22:
 172 00c0 37A3     		adr	r3, .L16+16
 173 00c2 D3E90023 		ldrd	r2, [r3]
 174 00c6 FFF7FEFF 		bl	__aeabi_dadd
 175              	.LVL23:
 176 00ca FFF7FEFF 		bl	__aeabi_d2f
 177              	.LVL24:
 178              	.LBB23:
 179              	.LBB24:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 8


 180              		.loc 3 40 0
 181 00ce 00EE100A 		vmov	s0, r0
 182 00d2 3046     		mov	r0, r6
 183              	.LVL25:
 184 00d4 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 185              	.LVL26:
 186              	.LBE24:
 187              	.LBE23:
  26:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\tRobot interrupt0\t %d \t %d\n", leg[0].steps, temp);
 188              		.loc 1 26 0
 189 00d8 2A46     		mov	r2, r5
 190 00da 2169     		ldr	r1, [r4, #16]
 191 00dc 3C48     		ldr	r0, .L16+64
 192 00de FFF7FEFF 		bl	printf
 193              	.LVL27:
 194              	.LBE20:
  27:Core/Src/devs/interrupt.cpp ****                 } break;
 195              		.loc 1 27 0
 196 00e2 B6E7     		b	.L1
 197              	.LVL28:
 198              	.L11:
 199              	.LBB25:
  32:Core/Src/devs/interrupt.cpp ****                         leg[1].reset_angle(leg1_reset_angle);
 200              		.loc 1 32 0
 201 00e4 3B4C     		ldr	r4, .L16+68
 202 00e6 9FED390A 		vldr.32	s0, .L16+60
 203 00ea 2046     		mov	r0, r4
 204              	.LVL29:
 205 00ec FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 206              	.LVL30:
 207              	.LBB26:
 208              	.LBB27:
 209              		.loc 3 48 0
 210 00f0 04F13C05 		add	r5, r4, #60
 211 00f4 2846     		mov	r0, r5
 212 00f6 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 213              	.LVL31:
 214              	.LBE27:
 215              	.LBE26:
  33:Core/Src/devs/interrupt.cpp **** 			int temp = round(leg[1].get_actual_angle() / (360*PI/180));
 216              		.loc 1 33 0
 217 00fa 10EE100A 		vmov	r0, s0
 218 00fe FFF7FEFF 		bl	__aeabi_f2d
 219              	.LVL32:
 220 0102 23A3     		adr	r3, .L16
 221 0104 D3E90023 		ldrd	r2, [r3]
 222 0108 FFF7FEFF 		bl	__aeabi_ddiv
 223              	.LVL33:
 224 010c 41EC100B 		vmov	d0, r0, r1
 225 0110 FFF7FEFF 		bl	round
 226              	.LVL34:
 227 0114 51EC100B 		vmov	r0, r1, d0
 228 0118 FFF7FEFF 		bl	__aeabi_d2iz
 229              	.LVL35:
  34:Core/Src/devs/interrupt.cpp **** 			leg[1].reset_actual_angle((int)(temp-1)*2*PI + leg1_reset_angle);
 230              		.loc 1 34 0
 231 011c 0138     		subs	r0, r0, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 9


 232              	.LVL36:
 233 011e 4000     		lsls	r0, r0, #1
 234              	.LVL37:
 235 0120 FFF7FEFF 		bl	__aeabi_i2d
 236              	.LVL38:
 237 0124 1CA3     		adr	r3, .L16+8
 238 0126 D3E90023 		ldrd	r2, [r3]
 239 012a FFF7FEFF 		bl	__aeabi_dmul
 240              	.LVL39:
 241 012e 1CA3     		adr	r3, .L16+16
 242 0130 D3E90023 		ldrd	r2, [r3]
 243 0134 FFF7FEFF 		bl	__aeabi_dadd
 244              	.LVL40:
 245 0138 FFF7FEFF 		bl	__aeabi_d2f
 246              	.LVL41:
 247              	.LBB28:
 248              	.LBB29:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 249              		.loc 3 40 0
 250 013c 00EE100A 		vmov	s0, r0
 251 0140 2846     		mov	r0, r5
 252              	.LVL42:
 253 0142 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 254              	.LVL43:
 255              	.LBE29:
 256              	.LBE28:
  35:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\tRobot interrupt1\t %d\n", leg[1].steps);
 257              		.loc 1 35 0
 258 0146 2169     		ldr	r1, [r4, #16]
 259 0148 2348     		ldr	r0, .L16+72
 260 014a FFF7FEFF 		bl	printf
 261              	.LVL44:
 262              	.LBE25:
  36:Core/Src/devs/interrupt.cpp ****                 } break;
 263              		.loc 1 36 0
 264 014e 80E7     		b	.L1
 265              	.LVL45:
 266              	.L6:
  43:Core/Src/devs/interrupt.cpp **** 			FRONT_PROXIMITY_FLAG = true;
 267              		.loc 1 43 0
 268 0150 224B     		ldr	r3, .L16+76
 269 0152 0122     		movs	r2, #1
 270 0154 1A70     		strb	r2, [r3]
  45:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 271              		.loc 1 45 0
 272 0156 4FF48051 		mov	r1, #4096
 273 015a 2148     		ldr	r0, .L16+80
 274              	.LVL46:
 275 015c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 276              	.LVL47:
  47:Core/Src/devs/interrupt.cpp **** 		break;
 277              		.loc 1 47 0
 278 0160 77E7     		b	.L1
 279              	.LVL48:
 280              	.L5:
  49:Core/Src/devs/interrupt.cpp **** 			BACK_PROXIMITY_FLAG = true;
 281              		.loc 1 49 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 10


 282 0162 204B     		ldr	r3, .L16+84
 283 0164 0122     		movs	r2, #1
 284 0166 1A70     		strb	r2, [r3]
  51:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
 285              		.loc 1 51 0
 286 0168 4FF48041 		mov	r1, #16384
 287 016c 1C48     		ldr	r0, .L16+80
 288              	.LVL49:
 289 016e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 290              	.LVL50:
  53:Core/Src/devs/interrupt.cpp **** 		break;
 291              		.loc 1 53 0
 292 0172 6EE7     		b	.L1
 293              	.LVL51:
 294              	.L3:
  61:Core/Src/devs/interrupt.cpp **** 			GEREGE_FLAG = true;	
 295              		.loc 1 61 0
 296 0174 0124     		movs	r4, #1
 297 0176 114B     		ldr	r3, .L16+44
 298 0178 1C70     		strb	r4, [r3]
  62:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!Gerege Passed!!\n\n");
 299              		.loc 1 62 0
 300 017a 1148     		ldr	r0, .L16+48
 301              	.LVL52:
 302 017c FFF7FEFF 		bl	puts
 303              	.LVL53:
  63:Core/Src/devs/interrupt.cpp **** 			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);
 304              		.loc 1 63 0
 305 0180 2246     		mov	r2, r4
 306 0182 4FF48061 		mov	r1, #1024
 307 0186 0F48     		ldr	r0, .L16+52
 308 0188 FFF7FEFF 		bl	HAL_GPIO_WritePin
 309              	.LVL54:
 310              	.LBE31:
 311              	.LBE32:
 312              		.loc 1 67 0
 313 018c 61E7     		b	.L1
 314              	.L17:
 315 018e 00BF     		.align	3
 316              	.L16:
 317 0190 182D4454 		.word	1413754136
 318 0194 FB211940 		.word	1075388923
 319 0198 182D4454 		.word	1413754136
 320 019c FB210940 		.word	1074340347
 321 01a0 00000080 		.word	-2147483648
 322 01a4 7CD91240 		.word	1074977148
 323 01a8 00000000 		.word	STEERING_FLAG
 324 01ac 172B483C 		.word	1011362583
 325 01b0 0C000000 		.word	steering+12
 326 01b4 00000000 		.word	ROBOT_START_FLAG
 327 01b8 00000000 		.word	.LC0
 328 01bc 00000000 		.word	GEREGE_FLAG
 329 01c0 58000000 		.word	.LC3
 330 01c4 00080240 		.word	1073874944
 331 01c8 00000000 		.word	leg
 332 01cc E4CB9640 		.word	1083624420
 333 01d0 1C000000 		.word	.LC1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 11


 334 01d4 58000000 		.word	leg+88
 335 01d8 3C000000 		.word	.LC2
 336 01dc 00000000 		.word	FRONT_PROXIMITY_FLAG
 337 01e0 000C0240 		.word	1073875968
 338 01e4 00000000 		.word	BACK_PROXIMITY_FLAG
 339              		.cfi_endproc
 340              	.LFE492:
 342              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 343              		.align	2
 344              	.LC0:
 345 0000 0A0A0909 		.ascii	"\012\012\011\011\011 !!start_pressed!!\012\000"
 345      09202121 
 345      73746172 
 345      745F7072 
 345      65737365 
 346 0019 000000   		.space	3
 347              	.LC1:
 348 001c 0A0A0909 		.ascii	"\012\012\011\011\011Robot interrupt0\011 %d \011 %d"
 348      09526F62 
 348      6F742069 
 348      6E746572 
 348      72757074 
 349 003a 0A00     		.ascii	"\012\000"
 350              	.LC2:
 351 003c 0A0A0909 		.ascii	"\012\012\011\011\011Robot interrupt1\011 %d\012\000"
 351      09526F62 
 351      6F742069 
 351      6E746572 
 351      72757074 
 352 0057 00       		.space	1
 353              	.LC3:
 354 0058 0A0A0909 		.ascii	"\012\012\011\011\011 !!Gerege Passed!!\012\000"
 354      09202121 
 354      47657265 
 354      67652050 
 354      61737365 
 355              		.text
 356              	.Letext0:
 357              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 358              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 359              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 360              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 361              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 362              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 363              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 364              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 365              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 366              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 367              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 368              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 369              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 370              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 371              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 372              		.file 19 "Core/Inc/periphs/tim.h"
 373              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 374              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 375              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 12


 376              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 377              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 378              		.file 25 "Core/Inc/devs/motor.h"
 379              		.file 26 "Core/Inc/devs/encoder.h"
 380              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 381              		.file 28 "Core/Inc/devs/limit_switch.h"
 382              		.file 29 "Core/Inc/periphs/usart.h"
 383              		.file 30 "Core/Inc/periphs/adc.h"
 384              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 385              		.file 32 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.cpp
C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s:32     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s:317    .text.HAL_GPIO_EXTI_Callback:00000190 $d
C:\Users\Prashant\AppData\Local\Temp\ccLSFmnb.s:343    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
_ZN7encoder11reset_angleEf
puts
HAL_GPIO_WritePin
_ZN3leg11reset_angleEf
_ZN7encoder16get_actual_angleEv
round
_ZN7encoder18reset_actual_angleEf
printf
HAL_GPIO_TogglePin
STEERING_FLAG
steering
ROBOT_START_FLAG
GEREGE_FLAG
leg
FRONT_PROXIMITY_FLAG
BACK_PROXIMITY_FLAG
