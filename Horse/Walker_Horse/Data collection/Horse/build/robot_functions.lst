ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot_functions.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB509:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE509:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB515:
  50              		.file 2 "Core/Src/robot/robot_functions.cpp"
   1:Core/Src/robot/robot_functions.cpp **** #include "robot_functions.h"
   2:Core/Src/robot/robot_functions.cpp **** 
   3:Core/Src/robot/robot_functions.cpp **** extern leg leg[2];
   4:Core/Src/robot/robot_functions.cpp **** extern steering steering;
   5:Core/Src/robot/robot_functions.cpp **** extern bool USE_IMU_FLAG;
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
   8:Core/Src/robot/robot_functions.cpp **** 
   9:Core/Src/robot/robot_functions.cpp **** static const float robot_speed = 6;      //17 is the maximum with safe zone
  10:Core/Src/robot/robot_functions.cpp **** static const float steering_speed = 0.73; // 0.875 is the 100%
  11:Core/Src/robot/robot_functions.cpp **** static const float steering_angle_limit = 8.4 * PI / 180;
  12:Core/Src/robot/robot_functions.cpp **** 
  13:Core/Src/robot/robot_functions.cpp **** extern float steps[7];
  14:Core/Src/robot/robot_functions.cpp **** extern float angles[7];
  15:Core/Src/robot/robot_functions.cpp **** float summation_angle = 0;
  16:Core/Src/robot/robot_functions.cpp **** uint32_t start_time;
  17:Core/Src/robot/robot_functions.cpp **** 
  18:Core/Src/robot/robot_functions.cpp **** bool STEERING_FLAG = false;
  19:Core/Src/robot/robot_functions.cpp **** 
  20:Core/Src/robot/robot_functions.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  21:Core/Src/robot/robot_functions.cpp **** float tolerance = 3 * PI / 180;
  22:Core/Src/robot/robot_functions.cpp **** 
  23:Core/Src/robot/robot_functions.cpp **** /*
  24:Core/Src/robot/robot_functions.cpp ****  * \brief This function makes the robot to reach the provided steps and angle.
  25:Core/Src/robot/robot_functions.cpp ****  * \brief this function needs to be called every 10 ms unti it reaches the desired position.
  26:Core/Src/robot/robot_functions.cpp ****  * \params: number of steps and angle in degree the robot has to reach.
  27:Core/Src/robot/robot_functions.cpp ****  * \returns true if robot reaches to the provided steps and angle.
  28:Core/Src/robot/robot_functions.cpp ****  * The angles that are caalibrated in degrees needs to be converted to radian.
  29:Core/Src/robot/robot_functions.cpp ****  * The function move_leg() is called at the beginning which moves the leg upto the desired point.
  30:Core/Src/robot/robot_functions.cpp ****  * There are two parameters inside this function move_leg(), the steps parameter is used whereas th
  31:Core/Src/robot/robot_functions.cpp ****  * The condition is if statement is to ensure that the robot is not in sand dune and it has not rea
  32:Core/Src/robot/robot_functions.cpp ****  * Whenever the robot reaches the sand dune the number of steps is declared to 100, so the step != 
  33:Core/Src/robot/robot_functions.cpp ****  * The function calculate_robot_angle() calculates its relative position from the initial state and
  34:Core/Src/robot/robot_functions.cpp ****  * This function operates until the desired steps and desired angles is reached. This is ensured by
  35:Core/Src/robot/robot_functions.cpp ****  * After the desired step and angle is reached, the function returns True.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 3


  36:Core/Src/robot/robot_functions.cpp **** */
  37:Core/Src/robot/robot_functions.cpp **** bool go(int step, float angle)
  38:Core/Src/robot/robot_functions.cpp **** {
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
  42:Core/Src/robot/robot_functions.cpp **** 	{		
  43:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
  44:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
  45:Core/Src/robot/robot_functions.cpp **** 	}
  46:Core/Src/robot/robot_functions.cpp **** 	else
  47:Core/Src/robot/robot_functions.cpp **** 	{
  48:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
  49:Core/Src/robot/robot_functions.cpp **** 	}
  50:Core/Src/robot/robot_functions.cpp **** 	// printf(" steps = %d\t robot_angle = %d\t curr_angle = %d\t", (int)(leg[0].get_steps()), (int)(r
  51:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d", (int)(leg[0].get_st
  52:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
  53:Core/Src/robot/robot_functions.cpp **** 
  54:Core/Src/robot/robot_functions.cpp **** 	// if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
  55:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
  56:Core/Src/robot/robot_functions.cpp **** 	{
  57:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
  58:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
  59:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
  60:Core/Src/robot/robot_functions.cpp **** 		return true;
  61:Core/Src/robot/robot_functions.cpp **** 	}
  62:Core/Src/robot/robot_functions.cpp **** 	else
  63:Core/Src/robot/robot_functions.cpp **** 	{
  64:Core/Src/robot/robot_functions.cpp **** 		return false;
  65:Core/Src/robot/robot_functions.cpp **** 	}
  66:Core/Src/robot/robot_functions.cpp **** }
  67:Core/Src/robot/robot_functions.cpp **** /*
  68:Core/Src/robot/robot_functions.cpp ****  *The function move_leg() is the basic function to give speed to the motor.
  69:Core/Src/robot/robot_functions.cpp ****  *\return params: void
  70:Core/Src/robot/robot_functions.cpp ****  *\input parameter: steps, angle
  71:Core/Src/robot/robot_functions.cpp ****  *This function takes two input parameters: step and angle. Although the parameter angle is not use
  72:Core/Src/robot/robot_functions.cpp ****  *The variable leg_speed stores the value of speed. When the robot is in sand_dune region, the spee
  73:Core/Src/robot/robot_functions.cpp ****  *The variable del_speed stores the value of difference in speed in case where the legs are not in 
  74:Core/Src/robot/robot_functions.cpp ****  *If the legs are not in 180 degrees phase difference, some calculations need to be made in order t
  75:Core/Src/robot/robot_functions.cpp ****  *This is done by evaluating the angles every time. Whenever the returned angle is not in the desir
  76:Core/Src/robot/robot_functions.cpp ****  *difference is the two leg angles multiplied by leg_speed which is again multiplied by the factor 
  77:Core/Src/robot/robot_functions.cpp ****  *Following the above reference, the leg_speed is calculated in closed loop basis.
  78:Core/Src/robot/robot_functions.cpp **** */
  79:Core/Src/robot/robot_functions.cpp **** void move_leg(int step, float angle)
  80:Core/Src/robot/robot_functions.cpp **** {
  81:Core/Src/robot/robot_functions.cpp **** 	float del_speed = 0;
  82:Core/Src/robot/robot_functions.cpp **** 	float leg_speed = robot_speed;
  83:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (leg[0].is_raised_without_deadzone()) ? robot_speed : robot_speed+1;
  84:Core/Src/robot/robot_functions.cpp **** 	//Setting the slow speed in sand dune and tussok
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step== (int)steps[6])) ? 4.3 : leg_speed;
  86:Core/Src/robot/robot_functions.cpp **** 
  87:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
  88:Core/Src/robot/robot_functions.cpp **** 
  89:Core/Src/robot/robot_functions.cpp **** 	del_speed = 3 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
  90:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
  91:Core/Src/robot/robot_functions.cpp **** 	{
  92:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 4


  93:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
  94:Core/Src/robot/robot_functions.cpp **** 	}
  95:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
  96:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
  97:Core/Src/robot/robot_functions.cpp **** }
  98:Core/Src/robot/robot_functions.cpp **** 
  99:Core/Src/robot/robot_functions.cpp **** /*
 100:Core/Src/robot/robot_functions.cpp ****  *The function move_steering() is concerned with moving the steering to certain angle with certain 
 101:Core/Src/robot/robot_functions.cpp ****  *Return patameter: void
 102:Core/Src/robot/robot_functions.cpp ****  *Input parameters: step, angle
 103:Core/Src/robot/robot_functions.cpp ****  *During initialization, the summation_angle is set to 0. After the robot starts to move, there is 
 104:Core/Src/robot/robot_functions.cpp ****  * This error of course needs to be minimized. This minimization is done by  summing all the drifts
 105:Core/Src/robot/robot_functions.cpp ****  * that it gives to the robot. Whenever the steering sets the angle for robot, this error is also a
 106:Core/Src/robot/robot_functions.cpp ****  * The robot changes the angle whenever the outside leg is raised. For the robot and leg to be in t
 107:Core/Src/robot/robot_functions.cpp ****  * the outside leg is in fallen state.
 108:Core/Src/robot/robot_functions.cpp **** */
 109:Core/Src/robot/robot_functions.cpp **** void move_steering(int step, float angle)
 110:Core/Src/robot/robot_functions.cpp **** {
 111:Core/Src/robot/robot_functions.cpp **** 	// if ((step == steps[0]) && (leg[0].is_raised() != Leg_condition::RAISED)) 
 112:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 113:Core/Src/robot/robot_functions.cpp **** 	{
 114:Core/Src/robot/robot_functions.cpp **** 		summation_angle += 1.3*robot_angle;
 115:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 116:Core/Src/robot/robot_functions.cpp **** 		angle /= 1000;
 117:Core/Src/robot/robot_functions.cpp **** 	}
 118:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 119:Core/Src/robot/robot_functions.cpp **** 	{
 120:Core/Src/robot/robot_functions.cpp **** 		// printf("  raised  ");
 121:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 122:Core/Src/robot/robot_functions.cpp **** 	}
 123:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 124:Core/Src/robot/robot_functions.cpp **** 	{
 125:Core/Src/robot/robot_functions.cpp **** 		// printf("  fallen  ");
 126:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 127:Core/Src/robot/robot_functions.cpp **** 	}
 128:Core/Src/robot/robot_functions.cpp **** 	else
 129:Core/Src/robot/robot_functions.cpp **** 	{
 130:Core/Src/robot/robot_functions.cpp **** 		// printf("  nothing  ");
 131:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 132:Core/Src/robot/robot_functions.cpp **** 	}
 133:Core/Src/robot/robot_functions.cpp **** }
 134:Core/Src/robot/robot_functions.cpp **** /*
 135:Core/Src/robot/robot_functions.cpp ****  * The function set_angle() is concerned with setting the angle for steering.
 136:Core/Src/robot/robot_functions.cpp ****  * Return params : void
 137:Core/Src/robot/robot_functions.cpp ****  * Input patams : angle
 138:Core/Src/robot/robot_functions.cpp ****  * The variable del_angle stores the differnece in given input angle and the current angle returned
 139:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns positive value, it depicts that the robot has already reached the angl
 140:Core/Src/robot/robot_functions.cpp ****  * TO correct this to the desired angle the angle needs to be set.
 141:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns a negative value, it depicts that the robot has not reached the desire
 142:Core/Src/robot/robot_functions.cpp **** */
 143:Core/Src/robot/robot_functions.cpp **** void set_angle(float angle)
 144:Core/Src/robot/robot_functions.cpp **** {
 145:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 146:Core/Src/robot/robot_functions.cpp **** 	// printf("\tdel_angle = %d\t", (int)(del_angle));
 147:Core/Src/robot/robot_functions.cpp **** 	if(abs(del_angle) >= 0.5){
 148:Core/Src/robot/robot_functions.cpp **** 		if (del_angle >= 0)
 149:Core/Src/robot/robot_functions.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 5


 150:Core/Src/robot/robot_functions.cpp **** 			steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180
 151:Core/Src/robot/robot_functions.cpp **** 		}
 152:Core/Src/robot/robot_functions.cpp **** 		else
 153:Core/Src/robot/robot_functions.cpp **** 		{
 154:Core/Src/robot/robot_functions.cpp **** 			steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 1
 155:Core/Src/robot/robot_functions.cpp **** 		}
 156:Core/Src/robot/robot_functions.cpp **** 	}
 157:Core/Src/robot/robot_functions.cpp **** 	//*/
 158:Core/Src/robot/robot_functions.cpp **** }
 159:Core/Src/robot/robot_functions.cpp **** /*
 160:Core/Src/robot/robot_functions.cpp ****  * This function correct_steering_angle() is called whenever the outside leg is fallen and the stee
 161:Core/Src/robot/robot_functions.cpp ****  * return param: void
 162:Core/Src/robot/robot_functions.cpp ****  * input params: angle
 163:Core/Src/robot/robot_functions.cpp ****  * same as set_angle function. the difference is this function is called whenever the leg is not ra
 164:Core/Src/robot/robot_functions.cpp ****  * the leg is raised.
 165:Core/Src/robot/robot_functions.cpp **** */
 166:Core/Src/robot/robot_functions.cpp **** void correct_steering_angle(float angle)
 167:Core/Src/robot/robot_functions.cpp **** {
 168:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 169:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (2*steering_angle_limit * 180 / PI))
 170:Core/Src/robot/robot_functions.cpp **** 	{
 171:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 172:Core/Src/robot/robot_functions.cpp **** 		// printf("center_alligned\t");
 173:Core/Src/robot/robot_functions.cpp **** 	}
 174:Core/Src/robot/robot_functions.cpp **** 	else
 175:Core/Src/robot/robot_functions.cpp **** 	{
 176:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 177:Core/Src/robot/robot_functions.cpp **** 		// printf("peak_alligned\t");
 178:Core/Src/robot/robot_functions.cpp **** 	}
 179:Core/Src/robot/robot_functions.cpp **** 	//*/
 180:Core/Src/robot/robot_functions.cpp **** }
 181:Core/Src/robot/robot_functions.cpp **** /**
 182:Core/Src/robot/robot_functions.cpp ****  * This function calculate_robot_angle() calculates the relative robot angle from the initial posit
 183:Core/Src/robot/robot_functions.cpp ****  * to zero and all other angles are taken with reference to this initial angle.
 184:Core/Src/robot/robot_functions.cpp ****  * return param : void
 185:Core/Src/robot/robot_functions.cpp ****  * /params input parameters : void
 186:Core/Src/robot/robot_functions.cpp ****  * The variable robot_angle stores the realtive value of robot angle from the original position
 187:Core/Src/robot/robot_functions.cpp ****  * The temp_robot_angle is just the temporary variable.
 188:Core/Src/robot/robot_functions.cpp **** */
 189:Core/Src/robot/robot_functions.cpp **** void calculate_robot_angle()
 190:Core/Src/robot/robot_functions.cpp **** {
 191:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 192:Core/Src/robot/robot_functions.cpp **** 	{
 193:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 194:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 195:Core/Src/robot/robot_functions.cpp **** 		// printf("\tusing IMU\t");
 196:Core/Src/robot/robot_functions.cpp **** 	}
 197:Core/Src/robot/robot_functions.cpp **** 	else
 198:Core/Src/robot/robot_functions.cpp **** 	{
 199:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 200:Core/Src/robot/robot_functions.cpp **** 		{
 201:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 202:Core/Src/robot/robot_functions.cpp **** 			// printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 203:Core/Src/robot/robot_functions.cpp **** 		}
 204:Core/Src/robot/robot_functions.cpp **** 		else
 205:Core/Src/robot/robot_functions.cpp **** 		{
 206:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 6


 207:Core/Src/robot/robot_functions.cpp **** 			// printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 208:Core/Src/robot/robot_functions.cpp **** 		}
 209:Core/Src/robot/robot_functions.cpp **** 		// printf("\tusing ENCODER\t");
 210:Core/Src/robot/robot_functions.cpp **** 	}
 211:Core/Src/robot/robot_functions.cpp **** }
 212:Core/Src/robot/robot_functions.cpp **** 
 213:Core/Src/robot/robot_functions.cpp **** /**
 214:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the robot in erected position at the start of the game.
 215:Core/Src/robot/robot_functions.cpp ****  * \bug remember to face towards anticlockwise direction from the 0 position at the start of the ga
 216:Core/Src/robot/robot_functions.cpp ****  * \params void
 217:Core/Src/robot/robot_functions.cpp ****  * \returns void
 218:Core/Src/robot/robot_functions.cpp ****  */
 219:Core/Src/robot/robot_functions.cpp **** 
 220:Core/Src/robot/robot_functions.cpp **** void initialize_position(void)
 221:Core/Src/robot/robot_functions.cpp **** {
 222:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 223:Core/Src/robot/robot_functions.cpp **** 	while (true)
 224:Core/Src/robot/robot_functions.cpp **** 	{
 225:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 226:Core/Src/robot/robot_functions.cpp **** 		{
 227:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 228:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 229:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 230:Core/Src/robot/robot_functions.cpp **** 				break;
 231:Core/Src/robot/robot_functions.cpp **** 		}
 232:Core/Src/robot/robot_functions.cpp **** 	}
 233:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 234:Core/Src/robot/robot_functions.cpp **** 	{
 235:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 236:Core/Src/robot/robot_functions.cpp **** 		{
 237:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 238:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 239:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 240:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 241:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 242:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 243:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_actual_angle(90 * PI / 180);
 244:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_actual_angle(90 * PI / 180);
 245:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 246:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 247:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 248:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 249:Core/Src/robot/robot_functions.cpp **** 		}
 250:Core/Src/robot/robot_functions.cpp **** 	}
 251:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 252:Core/Src/robot/robot_functions.cpp **** 	while (true)
 253:Core/Src/robot/robot_functions.cpp **** 	{
 254:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 255:Core/Src/robot/robot_functions.cpp **** 		{
 256:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 257:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 258:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 259:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 260:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 261:Core/Src/robot/robot_functions.cpp **** 				break;
 262:Core/Src/robot/robot_functions.cpp **** 		}
 263:Core/Src/robot/robot_functions.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 7


 264:Core/Src/robot/robot_functions.cpp **** }
 265:Core/Src/robot/robot_functions.cpp **** 
 266:Core/Src/robot/robot_functions.cpp **** /**
 267:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the leg in erected position at the start of the game.
 268:Core/Src/robot/robot_functions.cpp ****  * \params void
 269:Core/Src/robot/robot_functions.cpp ****  * \returns true if leg is erected.
 270:Core/Src/robot/robot_functions.cpp ****  */
 271:Core/Src/robot/robot_functions.cpp **** bool initialize_leg_position(void)
 272:Core/Src/robot/robot_functions.cpp **** {
 273:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 8;
 274:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 275:Core/Src/robot/robot_functions.cpp **** 	static bool leg0_flag = false;
 276:Core/Src/robot/robot_functions.cpp **** 	static bool leg1_flag = false;
 277:Core/Src/robot/robot_functions.cpp **** 
 278:Core/Src/robot/robot_functions.cpp **** 	// printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 279:Core/Src/robot/robot_functions.cpp **** 	// , leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].ge
 280:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 281:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 282:Core/Src/robot/robot_functions.cpp **** 	{
 283:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 284:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 285:Core/Src/robot/robot_functions.cpp **** 	}
 286:Core/Src/robot/robot_functions.cpp **** 	else
 287:Core/Src/robot/robot_functions.cpp **** 	{
 288:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 289:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 290:Core/Src/robot/robot_functions.cpp **** 	}
 291:Core/Src/robot/robot_functions.cpp **** 
 292:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 293:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 294:Core/Src/robot/robot_functions.cpp **** 	{
 295:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 296:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 297:Core/Src/robot/robot_functions.cpp **** 	}
 298:Core/Src/robot/robot_functions.cpp **** 	else
 299:Core/Src/robot/robot_functions.cpp **** 	{
 300:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 301:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 302:Core/Src/robot/robot_functions.cpp **** 	}
 303:Core/Src/robot/robot_functions.cpp **** 
 304:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 305:Core/Src/robot/robot_functions.cpp **** 	{
 306:Core/Src/robot/robot_functions.cpp **** 
 307:Core/Src/robot/robot_functions.cpp **** 		return true;
 308:Core/Src/robot/robot_functions.cpp **** 	}
 309:Core/Src/robot/robot_functions.cpp **** 	else
 310:Core/Src/robot/robot_functions.cpp **** 	{
 311:Core/Src/robot/robot_functions.cpp **** 		return false;
 312:Core/Src/robot/robot_functions.cpp **** 	}
 313:Core/Src/robot/robot_functions.cpp **** }
 314:Core/Src/robot/robot_functions.cpp **** 
 315:Core/Src/robot/robot_functions.cpp **** /**
 316:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 317:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the steering in center position at the start of the game.
 318:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 319:Core/Src/robot/robot_functions.cpp ****  * \params void
 320:Core/Src/robot/robot_functions.cpp ****  * \returns true if reached to 0 angle.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 8


 321:Core/Src/robot/robot_functions.cpp ****  */
 322:Core/Src/robot/robot_functions.cpp **** bool initialize_steering_position(void)
 323:Core/Src/robot/robot_functions.cpp **** {
 324:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 325:Core/Src/robot/robot_functions.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 326:Core/Src/robot/robot_functions.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 327:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 328:Core/Src/robot/robot_functions.cpp **** 	{
 329:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 330:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 331:Core/Src/robot/robot_functions.cpp **** 		return true;
 332:Core/Src/robot/robot_functions.cpp **** 	}
 333:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 334:Core/Src/robot/robot_functions.cpp **** 	{
 335:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 336:Core/Src/robot/robot_functions.cpp **** 		return true;
 337:Core/Src/robot/robot_functions.cpp **** 	}
 338:Core/Src/robot/robot_functions.cpp **** 	else
 339:Core/Src/robot/robot_functions.cpp **** 	{
 340:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 341:Core/Src/robot/robot_functions.cpp **** 		return false;
 342:Core/Src/robot/robot_functions.cpp **** 	}
 343:Core/Src/robot/robot_functions.cpp **** }
 344:Core/Src/robot/robot_functions.cpp **** 
 345:Core/Src/robot/robot_functions.cpp **** bool getup_n_run()
 346:Core/Src/robot/robot_functions.cpp **** {
 347:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 348:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 349:Core/Src/robot/robot_functions.cpp **** 
 350:Core/Src/robot/robot_functions.cpp **** 	// printf("\tInitializing_Leg_Orientation_GETUP\t");
 351:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(0);
 352:Core/Src/robot/robot_functions.cpp **** 	// printf(" \t%d \t%d", (int)(leg[1].get_angle()), (int)(leg_initial_position));
 353:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 354:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 355:Core/Src/robot/robot_functions.cpp **** 	{
 356:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 357:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_actual_angle(90 * PI / 180);
 358:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_actual_angle(90 * PI / 180);
 359:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 360:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 361:Core/Src/robot/robot_functions.cpp **** 		// printf("\tIF\t");
 362:Core/Src/robot/robot_functions.cpp **** 		return true;
 363:Core/Src/robot/robot_functions.cpp **** 	}
 364:Core/Src/robot/robot_functions.cpp **** 	else
 365:Core/Src/robot/robot_functions.cpp **** 	{
 366:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 367:Core/Src/robot/robot_functions.cpp **** 		// printf("\tELSE\t");
 368:Core/Src/robot/robot_functions.cpp **** 		return false;
 369:Core/Src/robot/robot_functions.cpp **** 	}
 370:Core/Src/robot/robot_functions.cpp **** 
 371:Core/Src/robot/robot_functions.cpp **** }
 372:Core/Src/robot/robot_functions.cpp **** 
 373:Core/Src/robot/robot_functions.cpp **** /**
 374:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 375:Core/Src/robot/robot_functions.cpp ****  * \brief This function calculates all the datas including the motor omegas, orientation and angles
 376:Core/Src/robot/robot_functions.cpp ****  * \remarks remember to call this function only once in every 10 ms.
 377:Core/Src/robot/robot_functions.cpp ****  * \params void
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 9


 378:Core/Src/robot/robot_functions.cpp ****  * \returns void
 379:Core/Src/robot/robot_functions.cpp ****  */
 380:Core/Src/robot/robot_functions.cpp **** void calculate_datas()
 381:Core/Src/robot/robot_functions.cpp **** {
 382:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 383:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 384:Core/Src/robot/robot_functions.cpp **** 	steering.calculate_omega();
 385:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 386:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 387:Core/Src/robot/robot_functions.cpp **** 	// printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 388:Core/Src/robot/robot_functions.cpp **** 	// printf("\trobot_angle = %d\t", (int)(robot_angle*180/PI));
 389:Core/Src/robot/robot_functions.cpp **** }
 390:Core/Src/robot/robot_functions.cpp **** 
 391:Core/Src/robot/robot_functions.cpp **** float motion_profile(float angle_in_degrees, float min_speed, float max_speed)
 392:Core/Src/robot/robot_functions.cpp **** {
 393:Core/Src/robot/robot_functions.cpp **** 	float damping_angle = 30;
 394:Core/Src/robot/robot_functions.cpp **** 	float speed = 0;
 395:Core/Src/robot/robot_functions.cpp **** 	min_speed = 1.1;
 396:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 397:Core/Src/robot/robot_functions.cpp **** 	{
 398:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 399:Core/Src/robot/robot_functions.cpp **** 		// max_speed = 10;
 400:Core/Src/robot/robot_functions.cpp **** 	}
 401:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 402:Core/Src/robot/robot_functions.cpp **** 	{
 403:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 404:Core/Src/robot/robot_functions.cpp **** 		// printf("condition1");
 405:Core/Src/robot/robot_functions.cpp **** 	}
 406:Core/Src/robot/robot_functions.cpp **** 
 407:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 408:Core/Src/robot/robot_functions.cpp **** 	{
 409:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 410:Core/Src/robot/robot_functions.cpp **** 		// printf("conditionelseif");
 411:Core/Src/robot/robot_functions.cpp **** 	}
 412:Core/Src/robot/robot_functions.cpp **** 	else
 413:Core/Src/robot/robot_functions.cpp **** 	{
 414:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 415:Core/Src/robot/robot_functions.cpp **** 		// printf("else");
 416:Core/Src/robot/robot_functions.cpp **** 	}
 417:Core/Src/robot/robot_functions.cpp **** 	// printf("\tSpeed = %d", (int)(speed*100));
 418:Core/Src/robot/robot_functions.cpp **** 	return speed;
 419:Core/Src/robot/robot_functions.cpp **** }...
  51              		.loc 2 419 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 419 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 419 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 10


  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB97:
  75              	.LBB98:
  76              	.LBB99:
  77              	.LBB100:
  78              	.LBB101:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE101:
  86              	.LBE100:
  87              	.LBB102:
  88              	.LBB103:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE103:
  93              	.LBE102:
  94              	.LBB104:
  95              	.LBB105:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE105:
 100              	.LBE104:
 101              	.LBE99:
 102              	.LBE98:
 103              	.LBE97:
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
 104              		.loc 2 6 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB106:
 113              	.LBB107:
 114              	.LBB108:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 11


 115              	.LBB109:
 116              	.LBB110:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE110:
 122              	.LBE109:
 123              	.LBB111:
 124              	.LBB112:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE112:
 129              	.LBE111:
 130              	.LBB113:
 131              	.LBB114:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE114:
 136              	.LBE113:
 137              	.LBE108:
 138              	.LBE107:
 139              	.LBE106:
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
 140              		.loc 2 7 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 419 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE515:
 157              		.global	__aeabi_f2d
 158              		.global	__aeabi_ddiv
 159              		.global	__aeabi_d2f
 160              		.global	__aeabi_dcmpgt
 161              		.global	__aeabi_dcmplt
 162              		.section	.text._Z9set_anglef,"ax",%progbits
 163              		.align	1
 164              		.global	_Z9set_anglef
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	_Z9set_anglef:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 12


 171              	.LFB495:
 144:Core/Src/robot/robot_functions.cpp **** {
 172              		.loc 2 144 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL13:
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 182 0002 2DED028B 		vpush.64	{d8}
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 80, -16
 186              		.cfi_offset 81, -12
 145:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 187              		.loc 2 145 0
 188 0006 2A4B     		ldr	r3, .L27+24
 189 0008 D3ED007A 		vldr.32	s15, [r3]
 190 000c 30EE670A 		vsub.f32	s0, s0, s15
 191              	.LVL14:
 192 0010 DFED287A 		vldr.32	s15, .L27+28
 193 0014 60EE277A 		vmul.f32	s15, s0, s15
 194 0018 17EE900A 		vmov	r0, s15
 195 001c FFF7FEFF 		bl	__aeabi_f2d
 196              	.LVL15:
 197 0020 1DA3     		adr	r3, .L27
 198 0022 D3E90023 		ldrd	r2, [r3]
 199 0026 FFF7FEFF 		bl	__aeabi_ddiv
 200              	.LVL16:
 201 002a FFF7FEFF 		bl	__aeabi_d2f
 202              	.LVL17:
 203 002e 08EE100A 		vmov	s16, r0
 204              	.LVL18:
 205              	.LBB115:
 206              	.LBB116:
 207              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // Copyright (C) 2016-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 13


  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****  */
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #endif
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** {
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** {
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   inline long
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #endif
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #endif
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   abs(double __x)
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h **** 
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   abs(float __x)
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 14


 208              		.loc 3 75 0
 209 0032 B0EEC87A 		vabs.f32	s14, s16
 210              	.LVL19:
 211              	.LBE116:
 212              	.LBE115:
 147:Core/Src/robot/robot_functions.cpp **** 	if(abs(del_angle) >= 0.5){
 213              		.loc 2 147 0
 214 0036 F6EE007A 		vmov.f32	s15, #5.0e-1
 215 003a B4EEE77A 		vcmpe.f32	s14, s15
 216 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 217 0042 11DB     		blt	.L11
 148:Core/Src/robot/robot_functions.cpp **** 		if (del_angle >= 0)
 218              		.loc 2 148 0
 219 0044 B5EEC08A 		vcmpe.f32	s16, #0
 220 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 221 004c 12DB     		blt	.L24
 150:Core/Src/robot/robot_functions.cpp **** 			steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180
 222              		.loc 2 150 0
 223 004e FFF7FEFF 		bl	__aeabi_f2d
 224              	.LVL20:
 225 0052 13A3     		adr	r3, .L27+8
 226 0054 D3E90023 		ldrd	r2, [r3]
 227 0058 FFF7FEFF 		bl	__aeabi_dcmpgt
 228              	.LVL21:
 229 005c 38B9     		cbnz	r0, .L26
 230              	.LVL22:
 231              	.L16:
 150:Core/Src/robot/robot_functions.cpp **** 			steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180
 232              		.loc 2 150 0 is_stmt 0 discriminator 4
 233 005e B0EE480A 		vmov.f32	s0, s16
 234 0062 1548     		ldr	r0, .L27+32
 235 0064 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 236              	.LVL23:
 237              	.L11:
 158:Core/Src/robot/robot_functions.cpp **** }
 238              		.loc 2 158 0 is_stmt 1
 239 0068 BDEC028B 		vldm	sp!, {d8}
 240              	.LCFI3:
 241              		.cfi_remember_state
 242              		.cfi_restore 80
 243              		.cfi_restore 81
 244              		.cfi_def_cfa_offset 8
 245 006c 08BD     		pop	{r3, pc}
 246              	.LVL24:
 247              	.L26:
 248              	.LCFI4:
 249              		.cfi_restore_state
 150:Core/Src/robot/robot_functions.cpp **** 			steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180
 250              		.loc 2 150 0
 251 006e 9FED138A 		vldr.32	s16, .L27+36
 252              	.LVL25:
 253 0072 F4E7     		b	.L16
 254              	.LVL26:
 255              	.L24:
 154:Core/Src/robot/robot_functions.cpp **** 			steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 1
 256              		.loc 2 154 0
 257 0074 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 15


 258              	.LVL27:
 259 0078 0BA3     		adr	r3, .L27+16
 260 007a D3E90023 		ldrd	r2, [r3]
 261 007e FFF7FEFF 		bl	__aeabi_dcmplt
 262              	.LVL28:
 263 0082 08B1     		cbz	r0, .L18
 264 0084 9FED0E8A 		vldr.32	s16, .L27+40
 265              	.LVL29:
 266              	.L18:
 154:Core/Src/robot/robot_functions.cpp **** 			steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 1
 267              		.loc 2 154 0 is_stmt 0 discriminator 4
 268 0088 B0EE480A 		vmov.f32	s0, s16
 269 008c 0A48     		ldr	r0, .L27+32
 270 008e FFF7FEFF 		bl	_ZN8steering9set_angleEf
 271              	.LVL30:
 158:Core/Src/robot/robot_functions.cpp **** }
 272              		.loc 2 158 0 is_stmt 1 discriminator 4
 273 0092 E9E7     		b	.L11
 274              	.L28:
 275 0094 AFF30080 		.align	3
 276              	.L27:
 277 0098 182D4454 		.word	1413754136
 278 009c FB210940 		.word	1074340347
 279 00a0 03515DC5 		.word	-983740157
 280 00a4 CCCC2040 		.word	1075891404
 281 00a8 03515DC5 		.word	-983740157
 282 00ac CCCC20C0 		.word	-1071592244
 283 00b0 00000000 		.word	.LANCHOR2
 284 00b4 00003443 		.word	1127481344
 285 00b8 00000000 		.word	steering
 286 00bc 66660641 		.word	1090938470
 287 00c0 666606C1 		.word	-1056545178
 288              		.cfi_endproc
 289              	.LFE495:
 291              		.global	__aeabi_dcmple
 292              		.section	.text._Z22correct_steering_anglef,"ax",%progbits
 293              		.align	1
 294              		.global	_Z22correct_steering_anglef
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	_Z22correct_steering_anglef:
 301              	.LFB496:
 167:Core/Src/robot/robot_functions.cpp **** {
 302              		.loc 2 167 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              	.LVL31:
 307 0000 08B5     		push	{r3, lr}
 308              	.LCFI5:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 3, -8
 311              		.cfi_offset 14, -4
 312 0002 2DED028B 		vpush.64	{d8}
 313              	.LCFI6:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 16


 314              		.cfi_def_cfa_offset 16
 315              		.cfi_offset 80, -16
 316              		.cfi_offset 81, -12
 168:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 317              		.loc 2 168 0
 318 0006 204B     		ldr	r3, .L42+16
 319 0008 D3ED007A 		vldr.32	s15, [r3]
 320 000c 30EE670A 		vsub.f32	s0, s0, s15
 321              	.LVL32:
 322 0010 DFED1E7A 		vldr.32	s15, .L42+20
 323 0014 60EE277A 		vmul.f32	s15, s0, s15
 324 0018 17EE900A 		vmov	r0, s15
 325 001c FFF7FEFF 		bl	__aeabi_f2d
 326              	.LVL33:
 327 0020 15A3     		adr	r3, .L42
 328 0022 D3E90023 		ldrd	r2, [r3]
 329 0026 FFF7FEFF 		bl	__aeabi_ddiv
 330              	.LVL34:
 331 002a FFF7FEFF 		bl	__aeabi_d2f
 332              	.LVL35:
 333 002e 08EE100A 		vmov	s16, r0
 334              	.LVL36:
 169:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (2*steering_angle_limit * 180 / PI))
 335              		.loc 2 169 0
 336 0032 F0EEC87A 		vabs.f32	s15, s16
 337 0036 17EE900A 		vmov	r0, s15
 338              	.LVL37:
 339 003a FFF7FEFF 		bl	__aeabi_f2d
 340              	.LVL38:
 341 003e 10A3     		adr	r3, .L42+8
 342 0040 D3E90023 		ldrd	r2, [r3]
 343 0044 FFF7FEFF 		bl	__aeabi_dcmple
 344              	.LVL39:
 345 0048 60B9     		cbnz	r0, .L41
 176:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 346              		.loc 2 176 0
 347 004a B5EEC08A 		vcmpe.f32	s16, #0
 348 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 349 0052 0DDD     		ble	.L39
 350 0054 9FED0E0A 		vldr.32	s0, .L42+24
 351              	.L33:
 176:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 352              		.loc 2 176 0 is_stmt 0 discriminator 4
 353 0058 0E48     		ldr	r0, .L42+28
 354 005a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 355              	.LVL40:
 356              	.L29:
 180:Core/Src/robot/robot_functions.cpp **** }
 357              		.loc 2 180 0 is_stmt 1
 358 005e BDEC028B 		vldm	sp!, {d8}
 359              	.LCFI7:
 360              		.cfi_remember_state
 361              		.cfi_restore 80
 362              		.cfi_restore 81
 363              		.cfi_def_cfa_offset 8
 364              	.LVL41:
 365 0062 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 17


 366              	.LVL42:
 367              	.L41:
 368              	.LCFI8:
 369              		.cfi_restore_state
 171:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 370              		.loc 2 171 0
 371 0064 9FED0C0A 		vldr.32	s0, .L42+32
 372 0068 0A48     		ldr	r0, .L42+28
 373 006a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 374              	.LVL43:
 375 006e F6E7     		b	.L29
 376              	.L39:
 176:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 377              		.loc 2 176 0
 378 0070 9FED0A0A 		vldr.32	s0, .L42+36
 379 0074 F0E7     		b	.L33
 380              	.L43:
 381 0076 00BF     		.align	3
 382              	.L42:
 383 0078 182D4454 		.word	1413754136
 384 007c FB210940 		.word	1074340347
 385 0080 03515DC5 		.word	-983740157
 386 0084 CCCC3040 		.word	1076939980
 387 0088 00000000 		.word	.LANCHOR2
 388 008c 00003443 		.word	1127481344
 389 0090 666606C1 		.word	-1056545178
 390 0094 00000000 		.word	steering
 391 0098 00000000 		.word	0
 392 009c 66660641 		.word	1090938470
 393              		.cfi_endproc
 394              	.LFE496:
 396              		.global	__aeabi_dmul
 397              		.global	__aeabi_dadd
 398              		.section	.text._Z13move_steeringif,"ax",%progbits
 399              		.align	1
 400              		.global	_Z13move_steeringif
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv4-sp-d16
 406              	_Z13move_steeringif:
 407              	.LFB494:
 110:Core/Src/robot/robot_functions.cpp **** {
 408              		.loc 2 110 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL44:
 413 0000 D0B5     		push	{r4, r6, r7, lr}
 414              	.LCFI9:
 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 4, -16
 417              		.cfi_offset 6, -12
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 2DED028B 		vpush.64	{d8}
 421              	.LCFI10:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 18


 422              		.cfi_def_cfa_offset 24
 423              		.cfi_offset 80, -24
 424              		.cfi_offset 81, -20
 425 0006 B0EE408A 		vmov.f32	s16, s0
 112:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 426              		.loc 2 112 0
 427 000a 07EE900A 		vmov	s15, r0	@ int
 428 000e B8EEE77A 		vcvt.f32.s32	s14, s15
 429 0012 234B     		ldr	r3, .L52+8
 430 0014 D3ED007A 		vldr.32	s15, [r3]
 431 0018 B4EE677A 		vcmp.f32	s14, s15
 432 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 433 0020 1DD1     		bne	.L45
 114:Core/Src/robot/robot_functions.cpp **** 		summation_angle += 1.3*robot_angle;
 434              		.loc 2 114 0
 435 0022 204B     		ldr	r3, .L52+12
 436 0024 1868     		ldr	r0, [r3]	@ float
 437              	.LVL45:
 438 0026 FFF7FEFF 		bl	__aeabi_f2d
 439              	.LVL46:
 440 002a 1BA3     		adr	r3, .L52
 441 002c D3E90023 		ldrd	r2, [r3]
 442 0030 FFF7FEFF 		bl	__aeabi_dmul
 443              	.LVL47:
 444 0034 0646     		mov	r6, r0
 445 0036 0F46     		mov	r7, r1
 446 0038 1B4C     		ldr	r4, .L52+16
 447 003a 2068     		ldr	r0, [r4]	@ float
 448 003c FFF7FEFF 		bl	__aeabi_f2d
 449              	.LVL48:
 450 0040 3246     		mov	r2, r6
 451 0042 3B46     		mov	r3, r7
 452 0044 FFF7FEFF 		bl	__aeabi_dadd
 453              	.LVL49:
 454 0048 FFF7FEFF 		bl	__aeabi_d2f
 455              	.LVL50:
 456 004c 2060     		str	r0, [r4]	@ float
 115:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 457              		.loc 2 115 0
 458 004e 07EE900A 		vmov	s15, r0
 459 0052 F1EE677A 		vneg.f32	s15, s15
 460              	.LVL51:
 116:Core/Src/robot/robot_functions.cpp **** 		angle /= 1000;
 461              		.loc 2 116 0
 462 0056 9FED157A 		vldr.32	s14, .L52+20
 463 005a 87EE878A 		vdiv.f32	s16, s15, s14
 464              	.LVL52:
 465              	.L45:
 118:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 466              		.loc 2 118 0
 467 005e 1448     		ldr	r0, .L52+24
 468 0060 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 469              	.LVL53:
 470 0064 50B1     		cbz	r0, .L50
 123:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 471              		.loc 2 123 0
 472 0066 1248     		ldr	r0, .L52+24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 19


 473 0068 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 474              	.LVL54:
 475 006c 0128     		cmp	r0, #1
 476 006e 0CD0     		beq	.L51
 131:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 477              		.loc 2 131 0
 478 0070 9FED100A 		vldr.32	s0, .L52+28
 479 0074 1048     		ldr	r0, .L52+32
 480 0076 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 481              	.LVL55:
 133:Core/Src/robot/robot_functions.cpp **** }
 482              		.loc 2 133 0
 483 007a 03E0     		b	.L44
 484              	.L50:
 121:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 485              		.loc 2 121 0
 486 007c B0EE480A 		vmov.f32	s0, s16
 487 0080 FFF7FEFF 		bl	_Z9set_anglef
 488              	.LVL56:
 489              	.L44:
 133:Core/Src/robot/robot_functions.cpp **** }
 490              		.loc 2 133 0
 491 0084 BDEC028B 		vldm	sp!, {d8}
 492              	.LCFI11:
 493              		.cfi_remember_state
 494              		.cfi_restore 80
 495              		.cfi_restore 81
 496              		.cfi_def_cfa_offset 16
 497              	.LVL57:
 498 0088 D0BD     		pop	{r4, r6, r7, pc}
 499              	.LVL58:
 500              	.L51:
 501              	.LCFI12:
 502              		.cfi_restore_state
 126:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 503              		.loc 2 126 0
 504 008a B0EE480A 		vmov.f32	s0, s16
 505 008e FFF7FEFF 		bl	_Z22correct_steering_anglef
 506              	.LVL59:
 507 0092 F7E7     		b	.L44
 508              	.L53:
 509 0094 AFF30080 		.align	3
 510              	.L52:
 511 0098 CDCCCCCC 		.word	-858993459
 512 009c CCCCF43F 		.word	1073007820
 513 00a0 00000000 		.word	steps
 514 00a4 00000000 		.word	.LANCHOR2
 515 00a8 00000000 		.word	.LANCHOR3
 516 00ac 00007A44 		.word	1148846080
 517 00b0 00000000 		.word	leg
 518 00b4 00000000 		.word	0
 519 00b8 00000000 		.word	steering
 520              		.cfi_endproc
 521              	.LFE494:
 523              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 524              		.align	1
 525              		.global	_Z21calculate_robot_anglev
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 20


 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_Z21calculate_robot_anglev:
 532              	.LFB497:
 190:Core/Src/robot/robot_functions.cpp **** {
 533              		.loc 2 190 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 08B5     		push	{r3, lr}
 538              	.LCFI13:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
 542 0002 2DED028B 		vpush.64	{d8}
 543              	.LCFI14:
 544              		.cfi_def_cfa_offset 16
 545              		.cfi_offset 80, -16
 546              		.cfi_offset 81, -12
 191:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 547              		.loc 2 191 0
 548 0006 204B     		ldr	r3, .L60+8
 549 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 000a EBB1     		cbz	r3, .L55
 551              	.LVL60:
 552              	.LBB117:
 553              	.LBB118:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 554              		.loc 1 36 0
 555 000c 1F4B     		ldr	r3, .L60+12
 556 000e 93ED027A 		vldr.32	s14, [r3, #8]
 557              	.LVL61:
 558              	.LBE118:
 559              	.LBE117:
 560              	.LBB119:
 561              	.LBB120:
 562 0012 1F4B     		ldr	r3, .L60+16
 563 0014 D3ED027A 		vldr.32	s15, [r3, #8]
 564              	.LVL62:
 565              	.LBE120:
 566              	.LBE119:
 193:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 567              		.loc 2 193 0
 568 0018 77EE677A 		vsub.f32	s15, s14, s15
 569 001c 17EE900A 		vmov	r0, s15
 570 0020 FFF7FEFF 		bl	__aeabi_f2d
 571              	.LVL63:
 572 0024 16A3     		adr	r3, .L60
 573 0026 D3E90023 		ldrd	r2, [r3]
 574 002a FFF7FEFF 		bl	__aeabi_dmul
 575              	.LVL64:
 576 002e 0022     		movs	r2, #0
 577 0030 184B     		ldr	r3, .L60+20
 578 0032 FFF7FEFF 		bl	__aeabi_ddiv
 579              	.LVL65:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 21


 580 0036 FFF7FEFF 		bl	__aeabi_d2f
 581              	.LVL66:
 582 003a 174B     		ldr	r3, .L60+24
 583 003c 1860     		str	r0, [r3]	@ float
 194:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 584              		.loc 2 194 0
 585 003e 174B     		ldr	r3, .L60+28
 586 0040 1860     		str	r0, [r3]	@ float
 587              	.L54:
 211:Core/Src/robot/robot_functions.cpp **** }
 588              		.loc 2 211 0
 589 0042 BDEC028B 		vldm	sp!, {d8}
 590              	.LCFI15:
 591              		.cfi_remember_state
 592              		.cfi_restore 80
 593              		.cfi_restore 81
 594              		.cfi_def_cfa_offset 8
 595 0046 08BD     		pop	{r3, pc}
 596              	.L55:
 597              	.LCFI16:
 598              		.cfi_restore_state
 199:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 599              		.loc 2 199 0
 600 0048 1548     		ldr	r0, .L60+32
 601 004a FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 602              	.LVL67:
 603 004e 58B9     		cbnz	r0, .L59
 206:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 604              		.loc 2 206 0
 605 0050 114B     		ldr	r3, .L60+24
 606 0052 93ED008A 		vldr.32	s16, [r3]
 607              	.LVL68:
 608              	.LBB121:
 609              	.LBB122:
 610              		.file 4 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 22


  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 23


  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 611              		.loc 4 112 0
 612 0056 1348     		ldr	r0, .L60+36
 613 0058 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 614              	.LVL69:
 615              	.LBE122:
 616              	.LBE121:
 206:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 617              		.loc 2 206 0
 618 005c 38EE400A 		vsub.f32	s0, s16, s0
 619 0060 0E4B     		ldr	r3, .L60+28
 620 0062 83ED000A 		vstr.32	s0, [r3]
 211:Core/Src/robot/robot_functions.cpp **** }
 621              		.loc 2 211 0
 622 0066 ECE7     		b	.L54
 623              	.L59:
 624              	.LVL70:
 625              	.LBB123:
 626              	.LBB124:
 627              		.loc 4 112 0
 628 0068 0E48     		ldr	r0, .L60+36
 629 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 630              	.LVL71:
 631              	.LBE124:
 632              	.LBE123:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 24


 201:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 633              		.loc 2 201 0
 634 006e 0B4B     		ldr	r3, .L60+28
 635 0070 D3ED007A 		vldr.32	s15, [r3]
 636 0074 30EE270A 		vadd.f32	s0, s0, s15
 637 0078 074B     		ldr	r3, .L60+24
 638 007a 83ED000A 		vstr.32	s0, [r3]
 639 007e E0E7     		b	.L54
 640              	.L61:
 641              		.align	3
 642              	.L60:
 643 0080 182D4454 		.word	1413754136
 644 0084 FB210940 		.word	1074340347
 645 0088 00000000 		.word	USE_IMU_FLAG
 646 008c 00000000 		.word	.LANCHOR0
 647 0090 00000000 		.word	.LANCHOR1
 648 0094 00806640 		.word	1080459264
 649 0098 00000000 		.word	.LANCHOR2
 650 009c 00000000 		.word	.LANCHOR4
 651 00a0 00000000 		.word	leg
 652 00a4 0C000000 		.word	steering+12
 653              		.cfi_endproc
 654              	.LFE497:
 656              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 657              		.align	1
 658              		.global	_Z23initialize_leg_positionv
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
 664              	_Z23initialize_leg_positionv:
 665              	.LFB499:
 272:Core/Src/robot/robot_functions.cpp **** {
 666              		.loc 2 272 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670 0000 08B5     		push	{r3, lr}
 671              	.LCFI17:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 675              	.LVL72:
 676              	.LBB125:
 677              	.LBB126:
 678              		.file 5 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 25


  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 679              		.loc 5 47 0
 680 0002 3748     		ldr	r0, .L80+16
 681 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 682              	.LVL73:
 683              	.LBE126:
 684              	.LBE125:
 280:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 685              		.loc 2 280 0
 686 0008 10EE100A 		vmov	r0, s0
 687 000c FFF7FEFF 		bl	__aeabi_f2d
 688              	.LVL74:
 689 0010 2FA3     		adr	r3, .L80
 690 0012 D3E90023 		ldrd	r2, [r3]
 691 0016 FFF7FEFF 		bl	__aeabi_dcmpgt
 692              	.LVL75:
 693 001a 80B1     		cbz	r0, .L63
 694              	.LVL76:
 695              	.LBB127:
 696              	.LBB128:
 697              		.loc 5 47 0
 698 001c 3048     		ldr	r0, .L80+16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 26


 699 001e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 700              	.LVL77:
 701              	.LBE128:
 702              	.LBE127:
 281:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 703              		.loc 2 281 0
 704 0022 10EE100A 		vmov	r0, s0
 705 0026 FFF7FEFF 		bl	__aeabi_f2d
 706              	.LVL78:
 280:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 707              		.loc 2 280 0
 708 002a 2BA3     		adr	r3, .L80+8
 709 002c D3E90023 		ldrd	r2, [r3]
 710 0030 FFF7FEFF 		bl	__aeabi_dcmplt
 711              	.LVL79:
 712 0034 18B1     		cbz	r0, .L63
 713              	.LVL80:
 714              	.LBB129:
 715              	.LBB130:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 716              		.loc 5 45 0
 717 0036 2B4B     		ldr	r3, .L80+20
 718 0038 1B69     		ldr	r3, [r3, #16]
 719              	.LVL81:
 720              	.LBE130:
 721              	.LBE129:
 281:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 722              		.loc 2 281 0
 723 003a 002B     		cmp	r3, #0
 724 003c 32D1     		bne	.L79
 725              	.L63:
 288:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 726              		.loc 2 288 0 discriminator 3
 727 003e B0EE080A 		vmov.f32	s0, #3.0e+0
 728 0042 2848     		ldr	r0, .L80+20
 729 0044 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 730              	.LVL82:
 289:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 731              		.loc 2 289 0 discriminator 3
 732 0048 274B     		ldr	r3, .L80+24
 733 004a 0022     		movs	r2, #0
 734 004c 1A70     		strb	r2, [r3]
 735              	.L66:
 736              	.LVL83:
 737              	.LBB131:
 738              	.LBB132:
 739              		.loc 5 47 0
 740 004e 2748     		ldr	r0, .L80+28
 741 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 742              	.LVL84:
 743              	.LBE132:
 744              	.LBE131:
 292:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 745              		.loc 2 292 0
 746 0054 10EE100A 		vmov	r0, s0
 747 0058 FFF7FEFF 		bl	__aeabi_f2d
 748              	.LVL85:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 27


 293:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 749              		.loc 2 293 0
 750 005c 1CA3     		adr	r3, .L80
 751 005e D3E90023 		ldrd	r2, [r3]
 752 0062 FFF7FEFF 		bl	__aeabi_dcmpgt
 753              	.LVL86:
 754 0066 78B1     		cbz	r0, .L67
 755              	.LVL87:
 756              	.LBB133:
 757              	.LBB134:
 758              		.loc 5 47 0
 759 0068 2048     		ldr	r0, .L80+28
 760 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 761              	.LVL88:
 762              	.LBE134:
 763              	.LBE133:
 293:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 764              		.loc 2 293 0
 765 006e 10EE100A 		vmov	r0, s0
 766 0072 FFF7FEFF 		bl	__aeabi_f2d
 767              	.LVL89:
 292:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 768              		.loc 2 292 0
 769 0076 18A3     		adr	r3, .L80+8
 770 0078 D3E90023 		ldrd	r2, [r3]
 771 007c FFF7FEFF 		bl	__aeabi_dcmplt
 772              	.LVL90:
 773 0080 10B1     		cbz	r0, .L67
 774              	.LVL91:
 775              	.LBB135:
 776              	.LBB136:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 777              		.loc 5 45 0
 778 0082 184B     		ldr	r3, .L80+20
 779 0084 9B6E     		ldr	r3, [r3, #104]
 780              	.LVL92:
 781              	.LBE136:
 782              	.LBE135:
 293:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 783              		.loc 2 293 0
 784 0086 B3B9     		cbnz	r3, .L70
 785              	.L67:
 300:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 786              		.loc 2 300 0 discriminator 2
 787 0088 B0EE080A 		vmov.f32	s0, #3.0e+0
 788 008c 1848     		ldr	r0, .L80+32
 789 008e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 790              	.LVL93:
 301:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 791              		.loc 2 301 0 discriminator 2
 792 0092 184B     		ldr	r3, .L80+36
 793 0094 0022     		movs	r2, #0
 794 0096 1A70     		strb	r2, [r3]
 795              	.L71:
 304:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 796              		.loc 2 304 0
 797 0098 134B     		ldr	r3, .L80+24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 28


 798 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 799 009c A3B1     		cbz	r3, .L73
 304:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 800              		.loc 2 304 0 is_stmt 0 discriminator 1
 801 009e 154B     		ldr	r3, .L80+36
 802 00a0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 803              	.L72:
 313:Core/Src/robot/robot_functions.cpp **** }
 804              		.loc 2 313 0 is_stmt 1
 805 00a2 08BD     		pop	{r3, pc}
 806              	.L79:
 283:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 807              		.loc 2 283 0
 808 00a4 9FED140A 		vldr.32	s0, .L80+40
 809 00a8 0E48     		ldr	r0, .L80+20
 810 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 811              	.LVL94:
 284:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 812              		.loc 2 284 0
 813 00ae 0E4B     		ldr	r3, .L80+24
 814 00b0 0122     		movs	r2, #1
 815 00b2 1A70     		strb	r2, [r3]
 816 00b4 CBE7     		b	.L66
 817              	.L70:
 295:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 818              		.loc 2 295 0
 819 00b6 9FED100A 		vldr.32	s0, .L80+40
 820 00ba 0D48     		ldr	r0, .L80+32
 821 00bc FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 822              	.LVL95:
 296:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 823              		.loc 2 296 0
 824 00c0 0C4B     		ldr	r3, .L80+36
 825 00c2 0122     		movs	r2, #1
 826 00c4 1A70     		strb	r2, [r3]
 827 00c6 E7E7     		b	.L71
 828              	.L73:
 311:Core/Src/robot/robot_functions.cpp **** 		return false;
 829              		.loc 2 311 0
 830 00c8 0020     		movs	r0, #0
 831 00ca EAE7     		b	.L72
 832              	.L81:
 833 00cc AFF30080 		.align	3
 834              	.L80:
 835 00d0 70D9F97F 		.word	2147080560
 836 00d4 12E6F63F 		.word	1073145362
 837 00d8 BF808E28 		.word	680427711
 838 00dc E45DFB3F 		.word	1073438180
 839 00e0 3C000000 		.word	leg+60
 840 00e4 00000000 		.word	leg
 841 00e8 00000000 		.word	.LANCHOR5
 842 00ec 94000000 		.word	leg+148
 843 00f0 58000000 		.word	leg+88
 844 00f4 00000000 		.word	.LANCHOR6
 845 00f8 00000000 		.word	0
 846              		.cfi_endproc
 847              	.LFE499:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 29


 849              		.global	__aeabi_d2iz
 850              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 851              		.align	1
 852              		.global	_Z28initialize_steering_positionv
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 856              		.fpu fpv4-sp-d16
 858              	_Z28initialize_steering_positionv:
 859              	.LFB500:
 323:Core/Src/robot/robot_functions.cpp **** {
 860              		.loc 2 323 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864 0000 10B5     		push	{r4, lr}
 865              	.LCFI18:
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 4, -8
 868              		.cfi_offset 14, -4
 869              	.LVL96:
 870              	.LBB137:
 871              	.LBB138:
 872              		.loc 4 112 0
 873 0002 1F48     		ldr	r0, .L89+8
 874 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 875              	.LVL97:
 876              	.LBE138:
 877              	.LBE137:
 324:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 878              		.loc 2 324 0
 879 0008 DFED1E7A 		vldr.32	s15, .L89+12
 880 000c 60EE277A 		vmul.f32	s15, s0, s15
 881 0010 17EE900A 		vmov	r0, s15
 882 0014 FFF7FEFF 		bl	__aeabi_f2d
 883              	.LVL98:
 884 0018 17A3     		adr	r3, .L89
 885 001a D3E90023 		ldrd	r2, [r3]
 886 001e FFF7FEFF 		bl	__aeabi_ddiv
 887              	.LVL99:
 888 0022 FFF7FEFF 		bl	__aeabi_d2iz
 889              	.LVL100:
 890 0026 0146     		mov	r1, r0
 891 0028 1748     		ldr	r0, .L89+16
 892 002a FFF7FEFF 		bl	printf
 893              	.LVL101:
 327:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 894              		.loc 2 327 0
 895 002e FFF7FEFF 		bl	HAL_GetTick
 896              	.LVL102:
 897 0032 164B     		ldr	r3, .L89+20
 898 0034 1B68     		ldr	r3, [r3]
 899 0036 C01A     		subs	r0, r0, r3
 900 0038 B0F5FA7F 		cmp	r0, #500
 901 003c 09D2     		bcs	.L87
 333:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 902              		.loc 2 333 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 30


 903 003e 144B     		ldr	r3, .L89+24
 904 0040 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 905 0042 9CB9     		cbnz	r4, .L88
 340:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 906              		.loc 2 340 0
 907 0044 B6EE000A 		vmov.f32	s0, #5.0e-1
 908 0048 1248     		ldr	r0, .L89+28
 909 004a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 910              	.LVL103:
 911              	.L84:
 343:Core/Src/robot/robot_functions.cpp **** }
 912              		.loc 2 343 0
 913 004e 2046     		mov	r0, r4
 914 0050 10BD     		pop	{r4, pc}
 915              	.L87:
 329:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 916              		.loc 2 329 0
 917 0052 9FED110A 		vldr.32	s0, .L89+32
 918 0056 0F48     		ldr	r0, .L89+28
 919 0058 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 920              	.LVL104:
 330:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 921              		.loc 2 330 0
 922 005c 0122     		movs	r2, #1
 923 005e 4FF48051 		mov	r1, #4096
 924 0062 0E48     		ldr	r0, .L89+36
 925 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 926              	.LVL105:
 331:Core/Src/robot/robot_functions.cpp **** 		return true;
 927              		.loc 2 331 0
 928 0068 0124     		movs	r4, #1
 929 006a F0E7     		b	.L84
 930              	.L88:
 335:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 931              		.loc 2 335 0
 932 006c 9FED0A0A 		vldr.32	s0, .L89+32
 933 0070 0848     		ldr	r0, .L89+28
 934 0072 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 935              	.LVL106:
 336:Core/Src/robot/robot_functions.cpp **** 		return true;
 936              		.loc 2 336 0
 937 0076 EAE7     		b	.L84
 938              	.L90:
 939              		.align	3
 940              	.L89:
 941 0078 182D4454 		.word	1413754136
 942 007c FB210940 		.word	1074340347
 943 0080 0C000000 		.word	steering+12
 944 0084 00003443 		.word	1127481344
 945 0088 00000000 		.word	.LC0
 946 008c 00000000 		.word	.LANCHOR7
 947 0090 00000000 		.word	.LANCHOR8
 948 0094 00000000 		.word	steering
 949 0098 00000000 		.word	0
 950 009c 000C0240 		.word	1073875968
 951              		.cfi_endproc
 952              	.LFE500:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 31


 954              		.section	.text._Z19initialize_positionv,"ax",%progbits
 955              		.align	1
 956              		.global	_Z19initialize_positionv
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu fpv4-sp-d16
 962              	_Z19initialize_positionv:
 963              	.LFB498:
 221:Core/Src/robot/robot_functions.cpp **** {
 964              		.loc 2 221 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 969              	.LCFI19:
 970              		.cfi_def_cfa_offset 24
 971              		.cfi_offset 4, -24
 972              		.cfi_offset 5, -20
 973              		.cfi_offset 6, -16
 974              		.cfi_offset 7, -12
 975              		.cfi_offset 8, -8
 976              		.cfi_offset 14, -4
 977 0004 2DED028B 		vpush.64	{d8}
 978              	.LCFI20:
 979              		.cfi_def_cfa_offset 32
 980              		.cfi_offset 80, -32
 981              		.cfi_offset 81, -28
 222:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 982              		.loc 2 222 0
 983 0008 FFF7FEFF 		bl	HAL_GetTick
 984              	.LVL107:
 985 000c 0646     		mov	r6, r0
 986              	.LVL108:
 987              	.L92:
 225:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 988              		.loc 2 225 0
 989 000e FFF7FEFF 		bl	HAL_GetTick
 990              	.LVL109:
 991 0012 801B     		subs	r0, r0, r6
 992 0014 0928     		cmp	r0, #9
 993 0016 FAD9     		bls	.L92
 227:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 994              		.loc 2 227 0
 995 0018 FFF7FEFF 		bl	HAL_GetTick
 996              	.LVL110:
 997 001c 0646     		mov	r6, r0
 998              	.LVL111:
 228:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 999              		.loc 2 228 0
 1000 001e 3A48     		ldr	r0, .L100
 1001              	.LVL112:
 1002 0020 FFF7FEFF 		bl	printf
 1003              	.LVL113:
 229:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 1004              		.loc 2 229 0
 1005 0024 FFF7FEFF 		bl	_Z23initialize_leg_positionv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 32


 1006              	.LVL114:
 1007 0028 0028     		cmp	r0, #0
 1008 002a F0D0     		beq	.L92
 1009              	.LBB139:
 233:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1010              		.loc 2 233 0
 1011 002c 0024     		movs	r4, #0
 1012 002e 00E0     		b	.L96
 1013              	.LVL115:
 1014              	.L95:
 233:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1015              		.loc 2 233 0 is_stmt 0 discriminator 2
 1016 0030 0134     		adds	r4, r4, #1
 1017              	.LVL116:
 1018              	.L96:
 233:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1019              		.loc 2 233 0 discriminator 1
 1020 0032 364B     		ldr	r3, .L100+4
 1021 0034 9C42     		cmp	r4, r3
 1022 0036 3CDC     		bgt	.L94
 235:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1023              		.loc 2 235 0 is_stmt 1
 1024 0038 FFF7FEFF 		bl	HAL_GetTick
 1025              	.LVL117:
 1026 003c 801B     		subs	r0, r0, r6
 1027 003e 0928     		cmp	r0, #9
 1028 0040 F6D9     		bls	.L95
 237:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1029              		.loc 2 237 0
 1030 0042 FFF7FEFF 		bl	HAL_GetTick
 1031              	.LVL118:
 1032 0046 0646     		mov	r6, r0
 1033              	.LVL119:
 238:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1034              		.loc 2 238 0
 1035 0048 3148     		ldr	r0, .L100+8
 1036              	.LVL120:
 1037 004a FFF7FEFF 		bl	printf
 1038              	.LVL121:
 239:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 1039              		.loc 2 239 0
 1040 004e 314D     		ldr	r5, .L100+12
 1041 0050 0027     		movs	r7, #0
 1042 0052 2F61     		str	r7, [r5, #16]
 240:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 1043              		.loc 2 240 0
 1044 0054 AF66     		str	r7, [r5, #104]
 241:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 1045              		.loc 2 241 0
 1046 0056 9FED308A 		vldr.32	s16, .L100+16
 1047 005a B0EE480A 		vmov.f32	s0, s16
 1048 005e 2846     		mov	r0, r5
 1049 0060 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1050              	.LVL122:
 242:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 1051              		.loc 2 242 0
 1052 0064 05F15808 		add	r8, r5, #88
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 33


 1053 0068 B0EE480A 		vmov.f32	s0, s16
 1054 006c 4046     		mov	r0, r8
 1055 006e FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1056              	.LVL123:
 1057              	.LBB140:
 1058              	.LBB141:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1059              		.loc 5 40 0
 1060 0072 B0EE480A 		vmov.f32	s0, s16
 1061 0076 05F13C00 		add	r0, r5, #60
 1062 007a FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1063              	.LVL124:
 1064              	.LBE141:
 1065              	.LBE140:
 1066              	.LBB142:
 1067              	.LBB143:
 1068 007e B0EE480A 		vmov.f32	s0, s16
 1069 0082 05F19400 		add	r0, r5, #148
 1070 0086 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1071              	.LVL125:
 1072              	.LBE143:
 1073              	.LBE142:
 245:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1074              		.loc 2 245 0
 1075 008a 9FED248A 		vldr.32	s16, .L100+20
 1076 008e B0EE480A 		vmov.f32	s0, s16
 1077 0092 2846     		mov	r0, r5
 1078 0094 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1079              	.LVL126:
 246:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1080              		.loc 2 246 0
 1081 0098 B0EE480A 		vmov.f32	s0, s16
 1082 009c 4046     		mov	r0, r8
 1083 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1084              	.LVL127:
 247:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 1085              		.loc 2 247 0
 1086 00a2 B0EE480A 		vmov.f32	s0, s16
 1087 00a6 1E48     		ldr	r0, .L100+24
 1088 00a8 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1089              	.LVL128:
 248:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 1090              		.loc 2 248 0
 1091 00ac 1D4B     		ldr	r3, .L100+28
 1092 00ae 1F70     		strb	r7, [r3]
 1093 00b0 BEE7     		b	.L95
 1094              	.L94:
 1095              	.LBE139:
 251:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1096              		.loc 2 251 0
 1097 00b2 FFF7FEFF 		bl	HAL_GetTick
 1098              	.LVL129:
 1099 00b6 1C4B     		ldr	r3, .L100+32
 1100 00b8 1860     		str	r0, [r3]
 1101              	.LVL130:
 1102              	.L97:
 254:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 34


 1103              		.loc 2 254 0
 1104 00ba FFF7FEFF 		bl	HAL_GetTick
 1105              	.LVL131:
 1106 00be 801B     		subs	r0, r0, r6
 1107 00c0 0928     		cmp	r0, #9
 1108 00c2 FAD9     		bls	.L97
 256:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1109              		.loc 2 256 0
 1110 00c4 FFF7FEFF 		bl	HAL_GetTick
 1111              	.LVL132:
 1112 00c8 0646     		mov	r6, r0
 1113              	.LVL133:
 257:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1114              		.loc 2 257 0
 1115 00ca FFF7FEFF 		bl	HAL_GetTick
 1116              	.LVL134:
 1117 00ce 164B     		ldr	r3, .L100+32
 1118 00d0 1A68     		ldr	r2, [r3]
 1119 00d2 0146     		mov	r1, r0
 1120 00d4 1548     		ldr	r0, .L100+36
 1121 00d6 FFF7FEFF 		bl	printf
 1122              	.LVL135:
 258:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1123              		.loc 2 258 0
 1124 00da 9FED108A 		vldr.32	s16, .L100+20
 1125 00de 0D4C     		ldr	r4, .L100+12
 1126 00e0 B0EE480A 		vmov.f32	s0, s16
 1127 00e4 2046     		mov	r0, r4
 1128 00e6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1129              	.LVL136:
 259:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1130              		.loc 2 259 0
 1131 00ea B0EE480A 		vmov.f32	s0, s16
 1132 00ee 04F15800 		add	r0, r4, #88
 1133 00f2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1134              	.LVL137:
 260:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1135              		.loc 2 260 0
 1136 00f6 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1137              	.LVL138:
 1138 00fa 0028     		cmp	r0, #0
 1139 00fc DDD0     		beq	.L97
 264:Core/Src/robot/robot_functions.cpp **** }
 1140              		.loc 2 264 0
 1141 00fe BDEC028B 		vldm	sp!, {d8}
 1142              	.LCFI21:
 1143              		.cfi_restore 80
 1144              		.cfi_restore 81
 1145              		.cfi_def_cfa_offset 24
 1146 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1147              	.LVL139:
 1148              	.L101:
 1149 0106 00BF     		.align	2
 1150              	.L100:
 1151 0108 00000000 		.word	.LC1
 1152 010c BFC62D00 		.word	2999999
 1153 0110 20000000 		.word	.LC2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 35


 1154 0114 00000000 		.word	leg
 1155 0118 DB0FC93F 		.word	1070141403
 1156 011c 00000000 		.word	0
 1157 0120 00000000 		.word	steering
 1158 0124 00000000 		.word	.LANCHOR8
 1159 0128 00000000 		.word	.LANCHOR7
 1160 012c 34000000 		.word	.LC3
 1161              		.cfi_endproc
 1162              	.LFE498:
 1164              		.section	.text._Z11getup_n_runv,"ax",%progbits
 1165              		.align	1
 1166              		.global	_Z11getup_n_runv
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu fpv4-sp-d16
 1172              	_Z11getup_n_runv:
 1173              	.LFB501:
 346:Core/Src/robot/robot_functions.cpp **** {
 1174              		.loc 2 346 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178 0000 10B5     		push	{r4, lr}
 1179              	.LCFI22:
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 4, -8
 1182              		.cfi_offset 14, -4
 1183 0002 2DED028B 		vpush.64	{d8}
 1184              	.LCFI23:
 1185              		.cfi_def_cfa_offset 16
 1186              		.cfi_offset 80, -16
 1187              		.cfi_offset 81, -12
 1188              	.LVL140:
 351:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(0);
 1189              		.loc 2 351 0
 1190 0006 2A4C     		ldr	r4, .L111+16
 1191 0008 9FED2A0A 		vldr.32	s0, .L111+20
 1192 000c 2046     		mov	r0, r4
 1193 000e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1194              	.LVL141:
 1195              	.LBB144:
 1196              	.LBB145:
 1197              		.loc 5 47 0
 1198 0012 04F19400 		add	r0, r4, #148
 1199 0016 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1200              	.LVL142:
 1201              	.LBE145:
 1202              	.LBE144:
 353:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1203              		.loc 2 353 0
 1204 001a 10EE100A 		vmov	r0, s0
 1205 001e FFF7FEFF 		bl	__aeabi_f2d
 1206              	.LVL143:
 1207 0022 1FA3     		adr	r3, .L111
 1208 0024 D3E90023 		ldrd	r2, [r3]
 1209 0028 FFF7FEFF 		bl	__aeabi_dcmpgt
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 36


 1210              	.LVL144:
 1211 002c 68B1     		cbz	r0, .L103
 1212              	.LVL145:
 1213              	.LBB146:
 1214              	.LBB147:
 1215              		.loc 5 47 0
 1216 002e 04F19400 		add	r0, r4, #148
 1217 0032 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1218              	.LVL146:
 1219              	.LBE147:
 1220              	.LBE146:
 354:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 1221              		.loc 2 354 0
 1222 0036 10EE100A 		vmov	r0, s0
 1223 003a FFF7FEFF 		bl	__aeabi_f2d
 1224              	.LVL147:
 353:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1225              		.loc 2 353 0
 1226 003e 1AA3     		adr	r3, .L111+8
 1227 0040 D3E90023 		ldrd	r2, [r3]
 1228 0044 FFF7FEFF 		bl	__aeabi_dcmplt
 1229              	.LVL148:
 1230 0048 40B9     		cbnz	r0, .L110
 1231              	.L103:
 366:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 1232              		.loc 2 366 0 discriminator 4
 1233 004a B0EE080A 		vmov.f32	s0, #3.0e+0
 1234 004e 1A48     		ldr	r0, .L111+24
 1235 0050 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1236              	.LVL149:
 368:Core/Src/robot/robot_functions.cpp **** 		return false;
 1237              		.loc 2 368 0 discriminator 4
 1238 0054 0020     		movs	r0, #0
 1239              	.L106:
 371:Core/Src/robot/robot_functions.cpp **** }
 1240              		.loc 2 371 0
 1241 0056 BDEC028B 		vldm	sp!, {d8}
 1242              	.LCFI24:
 1243              		.cfi_remember_state
 1244              		.cfi_restore 80
 1245              		.cfi_restore 81
 1246              		.cfi_def_cfa_offset 8
 1247 005a 10BD     		pop	{r4, pc}
 1248              	.L110:
 1249              	.LCFI25:
 1250              		.cfi_restore_state
 356:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1251              		.loc 2 356 0
 1252 005c 5834     		adds	r4, r4, #88
 1253 005e 9FED150A 		vldr.32	s0, .L111+20
 1254 0062 2046     		mov	r0, r4
 1255 0064 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1256              	.LVL150:
 1257              	.LBB148:
 1258              	.LBB149:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1259              		.loc 5 40 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 37


 1260 0068 9FED148A 		vldr.32	s16, .L111+28
 1261 006c B0EE480A 		vmov.f32	s0, s16
 1262 0070 A4F11C00 		sub	r0, r4, #28
 1263 0074 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1264              	.LVL151:
 1265              	.LBE149:
 1266              	.LBE148:
 1267              	.LBB150:
 1268              	.LBB151:
 1269 0078 B0EE480A 		vmov.f32	s0, s16
 1270 007c 04F13C00 		add	r0, r4, #60
 1271 0080 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1272              	.LVL152:
 1273              	.LBE151:
 1274              	.LBE150:
 359:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 1275              		.loc 2 359 0
 1276 0084 B0EE480A 		vmov.f32	s0, s16
 1277 0088 A4F15800 		sub	r0, r4, #88
 1278 008c FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1279              	.LVL153:
 360:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 1280              		.loc 2 360 0
 1281 0090 B0EE480A 		vmov.f32	s0, s16
 1282 0094 2046     		mov	r0, r4
 1283 0096 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1284              	.LVL154:
 362:Core/Src/robot/robot_functions.cpp **** 		return true;
 1285              		.loc 2 362 0
 1286 009a 0120     		movs	r0, #1
 1287 009c DBE7     		b	.L106
 1288              	.L112:
 1289 009e 00BF     		.align	3
 1290              	.L111:
 1291 00a0 44031FEA 		.word	-367066300
 1292 00a4 0604F83F 		.word	1073218566
 1293 00a8 EC5669BE 		.word	-1100392724
 1294 00ac EF3FFA3F 		.word	1073364975
 1295 00b0 00000000 		.word	leg
 1296 00b4 00000000 		.word	0
 1297 00b8 58000000 		.word	leg+88
 1298 00bc DB0FC93F 		.word	1070141403
 1299              		.cfi_endproc
 1300              	.LFE501:
 1302              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1303              		.align	1
 1304              		.global	_Z15calculate_datasv
 1305              		.syntax unified
 1306              		.thumb
 1307              		.thumb_func
 1308              		.fpu fpv4-sp-d16
 1310              	_Z15calculate_datasv:
 1311              	.LFB502:
 381:Core/Src/robot/robot_functions.cpp **** {
 1312              		.loc 2 381 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 38


 1315              		@ frame_needed = 0, uses_anonymous_args = 0
 1316 0000 10B5     		push	{r4, lr}
 1317              	.LCFI26:
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 4, -8
 1320              		.cfi_offset 14, -4
 1321 0002 84B0     		sub	sp, sp, #16
 1322              	.LCFI27:
 1323              		.cfi_def_cfa_offset 24
 382:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 1324              		.loc 2 382 0
 1325 0004 0C4C     		ldr	r4, .L115
 1326 0006 2046     		mov	r0, r4
 1327 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1328              	.LVL155:
 383:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 1329              		.loc 2 383 0
 1330 000c 04F15800 		add	r0, r4, #88
 1331 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1332              	.LVL156:
 1333              	.LBB152:
 1334              	.LBB153:
 102:Core/Inc/devs/steering.h **** 
 1335              		.loc 4 102 0
 1336 0014 0948     		ldr	r0, .L115+4
 1337 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1338              	.LVL157:
 1339              	.LBE153:
 1340              	.LBE152:
 385:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 1341              		.loc 2 385 0
 1342 001a 01AC     		add	r4, sp, #4
 1343 001c 0A21     		movs	r1, #10
 1344 001e 2046     		mov	r0, r4
 1345 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1346              	.LVL158:
 1347 0024 064B     		ldr	r3, .L115+8
 1348 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1349 002a 83E80700 		stm	r3, {r0, r1, r2}
 386:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 1350              		.loc 2 386 0
 1351 002e FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1352              	.LVL159:
 389:Core/Src/robot/robot_functions.cpp **** }
 1353              		.loc 2 389 0
 1354 0032 04B0     		add	sp, sp, #16
 1355              	.LCFI28:
 1356              		.cfi_def_cfa_offset 8
 1357              		@ sp needed
 1358 0034 10BD     		pop	{r4, pc}
 1359              	.L116:
 1360 0036 00BF     		.align	2
 1361              	.L115:
 1362 0038 00000000 		.word	leg
 1363 003c 0C000000 		.word	steering+12
 1364 0040 00000000 		.word	.LANCHOR1
 1365              		.cfi_endproc
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 39


 1366              	.LFE502:
 1368              		.section	.text._Z14motion_profilefff,"ax",%progbits
 1369              		.align	1
 1370              		.global	_Z14motion_profilefff
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1374              		.fpu fpv4-sp-d16
 1376              	_Z14motion_profilefff:
 1377              	.LFB503:
 392:Core/Src/robot/robot_functions.cpp **** {
 1378              		.loc 2 392 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 1382              		@ link register save eliminated.
 1383              	.LVL160:
 396:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 1384              		.loc 2 396 0
 1385 0000 DFED237A 		vldr.32	s15, .L136
 1386 0004 B4EEE70A 		vcmpe.f32	s0, s15
 1387 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1388 000c 01DD     		ble	.L118
 398:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 1389              		.loc 2 398 0
 1390 000e 30EE670A 		vsub.f32	s0, s0, s15
 1391              	.LVL161:
 1392              	.L118:
 401:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1393              		.loc 2 401 0
 1394 0012 B5EEC00A 		vcmpe.f32	s0, #0
 1395 0016 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1396 001a 06DB     		blt	.L120
 401:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1397              		.loc 2 401 0 is_stmt 0 discriminator 1
 1398 001c F3EE0E7A 		vmov.f32	s15, #3.0e+1
 1399 0020 B4EEE70A 		vcmpe.f32	s0, s15
 1400 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1401 0028 1ED9     		bls	.L135
 1402              	.L120:
 407:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 1403              		.loc 2 407 0 is_stmt 1
 1404 002a DFED1A7A 		vldr.32	s15, .L136+4
 1405 002e B4EEE70A 		vcmpe.f32	s0, s15
 1406 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1407 0036 24DB     		blt	.L133
 407:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 1408              		.loc 2 407 0 is_stmt 0 discriminator 1
 1409 0038 DFED157A 		vldr.32	s15, .L136
 1410 003c B4EEE70A 		vcmpe.f32	s0, s15
 1411 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1412 0044 20D8     		bhi	.L134
 409:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 1413              		.loc 2 409 0 is_stmt 1
 1414 0046 DFED147A 		vldr.32	s15, .L136+8
 1415 004a 77EEC17A 		vsub.f32	s15, s15, s2
 1416 004e F3EE0E6A 		vmov.f32	s13, #3.0e+1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 40


 1417 0052 87EEA67A 		vdiv.f32	s14, s15, s13
 1418 0056 DFED0F7A 		vldr.32	s15, .L136+4
 1419 005a 70EE677A 		vsub.f32	s15, s0, s15
 1420 005e 27EE270A 		vmul.f32	s0, s14, s15
 1421              	.LVL162:
 1422 0062 30EE010A 		vadd.f32	s0, s0, s2
 1423              	.LVL163:
 1424 0066 7047     		bx	lr
 1425              	.LVL164:
 1426              	.L135:
 403:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 1427              		.loc 2 403 0
 1428 0068 9FED0B7A 		vldr.32	s14, .L136+8
 1429 006c 71EE477A 		vsub.f32	s15, s2, s14
 1430 0070 F3EE0E6A 		vmov.f32	s13, #3.0e+1
 1431 0074 87EEA61A 		vdiv.f32	s2, s15, s13
 1432              	.LVL165:
 1433 0078 21EE001A 		vmul.f32	s2, s2, s0
 1434 007c 31EE070A 		vadd.f32	s0, s2, s14
 1435              	.LVL166:
 1436 0080 7047     		bx	lr
 1437              	.LVL167:
 1438              	.L133:
 414:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 1439              		.loc 2 414 0
 1440 0082 B0EE410A 		vmov.f32	s0, s2
 1441              	.LVL168:
 1442 0086 7047     		bx	lr
 1443              	.LVL169:
 1444              	.L134:
 1445 0088 B0EE410A 		vmov.f32	s0, s2
 1446              	.LVL170:
 1447              		.loc 2 419 0
 1448 008c 7047     		bx	lr
 1449              	.L137:
 1450 008e 00BF     		.align	2
 1451              	.L136:
 1452 0090 00003443 		.word	1127481344
 1453 0094 00001643 		.word	1125515264
 1454 0098 CDCC8C3F 		.word	1066192077
 1455              		.cfi_endproc
 1456              	.LFE503:
 1458              		.section	.text._Z8move_legif,"ax",%progbits
 1459              		.align	1
 1460              		.global	_Z8move_legif
 1461              		.syntax unified
 1462              		.thumb
 1463              		.thumb_func
 1464              		.fpu fpv4-sp-d16
 1466              	_Z8move_legif:
 1467              	.LFB493:
  80:Core/Src/robot/robot_functions.cpp **** {
 1468              		.loc 2 80 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 0
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472              	.LVL171:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 41


 1473 0000 10B5     		push	{r4, lr}
 1474              	.LCFI29:
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 4, -8
 1477              		.cfi_offset 14, -4
 1478 0002 2DED028B 		vpush.64	{d8}
 1479              	.LCFI30:
 1480              		.cfi_def_cfa_offset 16
 1481              		.cfi_offset 80, -16
 1482              		.cfi_offset 81, -12
 1483 0006 0446     		mov	r4, r0
 1484              	.LVL172:
  83:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (leg[0].is_raised_without_deadzone()) ? robot_speed : robot_speed+1;
 1485              		.loc 2 83 0
 1486 0008 3348     		ldr	r0, .L148+8
 1487              	.LVL173:
 1488 000a FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 1489              	.LVL174:
 1490 000e 0028     		cmp	r0, #0
 1491 0010 54D0     		beq	.L143
 1492 0012 B1EE088A 		vmov.f32	s16, #6.0e+0
 1493              	.L139:
 1494              	.LVL175:
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step== (int)steps[6])) ? 4.3 : leg_speed;
 1495              		.loc 2 85 0 discriminator 4
 1496 0016 642C     		cmp	r4, #100
 1497 0018 56D0     		beq	.L144
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step== (int)steps[6])) ? 4.3 : leg_speed;
 1498              		.loc 2 85 0 is_stmt 0 discriminator 1
 1499 001a 304B     		ldr	r3, .L148+12
 1500 001c D3ED067A 		vldr.32	s15, [r3, #24]
 1501 0020 FDEEE77A 		vcvt.s32.f32	s15, s15
 1502 0024 17EE903A 		vmov	r3, s15	@ int
 1503 0028 A342     		cmp	r3, r4
 1504 002a 4AD0     		beq	.L147
 1505              	.LVL176:
 1506              	.L140:
 1507              	.LBB154:
 1508              	.LBB155:
 1509              		.loc 5 47 0 is_stmt 1 discriminator 6
 1510 002c 2C4C     		ldr	r4, .L148+16
 1511              	.LVL177:
 1512 002e 2046     		mov	r0, r4
 1513 0030 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1514              	.LVL178:
 1515              	.LBE155:
 1516              	.LBE154:
  87:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
 1517              		.loc 2 87 0 discriminator 6
 1518 0034 DFED2B7A 		vldr.32	s15, .L148+20
 1519 0038 60EE277A 		vmul.f32	s15, s0, s15
 1520 003c 17EE900A 		vmov	r0, s15
 1521 0040 FFF7FEFF 		bl	__aeabi_f2d
 1522              	.LVL179:
 1523 0044 22A3     		adr	r3, .L148
 1524 0046 D3E90023 		ldrd	r2, [r3]
 1525 004a FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 42


 1526              	.LVL180:
 1527 004e FFF7FEFF 		bl	__aeabi_d2f
 1528              	.LVL181:
 1529 0052 B0EE481A 		vmov.f32	s2, s16
 1530 0056 F7EE000A 		vmov.f32	s1, #1.0e+0
 1531 005a 00EE100A 		vmov	s0, r0
 1532 005e FFF7FEFF 		bl	_Z14motion_profilefff
 1533              	.LVL182:
 1534 0062 F0EE408A 		vmov.f32	s17, s0
 1535              	.LVL183:
 1536              	.LBB156:
 1537              	.LBB157:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1538              		.loc 5 48 0 discriminator 6
 1539 0066 2046     		mov	r0, r4
 1540 0068 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1541              	.LVL184:
 1542 006c B0EE408A 		vmov.f32	s16, s0
 1543              	.LVL185:
 1544              	.LBE157:
 1545              	.LBE156:
 1546              	.LBB158:
 1547              	.LBB159:
 1548 0070 04F15800 		add	r0, r4, #88
 1549 0074 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1550              	.LVL186:
 1551              	.LBE159:
 1552              	.LBE158:
  89:Core/Src/robot/robot_functions.cpp **** 	del_speed = 3 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 1553              		.loc 2 89 0 discriminator 6
 1554 0078 38EE408A 		vsub.f32	s16, s16, s0
 1555 007c B0EE080A 		vmov.f32	s0, #3.0e+0
 1556 0080 28EE008A 		vmul.f32	s16, s16, s0
 1557 0084 28EE288A 		vmul.f32	s16, s16, s17
 1558              	.LVL187:
 1559              	.LBB160:
 1560              	.LBB161:
 1561              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 43


  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 44


  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 45


 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 46


 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 1562              		.loc 6 242 0 discriminator 6
 1563 0088 F0EEC87A 		vabs.f32	s15, s16
 1564              	.LVL188:
 1565              	.LBE161:
 1566              	.LBE160:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 47


  90:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
 1567              		.loc 2 90 0 discriminator 6
 1568 008c F4EEE78A 		vcmpe.f32	s17, s15
 1569 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1570 0094 03D8     		bhi	.L141
  92:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 1571              		.loc 2 92 0
 1572 0096 88EE277A 		vdiv.f32	s14, s16, s15
 1573              	.LVL189:
  93:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 1574              		.loc 2 93 0
 1575 009a 28EE878A 		vmul.f32	s16, s17, s14
 1576              	.LVL190:
 1577              	.L141:
  95:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 1578              		.loc 2 95 0
 1579 009e 0E4C     		ldr	r4, .L148+8
 1580 00a0 38EEC80A 		vsub.f32	s0, s17, s16
 1581 00a4 2046     		mov	r0, r4
 1582 00a6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1583              	.LVL191:
  96:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 1584              		.loc 2 96 0
 1585 00aa 38EE280A 		vadd.f32	s0, s16, s17
 1586 00ae 04F15800 		add	r0, r4, #88
 1587 00b2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1588              	.LVL192:
  97:Core/Src/robot/robot_functions.cpp **** }
 1589              		.loc 2 97 0
 1590 00b6 BDEC028B 		vldm	sp!, {d8}
 1591              	.LCFI31:
 1592              		.cfi_remember_state
 1593              		.cfi_restore 80
 1594              		.cfi_restore 81
 1595              		.cfi_def_cfa_offset 8
 1596              	.LVL193:
 1597 00ba 10BD     		pop	{r4, pc}
 1598              	.LVL194:
 1599              	.L143:
 1600              	.LCFI32:
 1601              		.cfi_restore_state
  83:Core/Src/robot/robot_functions.cpp **** 	leg_speed = (leg[0].is_raised_without_deadzone()) ? robot_speed : robot_speed+1;
 1602              		.loc 2 83 0
 1603 00bc B1EE0C8A 		vmov.f32	s16, #7.0e+0
 1604 00c0 A9E7     		b	.L139
 1605              	.LVL195:
 1606              	.L147:
  85:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step== (int)steps[6])) ? 4.3 : leg_speed;
 1607              		.loc 2 85 0
 1608 00c2 9FED098A 		vldr.32	s16, .L148+24
 1609              	.LVL196:
 1610 00c6 B1E7     		b	.L140
 1611              	.LVL197:
 1612              	.L144:
 1613 00c8 9FED078A 		vldr.32	s16, .L148+24
 1614              	.LVL198:
 1615 00cc AEE7     		b	.L140
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 48


 1616              	.L149:
 1617 00ce 00BF     		.align	3
 1618              	.L148:
 1619 00d0 182D4454 		.word	1413754136
 1620 00d4 FB210940 		.word	1074340347
 1621 00d8 00000000 		.word	leg
 1622 00dc 00000000 		.word	steps
 1623 00e0 3C000000 		.word	leg+60
 1624 00e4 00003443 		.word	1127481344
 1625 00e8 9A998940 		.word	1082759578
 1626              		.cfi_endproc
 1627              	.LFE493:
 1629              		.section	.text._Z2goif,"ax",%progbits
 1630              		.align	1
 1631              		.global	_Z2goif
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1635              		.fpu fpv4-sp-d16
 1637              	_Z2goif:
 1638              	.LFB492:
  38:Core/Src/robot/robot_functions.cpp **** {
 1639              		.loc 2 38 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 8
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643              	.LVL199:
 1644 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1645              	.LCFI33:
 1646              		.cfi_def_cfa_offset 32
 1647              		.cfi_offset 4, -32
 1648              		.cfi_offset 5, -28
 1649              		.cfi_offset 6, -24
 1650              		.cfi_offset 7, -20
 1651              		.cfi_offset 8, -16
 1652              		.cfi_offset 9, -12
 1653              		.cfi_offset 10, -8
 1654              		.cfi_offset 14, -4
 1655 0004 2DED028B 		vpush.64	{d8}
 1656              	.LCFI34:
 1657              		.cfi_def_cfa_offset 40
 1658              		.cfi_offset 80, -40
 1659              		.cfi_offset 81, -36
 1660 0008 84B0     		sub	sp, sp, #16
 1661              	.LCFI35:
 1662              		.cfi_def_cfa_offset 56
 1663 000a 0546     		mov	r5, r0
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
 1664              		.loc 2 39 0
 1665 000c 10EE100A 		vmov	r0, s0
 1666              	.LVL200:
 1667 0010 FFF7FEFF 		bl	__aeabi_f2d
 1668              	.LVL201:
 1669 0014 4DA3     		adr	r3, .L158+36
 1670 0016 D3E90023 		ldrd	r2, [r3]
 1671 001a FFF7FEFF 		bl	__aeabi_dmul
 1672              	.LVL202:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 49


 1673 001e FFF7FEFF 		bl	__aeabi_d2f
 1674              	.LVL203:
 1675 0022 08EE100A 		vmov	s16, r0
 1676              	.LVL204:
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
 1677              		.loc 2 40 0
 1678 0026 00EE100A 		vmov	s0, r0
 1679 002a 2846     		mov	r0, r5
 1680              	.LVL205:
 1681 002c FFF7FEFF 		bl	_Z8move_legif
 1682              	.LVL206:
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
 1683              		.loc 2 41 0
 1684 0030 642D     		cmp	r5, #100
 1685 0032 59D0     		beq	.L156
  48:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
 1686              		.loc 2 48 0
 1687 0034 B0EE480A 		vmov.f32	s0, s16
 1688 0038 2846     		mov	r0, r5
 1689 003a FFF7FEFF 		bl	_Z13move_steeringif
 1690              	.LVL207:
 1691              	.L152:
 1692              	.LBB162:
 1693              	.LBB163:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1694              		.loc 5 45 0
 1695 003e 3C4C     		ldr	r4, .L158+8
 1696 0040 D4F810A0 		ldr	r10, [r4, #16]
 1697              	.LVL208:
 1698              	.LBE163:
 1699              	.LBE162:
  52:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1700              		.loc 2 52 0
 1701 0044 3B4B     		ldr	r3, .L158+12
 1702 0046 D3ED007A 		vldr.32	s15, [r3]
 1703 004a 9FED3B8A 		vldr.32	s16, .L158+16
 1704              	.LVL209:
 1705 004e 67EE887A 		vmul.f32	s15, s15, s16
 1706 0052 17EE900A 		vmov	r0, s15
 1707 0056 FFF7FEFF 		bl	__aeabi_f2d
 1708              	.LVL210:
 1709 005a 33A3     		adr	r3, .L158
 1710 005c D3E90023 		ldrd	r2, [r3]
 1711 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1712              	.LVL211:
 1713 0064 0646     		mov	r6, r0
 1714 0066 0F46     		mov	r7, r1
 1715              	.LVL212:
 1716              	.LBB164:
 1717              	.LBB165:
 1718              		.loc 5 48 0
 1719 0068 04F13C00 		add	r0, r4, #60
 1720 006c FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1721              	.LVL213:
 1722              	.LBE165:
 1723              	.LBE164:
  52:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 50


 1724              		.loc 2 52 0
 1725 0070 60EE087A 		vmul.f32	s15, s0, s16
 1726 0074 17EE900A 		vmov	r0, s15
 1727 0078 FFF7FEFF 		bl	__aeabi_f2d
 1728              	.LVL214:
 1729 007c 2AA3     		adr	r3, .L158
 1730 007e D3E90023 		ldrd	r2, [r3]
 1731 0082 FFF7FEFF 		bl	__aeabi_ddiv
 1732              	.LVL215:
 1733 0086 8046     		mov	r8, r0
 1734 0088 8946     		mov	r9, r1
 1735              	.LVL216:
 1736              	.LBB166:
 1737              	.LBB167:
 1738              		.loc 5 48 0
 1739 008a 04F19400 		add	r0, r4, #148
 1740 008e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1741              	.LVL217:
 1742              	.LBE167:
 1743              	.LBE166:
  52:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1744              		.loc 2 52 0
 1745 0092 60EE087A 		vmul.f32	s15, s0, s16
 1746 0096 17EE900A 		vmov	r0, s15
 1747 009a FFF7FEFF 		bl	__aeabi_f2d
 1748              	.LVL218:
 1749 009e 22A3     		adr	r3, .L158
 1750 00a0 D3E90023 		ldrd	r2, [r3]
 1751 00a4 FFF7FEFF 		bl	__aeabi_ddiv
 1752              	.LVL219:
 1753 00a8 CDE90201 		strd	r0, [sp, #8]
  51:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d", (int)(leg[0].get_st
 1754              		.loc 2 51 0
 1755 00ac 4046     		mov	r0, r8
 1756 00ae 4946     		mov	r1, r9
 1757 00b0 FFF7FEFF 		bl	__aeabi_d2iz
 1758              	.LVL220:
 1759 00b4 8046     		mov	r8, r0
 1760 00b6 3046     		mov	r0, r6
 1761 00b8 3946     		mov	r1, r7
 1762 00ba FFF7FEFF 		bl	__aeabi_d2iz
 1763              	.LVL221:
 1764 00be 0646     		mov	r6, r0
 1765 00c0 DDE90201 		ldrd	r0, [sp, #8]
 1766 00c4 FFF7FEFF 		bl	__aeabi_d2iz
 1767              	.LVL222:
 1768 00c8 0090     		str	r0, [sp]
 1769 00ca 4346     		mov	r3, r8
 1770 00cc 3246     		mov	r2, r6
 1771 00ce 5146     		mov	r1, r10
 1772 00d0 1A48     		ldr	r0, .L158+20
 1773 00d2 FFF7FEFF 		bl	printf
 1774              	.LVL223:
 1775              	.LBB168:
 1776              	.LBB169:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1777              		.loc 5 45 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 51


 1778 00d6 2369     		ldr	r3, [r4, #16]
 1779              	.LVL224:
 1780              	.LBE169:
 1781              	.LBE168:
  55:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
 1782              		.loc 2 55 0
 1783 00d8 9D42     		cmp	r5, r3
 1784 00da 0EDD     		ble	.L157
  64:Core/Src/robot/robot_functions.cpp **** 		return false;
 1785              		.loc 2 64 0
 1786 00dc 0020     		movs	r0, #0
 1787              	.L153:
  66:Core/Src/robot/robot_functions.cpp **** }
 1788              		.loc 2 66 0
 1789 00de 04B0     		add	sp, sp, #16
 1790              	.LCFI36:
 1791              		.cfi_remember_state
 1792              		.cfi_def_cfa_offset 40
 1793              		@ sp needed
 1794 00e0 BDEC028B 		vldm	sp!, {d8}
 1795              	.LCFI37:
 1796              		.cfi_restore 80
 1797              		.cfi_restore 81
 1798              		.cfi_def_cfa_offset 32
 1799 00e4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1800              	.LVL225:
 1801              	.L156:
 1802              	.LCFI38:
 1803              		.cfi_restore_state
  43:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
 1804              		.loc 2 43 0
 1805 00e8 154B     		ldr	r3, .L158+24
 1806 00ea 0022     		movs	r2, #0
 1807 00ec 1A70     		strb	r2, [r3]
  44:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 1808              		.loc 2 44 0
 1809 00ee 9FED150A 		vldr.32	s0, .L158+28
 1810 00f2 1548     		ldr	r0, .L158+32
 1811 00f4 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1812              	.LVL226:
 1813 00f8 A1E7     		b	.L152
 1814              	.LVL227:
 1815              	.L157:
  57:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 1816              		.loc 2 57 0
 1817 00fa 9FED128A 		vldr.32	s16, .L158+28
 1818 00fe B0EE480A 		vmov.f32	s0, s16
 1819 0102 2046     		mov	r0, r4
 1820 0104 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1821              	.LVL228:
  58:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1822              		.loc 2 58 0
 1823 0108 B0EE480A 		vmov.f32	s0, s16
 1824 010c 04F15800 		add	r0, r4, #88
 1825 0110 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1826              	.LVL229:
  59:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 52


 1827              		.loc 2 59 0
 1828 0114 B0EE480A 		vmov.f32	s0, s16
 1829 0118 0B48     		ldr	r0, .L158+32
 1830 011a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1831              	.LVL230:
  60:Core/Src/robot/robot_functions.cpp **** 		return true;
 1832              		.loc 2 60 0
 1833 011e 0120     		movs	r0, #1
 1834 0120 DDE7     		b	.L153
 1835              	.L159:
 1836 0122 00BFAFF3 		.align	3
 1836      0080
 1837              	.L158:
 1838 0128 182D4454 		.word	1413754136
 1839 012c FB210940 		.word	1074340347
 1840 0130 00000000 		.word	leg
 1841 0134 00000000 		.word	.LANCHOR2
 1842 0138 00003443 		.word	1127481344
 1843 013c 00000000 		.word	.LC4
 1844 0140 00000000 		.word	USE_IMU_FLAG
 1845 0144 00000000 		.word	0
 1846 0148 00000000 		.word	steering
 1847 014c 399D52A2 		.word	-1571644103
 1848 0150 46DF913F 		.word	1066524486
 1849              		.cfi_endproc
 1850              	.LFE492:
 1852              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1853              		.align	1
 1854              		.syntax unified
 1855              		.thumb
 1856              		.thumb_func
 1857              		.fpu fpv4-sp-d16
 1859              	_GLOBAL__sub_I_initial_angle:
 1860              	.LFB516:
 1861              		.loc 2 419 0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 0
 1864              		@ frame_needed = 0, uses_anonymous_args = 0
 1865 0000 08B5     		push	{r3, lr}
 1866              	.LCFI39:
 1867              		.cfi_def_cfa_offset 8
 1868              		.cfi_offset 3, -8
 1869              		.cfi_offset 14, -4
 1870              		.loc 2 419 0
 1871 0002 4FF6FF71 		movw	r1, #65535
 1872 0006 0120     		movs	r0, #1
 1873 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1874              	.LVL231:
 1875 000c 08BD     		pop	{r3, pc}
 1876              		.cfi_endproc
 1877              	.LFE516:
 1879              		.section	.init_array,"aw",%init_array
 1880              		.align	2
 1881 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1882              		.global	tolerance
 1883              		.global	temp_robot_angle
 1884              		.global	robot_angle
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 53


 1885              		.global	STEERING_FLAG
 1886              		.global	start_time
 1887              		.global	summation_angle
 1888              		.global	curr_angle
 1889              		.global	initial_angle
 1890              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1891              		.set	.LANCHOR8,. + 0
 1894              	STEERING_FLAG:
 1895 0000 00       		.space	1
 1896              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1897              		.set	.LANCHOR5,. + 0
 1900              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1901 0000 00       		.space	1
 1902              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1903              		.set	.LANCHOR6,. + 0
 1906              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1907 0000 00       		.space	1
 1908              		.section	.bss.curr_angle,"aw",%nobits
 1909              		.align	2
 1910              		.set	.LANCHOR1,. + 0
 1913              	curr_angle:
 1914 0000 00000000 		.space	12
 1914      00000000 
 1914      00000000 
 1915              		.section	.bss.initial_angle,"aw",%nobits
 1916              		.align	2
 1917              		.set	.LANCHOR0,. + 0
 1920              	initial_angle:
 1921 0000 00000000 		.space	12
 1921      00000000 
 1921      00000000 
 1922              		.section	.bss.robot_angle,"aw",%nobits
 1923              		.align	2
 1924              		.set	.LANCHOR2,. + 0
 1927              	robot_angle:
 1928 0000 00000000 		.space	4
 1929              		.section	.bss.start_time,"aw",%nobits
 1930              		.align	2
 1931              		.set	.LANCHOR7,. + 0
 1934              	start_time:
 1935 0000 00000000 		.space	4
 1936              		.section	.bss.summation_angle,"aw",%nobits
 1937              		.align	2
 1938              		.set	.LANCHOR3,. + 0
 1941              	summation_angle:
 1942 0000 00000000 		.space	4
 1943              		.section	.bss.temp_robot_angle,"aw",%nobits
 1944              		.align	2
 1945              		.set	.LANCHOR4,. + 0
 1948              	temp_robot_angle:
 1949 0000 00000000 		.space	4
 1950              		.section	.data.tolerance,"aw",%progbits
 1951              		.align	2
 1954              	tolerance:
 1955 0000 5077563D 		.word	1029076816
 1956              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1957              		.align	2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 54


 1958              	.LC1:
 1959 0000 0A496E69 		.ascii	"\012Initializing_Leg_Orientation\011\000"
 1959      7469616C 
 1959      697A696E 
 1959      675F4C65 
 1959      675F4F72 
 1960 001f 00       		.space	1
 1961              	.LC2:
 1962 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1962      6974696E 
 1962      675F5468 
 1962      655F4C65 
 1962      67200900 
 1963              	.LC3:
 1964 0034 09496E69 		.ascii	"\011Initializing_Steering_Orientation\011 %d \011 %"
 1964      7469616C 
 1964      697A696E 
 1964      675F5374 
 1964      65657269 
 1965 005e 6400     		.ascii	"d\000"
 1966              		.section	.rodata._Z28initialize_steering_positionv.str1.4,"aMS",%progbits,1
 1967              		.align	2
 1968              	.LC0:
 1969 0000 0A616E67 		.ascii	"\012angle = %d\011\000"
 1969      6C65203D 
 1969      20256409 
 1969      00
 1970              		.section	.rodata._Z2goif.str1.4,"aMS",%progbits,1
 1971              		.align	2
 1972              	.LC4:
 1973 0000 20737465 		.ascii	" steps = %d\011 robot_angle = %d\011 leg_1_angle = "
 1973      7073203D 
 1973      20256409 
 1973      20726F62 
 1973      6F745F61 
 1974 002d 25640920 		.ascii	"%d\011 leg_2_angle = %d\000"
 1974      6C65675F 
 1974      325F616E 
 1974      676C6520 
 1974      3D202564 
 1975              		.text
 1976              	.Letext0:
 1977              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1978              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1979              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1980              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1981              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1982              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1983              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1984              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1985              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1986              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1987              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1988              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1989              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1990              		.file 20 "Core/Inc/periphs/tim.h"
 1991              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 55


 1992              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1993              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1994              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1995              		.file 25 "Core/Inc/devs/motor.h"
 1996              		.file 26 "Core/Inc/devs/encoder.h"
 1997              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1998              		.file 28 "Core/Inc/devs/limit_switch.h"
 1999              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2000              		.file 30 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2001              		.file 31 "<built-in>"
 2002              		.file 32 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 robot_functions.cpp
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:163    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:170    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:277    .text._Z9set_anglef:00000098 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:293    .text._Z22correct_steering_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:300    .text._Z22correct_steering_anglef:00000000 _Z22correct_steering_anglef
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:383    .text._Z22correct_steering_anglef:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:399    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:406    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:511    .text._Z13move_steeringif:00000098 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:524    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:531    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:643    .text._Z21calculate_robot_anglev:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:657    .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:664    .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:835    .text._Z23initialize_leg_positionv:000000d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:851    .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:858    .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:941    .text._Z28initialize_steering_positionv:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:955    .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:962    .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1151   .text._Z19initialize_positionv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1165   .text._Z11getup_n_runv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1172   .text._Z11getup_n_runv:00000000 _Z11getup_n_runv
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1291   .text._Z11getup_n_runv:000000a0 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1303   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1310   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1362   .text._Z15calculate_datasv:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1369   .text._Z14motion_profilefff:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1376   .text._Z14motion_profilefff:00000000 _Z14motion_profilefff
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1452   .text._Z14motion_profilefff:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1459   .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1466   .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1619   .text._Z8move_legif:000000d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1630   .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1637   .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1838   .text._Z2goif:00000128 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1853   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1859   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1880   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1954   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1948   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1927   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1894   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1934   .bss.start_time:00000000 start_time
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1941   .bss.summation_angle:00000000 summation_angle
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1913   .bss.curr_angle:00000000 curr_angle
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1920   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1895   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1900   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s 			page 57


C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1901   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1906   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1907   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1909   .bss.curr_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1916   .bss.initial_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1923   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1930   .bss.start_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1937   .bss.summation_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1944   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1951   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1957   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1967   .rodata._Z28initialize_steering_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccyiX2bb.s:1971   .rodata._Z2goif.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN8steering9set_angleEf
steering
__aeabi_dcmple
__aeabi_dmul
__aeabi_dadd
_ZN3leg9is_raisedEv
_ZN8steering9set_omegaEf
steps
leg
_ZN3leg26is_raised_without_deadzoneEv
_ZN7encoder9get_angleEv
USE_IMU_FLAG
_ZN3leg9set_omegaEf
__aeabi_d2iz
printf
HAL_GetTick
HAL_GPIO_WritePin
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
_ZN7encoder16get_actual_angleEv
