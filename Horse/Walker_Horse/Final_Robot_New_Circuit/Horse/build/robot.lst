ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB499:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = false;
  15:Core/Src/robot/robot.cpp **** float omega0 = 0;
  16:Core/Src/robot/robot.cpp **** float omega1 = 0;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** float steps[7] = {6, 10, 15, 17, 21, 24, 31};
  19:Core/Src/robot/robot.cpp **** float angles[7] = {0 , 45, 45, 65, 10, 0, -90};
  20:Core/Src/robot/robot.cpp **** 
  21:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  22:Core/Src/robot/robot.cpp **** {
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
  24:Core/Src/robot/robot.cpp **** 	{
  25:Core/Src/robot/robot.cpp **** 	case HOME:
  26:Core/Src/robot/robot.cpp **** 	{
  27:Core/Src/robot/robot.cpp **** 		/**
  28:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  29:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
  30:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  31:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  33:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  34:Core/Src/robot/robot.cpp **** 			*/
  35:Core/Src/robot/robot.cpp **** 
  36:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
  39:Core/Src/robot/robot.cpp **** 		{
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
  41:Core/Src/robot/robot.cpp **** 		}
  42:Core/Src/robot/robot.cpp **** 		else
  43:Core/Src/robot/robot.cpp **** 		{
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  48:Core/Src/robot/robot.cpp **** 
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  50:Core/Src/robot/robot.cpp **** 		{
  51:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  52:Core/Src/robot/robot.cpp **** 			printf("not set");
  53:Core/Src/robot/robot.cpp **** 			// initial_angle.setZ(initial_angle.getZ());
  54:Core/Src/robot/robot.cpp **** 			// printf("\t%d\t", (int)initial_angle.getZ());
  55:Core/Src/robot/robot.cpp **** 		}
  56:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
  57:Core/Src/robot/robot.cpp **** 		{
  58:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  59:Core/Src/robot/robot.cpp **** 			printf("\n\nset\n\n");
  60:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  61:Core/Src/robot/robot.cpp **** 		}
  62:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
  63:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
  64:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  66:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  67:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  68:Core/Src/robot/robot.cpp **** 		{
  69:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  70:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
  71:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  72:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  73:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
  74:Core/Src/robot/robot.cpp **** 			{
  75:Core/Src/robot/robot.cpp **** 				zone_select();
  76:Core/Src/robot/robot.cpp **** 			}
  77:Core/Src/robot/robot.cpp **** 		}
  78:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
  79:Core/Src/robot/robot.cpp **** 		{
  80:Core/Src/robot/robot.cpp **** 
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  84:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  85:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  86:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  87:Core/Src/robot/robot.cpp **** 
  88:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 3


  89:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
  90:Core/Src/robot/robot.cpp **** 			{
  91:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
  92:Core/Src/robot/robot.cpp **** 				{
  93:Core/Src/robot/robot.cpp **** 					zone_select();
  94:Core/Src/robot/robot.cpp **** 				}
  95:Core/Src/robot/robot.cpp **** 			}
  96:Core/Src/robot/robot.cpp **** 		}
  97:Core/Src/robot/robot.cpp **** 
  98:Core/Src/robot/robot.cpp **** 		else
  99:Core/Src/robot/robot.cpp **** 		{
 100:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 101:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 102:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 103:Core/Src/robot/robot.cpp **** 		}
 104:Core/Src/robot/robot.cpp **** 	}
 105:Core/Src/robot/robot.cpp **** 	break;
 106:Core/Src/robot/robot.cpp **** 
 107:Core/Src/robot/robot.cpp **** 	case MARCH:
 108:Core/Src/robot/robot.cpp **** 	{
 109:Core/Src/robot/robot.cpp **** 		/*
 110:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
 111:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
 112:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
 113:Core/Src/robot/robot.cpp **** 		*/
 114:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 115:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 116:Core/Src/robot/robot.cpp **** 		{
 117:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 120:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 121:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 122:Core/Src/robot/robot.cpp **** 		}
 123:Core/Src/robot/robot.cpp **** 	}
 124:Core/Src/robot/robot.cpp **** 	break;
 125:Core/Src/robot/robot.cpp **** 
 126:Core/Src/robot/robot.cpp **** 	case TURN_45:
 127:Core/Src/robot/robot.cpp **** 	{
 128:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 129:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 130:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 131:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 132:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 133:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 134:Core/Src/robot/robot.cpp **** 		*/
 135:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 136:Core/Src/robot/robot.cpp **** 
 137:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 138:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 139:Core/Src/robot/robot.cpp **** 		{
 140:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 141:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 142:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 143:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 144:Core/Src/robot/robot.cpp **** 
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 4


 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 147:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 148:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 149:Core/Src/robot/robot.cpp **** 		}
 150:Core/Src/robot/robot.cpp **** 		//*/
 151:Core/Src/robot/robot.cpp **** 	}
 152:Core/Src/robot/robot.cpp **** 	break;
 153:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 154:Core/Src/robot/robot.cpp **** 	{
 155:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 156:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 157:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 158:Core/Src/robot/robot.cpp **** 			*/
 159:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 160:Core/Src/robot/robot.cpp **** 
 161:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 162:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 163:Core/Src/robot/robot.cpp **** 		{
 164:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 165:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 166:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 167:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 168:Core/Src/robot/robot.cpp **** 
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 171:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 172:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 173:Core/Src/robot/robot.cpp **** 		}
 174:Core/Src/robot/robot.cpp **** 		//*/
 175:Core/Src/robot/robot.cpp **** 	}
 176:Core/Src/robot/robot.cpp **** 	break;
 177:Core/Src/robot/robot.cpp **** 	case STATE_D:
 178:Core/Src/robot/robot.cpp **** 	{
 179:Core/Src/robot/robot.cpp **** 		/*
 180:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 181:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 182:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 183:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 184:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 185:Core/Src/robot/robot.cpp **** 		{
 186:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 187:Core/Src/robot/robot.cpp **** 
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 190:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 191:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 192:Core/Src/robot/robot.cpp **** 		}
 193:Core/Src/robot/robot.cpp **** 	}
 194:Core/Src/robot/robot.cpp **** 	break;
 195:Core/Src/robot/robot.cpp **** 
 196:Core/Src/robot/robot.cpp **** 	case TURN_90:
 197:Core/Src/robot/robot.cpp **** 	{
 198:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 199:Core/Src/robot/robot.cpp **** 			no of steps = 
 200:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 201:Core/Src/robot/robot.cpp **** 			*/
 202:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 5


 203:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 204:Core/Src/robot/robot.cpp **** 		{
 205:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 206:Core/Src/robot/robot.cpp **** 
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 209:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 210:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 211:Core/Src/robot/robot.cpp **** 		}
 212:Core/Src/robot/robot.cpp **** 	}
 213:Core/Src/robot/robot.cpp **** 	break;
 214:Core/Src/robot/robot.cpp **** 
 215:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 216:Core/Src/robot/robot.cpp **** 	{
 217:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 218:Core/Src/robot/robot.cpp **** 			robot stops 
 219:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 220:Core/Src/robot/robot.cpp **** 			*/
 221:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 222:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 223:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 224:Core/Src/robot/robot.cpp **** 		{
 225:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true) 
 226:Core/Src/robot/robot.cpp **** 			{
 227:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 228:Core/Src/robot/robot.cpp **** 			}
 229:Core/Src/robot/robot.cpp **** 		}
 230:Core/Src/robot/robot.cpp **** 		else
 231:Core/Src/robot/robot.cpp **** 		{
 232:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 233:Core/Src/robot/robot.cpp **** 			{
 234:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 235:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 238:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 239:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 240:Core/Src/robot/robot.cpp **** 			}
 241:Core/Src/robot/robot.cpp **** 		}
 242:Core/Src/robot/robot.cpp **** 	}
 243:Core/Src/robot/robot.cpp **** 	break;
 244:Core/Src/robot/robot.cpp **** 
 245:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 246:Core/Src/robot/robot.cpp **** 	{
 247:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 248:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 249:Core/Src/robot/robot.cpp **** 			*/
 250:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 251:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 252:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 253:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 254:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 255:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 256:Core/Src/robot/robot.cpp **** 		    ROBOT_START_FLAG)
 257:Core/Src/robot/robot.cpp **** 		{
 258:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 259:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 261:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[5];
 262:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[5];
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 264:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 265:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 266:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 267:Core/Src/robot/robot.cpp **** 		}
 268:Core/Src/robot/robot.cpp **** 	}
 269:Core/Src/robot/robot.cpp **** 	break;
 270:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 271:Core/Src/robot/robot.cpp **** 	{
 272:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 273:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 274:Core/Src/robot/robot.cpp **** 			*/
 275:Core/Src/robot/robot.cpp **** 
 276:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 277:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 278:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 279:Core/Src/robot/robot.cpp **** 		{
 280:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 281:Core/Src/robot/robot.cpp **** 			{
 282:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 283:Core/Src/robot/robot.cpp **** 				leg[0].steps = steps[5];
 284:Core/Src/robot/robot.cpp **** 				leg[1].steps = steps[5];
 285:Core/Src/robot/robot.cpp **** 			}
 286:Core/Src/robot/robot.cpp **** 		}
 287:Core/Src/robot/robot.cpp **** 		else
 288:Core/Src/robot/robot.cpp **** 		{
 289:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 290:Core/Src/robot/robot.cpp **** 			{
 291:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 292:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 293:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 294:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 295:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 296:Core/Src/robot/robot.cpp **** 			}
 297:Core/Src/robot/robot.cpp **** 		}
 298:Core/Src/robot/robot.cpp **** 	}
 299:Core/Src/robot/robot.cpp **** 
 300:Core/Src/robot/robot.cpp **** 	break;
 301:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 302:Core/Src/robot/robot.cpp **** 	{
 303:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 304:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 305:Core/Src/robot/robot.cpp **** 			*/
 306:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 307:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 308:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 309:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 310:Core/Src/robot/robot.cpp **** 
 311:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 312:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 313:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 314:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 315:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 316:Core/Src/robot/robot.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 7


 317:Core/Src/robot/robot.cpp **** 	break;
 318:Core/Src/robot/robot.cpp **** 	case TUNE:
 319:Core/Src/robot/robot.cpp **** 	{
 320:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 321:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 322:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 323:Core/Src/robot/robot.cpp **** 	}
 324:Core/Src/robot/robot.cpp **** 	}
 325:Core/Src/robot/robot.cpp **** }
 326:Core/Src/robot/robot.cpp **** 
 327:Core/Src/robot/robot.cpp **** bool play()
 328:Core/Src/robot/robot.cpp **** {
 329:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 330:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 331:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 332:Core/Src/robot/robot.cpp **** 	return true;
 333:Core/Src/robot/robot.cpp **** }
 334:Core/Src/robot/robot.cpp **** 
 335:Core/Src/robot/robot.cpp **** void zone_select(void)
 336:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 336 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LBB50:
 337:Core/Src/robot/robot.cpp **** 
 338:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 338 0
  39 0002 1021     		movs	r1, #16
  40 0004 6A48     		ldr	r0, .L17
  41 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000a 08BB     		cbnz	r0, .L2
 339:Core/Src/robot/robot.cpp **** 	{
 340:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 340 0
  45 000c 0123     		movs	r3, #1
  46 000e 694A     		ldr	r2, .L17+4
  47 0010 1370     		strb	r3, [r2]
 341:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 341 0
  49 0012 694A     		ldr	r2, .L17+8
  50 0014 1370     		strb	r3, [r2]
 342:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 342 0
  52 0016 6948     		ldr	r0, .L17+12
  53 0018 FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE50:
  57              	.LBB60:
 343:Core/Src/robot/robot.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 8


 344:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 345:Core/Src/robot/robot.cpp **** 	{
 346:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
 347:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 348:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
 349:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 350:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 351:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 352:Core/Src/robot/robot.cpp **** 		{
 353:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 354:Core/Src/robot/robot.cpp **** 		}
 355:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 356:Core/Src/robot/robot.cpp **** 	}
 357:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 358:Core/Src/robot/robot.cpp **** 	{
 359:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 360:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 361:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 362:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 363:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 364:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 365:Core/Src/robot/robot.cpp **** 		{
 366:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 367:Core/Src/robot/robot.cpp **** 		}
 368:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 369:Core/Src/robot/robot.cpp **** 	}
 370:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 371:Core/Src/robot/robot.cpp **** 	{
 372:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 373:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 374:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 375:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 376:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 377:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 378:Core/Src/robot/robot.cpp **** 		{
 379:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 380:Core/Src/robot/robot.cpp **** 		}
 381:Core/Src/robot/robot.cpp **** 	}
 382:Core/Src/robot/robot.cpp **** 	else
 383:Core/Src/robot/robot.cpp **** 	{
 384:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 385:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 386:Core/Src/robot/robot.cpp **** 	}
 387:Core/Src/robot/robot.cpp **** 
 388:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 388 0
  59 001c 4FF48051 		mov	r1, #4096
  60 0020 6748     		ldr	r0, .L17+16
  61 0022 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0026 0028     		cmp	r0, #0
  64 0028 40F09080 		bne	.L10
  65              	.LBB61:
 389:Core/Src/robot/robot.cpp **** 	{
 390:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 390 0
  67 002c 6548     		ldr	r0, .L17+20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 9


  68 002e FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB62:
 391:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 391 0
  72 0032 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L12:
  75              		.loc 1 391 0 is_stmt 0 discriminator 3
  76 0034 062A     		cmp	r2, #6
  77 0036 00F3BA80 		bgt	.L1
 392:Core/Src/robot/robot.cpp **** 		{
 393:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 393 0 is_stmt 1 discriminator 2
  79 003a 634B     		ldr	r3, .L17+24
  80 003c 03EB8203 		add	r3, r3, r2, lsl #2
  81 0040 D3ED007A 		vldr.32	s15, [r3]
  82 0044 F1EE677A 		vneg.f32	s15, s15
  83 0048 C3ED007A 		vstr.32	s15, [r3]
 391:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  84              		.loc 1 391 0 discriminator 2
  85 004c 0132     		adds	r2, r2, #1
  86              	.LVL5:
  87 004e F1E7     		b	.L12
  88              	.LVL6:
  89              	.L2:
  90              	.LBE62:
  91              	.LBE61:
  92              	.LBE60:
  93              	.LBB68:
  94              	.LBB51:
 344:Core/Src/robot/robot.cpp **** 	{
  95              		.loc 1 344 0
  96 0050 0421     		movs	r1, #4
  97 0052 5E48     		ldr	r0, .L17+28
  98 0054 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  99              	.LVL7:
 100 0058 20BB     		cbnz	r0, .L4
 101              	.LBB52:
 346:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 102              		.loc 1 346 0
 103 005a 5D48     		ldr	r0, .L17+32
 104 005c FFF7FEFF 		bl	printf
 105              	.LVL8:
 347:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
 106              		.loc 1 347 0
 107 0060 544B     		ldr	r3, .L17+4
 108 0062 0222     		movs	r2, #2
 109 0064 1A70     		strb	r2, [r3]
 348:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 110              		.loc 1 348 0
 111 0066 5B4B     		ldr	r3, .L17+36
 112 0068 D3ED017A 		vldr.32	s15, [r3, #4]
 113 006c B0EE007A 		vmov.f32	s14, #2.0e+0
 114 0070 77EEC77A 		vsub.f32	s15, s15, s14
 115 0074 FDEEE77A 		vcvt.s32.f32	s15, s15
 116 0078 574A     		ldr	r2, .L17+40
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 10


 117 007a C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 349:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 118              		.loc 1 349 0
 119 007e C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 350:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 120              		.loc 1 350 0
 121 0082 514B     		ldr	r3, .L17+24
 122 0084 93ED017A 		vldr.32	s14, [r3, #4]
 123              	.LVL9:
 124              	.LBB53:
 351:Core/Src/robot/robot.cpp **** 		{
 125              		.loc 1 351 0
 126 0088 0022     		movs	r2, #0
 127              	.LVL10:
 128              	.L5:
 351:Core/Src/robot/robot.cpp **** 		{
 129              		.loc 1 351 0 is_stmt 0 discriminator 3
 130 008a 062A     		cmp	r2, #6
 131 008c C6DC     		bgt	.L3
 353:Core/Src/robot/robot.cpp **** 		}
 132              		.loc 1 353 0 is_stmt 1 discriminator 2
 133 008e 4E4B     		ldr	r3, .L17+24
 134 0090 03EB8203 		add	r3, r3, r2, lsl #2
 135 0094 D3ED007A 		vldr.32	s15, [r3]
 136 0098 77EEC77A 		vsub.f32	s15, s15, s14
 137 009c C3ED007A 		vstr.32	s15, [r3]
 351:Core/Src/robot/robot.cpp **** 		{
 138              		.loc 1 351 0 discriminator 2
 139 00a0 0132     		adds	r2, r2, #1
 140              	.LVL11:
 141 00a2 F2E7     		b	.L5
 142              	.LVL12:
 143              	.L4:
 144              	.LBE53:
 145              	.LBE52:
 146              	.LBB54:
 357:Core/Src/robot/robot.cpp **** 	{
 147              		.loc 1 357 0
 148 00a4 0221     		movs	r1, #2
 149 00a6 4D48     		ldr	r0, .L17+44
 150 00a8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 151              	.LVL13:
 152 00ac 00BB     		cbnz	r0, .L6
 153              	.LBB55:
 359:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 154              		.loc 1 359 0
 155 00ae 4C48     		ldr	r0, .L17+48
 156 00b0 FFF7FEFF 		bl	printf
 157              	.LVL14:
 360:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 158              		.loc 1 360 0
 159 00b4 3F4B     		ldr	r3, .L17+4
 160 00b6 0422     		movs	r2, #4
 161 00b8 1A70     		strb	r2, [r3]
 361:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 162              		.loc 1 361 0
 163 00ba 464B     		ldr	r3, .L17+36
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 11


 164 00bc D3ED027A 		vldr.32	s15, [r3, #8]
 165 00c0 FDEEE77A 		vcvt.s32.f32	s15, s15
 166 00c4 444A     		ldr	r2, .L17+40
 167 00c6 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 362:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 168              		.loc 1 362 0
 169 00ca C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 363:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 170              		.loc 1 363 0
 171 00ce 3E4B     		ldr	r3, .L17+24
 172 00d0 93ED027A 		vldr.32	s14, [r3, #8]
 173              	.LVL15:
 174              	.LBB56:
 364:Core/Src/robot/robot.cpp **** 		{
 175              		.loc 1 364 0
 176 00d4 0022     		movs	r2, #0
 177              	.LVL16:
 178              	.L7:
 364:Core/Src/robot/robot.cpp **** 		{
 179              		.loc 1 364 0 is_stmt 0 discriminator 3
 180 00d6 062A     		cmp	r2, #6
 181 00d8 A0DC     		bgt	.L3
 366:Core/Src/robot/robot.cpp **** 		}
 182              		.loc 1 366 0 is_stmt 1 discriminator 2
 183 00da 3B4B     		ldr	r3, .L17+24
 184 00dc 03EB8203 		add	r3, r3, r2, lsl #2
 185 00e0 D3ED007A 		vldr.32	s15, [r3]
 186 00e4 77EEC77A 		vsub.f32	s15, s15, s14
 187 00e8 C3ED007A 		vstr.32	s15, [r3]
 364:Core/Src/robot/robot.cpp **** 		{
 188              		.loc 1 364 0 discriminator 2
 189 00ec 0132     		adds	r2, r2, #1
 190              	.LVL17:
 191 00ee F2E7     		b	.L7
 192              	.LVL18:
 193              	.L6:
 194              	.LBE56:
 195              	.LBE55:
 196              	.LBB57:
 370:Core/Src/robot/robot.cpp **** 	{
 197              		.loc 1 370 0
 198 00f0 0821     		movs	r1, #8
 199 00f2 3A48     		ldr	r0, .L17+44
 200 00f4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL19:
 202 00f8 08BB     		cbnz	r0, .L8
 203              	.LBB58:
 372:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 204              		.loc 1 372 0
 205 00fa 3A48     		ldr	r0, .L17+52
 206 00fc FFF7FEFF 		bl	printf
 207              	.LVL20:
 373:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 208              		.loc 1 373 0
 209 0100 2C4B     		ldr	r3, .L17+4
 210 0102 0722     		movs	r2, #7
 211 0104 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 12


 374:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 212              		.loc 1 374 0
 213 0106 334B     		ldr	r3, .L17+36
 214 0108 D3ED057A 		vldr.32	s15, [r3, #20]
 215 010c FDEEE77A 		vcvt.s32.f32	s15, s15
 216 0110 314A     		ldr	r2, .L17+40
 217 0112 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 375:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 218              		.loc 1 375 0
 219 0116 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 376:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 220              		.loc 1 376 0
 221 011a 2B4B     		ldr	r3, .L17+24
 222 011c 93ED057A 		vldr.32	s14, [r3, #20]
 223              	.LVL21:
 224              	.LBB59:
 377:Core/Src/robot/robot.cpp **** 		{
 225              		.loc 1 377 0
 226 0120 0022     		movs	r2, #0
 227              	.LVL22:
 228              	.L9:
 377:Core/Src/robot/robot.cpp **** 		{
 229              		.loc 1 377 0 is_stmt 0 discriminator 3
 230 0122 062A     		cmp	r2, #6
 231 0124 3FF77AAF 		bgt	.L3
 379:Core/Src/robot/robot.cpp **** 		}
 232              		.loc 1 379 0 is_stmt 1 discriminator 2
 233 0128 274B     		ldr	r3, .L17+24
 234 012a 03EB8203 		add	r3, r3, r2, lsl #2
 235 012e D3ED007A 		vldr.32	s15, [r3]
 236 0132 77EEC77A 		vsub.f32	s15, s15, s14
 237 0136 C3ED007A 		vstr.32	s15, [r3]
 377:Core/Src/robot/robot.cpp **** 		{
 238              		.loc 1 377 0 discriminator 2
 239 013a 0132     		adds	r2, r2, #1
 240              	.LVL23:
 241 013c F1E7     		b	.L9
 242              	.LVL24:
 243              	.L8:
 244              	.LBE59:
 245              	.LBE58:
 384:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 246              		.loc 1 384 0
 247 013e 2A48     		ldr	r0, .L17+56
 248 0140 FFF7FEFF 		bl	printf
 249              	.LVL25:
 385:Core/Src/robot/robot.cpp **** 	}
 250              		.loc 1 385 0
 251 0144 1B4B     		ldr	r3, .L17+4
 252 0146 0122     		movs	r2, #1
 253 0148 1A70     		strb	r2, [r3]
 254 014a 67E7     		b	.L3
 255              	.L10:
 256              	.LBE57:
 257              	.LBE54:
 258              	.LBE51:
 259              	.LBE68:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 13


 260              	.LBB69:
 261              	.LBB63:
 394:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 395:Core/Src/robot/robot.cpp **** 			// printf("\n\t angles= %d",(int)(angles[i]));
 396:Core/Src/robot/robot.cpp **** 		}
 397:Core/Src/robot/robot.cpp **** 	}
 398:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
 262              		.loc 1 398 0
 263 014c 2021     		movs	r1, #32
 264 014e 2348     		ldr	r0, .L17+44
 265 0150 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 266              	.LVL26:
 267 0154 98B9     		cbnz	r0, .L13
 268              	.LBB64:
 399:Core/Src/robot/robot.cpp **** 	{
 400:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");for (int i = 0; i < 7; i++)
 269              		.loc 1 400 0
 270 0156 2548     		ldr	r0, .L17+60
 271 0158 FFF7FEFF 		bl	printf
 272              	.LVL27:
 273              	.LBB65:
 274 015c 0024     		movs	r4, #0
 275              	.LVL28:
 276              	.L14:
 277              		.loc 1 400 0 is_stmt 0 discriminator 3
 278 015e 062C     		cmp	r4, #6
 279 0160 25DC     		bgt	.L1
 401:Core/Src/robot/robot.cpp **** 		{
 402:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 403:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 280              		.loc 1 403 0 is_stmt 1 discriminator 2
 281 0162 194B     		ldr	r3, .L17+24
 282 0164 03EB8403 		add	r3, r3, r4, lsl #2
 283 0168 D3ED007A 		vldr.32	s15, [r3]
 284 016c FDEEE77A 		vcvt.s32.f32	s15, s15
 285 0170 17EE901A 		vmov	r1, s15	@ int
 286 0174 1E48     		ldr	r0, .L17+64
 287 0176 FFF7FEFF 		bl	printf
 288              	.LVL29:
 400:Core/Src/robot/robot.cpp **** 		{
 289              		.loc 1 400 0 discriminator 2
 290 017a 0134     		adds	r4, r4, #1
 291              	.LVL30:
 292 017c EFE7     		b	.L14
 293              	.LVL31:
 294              	.L13:
 295              	.LBE65:
 296              	.LBE64:
 297              	.LBB66:
 404:Core/Src/robot/robot.cpp **** 		}
 405:Core/Src/robot/robot.cpp **** 	}
 406:Core/Src/robot/robot.cpp **** 	else
 407:Core/Src/robot/robot.cpp **** 	{
 408:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 298              		.loc 1 408 0
 299 017e 1D48     		ldr	r0, .L17+68
 300 0180 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 14


 301              	.LVL32:
 302              	.LBB67:
 409:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 303              		.loc 1 409 0
 304 0184 0024     		movs	r4, #0
 305              	.LVL33:
 306              	.L15:
 307              		.loc 1 409 0 is_stmt 0 discriminator 3
 308 0186 062C     		cmp	r4, #6
 309 0188 11DC     		bgt	.L1
 410:Core/Src/robot/robot.cpp **** 		{
 411:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 310              		.loc 1 411 0 is_stmt 1 discriminator 2
 311 018a 0F4B     		ldr	r3, .L17+24
 312 018c 03EB8403 		add	r3, r3, r4, lsl #2
 313 0190 D3ED007A 		vldr.32	s15, [r3]
 314 0194 F1EE677A 		vneg.f32	s15, s15
 315 0198 C3ED007A 		vstr.32	s15, [r3]
 412:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 413:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 316              		.loc 1 413 0 discriminator 2
 317 019c FDEEE77A 		vcvt.s32.f32	s15, s15
 318 01a0 17EE901A 		vmov	r1, s15	@ int
 319 01a4 1248     		ldr	r0, .L17+64
 320 01a6 FFF7FEFF 		bl	printf
 321              	.LVL34:
 409:Core/Src/robot/robot.cpp **** 		{
 322              		.loc 1 409 0 discriminator 2
 323 01aa 0134     		adds	r4, r4, #1
 324              	.LVL35:
 325 01ac EBE7     		b	.L15
 326              	.LVL36:
 327              	.L1:
 328              	.LBE67:
 329              	.LBE66:
 330              	.LBE63:
 331              	.LBE69:
 414:Core/Src/robot/robot.cpp **** 		}
 415:Core/Src/robot/robot.cpp **** 	}
 416:Core/Src/robot/robot.cpp **** }
 332              		.loc 1 416 0
 333 01ae 10BD     		pop	{r4, pc}
 334              	.L18:
 335              		.align	2
 336              	.L17:
 337 01b0 00040240 		.word	1073873920
 338 01b4 00000000 		.word	.LANCHOR0
 339 01b8 00000000 		.word	.LANCHOR1
 340 01bc 00000000 		.word	.LC0
 341 01c0 00080240 		.word	1073874944
 342 01c4 54000000 		.word	.LC5
 343 01c8 00000000 		.word	.LANCHOR3
 344 01cc 00100240 		.word	1073876992
 345 01d0 10000000 		.word	.LC1
 346 01d4 00000000 		.word	.LANCHOR2
 347 01d8 00000000 		.word	leg
 348 01dc 000C0240 		.word	1073875968
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 15


 349 01e0 1C000000 		.word	.LC2
 350 01e4 30000000 		.word	.LC3
 351 01e8 44000000 		.word	.LC4
 352 01ec 60000000 		.word	.LC6
 353 01f0 70000000 		.word	.LC7
 354 01f4 80000000 		.word	.LC8
 355              		.cfi_endproc
 356              	.LFE499:
 358              		.global	__aeabi_f2d
 359              		.global	__aeabi_ddiv
 360              		.global	__aeabi_d2iz
 361              		.section	.text._Z4testv,"ax",%progbits
 362              		.align	1
 363              		.global	_Z4testv
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv4-sp-d16
 369              	_Z4testv:
 370              	.LFB500:
 417:Core/Src/robot/robot.cpp **** 
 418:Core/Src/robot/robot.cpp **** void test(void)
 419:Core/Src/robot/robot.cpp **** {
 371              		.loc 1 419 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 376              	.LCFI1:
 377              		.cfi_def_cfa_offset 32
 378              		.cfi_offset 3, -32
 379              		.cfi_offset 4, -28
 380              		.cfi_offset 5, -24
 381              		.cfi_offset 6, -20
 382              		.cfi_offset 7, -16
 383              		.cfi_offset 8, -12
 384              		.cfi_offset 9, -8
 385              		.cfi_offset 14, -4
 386 0004 2DED028B 		vpush.64	{d8}
 387              	.LCFI2:
 388              		.cfi_def_cfa_offset 40
 389              		.cfi_offset 80, -40
 390              		.cfi_offset 81, -36
 420:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET){
 391              		.loc 1 420 0
 392 0008 4FF48071 		mov	r1, #256
 393 000c 4048     		ldr	r0, .L27+8
 394 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 395              	.LVL37:
 396 0012 0028     		cmp	r0, #0
 397 0014 6CD0     		beq	.L24
 398              	.L20:
 421:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 422:Core/Src/robot/robot.cpp **** 	}
 423:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET){
 399              		.loc 1 423 0
 400 0016 4FF48061 		mov	r1, #1024
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 16


 401 001a 3D48     		ldr	r0, .L27+8
 402 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 403              	.LVL38:
 404 0020 0028     		cmp	r0, #0
 405 0022 69D0     		beq	.L25
 406              	.L21:
 424:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 425:Core/Src/robot/robot.cpp **** 	}
 426:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET){
 407              		.loc 1 426 0
 408 0024 4FF40061 		mov	r1, #2048
 409 0028 3948     		ldr	r0, .L27+8
 410 002a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 411              	.LVL39:
 412 002e 0028     		cmp	r0, #0
 413 0030 66D0     		beq	.L26
 414              	.L22:
 427:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 428:Core/Src/robot/robot.cpp **** 	}
 429:Core/Src/robot/robot.cpp **** 	leg[0].set_omega(0);
 415              		.loc 1 429 0
 416 0032 9FED388A 		vldr.32	s16, .L27+12
 417 0036 384C     		ldr	r4, .L27+16
 418 0038 B0EE480A 		vmov.f32	s0, s16
 419 003c 2046     		mov	r0, r4
 420 003e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 421              	.LVL40:
 430:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(0);
 422              		.loc 1 430 0
 423 0042 B0EE480A 		vmov.f32	s0, s16
 424 0046 04F15800 		add	r0, r4, #88
 425 004a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 426              	.LVL41:
 431:Core/Src/robot/robot.cpp **** 	steering.set_angle(0);
 427              		.loc 1 431 0
 428 004e 334D     		ldr	r5, .L27+20
 429 0050 B0EE480A 		vmov.f32	s0, s16
 430 0054 2846     		mov	r0, r5
 431 0056 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 432              	.LVL42:
 433              	.LBB70:
 434              	.LBB71:
 435              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 17


  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 436              		.loc 2 48 0
 437 005a 04F13C00 		add	r0, r4, #60
 438 005e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 439              	.LVL43:
 440              	.LBE71:
 441              	.LBE70:
 432:Core/Src/robot/robot.cpp **** 	printf("\tleg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d", (int)(leg[0].get_actual_angle() 
 442              		.loc 1 432 0
 443 0062 9FED2F8A 		vldr.32	s16, .L27+24
 444 0066 60EE087A 		vmul.f32	s15, s0, s16
 445 006a 17EE900A 		vmov	r0, s15
 446 006e FFF7FEFF 		bl	__aeabi_f2d
 447              	.LVL44:
 448 0072 25A3     		adr	r3, .L27
 449 0074 D3E90023 		ldrd	r2, [r3]
 450 0078 FFF7FEFF 		bl	__aeabi_ddiv
 451              	.LVL45:
 452 007c 0646     		mov	r6, r0
 453 007e 0F46     		mov	r7, r1
 454              	.LVL46:
 455              	.LBB72:
 456              	.LBB73:
 457              		.loc 2 48 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 18


 458 0080 04F19400 		add	r0, r4, #148
 459 0084 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 460              	.LVL47:
 461              	.LBE73:
 462              	.LBE72:
 433:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 463              		.loc 1 433 0
 464 0088 60EE087A 		vmul.f32	s15, s0, s16
 465 008c 17EE900A 		vmov	r0, s15
 466 0090 FFF7FEFF 		bl	__aeabi_f2d
 467              	.LVL48:
 468 0094 1CA3     		adr	r3, .L27
 469 0096 D3E90023 		ldrd	r2, [r3]
 470 009a FFF7FEFF 		bl	__aeabi_ddiv
 471              	.LVL49:
 472 009e 8046     		mov	r8, r0
 473 00a0 8946     		mov	r9, r1
 474              	.LVL50:
 475              	.LBB74:
 476              	.LBB75:
 477              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 19


  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 20


  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 478              		.loc 3 112 0
 479 00a2 05F10C00 		add	r0, r5, #12
 480 00a6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 481              	.LVL51:
 482              	.LBE75:
 483              	.LBE74:
 484              		.loc 1 433 0
 485 00aa 60EE087A 		vmul.f32	s15, s0, s16
 486 00ae 17EE900A 		vmov	r0, s15
 487 00b2 FFF7FEFF 		bl	__aeabi_f2d
 488              	.LVL52:
 489 00b6 14A3     		adr	r3, .L27
 490 00b8 D3E90023 		ldrd	r2, [r3]
 491 00bc FFF7FEFF 		bl	__aeabi_ddiv
 492              	.LVL53:
 432:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 493              		.loc 1 432 0
 494 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 495              	.LVL54:
 496 00c4 0546     		mov	r5, r0
 497 00c6 4046     		mov	r0, r8
 498 00c8 4946     		mov	r1, r9
 499 00ca FFF7FEFF 		bl	__aeabi_d2iz
 500              	.LVL55:
 501 00ce 0446     		mov	r4, r0
 502 00d0 3046     		mov	r0, r6
 503 00d2 3946     		mov	r1, r7
 504 00d4 FFF7FEFF 		bl	__aeabi_d2iz
 505              	.LVL56:
 506 00d8 2B46     		mov	r3, r5
 507 00da 2246     		mov	r2, r4
 508 00dc 0146     		mov	r1, r0
 509 00de 1148     		ldr	r0, .L27+28
 510 00e0 FFF7FEFF 		bl	printf
 511              	.LVL57:
 434:Core/Src/robot/robot.cpp **** 	zone_select();
 512              		.loc 1 434 0
 513 00e4 FFF7FEFF 		bl	_Z11zone_selectv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 21


 514              	.LVL58:
 435:Core/Src/robot/robot.cpp **** }...
 515              		.loc 1 435 0
 516 00e8 BDEC028B 		vldm	sp!, {d8}
 517              	.LCFI3:
 518              		.cfi_remember_state
 519              		.cfi_restore 80
 520              		.cfi_restore 81
 521              		.cfi_def_cfa_offset 32
 522 00ec BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 523              	.L24:
 524              	.LCFI4:
 525              		.cfi_restore_state
 421:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 526              		.loc 1 421 0
 527 00f0 0D48     		ldr	r0, .L27+32
 528 00f2 FFF7FEFF 		bl	printf
 529              	.LVL59:
 530 00f6 8EE7     		b	.L20
 531              	.L25:
 424:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 532              		.loc 1 424 0
 533 00f8 0C48     		ldr	r0, .L27+36
 534 00fa FFF7FEFF 		bl	printf
 535              	.LVL60:
 536 00fe 91E7     		b	.L21
 537              	.L26:
 427:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 538              		.loc 1 427 0
 539 0100 0B48     		ldr	r0, .L27+40
 540 0102 FFF7FEFF 		bl	printf
 541              	.LVL61:
 542 0106 94E7     		b	.L22
 543              	.L28:
 544              		.align	3
 545              	.L27:
 546 0108 182D4454 		.word	1413754136
 547 010c FB210940 		.word	1074340347
 548 0110 000C0240 		.word	1073875968
 549 0114 00000000 		.word	0
 550 0118 00000000 		.word	leg
 551 011c 00000000 		.word	steering
 552 0120 00003443 		.word	1127481344
 553 0124 18000000 		.word	.LC12
 554 0128 00000000 		.word	.LC9
 555 012c 08000000 		.word	.LC10
 556 0130 10000000 		.word	.LC11
 557              		.cfi_endproc
 558              	.LFE500:
 560              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 561              		.align	1
 562              		.weak	_Z12swap_ElementIfEvRT_S1_
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
 568              	_Z12swap_ElementIfEvRT_S1_:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 22


 569              	.LFB509:
 570              		.file 4 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
 571              		.loc 4 16 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              	.LVL62:
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
 577              		.loc 4 18 0
 578 0000 0368     		ldr	r3, [r0]	@ float
 579              	.LVL63:
  19:Core/Inc/utils/vec3.h ****         first = second;
 580              		.loc 4 19 0
 581 0002 0A68     		ldr	r2, [r1]	@ float
 582 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h ****         second = temp;
 583              		.loc 4 20 0
 584 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** }
 585              		.loc 4 21 0
 586 0008 7047     		bx	lr
 587              		.cfi_endproc
 588              	.LFE509:
 590              		.global	__aeabi_d2f
 591              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 592              		.align	1
 593              		.global	_Z11start_RobotP12Robot_States
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu fpv4-sp-d16
 599              	_Z11start_RobotP12Robot_States:
 600              	.LFB497:
  22:Core/Src/robot/robot.cpp **** {
 601              		.loc 1 22 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 16
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL64:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 23


 606 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 607              	.LCFI5:
 608              		.cfi_def_cfa_offset 36
 609              		.cfi_offset 4, -36
 610              		.cfi_offset 5, -32
 611              		.cfi_offset 6, -28
 612              		.cfi_offset 7, -24
 613              		.cfi_offset 8, -20
 614              		.cfi_offset 9, -16
 615              		.cfi_offset 10, -12
 616              		.cfi_offset 11, -8
 617              		.cfi_offset 14, -4
 618 0004 2DED028B 		vpush.64	{d8}
 619              	.LCFI6:
 620              		.cfi_def_cfa_offset 44
 621              		.cfi_offset 80, -44
 622              		.cfi_offset 81, -40
 623 0008 87B0     		sub	sp, sp, #28
 624              	.LCFI7:
 625              		.cfi_def_cfa_offset 72
 626 000a 0446     		mov	r4, r0
 627              	.LBB112:
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
 628              		.loc 1 23 0
 629 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 630 000e 0A2B     		cmp	r3, #10
 631 0010 00F2C483 		bhi	.L30
 632 0014 DFE813F0 		tbh	[pc, r3, lsl #1]
 633              	.L33:
 634 0018 0B00     		.2byte	(.L32-.L33)/2
 635 001a 4D01     		.2byte	(.L34-.L33)/2
 636 001c AE01     		.2byte	(.L35-.L33)/2
 637 001e ED01     		.2byte	(.L36-.L33)/2
 638 0020 3D02     		.2byte	(.L37-.L33)/2
 639 0022 6702     		.2byte	(.L38-.L33)/2
 640 0024 9102     		.2byte	(.L39-.L33)/2
 641 0026 CA02     		.2byte	(.L40-.L33)/2
 642 0028 5403     		.2byte	(.L41-.L33)/2
 643 002a 9203     		.2byte	(.L42-.L33)/2
 644 002c C703     		.2byte	(.L43-.L33)/2
 645              		.p2align 1
 646              	.L32:
 647              	.LBB113:
 648              	.LBB114:
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
 649              		.loc 1 37 0
 650 002e B848     		ldr	r0, .L70+8
 651              	.LVL65:
 652 0030 FFF7FEFF 		bl	printf
 653              	.LVL66:
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
 654              		.loc 1 38 0
 655 0034 4021     		movs	r1, #64
 656 0036 B748     		ldr	r0, .L70+12
 657 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 658              	.LVL67:
 659 003c 0028     		cmp	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 24


 660 003e 40F09F80 		bne	.L44
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
 661              		.loc 1 40 0
 662 0042 B54B     		ldr	r3, .L70+16
 663 0044 0122     		movs	r2, #1
 664 0046 1A70     		strb	r2, [r3]
 665              	.L45:
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 666              		.loc 1 49 0
 667 0048 B44B     		ldr	r3, .L70+20
 668 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 669 004c 23B9     		cbnz	r3, .L46
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 670              		.loc 1 49 0 is_stmt 0 discriminator 1
 671 004e B44A     		ldr	r2, .L70+24
 672 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 673 0052 002A     		cmp	r2, #0
 674 0054 40F09B80 		bne	.L64
 675              	.L46:
  56:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
 676              		.loc 1 56 0 is_stmt 1
 677 0058 002B     		cmp	r3, #0
 678 005a 40F0B180 		bne	.L65
 679              	.LVL68:
 680              	.L47:
 681              	.LBB115:
 682              	.LBB116:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 683              		.loc 2 47 0
 684 005e B14E     		ldr	r6, .L70+28
 685 0060 3046     		mov	r0, r6
 686 0062 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 687              	.LVL69:
 688              	.LBE116:
 689              	.LBE115:
  62:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 690              		.loc 1 62 0
 691 0066 9FEDB08A 		vldr.32	s16, .L70+32
 692 006a 60EE087A 		vmul.f32	s15, s0, s16
 693 006e 17EE900A 		vmov	r0, s15
 694 0072 FFF7FEFF 		bl	__aeabi_f2d
 695              	.LVL70:
 696 0076 A4A3     		adr	r3, .L70
 697 0078 D3E90023 		ldrd	r2, [r3]
 698 007c FFF7FEFF 		bl	__aeabi_ddiv
 699              	.LVL71:
 700 0080 0446     		mov	r4, r0
 701 0082 0D46     		mov	r5, r1
 702              	.LVL72:
 703              	.LBB117:
 704              	.LBB118:
 705              		.loc 2 48 0
 706 0084 06F15800 		add	r0, r6, #88
 707 0088 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 708              	.LVL73:
 709              	.LBE118:
 710              	.LBE117:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 25


  63:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 711              		.loc 1 63 0
 712 008c 60EE087A 		vmul.f32	s15, s0, s16
 713 0090 17EE900A 		vmov	r0, s15
 714 0094 FFF7FEFF 		bl	__aeabi_f2d
 715              	.LVL74:
 716 0098 9BA3     		adr	r3, .L70
 717 009a D3E90023 		ldrd	r2, [r3]
 718 009e FFF7FEFF 		bl	__aeabi_ddiv
 719              	.LVL75:
 720 00a2 0646     		mov	r6, r0
 721 00a4 0F46     		mov	r7, r1
 722              	.LVL76:
 723              	.LBB119:
 724              	.LBB120:
 725              		.loc 3 112 0
 726 00a6 A148     		ldr	r0, .L70+36
 727 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 728              	.LVL77:
 729              	.LBE120:
 730              	.LBE119:
  63:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 731              		.loc 1 63 0
 732 00ac 60EE087A 		vmul.f32	s15, s0, s16
 733 00b0 17EE900A 		vmov	r0, s15
 734 00b4 FFF7FEFF 		bl	__aeabi_f2d
 735              	.LVL78:
 736 00b8 93A3     		adr	r3, .L70
 737 00ba D3E90023 		ldrd	r2, [r3]
 738 00be FFF7FEFF 		bl	__aeabi_ddiv
 739              	.LVL79:
 740 00c2 8046     		mov	r8, r0
 741 00c4 8946     		mov	r9, r1
 742 00c6 9A4B     		ldr	r3, .L70+40
 743 00c8 D3ED007A 		vldr.32	s15, [r3]
 744 00cc 67EE887A 		vmul.f32	s15, s15, s16
 745 00d0 17EE900A 		vmov	r0, s15
 746 00d4 FFF7FEFF 		bl	__aeabi_f2d
 747              	.LVL80:
 748 00d8 8BA3     		adr	r3, .L70
 749 00da D3E90023 		ldrd	r2, [r3]
 750 00de FFF7FEFF 		bl	__aeabi_ddiv
 751              	.LVL81:
 752 00e2 8246     		mov	r10, r0
 753 00e4 8B46     		mov	fp, r1
  62:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 754              		.loc 1 62 0
 755 00e6 4046     		mov	r0, r8
 756 00e8 4946     		mov	r1, r9
 757 00ea FFF7FEFF 		bl	__aeabi_d2iz
 758              	.LVL82:
 759 00ee 8046     		mov	r8, r0
 760 00f0 3046     		mov	r0, r6
 761 00f2 3946     		mov	r1, r7
 762 00f4 FFF7FEFF 		bl	__aeabi_d2iz
 763              	.LVL83:
 764 00f8 0646     		mov	r6, r0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 26


 765 00fa 2046     		mov	r0, r4
 766 00fc 2946     		mov	r1, r5
 767 00fe FFF7FEFF 		bl	__aeabi_d2iz
 768              	.LVL84:
 769 0102 0446     		mov	r4, r0
 770 0104 5046     		mov	r0, r10
 771 0106 5946     		mov	r1, fp
 772 0108 FFF7FEFF 		bl	__aeabi_d2iz
 773              	.LVL85:
 774 010c 0090     		str	r0, [sp]
 775 010e 4346     		mov	r3, r8
 776 0110 3246     		mov	r2, r6
 777 0112 2146     		mov	r1, r4
 778 0114 8748     		ldr	r0, .L70+44
 779 0116 FFF7FEFF 		bl	printf
 780              	.LVL86:
 781              	.LBB121:
  64:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 782              		.loc 1 64 0
 783 011a 1021     		movs	r1, #16
 784 011c 8648     		ldr	r0, .L70+48
 785 011e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 786              	.LVL87:
  66:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 787              		.loc 1 66 0
 788 0122 28B1     		cbz	r0, .L48
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 789              		.loc 1 65 0
 790 0124 0421     		movs	r1, #4
 791 0126 7B48     		ldr	r0, .L70+12
 792 0128 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 793              	.LVL88:
  64:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 794              		.loc 1 64 0
 795 012c 0028     		cmp	r0, #0
 796 012e 53D1     		bne	.L66
 797              	.L48:
  69:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 798              		.loc 1 69 0 discriminator 1
 799 0130 0022     		movs	r2, #0
 800 0132 0221     		movs	r1, #2
 801 0134 8148     		ldr	r0, .L70+52
 802 0136 FFF7FEFF 		bl	HAL_GPIO_WritePin
 803              	.LVL89:
  70:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
 804              		.loc 1 70 0 discriminator 1
 805 013a 784B     		ldr	r3, .L70+20
 806 013c 0122     		movs	r2, #1
 807 013e 1A70     		strb	r2, [r3]
  71:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 808              		.loc 1 71 0 discriminator 1
 809 0140 774B     		ldr	r3, .L70+24
 810 0142 0022     		movs	r2, #0
 811 0144 1A70     		strb	r2, [r3]
 812              	.LVL90:
 813              	.LBB122:
 814              	.LBB123:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 27


 815              	.LBB124:
 816              	.LBB125:
 817              	.LBB126:
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 28


  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 818              		.loc 4 129 0 discriminator 1
 819 0146 7E4B     		ldr	r3, .L70+56
 820 0148 1A68     		ldr	r2, [r3]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 29


 821 014a 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 822              		.loc 4 130 0 discriminator 1
 823 014c 5A68     		ldr	r2, [r3, #4]	@ float
 824 014e 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 825              		.loc 4 131 0 discriminator 1
 826 0150 9B68     		ldr	r3, [r3, #8]	@ float
 827 0152 0593     		str	r3, [sp, #20]	@ float
 828              	.LVL91:
 829              	.LBE126:
 830              	.LBE125:
 831              	.LBE124:
 832              	.LBB127:
 833              	.LBB128:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 30


 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 834              		.loc 4 175 0 discriminator 1
 835 0154 7B4C     		ldr	r4, .L70+60
 836 0156 03A9     		add	r1, sp, #12
 837              	.LVL92:
 838 0158 2046     		mov	r0, r4
 839 015a FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 840              	.LVL93:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 841              		.loc 4 176 0 discriminator 1
 842 015e 04A9     		add	r1, sp, #16
 843 0160 201D     		adds	r0, r4, #4
 844 0162 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 845              	.LVL94:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 846              		.loc 4 177 0 discriminator 1
 847 0166 05A9     		add	r1, sp, #20
 848 0168 04F10800 		add	r0, r4, #8
 849 016c FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 850              	.LVL95:
 851              	.LBE128:
 852              	.LBE127:
 853              	.LBE123:
 854              	.LBE122:
  73:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
 855              		.loc 1 73 0 discriminator 1
 856 0170 FFF7FEFF 		bl	_Z11getup_n_runv
 857              	.LVL96:
 858 0174 0028     		cmp	r0, #0
 859 0176 00F01183 		beq	.L30
  75:Core/Src/robot/robot.cpp **** 				zone_select();
 860              		.loc 1 75 0
 861 017a FFF7FEFF 		bl	_Z11zone_selectv
 862              	.LVL97:
 863 017e 0DE3     		b	.L30
 864              	.LVL98:
 865              	.L44:
 866              	.LBE121:
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
 867              		.loc 1 44 0
 868 0180 654B     		ldr	r3, .L70+16
 869 0182 0022     		movs	r2, #0
 870 0184 1A70     		strb	r2, [r3]
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
 871              		.loc 1 45 0
 872 0186 6A4B     		ldr	r3, .L70+40
 873 0188 0022     		movs	r2, #0
 874 018a 1A60     		str	r2, [r3]	@ float
 875 018c 5CE7     		b	.L45
 876              	.L64:
 877              	.LVL99:
 878              	.LBB131:
 879              	.LBB132:
 880              	.LBB133:
 881              	.LBB134:
 882              	.LBB135:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 31


 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 883              		.loc 4 129 0
 884 018e 6C4B     		ldr	r3, .L70+56
 885 0190 1A68     		ldr	r2, [r3]	@ float
 886 0192 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 887              		.loc 4 130 0
 888 0194 5A68     		ldr	r2, [r3, #4]	@ float
 889 0196 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 890              		.loc 4 131 0
 891 0198 9B68     		ldr	r3, [r3, #8]	@ float
 892 019a 0593     		str	r3, [sp, #20]	@ float
 893              	.LVL100:
 894              	.LBE135:
 895              	.LBE134:
 896              	.LBE133:
 897              	.LBB136:
 898              	.LBB137:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 899              		.loc 4 175 0
 900 019c 694C     		ldr	r4, .L70+60
 901              	.LVL101:
 902 019e 03A9     		add	r1, sp, #12
 903              	.LVL102:
 904 01a0 2046     		mov	r0, r4
 905 01a2 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 906              	.LVL103:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 907              		.loc 4 176 0
 908 01a6 04A9     		add	r1, sp, #16
 909 01a8 201D     		adds	r0, r4, #4
 910 01aa FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 911              	.LVL104:
 912              		.loc 4 177 0
 913 01ae 05A9     		add	r1, sp, #20
 914 01b0 04F10800 		add	r0, r4, #8
 915 01b4 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 916              	.LVL105:
 917              	.LBE137:
 918              	.LBE136:
 919              	.LBE132:
 920              	.LBE131:
  52:Core/Src/robot/robot.cpp **** 			printf("not set");
 921              		.loc 1 52 0
 922 01b8 6348     		ldr	r0, .L70+64
 923 01ba FFF7FEFF 		bl	printf
 924              	.LVL106:
 925 01be 4EE7     		b	.L47
 926              	.LVL107:
 927              	.L65:
  58:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 928              		.loc 1 58 0
 929 01c0 574B     		ldr	r3, .L70+24
 930 01c2 0022     		movs	r2, #0
 931 01c4 1A70     		strb	r2, [r3]
  59:Core/Src/robot/robot.cpp **** 			printf("\n\nset\n\n");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 32


 932              		.loc 1 59 0
 933 01c6 6148     		ldr	r0, .L70+68
 934 01c8 FFF7FEFF 		bl	puts
 935              	.LVL108:
  60:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 936              		.loc 1 60 0
 937 01cc 0122     		movs	r2, #1
 938 01ce 0221     		movs	r1, #2
 939 01d0 5A48     		ldr	r0, .L70+52
 940 01d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 941              	.LVL109:
 942 01d6 42E7     		b	.L47
 943              	.LVL110:
 944              	.L66:
 945              	.LBB138:
  66:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 946              		.loc 1 66 0
 947 01d8 0221     		movs	r1, #2
 948 01da 5D48     		ldr	r0, .L70+72
 949 01dc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 950              	.LVL111:
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 951              		.loc 1 65 0
 952 01e0 0028     		cmp	r0, #0
 953 01e2 A5D0     		beq	.L48
  67:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
 954              		.loc 1 67 0 discriminator 2
 955 01e4 0821     		movs	r1, #8
 956 01e6 5A48     		ldr	r0, .L70+72
 957 01e8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 958              	.LVL112:
  66:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 959              		.loc 1 66 0 discriminator 2
 960 01ec 0028     		cmp	r0, #0
 961 01ee 9FD0     		beq	.L48
 962              	.LBB129:
  78:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
 963              		.loc 1 78 0
 964 01f0 4FF40071 		mov	r1, #512
 965 01f4 5648     		ldr	r0, .L70+72
 966 01f6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 967              	.LVL113:
 968 01fa 0028     		cmp	r0, #0
 969 01fc 45D1     		bne	.L67
 970              	.LBB130:
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 971              		.loc 1 81 0
 972 01fe 544C     		ldr	r4, .L70+72
 973 0200 0022     		movs	r2, #0
 974 0202 4FF48051 		mov	r1, #4096
 975 0206 2046     		mov	r0, r4
 976 0208 FFF7FEFF 		bl	HAL_GPIO_WritePin
 977              	.LVL114:
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 978              		.loc 1 82 0
 979 020c 0022     		movs	r2, #0
 980 020e 4FF40051 		mov	r1, #8192
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 33


 981 0212 2046     		mov	r0, r4
 982 0214 FFF7FEFF 		bl	HAL_GPIO_WritePin
 983              	.LVL115:
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 984              		.loc 1 83 0
 985 0218 0022     		movs	r2, #0
 986 021a 4FF48041 		mov	r1, #16384
 987 021e 2046     		mov	r0, r4
 988 0220 FFF7FEFF 		bl	HAL_GPIO_WritePin
 989              	.LVL116:
  84:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 990              		.loc 1 84 0
 991 0224 0022     		movs	r2, #0
 992 0226 4FF40041 		mov	r1, #32768
 993 022a 2046     		mov	r0, r4
 994 022c FFF7FEFF 		bl	HAL_GPIO_WritePin
 995              	.LVL117:
  85:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 996              		.loc 1 85 0
 997 0230 0022     		movs	r2, #0
 998 0232 0221     		movs	r1, #2
 999 0234 4148     		ldr	r0, .L70+52
 1000 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1001              	.LVL118:
  86:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1002              		.loc 1 86 0
 1003 023a 384B     		ldr	r3, .L70+20
 1004 023c 0022     		movs	r2, #0
 1005 023e 1A70     		strb	r2, [r3]
  88:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1006              		.loc 1 88 0
 1007 0240 444B     		ldr	r3, .L70+76
 1008 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1009 0244 BFF35B8F 		dmb	ish
 1010 0248 13F0010F 		tst	r3, #1
 1011 024c 10D0     		beq	.L68
 1012              	.L53:
  89:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 1013              		.loc 1 89 0
 1014 024e FFF7FEFF 		bl	HAL_GetTick
 1015              	.LVL119:
 1016 0252 414B     		ldr	r3, .L70+80
 1017 0254 1B68     		ldr	r3, [r3]
 1018 0256 C31A     		subs	r3, r0, r3
 1019 0258 B3F5FA7F 		cmp	r3, #500
 1020 025c C0F09E82 		bcc	.L30
  91:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
 1021              		.loc 1 91 0
 1022 0260 FFF7FEFF 		bl	_Z11getup_n_runv
 1023              	.LVL120:
 1024 0264 0028     		cmp	r0, #0
 1025 0266 00F09982 		beq	.L30
  93:Core/Src/robot/robot.cpp **** 					zone_select();
 1026              		.loc 1 93 0
 1027 026a FFF7FEFF 		bl	_Z11zone_selectv
 1028              	.LVL121:
 1029 026e 95E2     		b	.L30
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 34


 1030              	.L68:
  88:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1031              		.loc 1 88 0 discriminator 1
 1032 0270 3848     		ldr	r0, .L70+76
 1033 0272 FFF7FEFF 		bl	__cxa_guard_acquire
 1034              	.LVL122:
 1035 0276 0028     		cmp	r0, #0
 1036 0278 E9D0     		beq	.L53
  88:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1037              		.loc 1 88 0 is_stmt 0 discriminator 2
 1038 027a FFF7FEFF 		bl	HAL_GetTick
 1039              	.LVL123:
 1040 027e 364B     		ldr	r3, .L70+80
 1041 0280 1860     		str	r0, [r3]
 1042 0282 3448     		ldr	r0, .L70+76
 1043 0284 FFF7FEFF 		bl	__cxa_guard_release
 1044              	.LVL124:
 1045 0288 E1E7     		b	.L53
 1046              	.L67:
 1047              	.LBE130:
 100:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1048              		.loc 1 100 0 is_stmt 1
 1049 028a 9FED348A 		vldr.32	s16, .L70+84
 1050 028e 344C     		ldr	r4, .L70+88
 1051 0290 B0EE480A 		vmov.f32	s0, s16
 1052 0294 2046     		mov	r0, r4
 1053 0296 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1054              	.LVL125:
 101:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1055              		.loc 1 101 0
 1056 029a B0EE480A 		vmov.f32	s0, s16
 1057 029e 04F15800 		add	r0, r4, #88
 1058 02a2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1059              	.LVL126:
 102:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 1060              		.loc 1 102 0
 1061 02a6 B0EE480A 		vmov.f32	s0, s16
 1062 02aa 2E48     		ldr	r0, .L70+92
 1063 02ac FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1064              	.LVL127:
 1065 02b0 74E2     		b	.L30
 1066              	.LVL128:
 1067              	.L34:
 1068              	.LBE129:
 1069              	.LBE138:
 1070              	.LBE114:
 114:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 1071              		.loc 1 114 0
 1072 02b2 2D48     		ldr	r0, .L70+96
 1073              	.LVL129:
 1074 02b4 FFF7FEFF 		bl	printf
 1075              	.LVL130:
 115:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 1076              		.loc 1 115 0
 1077 02b8 2C4B     		ldr	r3, .L70+100
 1078 02ba D3ED007A 		vldr.32	s15, [r3]
 1079 02be 2C4B     		ldr	r3, .L70+104
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 35


 1080 02c0 93ED000A 		vldr.32	s0, [r3]
 1081 02c4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1082 02c8 17EE900A 		vmov	r0, s15	@ int
 1083 02cc FFF7FEFF 		bl	_Z2goif
 1084              	.LVL131:
 1085 02d0 0028     		cmp	r0, #0
 1086 02d2 00F06382 		beq	.L30
 117:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 1087              		.loc 1 117 0
 1088 02d6 0223     		movs	r3, #2
 1089 02d8 2370     		strb	r3, [r4]
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1090              		.loc 1 118 0
 1091 02da 1D4C     		ldr	r4, .L70+72
 1092              	.LVL132:
 1093 02dc 4FF48051 		mov	r1, #4096
 1094 02e0 2046     		mov	r0, r4
 1095 02e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1096              	.LVL133:
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1097              		.loc 1 119 0
 1098 02e6 4FF40051 		mov	r1, #8192
 1099 02ea 2046     		mov	r0, r4
 1100 02ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1101              	.LVL134:
 120:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1102              		.loc 1 120 0
 1103 02f0 4FF48041 		mov	r1, #16384
 1104 02f4 2046     		mov	r0, r4
 1105 02f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1106              	.LVL135:
 121:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1107              		.loc 1 121 0
 1108 02fa 4FF40041 		mov	r1, #32768
 1109 02fe 2046     		mov	r0, r4
 1110 0300 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1111              	.LVL136:
 1112 0304 4AE2     		b	.L30
 1113              	.L71:
 1114 0306 00BF     		.align	3
 1115              	.L70:
 1116 0308 182D4454 		.word	1413754136
 1117 030c FB210940 		.word	1074340347
 1118 0310 00000000 		.word	.LC13
 1119 0314 00100240 		.word	1073876992
 1120 0318 00000000 		.word	.LANCHOR4
 1121 031c 00000000 		.word	.LANCHOR1
 1122 0320 00000000 		.word	.LANCHOR5
 1123 0324 3C000000 		.word	leg+60
 1124 0328 00003443 		.word	1127481344
 1125 032c 0C000000 		.word	steering+12
 1126 0330 00000000 		.word	robot_angle
 1127 0334 18000000 		.word	.LC16
 1128 0338 00040240 		.word	1073873920
 1129 033c 00080240 		.word	1073874944
 1130 0340 00000000 		.word	curr_angle
 1131 0344 00000000 		.word	initial_angle
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 36


 1132 0348 08000000 		.word	.LC14
 1133 034c 10000000 		.word	.LC15
 1134 0350 000C0240 		.word	1073875968
 1135 0354 00000000 		.word	.LANCHOR6
 1136 0358 00000000 		.word	.LANCHOR7
 1137 035c 00000000 		.word	0
 1138 0360 00000000 		.word	leg
 1139 0364 00000000 		.word	steering
 1140 0368 60000000 		.word	.LC17
 1141 036c 00000000 		.word	.LANCHOR2
 1142 0370 00000000 		.word	.LANCHOR3
 1143              	.LVL137:
 1144              	.L35:
 135:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 1145              		.loc 1 135 0
 1146 0374 C248     		ldr	r0, .L72+8
 1147              	.LVL138:
 1148 0376 FFF7FEFF 		bl	printf
 1149              	.LVL139:
 137:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 1150              		.loc 1 137 0
 1151 037a C24B     		ldr	r3, .L72+12
 1152 037c 93ED010A 		vldr.32	s0, [r3, #4]
 1153 0380 6320     		movs	r0, #99
 1154 0382 FFF7FEFF 		bl	_Z2goif
 1155              	.LVL140:
 138:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1156              		.loc 1 138 0
 1157 0386 4FF48071 		mov	r1, #256
 1158 038a BF48     		ldr	r0, .L72+16
 1159 038c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1160              	.LVL141:
 1161 0390 68B1     		cbz	r0, .L54
 1162              	.LVL142:
 1163              	.LBB139:
 1164              	.LBB140:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1165              		.loc 2 45 0
 1166 0392 BE4B     		ldr	r3, .L72+20
 1167 0394 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1168              	.LVL143:
 1169              	.LBE140:
 1170              	.LBE139:
 138:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1171              		.loc 1 138 0
 1172 0398 F8EEE77A 		vcvt.f32.s32	s15, s15
 1173 039c BC4B     		ldr	r3, .L72+24
 1174 039e 93ED017A 		vldr.32	s14, [r3, #4]
 1175 03a2 F4EEC77A 		vcmpe.f32	s15, s14
 1176 03a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1177 03aa 40F3F781 		ble	.L30
 1178              	.L54:
 141:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 1179              		.loc 1 141 0 discriminator 3
 1180 03ae 0323     		movs	r3, #3
 1181 03b0 2370     		strb	r3, [r4]
 142:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 37


 1182              		.loc 1 142 0 discriminator 3
 1183 03b2 B74B     		ldr	r3, .L72+24
 1184 03b4 D3ED017A 		vldr.32	s15, [r3, #4]
 1185 03b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1186 03bc B34A     		ldr	r2, .L72+20
 1187 03be C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 143:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 1188              		.loc 1 143 0 discriminator 3
 1189 03c2 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1190              		.loc 1 145 0 discriminator 3
 1191 03c6 B04C     		ldr	r4, .L72+16
 1192              	.LVL144:
 1193 03c8 4FF48051 		mov	r1, #4096
 1194 03cc 2046     		mov	r0, r4
 1195 03ce FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1196              	.LVL145:
 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1197              		.loc 1 146 0 discriminator 3
 1198 03d2 4FF40051 		mov	r1, #8192
 1199 03d6 2046     		mov	r0, r4
 1200 03d8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1201              	.LVL146:
 147:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1202              		.loc 1 147 0 discriminator 3
 1203 03dc 4FF48041 		mov	r1, #16384
 1204 03e0 2046     		mov	r0, r4
 1205 03e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1206              	.LVL147:
 148:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1207              		.loc 1 148 0 discriminator 3
 1208 03e6 4FF40041 		mov	r1, #32768
 1209 03ea 2046     		mov	r0, r4
 1210 03ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1211              	.LVL148:
 1212 03f0 D4E1     		b	.L30
 1213              	.LVL149:
 1214              	.L36:
 159:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 1215              		.loc 1 159 0
 1216 03f2 A848     		ldr	r0, .L72+28
 1217              	.LVL150:
 1218 03f4 FFF7FEFF 		bl	printf
 1219              	.LVL151:
 161:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 1220              		.loc 1 161 0
 1221 03f8 A24B     		ldr	r3, .L72+12
 1222 03fa 93ED020A 		vldr.32	s0, [r3, #8]
 1223 03fe 6420     		movs	r0, #100
 1224 0400 FFF7FEFF 		bl	_Z2goif
 1225              	.LVL152:
 162:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1226              		.loc 1 162 0
 1227 0404 4FF48061 		mov	r1, #1024
 1228 0408 9F48     		ldr	r0, .L72+16
 1229 040a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1230              	.LVL153:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 38


 1231 040e 80B9     		cbnz	r0, .L56
 1232              	.LVL154:
 1233              	.LBB141:
 1234              	.LBB142:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1235              		.loc 2 45 0
 1236 0410 9E4B     		ldr	r3, .L72+20
 1237 0412 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 1238              	.LVL155:
 1239              	.LBE142:
 1240              	.LBE141:
 162:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1241              		.loc 1 162 0
 1242 0416 B8EEC77A 		vcvt.f32.s32	s14, s14
 1243 041a 9D4B     		ldr	r3, .L72+24
 1244 041c D3ED027A 		vldr.32	s15, [r3, #8]
 1245 0420 F0EE006A 		vmov.f32	s13, #2.0e+0
 1246 0424 77EEE67A 		vsub.f32	s15, s15, s13
 1247 0428 B4EEE77A 		vcmpe.f32	s14, s15
 1248 042c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1249 0430 0DDC     		bgt	.L57
 1250              	.L56:
 1251              	.LVL156:
 1252              	.LBB143:
 1253              	.LBB144:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1254              		.loc 2 45 0 discriminator 4
 1255 0432 964B     		ldr	r3, .L72+20
 1256 0434 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1257              	.LVL157:
 1258              	.LBE144:
 1259              	.LBE143:
 162:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1260              		.loc 1 162 0 discriminator 4
 1261 0438 F8EEE77A 		vcvt.f32.s32	s15, s15
 1262 043c 944B     		ldr	r3, .L72+24
 1263 043e 93ED027A 		vldr.32	s14, [r3, #8]
 1264 0442 F4EEC77A 		vcmpe.f32	s15, s14
 1265 0446 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1266 044a C0F2A781 		blt	.L30
 1267              	.L57:
 165:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 1268              		.loc 1 165 0 discriminator 5
 1269 044e 0423     		movs	r3, #4
 1270 0450 2370     		strb	r3, [r4]
 166:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 1271              		.loc 1 166 0 discriminator 5
 1272 0452 8F4B     		ldr	r3, .L72+24
 1273 0454 D3ED027A 		vldr.32	s15, [r3, #8]
 1274 0458 FDEEE77A 		vcvt.s32.f32	s15, s15
 1275 045c 8B4A     		ldr	r2, .L72+20
 1276 045e C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 167:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 1277              		.loc 1 167 0 discriminator 5
 1278 0462 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1279              		.loc 1 169 0 discriminator 5
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 39


 1280 0466 884C     		ldr	r4, .L72+16
 1281              	.LVL158:
 1282 0468 4FF48051 		mov	r1, #4096
 1283 046c 2046     		mov	r0, r4
 1284 046e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1285              	.LVL159:
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1286              		.loc 1 170 0 discriminator 5
 1287 0472 4FF40051 		mov	r1, #8192
 1288 0476 2046     		mov	r0, r4
 1289 0478 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1290              	.LVL160:
 171:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1291              		.loc 1 171 0 discriminator 5
 1292 047c 4FF48041 		mov	r1, #16384
 1293 0480 2046     		mov	r0, r4
 1294 0482 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1295              	.LVL161:
 172:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1296              		.loc 1 172 0 discriminator 5
 1297 0486 4FF40041 		mov	r1, #32768
 1298 048a 2046     		mov	r0, r4
 1299 048c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1300              	.LVL162:
 1301 0490 84E1     		b	.L30
 1302              	.LVL163:
 1303              	.L37:
 183:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 1304              		.loc 1 183 0
 1305 0492 8148     		ldr	r0, .L72+32
 1306              	.LVL164:
 1307 0494 FFF7FEFF 		bl	printf
 1308              	.LVL165:
 184:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 1309              		.loc 1 184 0
 1310 0498 7D4B     		ldr	r3, .L72+24
 1311 049a D3ED037A 		vldr.32	s15, [r3, #12]
 1312 049e 794B     		ldr	r3, .L72+12
 1313 04a0 93ED030A 		vldr.32	s0, [r3, #12]
 1314 04a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1315 04a8 17EE900A 		vmov	r0, s15	@ int
 1316 04ac FFF7FEFF 		bl	_Z2goif
 1317              	.LVL166:
 1318 04b0 0028     		cmp	r0, #0
 1319 04b2 00F07381 		beq	.L30
 186:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 1320              		.loc 1 186 0
 1321 04b6 0523     		movs	r3, #5
 1322 04b8 2370     		strb	r3, [r4]
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1323              		.loc 1 188 0
 1324 04ba 734C     		ldr	r4, .L72+16
 1325              	.LVL167:
 1326 04bc 4FF48051 		mov	r1, #4096
 1327 04c0 2046     		mov	r0, r4
 1328 04c2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1329              	.LVL168:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 40


 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1330              		.loc 1 189 0
 1331 04c6 4FF40051 		mov	r1, #8192
 1332 04ca 2046     		mov	r0, r4
 1333 04cc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1334              	.LVL169:
 190:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1335              		.loc 1 190 0
 1336 04d0 4FF48041 		mov	r1, #16384
 1337 04d4 2046     		mov	r0, r4
 1338 04d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1339              	.LVL170:
 191:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1340              		.loc 1 191 0
 1341 04da 4FF40041 		mov	r1, #32768
 1342 04de 2046     		mov	r0, r4
 1343 04e0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1344              	.LVL171:
 1345 04e4 5AE1     		b	.L30
 1346              	.LVL172:
 1347              	.L38:
 202:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 1348              		.loc 1 202 0
 1349 04e6 6D48     		ldr	r0, .L72+36
 1350              	.LVL173:
 1351 04e8 FFF7FEFF 		bl	printf
 1352              	.LVL174:
 203:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 1353              		.loc 1 203 0
 1354 04ec 684B     		ldr	r3, .L72+24
 1355 04ee D3ED047A 		vldr.32	s15, [r3, #16]
 1356 04f2 644B     		ldr	r3, .L72+12
 1357 04f4 93ED040A 		vldr.32	s0, [r3, #16]
 1358 04f8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1359 04fc 17EE900A 		vmov	r0, s15	@ int
 1360 0500 FFF7FEFF 		bl	_Z2goif
 1361              	.LVL175:
 1362 0504 0028     		cmp	r0, #0
 1363 0506 00F04981 		beq	.L30
 205:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 1364              		.loc 1 205 0
 1365 050a 0623     		movs	r3, #6
 1366 050c 2370     		strb	r3, [r4]
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1367              		.loc 1 207 0
 1368 050e 5E4C     		ldr	r4, .L72+16
 1369              	.LVL176:
 1370 0510 4FF48051 		mov	r1, #4096
 1371 0514 2046     		mov	r0, r4
 1372 0516 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1373              	.LVL177:
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1374              		.loc 1 208 0
 1375 051a 4FF40051 		mov	r1, #8192
 1376 051e 2046     		mov	r0, r4
 1377 0520 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1378              	.LVL178:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 41


 209:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1379              		.loc 1 209 0
 1380 0524 4FF48041 		mov	r1, #16384
 1381 0528 2046     		mov	r0, r4
 1382 052a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1383              	.LVL179:
 210:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1384              		.loc 1 210 0
 1385 052e 4FF40041 		mov	r1, #32768
 1386 0532 2046     		mov	r0, r4
 1387 0534 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1388              	.LVL180:
 1389 0538 30E1     		b	.L30
 1390              	.LVL181:
 1391              	.L39:
 1392              	.LBB145:
 222:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 1393              		.loc 1 222 0
 1394 053a 5948     		ldr	r0, .L72+40
 1395              	.LVL182:
 1396 053c FFF7FEFF 		bl	printf
 1397              	.LVL183:
 223:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 1398              		.loc 1 223 0
 1399 0540 584B     		ldr	r3, .L72+44
 1400 0542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1401 0544 93B9     		cbnz	r3, .L59
 225:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true) 
 1402              		.loc 1 225 0
 1403 0546 524B     		ldr	r3, .L72+24
 1404 0548 D3ED057A 		vldr.32	s15, [r3, #20]
 1405 054c 4D4B     		ldr	r3, .L72+12
 1406 054e 93ED050A 		vldr.32	s0, [r3, #20]
 1407 0552 FDEEE77A 		vcvt.s32.f32	s15, s15
 1408 0556 17EE900A 		vmov	r0, s15	@ int
 1409 055a FFF7FEFF 		bl	_Z2goif
 1410              	.LVL184:
 1411 055e 0028     		cmp	r0, #0
 1412 0560 00F01C81 		beq	.L30
 227:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 1413              		.loc 1 227 0
 1414 0564 4F4B     		ldr	r3, .L72+44
 1415 0566 0122     		movs	r2, #1
 1416 0568 1A70     		strb	r2, [r3]
 1417 056a 17E1     		b	.L30
 1418              	.L59:
 232:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1419              		.loc 1 232 0
 1420 056c FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1421              	.LVL185:
 1422 0570 0028     		cmp	r0, #0
 1423 0572 00F01381 		beq	.L30
 234:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1424              		.loc 1 234 0
 1425 0576 0723     		movs	r3, #7
 1426 0578 2370     		strb	r3, [r4]
 235:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 42


 1427              		.loc 1 235 0
 1428 057a 4B4B     		ldr	r3, .L72+48
 1429 057c 0022     		movs	r2, #0
 1430 057e 1A70     		strb	r2, [r3]
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1431              		.loc 1 236 0
 1432 0580 414C     		ldr	r4, .L72+16
 1433              	.LVL186:
 1434 0582 4FF48051 		mov	r1, #4096
 1435 0586 2046     		mov	r0, r4
 1436 0588 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1437              	.LVL187:
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1438              		.loc 1 237 0
 1439 058c 4FF40051 		mov	r1, #8192
 1440 0590 2046     		mov	r0, r4
 1441 0592 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1442              	.LVL188:
 238:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1443              		.loc 1 238 0
 1444 0596 4FF48041 		mov	r1, #16384
 1445 059a 2046     		mov	r0, r4
 1446 059c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1447              	.LVL189:
 239:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1448              		.loc 1 239 0
 1449 05a0 4FF40041 		mov	r1, #32768
 1450 05a4 2046     		mov	r0, r4
 1451 05a6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1452              	.LVL190:
 1453 05aa F7E0     		b	.L30
 1454              	.LVL191:
 1455              	.L40:
 1456              	.LBE145:
 250:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1457              		.loc 1 250 0
 1458 05ac 3F48     		ldr	r0, .L72+52
 1459              	.LVL192:
 1460 05ae FFF7FEFF 		bl	printf
 1461              	.LVL193:
 251:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1462              		.loc 1 251 0
 1463 05b2 9FED3F8A 		vldr.32	s16, .L72+56
 1464 05b6 354D     		ldr	r5, .L72+20
 1465 05b8 B0EE480A 		vmov.f32	s0, s16
 1466 05bc 2846     		mov	r0, r5
 1467 05be FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1468              	.LVL194:
 252:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1469              		.loc 1 252 0
 1470 05c2 B0EE480A 		vmov.f32	s0, s16
 1471 05c6 05F15800 		add	r0, r5, #88
 1472 05ca FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1473              	.LVL195:
 253:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1474              		.loc 1 253 0
 1475 05ce B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 43


 1476 05d2 3848     		ldr	r0, .L72+60
 1477 05d4 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1478              	.LVL196:
 254:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1479              		.loc 1 254 0
 1480 05d8 4FF48061 		mov	r1, #1024
 1481 05dc 2A48     		ldr	r0, .L72+16
 1482 05de FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1483              	.LVL197:
 255:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1484              		.loc 1 255 0
 1485 05e2 0028     		cmp	r0, #0
 1486 05e4 3DD1     		bne	.L69
 1487              	.L60:
 255:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1488              		.loc 1 255 0 is_stmt 0 discriminator 1
 1489 05e6 304B     		ldr	r3, .L72+48
 1490 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 05ea 002B     		cmp	r3, #0
 1492 05ec 00F0D680 		beq	.L30
 258:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1493              		.loc 1 258 0 is_stmt 1
 1494 05f0 0823     		movs	r3, #8
 1495 05f2 2370     		strb	r3, [r4]
 259:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1496              		.loc 1 259 0
 1497 05f4 304B     		ldr	r3, .L72+64
 1498 05f6 93ED007A 		vldr.32	s14, [r3]
 1499 05fa DFED307A 		vldr.32	s15, .L72+68
 1500 05fe 67EE277A 		vmul.f32	s15, s14, s15
 1501 0602 17EE900A 		vmov	r0, s15
 1502 0606 FFF7FEFF 		bl	__aeabi_f2d
 1503              	.LVL198:
 1504 060a 1BA3     		adr	r3, .L72
 1505 060c D3E90023 		ldrd	r2, [r3]
 1506 0610 FFF7FEFF 		bl	__aeabi_ddiv
 1507              	.LVL199:
 1508 0614 FFF7FEFF 		bl	__aeabi_d2f
 1509              	.LVL200:
 1510 0618 1A4B     		ldr	r3, .L72+12
 1511 061a 9861     		str	r0, [r3, #24]	@ float
 260:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1512              		.loc 1 260 0
 1513 061c 224B     		ldr	r3, .L72+48
 1514 061e 0022     		movs	r2, #0
 1515 0620 1A70     		strb	r2, [r3]
 261:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[5];
 1516              		.loc 1 261 0
 1517 0622 1B4B     		ldr	r3, .L72+24
 1518 0624 D3ED057A 		vldr.32	s15, [r3, #20]
 1519 0628 FDEEE77A 		vcvt.s32.f32	s15, s15
 1520 062c 174A     		ldr	r2, .L72+20
 1521 062e C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 262:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[5];
 1522              		.loc 1 262 0
 1523 0632 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 44


 1524              		.loc 1 263 0
 1525 0636 144C     		ldr	r4, .L72+16
 1526              	.LVL201:
 1527 0638 4FF48051 		mov	r1, #4096
 1528 063c 2046     		mov	r0, r4
 1529 063e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1530              	.LVL202:
 264:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1531              		.loc 1 264 0
 1532 0642 4FF40051 		mov	r1, #8192
 1533 0646 2046     		mov	r0, r4
 1534 0648 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1535              	.LVL203:
 265:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1536              		.loc 1 265 0
 1537 064c 4FF48041 		mov	r1, #16384
 1538 0650 2046     		mov	r0, r4
 1539 0652 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1540              	.LVL204:
 266:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1541              		.loc 1 266 0
 1542 0656 4FF40041 		mov	r1, #32768
 1543 065a 2046     		mov	r0, r4
 1544 065c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1545              	.LVL205:
 1546 0660 9CE0     		b	.L30
 1547              	.LVL206:
 1548              	.L69:
 255:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1549              		.loc 1 255 0 discriminator 2
 1550 0662 4FF40061 		mov	r1, #2048
 1551 0666 0848     		ldr	r0, .L72+16
 1552 0668 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1553              	.LVL207:
 254:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1554              		.loc 1 254 0 discriminator 2
 1555 066c 0028     		cmp	r0, #0
 1556 066e BAD0     		beq	.L60
 1557 0670 94E0     		b	.L30
 1558              	.L73:
 1559 0672 00BFAFF3 		.align	3
 1559      0080
 1560              	.L72:
 1561 0678 182D4454 		.word	1413754136
 1562 067c FB210940 		.word	1074340347
 1563 0680 68000000 		.word	.LC18
 1564 0684 00000000 		.word	.LANCHOR3
 1565 0688 000C0240 		.word	1073875968
 1566 068c 00000000 		.word	leg
 1567 0690 00000000 		.word	.LANCHOR2
 1568 0694 74000000 		.word	.LC19
 1569 0698 80000000 		.word	.LC20
 1570 069c 8C000000 		.word	.LC21
 1571 06a0 98000000 		.word	.LC22
 1572 06a4 00000000 		.word	.LANCHOR8
 1573 06a8 00000000 		.word	.LANCHOR1
 1574 06ac A4000000 		.word	.LC23
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 45


 1575 06b0 00000000 		.word	0
 1576 06b4 00000000 		.word	steering
 1577 06b8 00000000 		.word	robot_angle
 1578 06bc 00003443 		.word	1127481344
 1579              	.LVL208:
 1580              	.L41:
 1581              	.LBB146:
 277:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 1582              		.loc 1 277 0
 1583 06c0 4248     		ldr	r0, .L74
 1584              	.LVL209:
 1585 06c2 FFF7FEFF 		bl	printf
 1586              	.LVL210:
 278:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 1587              		.loc 1 278 0
 1588 06c6 424B     		ldr	r3, .L74+4
 1589 06c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 06ca DBB9     		cbnz	r3, .L61
 280:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 1591              		.loc 1 280 0
 1592 06cc 414B     		ldr	r3, .L74+8
 1593 06ce D3ED067A 		vldr.32	s15, [r3, #24]
 1594 06d2 414B     		ldr	r3, .L74+12
 1595 06d4 93ED060A 		vldr.32	s0, [r3, #24]
 1596 06d8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1597 06dc 17EE900A 		vmov	r0, s15	@ int
 1598 06e0 FFF7FEFF 		bl	_Z2goif
 1599              	.LVL211:
 1600 06e4 0028     		cmp	r0, #0
 1601 06e6 59D0     		beq	.L30
 282:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1602              		.loc 1 282 0
 1603 06e8 394B     		ldr	r3, .L74+4
 1604 06ea 0122     		movs	r2, #1
 1605 06ec 1A70     		strb	r2, [r3]
 283:Core/Src/robot/robot.cpp **** 				leg[0].steps = steps[5];
 1606              		.loc 1 283 0
 1607 06ee 394B     		ldr	r3, .L74+8
 1608 06f0 D3ED057A 		vldr.32	s15, [r3, #20]
 1609 06f4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1610 06f8 384A     		ldr	r2, .L74+16
 1611 06fa C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 284:Core/Src/robot/robot.cpp **** 				leg[1].steps = steps[5];
 1612              		.loc 1 284 0
 1613 06fe C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 1614 0702 4BE0     		b	.L30
 1615              	.L61:
 289:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1616              		.loc 1 289 0
 1617 0704 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1618              	.LVL212:
 1619 0708 0028     		cmp	r0, #0
 1620 070a 47D0     		beq	.L30
 291:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1621              		.loc 1 291 0
 1622 070c 0923     		movs	r3, #9
 1623 070e 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 46


 292:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1624              		.loc 1 292 0
 1625 0710 334C     		ldr	r4, .L74+20
 1626              	.LVL213:
 1627 0712 4FF48051 		mov	r1, #4096
 1628 0716 2046     		mov	r0, r4
 1629 0718 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1630              	.LVL214:
 293:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1631              		.loc 1 293 0
 1632 071c 4FF40051 		mov	r1, #8192
 1633 0720 2046     		mov	r0, r4
 1634 0722 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1635              	.LVL215:
 294:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1636              		.loc 1 294 0
 1637 0726 4FF48041 		mov	r1, #16384
 1638 072a 2046     		mov	r0, r4
 1639 072c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1640              	.LVL216:
 295:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1641              		.loc 1 295 0
 1642 0730 4FF40041 		mov	r1, #32768
 1643 0734 2046     		mov	r0, r4
 1644 0736 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1645              	.LVL217:
 1646 073a 2FE0     		b	.L30
 1647              	.LVL218:
 1648              	.L42:
 1649              	.LBE146:
 306:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1650              		.loc 1 306 0
 1651 073c 2948     		ldr	r0, .L74+24
 1652              	.LVL219:
 1653 073e FFF7FEFF 		bl	puts
 1654              	.LVL220:
 307:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1655              		.loc 1 307 0
 1656 0742 9FED298A 		vldr.32	s16, .L74+28
 1657 0746 254C     		ldr	r4, .L74+16
 1658              	.LVL221:
 1659 0748 B0EE480A 		vmov.f32	s0, s16
 1660 074c 2046     		mov	r0, r4
 1661 074e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1662              	.LVL222:
 308:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1663              		.loc 1 308 0
 1664 0752 B0EE480A 		vmov.f32	s0, s16
 1665 0756 04F15800 		add	r0, r4, #88
 1666 075a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1667              	.LVL223:
 309:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1668              		.loc 1 309 0
 1669 075e B0EE480A 		vmov.f32	s0, s16
 1670 0762 2248     		ldr	r0, .L74+32
 1671 0764 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1672              	.LVL224:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 47


 311:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1673              		.loc 1 311 0
 1674 0768 1D4C     		ldr	r4, .L74+20
 1675 076a 4FF48051 		mov	r1, #4096
 1676 076e 2046     		mov	r0, r4
 1677 0770 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1678              	.LVL225:
 312:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1679              		.loc 1 312 0
 1680 0774 4FF40051 		mov	r1, #8192
 1681 0778 2046     		mov	r0, r4
 1682 077a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1683              	.LVL226:
 313:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1684              		.loc 1 313 0
 1685 077e 4FF48041 		mov	r1, #16384
 1686 0782 2046     		mov	r0, r4
 1687 0784 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1688              	.LVL227:
 314:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1689              		.loc 1 314 0
 1690 0788 4FF40041 		mov	r1, #32768
 1691 078c 2046     		mov	r0, r4
 1692 078e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1693              	.LVL228:
 315:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1694              		.loc 1 315 0
 1695 0792 0122     		movs	r2, #1
 1696 0794 0421     		movs	r1, #4
 1697 0796 1648     		ldr	r0, .L74+36
 1698 0798 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1699              	.LVL229:
 1700              	.L30:
 1701              	.LBE113:
 1702              	.LBE112:
 325:Core/Src/robot/robot.cpp **** }
 1703              		.loc 1 325 0
 1704 079c 07B0     		add	sp, sp, #28
 1705              	.LCFI8:
 1706              		.cfi_remember_state
 1707              		.cfi_def_cfa_offset 44
 1708              		@ sp needed
 1709 079e BDEC028B 		vldm	sp!, {d8}
 1710              	.LCFI9:
 1711              		.cfi_restore 80
 1712              		.cfi_restore 81
 1713              		.cfi_def_cfa_offset 36
 1714 07a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1715              	.LVL230:
 1716              	.L43:
 1717              	.LCFI10:
 1718              		.cfi_restore_state
 1719              	.LBB148:
 1720              	.LBB147:
 320:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1721              		.loc 1 320 0
 1722 07a6 0D4C     		ldr	r4, .L74+16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 48


 1723 07a8 B2EE040A 		vmov.f32	s0, #1.0e+1
 1724 07ac 2046     		mov	r0, r4
 1725              	.LVL231:
 1726 07ae FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1727              	.LVL232:
 321:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1728              		.loc 1 321 0
 1729 07b2 B2EE040A 		vmov.f32	s0, #1.0e+1
 1730 07b6 04F15800 		add	r0, r4, #88
 1731 07ba FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1732              	.LVL233:
 322:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1733              		.loc 1 322 0
 1734 07be 9FED0A0A 		vldr.32	s0, .L74+28
 1735 07c2 0A48     		ldr	r0, .L74+32
 1736 07c4 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1737              	.LVL234:
 1738              	.LBE147:
 1739              	.LBE148:
 325:Core/Src/robot/robot.cpp **** }
 1740              		.loc 1 325 0
 1741 07c8 E8E7     		b	.L30
 1742              	.L75:
 1743 07ca 00BF     		.align	2
 1744              	.L74:
 1745 07cc B0000000 		.word	.LC24
 1746 07d0 00000000 		.word	.LANCHOR9
 1747 07d4 00000000 		.word	.LANCHOR2
 1748 07d8 00000000 		.word	.LANCHOR3
 1749 07dc 00000000 		.word	leg
 1750 07e0 000C0240 		.word	1073875968
 1751 07e4 BC000000 		.word	.LC25
 1752 07e8 00000000 		.word	0
 1753 07ec 00000000 		.word	steering
 1754 07f0 00000240 		.word	1073872896
 1755              		.cfi_endproc
 1756              	.LFE497:
 1758              		.section	.text._Z4playv,"ax",%progbits
 1759              		.align	1
 1760              		.global	_Z4playv
 1761              		.syntax unified
 1762              		.thumb
 1763              		.thumb_func
 1764              		.fpu fpv4-sp-d16
 1766              	_Z4playv:
 1767              	.LFB498:
 328:Core/Src/robot/robot.cpp **** {
 1768              		.loc 1 328 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 0
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
 1772 0000 10B5     		push	{r4, lr}
 1773              	.LCFI11:
 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 4, -8
 1776              		.cfi_offset 14, -4
 329:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 49


 1777              		.loc 1 329 0
 1778 0002 0948     		ldr	r0, .L78
 1779 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1780              	.LVL235:
 1781              	.LBB149:
 1782              	.LBB150:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1783              		.loc 2 46 0
 1784 0008 084C     		ldr	r4, .L78+4
 1785 000a 2046     		mov	r0, r4
 1786 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1787              	.LVL236:
 1788              	.LBE150:
 1789              	.LBE149:
 330:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1790              		.loc 1 330 0
 1791 0010 074B     		ldr	r3, .L78+8
 1792 0012 83ED000A 		vstr.32	s0, [r3]
 1793              	.LVL237:
 1794              	.LBB151:
 1795              	.LBB152:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1796              		.loc 2 46 0
 1797 0016 04F15800 		add	r0, r4, #88
 1798 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1799              	.LVL238:
 1800              	.LBE152:
 1801              	.LBE151:
 331:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1802              		.loc 1 331 0
 1803 001e 054B     		ldr	r3, .L78+12
 1804 0020 83ED000A 		vstr.32	s0, [r3]
 333:Core/Src/robot/robot.cpp **** }
 1805              		.loc 1 333 0
 1806 0024 0120     		movs	r0, #1
 1807 0026 10BD     		pop	{r4, pc}
 1808              	.L79:
 1809              		.align	2
 1810              	.L78:
 1811 0028 00000000 		.word	.LANCHOR0
 1812 002c 3C000000 		.word	leg+60
 1813 0030 00000000 		.word	.LANCHOR10
 1814 0034 00000000 		.word	.LANCHOR11
 1815              		.cfi_endproc
 1816              	.LFE498:
 1818              		.global	angles
 1819              		.global	steps
 1820              		.global	omega1
 1821              		.global	omega0
 1822              		.global	USE_IMU_FLAG
 1823              		.global	GEREGE_FLAG
 1824              		.global	ROBOT_START_FLAG
 1825              		.global	robo_state
 1826              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1829              	GEREGE_FLAG:
 1830 0000 00       		.space	1
 1831              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 50


 1832              		.set	.LANCHOR1,. + 0
 1835              	ROBOT_START_FLAG:
 1836 0000 00       		.space	1
 1837              		.section	.bss.USE_IMU_FLAG,"aw",%nobits
 1838              		.set	.LANCHOR4,. + 0
 1841              	USE_IMU_FLAG:
 1842 0000 00       		.space	1
 1843              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1844              		.align	2
 1845              		.set	.LANCHOR6,. + 0
 1848              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1849 0000 00000000 		.space	4
 1850              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
 1851              		.set	.LANCHOR8,. + 0
 1854              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1855 0000 00       		.space	1
 1856              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1857              		.set	.LANCHOR9,. + 0
 1860              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1861 0000 00       		.space	1
 1862              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1863              		.align	2
 1864              		.set	.LANCHOR7,. + 0
 1867              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1868 0000 00000000 		.space	4
 1869              		.section	.bss.omega0,"aw",%nobits
 1870              		.align	2
 1871              		.set	.LANCHOR10,. + 0
 1874              	omega0:
 1875 0000 00000000 		.space	4
 1876              		.section	.bss.omega1,"aw",%nobits
 1877              		.align	2
 1878              		.set	.LANCHOR11,. + 0
 1881              	omega1:
 1882 0000 00000000 		.space	4
 1883              		.section	.bss.robo_state,"aw",%nobits
 1884              		.set	.LANCHOR0,. + 0
 1887              	robo_state:
 1888 0000 00       		.space	1
 1889              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1890              		.set	.LANCHOR5,. + 0
 1893              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1894 0000 01       		.byte	1
 1895              		.section	.data.angles,"aw",%progbits
 1896              		.align	2
 1897              		.set	.LANCHOR3,. + 0
 1900              	angles:
 1901 0000 00000000 		.word	0
 1902 0004 00003442 		.word	1110704128
 1903 0008 00003442 		.word	1110704128
 1904 000c 00008242 		.word	1115815936
 1905 0010 00002041 		.word	1092616192
 1906 0014 00000000 		.word	0
 1907 0018 0000B4C2 		.word	-1028390912
 1908              		.section	.data.steps,"aw",%progbits
 1909              		.align	2
 1910              		.set	.LANCHOR2,. + 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 51


 1913              	steps:
 1914 0000 0000C040 		.word	1086324736
 1915 0004 00002041 		.word	1092616192
 1916 0008 00007041 		.word	1097859072
 1917 000c 00008841 		.word	1099431936
 1918 0010 0000A841 		.word	1101529088
 1919 0014 0000C041 		.word	1103101952
 1920 0018 0000F841 		.word	1106771968
 1921              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
 1922              		.align	2
 1923              	.LC13:
 1924 0000 0A484F4D 		.ascii	"\012HOME\000"
 1924      4500
 1925 0006 0000     		.space	2
 1926              	.LC14:
 1927 0008 6E6F7420 		.ascii	"not set\000"
 1927      73657400 
 1928              	.LC15:
 1929 0010 0A0A7365 		.ascii	"\012\012set\012\000"
 1929      740A00
 1930 0017 00       		.space	1
 1931              	.LC16:
 1932 0018 6C656730 		.ascii	"leg0_angle = %d\011leg1_angle = %d\011steering_angl"
 1932      5F616E67 
 1932      6C65203D 
 1932      20256409 
 1932      6C656731 
 1933 0045 65203D20 		.ascii	"e = %d\011robot_angle = %d\011\000"
 1933      25640972 
 1933      6F626F74 
 1933      5F616E67 
 1933      6C65203D 
 1934 005e 0000     		.space	2
 1935              	.LC17:
 1936 0060 0A4D6172 		.ascii	"\012March\000"
 1936      636800
 1937 0067 00       		.space	1
 1938              	.LC18:
 1939 0068 0A547572 		.ascii	"\012Turn 45\000"
 1939      6E203435 
 1939      00
 1940 0071 000000   		.space	3
 1941              	.LC19:
 1942 0074 0A53616E 		.ascii	"\012Sand dune\000"
 1942      64206475 
 1942      6E6500
 1943 007f 00       		.space	1
 1944              	.LC20:
 1945 0080 0A537461 		.ascii	"\012State D\000"
 1945      74652044 
 1945      00
 1946 0089 000000   		.space	3
 1947              	.LC21:
 1948 008c 0A547572 		.ascii	"\012Turn 90\000"
 1948      6E203930 
 1948      00
 1949 0095 000000   		.space	3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 52


 1950              	.LC22:
 1951 0098 0A547573 		.ascii	"\012Tussock\000"
 1951      736F636B 
 1951      00
 1952 00a1 000000   		.space	3
 1953              	.LC23:
 1954 00a4 0A426173 		.ascii	"\012Base camp\000"
 1954      65206361 
 1954      6D7000
 1955 00af 00       		.space	1
 1956              	.LC24:
 1957 00b0 0A4D4F55 		.ascii	"\012MOUNTAIN\000"
 1957      4E544149 
 1957      4E00
 1958 00ba 0000     		.space	2
 1959              	.LC25:
 1960 00bc 0A55554B 		.ascii	"\012UUKHAI\000"
 1960      48414900 
 1961              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1962              		.align	2
 1963              	.LC0:
 1964 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1964      6F6E6520 
 1964      4D415243 
 1964      4800
 1965 000e 0000     		.space	2
 1966              	.LC1:
 1967 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1967      6F6E6520 
 1967      343500
 1968 001b 00       		.space	1
 1969              	.LC2:
 1970 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
 1970      6F6E6520 
 1970      53414E44 
 1970      5F44554E 
 1970      4500
 1971 002e 0000     		.space	2
 1972              	.LC3:
 1973 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
 1973      6F6E6520 
 1973      4D4F554E 
 1973      5441494E 
 1973      00
 1974 0041 000000   		.space	3
 1975              	.LC4:
 1976 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
 1976      6F6E6520 
 1976      44656661 
 1976      756C7400 
 1977              	.LC5:
 1978 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1978      6F6E6520 
 1978      52454400 
 1979              	.LC6:
 1980 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1980      6F6E6520 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 53


 1980      424C5545 
 1980      00
 1981 006d 000000   		.space	3
 1982              	.LC7:
 1983 0070 0A092061 		.ascii	"\012\011 angles= %d\000"
 1983      6E676C65 
 1983      733D2025 
 1983      6400
 1984 007e 0000     		.space	2
 1985              	.LC8:
 1986 0080 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1986      6F6E6520 
 1986      44656661 
 1986      756C745F 
 1986      52454400 
 1987              		.section	.rodata._Z4testv.str1.4,"aMS",%progbits,1
 1988              		.align	2
 1989              	.LC9:
 1990 0000 0A204652 		.ascii	"\012 FRONT\000"
 1990      4F4E5400 
 1991              	.LC10:
 1992 0008 0A204241 		.ascii	"\012 BACK\000"
 1992      434B00
 1993 000f 00       		.space	1
 1994              	.LC11:
 1995 0010 0A205550 		.ascii	"\012 UP\000"
 1995      00
 1996 0015 000000   		.space	3
 1997              	.LC12:
 1998 0018 096C6567 		.ascii	"\011leg0_angle = %d\011leg1_angle = %d\011steering_"
 1998      305F616E 
 1998      676C6520 
 1998      3D202564 
 1998      096C6567 
 1999 0042 616E676C 		.ascii	"angle = %d\000"
 1999      65203D20 
 1999      256400
 2000              		.text
 2001              	.Letext0:
 2002              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2003              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2004              		.file 7 "Core/Inc/sys/FreeRTOSConfig.h"
 2005              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2006              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2007              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2008              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2009              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2010              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 2011              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2012              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2013              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2014              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2015              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2016              		.file 19 "Core/Inc/periphs/tim.h"
 2017              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2018              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2019              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 54


 2020              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2021              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2022              		.file 25 "Core/Inc/devs/motor.h"
 2023              		.file 26 "Core/Inc/devs/encoder.h"
 2024              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 2025              		.file 28 "Core/Inc/devs/limit_switch.h"
 2026              		.file 29 "Core/Inc/robot/robot.h"
 2027              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2028              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2029              		.file 32 "Core/Inc/robot/robot_functions.h"
 2030              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:337    .text._Z11zone_selectv:000001b0 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:362    .text._Z4testv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:369    .text._Z4testv:00000000 _Z4testv
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:546    .text._Z4testv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:561    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:568    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:592    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:599    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:634    .text._Z11start_RobotP12Robot_States:00000018 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:645    .text._Z11start_RobotP12Robot_States:0000002e $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1116   .text._Z11start_RobotP12Robot_States:00000308 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1146   .text._Z11start_RobotP12Robot_States:00000374 $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1561   .text._Z11start_RobotP12Robot_States:00000678 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1583   .text._Z11start_RobotP12Robot_States:000006c0 $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1745   .text._Z11start_RobotP12Robot_States:000007cc $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1759   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1766   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1811   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1900   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1913   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1881   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1874   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1841   .bss.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1829   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1835   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1887   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1830   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1836   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1842   .bss.USE_IMU_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1844   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1848   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1854   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1855   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1860   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1861   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1863   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1867   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1870   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1877   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1888   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1893   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1896   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1909   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1922   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1962   .rodata._Z11zone_selectv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s:1988   .rodata._Z4testv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
__aeabi_f2d
__aeabi_ddiv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cckXMLuA.s 			page 56


__aeabi_d2iz
_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
_ZN7encoder16get_actual_angleEv
_ZN7encoder9get_angleEv
steering
__aeabi_d2f
HAL_GPIO_WritePin
_Z11getup_n_runv
puts
HAL_GetTick
__cxa_guard_acquire
__cxa_guard_release
_Z2goif
HAL_GPIO_TogglePin
robot_angle
curr_angle
initial_angle
_Z23initialize_leg_positionv
_ZN8steering9set_omegaEf
_ZN7encoder9get_omegaEv
