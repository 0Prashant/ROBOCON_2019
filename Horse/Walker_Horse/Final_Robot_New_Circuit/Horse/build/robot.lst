ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB499:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = false;
  15:Core/Src/robot/robot.cpp **** float angle_offset = -1;
  16:Core/Src/robot/robot.cpp **** 
  17:Core/Src/robot/robot.cpp **** float steps[7] = {6, 10, 15, 17, 21, 25, 32};
  18:Core/Src/robot/robot.cpp **** float angles[7] = {0 , 45, 45, 70, 10, 0, -90};
  19:Core/Src/robot/robot.cpp **** 
  20:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  21:Core/Src/robot/robot.cpp **** {
  22:Core/Src/robot/robot.cpp **** 	switch (*state_)
  23:Core/Src/robot/robot.cpp **** 	{
  24:Core/Src/robot/robot.cpp **** 	case HOME:
  25:Core/Src/robot/robot.cpp **** 	{
  26:Core/Src/robot/robot.cpp **** 		/**
  27:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  28:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
  29:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  30:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
  31:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  33:Core/Src/robot/robot.cpp **** 			*/
  34:Core/Src/robot/robot.cpp **** 
  35:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  36:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
  37:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
  38:Core/Src/robot/robot.cpp **** 		{
  39:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
  40:Core/Src/robot/robot.cpp **** 		}
  41:Core/Src/robot/robot.cpp **** 		else
  42:Core/Src/robot/robot.cpp **** 		{
  43:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
  44:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
  45:Core/Src/robot/robot.cpp **** 		}
  46:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  47:Core/Src/robot/robot.cpp **** 
  48:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  49:Core/Src/robot/robot.cpp **** 		{
  50:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  51:Core/Src/robot/robot.cpp **** 			printf("  not set  ");
  52:Core/Src/robot/robot.cpp **** 			// initial_angle.setZ(initial_angle.getZ());
  53:Core/Src/robot/robot.cpp **** 			// printf("\t%d\t", (int)initial_angle.getZ());
  54:Core/Src/robot/robot.cpp **** 		}
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
  56:Core/Src/robot/robot.cpp **** 		{
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  58:Core/Src/robot/robot.cpp **** 			printf("\n\nset\n\n");
  59:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  60:Core/Src/robot/robot.cpp **** 		}
  61:Core/Src/robot/robot.cpp **** 		printf("  leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0
  62:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
  63:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  66:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  67:Core/Src/robot/robot.cpp **** 		{
  68:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  69:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
  70:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  71:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  72:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
  73:Core/Src/robot/robot.cpp **** 			{
  74:Core/Src/robot/robot.cpp **** 				zone_select();
  75:Core/Src/robot/robot.cpp **** 			}
  76:Core/Src/robot/robot.cpp **** 		}
  77:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
  78:Core/Src/robot/robot.cpp **** 		{
  79:Core/Src/robot/robot.cpp **** 
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  84:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  85:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  86:Core/Src/robot/robot.cpp **** 
  87:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  88:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 3


  89:Core/Src/robot/robot.cpp **** 			{
  90:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
  91:Core/Src/robot/robot.cpp **** 				{
  92:Core/Src/robot/robot.cpp **** 					zone_select();
  93:Core/Src/robot/robot.cpp **** 				}
  94:Core/Src/robot/robot.cpp **** 			}
  95:Core/Src/robot/robot.cpp **** 		}
  96:Core/Src/robot/robot.cpp **** 
  97:Core/Src/robot/robot.cpp **** 		else
  98:Core/Src/robot/robot.cpp **** 		{
  99:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 100:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 101:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 102:Core/Src/robot/robot.cpp **** 		}
 103:Core/Src/robot/robot.cpp **** 	}
 104:Core/Src/robot/robot.cpp **** 	break;
 105:Core/Src/robot/robot.cpp **** 
 106:Core/Src/robot/robot.cpp **** 	case MARCH:
 107:Core/Src/robot/robot.cpp **** 	{
 108:Core/Src/robot/robot.cpp **** 		/*
 109:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
 110:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
 111:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
 112:Core/Src/robot/robot.cpp **** 		*/
 113:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 114:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 115:Core/Src/robot/robot.cpp **** 		{
 116:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 120:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 121:Core/Src/robot/robot.cpp **** 		}
 122:Core/Src/robot/robot.cpp **** 	}
 123:Core/Src/robot/robot.cpp **** 	break;
 124:Core/Src/robot/robot.cpp **** 
 125:Core/Src/robot/robot.cpp **** 	case TURN_45:
 126:Core/Src/robot/robot.cpp **** 	{
 127:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 128:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 129:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 130:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 131:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 132:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 133:Core/Src/robot/robot.cpp **** 		*/
 134:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 135:Core/Src/robot/robot.cpp **** 
 136:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 137:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 138:Core/Src/robot/robot.cpp **** 		{
 139:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 140:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 141:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 142:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 143:Core/Src/robot/robot.cpp **** 
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 4


 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 147:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 148:Core/Src/robot/robot.cpp **** 		}
 149:Core/Src/robot/robot.cpp **** 		//*/
 150:Core/Src/robot/robot.cpp **** 	}
 151:Core/Src/robot/robot.cpp **** 	break;
 152:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 153:Core/Src/robot/robot.cpp **** 	{
 154:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 155:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 156:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 157:Core/Src/robot/robot.cpp **** 			*/
 158:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 159:Core/Src/robot/robot.cpp **** 
 160:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 161:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 162:Core/Src/robot/robot.cpp **** 		{
 163:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 164:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 165:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 166:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 167:Core/Src/robot/robot.cpp **** 
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 171:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 172:Core/Src/robot/robot.cpp **** 		}
 173:Core/Src/robot/robot.cpp **** 		//*/
 174:Core/Src/robot/robot.cpp **** 	}
 175:Core/Src/robot/robot.cpp **** 	break;
 176:Core/Src/robot/robot.cpp **** 	case STATE_D:
 177:Core/Src/robot/robot.cpp **** 	{
 178:Core/Src/robot/robot.cpp **** 		/*
 179:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 180:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 181:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 182:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 183:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 184:Core/Src/robot/robot.cpp **** 		{
 185:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 186:Core/Src/robot/robot.cpp **** 
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 190:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 191:Core/Src/robot/robot.cpp **** 		}
 192:Core/Src/robot/robot.cpp **** 	}
 193:Core/Src/robot/robot.cpp **** 	break;
 194:Core/Src/robot/robot.cpp **** 
 195:Core/Src/robot/robot.cpp **** 	case TURN_90:
 196:Core/Src/robot/robot.cpp **** 	{
 197:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 198:Core/Src/robot/robot.cpp **** 			no of steps = 
 199:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 200:Core/Src/robot/robot.cpp **** 			*/
 201:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 202:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 5


 203:Core/Src/robot/robot.cpp **** 		{
 204:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 205:Core/Src/robot/robot.cpp **** 
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 209:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 210:Core/Src/robot/robot.cpp **** 		}
 211:Core/Src/robot/robot.cpp **** 	}
 212:Core/Src/robot/robot.cpp **** 	break;
 213:Core/Src/robot/robot.cpp **** 
 214:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 215:Core/Src/robot/robot.cpp **** 	{
 216:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 217:Core/Src/robot/robot.cpp **** 			robot stops 
 218:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 219:Core/Src/robot/robot.cpp **** 			*/
 220:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 221:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 222:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 223:Core/Src/robot/robot.cpp **** 		{
 224:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true) 
 225:Core/Src/robot/robot.cpp **** 			{
 226:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 227:Core/Src/robot/robot.cpp **** 			}
 228:Core/Src/robot/robot.cpp **** 		}
 229:Core/Src/robot/robot.cpp **** 		else
 230:Core/Src/robot/robot.cpp **** 		{
 231:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 232:Core/Src/robot/robot.cpp **** 			{
 233:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 234:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 238:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 239:Core/Src/robot/robot.cpp **** 			}
 240:Core/Src/robot/robot.cpp **** 		}
 241:Core/Src/robot/robot.cpp **** 	}
 242:Core/Src/robot/robot.cpp **** 	break;
 243:Core/Src/robot/robot.cpp **** 
 244:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 245:Core/Src/robot/robot.cpp **** 	{
 246:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 247:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 248:Core/Src/robot/robot.cpp **** 			*/
 249:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 250:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 251:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 252:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 253:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 254:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 255:Core/Src/robot/robot.cpp **** 		    ROBOT_START_FLAG)
 256:Core/Src/robot/robot.cpp **** 		{
 257:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 258:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 259:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[5];
 261:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[5];
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 264:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 265:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 266:Core/Src/robot/robot.cpp **** 		}
 267:Core/Src/robot/robot.cpp **** 	}
 268:Core/Src/robot/robot.cpp **** 	break;
 269:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 270:Core/Src/robot/robot.cpp **** 	{
 271:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 272:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 273:Core/Src/robot/robot.cpp **** 			*/
 274:Core/Src/robot/robot.cpp **** 
 275:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 276:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 277:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 278:Core/Src/robot/robot.cpp **** 		{
 279:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 280:Core/Src/robot/robot.cpp **** 			{
 281:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 282:Core/Src/robot/robot.cpp **** 				leg[0].steps = steps[5];
 283:Core/Src/robot/robot.cpp **** 				leg[1].steps = steps[5];
 284:Core/Src/robot/robot.cpp **** 			}
 285:Core/Src/robot/robot.cpp **** 		}
 286:Core/Src/robot/robot.cpp **** 		else
 287:Core/Src/robot/robot.cpp **** 		{
 288:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 289:Core/Src/robot/robot.cpp **** 			{
 290:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 291:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 292:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 293:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 294:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 295:Core/Src/robot/robot.cpp **** 			}
 296:Core/Src/robot/robot.cpp **** 		}
 297:Core/Src/robot/robot.cpp **** 	}
 298:Core/Src/robot/robot.cpp **** 
 299:Core/Src/robot/robot.cpp **** 	break;
 300:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 301:Core/Src/robot/robot.cpp **** 	{
 302:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 303:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 304:Core/Src/robot/robot.cpp **** 			*/
 305:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 306:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 307:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 308:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 309:Core/Src/robot/robot.cpp **** 
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 311:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 312:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 313:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 314:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 315:Core/Src/robot/robot.cpp **** 	}
 316:Core/Src/robot/robot.cpp **** 	break;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 7


 317:Core/Src/robot/robot.cpp **** 	case TUNE:
 318:Core/Src/robot/robot.cpp **** 	{
 319:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 320:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 321:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 322:Core/Src/robot/robot.cpp **** 	}
 323:Core/Src/robot/robot.cpp **** 	}
 324:Core/Src/robot/robot.cpp **** }
 325:Core/Src/robot/robot.cpp **** 
 326:Core/Src/robot/robot.cpp **** bool play()
 327:Core/Src/robot/robot.cpp **** {
 328:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 329:Core/Src/robot/robot.cpp **** 	return true;
 330:Core/Src/robot/robot.cpp **** }
 331:Core/Src/robot/robot.cpp **** 
 332:Core/Src/robot/robot.cpp **** void zone_select(void)
 333:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 333 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LBB46:
 334:Core/Src/robot/robot.cpp **** 
 335:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 335 0
  39 0002 1021     		movs	r1, #16
  40 0004 8348     		ldr	r0, .L20
  41 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000a 08BB     		cbnz	r0, .L2
 336:Core/Src/robot/robot.cpp **** 	{
 337:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 337 0
  45 000c 0123     		movs	r3, #1
  46 000e 824A     		ldr	r2, .L20+4
  47 0010 1370     		strb	r3, [r2]
 338:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 338 0
  49 0012 824A     		ldr	r2, .L20+8
  50 0014 1370     		strb	r3, [r2]
 339:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 339 0
  52 0016 8248     		ldr	r0, .L20+12
  53 0018 FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE46:
  57              	.LBB56:
 340:Core/Src/robot/robot.cpp **** 	}
 341:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 342:Core/Src/robot/robot.cpp **** 	{
 343:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 8


 344:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 345:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
 346:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 347:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 348:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 349:Core/Src/robot/robot.cpp **** 		{
 350:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 351:Core/Src/robot/robot.cpp **** 		}
 352:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 353:Core/Src/robot/robot.cpp **** 	}
 354:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 355:Core/Src/robot/robot.cpp **** 	{
 356:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 357:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 358:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 359:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 360:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 361:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 362:Core/Src/robot/robot.cpp **** 		{
 363:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 364:Core/Src/robot/robot.cpp **** 		}
 365:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 366:Core/Src/robot/robot.cpp **** 	}
 367:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 368:Core/Src/robot/robot.cpp **** 	{
 369:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 370:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 371:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 372:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 373:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 374:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 375:Core/Src/robot/robot.cpp **** 		{
 376:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 377:Core/Src/robot/robot.cpp **** 		}
 378:Core/Src/robot/robot.cpp **** 	}
 379:Core/Src/robot/robot.cpp **** 	else
 380:Core/Src/robot/robot.cpp **** 	{
 381:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 382:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 383:Core/Src/robot/robot.cpp **** 	}
 384:Core/Src/robot/robot.cpp **** 
 385:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 385 0
  59 001c 4FF48051 		mov	r1, #4096
  60 0020 8048     		ldr	r0, .L20+16
  61 0022 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0026 0028     		cmp	r0, #0
  64 0028 40F0A180 		bne	.L10
  65              	.LBB57:
 386:Core/Src/robot/robot.cpp **** 	{
 387:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 387 0
  67 002c 7E48     		ldr	r0, .L20+20
  68 002e FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB58:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 9


 388:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 388 0
  72 0032 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L12:
  75              		.loc 1 388 0 is_stmt 0 discriminator 3
  76 0034 062A     		cmp	r2, #6
  77 0036 00F38980 		bgt	.L11
 389:Core/Src/robot/robot.cpp **** 		{
 390:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 390 0 is_stmt 1 discriminator 2
  79 003a 7C4B     		ldr	r3, .L20+24
  80 003c 03EB8203 		add	r3, r3, r2, lsl #2
  81 0040 D3ED007A 		vldr.32	s15, [r3]
  82 0044 F1EE677A 		vneg.f32	s15, s15
  83 0048 C3ED007A 		vstr.32	s15, [r3]
 388:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  84              		.loc 1 388 0 discriminator 2
  85 004c 0132     		adds	r2, r2, #1
  86              	.LVL5:
  87 004e F1E7     		b	.L12
  88              	.LVL6:
  89              	.L2:
  90              	.LBE58:
  91              	.LBE57:
  92              	.LBE56:
  93              	.LBB65:
  94              	.LBB47:
 341:Core/Src/robot/robot.cpp **** 	{
  95              		.loc 1 341 0
  96 0050 0421     		movs	r1, #4
  97 0052 7748     		ldr	r0, .L20+28
  98 0054 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  99              	.LVL7:
 100 0058 20BB     		cbnz	r0, .L4
 101              	.LBB48:
 343:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 102              		.loc 1 343 0
 103 005a 7648     		ldr	r0, .L20+32
 104 005c FFF7FEFF 		bl	printf
 105              	.LVL8:
 344:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
 106              		.loc 1 344 0
 107 0060 6D4B     		ldr	r3, .L20+4
 108 0062 0222     		movs	r2, #2
 109 0064 1A70     		strb	r2, [r3]
 345:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 110              		.loc 1 345 0
 111 0066 744B     		ldr	r3, .L20+36
 112 0068 D3ED017A 		vldr.32	s15, [r3, #4]
 113 006c B0EE007A 		vmov.f32	s14, #2.0e+0
 114 0070 77EEC77A 		vsub.f32	s15, s15, s14
 115 0074 FDEEE77A 		vcvt.s32.f32	s15, s15
 116 0078 704A     		ldr	r2, .L20+40
 117 007a C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 346:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 118              		.loc 1 346 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 10


 119 007e C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 347:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 120              		.loc 1 347 0
 121 0082 6A4B     		ldr	r3, .L20+24
 122 0084 93ED017A 		vldr.32	s14, [r3, #4]
 123              	.LVL9:
 124              	.LBB49:
 348:Core/Src/robot/robot.cpp **** 		{
 125              		.loc 1 348 0
 126 0088 0022     		movs	r2, #0
 127              	.LVL10:
 128              	.L5:
 348:Core/Src/robot/robot.cpp **** 		{
 129              		.loc 1 348 0 is_stmt 0 discriminator 3
 130 008a 062A     		cmp	r2, #6
 131 008c C6DC     		bgt	.L3
 350:Core/Src/robot/robot.cpp **** 		}
 132              		.loc 1 350 0 is_stmt 1 discriminator 2
 133 008e 674B     		ldr	r3, .L20+24
 134 0090 03EB8203 		add	r3, r3, r2, lsl #2
 135 0094 D3ED007A 		vldr.32	s15, [r3]
 136 0098 77EEC77A 		vsub.f32	s15, s15, s14
 137 009c C3ED007A 		vstr.32	s15, [r3]
 348:Core/Src/robot/robot.cpp **** 		{
 138              		.loc 1 348 0 discriminator 2
 139 00a0 0132     		adds	r2, r2, #1
 140              	.LVL11:
 141 00a2 F2E7     		b	.L5
 142              	.LVL12:
 143              	.L4:
 144              	.LBE49:
 145              	.LBE48:
 146              	.LBB50:
 354:Core/Src/robot/robot.cpp **** 	{
 147              		.loc 1 354 0
 148 00a4 0221     		movs	r1, #2
 149 00a6 6648     		ldr	r0, .L20+44
 150 00a8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 151              	.LVL13:
 152 00ac 00BB     		cbnz	r0, .L6
 153              	.LBB51:
 356:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 154              		.loc 1 356 0
 155 00ae 6548     		ldr	r0, .L20+48
 156 00b0 FFF7FEFF 		bl	printf
 157              	.LVL14:
 357:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 158              		.loc 1 357 0
 159 00b4 584B     		ldr	r3, .L20+4
 160 00b6 0422     		movs	r2, #4
 161 00b8 1A70     		strb	r2, [r3]
 358:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 162              		.loc 1 358 0
 163 00ba 5F4B     		ldr	r3, .L20+36
 164 00bc D3ED027A 		vldr.32	s15, [r3, #8]
 165 00c0 FDEEE77A 		vcvt.s32.f32	s15, s15
 166 00c4 5D4A     		ldr	r2, .L20+40
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 11


 167 00c6 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 359:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 168              		.loc 1 359 0
 169 00ca C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 360:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 170              		.loc 1 360 0
 171 00ce 574B     		ldr	r3, .L20+24
 172 00d0 93ED027A 		vldr.32	s14, [r3, #8]
 173              	.LVL15:
 174              	.LBB52:
 361:Core/Src/robot/robot.cpp **** 		{
 175              		.loc 1 361 0
 176 00d4 0022     		movs	r2, #0
 177              	.LVL16:
 178              	.L7:
 361:Core/Src/robot/robot.cpp **** 		{
 179              		.loc 1 361 0 is_stmt 0 discriminator 3
 180 00d6 062A     		cmp	r2, #6
 181 00d8 A0DC     		bgt	.L3
 363:Core/Src/robot/robot.cpp **** 		}
 182              		.loc 1 363 0 is_stmt 1 discriminator 2
 183 00da 544B     		ldr	r3, .L20+24
 184 00dc 03EB8203 		add	r3, r3, r2, lsl #2
 185 00e0 D3ED007A 		vldr.32	s15, [r3]
 186 00e4 77EEC77A 		vsub.f32	s15, s15, s14
 187 00e8 C3ED007A 		vstr.32	s15, [r3]
 361:Core/Src/robot/robot.cpp **** 		{
 188              		.loc 1 361 0 discriminator 2
 189 00ec 0132     		adds	r2, r2, #1
 190              	.LVL17:
 191 00ee F2E7     		b	.L7
 192              	.LVL18:
 193              	.L6:
 194              	.LBE52:
 195              	.LBE51:
 196              	.LBB53:
 367:Core/Src/robot/robot.cpp **** 	{
 197              		.loc 1 367 0
 198 00f0 0821     		movs	r1, #8
 199 00f2 5348     		ldr	r0, .L20+44
 200 00f4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL19:
 202 00f8 08BB     		cbnz	r0, .L8
 203              	.LBB54:
 369:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 204              		.loc 1 369 0
 205 00fa 5348     		ldr	r0, .L20+52
 206 00fc FFF7FEFF 		bl	printf
 207              	.LVL20:
 370:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 208              		.loc 1 370 0
 209 0100 454B     		ldr	r3, .L20+4
 210 0102 0722     		movs	r2, #7
 211 0104 1A70     		strb	r2, [r3]
 371:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 212              		.loc 1 371 0
 213 0106 4C4B     		ldr	r3, .L20+36
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 12


 214 0108 D3ED057A 		vldr.32	s15, [r3, #20]
 215 010c FDEEE77A 		vcvt.s32.f32	s15, s15
 216 0110 4A4A     		ldr	r2, .L20+40
 217 0112 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 372:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 218              		.loc 1 372 0
 219 0116 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 373:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 220              		.loc 1 373 0
 221 011a 444B     		ldr	r3, .L20+24
 222 011c 93ED057A 		vldr.32	s14, [r3, #20]
 223              	.LVL21:
 224              	.LBB55:
 374:Core/Src/robot/robot.cpp **** 		{
 225              		.loc 1 374 0
 226 0120 0022     		movs	r2, #0
 227              	.LVL22:
 228              	.L9:
 374:Core/Src/robot/robot.cpp **** 		{
 229              		.loc 1 374 0 is_stmt 0 discriminator 3
 230 0122 062A     		cmp	r2, #6
 231 0124 3FF77AAF 		bgt	.L3
 376:Core/Src/robot/robot.cpp **** 		}
 232              		.loc 1 376 0 is_stmt 1 discriminator 2
 233 0128 404B     		ldr	r3, .L20+24
 234 012a 03EB8203 		add	r3, r3, r2, lsl #2
 235 012e D3ED007A 		vldr.32	s15, [r3]
 236 0132 77EEC77A 		vsub.f32	s15, s15, s14
 237 0136 C3ED007A 		vstr.32	s15, [r3]
 374:Core/Src/robot/robot.cpp **** 		{
 238              		.loc 1 374 0 discriminator 2
 239 013a 0132     		adds	r2, r2, #1
 240              	.LVL23:
 241 013c F1E7     		b	.L9
 242              	.LVL24:
 243              	.L8:
 244              	.LBE55:
 245              	.LBE54:
 381:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 246              		.loc 1 381 0
 247 013e 4348     		ldr	r0, .L20+56
 248 0140 FFF7FEFF 		bl	printf
 249              	.LVL25:
 382:Core/Src/robot/robot.cpp **** 	}
 250              		.loc 1 382 0
 251 0144 344B     		ldr	r3, .L20+4
 252 0146 0122     		movs	r2, #1
 253 0148 1A70     		strb	r2, [r3]
 254 014a 67E7     		b	.L3
 255              	.LVL26:
 256              	.L11:
 257              	.LBE53:
 258              	.LBE50:
 259              	.LBE47:
 260              	.LBE65:
 261              	.LBB66:
 262              	.LBB59:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 13


 391:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 392:Core/Src/robot/robot.cpp **** 			// printf("\n\t angles= %d",(int)(angles[i]));
 393:Core/Src/robot/robot.cpp **** 		}
 394:Core/Src/robot/robot.cpp **** 		angles[1] -= angle_offset;
 263              		.loc 1 394 0
 264 014c 404B     		ldr	r3, .L20+60
 265 014e D3ED006A 		vldr.32	s13, [r3]
 266 0152 364B     		ldr	r3, .L20+24
 267 0154 93ED017A 		vldr.32	s14, [r3, #4]
 268 0158 37EE667A 		vsub.f32	s14, s14, s13
 269 015c 83ED017A 		vstr.32	s14, [r3, #4]
 395:Core/Src/robot/robot.cpp **** 		angles[2] -= angle_offset; 
 270              		.loc 1 395 0
 271 0160 D3ED027A 		vldr.32	s15, [r3, #8]
 272 0164 77EEE67A 		vsub.f32	s15, s15, s13
 273 0168 C3ED027A 		vstr.32	s15, [r3, #8]
 274              	.LVL27:
 275              	.L1:
 276              	.LBE59:
 277              	.LBE66:
 396:Core/Src/robot/robot.cpp **** 	}
 397:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
 398:Core/Src/robot/robot.cpp **** 	{
 399:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");for (int i = 0; i < 7; i++)
 400:Core/Src/robot/robot.cpp **** 		{
 401:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 402:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 403:Core/Src/robot/robot.cpp **** 		}
 404:Core/Src/robot/robot.cpp **** 		angles[1] -= angle_offset;
 405:Core/Src/robot/robot.cpp **** 		angles[2] -= angle_offset;
 406:Core/Src/robot/robot.cpp **** 	}
 407:Core/Src/robot/robot.cpp **** 	else
 408:Core/Src/robot/robot.cpp **** 	{
 409:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 410:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 411:Core/Src/robot/robot.cpp **** 		{
 412:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 413:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 414:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 415:Core/Src/robot/robot.cpp **** 		}
 416:Core/Src/robot/robot.cpp **** 		angles[1] -= angle_offset;
 417:Core/Src/robot/robot.cpp **** 		angles[2] -= angle_offset;
 418:Core/Src/robot/robot.cpp **** 	}
 419:Core/Src/robot/robot.cpp **** }
 278              		.loc 1 419 0
 279 016c 10BD     		pop	{r4, pc}
 280              	.L10:
 281              	.LBB67:
 282              	.LBB60:
 397:Core/Src/robot/robot.cpp **** 	{
 283              		.loc 1 397 0
 284 016e 2021     		movs	r1, #32
 285 0170 3348     		ldr	r0, .L20+44
 286 0172 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 287              	.LVL28:
 288 0176 20BB     		cbnz	r0, .L14
 289              	.LBB61:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 14


 399:Core/Src/robot/robot.cpp **** 		{
 290              		.loc 1 399 0
 291 0178 3648     		ldr	r0, .L20+64
 292 017a FFF7FEFF 		bl	printf
 293              	.LVL29:
 294              	.LBB62:
 295 017e 0024     		movs	r4, #0
 296              	.LVL30:
 297              	.L16:
 399:Core/Src/robot/robot.cpp **** 		{
 298              		.loc 1 399 0 is_stmt 0 discriminator 3
 299 0180 062C     		cmp	r4, #6
 300 0182 0DDC     		bgt	.L15
 402:Core/Src/robot/robot.cpp **** 		}
 301              		.loc 1 402 0 is_stmt 1 discriminator 2
 302 0184 294B     		ldr	r3, .L20+24
 303 0186 03EB8403 		add	r3, r3, r4, lsl #2
 304 018a D3ED007A 		vldr.32	s15, [r3]
 305 018e FDEEE77A 		vcvt.s32.f32	s15, s15
 306 0192 17EE901A 		vmov	r1, s15	@ int
 307 0196 3048     		ldr	r0, .L20+68
 308 0198 FFF7FEFF 		bl	printf
 309              	.LVL31:
 399:Core/Src/robot/robot.cpp **** 		{
 310              		.loc 1 399 0 discriminator 2
 311 019c 0134     		adds	r4, r4, #1
 312              	.LVL32:
 313 019e EFE7     		b	.L16
 314              	.L15:
 315              	.LBE62:
 404:Core/Src/robot/robot.cpp **** 		angles[2] -= angle_offset;
 316              		.loc 1 404 0
 317 01a0 2B4B     		ldr	r3, .L20+60
 318 01a2 D3ED006A 		vldr.32	s13, [r3]
 319 01a6 214B     		ldr	r3, .L20+24
 320 01a8 93ED017A 		vldr.32	s14, [r3, #4]
 321 01ac 37EE667A 		vsub.f32	s14, s14, s13
 322 01b0 83ED017A 		vstr.32	s14, [r3, #4]
 405:Core/Src/robot/robot.cpp **** 	}
 323              		.loc 1 405 0
 324 01b4 D3ED027A 		vldr.32	s15, [r3, #8]
 325 01b8 77EEE67A 		vsub.f32	s15, s15, s13
 326 01bc C3ED027A 		vstr.32	s15, [r3, #8]
 327              	.LBE61:
 328 01c0 D4E7     		b	.L1
 329              	.LVL33:
 330              	.L14:
 331              	.LBB63:
 409:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 332              		.loc 1 409 0
 333 01c2 2648     		ldr	r0, .L20+72
 334 01c4 FFF7FEFF 		bl	printf
 335              	.LVL34:
 336              	.LBB64:
 410:Core/Src/robot/robot.cpp **** 		{
 337              		.loc 1 410 0
 338 01c8 0024     		movs	r4, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 15


 339              	.LVL35:
 340              	.L18:
 410:Core/Src/robot/robot.cpp **** 		{
 341              		.loc 1 410 0 is_stmt 0 discriminator 3
 342 01ca 062C     		cmp	r4, #6
 343 01cc 11DC     		bgt	.L17
 412:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 344              		.loc 1 412 0 is_stmt 1 discriminator 2
 345 01ce 174B     		ldr	r3, .L20+24
 346 01d0 03EB8403 		add	r3, r3, r4, lsl #2
 347 01d4 D3ED007A 		vldr.32	s15, [r3]
 348 01d8 F1EE677A 		vneg.f32	s15, s15
 349 01dc C3ED007A 		vstr.32	s15, [r3]
 414:Core/Src/robot/robot.cpp **** 		}
 350              		.loc 1 414 0 discriminator 2
 351 01e0 FDEEE77A 		vcvt.s32.f32	s15, s15
 352 01e4 17EE901A 		vmov	r1, s15	@ int
 353 01e8 1B48     		ldr	r0, .L20+68
 354 01ea FFF7FEFF 		bl	printf
 355              	.LVL36:
 410:Core/Src/robot/robot.cpp **** 		{
 356              		.loc 1 410 0 discriminator 2
 357 01ee 0134     		adds	r4, r4, #1
 358              	.LVL37:
 359 01f0 EBE7     		b	.L18
 360              	.L17:
 361              	.LBE64:
 416:Core/Src/robot/robot.cpp **** 		angles[2] -= angle_offset;
 362              		.loc 1 416 0
 363 01f2 174B     		ldr	r3, .L20+60
 364 01f4 D3ED006A 		vldr.32	s13, [r3]
 365 01f8 0C4B     		ldr	r3, .L20+24
 366 01fa 93ED017A 		vldr.32	s14, [r3, #4]
 367 01fe 37EE667A 		vsub.f32	s14, s14, s13
 368 0202 83ED017A 		vstr.32	s14, [r3, #4]
 417:Core/Src/robot/robot.cpp **** 	}
 369              		.loc 1 417 0
 370 0206 D3ED027A 		vldr.32	s15, [r3, #8]
 371 020a 77EEE67A 		vsub.f32	s15, s15, s13
 372 020e C3ED027A 		vstr.32	s15, [r3, #8]
 373              	.LBE63:
 374              	.LBE60:
 375              	.LBE67:
 376              		.loc 1 419 0
 377 0212 ABE7     		b	.L1
 378              	.L21:
 379              		.align	2
 380              	.L20:
 381 0214 00040240 		.word	1073873920
 382 0218 00000000 		.word	.LANCHOR0
 383 021c 00000000 		.word	.LANCHOR1
 384 0220 00000000 		.word	.LC0
 385 0224 00080240 		.word	1073874944
 386 0228 54000000 		.word	.LC5
 387 022c 00000000 		.word	.LANCHOR3
 388 0230 00100240 		.word	1073876992
 389 0234 10000000 		.word	.LC1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 16


 390 0238 00000000 		.word	.LANCHOR2
 391 023c 00000000 		.word	leg
 392 0240 000C0240 		.word	1073875968
 393 0244 1C000000 		.word	.LC2
 394 0248 30000000 		.word	.LC3
 395 024c 44000000 		.word	.LC4
 396 0250 00000000 		.word	.LANCHOR4
 397 0254 60000000 		.word	.LC6
 398 0258 70000000 		.word	.LC7
 399 025c 80000000 		.word	.LC8
 400              		.cfi_endproc
 401              	.LFE499:
 403              		.global	__aeabi_f2d
 404              		.global	__aeabi_ddiv
 405              		.global	__aeabi_d2iz
 406              		.section	.text._Z4testv,"ax",%progbits
 407              		.align	1
 408              		.global	_Z4testv
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	_Z4testv:
 415              	.LFB500:
 420:Core/Src/robot/robot.cpp **** 
 421:Core/Src/robot/robot.cpp **** void test(void)
 422:Core/Src/robot/robot.cpp **** {
 416              		.loc 1 422 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 421              	.LCFI1:
 422              		.cfi_def_cfa_offset 32
 423              		.cfi_offset 3, -32
 424              		.cfi_offset 4, -28
 425              		.cfi_offset 5, -24
 426              		.cfi_offset 6, -20
 427              		.cfi_offset 7, -16
 428              		.cfi_offset 8, -12
 429              		.cfi_offset 9, -8
 430              		.cfi_offset 14, -4
 431 0004 2DED028B 		vpush.64	{d8}
 432              	.LCFI2:
 433              		.cfi_def_cfa_offset 40
 434              		.cfi_offset 80, -40
 435              		.cfi_offset 81, -36
 423:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET){
 436              		.loc 1 423 0
 437 0008 4FF48071 		mov	r1, #256
 438 000c 4048     		ldr	r0, .L30+8
 439 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 440              	.LVL38:
 441 0012 0028     		cmp	r0, #0
 442 0014 6CD0     		beq	.L27
 443              	.L23:
 424:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 17


 425:Core/Src/robot/robot.cpp **** 	}
 426:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET){
 444              		.loc 1 426 0
 445 0016 4FF48061 		mov	r1, #1024
 446 001a 3D48     		ldr	r0, .L30+8
 447 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 448              	.LVL39:
 449 0020 0028     		cmp	r0, #0
 450 0022 69D0     		beq	.L28
 451              	.L24:
 427:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 428:Core/Src/robot/robot.cpp **** 	}
 429:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET){
 452              		.loc 1 429 0
 453 0024 4FF40061 		mov	r1, #2048
 454 0028 3948     		ldr	r0, .L30+8
 455 002a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 456              	.LVL40:
 457 002e 0028     		cmp	r0, #0
 458 0030 66D0     		beq	.L29
 459              	.L25:
 430:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 431:Core/Src/robot/robot.cpp **** 	}
 432:Core/Src/robot/robot.cpp **** 	leg[0].set_omega(0);
 460              		.loc 1 432 0
 461 0032 9FED388A 		vldr.32	s16, .L30+12
 462 0036 384C     		ldr	r4, .L30+16
 463 0038 B0EE480A 		vmov.f32	s0, s16
 464 003c 2046     		mov	r0, r4
 465 003e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 466              	.LVL41:
 433:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(0);
 467              		.loc 1 433 0
 468 0042 B0EE480A 		vmov.f32	s0, s16
 469 0046 04F15800 		add	r0, r4, #88
 470 004a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 471              	.LVL42:
 434:Core/Src/robot/robot.cpp **** 	steering.set_angle(0);
 472              		.loc 1 434 0
 473 004e 334D     		ldr	r5, .L30+20
 474 0050 B0EE480A 		vmov.f32	s0, s16
 475 0054 2846     		mov	r0, r5
 476 0056 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 477              	.LVL43:
 478              	.LBB68:
 479              	.LBB69:
 480              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 18


  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 481              		.loc 2 48 0
 482 005a 04F13C00 		add	r0, r4, #60
 483 005e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 484              	.LVL44:
 485              	.LBE69:
 486              	.LBE68:
 435:Core/Src/robot/robot.cpp **** 	printf("\tleg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d", (int)(leg[0].get_actual_angle() 
 487              		.loc 1 435 0
 488 0062 9FED2F8A 		vldr.32	s16, .L30+24
 489 0066 60EE087A 		vmul.f32	s15, s0, s16
 490 006a 17EE900A 		vmov	r0, s15
 491 006e FFF7FEFF 		bl	__aeabi_f2d
 492              	.LVL45:
 493 0072 25A3     		adr	r3, .L30
 494 0074 D3E90023 		ldrd	r2, [r3]
 495 0078 FFF7FEFF 		bl	__aeabi_ddiv
 496              	.LVL46:
 497 007c 0646     		mov	r6, r0
 498 007e 0F46     		mov	r7, r1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 19


 499              	.LVL47:
 500              	.LBB70:
 501              	.LBB71:
 502              		.loc 2 48 0
 503 0080 04F19400 		add	r0, r4, #148
 504 0084 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 505              	.LVL48:
 506              	.LBE71:
 507              	.LBE70:
 436:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 508              		.loc 1 436 0
 509 0088 60EE087A 		vmul.f32	s15, s0, s16
 510 008c 17EE900A 		vmov	r0, s15
 511 0090 FFF7FEFF 		bl	__aeabi_f2d
 512              	.LVL49:
 513 0094 1CA3     		adr	r3, .L30
 514 0096 D3E90023 		ldrd	r2, [r3]
 515 009a FFF7FEFF 		bl	__aeabi_ddiv
 516              	.LVL50:
 517 009e 8046     		mov	r8, r0
 518 00a0 8946     		mov	r9, r1
 519              	.LVL51:
 520              	.LBB72:
 521              	.LBB73:
 522              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 20


  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 21


  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 523              		.loc 3 112 0
 524 00a2 05F10C00 		add	r0, r5, #12
 525 00a6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 526              	.LVL52:
 527              	.LBE73:
 528              	.LBE72:
 529              		.loc 1 436 0
 530 00aa 60EE087A 		vmul.f32	s15, s0, s16
 531 00ae 17EE900A 		vmov	r0, s15
 532 00b2 FFF7FEFF 		bl	__aeabi_f2d
 533              	.LVL53:
 534 00b6 14A3     		adr	r3, .L30
 535 00b8 D3E90023 		ldrd	r2, [r3]
 536 00bc FFF7FEFF 		bl	__aeabi_ddiv
 537              	.LVL54:
 435:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 538              		.loc 1 435 0
 539 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 540              	.LVL55:
 541 00c4 0546     		mov	r5, r0
 542 00c6 4046     		mov	r0, r8
 543 00c8 4946     		mov	r1, r9
 544 00ca FFF7FEFF 		bl	__aeabi_d2iz
 545              	.LVL56:
 546 00ce 0446     		mov	r4, r0
 547 00d0 3046     		mov	r0, r6
 548 00d2 3946     		mov	r1, r7
 549 00d4 FFF7FEFF 		bl	__aeabi_d2iz
 550              	.LVL57:
 551 00d8 2B46     		mov	r3, r5
 552 00da 2246     		mov	r2, r4
 553 00dc 0146     		mov	r1, r0
 554 00de 1148     		ldr	r0, .L30+28
 555 00e0 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 22


 556              	.LVL58:
 437:Core/Src/robot/robot.cpp **** 	zone_select();
 557              		.loc 1 437 0
 558 00e4 FFF7FEFF 		bl	_Z11zone_selectv
 559              	.LVL59:
 438:Core/Src/robot/robot.cpp **** }...
 560              		.loc 1 438 0
 561 00e8 BDEC028B 		vldm	sp!, {d8}
 562              	.LCFI3:
 563              		.cfi_remember_state
 564              		.cfi_restore 80
 565              		.cfi_restore 81
 566              		.cfi_def_cfa_offset 32
 567 00ec BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 568              	.L27:
 569              	.LCFI4:
 570              		.cfi_restore_state
 424:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 571              		.loc 1 424 0
 572 00f0 0D48     		ldr	r0, .L30+32
 573 00f2 FFF7FEFF 		bl	printf
 574              	.LVL60:
 575 00f6 8EE7     		b	.L23
 576              	.L28:
 427:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 577              		.loc 1 427 0
 578 00f8 0C48     		ldr	r0, .L30+36
 579 00fa FFF7FEFF 		bl	printf
 580              	.LVL61:
 581 00fe 91E7     		b	.L24
 582              	.L29:
 430:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 583              		.loc 1 430 0
 584 0100 0B48     		ldr	r0, .L30+40
 585 0102 FFF7FEFF 		bl	printf
 586              	.LVL62:
 587 0106 94E7     		b	.L25
 588              	.L31:
 589              		.align	3
 590              	.L30:
 591 0108 182D4454 		.word	1413754136
 592 010c FB210940 		.word	1074340347
 593 0110 000C0240 		.word	1073875968
 594 0114 00000000 		.word	0
 595 0118 00000000 		.word	leg
 596 011c 00000000 		.word	steering
 597 0120 00003443 		.word	1127481344
 598 0124 18000000 		.word	.LC12
 599 0128 00000000 		.word	.LC9
 600 012c 08000000 		.word	.LC10
 601 0130 10000000 		.word	.LC11
 602              		.cfi_endproc
 603              	.LFE500:
 605              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 606              		.align	1
 607              		.weak	_Z12swap_ElementIfEvRT_S1_
 608              		.syntax unified
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 23


 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	_Z12swap_ElementIfEvRT_S1_:
 614              	.LFB509:
 615              		.file 4 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
 616              		.loc 4 16 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              	.LVL63:
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
 622              		.loc 4 18 0
 623 0000 0368     		ldr	r3, [r0]	@ float
 624              	.LVL64:
  19:Core/Inc/utils/vec3.h ****         first = second;
 625              		.loc 4 19 0
 626 0002 0A68     		ldr	r2, [r1]	@ float
 627 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h ****         second = temp;
 628              		.loc 4 20 0
 629 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** }
 630              		.loc 4 21 0
 631 0008 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE509:
 635              		.global	__aeabi_d2f
 636              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 637              		.align	1
 638              		.global	_Z11start_RobotP12Robot_States
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	_Z11start_RobotP12Robot_States:
 645              	.LFB497:
  21:Core/Src/robot/robot.cpp **** {
 646              		.loc 1 21 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 24


 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 16
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              	.LVL65:
 651 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 652              	.LCFI5:
 653              		.cfi_def_cfa_offset 36
 654              		.cfi_offset 4, -36
 655              		.cfi_offset 5, -32
 656              		.cfi_offset 6, -28
 657              		.cfi_offset 7, -24
 658              		.cfi_offset 8, -20
 659              		.cfi_offset 9, -16
 660              		.cfi_offset 10, -12
 661              		.cfi_offset 11, -8
 662              		.cfi_offset 14, -4
 663 0004 2DED028B 		vpush.64	{d8}
 664              	.LCFI6:
 665              		.cfi_def_cfa_offset 44
 666              		.cfi_offset 80, -44
 667              		.cfi_offset 81, -40
 668 0008 87B0     		sub	sp, sp, #28
 669              	.LCFI7:
 670              		.cfi_def_cfa_offset 72
 671 000a 0446     		mov	r4, r0
 672              	.LBB110:
  22:Core/Src/robot/robot.cpp **** 	switch (*state_)
 673              		.loc 1 22 0
 674 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 675 000e 0A2B     		cmp	r3, #10
 676 0010 00F2C483 		bhi	.L33
 677 0014 DFE813F0 		tbh	[pc, r3, lsl #1]
 678              	.L36:
 679 0018 0B00     		.2byte	(.L35-.L36)/2
 680 001a 4D01     		.2byte	(.L37-.L36)/2
 681 001c AE01     		.2byte	(.L38-.L36)/2
 682 001e ED01     		.2byte	(.L39-.L36)/2
 683 0020 3D02     		.2byte	(.L40-.L36)/2
 684 0022 6702     		.2byte	(.L41-.L36)/2
 685 0024 9102     		.2byte	(.L42-.L36)/2
 686 0026 CA02     		.2byte	(.L43-.L36)/2
 687 0028 5403     		.2byte	(.L44-.L36)/2
 688 002a 9203     		.2byte	(.L45-.L36)/2
 689 002c C703     		.2byte	(.L46-.L36)/2
 690              		.p2align 1
 691              	.L35:
 692              	.LBB111:
 693              	.LBB112:
  36:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
 694              		.loc 1 36 0
 695 002e B848     		ldr	r0, .L73+8
 696              	.LVL66:
 697 0030 FFF7FEFF 		bl	printf
 698              	.LVL67:
  37:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
 699              		.loc 1 37 0
 700 0034 4021     		movs	r1, #64
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 25


 701 0036 B748     		ldr	r0, .L73+12
 702 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 703              	.LVL68:
 704 003c 0028     		cmp	r0, #0
 705 003e 40F09F80 		bne	.L47
  39:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
 706              		.loc 1 39 0
 707 0042 B54B     		ldr	r3, .L73+16
 708 0044 0122     		movs	r2, #1
 709 0046 1A70     		strb	r2, [r3]
 710              	.L48:
  48:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 711              		.loc 1 48 0
 712 0048 B44B     		ldr	r3, .L73+20
 713 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 714 004c 23B9     		cbnz	r3, .L49
  48:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 715              		.loc 1 48 0 is_stmt 0 discriminator 1
 716 004e B44A     		ldr	r2, .L73+24
 717 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 718 0052 002A     		cmp	r2, #0
 719 0054 40F09B80 		bne	.L67
 720              	.L49:
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
 721              		.loc 1 55 0 is_stmt 1
 722 0058 002B     		cmp	r3, #0
 723 005a 40F0B180 		bne	.L68
 724              	.LVL69:
 725              	.L50:
 726              	.LBB113:
 727              	.LBB114:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 728              		.loc 2 47 0
 729 005e B14E     		ldr	r6, .L73+28
 730 0060 3046     		mov	r0, r6
 731 0062 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 732              	.LVL70:
 733              	.LBE114:
 734              	.LBE113:
  61:Core/Src/robot/robot.cpp **** 		printf("  leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0
 735              		.loc 1 61 0
 736 0066 9FEDB08A 		vldr.32	s16, .L73+32
 737 006a 60EE087A 		vmul.f32	s15, s0, s16
 738 006e 17EE900A 		vmov	r0, s15
 739 0072 FFF7FEFF 		bl	__aeabi_f2d
 740              	.LVL71:
 741 0076 A4A3     		adr	r3, .L73
 742 0078 D3E90023 		ldrd	r2, [r3]
 743 007c FFF7FEFF 		bl	__aeabi_ddiv
 744              	.LVL72:
 745 0080 0446     		mov	r4, r0
 746 0082 0D46     		mov	r5, r1
 747              	.LVL73:
 748              	.LBB115:
 749              	.LBB116:
 750              		.loc 2 48 0
 751 0084 06F15800 		add	r0, r6, #88
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 26


 752 0088 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 753              	.LVL74:
 754              	.LBE116:
 755              	.LBE115:
  62:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 756              		.loc 1 62 0
 757 008c 60EE087A 		vmul.f32	s15, s0, s16
 758 0090 17EE900A 		vmov	r0, s15
 759 0094 FFF7FEFF 		bl	__aeabi_f2d
 760              	.LVL75:
 761 0098 9BA3     		adr	r3, .L73
 762 009a D3E90023 		ldrd	r2, [r3]
 763 009e FFF7FEFF 		bl	__aeabi_ddiv
 764              	.LVL76:
 765 00a2 0646     		mov	r6, r0
 766 00a4 0F46     		mov	r7, r1
 767              	.LVL77:
 768              	.LBB117:
 769              	.LBB118:
 770              		.loc 3 112 0
 771 00a6 A148     		ldr	r0, .L73+36
 772 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 773              	.LVL78:
 774              	.LBE118:
 775              	.LBE117:
  62:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 776              		.loc 1 62 0
 777 00ac 60EE087A 		vmul.f32	s15, s0, s16
 778 00b0 17EE900A 		vmov	r0, s15
 779 00b4 FFF7FEFF 		bl	__aeabi_f2d
 780              	.LVL79:
 781 00b8 93A3     		adr	r3, .L73
 782 00ba D3E90023 		ldrd	r2, [r3]
 783 00be FFF7FEFF 		bl	__aeabi_ddiv
 784              	.LVL80:
 785 00c2 8046     		mov	r8, r0
 786 00c4 8946     		mov	r9, r1
 787 00c6 9A4B     		ldr	r3, .L73+40
 788 00c8 D3ED007A 		vldr.32	s15, [r3]
 789 00cc 67EE887A 		vmul.f32	s15, s15, s16
 790 00d0 17EE900A 		vmov	r0, s15
 791 00d4 FFF7FEFF 		bl	__aeabi_f2d
 792              	.LVL81:
 793 00d8 8BA3     		adr	r3, .L73
 794 00da D3E90023 		ldrd	r2, [r3]
 795 00de FFF7FEFF 		bl	__aeabi_ddiv
 796              	.LVL82:
 797 00e2 8246     		mov	r10, r0
 798 00e4 8B46     		mov	fp, r1
  61:Core/Src/robot/robot.cpp **** 		printf("  leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0
 799              		.loc 1 61 0
 800 00e6 4046     		mov	r0, r8
 801 00e8 4946     		mov	r1, r9
 802 00ea FFF7FEFF 		bl	__aeabi_d2iz
 803              	.LVL83:
 804 00ee 8046     		mov	r8, r0
 805 00f0 3046     		mov	r0, r6
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 27


 806 00f2 3946     		mov	r1, r7
 807 00f4 FFF7FEFF 		bl	__aeabi_d2iz
 808              	.LVL84:
 809 00f8 0646     		mov	r6, r0
 810 00fa 2046     		mov	r0, r4
 811 00fc 2946     		mov	r1, r5
 812 00fe FFF7FEFF 		bl	__aeabi_d2iz
 813              	.LVL85:
 814 0102 0446     		mov	r4, r0
 815 0104 5046     		mov	r0, r10
 816 0106 5946     		mov	r1, fp
 817 0108 FFF7FEFF 		bl	__aeabi_d2iz
 818              	.LVL86:
 819 010c 0090     		str	r0, [sp]
 820 010e 4346     		mov	r3, r8
 821 0110 3246     		mov	r2, r6
 822 0112 2146     		mov	r1, r4
 823 0114 8748     		ldr	r0, .L73+44
 824 0116 FFF7FEFF 		bl	printf
 825              	.LVL87:
 826              	.LBB119:
  63:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 827              		.loc 1 63 0
 828 011a 1021     		movs	r1, #16
 829 011c 8648     		ldr	r0, .L73+48
 830 011e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 831              	.LVL88:
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 832              		.loc 1 65 0
 833 0122 28B1     		cbz	r0, .L51
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 834              		.loc 1 64 0
 835 0124 0421     		movs	r1, #4
 836 0126 7B48     		ldr	r0, .L73+12
 837 0128 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 838              	.LVL89:
  63:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 839              		.loc 1 63 0
 840 012c 0028     		cmp	r0, #0
 841 012e 53D1     		bne	.L69
 842              	.L51:
  68:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 843              		.loc 1 68 0 discriminator 1
 844 0130 0022     		movs	r2, #0
 845 0132 0221     		movs	r1, #2
 846 0134 8148     		ldr	r0, .L73+52
 847 0136 FFF7FEFF 		bl	HAL_GPIO_WritePin
 848              	.LVL90:
  69:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
 849              		.loc 1 69 0 discriminator 1
 850 013a 784B     		ldr	r3, .L73+20
 851 013c 0122     		movs	r2, #1
 852 013e 1A70     		strb	r2, [r3]
  70:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 853              		.loc 1 70 0 discriminator 1
 854 0140 774B     		ldr	r3, .L73+24
 855 0142 0022     		movs	r2, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 28


 856 0144 1A70     		strb	r2, [r3]
 857              	.LVL91:
 858              	.LBB120:
 859              	.LBB121:
 860              	.LBB122:
 861              	.LBB123:
 862              	.LBB124:
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 29


  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 30


 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 863              		.loc 4 129 0 discriminator 1
 864 0146 7E4B     		ldr	r3, .L73+56
 865 0148 1A68     		ldr	r2, [r3]	@ float
 866 014a 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 867              		.loc 4 130 0 discriminator 1
 868 014c 5A68     		ldr	r2, [r3, #4]	@ float
 869 014e 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 870              		.loc 4 131 0 discriminator 1
 871 0150 9B68     		ldr	r3, [r3, #8]	@ float
 872 0152 0593     		str	r3, [sp, #20]	@ float
 873              	.LVL92:
 874              	.LBE124:
 875              	.LBE123:
 876              	.LBE122:
 877              	.LBB125:
 878              	.LBB126:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 31


 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 879              		.loc 4 175 0 discriminator 1
 880 0154 7B4C     		ldr	r4, .L73+60
 881 0156 03A9     		add	r1, sp, #12
 882              	.LVL93:
 883 0158 2046     		mov	r0, r4
 884 015a FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 885              	.LVL94:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 886              		.loc 4 176 0 discriminator 1
 887 015e 04A9     		add	r1, sp, #16
 888 0160 201D     		adds	r0, r4, #4
 889 0162 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 890              	.LVL95:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 891              		.loc 4 177 0 discriminator 1
 892 0166 05A9     		add	r1, sp, #20
 893 0168 04F10800 		add	r0, r4, #8
 894 016c FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 895              	.LVL96:
 896              	.LBE126:
 897              	.LBE125:
 898              	.LBE121:
 899              	.LBE120:
  72:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
 900              		.loc 1 72 0 discriminator 1
 901 0170 FFF7FEFF 		bl	_Z11getup_n_runv
 902              	.LVL97:
 903 0174 0028     		cmp	r0, #0
 904 0176 00F01183 		beq	.L33
  74:Core/Src/robot/robot.cpp **** 				zone_select();
 905              		.loc 1 74 0
 906 017a FFF7FEFF 		bl	_Z11zone_selectv
 907              	.LVL98:
 908 017e 0DE3     		b	.L33
 909              	.LVL99:
 910              	.L47:
 911              	.LBE119:
  43:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
 912              		.loc 1 43 0
 913 0180 654B     		ldr	r3, .L73+16
 914 0182 0022     		movs	r2, #0
 915 0184 1A70     		strb	r2, [r3]
  44:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
 916              		.loc 1 44 0
 917 0186 6A4B     		ldr	r3, .L73+40
 918 0188 0022     		movs	r2, #0
 919 018a 1A60     		str	r2, [r3]	@ float
 920 018c 5CE7     		b	.L48
 921              	.L67:
 922              	.LVL100:
 923              	.LBB129:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 32


 924              	.LBB130:
 925              	.LBB131:
 926              	.LBB132:
 927              	.LBB133:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 928              		.loc 4 129 0
 929 018e 6C4B     		ldr	r3, .L73+56
 930 0190 1A68     		ldr	r2, [r3]	@ float
 931 0192 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 932              		.loc 4 130 0
 933 0194 5A68     		ldr	r2, [r3, #4]	@ float
 934 0196 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 935              		.loc 4 131 0
 936 0198 9B68     		ldr	r3, [r3, #8]	@ float
 937 019a 0593     		str	r3, [sp, #20]	@ float
 938              	.LVL101:
 939              	.LBE133:
 940              	.LBE132:
 941              	.LBE131:
 942              	.LBB134:
 943              	.LBB135:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 944              		.loc 4 175 0
 945 019c 694C     		ldr	r4, .L73+60
 946              	.LVL102:
 947 019e 03A9     		add	r1, sp, #12
 948              	.LVL103:
 949 01a0 2046     		mov	r0, r4
 950 01a2 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 951              	.LVL104:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 952              		.loc 4 176 0
 953 01a6 04A9     		add	r1, sp, #16
 954 01a8 201D     		adds	r0, r4, #4
 955 01aa FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 956              	.LVL105:
 957              		.loc 4 177 0
 958 01ae 05A9     		add	r1, sp, #20
 959 01b0 04F10800 		add	r0, r4, #8
 960 01b4 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 961              	.LVL106:
 962              	.LBE135:
 963              	.LBE134:
 964              	.LBE130:
 965              	.LBE129:
  51:Core/Src/robot/robot.cpp **** 			printf("  not set  ");
 966              		.loc 1 51 0
 967 01b8 6348     		ldr	r0, .L73+64
 968 01ba FFF7FEFF 		bl	printf
 969              	.LVL107:
 970 01be 4EE7     		b	.L50
 971              	.LVL108:
 972              	.L68:
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 973              		.loc 1 57 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 33


 974 01c0 574B     		ldr	r3, .L73+24
 975 01c2 0022     		movs	r2, #0
 976 01c4 1A70     		strb	r2, [r3]
  58:Core/Src/robot/robot.cpp **** 			printf("\n\nset\n\n");
 977              		.loc 1 58 0
 978 01c6 6148     		ldr	r0, .L73+68
 979 01c8 FFF7FEFF 		bl	puts
 980              	.LVL109:
  59:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 981              		.loc 1 59 0
 982 01cc 0122     		movs	r2, #1
 983 01ce 0221     		movs	r1, #2
 984 01d0 5A48     		ldr	r0, .L73+52
 985 01d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 986              	.LVL110:
 987 01d6 42E7     		b	.L50
 988              	.LVL111:
 989              	.L69:
 990              	.LBB136:
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 991              		.loc 1 65 0
 992 01d8 0221     		movs	r1, #2
 993 01da 5D48     		ldr	r0, .L73+72
 994 01dc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 995              	.LVL112:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 996              		.loc 1 64 0
 997 01e0 0028     		cmp	r0, #0
 998 01e2 A5D0     		beq	.L51
  66:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
 999              		.loc 1 66 0 discriminator 2
 1000 01e4 0821     		movs	r1, #8
 1001 01e6 5A48     		ldr	r0, .L73+72
 1002 01e8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1003              	.LVL113:
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 1004              		.loc 1 65 0 discriminator 2
 1005 01ec 0028     		cmp	r0, #0
 1006 01ee 9FD0     		beq	.L51
 1007              	.LBB127:
  77:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
 1008              		.loc 1 77 0
 1009 01f0 4FF40071 		mov	r1, #512
 1010 01f4 5648     		ldr	r0, .L73+72
 1011 01f6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1012              	.LVL114:
 1013 01fa 0028     		cmp	r0, #0
 1014 01fc 45D1     		bne	.L70
 1015              	.LBB128:
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 1016              		.loc 1 80 0
 1017 01fe 544C     		ldr	r4, .L73+72
 1018 0200 0022     		movs	r2, #0
 1019 0202 4FF48051 		mov	r1, #4096
 1020 0206 2046     		mov	r0, r4
 1021 0208 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1022              	.LVL115:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 34


  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 1023              		.loc 1 81 0
 1024 020c 0022     		movs	r2, #0
 1025 020e 4FF40051 		mov	r1, #8192
 1026 0212 2046     		mov	r0, r4
 1027 0214 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1028              	.LVL116:
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 1029              		.loc 1 82 0
 1030 0218 0022     		movs	r2, #0
 1031 021a 4FF48041 		mov	r1, #16384
 1032 021e 2046     		mov	r0, r4
 1033 0220 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1034              	.LVL117:
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 1035              		.loc 1 83 0
 1036 0224 0022     		movs	r2, #0
 1037 0226 4FF40041 		mov	r1, #32768
 1038 022a 2046     		mov	r0, r4
 1039 022c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1040              	.LVL118:
  84:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 1041              		.loc 1 84 0
 1042 0230 0022     		movs	r2, #0
 1043 0232 0221     		movs	r1, #2
 1044 0234 4148     		ldr	r0, .L73+52
 1045 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1046              	.LVL119:
  85:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1047              		.loc 1 85 0
 1048 023a 384B     		ldr	r3, .L73+20
 1049 023c 0022     		movs	r2, #0
 1050 023e 1A70     		strb	r2, [r3]
  87:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1051              		.loc 1 87 0
 1052 0240 444B     		ldr	r3, .L73+76
 1053 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 0244 BFF35B8F 		dmb	ish
 1055 0248 13F0010F 		tst	r3, #1
 1056 024c 10D0     		beq	.L71
 1057              	.L56:
  88:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 1058              		.loc 1 88 0
 1059 024e FFF7FEFF 		bl	HAL_GetTick
 1060              	.LVL120:
 1061 0252 414B     		ldr	r3, .L73+80
 1062 0254 1B68     		ldr	r3, [r3]
 1063 0256 C31A     		subs	r3, r0, r3
 1064 0258 B3F5FA7F 		cmp	r3, #500
 1065 025c C0F09E82 		bcc	.L33
  90:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
 1066              		.loc 1 90 0
 1067 0260 FFF7FEFF 		bl	_Z11getup_n_runv
 1068              	.LVL121:
 1069 0264 0028     		cmp	r0, #0
 1070 0266 00F09982 		beq	.L33
  92:Core/Src/robot/robot.cpp **** 					zone_select();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 35


 1071              		.loc 1 92 0
 1072 026a FFF7FEFF 		bl	_Z11zone_selectv
 1073              	.LVL122:
 1074 026e 95E2     		b	.L33
 1075              	.L71:
  87:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1076              		.loc 1 87 0 discriminator 1
 1077 0270 3848     		ldr	r0, .L73+76
 1078 0272 FFF7FEFF 		bl	__cxa_guard_acquire
 1079              	.LVL123:
 1080 0276 0028     		cmp	r0, #0
 1081 0278 E9D0     		beq	.L56
  87:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1082              		.loc 1 87 0 is_stmt 0 discriminator 2
 1083 027a FFF7FEFF 		bl	HAL_GetTick
 1084              	.LVL124:
 1085 027e 364B     		ldr	r3, .L73+80
 1086 0280 1860     		str	r0, [r3]
 1087 0282 3448     		ldr	r0, .L73+76
 1088 0284 FFF7FEFF 		bl	__cxa_guard_release
 1089              	.LVL125:
 1090 0288 E1E7     		b	.L56
 1091              	.L70:
 1092              	.LBE128:
  99:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1093              		.loc 1 99 0 is_stmt 1
 1094 028a 9FED348A 		vldr.32	s16, .L73+84
 1095 028e 344C     		ldr	r4, .L73+88
 1096 0290 B0EE480A 		vmov.f32	s0, s16
 1097 0294 2046     		mov	r0, r4
 1098 0296 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1099              	.LVL126:
 100:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1100              		.loc 1 100 0
 1101 029a B0EE480A 		vmov.f32	s0, s16
 1102 029e 04F15800 		add	r0, r4, #88
 1103 02a2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1104              	.LVL127:
 101:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 1105              		.loc 1 101 0
 1106 02a6 B0EE480A 		vmov.f32	s0, s16
 1107 02aa 2E48     		ldr	r0, .L73+92
 1108 02ac FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1109              	.LVL128:
 1110 02b0 74E2     		b	.L33
 1111              	.LVL129:
 1112              	.L37:
 1113              	.LBE127:
 1114              	.LBE136:
 1115              	.LBE112:
 113:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 1116              		.loc 1 113 0
 1117 02b2 2D48     		ldr	r0, .L73+96
 1118              	.LVL130:
 1119 02b4 FFF7FEFF 		bl	printf
 1120              	.LVL131:
 114:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 36


 1121              		.loc 1 114 0
 1122 02b8 2C4B     		ldr	r3, .L73+100
 1123 02ba D3ED007A 		vldr.32	s15, [r3]
 1124 02be 2C4B     		ldr	r3, .L73+104
 1125 02c0 93ED000A 		vldr.32	s0, [r3]
 1126 02c4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1127 02c8 17EE900A 		vmov	r0, s15	@ int
 1128 02cc FFF7FEFF 		bl	_Z2goif
 1129              	.LVL132:
 1130 02d0 0028     		cmp	r0, #0
 1131 02d2 00F06382 		beq	.L33
 116:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 1132              		.loc 1 116 0
 1133 02d6 0223     		movs	r3, #2
 1134 02d8 2370     		strb	r3, [r4]
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1135              		.loc 1 117 0
 1136 02da 1D4C     		ldr	r4, .L73+72
 1137              	.LVL133:
 1138 02dc 4FF48051 		mov	r1, #4096
 1139 02e0 2046     		mov	r0, r4
 1140 02e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1141              	.LVL134:
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1142              		.loc 1 118 0
 1143 02e6 4FF40051 		mov	r1, #8192
 1144 02ea 2046     		mov	r0, r4
 1145 02ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1146              	.LVL135:
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1147              		.loc 1 119 0
 1148 02f0 4FF48041 		mov	r1, #16384
 1149 02f4 2046     		mov	r0, r4
 1150 02f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1151              	.LVL136:
 120:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1152              		.loc 1 120 0
 1153 02fa 4FF40041 		mov	r1, #32768
 1154 02fe 2046     		mov	r0, r4
 1155 0300 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1156              	.LVL137:
 1157 0304 4AE2     		b	.L33
 1158              	.L74:
 1159 0306 00BF     		.align	3
 1160              	.L73:
 1161 0308 182D4454 		.word	1413754136
 1162 030c FB210940 		.word	1074340347
 1163 0310 00000000 		.word	.LC13
 1164 0314 00100240 		.word	1073876992
 1165 0318 00000000 		.word	.LANCHOR5
 1166 031c 00000000 		.word	.LANCHOR1
 1167 0320 00000000 		.word	.LANCHOR6
 1168 0324 3C000000 		.word	leg+60
 1169 0328 00003443 		.word	1127481344
 1170 032c 0C000000 		.word	steering+12
 1171 0330 00000000 		.word	robot_angle
 1172 0334 1C000000 		.word	.LC16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 37


 1173 0338 00040240 		.word	1073873920
 1174 033c 00080240 		.word	1073874944
 1175 0340 00000000 		.word	curr_angle
 1176 0344 00000000 		.word	initial_angle
 1177 0348 08000000 		.word	.LC14
 1178 034c 14000000 		.word	.LC15
 1179 0350 000C0240 		.word	1073875968
 1180 0354 00000000 		.word	.LANCHOR7
 1181 0358 00000000 		.word	.LANCHOR8
 1182 035c 00000000 		.word	0
 1183 0360 00000000 		.word	leg
 1184 0364 00000000 		.word	steering
 1185 0368 64000000 		.word	.LC17
 1186 036c 00000000 		.word	.LANCHOR2
 1187 0370 00000000 		.word	.LANCHOR3
 1188              	.LVL138:
 1189              	.L38:
 134:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 1190              		.loc 1 134 0
 1191 0374 C248     		ldr	r0, .L75+8
 1192              	.LVL139:
 1193 0376 FFF7FEFF 		bl	printf
 1194              	.LVL140:
 136:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 1195              		.loc 1 136 0
 1196 037a C24B     		ldr	r3, .L75+12
 1197 037c 93ED010A 		vldr.32	s0, [r3, #4]
 1198 0380 6320     		movs	r0, #99
 1199 0382 FFF7FEFF 		bl	_Z2goif
 1200              	.LVL141:
 137:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1201              		.loc 1 137 0
 1202 0386 4FF48071 		mov	r1, #256
 1203 038a BF48     		ldr	r0, .L75+16
 1204 038c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1205              	.LVL142:
 1206 0390 68B1     		cbz	r0, .L57
 1207              	.LVL143:
 1208              	.LBB137:
 1209              	.LBB138:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1210              		.loc 2 45 0
 1211 0392 BE4B     		ldr	r3, .L75+20
 1212 0394 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1213              	.LVL144:
 1214              	.LBE138:
 1215              	.LBE137:
 137:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1216              		.loc 1 137 0
 1217 0398 F8EEE77A 		vcvt.f32.s32	s15, s15
 1218 039c BC4B     		ldr	r3, .L75+24
 1219 039e 93ED017A 		vldr.32	s14, [r3, #4]
 1220 03a2 F4EEC77A 		vcmpe.f32	s15, s14
 1221 03a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1222 03aa 40F3F781 		ble	.L33
 1223              	.L57:
 140:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 38


 1224              		.loc 1 140 0 discriminator 3
 1225 03ae 0323     		movs	r3, #3
 1226 03b0 2370     		strb	r3, [r4]
 141:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 1227              		.loc 1 141 0 discriminator 3
 1228 03b2 B74B     		ldr	r3, .L75+24
 1229 03b4 D3ED017A 		vldr.32	s15, [r3, #4]
 1230 03b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1231 03bc B34A     		ldr	r2, .L75+20
 1232 03be C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 142:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 1233              		.loc 1 142 0 discriminator 3
 1234 03c2 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1235              		.loc 1 144 0 discriminator 3
 1236 03c6 B04C     		ldr	r4, .L75+16
 1237              	.LVL145:
 1238 03c8 4FF48051 		mov	r1, #4096
 1239 03cc 2046     		mov	r0, r4
 1240 03ce FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1241              	.LVL146:
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1242              		.loc 1 145 0 discriminator 3
 1243 03d2 4FF40051 		mov	r1, #8192
 1244 03d6 2046     		mov	r0, r4
 1245 03d8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1246              	.LVL147:
 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1247              		.loc 1 146 0 discriminator 3
 1248 03dc 4FF48041 		mov	r1, #16384
 1249 03e0 2046     		mov	r0, r4
 1250 03e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1251              	.LVL148:
 147:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1252              		.loc 1 147 0 discriminator 3
 1253 03e6 4FF40041 		mov	r1, #32768
 1254 03ea 2046     		mov	r0, r4
 1255 03ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1256              	.LVL149:
 1257 03f0 D4E1     		b	.L33
 1258              	.LVL150:
 1259              	.L39:
 158:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 1260              		.loc 1 158 0
 1261 03f2 A848     		ldr	r0, .L75+28
 1262              	.LVL151:
 1263 03f4 FFF7FEFF 		bl	printf
 1264              	.LVL152:
 160:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 1265              		.loc 1 160 0
 1266 03f8 A24B     		ldr	r3, .L75+12
 1267 03fa 93ED020A 		vldr.32	s0, [r3, #8]
 1268 03fe 6420     		movs	r0, #100
 1269 0400 FFF7FEFF 		bl	_Z2goif
 1270              	.LVL153:
 161:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1271              		.loc 1 161 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 39


 1272 0404 4FF48061 		mov	r1, #1024
 1273 0408 9F48     		ldr	r0, .L75+16
 1274 040a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1275              	.LVL154:
 1276 040e 80B9     		cbnz	r0, .L59
 1277              	.LVL155:
 1278              	.LBB139:
 1279              	.LBB140:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1280              		.loc 2 45 0
 1281 0410 9E4B     		ldr	r3, .L75+20
 1282 0412 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 1283              	.LVL156:
 1284              	.LBE140:
 1285              	.LBE139:
 161:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1286              		.loc 1 161 0
 1287 0416 B8EEC77A 		vcvt.f32.s32	s14, s14
 1288 041a 9D4B     		ldr	r3, .L75+24
 1289 041c D3ED027A 		vldr.32	s15, [r3, #8]
 1290 0420 F0EE006A 		vmov.f32	s13, #2.0e+0
 1291 0424 77EEE67A 		vsub.f32	s15, s15, s13
 1292 0428 B4EEE77A 		vcmpe.f32	s14, s15
 1293 042c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1294 0430 0DDC     		bgt	.L60
 1295              	.L59:
 1296              	.LVL157:
 1297              	.LBB141:
 1298              	.LBB142:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1299              		.loc 2 45 0 discriminator 4
 1300 0432 964B     		ldr	r3, .L75+20
 1301 0434 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1302              	.LVL158:
 1303              	.LBE142:
 1304              	.LBE141:
 161:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1305              		.loc 1 161 0 discriminator 4
 1306 0438 F8EEE77A 		vcvt.f32.s32	s15, s15
 1307 043c 944B     		ldr	r3, .L75+24
 1308 043e 93ED027A 		vldr.32	s14, [r3, #8]
 1309 0442 F4EEC77A 		vcmpe.f32	s15, s14
 1310 0446 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1311 044a C0F2A781 		blt	.L33
 1312              	.L60:
 164:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 1313              		.loc 1 164 0 discriminator 5
 1314 044e 0423     		movs	r3, #4
 1315 0450 2370     		strb	r3, [r4]
 165:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 1316              		.loc 1 165 0 discriminator 5
 1317 0452 8F4B     		ldr	r3, .L75+24
 1318 0454 D3ED027A 		vldr.32	s15, [r3, #8]
 1319 0458 FDEEE77A 		vcvt.s32.f32	s15, s15
 1320 045c 8B4A     		ldr	r2, .L75+20
 1321 045e C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 166:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 40


 1322              		.loc 1 166 0 discriminator 5
 1323 0462 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1324              		.loc 1 168 0 discriminator 5
 1325 0466 884C     		ldr	r4, .L75+16
 1326              	.LVL159:
 1327 0468 4FF48051 		mov	r1, #4096
 1328 046c 2046     		mov	r0, r4
 1329 046e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1330              	.LVL160:
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1331              		.loc 1 169 0 discriminator 5
 1332 0472 4FF40051 		mov	r1, #8192
 1333 0476 2046     		mov	r0, r4
 1334 0478 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1335              	.LVL161:
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1336              		.loc 1 170 0 discriminator 5
 1337 047c 4FF48041 		mov	r1, #16384
 1338 0480 2046     		mov	r0, r4
 1339 0482 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1340              	.LVL162:
 171:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1341              		.loc 1 171 0 discriminator 5
 1342 0486 4FF40041 		mov	r1, #32768
 1343 048a 2046     		mov	r0, r4
 1344 048c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1345              	.LVL163:
 1346 0490 84E1     		b	.L33
 1347              	.LVL164:
 1348              	.L40:
 182:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 1349              		.loc 1 182 0
 1350 0492 8148     		ldr	r0, .L75+32
 1351              	.LVL165:
 1352 0494 FFF7FEFF 		bl	printf
 1353              	.LVL166:
 183:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 1354              		.loc 1 183 0
 1355 0498 7D4B     		ldr	r3, .L75+24
 1356 049a D3ED037A 		vldr.32	s15, [r3, #12]
 1357 049e 794B     		ldr	r3, .L75+12
 1358 04a0 93ED030A 		vldr.32	s0, [r3, #12]
 1359 04a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1360 04a8 17EE900A 		vmov	r0, s15	@ int
 1361 04ac FFF7FEFF 		bl	_Z2goif
 1362              	.LVL167:
 1363 04b0 0028     		cmp	r0, #0
 1364 04b2 00F07381 		beq	.L33
 185:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 1365              		.loc 1 185 0
 1366 04b6 0523     		movs	r3, #5
 1367 04b8 2370     		strb	r3, [r4]
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1368              		.loc 1 187 0
 1369 04ba 734C     		ldr	r4, .L75+16
 1370              	.LVL168:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 41


 1371 04bc 4FF48051 		mov	r1, #4096
 1372 04c0 2046     		mov	r0, r4
 1373 04c2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1374              	.LVL169:
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1375              		.loc 1 188 0
 1376 04c6 4FF40051 		mov	r1, #8192
 1377 04ca 2046     		mov	r0, r4
 1378 04cc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1379              	.LVL170:
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1380              		.loc 1 189 0
 1381 04d0 4FF48041 		mov	r1, #16384
 1382 04d4 2046     		mov	r0, r4
 1383 04d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1384              	.LVL171:
 190:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1385              		.loc 1 190 0
 1386 04da 4FF40041 		mov	r1, #32768
 1387 04de 2046     		mov	r0, r4
 1388 04e0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1389              	.LVL172:
 1390 04e4 5AE1     		b	.L33
 1391              	.LVL173:
 1392              	.L41:
 201:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 1393              		.loc 1 201 0
 1394 04e6 6D48     		ldr	r0, .L75+36
 1395              	.LVL174:
 1396 04e8 FFF7FEFF 		bl	printf
 1397              	.LVL175:
 202:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 1398              		.loc 1 202 0
 1399 04ec 684B     		ldr	r3, .L75+24
 1400 04ee D3ED047A 		vldr.32	s15, [r3, #16]
 1401 04f2 644B     		ldr	r3, .L75+12
 1402 04f4 93ED040A 		vldr.32	s0, [r3, #16]
 1403 04f8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1404 04fc 17EE900A 		vmov	r0, s15	@ int
 1405 0500 FFF7FEFF 		bl	_Z2goif
 1406              	.LVL176:
 1407 0504 0028     		cmp	r0, #0
 1408 0506 00F04981 		beq	.L33
 204:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 1409              		.loc 1 204 0
 1410 050a 0623     		movs	r3, #6
 1411 050c 2370     		strb	r3, [r4]
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1412              		.loc 1 206 0
 1413 050e 5E4C     		ldr	r4, .L75+16
 1414              	.LVL177:
 1415 0510 4FF48051 		mov	r1, #4096
 1416 0514 2046     		mov	r0, r4
 1417 0516 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1418              	.LVL178:
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1419              		.loc 1 207 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 42


 1420 051a 4FF40051 		mov	r1, #8192
 1421 051e 2046     		mov	r0, r4
 1422 0520 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1423              	.LVL179:
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1424              		.loc 1 208 0
 1425 0524 4FF48041 		mov	r1, #16384
 1426 0528 2046     		mov	r0, r4
 1427 052a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1428              	.LVL180:
 209:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1429              		.loc 1 209 0
 1430 052e 4FF40041 		mov	r1, #32768
 1431 0532 2046     		mov	r0, r4
 1432 0534 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1433              	.LVL181:
 1434 0538 30E1     		b	.L33
 1435              	.LVL182:
 1436              	.L42:
 1437              	.LBB143:
 221:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 1438              		.loc 1 221 0
 1439 053a 5948     		ldr	r0, .L75+40
 1440              	.LVL183:
 1441 053c FFF7FEFF 		bl	printf
 1442              	.LVL184:
 222:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 1443              		.loc 1 222 0
 1444 0540 584B     		ldr	r3, .L75+44
 1445 0542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1446 0544 93B9     		cbnz	r3, .L62
 224:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true) 
 1447              		.loc 1 224 0
 1448 0546 524B     		ldr	r3, .L75+24
 1449 0548 D3ED057A 		vldr.32	s15, [r3, #20]
 1450 054c 4D4B     		ldr	r3, .L75+12
 1451 054e 93ED050A 		vldr.32	s0, [r3, #20]
 1452 0552 FDEEE77A 		vcvt.s32.f32	s15, s15
 1453 0556 17EE900A 		vmov	r0, s15	@ int
 1454 055a FFF7FEFF 		bl	_Z2goif
 1455              	.LVL185:
 1456 055e 0028     		cmp	r0, #0
 1457 0560 00F01C81 		beq	.L33
 226:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 1458              		.loc 1 226 0
 1459 0564 4F4B     		ldr	r3, .L75+44
 1460 0566 0122     		movs	r2, #1
 1461 0568 1A70     		strb	r2, [r3]
 1462 056a 17E1     		b	.L33
 1463              	.L62:
 231:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1464              		.loc 1 231 0
 1465 056c FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1466              	.LVL186:
 1467 0570 0028     		cmp	r0, #0
 1468 0572 00F01381 		beq	.L33
 233:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 43


 1469              		.loc 1 233 0
 1470 0576 0723     		movs	r3, #7
 1471 0578 2370     		strb	r3, [r4]
 234:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 1472              		.loc 1 234 0
 1473 057a 4B4B     		ldr	r3, .L75+48
 1474 057c 0022     		movs	r2, #0
 1475 057e 1A70     		strb	r2, [r3]
 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1476              		.loc 1 235 0
 1477 0580 414C     		ldr	r4, .L75+16
 1478              	.LVL187:
 1479 0582 4FF48051 		mov	r1, #4096
 1480 0586 2046     		mov	r0, r4
 1481 0588 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1482              	.LVL188:
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1483              		.loc 1 236 0
 1484 058c 4FF40051 		mov	r1, #8192
 1485 0590 2046     		mov	r0, r4
 1486 0592 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1487              	.LVL189:
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1488              		.loc 1 237 0
 1489 0596 4FF48041 		mov	r1, #16384
 1490 059a 2046     		mov	r0, r4
 1491 059c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1492              	.LVL190:
 238:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1493              		.loc 1 238 0
 1494 05a0 4FF40041 		mov	r1, #32768
 1495 05a4 2046     		mov	r0, r4
 1496 05a6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1497              	.LVL191:
 1498 05aa F7E0     		b	.L33
 1499              	.LVL192:
 1500              	.L43:
 1501              	.LBE143:
 249:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1502              		.loc 1 249 0
 1503 05ac 3F48     		ldr	r0, .L75+52
 1504              	.LVL193:
 1505 05ae FFF7FEFF 		bl	printf
 1506              	.LVL194:
 250:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1507              		.loc 1 250 0
 1508 05b2 9FED3F8A 		vldr.32	s16, .L75+56
 1509 05b6 354D     		ldr	r5, .L75+20
 1510 05b8 B0EE480A 		vmov.f32	s0, s16
 1511 05bc 2846     		mov	r0, r5
 1512 05be FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1513              	.LVL195:
 251:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1514              		.loc 1 251 0
 1515 05c2 B0EE480A 		vmov.f32	s0, s16
 1516 05c6 05F15800 		add	r0, r5, #88
 1517 05ca FFF7FEFF 		bl	_ZN3leg9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 44


 1518              	.LVL196:
 252:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1519              		.loc 1 252 0
 1520 05ce B0EE480A 		vmov.f32	s0, s16
 1521 05d2 3848     		ldr	r0, .L75+60
 1522 05d4 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1523              	.LVL197:
 253:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1524              		.loc 1 253 0
 1525 05d8 4FF48061 		mov	r1, #1024
 1526 05dc 2A48     		ldr	r0, .L75+16
 1527 05de FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1528              	.LVL198:
 254:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1529              		.loc 1 254 0
 1530 05e2 0028     		cmp	r0, #0
 1531 05e4 3DD1     		bne	.L72
 1532              	.L63:
 254:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1533              		.loc 1 254 0 is_stmt 0 discriminator 1
 1534 05e6 304B     		ldr	r3, .L75+48
 1535 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 05ea 002B     		cmp	r3, #0
 1537 05ec 00F0D680 		beq	.L33
 257:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1538              		.loc 1 257 0 is_stmt 1
 1539 05f0 0823     		movs	r3, #8
 1540 05f2 2370     		strb	r3, [r4]
 258:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1541              		.loc 1 258 0
 1542 05f4 304B     		ldr	r3, .L75+64
 1543 05f6 93ED007A 		vldr.32	s14, [r3]
 1544 05fa DFED307A 		vldr.32	s15, .L75+68
 1545 05fe 67EE277A 		vmul.f32	s15, s14, s15
 1546 0602 17EE900A 		vmov	r0, s15
 1547 0606 FFF7FEFF 		bl	__aeabi_f2d
 1548              	.LVL199:
 1549 060a 1BA3     		adr	r3, .L75
 1550 060c D3E90023 		ldrd	r2, [r3]
 1551 0610 FFF7FEFF 		bl	__aeabi_ddiv
 1552              	.LVL200:
 1553 0614 FFF7FEFF 		bl	__aeabi_d2f
 1554              	.LVL201:
 1555 0618 1A4B     		ldr	r3, .L75+12
 1556 061a 9861     		str	r0, [r3, #24]	@ float
 259:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1557              		.loc 1 259 0
 1558 061c 224B     		ldr	r3, .L75+48
 1559 061e 0022     		movs	r2, #0
 1560 0620 1A70     		strb	r2, [r3]
 260:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[5];
 1561              		.loc 1 260 0
 1562 0622 1B4B     		ldr	r3, .L75+24
 1563 0624 D3ED057A 		vldr.32	s15, [r3, #20]
 1564 0628 FDEEE77A 		vcvt.s32.f32	s15, s15
 1565 062c 174A     		ldr	r2, .L75+20
 1566 062e C2ED047A 		vstr.32	s15, [r2, #16]	@ int
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 45


 261:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[5];
 1567              		.loc 1 261 0
 1568 0632 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1569              		.loc 1 262 0
 1570 0636 144C     		ldr	r4, .L75+16
 1571              	.LVL202:
 1572 0638 4FF48051 		mov	r1, #4096
 1573 063c 2046     		mov	r0, r4
 1574 063e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1575              	.LVL203:
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1576              		.loc 1 263 0
 1577 0642 4FF40051 		mov	r1, #8192
 1578 0646 2046     		mov	r0, r4
 1579 0648 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1580              	.LVL204:
 264:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1581              		.loc 1 264 0
 1582 064c 4FF48041 		mov	r1, #16384
 1583 0650 2046     		mov	r0, r4
 1584 0652 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1585              	.LVL205:
 265:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1586              		.loc 1 265 0
 1587 0656 4FF40041 		mov	r1, #32768
 1588 065a 2046     		mov	r0, r4
 1589 065c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1590              	.LVL206:
 1591 0660 9CE0     		b	.L33
 1592              	.LVL207:
 1593              	.L72:
 254:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1594              		.loc 1 254 0 discriminator 2
 1595 0662 4FF40061 		mov	r1, #2048
 1596 0666 0848     		ldr	r0, .L75+16
 1597 0668 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1598              	.LVL208:
 253:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1599              		.loc 1 253 0 discriminator 2
 1600 066c 0028     		cmp	r0, #0
 1601 066e BAD0     		beq	.L63
 1602 0670 94E0     		b	.L33
 1603              	.L76:
 1604 0672 00BFAFF3 		.align	3
 1604      0080
 1605              	.L75:
 1606 0678 182D4454 		.word	1413754136
 1607 067c FB210940 		.word	1074340347
 1608 0680 6C000000 		.word	.LC18
 1609 0684 00000000 		.word	.LANCHOR3
 1610 0688 000C0240 		.word	1073875968
 1611 068c 00000000 		.word	leg
 1612 0690 00000000 		.word	.LANCHOR2
 1613 0694 78000000 		.word	.LC19
 1614 0698 84000000 		.word	.LC20
 1615 069c 90000000 		.word	.LC21
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 46


 1616 06a0 9C000000 		.word	.LC22
 1617 06a4 00000000 		.word	.LANCHOR9
 1618 06a8 00000000 		.word	.LANCHOR1
 1619 06ac A8000000 		.word	.LC23
 1620 06b0 00000000 		.word	0
 1621 06b4 00000000 		.word	steering
 1622 06b8 00000000 		.word	robot_angle
 1623 06bc 00003443 		.word	1127481344
 1624              	.LVL209:
 1625              	.L44:
 1626              	.LBB144:
 276:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 1627              		.loc 1 276 0
 1628 06c0 4248     		ldr	r0, .L77
 1629              	.LVL210:
 1630 06c2 FFF7FEFF 		bl	printf
 1631              	.LVL211:
 277:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 1632              		.loc 1 277 0
 1633 06c6 424B     		ldr	r3, .L77+4
 1634 06c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1635 06ca DBB9     		cbnz	r3, .L64
 279:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 1636              		.loc 1 279 0
 1637 06cc 414B     		ldr	r3, .L77+8
 1638 06ce D3ED067A 		vldr.32	s15, [r3, #24]
 1639 06d2 414B     		ldr	r3, .L77+12
 1640 06d4 93ED060A 		vldr.32	s0, [r3, #24]
 1641 06d8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1642 06dc 17EE900A 		vmov	r0, s15	@ int
 1643 06e0 FFF7FEFF 		bl	_Z2goif
 1644              	.LVL212:
 1645 06e4 0028     		cmp	r0, #0
 1646 06e6 59D0     		beq	.L33
 281:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1647              		.loc 1 281 0
 1648 06e8 394B     		ldr	r3, .L77+4
 1649 06ea 0122     		movs	r2, #1
 1650 06ec 1A70     		strb	r2, [r3]
 282:Core/Src/robot/robot.cpp **** 				leg[0].steps = steps[5];
 1651              		.loc 1 282 0
 1652 06ee 394B     		ldr	r3, .L77+8
 1653 06f0 D3ED057A 		vldr.32	s15, [r3, #20]
 1654 06f4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1655 06f8 384A     		ldr	r2, .L77+16
 1656 06fa C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 283:Core/Src/robot/robot.cpp **** 				leg[1].steps = steps[5];
 1657              		.loc 1 283 0
 1658 06fe C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 1659 0702 4BE0     		b	.L33
 1660              	.L64:
 288:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1661              		.loc 1 288 0
 1662 0704 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1663              	.LVL213:
 1664 0708 0028     		cmp	r0, #0
 1665 070a 47D0     		beq	.L33
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 47


 290:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1666              		.loc 1 290 0
 1667 070c 0923     		movs	r3, #9
 1668 070e 2370     		strb	r3, [r4]
 291:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1669              		.loc 1 291 0
 1670 0710 334C     		ldr	r4, .L77+20
 1671              	.LVL214:
 1672 0712 4FF48051 		mov	r1, #4096
 1673 0716 2046     		mov	r0, r4
 1674 0718 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1675              	.LVL215:
 292:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1676              		.loc 1 292 0
 1677 071c 4FF40051 		mov	r1, #8192
 1678 0720 2046     		mov	r0, r4
 1679 0722 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1680              	.LVL216:
 293:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1681              		.loc 1 293 0
 1682 0726 4FF48041 		mov	r1, #16384
 1683 072a 2046     		mov	r0, r4
 1684 072c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1685              	.LVL217:
 294:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1686              		.loc 1 294 0
 1687 0730 4FF40041 		mov	r1, #32768
 1688 0734 2046     		mov	r0, r4
 1689 0736 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1690              	.LVL218:
 1691 073a 2FE0     		b	.L33
 1692              	.LVL219:
 1693              	.L45:
 1694              	.LBE144:
 305:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1695              		.loc 1 305 0
 1696 073c 2948     		ldr	r0, .L77+24
 1697              	.LVL220:
 1698 073e FFF7FEFF 		bl	puts
 1699              	.LVL221:
 306:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1700              		.loc 1 306 0
 1701 0742 9FED298A 		vldr.32	s16, .L77+28
 1702 0746 254C     		ldr	r4, .L77+16
 1703              	.LVL222:
 1704 0748 B0EE480A 		vmov.f32	s0, s16
 1705 074c 2046     		mov	r0, r4
 1706 074e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1707              	.LVL223:
 307:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1708              		.loc 1 307 0
 1709 0752 B0EE480A 		vmov.f32	s0, s16
 1710 0756 04F15800 		add	r0, r4, #88
 1711 075a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1712              	.LVL224:
 308:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1713              		.loc 1 308 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 48


 1714 075e B0EE480A 		vmov.f32	s0, s16
 1715 0762 2248     		ldr	r0, .L77+32
 1716 0764 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1717              	.LVL225:
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1718              		.loc 1 310 0
 1719 0768 1D4C     		ldr	r4, .L77+20
 1720 076a 4FF48051 		mov	r1, #4096
 1721 076e 2046     		mov	r0, r4
 1722 0770 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1723              	.LVL226:
 311:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1724              		.loc 1 311 0
 1725 0774 4FF40051 		mov	r1, #8192
 1726 0778 2046     		mov	r0, r4
 1727 077a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1728              	.LVL227:
 312:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1729              		.loc 1 312 0
 1730 077e 4FF48041 		mov	r1, #16384
 1731 0782 2046     		mov	r0, r4
 1732 0784 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1733              	.LVL228:
 313:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1734              		.loc 1 313 0
 1735 0788 4FF40041 		mov	r1, #32768
 1736 078c 2046     		mov	r0, r4
 1737 078e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1738              	.LVL229:
 314:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1739              		.loc 1 314 0
 1740 0792 0122     		movs	r2, #1
 1741 0794 0421     		movs	r1, #4
 1742 0796 1648     		ldr	r0, .L77+36
 1743 0798 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1744              	.LVL230:
 1745              	.L33:
 1746              	.LBE111:
 1747              	.LBE110:
 324:Core/Src/robot/robot.cpp **** }
 1748              		.loc 1 324 0
 1749 079c 07B0     		add	sp, sp, #28
 1750              	.LCFI8:
 1751              		.cfi_remember_state
 1752              		.cfi_def_cfa_offset 44
 1753              		@ sp needed
 1754 079e BDEC028B 		vldm	sp!, {d8}
 1755              	.LCFI9:
 1756              		.cfi_restore 80
 1757              		.cfi_restore 81
 1758              		.cfi_def_cfa_offset 36
 1759 07a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1760              	.LVL231:
 1761              	.L46:
 1762              	.LCFI10:
 1763              		.cfi_restore_state
 1764              	.LBB146:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 49


 1765              	.LBB145:
 319:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1766              		.loc 1 319 0
 1767 07a6 0D4C     		ldr	r4, .L77+16
 1768 07a8 B2EE040A 		vmov.f32	s0, #1.0e+1
 1769 07ac 2046     		mov	r0, r4
 1770              	.LVL232:
 1771 07ae FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1772              	.LVL233:
 320:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1773              		.loc 1 320 0
 1774 07b2 B2EE040A 		vmov.f32	s0, #1.0e+1
 1775 07b6 04F15800 		add	r0, r4, #88
 1776 07ba FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1777              	.LVL234:
 321:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1778              		.loc 1 321 0
 1779 07be 9FED0A0A 		vldr.32	s0, .L77+28
 1780 07c2 0A48     		ldr	r0, .L77+32
 1781 07c4 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1782              	.LVL235:
 1783              	.LBE145:
 1784              	.LBE146:
 324:Core/Src/robot/robot.cpp **** }
 1785              		.loc 1 324 0
 1786 07c8 E8E7     		b	.L33
 1787              	.L78:
 1788 07ca 00BF     		.align	2
 1789              	.L77:
 1790 07cc B4000000 		.word	.LC24
 1791 07d0 00000000 		.word	.LANCHOR10
 1792 07d4 00000000 		.word	.LANCHOR2
 1793 07d8 00000000 		.word	.LANCHOR3
 1794 07dc 00000000 		.word	leg
 1795 07e0 000C0240 		.word	1073875968
 1796 07e4 C0000000 		.word	.LC25
 1797 07e8 00000000 		.word	0
 1798 07ec 00000000 		.word	steering
 1799 07f0 00000240 		.word	1073872896
 1800              		.cfi_endproc
 1801              	.LFE497:
 1803              		.section	.text._Z4playv,"ax",%progbits
 1804              		.align	1
 1805              		.global	_Z4playv
 1806              		.syntax unified
 1807              		.thumb
 1808              		.thumb_func
 1809              		.fpu fpv4-sp-d16
 1811              	_Z4playv:
 1812              	.LFB498:
 327:Core/Src/robot/robot.cpp **** {
 1813              		.loc 1 327 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817 0000 08B5     		push	{r3, lr}
 1818              	.LCFI11:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 50


 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 3, -8
 1821              		.cfi_offset 14, -4
 328:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1822              		.loc 1 328 0
 1823 0002 0248     		ldr	r0, .L81
 1824 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1825              	.LVL236:
 330:Core/Src/robot/robot.cpp **** }
 1826              		.loc 1 330 0
 1827 0008 0120     		movs	r0, #1
 1828 000a 08BD     		pop	{r3, pc}
 1829              	.L82:
 1830              		.align	2
 1831              	.L81:
 1832 000c 00000000 		.word	.LANCHOR0
 1833              		.cfi_endproc
 1834              	.LFE498:
 1836              		.global	angles
 1837              		.global	steps
 1838              		.global	angle_offset
 1839              		.global	USE_IMU_FLAG
 1840              		.global	GEREGE_FLAG
 1841              		.global	ROBOT_START_FLAG
 1842              		.global	robo_state
 1843              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1846              	GEREGE_FLAG:
 1847 0000 00       		.space	1
 1848              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1849              		.set	.LANCHOR1,. + 0
 1852              	ROBOT_START_FLAG:
 1853 0000 00       		.space	1
 1854              		.section	.bss.USE_IMU_FLAG,"aw",%nobits
 1855              		.set	.LANCHOR5,. + 0
 1858              	USE_IMU_FLAG:
 1859 0000 00       		.space	1
 1860              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1861              		.align	2
 1862              		.set	.LANCHOR7,. + 0
 1865              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1866 0000 00000000 		.space	4
 1867              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
 1868              		.set	.LANCHOR9,. + 0
 1871              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1872 0000 00       		.space	1
 1873              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1874              		.set	.LANCHOR10,. + 0
 1877              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1878 0000 00       		.space	1
 1879              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1880              		.align	2
 1881              		.set	.LANCHOR8,. + 0
 1884              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1885 0000 00000000 		.space	4
 1886              		.section	.bss.robo_state,"aw",%nobits
 1887              		.set	.LANCHOR0,. + 0
 1890              	robo_state:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 51


 1891 0000 00       		.space	1
 1892              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1893              		.set	.LANCHOR6,. + 0
 1896              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1897 0000 01       		.byte	1
 1898              		.section	.data.angle_offset,"aw",%progbits
 1899              		.align	2
 1900              		.set	.LANCHOR4,. + 0
 1903              	angle_offset:
 1904 0000 000080BF 		.word	-1082130432
 1905              		.section	.data.angles,"aw",%progbits
 1906              		.align	2
 1907              		.set	.LANCHOR3,. + 0
 1910              	angles:
 1911 0000 00000000 		.word	0
 1912 0004 00003442 		.word	1110704128
 1913 0008 00003442 		.word	1110704128
 1914 000c 00008C42 		.word	1116471296
 1915 0010 00002041 		.word	1092616192
 1916 0014 00000000 		.word	0
 1917 0018 0000B4C2 		.word	-1028390912
 1918              		.section	.data.steps,"aw",%progbits
 1919              		.align	2
 1920              		.set	.LANCHOR2,. + 0
 1923              	steps:
 1924 0000 0000C040 		.word	1086324736
 1925 0004 00002041 		.word	1092616192
 1926 0008 00007041 		.word	1097859072
 1927 000c 00008841 		.word	1099431936
 1928 0010 0000A841 		.word	1101529088
 1929 0014 0000C841 		.word	1103626240
 1930 0018 00000042 		.word	1107296256
 1931              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
 1932              		.align	2
 1933              	.LC13:
 1934 0000 0A484F4D 		.ascii	"\012HOME\000"
 1934      4500
 1935 0006 0000     		.space	2
 1936              	.LC14:
 1937 0008 20206E6F 		.ascii	"  not set  \000"
 1937      74207365 
 1937      74202000 
 1938              	.LC15:
 1939 0014 0A0A7365 		.ascii	"\012\012set\012\000"
 1939      740A00
 1940 001b 00       		.space	1
 1941              	.LC16:
 1942 001c 20206C65 		.ascii	"  leg0_angle = %d\011leg1_angle = %d\011steering_an"
 1942      67305F61 
 1942      6E676C65 
 1942      203D2025 
 1942      64096C65 
 1943 0049 676C6520 		.ascii	"gle = %d\011robot_angle = %d\011\000"
 1943      3D202564 
 1943      09726F62 
 1943      6F745F61 
 1943      6E676C65 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 52


 1944              	.LC17:
 1945 0064 0A4D6172 		.ascii	"\012March\000"
 1945      636800
 1946 006b 00       		.space	1
 1947              	.LC18:
 1948 006c 0A547572 		.ascii	"\012Turn 45\000"
 1948      6E203435 
 1948      00
 1949 0075 000000   		.space	3
 1950              	.LC19:
 1951 0078 0A53616E 		.ascii	"\012Sand dune\000"
 1951      64206475 
 1951      6E6500
 1952 0083 00       		.space	1
 1953              	.LC20:
 1954 0084 0A537461 		.ascii	"\012State D\000"
 1954      74652044 
 1954      00
 1955 008d 000000   		.space	3
 1956              	.LC21:
 1957 0090 0A547572 		.ascii	"\012Turn 90\000"
 1957      6E203930 
 1957      00
 1958 0099 000000   		.space	3
 1959              	.LC22:
 1960 009c 0A547573 		.ascii	"\012Tussock\000"
 1960      736F636B 
 1960      00
 1961 00a5 000000   		.space	3
 1962              	.LC23:
 1963 00a8 0A426173 		.ascii	"\012Base camp\000"
 1963      65206361 
 1963      6D7000
 1964 00b3 00       		.space	1
 1965              	.LC24:
 1966 00b4 0A4D4F55 		.ascii	"\012MOUNTAIN\000"
 1966      4E544149 
 1966      4E00
 1967 00be 0000     		.space	2
 1968              	.LC25:
 1969 00c0 0A55554B 		.ascii	"\012UUKHAI\000"
 1969      48414900 
 1970              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1971              		.align	2
 1972              	.LC0:
 1973 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1973      6F6E6520 
 1973      4D415243 
 1973      4800
 1974 000e 0000     		.space	2
 1975              	.LC1:
 1976 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1976      6F6E6520 
 1976      343500
 1977 001b 00       		.space	1
 1978              	.LC2:
 1979 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 53


 1979      6F6E6520 
 1979      53414E44 
 1979      5F44554E 
 1979      4500
 1980 002e 0000     		.space	2
 1981              	.LC3:
 1982 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
 1982      6F6E6520 
 1982      4D4F554E 
 1982      5441494E 
 1982      00
 1983 0041 000000   		.space	3
 1984              	.LC4:
 1985 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
 1985      6F6E6520 
 1985      44656661 
 1985      756C7400 
 1986              	.LC5:
 1987 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1987      6F6E6520 
 1987      52454400 
 1988              	.LC6:
 1989 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1989      6F6E6520 
 1989      424C5545 
 1989      00
 1990 006d 000000   		.space	3
 1991              	.LC7:
 1992 0070 0A092061 		.ascii	"\012\011 angles= %d\000"
 1992      6E676C65 
 1992      733D2025 
 1992      6400
 1993 007e 0000     		.space	2
 1994              	.LC8:
 1995 0080 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1995      6F6E6520 
 1995      44656661 
 1995      756C745F 
 1995      52454400 
 1996              		.section	.rodata._Z4testv.str1.4,"aMS",%progbits,1
 1997              		.align	2
 1998              	.LC9:
 1999 0000 0A204652 		.ascii	"\012 FRONT\000"
 1999      4F4E5400 
 2000              	.LC10:
 2001 0008 0A204241 		.ascii	"\012 BACK\000"
 2001      434B00
 2002 000f 00       		.space	1
 2003              	.LC11:
 2004 0010 0A205550 		.ascii	"\012 UP\000"
 2004      00
 2005 0015 000000   		.space	3
 2006              	.LC12:
 2007 0018 096C6567 		.ascii	"\011leg0_angle = %d\011leg1_angle = %d\011steering_"
 2007      305F616E 
 2007      676C6520 
 2007      3D202564 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 54


 2007      096C6567 
 2008 0042 616E676C 		.ascii	"angle = %d\000"
 2008      65203D20 
 2008      256400
 2009              		.text
 2010              	.Letext0:
 2011              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2012              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2013              		.file 7 "Core/Inc/sys/FreeRTOSConfig.h"
 2014              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2015              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2016              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2017              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2018              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2019              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 2020              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2021              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2022              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2023              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2024              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2025              		.file 19 "Core/Inc/periphs/tim.h"
 2026              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2027              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2028              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2029              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2030              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2031              		.file 25 "Core/Inc/devs/motor.h"
 2032              		.file 26 "Core/Inc/devs/encoder.h"
 2033              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 2034              		.file 28 "Core/Inc/devs/limit_switch.h"
 2035              		.file 29 "Core/Inc/robot/robot.h"
 2036              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2037              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2038              		.file 32 "Core/Inc/robot/robot_functions.h"
 2039              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:381    .text._Z11zone_selectv:00000214 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:407    .text._Z4testv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:414    .text._Z4testv:00000000 _Z4testv
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:591    .text._Z4testv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:606    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:613    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:637    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:644    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:679    .text._Z11start_RobotP12Robot_States:00000018 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:690    .text._Z11start_RobotP12Robot_States:0000002e $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1161   .text._Z11start_RobotP12Robot_States:00000308 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1191   .text._Z11start_RobotP12Robot_States:00000374 $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1606   .text._Z11start_RobotP12Robot_States:00000678 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1628   .text._Z11start_RobotP12Robot_States:000006c0 $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1790   .text._Z11start_RobotP12Robot_States:000007cc $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1804   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1811   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1832   .text._Z4playv:0000000c $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1910   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1923   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1903   .data.angle_offset:00000000 angle_offset
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1858   .bss.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1846   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1852   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1890   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1847   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1853   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1859   .bss.USE_IMU_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1861   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1865   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1871   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1872   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1877   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1878   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1880   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1884   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1891   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1896   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1899   .data.angle_offset:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1906   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1919   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1932   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1971   .rodata._Z11zone_selectv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s:1997   .rodata._Z4testv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
_ZN3leg9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccXKfGgr.s 			page 56


_ZN8steering9set_angleEf
_ZN7encoder16get_actual_angleEv
_ZN7encoder9get_angleEv
steering
__aeabi_d2f
HAL_GPIO_WritePin
_Z11getup_n_runv
puts
HAL_GetTick
__cxa_guard_acquire
__cxa_guard_release
_Z2goif
HAL_GPIO_TogglePin
robot_angle
curr_angle
initial_angle
_Z23initialize_leg_positionv
_ZN8steering9set_omegaEf
