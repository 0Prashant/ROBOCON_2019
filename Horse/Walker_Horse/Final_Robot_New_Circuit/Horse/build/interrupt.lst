ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interrupt.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_d2iz
  20              		.global	__aeabi_i2d
  21              		.global	__aeabi_dmul
  22              		.global	__aeabi_dadd
  23              		.global	__aeabi_d2f
  24              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_GPIO_EXTI_Callback
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	HAL_GPIO_EXTI_Callback:
  33              	.LFB492:
  34              		.file 1 "Core/Src/devs/interrupt.cpp"
   1:Core/Src/devs/interrupt.cpp **** 
   2:Core/Src/devs/interrupt.cpp **** #include "robo_init.h"
   3:Core/Src/devs/interrupt.cpp **** 
   4:Core/Src/devs/interrupt.cpp **** extern leg leg[2];
   5:Core/Src/devs/interrupt.cpp **** extern steering steering;
   6:Core/Src/devs/interrupt.cpp **** 
   7:Core/Src/devs/interrupt.cpp **** extern bool ROBOT_START_FLAG;
   8:Core/Src/devs/interrupt.cpp **** extern bool STEERING_FLAG;
   9:Core/Src/devs/interrupt.cpp **** extern bool FRONT_PROXIMITY_FLAG;
  10:Core/Src/devs/interrupt.cpp **** extern bool BACK_PROXIMITY_FLAG;
  11:Core/Src/devs/interrupt.cpp **** extern bool GEREGE_FLAG;
  12:Core/Src/devs/interrupt.cpp **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  13:Core/Src/devs/interrupt.cpp **** {
  35              		.loc 1 13 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              	.LVL0:
  40 0000 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45              	.LBB33:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 2


  14:Core/Src/devs/interrupt.cpp ****         switch (GPIO_Pin) {
  46              		.loc 1 14 0
  47 0002 B0F5005F 		cmp	r0, #8192
  48 0006 00F0B080 		beq	.L3
  49 000a 46D9     		bls	.L22
  50 000c B0F5804F 		cmp	r0, #16384
  51 0010 5BD0     		beq	.L6
  52 0012 B0F5004F 		cmp	r0, #32768
  53 0016 48D1     		bne	.L1
  54              	.LVL1:
  55              	.LBB34:
  56              	.LBB35:
  57              	.LBB36:
  58              	.LBB37:
  59              	.LBB38:
  60              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 3


  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  61              		.loc 2 47 0
  62 0018 6F48     		ldr	r0, .L28+24
  63              	.LVL2:
  64 001a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
  65              	.LVL3:
  66              	.LBE38:
  67              	.LBE37:
  15:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
  16:Core/Src/devs/interrupt.cpp **** 			ROBOT_START_FLAG = true;
  17:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!start_pressed!!\n\n");
  18:Core/Src/devs/interrupt.cpp **** 		}break;
  19:Core/Src/devs/interrupt.cpp **** 
  20:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_15 : {
  21:Core/Src/devs/interrupt.cpp **** 			float leg0_reset_angle = 90*PI/180;
  22:Core/Src/devs/interrupt.cpp **** 			float tolerence = 40*PI/180;
  23:Core/Src/devs/interrupt.cpp **** 			static int count1 = 0;
  24:Core/Src/devs/interrupt.cpp **** 			if(((leg[0].get_angle()>(leg0_reset_angle-tolerence)) && (leg[0].get_angle()<(leg0_reset_angle+t
  68              		.loc 1 24 0
  69 001e DFED6F7A 		vldr.32	s15, .L28+28
  70 0022 B4EEE70A 		vcmpe.f32	s0, s15
  71 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  72 002a 3FDC     		bgt	.L23
  73              	.L8:
  74              		.loc 1 24 0 is_stmt 0 discriminator 4
  75 002c 6C4B     		ldr	r3, .L28+32
  76 002e 1B68     		ldr	r3, [r3]
  77 0030 002B     		cmp	r3, #0
  78 0032 46DD     		ble	.L11
  79              	.L10:
  80              	.LBB39:
  25:Core/Src/devs/interrupt.cpp ****                         	leg[0].reset_angle(leg0_reset_angle);
  81              		.loc 1 25 0 is_stmt 1 discriminator 5
  82 0034 6B4C     		ldr	r4, .L28+36
  83 0036 9FED6C0A 		vldr.32	s0, .L28+40
  84 003a 2046     		mov	r0, r4
  85 003c FFF7FEFF 		bl	_ZN3leg11reset_angleEf
  86              	.LVL4:
  87              	.LBB40:
  88              	.LBB41:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
  89              		.loc 2 48 0 discriminator 5
  90 0040 3C34     		adds	r4, r4, #60
  91 0042 2046     		mov	r0, r4
  92 0044 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
  93              	.LVL5:
  94              	.LBE41:
  95              	.LBE40:
  26:Core/Src/devs/interrupt.cpp **** 				int temp = round(leg[0].get_actual_angle()/ (360*PI/180));
  96              		.loc 1 26 0 discriminator 5
  97 0048 10EE100A 		vmov	r0, s0
  98 004c FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 4


  99              	.LVL6:
 100 0050 5BA3     		adr	r3, .L28
 101 0052 D3E90023 		ldrd	r2, [r3]
 102 0056 FFF7FEFF 		bl	__aeabi_ddiv
 103              	.LVL7:
 104 005a 41EC100B 		vmov	d0, r0, r1
 105 005e FFF7FEFF 		bl	round
 106              	.LVL8:
 107 0062 51EC100B 		vmov	r0, r1, d0
 108 0066 FFF7FEFF 		bl	__aeabi_d2iz
 109              	.LVL9:
  27:Core/Src/devs/interrupt.cpp **** 				leg[0].reset_actual_angle((int)(temp)*2*PI + leg0_reset_angle);
 110              		.loc 1 27 0 discriminator 5
 111 006a 4000     		lsls	r0, r0, #1
 112              	.LVL10:
 113 006c FFF7FEFF 		bl	__aeabi_i2d
 114              	.LVL11:
 115 0070 55A3     		adr	r3, .L28+8
 116 0072 D3E90023 		ldrd	r2, [r3]
 117 0076 FFF7FEFF 		bl	__aeabi_dmul
 118              	.LVL12:
 119 007a 55A3     		adr	r3, .L28+16
 120 007c D3E90023 		ldrd	r2, [r3]
 121 0080 FFF7FEFF 		bl	__aeabi_dadd
 122              	.LVL13:
 123 0084 FFF7FEFF 		bl	__aeabi_d2f
 124              	.LVL14:
 125              	.LBB42:
 126              	.LBB43:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 127              		.loc 2 40 0 discriminator 5
 128 0088 00EE100A 		vmov	s0, r0
 129 008c 2046     		mov	r0, r4
 130              	.LVL15:
 131 008e FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 132              	.LVL16:
 133              	.LBE43:
 134              	.LBE42:
  28:Core/Src/devs/interrupt.cpp **** 				count1 = 0;
 135              		.loc 1 28 0 discriminator 5
 136 0092 534B     		ldr	r3, .L28+32
 137 0094 0022     		movs	r2, #0
 138 0096 1A60     		str	r2, [r3]
 139              	.LBE39:
 140 0098 07E0     		b	.L1
 141              	.LVL17:
 142              	.L22:
 143              	.LBE36:
 144              	.LBE35:
 145              	.LBE34:
  14:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
 146              		.loc 1 14 0
 147 009a 0128     		cmp	r0, #1
 148 009c 05D1     		bne	.L1
 149              	.LBB67:
  16:Core/Src/devs/interrupt.cpp **** 			printf("\n\n\t\t\t !!start_pressed!!\n\n");
 150              		.loc 1 16 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 5


 151 009e 534B     		ldr	r3, .L28+44
 152 00a0 0122     		movs	r2, #1
 153 00a2 1A70     		strb	r2, [r3]
  17:Core/Src/devs/interrupt.cpp **** 		}break;
 154              		.loc 1 17 0
 155 00a4 5248     		ldr	r0, .L28+48
 156              	.LVL18:
 157 00a6 FFF7FEFF 		bl	puts
 158              	.LVL19:
 159              	.L1:
 160              	.LBE67:
 161              	.LBE33:
  29:Core/Src/devs/interrupt.cpp **** 			}
  30:Core/Src/devs/interrupt.cpp **** 			else{
  31:Core/Src/devs/interrupt.cpp **** 				count1++;
  32:Core/Src/devs/interrupt.cpp **** 			}
  33:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tRobot interrupt0\t %d \t %d\n", leg[0].steps, temp);
  34:Core/Src/devs/interrupt.cpp ****                 } break;
  35:Core/Src/devs/interrupt.cpp **** 
  36:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_14: {
  37:Core/Src/devs/interrupt.cpp **** 			float leg1_reset_angle = 90*PI/180;
  38:Core/Src/devs/interrupt.cpp **** 			float tolerence = 40*PI/180;
  39:Core/Src/devs/interrupt.cpp **** 			static int count2 = 0;
  40:Core/Src/devs/interrupt.cpp **** 			if(((leg[1].get_angle()>(leg1_reset_angle-tolerence)) && (leg[1].get_angle()<(leg1_reset_angle+t
  41:Core/Src/devs/interrupt.cpp ****                         	leg[1].reset_angle(leg1_reset_angle);
  42:Core/Src/devs/interrupt.cpp **** 				int temp = round(leg[1].get_actual_angle() / (360*PI/180));
  43:Core/Src/devs/interrupt.cpp **** 				leg[1].reset_actual_angle((int)(temp)*2*PI + leg1_reset_angle);
  44:Core/Src/devs/interrupt.cpp **** 				count2 = 0;
  45:Core/Src/devs/interrupt.cpp **** 			}
  46:Core/Src/devs/interrupt.cpp **** 			else{
  47:Core/Src/devs/interrupt.cpp **** 				count2++;
  48:Core/Src/devs/interrupt.cpp **** 			}
  49:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tRobot interrupt1\t %d\n", leg[1].steps);
  50:Core/Src/devs/interrupt.cpp ****                 } break;
  51:Core/Src/devs/interrupt.cpp **** 
  52:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_13: {
  53:Core/Src/devs/interrupt.cpp **** 			STEERING_FLAG = true;
  54:Core/Src/devs/interrupt.cpp **** 			float tolerence = 3.5*PI/180;
  55:Core/Src/devs/interrupt.cpp **** 			static int count3 = 0;
  56:Core/Src/devs/interrupt.cpp **** 			if(((steering.get_angle()>(-tolerence)) && (leg[1].get_angle()<(tolerence))) || (count3>0)){
  57:Core/Src/devs/interrupt.cpp **** 				steering.reset_angle(0*PI/180);
  58:Core/Src/devs/interrupt.cpp **** 				count3 = 0;
  59:Core/Src/devs/interrupt.cpp **** 			}
  60:Core/Src/devs/interrupt.cpp **** 			else{
  61:Core/Src/devs/interrupt.cpp **** 				count3++;
  62:Core/Src/devs/interrupt.cpp **** 			}
  63:Core/Src/devs/interrupt.cpp **** 			//  printf("\n\n\t\t\tsteering interrupt \t\n");
  64:Core/Src/devs/interrupt.cpp ****                 } break;
  65:Core/Src/devs/interrupt.cpp **** 	
  66:Core/Src/devs/interrupt.cpp ****         }
  67:Core/Src/devs/interrupt.cpp **** }...
 162              		.loc 1 67 0
 163 00aa 10BD     		pop	{r4, pc}
 164              	.LVL20:
 165              	.L23:
 166              	.LBB70:
 167              	.LBB68:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 6


 168              	.LBB47:
 169              	.LBB46:
 170              	.LBB44:
 171              	.LBB45:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 172              		.loc 2 47 0
 173 00ac 4A48     		ldr	r0, .L28+24
 174 00ae FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 175              	.LVL21:
 176              	.LBE45:
 177              	.LBE44:
  24:Core/Src/devs/interrupt.cpp **** 			if(((leg[0].get_angle()>(leg0_reset_angle-tolerence)) && (leg[0].get_angle()<(leg0_reset_angle+t
 178              		.loc 1 24 0
 179 00b2 DFED507A 		vldr.32	s15, .L28+52
 180 00b6 B4EEE70A 		vcmpe.f32	s0, s15
 181 00ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 182 00be B5D5     		bpl	.L8
 183 00c0 B8E7     		b	.L10
 184              	.L11:
  31:Core/Src/devs/interrupt.cpp **** 				count1++;
 185              		.loc 1 31 0
 186 00c2 0133     		adds	r3, r3, #1
 187 00c4 464A     		ldr	r2, .L28+32
 188 00c6 1360     		str	r3, [r2]
 189 00c8 EFE7     		b	.L1
 190              	.LVL22:
 191              	.L6:
 192              	.LBE46:
 193              	.LBE47:
 194              	.LBB48:
 195              	.LBB49:
 196              	.LBB50:
 197              	.LBB51:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 198              		.loc 2 47 0
 199 00ca 4B48     		ldr	r0, .L28+56
 200              	.LVL23:
 201 00cc FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 202              	.LVL24:
 203              	.LBE51:
 204              	.LBE50:
  40:Core/Src/devs/interrupt.cpp **** 			if(((leg[1].get_angle()>(leg1_reset_angle-tolerence)) && (leg[1].get_angle()<(leg1_reset_angle+t
 205              		.loc 1 40 0
 206 00d0 DFED427A 		vldr.32	s15, .L28+28
 207 00d4 B4EEE70A 		vcmpe.f32	s0, s15
 208 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 209 00dc 36DC     		bgt	.L24
 210              	.L12:
  40:Core/Src/devs/interrupt.cpp **** 			if(((leg[1].get_angle()>(leg1_reset_angle-tolerence)) && (leg[1].get_angle()<(leg1_reset_angle+t
 211              		.loc 1 40 0 is_stmt 0 discriminator 4
 212 00de 474B     		ldr	r3, .L28+60
 213 00e0 1B68     		ldr	r3, [r3]
 214 00e2 002B     		cmp	r3, #0
 215 00e4 3DDD     		ble	.L25
 216              	.L14:
 217              	.LBB52:
  41:Core/Src/devs/interrupt.cpp ****                         	leg[1].reset_angle(leg1_reset_angle);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 7


 218              		.loc 1 41 0 is_stmt 1 discriminator 5
 219 00e6 464C     		ldr	r4, .L28+64
 220 00e8 9FED3F0A 		vldr.32	s0, .L28+40
 221 00ec 2046     		mov	r0, r4
 222 00ee FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 223              	.LVL25:
 224              	.LBB53:
 225              	.LBB54:
 226              		.loc 2 48 0 discriminator 5
 227 00f2 3C34     		adds	r4, r4, #60
 228              	.LVL26:
 229 00f4 2046     		mov	r0, r4
 230 00f6 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 231              	.LVL27:
 232              	.LBE54:
 233              	.LBE53:
  42:Core/Src/devs/interrupt.cpp **** 				int temp = round(leg[1].get_actual_angle() / (360*PI/180));
 234              		.loc 1 42 0 discriminator 5
 235 00fa 10EE100A 		vmov	r0, s0
 236 00fe FFF7FEFF 		bl	__aeabi_f2d
 237              	.LVL28:
 238 0102 2FA3     		adr	r3, .L28
 239 0104 D3E90023 		ldrd	r2, [r3]
 240 0108 FFF7FEFF 		bl	__aeabi_ddiv
 241              	.LVL29:
 242 010c 41EC100B 		vmov	d0, r0, r1
 243 0110 FFF7FEFF 		bl	round
 244              	.LVL30:
 245 0114 51EC100B 		vmov	r0, r1, d0
 246 0118 FFF7FEFF 		bl	__aeabi_d2iz
 247              	.LVL31:
  43:Core/Src/devs/interrupt.cpp **** 				leg[1].reset_actual_angle((int)(temp)*2*PI + leg1_reset_angle);
 248              		.loc 1 43 0 discriminator 5
 249 011c 4000     		lsls	r0, r0, #1
 250              	.LVL32:
 251 011e FFF7FEFF 		bl	__aeabi_i2d
 252              	.LVL33:
 253 0122 29A3     		adr	r3, .L28+8
 254 0124 D3E90023 		ldrd	r2, [r3]
 255 0128 FFF7FEFF 		bl	__aeabi_dmul
 256              	.LVL34:
 257 012c 28A3     		adr	r3, .L28+16
 258 012e D3E90023 		ldrd	r2, [r3]
 259 0132 FFF7FEFF 		bl	__aeabi_dadd
 260              	.LVL35:
 261 0136 FFF7FEFF 		bl	__aeabi_d2f
 262              	.LVL36:
 263              	.LBB55:
 264              	.LBB56:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 265              		.loc 2 40 0 discriminator 5
 266 013a 00EE100A 		vmov	s0, r0
 267 013e 2046     		mov	r0, r4
 268              	.LVL37:
 269 0140 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 270              	.LVL38:
 271              	.LBE56:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 8


 272              	.LBE55:
  44:Core/Src/devs/interrupt.cpp **** 				count2 = 0;
 273              		.loc 1 44 0 discriminator 5
 274 0144 2D4B     		ldr	r3, .L28+60
 275 0146 0022     		movs	r2, #0
 276 0148 1A60     		str	r2, [r3]
 277              	.LBE52:
 278 014a AEE7     		b	.L1
 279              	.L24:
 280              	.LVL39:
 281              	.LBB57:
 282              	.LBB58:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 283              		.loc 2 47 0
 284 014c 2A48     		ldr	r0, .L28+56
 285 014e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 286              	.LVL40:
 287              	.LBE58:
 288              	.LBE57:
  40:Core/Src/devs/interrupt.cpp **** 			if(((leg[1].get_angle()>(leg1_reset_angle-tolerence)) && (leg[1].get_angle()<(leg1_reset_angle+t
 289              		.loc 1 40 0
 290 0152 DFED287A 		vldr.32	s15, .L28+52
 291 0156 B4EEE70A 		vcmpe.f32	s0, s15
 292 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 293 015e BED5     		bpl	.L12
 294 0160 C1E7     		b	.L14
 295              	.L25:
  47:Core/Src/devs/interrupt.cpp **** 				count2++;
 296              		.loc 1 47 0
 297 0162 0133     		adds	r3, r3, #1
 298 0164 254A     		ldr	r2, .L28+60
 299 0166 1360     		str	r3, [r2]
 300 0168 9FE7     		b	.L1
 301              	.LVL41:
 302              	.L3:
 303              	.LBE49:
 304              	.LBE48:
 305              	.LBB59:
  53:Core/Src/devs/interrupt.cpp **** 			STEERING_FLAG = true;
 306              		.loc 1 53 0
 307 016a 264B     		ldr	r3, .L28+68
 308 016c 0122     		movs	r2, #1
 309 016e 1A70     		strb	r2, [r3]
 310              	.LVL42:
 311              	.LBB60:
 312              	.LBB61:
 313              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 9


  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 10


  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 314              		.loc 3 112 0
 315 0170 2548     		ldr	r0, .L28+72
 316              	.LVL43:
 317 0172 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 318              	.LVL44:
 319              	.LBE61:
 320              	.LBE60:
  56:Core/Src/devs/interrupt.cpp **** 			if(((steering.get_angle()>(-tolerence)) && (leg[1].get_angle()<(tolerence))) || (count3>0)){
 321              		.loc 1 56 0
 322 0176 DFED257A 		vldr.32	s15, .L28+76
 323 017a B4EEE70A 		vcmpe.f32	s0, s15
 324 017e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 11


 325 0182 0CDC     		bgt	.L26
 326              	.L15:
  56:Core/Src/devs/interrupt.cpp **** 			if(((steering.get_angle()>(-tolerence)) && (leg[1].get_angle()<(tolerence))) || (count3>0)){
 327              		.loc 1 56 0 is_stmt 0 discriminator 4
 328 0184 224B     		ldr	r3, .L28+80
 329 0186 1B68     		ldr	r3, [r3]
 330 0188 002B     		cmp	r3, #0
 331 018a 13DD     		ble	.L27
 332              	.L17:
 333              	.LVL45:
 334              	.LBB62:
 335              	.LBB63:
  94:Core/Inc/devs/steering.h **** 
 336              		.loc 3 94 0 is_stmt 1 discriminator 5
 337 018c 9FED210A 		vldr.32	s0, .L28+84
 338 0190 1D48     		ldr	r0, .L28+72
 339 0192 FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 340              	.LVL46:
 341              	.LBE63:
 342              	.LBE62:
  58:Core/Src/devs/interrupt.cpp **** 				count3 = 0;
 343              		.loc 1 58 0 discriminator 5
 344 0196 1E4B     		ldr	r3, .L28+80
 345 0198 0022     		movs	r2, #0
 346 019a 1A60     		str	r2, [r3]
 347              	.LBE59:
 348              	.LBE68:
 349              	.LBE70:
 350              		.loc 1 67 0 discriminator 5
 351 019c 85E7     		b	.L1
 352              	.L26:
 353              	.LVL47:
 354              	.LBB71:
 355              	.LBB69:
 356              	.LBB66:
 357              	.LBB64:
 358              	.LBB65:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 359              		.loc 2 47 0
 360 019e 1648     		ldr	r0, .L28+56
 361 01a0 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 362              	.LVL48:
 363              	.LBE65:
 364              	.LBE64:
  56:Core/Src/devs/interrupt.cpp **** 			if(((steering.get_angle()>(-tolerence)) && (leg[1].get_angle()<(tolerence))) || (count3>0)){
 365              		.loc 1 56 0
 366 01a4 DFED1C7A 		vldr.32	s15, .L28+88
 367 01a8 B4EEE70A 		vcmpe.f32	s0, s15
 368 01ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 369 01b0 ECD4     		bmi	.L17
 370 01b2 E7E7     		b	.L15
 371              	.L27:
  61:Core/Src/devs/interrupt.cpp **** 				count3++;
 372              		.loc 1 61 0
 373 01b4 0133     		adds	r3, r3, #1
 374 01b6 164A     		ldr	r2, .L28+80
 375 01b8 1360     		str	r3, [r2]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 12


 376 01ba 76E7     		b	.L1
 377              	.L29:
 378 01bc AFF30080 		.align	3
 379              	.L28:
 380 01c0 182D4454 		.word	1413754136
 381 01c4 FB211940 		.word	1075388923
 382 01c8 182D4454 		.word	1413754136
 383 01cc FB210940 		.word	1074340347
 384 01d0 00000060 		.word	1610612736
 385 01d4 FB21F93F 		.word	1073291771
 386 01d8 3C000000 		.word	leg+60
 387 01dc F4665F3F 		.word	1063216884
 388 01e0 00000000 		.word	.LANCHOR0
 389 01e4 00000000 		.word	leg
 390 01e8 DB0FC93F 		.word	1070141403
 391 01ec 00000000 		.word	ROBOT_START_FLAG
 392 01f0 00000000 		.word	.LC0
 393 01f4 1E361140 		.word	1074869790
 394 01f8 94000000 		.word	leg+148
 395 01fc 00000000 		.word	.LANCHOR1
 396 0200 58000000 		.word	leg+88
 397 0204 00000000 		.word	STEERING_FLAG
 398 0208 0C000000 		.word	steering+12
 399 020c DD357ABD 		.word	-1116064291
 400 0210 00000000 		.word	.LANCHOR2
 401 0214 00000000 		.word	0
 402 0218 DD357A3D 		.word	1031419357
 403              	.LBE66:
 404              	.LBE69:
 405              	.LBE71:
 406              		.cfi_endproc
 407              	.LFE492:
 409              		.section	.bss._ZZ22HAL_GPIO_EXTI_CallbackE6count1,"aw",%nobits
 410              		.align	2
 411              		.set	.LANCHOR0,. + 0
 414              	_ZZ22HAL_GPIO_EXTI_CallbackE6count1:
 415 0000 00000000 		.space	4
 416              		.section	.bss._ZZ22HAL_GPIO_EXTI_CallbackE6count2,"aw",%nobits
 417              		.align	2
 418              		.set	.LANCHOR1,. + 0
 421              	_ZZ22HAL_GPIO_EXTI_CallbackE6count2:
 422 0000 00000000 		.space	4
 423              		.section	.bss._ZZ22HAL_GPIO_EXTI_CallbackE6count3,"aw",%nobits
 424              		.align	2
 425              		.set	.LANCHOR2,. + 0
 428              	_ZZ22HAL_GPIO_EXTI_CallbackE6count3:
 429 0000 00000000 		.space	4
 430              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 431              		.align	2
 432              	.LC0:
 433 0000 0A0A0909 		.ascii	"\012\012\011\011\011 !!start_pressed!!\012\000"
 433      09202121 
 433      73746172 
 433      745F7072 
 433      65737365 
 434              		.text
 435              	.Letext0:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 13


 436              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 437              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 438              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 439              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 440              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 441              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 442              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 443              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 444              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 445              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 446              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 447              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 448              		.file 16 "Core/Inc/periphs/tim.h"
 449              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 450              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 451              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 452              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 453              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 454              		.file 22 "Core/Inc/devs/motor.h"
 455              		.file 23 "Core/Inc/devs/encoder.h"
 456              		.file 24 "Core/Inc/utils/pid_algorithms.h"
 457              		.file 25 "Core/Inc/devs/limit_switch.h"
 458              		.file 26 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.cpp
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:32     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:380    .text.HAL_GPIO_EXTI_Callback:000001c0 $d
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:410    .bss._ZZ22HAL_GPIO_EXTI_CallbackE6count1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:414    .bss._ZZ22HAL_GPIO_EXTI_CallbackE6count1:00000000 _ZZ22HAL_GPIO_EXTI_CallbackE6count1
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:417    .bss._ZZ22HAL_GPIO_EXTI_CallbackE6count2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:421    .bss._ZZ22HAL_GPIO_EXTI_CallbackE6count2:00000000 _ZZ22HAL_GPIO_EXTI_CallbackE6count2
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:424    .bss._ZZ22HAL_GPIO_EXTI_CallbackE6count3:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:428    .bss._ZZ22HAL_GPIO_EXTI_CallbackE6count3:00000000 _ZZ22HAL_GPIO_EXTI_CallbackE6count3
C:\Users\Prashant\AppData\Local\Temp\cc4CIp6w.s:431    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
_ZN7encoder9get_angleEv
_ZN3leg11reset_angleEf
_ZN7encoder16get_actual_angleEv
round
_ZN7encoder18reset_actual_angleEf
puts
_ZN7encoder11reset_angleEf
leg
ROBOT_START_FLAG
STEERING_FLAG
steering
