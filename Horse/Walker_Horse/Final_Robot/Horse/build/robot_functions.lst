ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot_functions.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB509:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE509:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB515:
  50              		.file 2 "Core/Src/robot/robot_functions.cpp"
   1:Core/Src/robot/robot_functions.cpp **** #include "robot_functions.h"
   2:Core/Src/robot/robot_functions.cpp **** 
   3:Core/Src/robot/robot_functions.cpp **** extern leg leg[2];
   4:Core/Src/robot/robot_functions.cpp **** extern steering steering;
   5:Core/Src/robot/robot_functions.cpp **** extern bool USE_IMU_FLAG;
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
   8:Core/Src/robot/robot_functions.cpp **** 
   9:Core/Src/robot/robot_functions.cpp **** static const float robot_speed = 6;      //17 is the maximum with safe zone
  10:Core/Src/robot/robot_functions.cpp **** static const float steering_speed = 0.8; // 0.875 is the 100%
  11:Core/Src/robot/robot_functions.cpp **** static const float steering_angle_limit = 8.5 * PI / 180;
  12:Core/Src/robot/robot_functions.cpp **** 
  13:Core/Src/robot/robot_functions.cpp **** extern int steps[7];
  14:Core/Src/robot/robot_functions.cpp **** extern float angles[7];
  15:Core/Src/robot/robot_functions.cpp **** float summation_angle = 0;
  16:Core/Src/robot/robot_functions.cpp **** uint32_t start_time;
  17:Core/Src/robot/robot_functions.cpp **** 
  18:Core/Src/robot/robot_functions.cpp **** bool STEERING_FLAG = false;
  19:Core/Src/robot/robot_functions.cpp **** 
  20:Core/Src/robot/robot_functions.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  21:Core/Src/robot/robot_functions.cpp **** float tolerance = 3 * PI / 180;
  22:Core/Src/robot/robot_functions.cpp **** 
  23:Core/Src/robot/robot_functions.cpp **** /*
  24:Core/Src/robot/robot_functions.cpp ****  * \brief This function makes the robot to reach the provided steps and angle.
  25:Core/Src/robot/robot_functions.cpp ****  * \brief this function needs to be called every 10 ms unti it reaches the desired position.
  26:Core/Src/robot/robot_functions.cpp ****  * \params: number of steps and angle in degree the robot has to reach.
  27:Core/Src/robot/robot_functions.cpp ****  * \returns true if robot reaches to the provided steps and angle.
  28:Core/Src/robot/robot_functions.cpp ****  * The angles that are caalibrated in degrees needs to be converted to radian.
  29:Core/Src/robot/robot_functions.cpp ****  * The function move_leg() is called at the beginning which moves the leg upto the desired point.
  30:Core/Src/robot/robot_functions.cpp ****  * There are two parameters inside this function move_leg(), the steps parameter is used whereas th
  31:Core/Src/robot/robot_functions.cpp ****  * The condition is if statement is to ensure that the robot is not in sand dune and it has not rea
  32:Core/Src/robot/robot_functions.cpp ****  * Whenever the robot reaches the sand dune the number of steps is declared to 100, so the step != 
  33:Core/Src/robot/robot_functions.cpp ****  * The function calculate_robot_angle() calculates its relative position from the initial state and
  34:Core/Src/robot/robot_functions.cpp ****  * This function operates until the desired steps and desired angles is reached. This is ensured by
  35:Core/Src/robot/robot_functions.cpp ****  * After the desired step and angle is reached, the function returns True.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 3


  36:Core/Src/robot/robot_functions.cpp **** */
  37:Core/Src/robot/robot_functions.cpp **** bool go(int step, float angle)
  38:Core/Src/robot/robot_functions.cpp **** {
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
  42:Core/Src/robot/robot_functions.cpp **** 	{
  43:Core/Src/robot/robot_functions.cpp **** 		
  44:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
  45:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
  46:Core/Src/robot/robot_functions.cpp **** 	}
  47:Core/Src/robot/robot_functions.cpp **** 	else
  48:Core/Src/robot/robot_functions.cpp **** 	{
  49:Core/Src/robot/robot_functions.cpp **** 		if(HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin)==GPIO_PIN_RESET){
  50:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = true;
  51:Core/Src/robot/robot_functions.cpp **** 		}
  52:Core/Src/robot/robot_functions.cpp **** 		else{
  53:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = false;
  54:Core/Src/robot/robot_functions.cpp **** 		}
  55:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
  56:Core/Src/robot/robot_functions.cpp **** 	}
  57:Core/Src/robot/robot_functions.cpp **** 	// printf(" steps = %d\t robot_angle = %d\t curr_angle = %d\t", (int)(leg[0].get_steps()), (int)(r
  58:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d", (int)(leg[0].get_st
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
  60:Core/Src/robot/robot_functions.cpp **** 
  61:Core/Src/robot/robot_functions.cpp **** 	// if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
  62:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
  63:Core/Src/robot/robot_functions.cpp **** 	{
  64:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
  65:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
  66:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
  67:Core/Src/robot/robot_functions.cpp **** 		return true;
  68:Core/Src/robot/robot_functions.cpp **** 	}
  69:Core/Src/robot/robot_functions.cpp **** 	else
  70:Core/Src/robot/robot_functions.cpp **** 	{
  71:Core/Src/robot/robot_functions.cpp **** 		return false;
  72:Core/Src/robot/robot_functions.cpp **** 	}
  73:Core/Src/robot/robot_functions.cpp **** }
  74:Core/Src/robot/robot_functions.cpp **** /*
  75:Core/Src/robot/robot_functions.cpp ****  *The function move_leg() is the basic function to give speed to the motor.
  76:Core/Src/robot/robot_functions.cpp ****  *\return params: void
  77:Core/Src/robot/robot_functions.cpp ****  *\input parameter: steps, angle
  78:Core/Src/robot/robot_functions.cpp ****  *This function takes two input parameters: step and angle. Although the parameter angle is not use
  79:Core/Src/robot/robot_functions.cpp ****  *The variable leg_speed stores the value of speed. When the robot is in sand_dune region, the spee
  80:Core/Src/robot/robot_functions.cpp ****  *The variable del_speed stores the value of difference in speed in case where the legs are not in 
  81:Core/Src/robot/robot_functions.cpp ****  *If the legs are not in 180 degrees phase difference, some calculations need to be made in order t
  82:Core/Src/robot/robot_functions.cpp ****  *This is done by evaluating the angles every time. Whenever the returned angle is not in the desir
  83:Core/Src/robot/robot_functions.cpp ****  *difference is the two leg angles multiplied by leg_speed which is again multiplied by the factor 
  84:Core/Src/robot/robot_functions.cpp ****  *Following the above reference, the leg_speed is calculated in closed loop basis.
  85:Core/Src/robot/robot_functions.cpp **** */
  86:Core/Src/robot/robot_functions.cpp **** void move_leg(int step, float angle)
  87:Core/Src/robot/robot_functions.cpp **** {
  88:Core/Src/robot/robot_functions.cpp **** 	float del_speed = 0;
  89:Core/Src/robot/robot_functions.cpp **** 	float leg_speed = robot_speed;
  90:Core/Src/robot/robot_functions.cpp **** 
  91:Core/Src/robot/robot_functions.cpp **** 	//Setting the slow speed in sand dune and tussok
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 30)) ? robot_speed / 1.3	 : robot_speed;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 4


  93:Core/Src/robot/robot_functions.cpp **** 
  94:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
  95:Core/Src/robot/robot_functions.cpp **** 	del_speed = 3 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
  96:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
  97:Core/Src/robot/robot_functions.cpp **** 	{
  98:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
  99:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 100:Core/Src/robot/robot_functions.cpp **** 	}
 101:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 102:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 103:Core/Src/robot/robot_functions.cpp **** }
 104:Core/Src/robot/robot_functions.cpp **** 
 105:Core/Src/robot/robot_functions.cpp **** /*
 106:Core/Src/robot/robot_functions.cpp ****  *The function move_steering() is concerned with moving the steering to certain angle with certain 
 107:Core/Src/robot/robot_functions.cpp ****  *Return patameter: void
 108:Core/Src/robot/robot_functions.cpp ****  *Input parameters: step, angle
 109:Core/Src/robot/robot_functions.cpp ****  *During initialization, the summation_angle is set to 0. After the robot starts to move, there is 
 110:Core/Src/robot/robot_functions.cpp ****  * This error of course needs to be minimized. This minimization is done by  summing all the drifts
 111:Core/Src/robot/robot_functions.cpp ****  * that it gives to the robot. Whenever the steering sets the angle for robot, this error is also a
 112:Core/Src/robot/robot_functions.cpp ****  * The robot changes the angle whenever the outside leg is raised. For the robot and leg to be in t
 113:Core/Src/robot/robot_functions.cpp ****  * the outside leg is in fallen state.
 114:Core/Src/robot/robot_functions.cpp **** */
 115:Core/Src/robot/robot_functions.cpp **** void move_steering(int step, float angle)
 116:Core/Src/robot/robot_functions.cpp **** {
 117:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 118:Core/Src/robot/robot_functions.cpp **** 	{
 119:Core/Src/robot/robot_functions.cpp **** 		summation_angle += 1.3*robot_angle;
 120:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 121:Core/Src/robot/robot_functions.cpp **** 		angle /= 300;
 122:Core/Src/robot/robot_functions.cpp **** 	}
 123:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 124:Core/Src/robot/robot_functions.cpp **** 	{
 125:Core/Src/robot/robot_functions.cpp **** 		// printf("  raised  ");
 126:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 127:Core/Src/robot/robot_functions.cpp **** 	}
 128:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 129:Core/Src/robot/robot_functions.cpp **** 	{
 130:Core/Src/robot/robot_functions.cpp **** 		// printf("  fallen  ");
 131:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 132:Core/Src/robot/robot_functions.cpp **** 	}
 133:Core/Src/robot/robot_functions.cpp **** 	else
 134:Core/Src/robot/robot_functions.cpp **** 	{
 135:Core/Src/robot/robot_functions.cpp **** 		// printf("  nothing  ");
 136:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 137:Core/Src/robot/robot_functions.cpp **** 	}
 138:Core/Src/robot/robot_functions.cpp **** }
 139:Core/Src/robot/robot_functions.cpp **** /*
 140:Core/Src/robot/robot_functions.cpp ****  * The function set_angle() is concerned with setting the angle for steering.
 141:Core/Src/robot/robot_functions.cpp ****  * Return params : void
 142:Core/Src/robot/robot_functions.cpp ****  * Input patams : angle
 143:Core/Src/robot/robot_functions.cpp ****  * The variable del_angle stores the differnece in given input angle and the current angle returned
 144:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns positive value, it depicts that the robot has already reached the angl
 145:Core/Src/robot/robot_functions.cpp ****  * TO correct this to the desired angle the angle needs to be set.
 146:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns a negative value, it depicts that the robot has not reached the desire
 147:Core/Src/robot/robot_functions.cpp **** */
 148:Core/Src/robot/robot_functions.cpp **** void set_angle(float angle)
 149:Core/Src/robot/robot_functions.cpp **** {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 5


 150:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 151:Core/Src/robot/robot_functions.cpp **** 	// printf("\tdel_angle = %d\t", (int)(del_angle));
 152:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 153:Core/Src/robot/robot_functions.cpp **** 	{
 154:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 155:Core/Src/robot/robot_functions.cpp **** 	}
 156:Core/Src/robot/robot_functions.cpp **** 	else
 157:Core/Src/robot/robot_functions.cpp **** 	{
 158:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 159:Core/Src/robot/robot_functions.cpp **** 	}
 160:Core/Src/robot/robot_functions.cpp **** 	//*/
 161:Core/Src/robot/robot_functions.cpp **** }
 162:Core/Src/robot/robot_functions.cpp **** /*
 163:Core/Src/robot/robot_functions.cpp ****  * This function correct_steering_angle() is called whenever the outside leg is fallen and the stee
 164:Core/Src/robot/robot_functions.cpp ****  * return param: void
 165:Core/Src/robot/robot_functions.cpp ****  * input params: angle
 166:Core/Src/robot/robot_functions.cpp ****  * same as set_angle function. the difference is this function is called whenever the leg is not ra
 167:Core/Src/robot/robot_functions.cpp ****  * the leg is raised.
 168:Core/Src/robot/robot_functions.cpp **** */
 169:Core/Src/robot/robot_functions.cpp **** void correct_steering_angle(float angle)
 170:Core/Src/robot/robot_functions.cpp **** {
 171:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 172:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 173:Core/Src/robot/robot_functions.cpp **** 	{
 174:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 175:Core/Src/robot/robot_functions.cpp **** 		// printf("center_alligned\t");
 176:Core/Src/robot/robot_functions.cpp **** 	}
 177:Core/Src/robot/robot_functions.cpp **** 	else
 178:Core/Src/robot/robot_functions.cpp **** 	{
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 180:Core/Src/robot/robot_functions.cpp **** 		// printf("peak_alligned\t");
 181:Core/Src/robot/robot_functions.cpp **** 	}
 182:Core/Src/robot/robot_functions.cpp **** 	//*/
 183:Core/Src/robot/robot_functions.cpp **** }
 184:Core/Src/robot/robot_functions.cpp **** /**
 185:Core/Src/robot/robot_functions.cpp ****  * This function calculate_robot_angle() calculates the relative robot angle from the initial posit
 186:Core/Src/robot/robot_functions.cpp ****  * to zero and all other angles are taken with reference to this initial angle.
 187:Core/Src/robot/robot_functions.cpp ****  * return param : void
 188:Core/Src/robot/robot_functions.cpp ****  * /params input parameters : void
 189:Core/Src/robot/robot_functions.cpp ****  * The variable robot_angle stores the realtive value of robot angle from the original position
 190:Core/Src/robot/robot_functions.cpp ****  * The temp_robot_angle is just the temporary variable.
 191:Core/Src/robot/robot_functions.cpp **** */
 192:Core/Src/robot/robot_functions.cpp **** void calculate_robot_angle()
 193:Core/Src/robot/robot_functions.cpp **** {
 194:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 195:Core/Src/robot/robot_functions.cpp **** 	{
 196:Core/Src/robot/robot_functions.cpp **** 		if (!leg[0].is_raised_without_deadzone()){
 197:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 198:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 199:Core/Src/robot/robot_functions.cpp **** 		}
 200:Core/Src/robot/robot_functions.cpp **** 		// printf("\tusing IMU\t");
 201:Core/Src/robot/robot_functions.cpp **** 	}
 202:Core/Src/robot/robot_functions.cpp **** 	else
 203:Core/Src/robot/robot_functions.cpp **** 	{
 204:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 205:Core/Src/robot/robot_functions.cpp **** 		{
 206:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 6


 207:Core/Src/robot/robot_functions.cpp **** 			printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 208:Core/Src/robot/robot_functions.cpp **** 		}
 209:Core/Src/robot/robot_functions.cpp **** 		else
 210:Core/Src/robot/robot_functions.cpp **** 		{
 211:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 212:Core/Src/robot/robot_functions.cpp **** 			printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 213:Core/Src/robot/robot_functions.cpp **** 		}
 214:Core/Src/robot/robot_functions.cpp **** 		// printf("\tusing ENCODER\t");
 215:Core/Src/robot/robot_functions.cpp **** 	}
 216:Core/Src/robot/robot_functions.cpp **** }
 217:Core/Src/robot/robot_functions.cpp **** 
 218:Core/Src/robot/robot_functions.cpp **** /**
 219:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the robot in erected position at the start of the game.
 220:Core/Src/robot/robot_functions.cpp ****  * \bug remember to face towards anticlockwise direction from the 0 position at the start of the ga
 221:Core/Src/robot/robot_functions.cpp ****  * \params void
 222:Core/Src/robot/robot_functions.cpp ****  * \returns void
 223:Core/Src/robot/robot_functions.cpp ****  */
 224:Core/Src/robot/robot_functions.cpp **** 
 225:Core/Src/robot/robot_functions.cpp **** void initialize_position(void)
 226:Core/Src/robot/robot_functions.cpp **** {
 227:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 228:Core/Src/robot/robot_functions.cpp **** 	while (true)
 229:Core/Src/robot/robot_functions.cpp **** 	{
 230:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 231:Core/Src/robot/robot_functions.cpp **** 		{
 232:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 233:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 234:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 235:Core/Src/robot/robot_functions.cpp **** 				break;
 236:Core/Src/robot/robot_functions.cpp **** 		}
 237:Core/Src/robot/robot_functions.cpp **** 	}
 238:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 239:Core/Src/robot/robot_functions.cpp **** 	{
 240:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 241:Core/Src/robot/robot_functions.cpp **** 		{
 242:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 243:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 244:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 245:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 246:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 247:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 248:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_actual_angle(90 * PI / 180);
 249:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_actual_angle(90 * PI / 180);
 250:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 251:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 252:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 253:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 254:Core/Src/robot/robot_functions.cpp **** 		}
 255:Core/Src/robot/robot_functions.cpp **** 	}
 256:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 257:Core/Src/robot/robot_functions.cpp **** 	while (true)
 258:Core/Src/robot/robot_functions.cpp **** 	{
 259:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 260:Core/Src/robot/robot_functions.cpp **** 		{
 261:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 262:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 263:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 7


 264:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 265:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 266:Core/Src/robot/robot_functions.cpp **** 				break;
 267:Core/Src/robot/robot_functions.cpp **** 		}
 268:Core/Src/robot/robot_functions.cpp **** 	}
 269:Core/Src/robot/robot_functions.cpp **** }
 270:Core/Src/robot/robot_functions.cpp **** 
 271:Core/Src/robot/robot_functions.cpp **** /**
 272:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the leg in erected position at the start of the game.
 273:Core/Src/robot/robot_functions.cpp ****  * \params void
 274:Core/Src/robot/robot_functions.cpp ****  * \returns true if leg is erected.
 275:Core/Src/robot/robot_functions.cpp ****  */
 276:Core/Src/robot/robot_functions.cpp **** bool initialize_leg_position(void)
 277:Core/Src/robot/robot_functions.cpp **** {
 278:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 279:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 280:Core/Src/robot/robot_functions.cpp **** 	static bool leg0_flag = false;
 281:Core/Src/robot/robot_functions.cpp **** 	static bool leg1_flag = false;
 282:Core/Src/robot/robot_functions.cpp **** 
 283:Core/Src/robot/robot_functions.cpp **** 	// printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 284:Core/Src/robot/robot_functions.cpp **** 	// , leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].ge
 285:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 286:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 287:Core/Src/robot/robot_functions.cpp **** 	{
 288:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 289:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 290:Core/Src/robot/robot_functions.cpp **** 	}
 291:Core/Src/robot/robot_functions.cpp **** 	else
 292:Core/Src/robot/robot_functions.cpp **** 	{
 293:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 294:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 295:Core/Src/robot/robot_functions.cpp **** 	}
 296:Core/Src/robot/robot_functions.cpp **** 
 297:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 298:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 299:Core/Src/robot/robot_functions.cpp **** 	{
 300:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 301:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 302:Core/Src/robot/robot_functions.cpp **** 	}
 303:Core/Src/robot/robot_functions.cpp **** 	else
 304:Core/Src/robot/robot_functions.cpp **** 	{
 305:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 306:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 307:Core/Src/robot/robot_functions.cpp **** 	}
 308:Core/Src/robot/robot_functions.cpp **** 
 309:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 310:Core/Src/robot/robot_functions.cpp **** 	{
 311:Core/Src/robot/robot_functions.cpp **** 
 312:Core/Src/robot/robot_functions.cpp **** 		return true;
 313:Core/Src/robot/robot_functions.cpp **** 	}
 314:Core/Src/robot/robot_functions.cpp **** 	else
 315:Core/Src/robot/robot_functions.cpp **** 	{
 316:Core/Src/robot/robot_functions.cpp **** 		return false;
 317:Core/Src/robot/robot_functions.cpp **** 	}
 318:Core/Src/robot/robot_functions.cpp **** }
 319:Core/Src/robot/robot_functions.cpp **** 
 320:Core/Src/robot/robot_functions.cpp **** /**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 8


 321:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 322:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the steering in center position at the start of the game.
 323:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 324:Core/Src/robot/robot_functions.cpp ****  * \params void
 325:Core/Src/robot/robot_functions.cpp ****  * \returns true if reached to 0 angle.
 326:Core/Src/robot/robot_functions.cpp ****  */
 327:Core/Src/robot/robot_functions.cpp **** bool initialize_steering_position(void)
 328:Core/Src/robot/robot_functions.cpp **** {
 329:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 330:Core/Src/robot/robot_functions.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 331:Core/Src/robot/robot_functions.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 332:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 333:Core/Src/robot/robot_functions.cpp **** 	{
 334:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 335:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 336:Core/Src/robot/robot_functions.cpp **** 		return true;
 337:Core/Src/robot/robot_functions.cpp **** 	}
 338:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 339:Core/Src/robot/robot_functions.cpp **** 	{
 340:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 341:Core/Src/robot/robot_functions.cpp **** 		return true;
 342:Core/Src/robot/robot_functions.cpp **** 	}
 343:Core/Src/robot/robot_functions.cpp **** 	else
 344:Core/Src/robot/robot_functions.cpp **** 	{
 345:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 346:Core/Src/robot/robot_functions.cpp **** 		return false;
 347:Core/Src/robot/robot_functions.cpp **** 	}
 348:Core/Src/robot/robot_functions.cpp **** }
 349:Core/Src/robot/robot_functions.cpp **** 
 350:Core/Src/robot/robot_functions.cpp **** bool getup_n_run()
 351:Core/Src/robot/robot_functions.cpp **** {
 352:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 353:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 354:Core/Src/robot/robot_functions.cpp **** 
 355:Core/Src/robot/robot_functions.cpp **** 	// printf("\tInitializing_Leg_Orientation_GETUP\t");
 356:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(0);
 357:Core/Src/robot/robot_functions.cpp **** 	// printf(" \t%d \t%d", (int)(leg[1].get_angle()), (int)(leg_initial_position));
 358:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 359:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 360:Core/Src/robot/robot_functions.cpp **** 	{
 361:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 362:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_actual_angle(90 * PI / 180);
 363:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_actual_angle(90 * PI / 180);
 364:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 365:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 366:Core/Src/robot/robot_functions.cpp **** 		// printf("\tIF\t");
 367:Core/Src/robot/robot_functions.cpp **** 		return true;
 368:Core/Src/robot/robot_functions.cpp **** 	}
 369:Core/Src/robot/robot_functions.cpp **** 	else
 370:Core/Src/robot/robot_functions.cpp **** 	{
 371:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 372:Core/Src/robot/robot_functions.cpp **** 		// printf("\tELSE\t");
 373:Core/Src/robot/robot_functions.cpp **** 		return false;
 374:Core/Src/robot/robot_functions.cpp **** 	}
 375:Core/Src/robot/robot_functions.cpp **** 
 376:Core/Src/robot/robot_functions.cpp **** }
 377:Core/Src/robot/robot_functions.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 9


 378:Core/Src/robot/robot_functions.cpp **** /**
 379:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 380:Core/Src/robot/robot_functions.cpp ****  * \brief This function calculates all the datas including the motor omegas, orientation and angles
 381:Core/Src/robot/robot_functions.cpp ****  * \remarks remember to call this function only once in every 10 ms.
 382:Core/Src/robot/robot_functions.cpp ****  * \params void
 383:Core/Src/robot/robot_functions.cpp ****  * \returns void
 384:Core/Src/robot/robot_functions.cpp ****  */
 385:Core/Src/robot/robot_functions.cpp **** void calculate_datas()
 386:Core/Src/robot/robot_functions.cpp **** {
 387:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 388:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 389:Core/Src/robot/robot_functions.cpp **** 	steering.calculate_omega();
 390:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 391:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 392:Core/Src/robot/robot_functions.cpp **** 	// printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 393:Core/Src/robot/robot_functions.cpp **** 	// printf("\trobot_angle = %d\t", (int)(robot_angle*180/PI));
 394:Core/Src/robot/robot_functions.cpp **** }
 395:Core/Src/robot/robot_functions.cpp **** 
 396:Core/Src/robot/robot_functions.cpp **** float motion_profile(float angle_in_degrees, float min_speed, float max_speed)
 397:Core/Src/robot/robot_functions.cpp **** {
 398:Core/Src/robot/robot_functions.cpp **** 	float damping_angle = 30;
 399:Core/Src/robot/robot_functions.cpp **** 	float speed = 0;
 400:Core/Src/robot/robot_functions.cpp **** 	min_speed = 1.5;
 401:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 402:Core/Src/robot/robot_functions.cpp **** 	{
 403:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 404:Core/Src/robot/robot_functions.cpp **** 		// max_speed = 10;
 405:Core/Src/robot/robot_functions.cpp **** 	}
 406:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 407:Core/Src/robot/robot_functions.cpp **** 	{
 408:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 409:Core/Src/robot/robot_functions.cpp **** 		// printf("condition1");
 410:Core/Src/robot/robot_functions.cpp **** 	}
 411:Core/Src/robot/robot_functions.cpp **** 
 412:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 413:Core/Src/robot/robot_functions.cpp **** 	{
 414:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 415:Core/Src/robot/robot_functions.cpp **** 		// printf("conditionelseif");
 416:Core/Src/robot/robot_functions.cpp **** 	}
 417:Core/Src/robot/robot_functions.cpp **** 
 418:Core/Src/robot/robot_functions.cpp **** 	else
 419:Core/Src/robot/robot_functions.cpp **** 	{
 420:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 421:Core/Src/robot/robot_functions.cpp **** 		// printf("else");
 422:Core/Src/robot/robot_functions.cpp **** 	}
 423:Core/Src/robot/robot_functions.cpp **** 	// printf("\tSpeed = %d", (int)(speed*100));
 424:Core/Src/robot/robot_functions.cpp **** 
 425:Core/Src/robot/robot_functions.cpp **** 	return speed;
 426:Core/Src/robot/robot_functions.cpp **** }...
  51              		.loc 2 426 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 10


  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 426 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 426 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB99:
  75              	.LBB100:
  76              	.LBB101:
  77              	.LBB102:
  78              	.LBB103:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE103:
  86              	.LBE102:
  87              	.LBB104:
  88              	.LBB105:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE105:
  93              	.LBE104:
  94              	.LBB106:
  95              	.LBB107:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE107:
 100              	.LBE106:
 101              	.LBE101:
 102              	.LBE100:
 103              	.LBE99:
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
 104              		.loc 2 6 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 11


 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB108:
 113              	.LBB109:
 114              	.LBB110:
 115              	.LBB111:
 116              	.LBB112:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE112:
 122              	.LBE111:
 123              	.LBB113:
 124              	.LBB114:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE114:
 129              	.LBE113:
 130              	.LBB115:
 131              	.LBB116:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE116:
 136              	.LBE115:
 137              	.LBE110:
 138              	.LBE109:
 139              	.LBE108:
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
 140              		.loc 2 7 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 426 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE515:
 157              		.global	__aeabi_f2d
 158              		.global	__aeabi_ddiv
 159              		.global	__aeabi_d2f
 160              		.global	__aeabi_dcmpgt
 161              		.global	__aeabi_dcmplt
 162              		.section	.text._Z9set_anglef,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 12


 163              		.align	1
 164              		.global	_Z9set_anglef
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	_Z9set_anglef:
 171              	.LFB495:
 149:Core/Src/robot/robot_functions.cpp **** {
 172              		.loc 2 149 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL13:
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 182 0002 2DED028B 		vpush.64	{d8}
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 80, -16
 186              		.cfi_offset 81, -12
 150:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 187              		.loc 2 150 0
 188 0006 264B     		ldr	r3, .L25+24
 189 0008 D3ED007A 		vldr.32	s15, [r3]
 190 000c 30EE670A 		vsub.f32	s0, s0, s15
 191              	.LVL14:
 192 0010 DFED247A 		vldr.32	s15, .L25+28
 193 0014 60EE277A 		vmul.f32	s15, s0, s15
 194 0018 17EE900A 		vmov	r0, s15
 195 001c FFF7FEFF 		bl	__aeabi_f2d
 196              	.LVL15:
 197 0020 19A3     		adr	r3, .L25
 198 0022 D3E90023 		ldrd	r2, [r3]
 199 0026 FFF7FEFF 		bl	__aeabi_ddiv
 200              	.LVL16:
 201 002a FFF7FEFF 		bl	__aeabi_d2f
 202              	.LVL17:
 203 002e 08EE100A 		vmov	s16, r0
 204              	.LVL18:
 152:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 205              		.loc 2 152 0
 206 0032 B5EEC08A 		vcmpe.f32	s16, #0
 207 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 208 003a 12DB     		blt	.L22
 154:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 209              		.loc 2 154 0
 210 003c FFF7FEFF 		bl	__aeabi_f2d
 211              	.LVL19:
 212 0040 13A3     		adr	r3, .L25+8
 213 0042 D3E90023 		ldrd	r2, [r3]
 214 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 215              	.LVL20:
 216 004a 38B9     		cbnz	r0, .L24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 13


 217              	.LVL21:
 218              	.L14:
 154:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 219              		.loc 2 154 0 is_stmt 0 discriminator 4
 220 004c B0EE480A 		vmov.f32	s0, s16
 221 0050 1548     		ldr	r0, .L25+32
 222 0052 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 223              	.LVL22:
 224              	.L11:
 161:Core/Src/robot/robot_functions.cpp **** }
 225              		.loc 2 161 0 is_stmt 1
 226 0056 BDEC028B 		vldm	sp!, {d8}
 227              	.LCFI3:
 228              		.cfi_remember_state
 229              		.cfi_restore 80
 230              		.cfi_restore 81
 231              		.cfi_def_cfa_offset 8
 232 005a 08BD     		pop	{r3, pc}
 233              	.LVL23:
 234              	.L24:
 235              	.LCFI4:
 236              		.cfi_restore_state
 154:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 237              		.loc 2 154 0
 238 005c B2EE018A 		vmov.f32	s16, #8.5e+0
 239              	.LVL24:
 240 0060 F4E7     		b	.L14
 241              	.LVL25:
 242              	.L22:
 158:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 243              		.loc 2 158 0
 244 0062 FFF7FEFF 		bl	__aeabi_f2d
 245              	.LVL26:
 246 0066 0CA3     		adr	r3, .L25+16
 247 0068 D3E90023 		ldrd	r2, [r3]
 248 006c FFF7FEFF 		bl	__aeabi_dcmplt
 249              	.LVL27:
 250 0070 08B1     		cbz	r0, .L17
 251 0072 BAEE018A 		vmov.f32	s16, #-8.5e+0
 252              	.LVL28:
 253              	.L17:
 158:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 254              		.loc 2 158 0 is_stmt 0 discriminator 4
 255 0076 B0EE480A 		vmov.f32	s0, s16
 256 007a 0B48     		ldr	r0, .L25+32
 257 007c FFF7FEFF 		bl	_ZN8steering9set_angleEf
 258              	.LVL29:
 161:Core/Src/robot/robot_functions.cpp **** }
 259              		.loc 2 161 0 is_stmt 1 discriminator 4
 260 0080 E9E7     		b	.L11
 261              	.L26:
 262 0082 00BFAFF3 		.align	3
 262      0080
 263              	.L25:
 264 0088 182D4454 		.word	1413754136
 265 008c FB210940 		.word	1074340347
 266 0090 945EEEF9 		.word	-101818732
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 14


 267 0094 FFFF2040 		.word	1075904511
 268 0098 945EEEF9 		.word	-101818732
 269 009c FFFF20C0 		.word	-1071579137
 270 00a0 00000000 		.word	.LANCHOR2
 271 00a4 00003443 		.word	1127481344
 272 00a8 00000000 		.word	steering
 273              		.cfi_endproc
 274              	.LFE495:
 276              		.global	__aeabi_dcmple
 277              		.section	.text._Z22correct_steering_anglef,"ax",%progbits
 278              		.align	1
 279              		.global	_Z22correct_steering_anglef
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	_Z22correct_steering_anglef:
 286              	.LFB496:
 170:Core/Src/robot/robot_functions.cpp **** {
 287              		.loc 2 170 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL30:
 292 0000 08B5     		push	{r3, lr}
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 297 0002 2DED028B 		vpush.64	{d8}
 298              	.LCFI6:
 299              		.cfi_def_cfa_offset 16
 300              		.cfi_offset 80, -16
 301              		.cfi_offset 81, -12
 171:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 302              		.loc 2 171 0
 303 0006 204B     		ldr	r3, .L40+16
 304 0008 D3ED007A 		vldr.32	s15, [r3]
 305 000c 30EE670A 		vsub.f32	s0, s0, s15
 306              	.LVL31:
 307 0010 DFED1E7A 		vldr.32	s15, .L40+20
 308 0014 60EE277A 		vmul.f32	s15, s0, s15
 309 0018 17EE900A 		vmov	r0, s15
 310 001c FFF7FEFF 		bl	__aeabi_f2d
 311              	.LVL32:
 312 0020 15A3     		adr	r3, .L40
 313 0022 D3E90023 		ldrd	r2, [r3]
 314 0026 FFF7FEFF 		bl	__aeabi_ddiv
 315              	.LVL33:
 316 002a FFF7FEFF 		bl	__aeabi_d2f
 317              	.LVL34:
 318 002e 08EE100A 		vmov	s16, r0
 319              	.LVL35:
 172:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 320              		.loc 2 172 0
 321 0032 F0EEC87A 		vabs.f32	s15, s16
 322 0036 17EE900A 		vmov	r0, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 15


 323              	.LVL36:
 324 003a FFF7FEFF 		bl	__aeabi_f2d
 325              	.LVL37:
 326 003e 10A3     		adr	r3, .L40+8
 327 0040 D3E90023 		ldrd	r2, [r3]
 328 0044 FFF7FEFF 		bl	__aeabi_dcmple
 329              	.LVL38:
 330 0048 60B9     		cbnz	r0, .L39
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 331              		.loc 2 179 0
 332 004a B5EEC08A 		vcmpe.f32	s16, #0
 333 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 334 0052 0DDD     		ble	.L37
 335 0054 BAEE010A 		vmov.f32	s0, #-8.5e+0
 336              	.L31:
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 337              		.loc 2 179 0 is_stmt 0 discriminator 4
 338 0058 0D48     		ldr	r0, .L40+24
 339 005a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 340              	.LVL39:
 341              	.L27:
 183:Core/Src/robot/robot_functions.cpp **** }
 342              		.loc 2 183 0 is_stmt 1
 343 005e BDEC028B 		vldm	sp!, {d8}
 344              	.LCFI7:
 345              		.cfi_remember_state
 346              		.cfi_restore 80
 347              		.cfi_restore 81
 348              		.cfi_def_cfa_offset 8
 349              	.LVL40:
 350 0062 08BD     		pop	{r3, pc}
 351              	.LVL41:
 352              	.L39:
 353              	.LCFI8:
 354              		.cfi_restore_state
 174:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 355              		.loc 2 174 0
 356 0064 9FED0B0A 		vldr.32	s0, .L40+28
 357 0068 0948     		ldr	r0, .L40+24
 358 006a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 359              	.LVL42:
 360 006e F6E7     		b	.L27
 361              	.L37:
 179:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 362              		.loc 2 179 0
 363 0070 B2EE010A 		vmov.f32	s0, #8.5e+0
 364 0074 F0E7     		b	.L31
 365              	.L41:
 366 0076 00BF     		.align	3
 367              	.L40:
 368 0078 182D4454 		.word	1413754136
 369 007c FB210940 		.word	1074340347
 370 0080 945EEEF9 		.word	-101818732
 371 0084 FFFF2040 		.word	1075904511
 372 0088 00000000 		.word	.LANCHOR2
 373 008c 00003443 		.word	1127481344
 374 0090 00000000 		.word	steering
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 16


 375 0094 00000000 		.word	0
 376              		.cfi_endproc
 377              	.LFE496:
 379              		.global	__aeabi_dmul
 380              		.global	__aeabi_dadd
 381              		.section	.text._Z13move_steeringif,"ax",%progbits
 382              		.align	1
 383              		.global	_Z13move_steeringif
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	_Z13move_steeringif:
 390              	.LFB494:
 116:Core/Src/robot/robot_functions.cpp **** {
 391              		.loc 2 116 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL43:
 396 0000 D0B5     		push	{r4, r6, r7, lr}
 397              	.LCFI9:
 398              		.cfi_def_cfa_offset 16
 399              		.cfi_offset 4, -16
 400              		.cfi_offset 6, -12
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 2DED028B 		vpush.64	{d8}
 404              	.LCFI10:
 405              		.cfi_def_cfa_offset 24
 406              		.cfi_offset 80, -24
 407              		.cfi_offset 81, -20
 408 0006 B0EE408A 		vmov.f32	s16, s0
 117:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 409              		.loc 2 117 0
 410 000a 214B     		ldr	r3, .L51+8
 411 000c 1B68     		ldr	r3, [r3]
 412 000e 8342     		cmp	r3, r0
 413 0010 0ED0     		beq	.L48
 414              	.LVL44:
 415              	.L43:
 123:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 416              		.loc 2 123 0
 417 0012 2048     		ldr	r0, .L51+12
 418 0014 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 419              	.LVL45:
 420 0018 48B3     		cbz	r0, .L49
 128:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 421              		.loc 2 128 0
 422 001a 1E48     		ldr	r0, .L51+12
 423 001c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 424              	.LVL46:
 425 0020 0128     		cmp	r0, #1
 426 0022 2BD0     		beq	.L50
 136:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 427              		.loc 2 136 0
 428 0024 9FED1C0A 		vldr.32	s0, .L51+16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 17


 429 0028 1C48     		ldr	r0, .L51+20
 430 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 431              	.LVL47:
 138:Core/Src/robot/robot_functions.cpp **** }
 432              		.loc 2 138 0
 433 002e 22E0     		b	.L42
 434              	.LVL48:
 435              	.L48:
 119:Core/Src/robot/robot_functions.cpp **** 		summation_angle += 1.3*robot_angle;
 436              		.loc 2 119 0
 437 0030 1B4B     		ldr	r3, .L51+24
 438 0032 1868     		ldr	r0, [r3]	@ float
 439              	.LVL49:
 440 0034 FFF7FEFF 		bl	__aeabi_f2d
 441              	.LVL50:
 442 0038 13A3     		adr	r3, .L51
 443 003a D3E90023 		ldrd	r2, [r3]
 444 003e FFF7FEFF 		bl	__aeabi_dmul
 445              	.LVL51:
 446 0042 0646     		mov	r6, r0
 447 0044 0F46     		mov	r7, r1
 448 0046 174C     		ldr	r4, .L51+28
 449 0048 2068     		ldr	r0, [r4]	@ float
 450 004a FFF7FEFF 		bl	__aeabi_f2d
 451              	.LVL52:
 452 004e 3246     		mov	r2, r6
 453 0050 3B46     		mov	r3, r7
 454 0052 FFF7FEFF 		bl	__aeabi_dadd
 455              	.LVL53:
 456 0056 FFF7FEFF 		bl	__aeabi_d2f
 457              	.LVL54:
 458 005a 2060     		str	r0, [r4]	@ float
 120:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 459              		.loc 2 120 0
 460 005c 07EE900A 		vmov	s15, r0
 461 0060 F1EE677A 		vneg.f32	s15, s15
 462              	.LVL55:
 121:Core/Src/robot/robot_functions.cpp **** 		angle /= 300;
 463              		.loc 2 121 0
 464 0064 9FED107A 		vldr.32	s14, .L51+32
 465 0068 87EE878A 		vdiv.f32	s16, s15, s14
 466              	.LVL56:
 467 006c D1E7     		b	.L43
 468              	.L49:
 126:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 469              		.loc 2 126 0
 470 006e B0EE480A 		vmov.f32	s0, s16
 471 0072 FFF7FEFF 		bl	_Z9set_anglef
 472              	.LVL57:
 473              	.L42:
 138:Core/Src/robot/robot_functions.cpp **** }
 474              		.loc 2 138 0
 475 0076 BDEC028B 		vldm	sp!, {d8}
 476              	.LCFI11:
 477              		.cfi_remember_state
 478              		.cfi_restore 80
 479              		.cfi_restore 81
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 18


 480              		.cfi_def_cfa_offset 16
 481              	.LVL58:
 482 007a D0BD     		pop	{r4, r6, r7, pc}
 483              	.LVL59:
 484              	.L50:
 485              	.LCFI12:
 486              		.cfi_restore_state
 131:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 487              		.loc 2 131 0
 488 007c B0EE480A 		vmov.f32	s0, s16
 489 0080 FFF7FEFF 		bl	_Z22correct_steering_anglef
 490              	.LVL60:
 491 0084 F7E7     		b	.L42
 492              	.L52:
 493 0086 00BF     		.align	3
 494              	.L51:
 495 0088 CDCCCCCC 		.word	-858993459
 496 008c CCCCF43F 		.word	1073007820
 497 0090 00000000 		.word	steps
 498 0094 00000000 		.word	leg
 499 0098 00000000 		.word	0
 500 009c 00000000 		.word	steering
 501 00a0 00000000 		.word	.LANCHOR2
 502 00a4 00000000 		.word	.LANCHOR3
 503 00a8 00009643 		.word	1133903872
 504              		.cfi_endproc
 505              	.LFE494:
 507              		.global	__aeabi_d2iz
 508              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 509              		.align	1
 510              		.global	_Z21calculate_robot_anglev
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv4-sp-d16
 516              	_Z21calculate_robot_anglev:
 517              	.LFB497:
 193:Core/Src/robot/robot_functions.cpp **** {
 518              		.loc 2 193 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 523              	.LCFI13:
 524              		.cfi_def_cfa_offset 24
 525              		.cfi_offset 3, -24
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 2DED028B 		vpush.64	{d8}
 532              	.LCFI14:
 533              		.cfi_def_cfa_offset 32
 534              		.cfi_offset 80, -32
 535              		.cfi_offset 81, -28
 194:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 19


 536              		.loc 2 194 0
 537 0006 504B     		ldr	r3, .L59+8
 538 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 539 000a 03B3     		cbz	r3, .L54
 196:Core/Src/robot/robot_functions.cpp **** 		if (!leg[0].is_raised_without_deadzone()){
 540              		.loc 2 196 0
 541 000c 4F48     		ldr	r0, .L59+12
 542 000e FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 543              	.LVL61:
 544 0012 0028     		cmp	r0, #0
 545 0014 56D1     		bne	.L53
 546              	.LVL62:
 547              	.LBB117:
 548              	.LBB118:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 549              		.loc 1 36 0
 550 0016 4E4B     		ldr	r3, .L59+16
 551 0018 93ED027A 		vldr.32	s14, [r3, #8]
 552              	.LVL63:
 553              	.LBE118:
 554              	.LBE117:
 555              	.LBB119:
 556              	.LBB120:
 557 001c 4D4B     		ldr	r3, .L59+20
 558 001e D3ED027A 		vldr.32	s15, [r3, #8]
 559              	.LVL64:
 560              	.LBE120:
 561              	.LBE119:
 197:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 562              		.loc 2 197 0
 563 0022 77EE677A 		vsub.f32	s15, s14, s15
 564 0026 17EE900A 		vmov	r0, s15
 565 002a FFF7FEFF 		bl	__aeabi_f2d
 566              	.LVL65:
 567 002e 44A3     		adr	r3, .L59
 568 0030 D3E90023 		ldrd	r2, [r3]
 569 0034 FFF7FEFF 		bl	__aeabi_dmul
 570              	.LVL66:
 571 0038 0022     		movs	r2, #0
 572 003a 474B     		ldr	r3, .L59+24
 573 003c FFF7FEFF 		bl	__aeabi_ddiv
 574              	.LVL67:
 575 0040 FFF7FEFF 		bl	__aeabi_d2f
 576              	.LVL68:
 577 0044 454B     		ldr	r3, .L59+28
 578 0046 1860     		str	r0, [r3]	@ float
 198:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 579              		.loc 2 198 0
 580 0048 454B     		ldr	r3, .L59+32
 581 004a 1860     		str	r0, [r3]	@ float
 582 004c 3AE0     		b	.L53
 583              	.L54:
 204:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 584              		.loc 2 204 0
 585 004e 3F48     		ldr	r0, .L59+12
 586 0050 FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 587              	.LVL69:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 20


 588 0054 C8BB     		cbnz	r0, .L58
 211:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 589              		.loc 2 211 0
 590 0056 414B     		ldr	r3, .L59+28
 591 0058 93ED008A 		vldr.32	s16, [r3]
 592              	.LVL70:
 593              	.LBB121:
 594              	.LBB122:
 595              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 21


  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 22


 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 596              		.loc 3 112 0
 597 005c 414D     		ldr	r5, .L59+36
 598 005e 2846     		mov	r0, r5
 599 0060 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 600              	.LVL71:
 601              	.LBE122:
 602              	.LBE121:
 211:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 603              		.loc 2 211 0
 604 0064 38EE400A 		vsub.f32	s0, s16, s0
 605 0068 3D4C     		ldr	r4, .L59+32
 606 006a 84ED000A 		vstr.32	s0, [r4]
 607              	.LVL72:
 608              	.LBB123:
 609              	.LBB124:
 610              		.loc 3 112 0
 611 006e 2846     		mov	r0, r5
 612 0070 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 613              	.LVL73:
 614              	.LBE124:
 615              	.LBE123:
 212:Core/Src/robot/robot_functions.cpp **** 			printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 616              		.loc 2 212 0
 617 0074 9FED3C8A 		vldr.32	s16, .L59+40
 618 0078 60EE087A 		vmul.f32	s15, s0, s16
 619 007c 17EE900A 		vmov	r0, s15
 620 0080 FFF7FEFF 		bl	__aeabi_f2d
 621              	.LVL74:
 622 0084 2EA3     		adr	r3, .L59
 623 0086 D3E90023 		ldrd	r2, [r3]
 624 008a FFF7FEFF 		bl	__aeabi_ddiv
 625              	.LVL75:
 626 008e 0646     		mov	r6, r0
 627 0090 0F46     		mov	r7, r1
 628 0092 D4ED007A 		vldr.32	s15, [r4]
 629 0096 67EE887A 		vmul.f32	s15, s15, s16
 630 009a 17EE900A 		vmov	r0, s15
 631 009e FFF7FEFF 		bl	__aeabi_f2d
 632              	.LVL76:
 633 00a2 27A3     		adr	r3, .L59
 634 00a4 D3E90023 		ldrd	r2, [r3]
 635 00a8 FFF7FEFF 		bl	__aeabi_ddiv
 636              	.LVL77:
 637 00ac FFF7FEFF 		bl	__aeabi_d2iz
 638              	.LVL78:
 639 00b0 0446     		mov	r4, r0
 640 00b2 3046     		mov	r0, r6
 641 00b4 3946     		mov	r1, r7
 642 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 643              	.LVL79:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 23


 644 00ba 2246     		mov	r2, r4
 645 00bc 0146     		mov	r1, r0
 646 00be 2B48     		ldr	r0, .L59+44
 647 00c0 FFF7FEFF 		bl	printf
 648              	.LVL80:
 649              	.L53:
 216:Core/Src/robot/robot_functions.cpp **** }
 650              		.loc 2 216 0
 651 00c4 BDEC028B 		vldm	sp!, {d8}
 652              	.LCFI15:
 653              		.cfi_remember_state
 654              		.cfi_restore 80
 655              		.cfi_restore 81
 656              		.cfi_def_cfa_offset 24
 657 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 658              	.L58:
 659              	.LCFI16:
 660              		.cfi_restore_state
 661              	.LVL81:
 662              	.LBB125:
 663              	.LBB126:
 664              		.loc 3 112 0
 665 00ca 264D     		ldr	r5, .L59+36
 666 00cc 2846     		mov	r0, r5
 667 00ce FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 668              	.LVL82:
 669              	.LBE126:
 670              	.LBE125:
 206:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 671              		.loc 2 206 0
 672 00d2 234C     		ldr	r4, .L59+32
 673 00d4 D4ED007A 		vldr.32	s15, [r4]
 674 00d8 30EE270A 		vadd.f32	s0, s0, s15
 675 00dc 1F4B     		ldr	r3, .L59+28
 676 00de 83ED000A 		vstr.32	s0, [r3]
 677              	.LVL83:
 678              	.LBB127:
 679              	.LBB128:
 680              		.loc 3 112 0
 681 00e2 2846     		mov	r0, r5
 682 00e4 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 683              	.LVL84:
 684              	.LBE128:
 685              	.LBE127:
 207:Core/Src/robot/robot_functions.cpp **** 			printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 686              		.loc 2 207 0
 687 00e8 9FED1F8A 		vldr.32	s16, .L59+40
 688 00ec 60EE087A 		vmul.f32	s15, s0, s16
 689 00f0 17EE900A 		vmov	r0, s15
 690 00f4 FFF7FEFF 		bl	__aeabi_f2d
 691              	.LVL85:
 692 00f8 11A3     		adr	r3, .L59
 693 00fa D3E90023 		ldrd	r2, [r3]
 694 00fe FFF7FEFF 		bl	__aeabi_ddiv
 695              	.LVL86:
 696 0102 0646     		mov	r6, r0
 697 0104 0F46     		mov	r7, r1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 24


 698 0106 D4ED007A 		vldr.32	s15, [r4]
 699 010a 67EE887A 		vmul.f32	s15, s15, s16
 700 010e 17EE900A 		vmov	r0, s15
 701 0112 FFF7FEFF 		bl	__aeabi_f2d
 702              	.LVL87:
 703 0116 0AA3     		adr	r3, .L59
 704 0118 D3E90023 		ldrd	r2, [r3]
 705 011c FFF7FEFF 		bl	__aeabi_ddiv
 706              	.LVL88:
 707 0120 FFF7FEFF 		bl	__aeabi_d2iz
 708              	.LVL89:
 709 0124 0446     		mov	r4, r0
 710 0126 3046     		mov	r0, r6
 711 0128 3946     		mov	r1, r7
 712 012a FFF7FEFF 		bl	__aeabi_d2iz
 713              	.LVL90:
 714 012e 2246     		mov	r2, r4
 715 0130 0146     		mov	r1, r0
 716 0132 0E48     		ldr	r0, .L59+44
 717 0134 FFF7FEFF 		bl	printf
 718              	.LVL91:
 719 0138 C4E7     		b	.L53
 720              	.L60:
 721 013a 00BFAFF3 		.align	3
 721      0080
 722              	.L59:
 723 0140 182D4454 		.word	1413754136
 724 0144 FB210940 		.word	1074340347
 725 0148 00000000 		.word	USE_IMU_FLAG
 726 014c 00000000 		.word	leg
 727 0150 00000000 		.word	.LANCHOR0
 728 0154 00000000 		.word	.LANCHOR1
 729 0158 00806640 		.word	1080459264
 730 015c 00000000 		.word	.LANCHOR2
 731 0160 00000000 		.word	.LANCHOR4
 732 0164 0C000000 		.word	steering+12
 733 0168 00003443 		.word	1127481344
 734 016c 00000000 		.word	.LC0
 735              		.cfi_endproc
 736              	.LFE497:
 738              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 739              		.align	1
 740              		.global	_Z23initialize_leg_positionv
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	_Z23initialize_leg_positionv:
 747              	.LFB499:
 277:Core/Src/robot/robot_functions.cpp **** {
 748              		.loc 2 277 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752 0000 08B5     		push	{r3, lr}
 753              	.LCFI17:
 754              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 25


 755              		.cfi_offset 3, -8
 756              		.cfi_offset 14, -4
 757              	.LVL92:
 758              	.LBB129:
 759              	.LBB130:
 760              		.file 4 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 761              		.loc 4 47 0
 762 0002 3748     		ldr	r0, .L79+16
 763 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 764              	.LVL93:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 26


 765              	.LBE130:
 766              	.LBE129:
 285:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 767              		.loc 2 285 0
 768 0008 10EE100A 		vmov	r0, s0
 769 000c FFF7FEFF 		bl	__aeabi_f2d
 770              	.LVL94:
 771 0010 2FA3     		adr	r3, .L79
 772 0012 D3E90023 		ldrd	r2, [r3]
 773 0016 FFF7FEFF 		bl	__aeabi_dcmpgt
 774              	.LVL95:
 775 001a 80B1     		cbz	r0, .L62
 776              	.LVL96:
 777              	.LBB131:
 778              	.LBB132:
 779              		.loc 4 47 0
 780 001c 3048     		ldr	r0, .L79+16
 781 001e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 782              	.LVL97:
 783              	.LBE132:
 784              	.LBE131:
 286:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 785              		.loc 2 286 0
 786 0022 10EE100A 		vmov	r0, s0
 787 0026 FFF7FEFF 		bl	__aeabi_f2d
 788              	.LVL98:
 285:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 789              		.loc 2 285 0
 790 002a 2BA3     		adr	r3, .L79+8
 791 002c D3E90023 		ldrd	r2, [r3]
 792 0030 FFF7FEFF 		bl	__aeabi_dcmplt
 793              	.LVL99:
 794 0034 18B1     		cbz	r0, .L62
 795              	.LVL100:
 796              	.LBB133:
 797              	.LBB134:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 798              		.loc 4 45 0
 799 0036 2B4B     		ldr	r3, .L79+20
 800 0038 1B69     		ldr	r3, [r3, #16]
 801              	.LVL101:
 802              	.LBE134:
 803              	.LBE133:
 286:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 804              		.loc 2 286 0
 805 003a 002B     		cmp	r3, #0
 806 003c 32D1     		bne	.L78
 807              	.L62:
 293:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 808              		.loc 2 293 0 discriminator 3
 809 003e B0EE080A 		vmov.f32	s0, #3.0e+0
 810 0042 2848     		ldr	r0, .L79+20
 811 0044 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 812              	.LVL102:
 294:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 813              		.loc 2 294 0 discriminator 3
 814 0048 274B     		ldr	r3, .L79+24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 27


 815 004a 0022     		movs	r2, #0
 816 004c 1A70     		strb	r2, [r3]
 817              	.L65:
 818              	.LVL103:
 819              	.LBB135:
 820              	.LBB136:
 821              		.loc 4 47 0
 822 004e 2748     		ldr	r0, .L79+28
 823 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 824              	.LVL104:
 825              	.LBE136:
 826              	.LBE135:
 297:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 827              		.loc 2 297 0
 828 0054 10EE100A 		vmov	r0, s0
 829 0058 FFF7FEFF 		bl	__aeabi_f2d
 830              	.LVL105:
 298:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 831              		.loc 2 298 0
 832 005c 1CA3     		adr	r3, .L79
 833 005e D3E90023 		ldrd	r2, [r3]
 834 0062 FFF7FEFF 		bl	__aeabi_dcmpgt
 835              	.LVL106:
 836 0066 78B1     		cbz	r0, .L66
 837              	.LVL107:
 838              	.LBB137:
 839              	.LBB138:
 840              		.loc 4 47 0
 841 0068 2048     		ldr	r0, .L79+28
 842 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 843              	.LVL108:
 844              	.LBE138:
 845              	.LBE137:
 298:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 846              		.loc 2 298 0
 847 006e 10EE100A 		vmov	r0, s0
 848 0072 FFF7FEFF 		bl	__aeabi_f2d
 849              	.LVL109:
 297:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 850              		.loc 2 297 0
 851 0076 18A3     		adr	r3, .L79+8
 852 0078 D3E90023 		ldrd	r2, [r3]
 853 007c FFF7FEFF 		bl	__aeabi_dcmplt
 854              	.LVL110:
 855 0080 10B1     		cbz	r0, .L66
 856              	.LVL111:
 857              	.LBB139:
 858              	.LBB140:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 859              		.loc 4 45 0
 860 0082 184B     		ldr	r3, .L79+20
 861 0084 9B6E     		ldr	r3, [r3, #104]
 862              	.LVL112:
 863              	.LBE140:
 864              	.LBE139:
 298:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 865              		.loc 2 298 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 28


 866 0086 B3B9     		cbnz	r3, .L69
 867              	.L66:
 305:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 868              		.loc 2 305 0 discriminator 2
 869 0088 B0EE080A 		vmov.f32	s0, #3.0e+0
 870 008c 1848     		ldr	r0, .L79+32
 871 008e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 872              	.LVL113:
 306:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 873              		.loc 2 306 0 discriminator 2
 874 0092 184B     		ldr	r3, .L79+36
 875 0094 0022     		movs	r2, #0
 876 0096 1A70     		strb	r2, [r3]
 877              	.L70:
 309:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 878              		.loc 2 309 0
 879 0098 134B     		ldr	r3, .L79+24
 880 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 881 009c A3B1     		cbz	r3, .L72
 309:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 882              		.loc 2 309 0 is_stmt 0 discriminator 1
 883 009e 154B     		ldr	r3, .L79+36
 884 00a0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 885              	.L71:
 318:Core/Src/robot/robot_functions.cpp **** }
 886              		.loc 2 318 0 is_stmt 1
 887 00a2 08BD     		pop	{r3, pc}
 888              	.L78:
 288:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 889              		.loc 2 288 0
 890 00a4 9FED140A 		vldr.32	s0, .L79+40
 891 00a8 0E48     		ldr	r0, .L79+20
 892 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 893              	.LVL114:
 289:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 894              		.loc 2 289 0
 895 00ae 0E4B     		ldr	r3, .L79+24
 896 00b0 0122     		movs	r2, #1
 897 00b2 1A70     		strb	r2, [r3]
 898 00b4 CBE7     		b	.L65
 899              	.L69:
 300:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 900              		.loc 2 300 0
 901 00b6 9FED100A 		vldr.32	s0, .L79+40
 902 00ba 0D48     		ldr	r0, .L79+32
 903 00bc FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 904              	.LVL115:
 301:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 905              		.loc 2 301 0
 906 00c0 0C4B     		ldr	r3, .L79+36
 907 00c2 0122     		movs	r2, #1
 908 00c4 1A70     		strb	r2, [r3]
 909 00c6 E7E7     		b	.L70
 910              	.L72:
 316:Core/Src/robot/robot_functions.cpp **** 		return false;
 911              		.loc 2 316 0
 912 00c8 0020     		movs	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 29


 913 00ca EAE7     		b	.L71
 914              	.L80:
 915 00cc AFF30080 		.align	3
 916              	.L79:
 917 00d0 44031FEA 		.word	-367066300
 918 00d4 0604F83F 		.word	1073218566
 919 00d8 EC5669BE 		.word	-1100392724
 920 00dc EF3FFA3F 		.word	1073364975
 921 00e0 3C000000 		.word	leg+60
 922 00e4 00000000 		.word	leg
 923 00e8 00000000 		.word	.LANCHOR5
 924 00ec 94000000 		.word	leg+148
 925 00f0 58000000 		.word	leg+88
 926 00f4 00000000 		.word	.LANCHOR6
 927 00f8 00000000 		.word	0
 928              		.cfi_endproc
 929              	.LFE499:
 931              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 932              		.align	1
 933              		.global	_Z28initialize_steering_positionv
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	_Z28initialize_steering_positionv:
 940              	.LFB500:
 328:Core/Src/robot/robot_functions.cpp **** {
 941              		.loc 2 328 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 10B5     		push	{r4, lr}
 946              	.LCFI18:
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 4, -8
 949              		.cfi_offset 14, -4
 950              	.LVL116:
 951              	.LBB141:
 952              	.LBB142:
 953              		.loc 3 112 0
 954 0002 1F48     		ldr	r0, .L88+8
 955 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 956              	.LVL117:
 957              	.LBE142:
 958              	.LBE141:
 329:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 959              		.loc 2 329 0
 960 0008 DFED1E7A 		vldr.32	s15, .L88+12
 961 000c 60EE277A 		vmul.f32	s15, s0, s15
 962 0010 17EE900A 		vmov	r0, s15
 963 0014 FFF7FEFF 		bl	__aeabi_f2d
 964              	.LVL118:
 965 0018 17A3     		adr	r3, .L88
 966 001a D3E90023 		ldrd	r2, [r3]
 967 001e FFF7FEFF 		bl	__aeabi_ddiv
 968              	.LVL119:
 969 0022 FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 30


 970              	.LVL120:
 971 0026 0146     		mov	r1, r0
 972 0028 1748     		ldr	r0, .L88+16
 973 002a FFF7FEFF 		bl	printf
 974              	.LVL121:
 332:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 975              		.loc 2 332 0
 976 002e FFF7FEFF 		bl	HAL_GetTick
 977              	.LVL122:
 978 0032 164B     		ldr	r3, .L88+20
 979 0034 1B68     		ldr	r3, [r3]
 980 0036 C01A     		subs	r0, r0, r3
 981 0038 B0F5FA7F 		cmp	r0, #500
 982 003c 09D2     		bcs	.L86
 338:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 983              		.loc 2 338 0
 984 003e 144B     		ldr	r3, .L88+24
 985 0040 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 986 0042 9CB9     		cbnz	r4, .L87
 345:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 987              		.loc 2 345 0
 988 0044 B6EE000A 		vmov.f32	s0, #5.0e-1
 989 0048 1248     		ldr	r0, .L88+28
 990 004a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 991              	.LVL123:
 992              	.L83:
 348:Core/Src/robot/robot_functions.cpp **** }
 993              		.loc 2 348 0
 994 004e 2046     		mov	r0, r4
 995 0050 10BD     		pop	{r4, pc}
 996              	.L86:
 334:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 997              		.loc 2 334 0
 998 0052 9FED110A 		vldr.32	s0, .L88+32
 999 0056 0F48     		ldr	r0, .L88+28
 1000 0058 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1001              	.LVL124:
 335:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 1002              		.loc 2 335 0
 1003 005c 0122     		movs	r2, #1
 1004 005e 4FF48051 		mov	r1, #4096
 1005 0062 0E48     		ldr	r0, .L88+36
 1006 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1007              	.LVL125:
 336:Core/Src/robot/robot_functions.cpp **** 		return true;
 1008              		.loc 2 336 0
 1009 0068 0124     		movs	r4, #1
 1010 006a F0E7     		b	.L83
 1011              	.L87:
 340:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1012              		.loc 2 340 0
 1013 006c 9FED0A0A 		vldr.32	s0, .L88+32
 1014 0070 0848     		ldr	r0, .L88+28
 1015 0072 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1016              	.LVL126:
 341:Core/Src/robot/robot_functions.cpp **** 		return true;
 1017              		.loc 2 341 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 31


 1018 0076 EAE7     		b	.L83
 1019              	.L89:
 1020              		.align	3
 1021              	.L88:
 1022 0078 182D4454 		.word	1413754136
 1023 007c FB210940 		.word	1074340347
 1024 0080 0C000000 		.word	steering+12
 1025 0084 00003443 		.word	1127481344
 1026 0088 00000000 		.word	.LC1
 1027 008c 00000000 		.word	.LANCHOR7
 1028 0090 00000000 		.word	.LANCHOR8
 1029 0094 00000000 		.word	steering
 1030 0098 00000000 		.word	0
 1031 009c 000C0240 		.word	1073875968
 1032              		.cfi_endproc
 1033              	.LFE500:
 1035              		.section	.text._Z19initialize_positionv,"ax",%progbits
 1036              		.align	1
 1037              		.global	_Z19initialize_positionv
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1041              		.fpu fpv4-sp-d16
 1043              	_Z19initialize_positionv:
 1044              	.LFB498:
 226:Core/Src/robot/robot_functions.cpp **** {
 1045              		.loc 2 226 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1050              	.LCFI19:
 1051              		.cfi_def_cfa_offset 24
 1052              		.cfi_offset 4, -24
 1053              		.cfi_offset 5, -20
 1054              		.cfi_offset 6, -16
 1055              		.cfi_offset 7, -12
 1056              		.cfi_offset 8, -8
 1057              		.cfi_offset 14, -4
 1058 0004 2DED028B 		vpush.64	{d8}
 1059              	.LCFI20:
 1060              		.cfi_def_cfa_offset 32
 1061              		.cfi_offset 80, -32
 1062              		.cfi_offset 81, -28
 227:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 1063              		.loc 2 227 0
 1064 0008 FFF7FEFF 		bl	HAL_GetTick
 1065              	.LVL127:
 1066 000c 0646     		mov	r6, r0
 1067              	.LVL128:
 1068              	.L91:
 230:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1069              		.loc 2 230 0
 1070 000e FFF7FEFF 		bl	HAL_GetTick
 1071              	.LVL129:
 1072 0012 801B     		subs	r0, r0, r6
 1073 0014 0928     		cmp	r0, #9
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 32


 1074 0016 FAD9     		bls	.L91
 232:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1075              		.loc 2 232 0
 1076 0018 FFF7FEFF 		bl	HAL_GetTick
 1077              	.LVL130:
 1078 001c 0646     		mov	r6, r0
 1079              	.LVL131:
 233:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 1080              		.loc 2 233 0
 1081 001e 3A48     		ldr	r0, .L99
 1082              	.LVL132:
 1083 0020 FFF7FEFF 		bl	printf
 1084              	.LVL133:
 234:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 1085              		.loc 2 234 0
 1086 0024 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1087              	.LVL134:
 1088 0028 0028     		cmp	r0, #0
 1089 002a F0D0     		beq	.L91
 1090              	.LBB143:
 238:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1091              		.loc 2 238 0
 1092 002c 0024     		movs	r4, #0
 1093 002e 00E0     		b	.L95
 1094              	.LVL135:
 1095              	.L94:
 238:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1096              		.loc 2 238 0 is_stmt 0 discriminator 2
 1097 0030 0134     		adds	r4, r4, #1
 1098              	.LVL136:
 1099              	.L95:
 238:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 1100              		.loc 2 238 0 discriminator 1
 1101 0032 364B     		ldr	r3, .L99+4
 1102 0034 9C42     		cmp	r4, r3
 1103 0036 3CDC     		bgt	.L93
 240:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1104              		.loc 2 240 0 is_stmt 1
 1105 0038 FFF7FEFF 		bl	HAL_GetTick
 1106              	.LVL137:
 1107 003c 801B     		subs	r0, r0, r6
 1108 003e 0928     		cmp	r0, #9
 1109 0040 F6D9     		bls	.L94
 242:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1110              		.loc 2 242 0
 1111 0042 FFF7FEFF 		bl	HAL_GetTick
 1112              	.LVL138:
 1113 0046 0646     		mov	r6, r0
 1114              	.LVL139:
 243:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1115              		.loc 2 243 0
 1116 0048 3148     		ldr	r0, .L99+8
 1117              	.LVL140:
 1118 004a FFF7FEFF 		bl	printf
 1119              	.LVL141:
 244:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 1120              		.loc 2 244 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 33


 1121 004e 314D     		ldr	r5, .L99+12
 1122 0050 0027     		movs	r7, #0
 1123 0052 2F61     		str	r7, [r5, #16]
 245:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 1124              		.loc 2 245 0
 1125 0054 AF66     		str	r7, [r5, #104]
 246:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 1126              		.loc 2 246 0
 1127 0056 9FED308A 		vldr.32	s16, .L99+16
 1128 005a B0EE480A 		vmov.f32	s0, s16
 1129 005e 2846     		mov	r0, r5
 1130 0060 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1131              	.LVL142:
 247:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 1132              		.loc 2 247 0
 1133 0064 05F15808 		add	r8, r5, #88
 1134 0068 B0EE480A 		vmov.f32	s0, s16
 1135 006c 4046     		mov	r0, r8
 1136 006e FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1137              	.LVL143:
 1138              	.LBB144:
 1139              	.LBB145:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1140              		.loc 4 40 0
 1141 0072 B0EE480A 		vmov.f32	s0, s16
 1142 0076 05F13C00 		add	r0, r5, #60
 1143 007a FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1144              	.LVL144:
 1145              	.LBE145:
 1146              	.LBE144:
 1147              	.LBB146:
 1148              	.LBB147:
 1149 007e B0EE480A 		vmov.f32	s0, s16
 1150 0082 05F19400 		add	r0, r5, #148
 1151 0086 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1152              	.LVL145:
 1153              	.LBE147:
 1154              	.LBE146:
 250:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1155              		.loc 2 250 0
 1156 008a 9FED248A 		vldr.32	s16, .L99+20
 1157 008e B0EE480A 		vmov.f32	s0, s16
 1158 0092 2846     		mov	r0, r5
 1159 0094 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1160              	.LVL146:
 251:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1161              		.loc 2 251 0
 1162 0098 B0EE480A 		vmov.f32	s0, s16
 1163 009c 4046     		mov	r0, r8
 1164 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1165              	.LVL147:
 252:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 1166              		.loc 2 252 0
 1167 00a2 B0EE480A 		vmov.f32	s0, s16
 1168 00a6 1E48     		ldr	r0, .L99+24
 1169 00a8 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1170              	.LVL148:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 34


 253:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 1171              		.loc 2 253 0
 1172 00ac 1D4B     		ldr	r3, .L99+28
 1173 00ae 1F70     		strb	r7, [r3]
 1174 00b0 BEE7     		b	.L94
 1175              	.L93:
 1176              	.LBE143:
 256:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1177              		.loc 2 256 0
 1178 00b2 FFF7FEFF 		bl	HAL_GetTick
 1179              	.LVL149:
 1180 00b6 1C4B     		ldr	r3, .L99+32
 1181 00b8 1860     		str	r0, [r3]
 1182              	.LVL150:
 1183              	.L96:
 259:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1184              		.loc 2 259 0
 1185 00ba FFF7FEFF 		bl	HAL_GetTick
 1186              	.LVL151:
 1187 00be 801B     		subs	r0, r0, r6
 1188 00c0 0928     		cmp	r0, #9
 1189 00c2 FAD9     		bls	.L96
 261:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1190              		.loc 2 261 0
 1191 00c4 FFF7FEFF 		bl	HAL_GetTick
 1192              	.LVL152:
 1193 00c8 0646     		mov	r6, r0
 1194              	.LVL153:
 262:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1195              		.loc 2 262 0
 1196 00ca FFF7FEFF 		bl	HAL_GetTick
 1197              	.LVL154:
 1198 00ce 164B     		ldr	r3, .L99+32
 1199 00d0 1A68     		ldr	r2, [r3]
 1200 00d2 0146     		mov	r1, r0
 1201 00d4 1548     		ldr	r0, .L99+36
 1202 00d6 FFF7FEFF 		bl	printf
 1203              	.LVL155:
 263:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1204              		.loc 2 263 0
 1205 00da 9FED108A 		vldr.32	s16, .L99+20
 1206 00de 0D4C     		ldr	r4, .L99+12
 1207 00e0 B0EE480A 		vmov.f32	s0, s16
 1208 00e4 2046     		mov	r0, r4
 1209 00e6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1210              	.LVL156:
 264:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1211              		.loc 2 264 0
 1212 00ea B0EE480A 		vmov.f32	s0, s16
 1213 00ee 04F15800 		add	r0, r4, #88
 1214 00f2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1215              	.LVL157:
 265:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1216              		.loc 2 265 0
 1217 00f6 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1218              	.LVL158:
 1219 00fa 0028     		cmp	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 35


 1220 00fc DDD0     		beq	.L96
 269:Core/Src/robot/robot_functions.cpp **** }
 1221              		.loc 2 269 0
 1222 00fe BDEC028B 		vldm	sp!, {d8}
 1223              	.LCFI21:
 1224              		.cfi_restore 80
 1225              		.cfi_restore 81
 1226              		.cfi_def_cfa_offset 24
 1227 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1228              	.LVL159:
 1229              	.L100:
 1230 0106 00BF     		.align	2
 1231              	.L99:
 1232 0108 00000000 		.word	.LC2
 1233 010c BFC62D00 		.word	2999999
 1234 0110 20000000 		.word	.LC3
 1235 0114 00000000 		.word	leg
 1236 0118 DB0FC93F 		.word	1070141403
 1237 011c 00000000 		.word	0
 1238 0120 00000000 		.word	steering
 1239 0124 00000000 		.word	.LANCHOR8
 1240 0128 00000000 		.word	.LANCHOR7
 1241 012c 34000000 		.word	.LC4
 1242              		.cfi_endproc
 1243              	.LFE498:
 1245              		.section	.text._Z11getup_n_runv,"ax",%progbits
 1246              		.align	1
 1247              		.global	_Z11getup_n_runv
 1248              		.syntax unified
 1249              		.thumb
 1250              		.thumb_func
 1251              		.fpu fpv4-sp-d16
 1253              	_Z11getup_n_runv:
 1254              	.LFB501:
 351:Core/Src/robot/robot_functions.cpp **** {
 1255              		.loc 2 351 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259 0000 10B5     		push	{r4, lr}
 1260              	.LCFI22:
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 4, -8
 1263              		.cfi_offset 14, -4
 1264 0002 2DED028B 		vpush.64	{d8}
 1265              	.LCFI23:
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 80, -16
 1268              		.cfi_offset 81, -12
 1269              	.LVL160:
 356:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(0);
 1270              		.loc 2 356 0
 1271 0006 2A4C     		ldr	r4, .L110+16
 1272 0008 9FED2A0A 		vldr.32	s0, .L110+20
 1273 000c 2046     		mov	r0, r4
 1274 000e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1275              	.LVL161:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 36


 1276              	.LBB148:
 1277              	.LBB149:
 1278              		.loc 4 47 0
 1279 0012 04F19400 		add	r0, r4, #148
 1280 0016 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1281              	.LVL162:
 1282              	.LBE149:
 1283              	.LBE148:
 358:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1284              		.loc 2 358 0
 1285 001a 10EE100A 		vmov	r0, s0
 1286 001e FFF7FEFF 		bl	__aeabi_f2d
 1287              	.LVL163:
 1288 0022 1FA3     		adr	r3, .L110
 1289 0024 D3E90023 		ldrd	r2, [r3]
 1290 0028 FFF7FEFF 		bl	__aeabi_dcmpgt
 1291              	.LVL164:
 1292 002c 68B1     		cbz	r0, .L102
 1293              	.LVL165:
 1294              	.LBB150:
 1295              	.LBB151:
 1296              		.loc 4 47 0
 1297 002e 04F19400 		add	r0, r4, #148
 1298 0032 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1299              	.LVL166:
 1300              	.LBE151:
 1301              	.LBE150:
 359:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 1302              		.loc 2 359 0
 1303 0036 10EE100A 		vmov	r0, s0
 1304 003a FFF7FEFF 		bl	__aeabi_f2d
 1305              	.LVL167:
 358:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1306              		.loc 2 358 0
 1307 003e 1AA3     		adr	r3, .L110+8
 1308 0040 D3E90023 		ldrd	r2, [r3]
 1309 0044 FFF7FEFF 		bl	__aeabi_dcmplt
 1310              	.LVL168:
 1311 0048 40B9     		cbnz	r0, .L109
 1312              	.L102:
 371:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 1313              		.loc 2 371 0 discriminator 4
 1314 004a B0EE080A 		vmov.f32	s0, #3.0e+0
 1315 004e 1A48     		ldr	r0, .L110+24
 1316 0050 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1317              	.LVL169:
 373:Core/Src/robot/robot_functions.cpp **** 		return false;
 1318              		.loc 2 373 0 discriminator 4
 1319 0054 0020     		movs	r0, #0
 1320              	.L105:
 376:Core/Src/robot/robot_functions.cpp **** }
 1321              		.loc 2 376 0
 1322 0056 BDEC028B 		vldm	sp!, {d8}
 1323              	.LCFI24:
 1324              		.cfi_remember_state
 1325              		.cfi_restore 80
 1326              		.cfi_restore 81
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 37


 1327              		.cfi_def_cfa_offset 8
 1328 005a 10BD     		pop	{r4, pc}
 1329              	.L109:
 1330              	.LCFI25:
 1331              		.cfi_restore_state
 361:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1332              		.loc 2 361 0
 1333 005c 5834     		adds	r4, r4, #88
 1334 005e 9FED150A 		vldr.32	s0, .L110+20
 1335 0062 2046     		mov	r0, r4
 1336 0064 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1337              	.LVL170:
 1338              	.LBB152:
 1339              	.LBB153:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1340              		.loc 4 40 0
 1341 0068 9FED148A 		vldr.32	s16, .L110+28
 1342 006c B0EE480A 		vmov.f32	s0, s16
 1343 0070 A4F11C00 		sub	r0, r4, #28
 1344 0074 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1345              	.LVL171:
 1346              	.LBE153:
 1347              	.LBE152:
 1348              	.LBB154:
 1349              	.LBB155:
 1350 0078 B0EE480A 		vmov.f32	s0, s16
 1351 007c 04F13C00 		add	r0, r4, #60
 1352 0080 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1353              	.LVL172:
 1354              	.LBE155:
 1355              	.LBE154:
 364:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 1356              		.loc 2 364 0
 1357 0084 B0EE480A 		vmov.f32	s0, s16
 1358 0088 A4F15800 		sub	r0, r4, #88
 1359 008c FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1360              	.LVL173:
 365:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 1361              		.loc 2 365 0
 1362 0090 B0EE480A 		vmov.f32	s0, s16
 1363 0094 2046     		mov	r0, r4
 1364 0096 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1365              	.LVL174:
 367:Core/Src/robot/robot_functions.cpp **** 		return true;
 1366              		.loc 2 367 0
 1367 009a 0120     		movs	r0, #1
 1368 009c DBE7     		b	.L105
 1369              	.L111:
 1370 009e 00BF     		.align	3
 1371              	.L110:
 1372 00a0 44031FEA 		.word	-367066300
 1373 00a4 0604F83F 		.word	1073218566
 1374 00a8 EC5669BE 		.word	-1100392724
 1375 00ac EF3FFA3F 		.word	1073364975
 1376 00b0 00000000 		.word	leg
 1377 00b4 00000000 		.word	0
 1378 00b8 58000000 		.word	leg+88
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 38


 1379 00bc DB0FC93F 		.word	1070141403
 1380              		.cfi_endproc
 1381              	.LFE501:
 1383              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1384              		.align	1
 1385              		.global	_Z15calculate_datasv
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1389              		.fpu fpv4-sp-d16
 1391              	_Z15calculate_datasv:
 1392              	.LFB502:
 386:Core/Src/robot/robot_functions.cpp **** {
 1393              		.loc 2 386 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 16
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 1397 0000 10B5     		push	{r4, lr}
 1398              	.LCFI26:
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 4, -8
 1401              		.cfi_offset 14, -4
 1402 0002 84B0     		sub	sp, sp, #16
 1403              	.LCFI27:
 1404              		.cfi_def_cfa_offset 24
 387:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 1405              		.loc 2 387 0
 1406 0004 0C4C     		ldr	r4, .L114
 1407 0006 2046     		mov	r0, r4
 1408 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1409              	.LVL175:
 388:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 1410              		.loc 2 388 0
 1411 000c 04F15800 		add	r0, r4, #88
 1412 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1413              	.LVL176:
 1414              	.LBB156:
 1415              	.LBB157:
 102:Core/Inc/devs/steering.h **** 
 1416              		.loc 3 102 0
 1417 0014 0948     		ldr	r0, .L114+4
 1418 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1419              	.LVL177:
 1420              	.LBE157:
 1421              	.LBE156:
 390:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 1422              		.loc 2 390 0
 1423 001a 01AC     		add	r4, sp, #4
 1424 001c 0A21     		movs	r1, #10
 1425 001e 2046     		mov	r0, r4
 1426 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1427              	.LVL178:
 1428 0024 064B     		ldr	r3, .L114+8
 1429 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1430 002a 83E80700 		stm	r3, {r0, r1, r2}
 391:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 1431              		.loc 2 391 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 39


 1432 002e FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1433              	.LVL179:
 394:Core/Src/robot/robot_functions.cpp **** }
 1434              		.loc 2 394 0
 1435 0032 04B0     		add	sp, sp, #16
 1436              	.LCFI28:
 1437              		.cfi_def_cfa_offset 8
 1438              		@ sp needed
 1439 0034 10BD     		pop	{r4, pc}
 1440              	.L115:
 1441 0036 00BF     		.align	2
 1442              	.L114:
 1443 0038 00000000 		.word	leg
 1444 003c 0C000000 		.word	steering+12
 1445 0040 00000000 		.word	.LANCHOR1
 1446              		.cfi_endproc
 1447              	.LFE502:
 1449              		.section	.text._Z14motion_profilefff,"ax",%progbits
 1450              		.align	1
 1451              		.global	_Z14motion_profilefff
 1452              		.syntax unified
 1453              		.thumb
 1454              		.thumb_func
 1455              		.fpu fpv4-sp-d16
 1457              	_Z14motion_profilefff:
 1458              	.LFB503:
 397:Core/Src/robot/robot_functions.cpp **** {
 1459              		.loc 2 397 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 0
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 1463              		@ link register save eliminated.
 1464              	.LVL180:
 401:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 1465              		.loc 2 401 0
 1466 0000 DFED237A 		vldr.32	s15, .L135
 1467 0004 B4EEE70A 		vcmpe.f32	s0, s15
 1468 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1469 000c 01DD     		ble	.L117
 403:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 1470              		.loc 2 403 0
 1471 000e 30EE670A 		vsub.f32	s0, s0, s15
 1472              	.LVL181:
 1473              	.L117:
 406:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1474              		.loc 2 406 0
 1475 0012 B5EEC00A 		vcmpe.f32	s0, #0
 1476 0016 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1477 001a 06DB     		blt	.L119
 406:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1478              		.loc 2 406 0 is_stmt 0 discriminator 1
 1479 001c F3EE0E7A 		vmov.f32	s15, #3.0e+1
 1480 0020 B4EEE70A 		vcmpe.f32	s0, s15
 1481 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1482 0028 1ED9     		bls	.L134
 1483              	.L119:
 412:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 40


 1484              		.loc 2 412 0 is_stmt 1
 1485 002a DFED1A7A 		vldr.32	s15, .L135+4
 1486 002e B4EEE70A 		vcmpe.f32	s0, s15
 1487 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1488 0036 24DB     		blt	.L132
 412:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 1489              		.loc 2 412 0 is_stmt 0 discriminator 1
 1490 0038 DFED157A 		vldr.32	s15, .L135
 1491 003c B4EEE70A 		vcmpe.f32	s0, s15
 1492 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1493 0044 20D8     		bhi	.L133
 414:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 1494              		.loc 2 414 0 is_stmt 1
 1495 0046 F7EE087A 		vmov.f32	s15, #1.5e+0
 1496 004a 77EEC17A 		vsub.f32	s15, s15, s2
 1497 004e F3EE0E6A 		vmov.f32	s13, #3.0e+1
 1498 0052 87EEA67A 		vdiv.f32	s14, s15, s13
 1499 0056 DFED0F7A 		vldr.32	s15, .L135+4
 1500 005a 70EE677A 		vsub.f32	s15, s0, s15
 1501 005e 27EE270A 		vmul.f32	s0, s14, s15
 1502              	.LVL182:
 1503 0062 30EE010A 		vadd.f32	s0, s0, s2
 1504              	.LVL183:
 1505 0066 7047     		bx	lr
 1506              	.LVL184:
 1507              	.L134:
 408:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 1508              		.loc 2 408 0
 1509 0068 B7EE087A 		vmov.f32	s14, #1.5e+0
 1510 006c 71EE477A 		vsub.f32	s15, s2, s14
 1511 0070 F3EE0E6A 		vmov.f32	s13, #3.0e+1
 1512 0074 87EEA61A 		vdiv.f32	s2, s15, s13
 1513              	.LVL185:
 1514 0078 21EE001A 		vmul.f32	s2, s2, s0
 1515 007c 31EE070A 		vadd.f32	s0, s2, s14
 1516              	.LVL186:
 1517 0080 7047     		bx	lr
 1518              	.LVL187:
 1519              	.L132:
 420:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 1520              		.loc 2 420 0
 1521 0082 B0EE410A 		vmov.f32	s0, s2
 1522              	.LVL188:
 1523 0086 7047     		bx	lr
 1524              	.LVL189:
 1525              	.L133:
 1526 0088 B0EE410A 		vmov.f32	s0, s2
 1527              	.LVL190:
 1528              		.loc 2 426 0
 1529 008c 7047     		bx	lr
 1530              	.L136:
 1531 008e 00BF     		.align	2
 1532              	.L135:
 1533 0090 00003443 		.word	1127481344
 1534 0094 00001643 		.word	1125515264
 1535              		.cfi_endproc
 1536              	.LFE503:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 41


 1538              		.section	.text._Z8move_legif,"ax",%progbits
 1539              		.align	1
 1540              		.global	_Z8move_legif
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu fpv4-sp-d16
 1546              	_Z8move_legif:
 1547              	.LFB493:
  87:Core/Src/robot/robot_functions.cpp **** {
 1548              		.loc 2 87 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              	.LVL191:
 1553 0000 10B5     		push	{r4, lr}
 1554              	.LCFI29:
 1555              		.cfi_def_cfa_offset 8
 1556              		.cfi_offset 4, -8
 1557              		.cfi_offset 14, -4
 1558 0002 2DED028B 		vpush.64	{d8}
 1559              	.LCFI30:
 1560              		.cfi_def_cfa_offset 16
 1561              		.cfi_offset 80, -16
 1562              		.cfi_offset 81, -12
 1563              	.LVL192:
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 30)) ? robot_speed / 1.3	 : robot_speed;
 1564              		.loc 2 92 0
 1565 0006 6428     		cmp	r0, #100
 1566 0008 4ED0     		beq	.L141
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 30)) ? robot_speed / 1.3	 : robot_speed;
 1567              		.loc 2 92 0 is_stmt 0 discriminator 2
 1568 000a 1E28     		cmp	r0, #30
 1569 000c 49D0     		beq	.L145
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 30)) ? robot_speed / 1.3	 : robot_speed;
 1570              		.loc 2 92 0
 1571 000e B1EE088A 		vmov.f32	s16, #6.0e+0
 1572              	.L138:
 1573              	.LVL193:
 1574              	.LBB158:
 1575              	.LBB159:
 1576              		.loc 4 47 0 is_stmt 1 discriminator 6
 1577 0012 294C     		ldr	r4, .L146+8
 1578 0014 2046     		mov	r0, r4
 1579              	.LVL194:
 1580 0016 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1581              	.LVL195:
 1582              	.LBE159:
 1583              	.LBE158:
  94:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
 1584              		.loc 2 94 0 discriminator 6
 1585 001a DFED287A 		vldr.32	s15, .L146+12
 1586 001e 60EE277A 		vmul.f32	s15, s0, s15
 1587 0022 17EE900A 		vmov	r0, s15
 1588 0026 FFF7FEFF 		bl	__aeabi_f2d
 1589              	.LVL196:
 1590 002a 21A3     		adr	r3, .L146
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 42


 1591 002c D3E90023 		ldrd	r2, [r3]
 1592 0030 FFF7FEFF 		bl	__aeabi_ddiv
 1593              	.LVL197:
 1594 0034 FFF7FEFF 		bl	__aeabi_d2f
 1595              	.LVL198:
 1596 0038 B0EE481A 		vmov.f32	s2, s16
 1597 003c F7EE000A 		vmov.f32	s1, #1.0e+0
 1598 0040 00EE100A 		vmov	s0, r0
 1599 0044 FFF7FEFF 		bl	_Z14motion_profilefff
 1600              	.LVL199:
 1601 0048 F0EE408A 		vmov.f32	s17, s0
 1602              	.LVL200:
 1603              	.LBB160:
 1604              	.LBB161:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1605              		.loc 4 48 0 discriminator 6
 1606 004c 2046     		mov	r0, r4
 1607 004e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1608              	.LVL201:
 1609 0052 B0EE408A 		vmov.f32	s16, s0
 1610              	.LVL202:
 1611              	.LBE161:
 1612              	.LBE160:
 1613              	.LBB162:
 1614              	.LBB163:
 1615 0056 04F15800 		add	r0, r4, #88
 1616 005a FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1617              	.LVL203:
 1618              	.LBE163:
 1619              	.LBE162:
  95:Core/Src/robot/robot_functions.cpp **** 	del_speed = 3 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 1620              		.loc 2 95 0 discriminator 6
 1621 005e 38EE408A 		vsub.f32	s16, s16, s0
 1622 0062 B0EE080A 		vmov.f32	s0, #3.0e+0
 1623 0066 28EE008A 		vmul.f32	s16, s16, s0
 1624 006a 28EE288A 		vmul.f32	s16, s16, s17
 1625              	.LVL204:
 1626              	.LBB164:
 1627              	.LBB165:
 1628              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 43


  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 44


  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 45


 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 46


 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 1629              		.loc 5 242 0 discriminator 6
 1630 006e F0EEC87A 		vabs.f32	s15, s16
 1631              	.LVL205:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 47


 1632              	.LBE165:
 1633              	.LBE164:
  96:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
 1634              		.loc 2 96 0 discriminator 6
 1635 0072 F4EEE78A 		vcmpe.f32	s17, s15
 1636 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1637 007a 03D8     		bhi	.L139
  98:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 1638              		.loc 2 98 0
 1639 007c 88EE277A 		vdiv.f32	s14, s16, s15
 1640              	.LVL206:
  99:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 1641              		.loc 2 99 0
 1642 0080 28EE878A 		vmul.f32	s16, s17, s14
 1643              	.LVL207:
 1644              	.L139:
 101:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 1645              		.loc 2 101 0
 1646 0084 0E4C     		ldr	r4, .L146+16
 1647 0086 38EEC80A 		vsub.f32	s0, s17, s16
 1648 008a 2046     		mov	r0, r4
 1649 008c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1650              	.LVL208:
 102:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 1651              		.loc 2 102 0
 1652 0090 38EE280A 		vadd.f32	s0, s16, s17
 1653 0094 04F15800 		add	r0, r4, #88
 1654 0098 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1655              	.LVL209:
 103:Core/Src/robot/robot_functions.cpp **** }
 1656              		.loc 2 103 0
 1657 009c BDEC028B 		vldm	sp!, {d8}
 1658              	.LCFI31:
 1659              		.cfi_remember_state
 1660              		.cfi_restore 80
 1661              		.cfi_restore 81
 1662              		.cfi_def_cfa_offset 8
 1663              	.LVL210:
 1664 00a0 10BD     		pop	{r4, pc}
 1665              	.LVL211:
 1666              	.L145:
 1667              	.LCFI32:
 1668              		.cfi_restore_state
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 30)) ? robot_speed / 1.3	 : robot_speed;
 1669              		.loc 2 92 0
 1670 00a2 9FED088A 		vldr.32	s16, .L146+20
 1671 00a6 B4E7     		b	.L138
 1672              	.L141:
 1673 00a8 9FED068A 		vldr.32	s16, .L146+20
 1674 00ac B1E7     		b	.L138
 1675              	.L147:
 1676 00ae 00BF     		.align	3
 1677              	.L146:
 1678 00b0 182D4454 		.word	1413754136
 1679 00b4 FB210940 		.word	1074340347
 1680 00b8 3C000000 		.word	leg+60
 1681 00bc 00003443 		.word	1127481344
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 48


 1682 00c0 00000000 		.word	leg
 1683 00c4 3BB19340 		.word	1083420987
 1684              		.cfi_endproc
 1685              	.LFE493:
 1687              		.section	.text._Z2goif,"ax",%progbits
 1688              		.align	1
 1689              		.global	_Z2goif
 1690              		.syntax unified
 1691              		.thumb
 1692              		.thumb_func
 1693              		.fpu fpv4-sp-d16
 1695              	_Z2goif:
 1696              	.LFB492:
  38:Core/Src/robot/robot_functions.cpp **** {
 1697              		.loc 2 38 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 8
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              	.LVL212:
 1702 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1703              	.LCFI33:
 1704              		.cfi_def_cfa_offset 32
 1705              		.cfi_offset 4, -32
 1706              		.cfi_offset 5, -28
 1707              		.cfi_offset 6, -24
 1708              		.cfi_offset 7, -20
 1709              		.cfi_offset 8, -16
 1710              		.cfi_offset 9, -12
 1711              		.cfi_offset 10, -8
 1712              		.cfi_offset 14, -4
 1713 0004 2DED028B 		vpush.64	{d8}
 1714              	.LCFI34:
 1715              		.cfi_def_cfa_offset 40
 1716              		.cfi_offset 80, -40
 1717              		.cfi_offset 81, -36
 1718 0008 84B0     		sub	sp, sp, #16
 1719              	.LCFI35:
 1720              		.cfi_def_cfa_offset 56
 1721 000a 0546     		mov	r5, r0
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
 1722              		.loc 2 39 0
 1723 000c 10EE100A 		vmov	r0, s0
 1724              	.LVL213:
 1725 0010 FFF7FEFF 		bl	__aeabi_f2d
 1726              	.LVL214:
 1727 0014 54A3     		adr	r3, .L158+40
 1728 0016 D3E90023 		ldrd	r2, [r3]
 1729 001a FFF7FEFF 		bl	__aeabi_dmul
 1730              	.LVL215:
 1731 001e FFF7FEFF 		bl	__aeabi_d2f
 1732              	.LVL216:
 1733 0022 08EE100A 		vmov	s16, r0
 1734              	.LVL217:
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
 1735              		.loc 2 40 0
 1736 0026 00EE100A 		vmov	s0, r0
 1737 002a 2846     		mov	r0, r5
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 49


 1738              	.LVL218:
 1739 002c FFF7FEFF 		bl	_Z8move_legif
 1740              	.LVL219:
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
 1741              		.loc 2 41 0
 1742 0030 642D     		cmp	r5, #100
 1743 0032 62D0     		beq	.L156
  49:Core/Src/robot/robot_functions.cpp **** 		if(HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin)==GPIO_PIN_RESET){
 1744              		.loc 2 49 0
 1745 0034 4021     		movs	r1, #64
 1746 0036 4448     		ldr	r0, .L158+8
 1747 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1748              	.LVL220:
 1749 003c 0028     		cmp	r0, #0
 1750 003e 65D1     		bne	.L151
  50:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = true;
 1751              		.loc 2 50 0
 1752 0040 424B     		ldr	r3, .L158+12
 1753 0042 0122     		movs	r2, #1
 1754 0044 1A70     		strb	r2, [r3]
 1755              	.L152:
  55:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
 1756              		.loc 2 55 0
 1757 0046 B0EE480A 		vmov.f32	s0, s16
 1758 004a 2846     		mov	r0, r5
 1759 004c FFF7FEFF 		bl	_Z13move_steeringif
 1760              	.LVL221:
 1761              	.L150:
 1762              	.LBB166:
 1763              	.LBB167:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1764              		.loc 4 45 0
 1765 0050 3F4C     		ldr	r4, .L158+16
 1766 0052 D4F810A0 		ldr	r10, [r4, #16]
 1767              	.LVL222:
 1768              	.LBE167:
 1769              	.LBE166:
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1770              		.loc 2 59 0
 1771 0056 3F4B     		ldr	r3, .L158+20
 1772 0058 D3ED007A 		vldr.32	s15, [r3]
 1773 005c 9FED3E8A 		vldr.32	s16, .L158+24
 1774              	.LVL223:
 1775 0060 67EE887A 		vmul.f32	s15, s15, s16
 1776 0064 17EE900A 		vmov	r0, s15
 1777 0068 FFF7FEFF 		bl	__aeabi_f2d
 1778              	.LVL224:
 1779 006c 34A3     		adr	r3, .L158
 1780 006e D3E90023 		ldrd	r2, [r3]
 1781 0072 FFF7FEFF 		bl	__aeabi_ddiv
 1782              	.LVL225:
 1783 0076 0646     		mov	r6, r0
 1784 0078 0F46     		mov	r7, r1
 1785              	.LVL226:
 1786              	.LBB168:
 1787              	.LBB169:
 1788              		.loc 4 48 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 50


 1789 007a 04F13C00 		add	r0, r4, #60
 1790 007e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1791              	.LVL227:
 1792              	.LBE169:
 1793              	.LBE168:
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1794              		.loc 2 59 0
 1795 0082 60EE087A 		vmul.f32	s15, s0, s16
 1796 0086 17EE900A 		vmov	r0, s15
 1797 008a FFF7FEFF 		bl	__aeabi_f2d
 1798              	.LVL228:
 1799 008e 2CA3     		adr	r3, .L158
 1800 0090 D3E90023 		ldrd	r2, [r3]
 1801 0094 FFF7FEFF 		bl	__aeabi_ddiv
 1802              	.LVL229:
 1803 0098 8046     		mov	r8, r0
 1804 009a 8946     		mov	r9, r1
 1805              	.LVL230:
 1806              	.LBB170:
 1807              	.LBB171:
 1808              		.loc 4 48 0
 1809 009c 04F19400 		add	r0, r4, #148
 1810 00a0 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1811              	.LVL231:
 1812              	.LBE171:
 1813              	.LBE170:
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1814              		.loc 2 59 0
 1815 00a4 60EE087A 		vmul.f32	s15, s0, s16
 1816 00a8 17EE900A 		vmov	r0, s15
 1817 00ac FFF7FEFF 		bl	__aeabi_f2d
 1818              	.LVL232:
 1819 00b0 23A3     		adr	r3, .L158
 1820 00b2 D3E90023 		ldrd	r2, [r3]
 1821 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 1822              	.LVL233:
 1823 00ba CDE90201 		strd	r0, [sp, #8]
  58:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d", (int)(leg[0].get_st
 1824              		.loc 2 58 0
 1825 00be 4046     		mov	r0, r8
 1826 00c0 4946     		mov	r1, r9
 1827 00c2 FFF7FEFF 		bl	__aeabi_d2iz
 1828              	.LVL234:
 1829 00c6 8046     		mov	r8, r0
 1830 00c8 3046     		mov	r0, r6
 1831 00ca 3946     		mov	r1, r7
 1832 00cc FFF7FEFF 		bl	__aeabi_d2iz
 1833              	.LVL235:
 1834 00d0 0646     		mov	r6, r0
 1835 00d2 DDE90201 		ldrd	r0, [sp, #8]
 1836 00d6 FFF7FEFF 		bl	__aeabi_d2iz
 1837              	.LVL236:
 1838 00da 0090     		str	r0, [sp]
 1839 00dc 4346     		mov	r3, r8
 1840 00de 3246     		mov	r2, r6
 1841 00e0 5146     		mov	r1, r10
 1842 00e2 1E48     		ldr	r0, .L158+28
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 51


 1843 00e4 FFF7FEFF 		bl	printf
 1844              	.LVL237:
 1845              	.LBB172:
 1846              	.LBB173:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1847              		.loc 4 45 0
 1848 00e8 2369     		ldr	r3, [r4, #16]
 1849              	.LVL238:
 1850              	.LBE173:
 1851              	.LBE172:
  62:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
 1852              		.loc 2 62 0
 1853 00ea 9D42     		cmp	r5, r3
 1854 00ec 12DD     		ble	.L157
  71:Core/Src/robot/robot_functions.cpp **** 		return false;
 1855              		.loc 2 71 0
 1856 00ee 0020     		movs	r0, #0
 1857              	.L153:
  73:Core/Src/robot/robot_functions.cpp **** }
 1858              		.loc 2 73 0
 1859 00f0 04B0     		add	sp, sp, #16
 1860              	.LCFI36:
 1861              		.cfi_remember_state
 1862              		.cfi_def_cfa_offset 40
 1863              		@ sp needed
 1864 00f2 BDEC028B 		vldm	sp!, {d8}
 1865              	.LCFI37:
 1866              		.cfi_restore 80
 1867              		.cfi_restore 81
 1868              		.cfi_def_cfa_offset 32
 1869 00f6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1870              	.LVL239:
 1871              	.L156:
 1872              	.LCFI38:
 1873              		.cfi_restore_state
  44:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
 1874              		.loc 2 44 0
 1875 00fa 144B     		ldr	r3, .L158+12
 1876 00fc 0022     		movs	r2, #0
 1877 00fe 1A70     		strb	r2, [r3]
  45:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 1878              		.loc 2 45 0
 1879 0100 9FED170A 		vldr.32	s0, .L158+32
 1880 0104 1748     		ldr	r0, .L158+36
 1881 0106 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1882              	.LVL240:
 1883 010a A1E7     		b	.L150
 1884              	.L151:
  53:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = false;
 1885              		.loc 2 53 0
 1886 010c 0F4B     		ldr	r3, .L158+12
 1887 010e 0022     		movs	r2, #0
 1888 0110 1A70     		strb	r2, [r3]
 1889 0112 98E7     		b	.L152
 1890              	.LVL241:
 1891              	.L157:
  64:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 52


 1892              		.loc 2 64 0
 1893 0114 9FED128A 		vldr.32	s16, .L158+32
 1894 0118 B0EE480A 		vmov.f32	s0, s16
 1895 011c 2046     		mov	r0, r4
 1896 011e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1897              	.LVL242:
  65:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1898              		.loc 2 65 0
 1899 0122 B0EE480A 		vmov.f32	s0, s16
 1900 0126 04F15800 		add	r0, r4, #88
 1901 012a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1902              	.LVL243:
  66:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1903              		.loc 2 66 0
 1904 012e B0EE480A 		vmov.f32	s0, s16
 1905 0132 0C48     		ldr	r0, .L158+36
 1906 0134 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1907              	.LVL244:
  67:Core/Src/robot/robot_functions.cpp **** 		return true;
 1908              		.loc 2 67 0
 1909 0138 0120     		movs	r0, #1
 1910 013a D9E7     		b	.L153
 1911              	.L159:
 1912 013c AFF30080 		.align	3
 1913              	.L158:
 1914 0140 182D4454 		.word	1413754136
 1915 0144 FB210940 		.word	1074340347
 1916 0148 00100240 		.word	1073876992
 1917 014c 00000000 		.word	USE_IMU_FLAG
 1918 0150 00000000 		.word	leg
 1919 0154 00000000 		.word	.LANCHOR2
 1920 0158 00003443 		.word	1127481344
 1921 015c 00000000 		.word	.LC5
 1922 0160 00000000 		.word	0
 1923 0164 00000000 		.word	steering
 1924 0168 399D52A2 		.word	-1571644103
 1925 016c 46DF913F 		.word	1066524486
 1926              		.cfi_endproc
 1927              	.LFE492:
 1929              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1930              		.align	1
 1931              		.syntax unified
 1932              		.thumb
 1933              		.thumb_func
 1934              		.fpu fpv4-sp-d16
 1936              	_GLOBAL__sub_I_initial_angle:
 1937              	.LFB516:
 1938              		.loc 2 426 0
 1939              		.cfi_startproc
 1940              		@ args = 0, pretend = 0, frame = 0
 1941              		@ frame_needed = 0, uses_anonymous_args = 0
 1942 0000 08B5     		push	{r3, lr}
 1943              	.LCFI39:
 1944              		.cfi_def_cfa_offset 8
 1945              		.cfi_offset 3, -8
 1946              		.cfi_offset 14, -4
 1947              		.loc 2 426 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 53


 1948 0002 4FF6FF71 		movw	r1, #65535
 1949 0006 0120     		movs	r0, #1
 1950 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1951              	.LVL245:
 1952 000c 08BD     		pop	{r3, pc}
 1953              		.cfi_endproc
 1954              	.LFE516:
 1956              		.section	.init_array,"aw",%init_array
 1957              		.align	2
 1958 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1959              		.global	tolerance
 1960              		.global	temp_robot_angle
 1961              		.global	robot_angle
 1962              		.global	STEERING_FLAG
 1963              		.global	start_time
 1964              		.global	summation_angle
 1965              		.global	curr_angle
 1966              		.global	initial_angle
 1967              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1968              		.set	.LANCHOR8,. + 0
 1971              	STEERING_FLAG:
 1972 0000 00       		.space	1
 1973              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1974              		.set	.LANCHOR5,. + 0
 1977              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1978 0000 00       		.space	1
 1979              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1980              		.set	.LANCHOR6,. + 0
 1983              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1984 0000 00       		.space	1
 1985              		.section	.bss.curr_angle,"aw",%nobits
 1986              		.align	2
 1987              		.set	.LANCHOR1,. + 0
 1990              	curr_angle:
 1991 0000 00000000 		.space	12
 1991      00000000 
 1991      00000000 
 1992              		.section	.bss.initial_angle,"aw",%nobits
 1993              		.align	2
 1994              		.set	.LANCHOR0,. + 0
 1997              	initial_angle:
 1998 0000 00000000 		.space	12
 1998      00000000 
 1998      00000000 
 1999              		.section	.bss.robot_angle,"aw",%nobits
 2000              		.align	2
 2001              		.set	.LANCHOR2,. + 0
 2004              	robot_angle:
 2005 0000 00000000 		.space	4
 2006              		.section	.bss.start_time,"aw",%nobits
 2007              		.align	2
 2008              		.set	.LANCHOR7,. + 0
 2011              	start_time:
 2012 0000 00000000 		.space	4
 2013              		.section	.bss.summation_angle,"aw",%nobits
 2014              		.align	2
 2015              		.set	.LANCHOR3,. + 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 54


 2018              	summation_angle:
 2019 0000 00000000 		.space	4
 2020              		.section	.bss.temp_robot_angle,"aw",%nobits
 2021              		.align	2
 2022              		.set	.LANCHOR4,. + 0
 2025              	temp_robot_angle:
 2026 0000 00000000 		.space	4
 2027              		.section	.data.tolerance,"aw",%progbits
 2028              		.align	2
 2031              	tolerance:
 2032 0000 5077563D 		.word	1029076816
 2033              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 2034              		.align	2
 2035              	.LC2:
 2036 0000 0A496E69 		.ascii	"\012Initializing_Leg_Orientation\011\000"
 2036      7469616C 
 2036      697A696E 
 2036      675F4C65 
 2036      675F4F72 
 2037 001f 00       		.space	1
 2038              	.LC3:
 2039 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 2039      6974696E 
 2039      675F5468 
 2039      655F4C65 
 2039      67200900 
 2040              	.LC4:
 2041 0034 09496E69 		.ascii	"\011Initializing_Steering_Orientation\011 %d \011 %"
 2041      7469616C 
 2041      697A696E 
 2041      675F5374 
 2041      65657269 
 2042 005e 6400     		.ascii	"d\000"
 2043              		.section	.rodata._Z21calculate_robot_anglev.str1.4,"aMS",%progbits,1
 2044              		.align	2
 2045              	.LC0:
 2046 0000 09256409 		.ascii	"\011%d\011%d\000"
 2046      256400
 2047              		.section	.rodata._Z28initialize_steering_positionv.str1.4,"aMS",%progbits,1
 2048              		.align	2
 2049              	.LC1:
 2050 0000 0A616E67 		.ascii	"\012angle = %d\011\000"
 2050      6C65203D 
 2050      20256409 
 2050      00
 2051              		.section	.rodata._Z2goif.str1.4,"aMS",%progbits,1
 2052              		.align	2
 2053              	.LC5:
 2054 0000 20737465 		.ascii	" steps = %d\011 robot_angle = %d\011 leg_1_angle = "
 2054      7073203D 
 2054      20256409 
 2054      20726F62 
 2054      6F745F61 
 2055 002d 25640920 		.ascii	"%d\011 leg_2_angle = %d\000"
 2055      6C65675F 
 2055      325F616E 
 2055      676C6520 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 55


 2055      3D202564 
 2056              		.text
 2057              	.Letext0:
 2058              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2059              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2060              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2061              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2062              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2063              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2064              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2065              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 2066              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2067              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2068              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2069              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2070              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2071              		.file 19 "Core/Inc/periphs/tim.h"
 2072              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2073              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2074              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2075              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2076              		.file 24 "Core/Inc/devs/motor.h"
 2077              		.file 25 "Core/Inc/devs/encoder.h"
 2078              		.file 26 "Core/Inc/utils/pid_algorithms.h"
 2079              		.file 27 "Core/Inc/devs/limit_switch.h"
 2080              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2081              		.file 29 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2082              		.file 30 "<built-in>"
 2083              		.file 31 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 robot_functions.cpp
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:163    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:170    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:264    .text._Z9set_anglef:00000088 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:278    .text._Z22correct_steering_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:285    .text._Z22correct_steering_anglef:00000000 _Z22correct_steering_anglef
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:368    .text._Z22correct_steering_anglef:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:382    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:389    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:495    .text._Z13move_steeringif:00000088 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:509    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:516    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:723    .text._Z21calculate_robot_anglev:00000140 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:739    .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:746    .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:917    .text._Z23initialize_leg_positionv:000000d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:932    .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:939    .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1022   .text._Z28initialize_steering_positionv:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1036   .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1043   .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1232   .text._Z19initialize_positionv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1246   .text._Z11getup_n_runv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1253   .text._Z11getup_n_runv:00000000 _Z11getup_n_runv
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1372   .text._Z11getup_n_runv:000000a0 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1384   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1391   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1443   .text._Z15calculate_datasv:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1450   .text._Z14motion_profilefff:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1457   .text._Z14motion_profilefff:00000000 _Z14motion_profilefff
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1533   .text._Z14motion_profilefff:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1539   .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1546   .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1678   .text._Z8move_legif:000000b0 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1688   .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1695   .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1914   .text._Z2goif:00000140 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1930   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1936   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1957   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2031   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2025   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2004   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1971   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2011   .bss.start_time:00000000 start_time
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2018   .bss.summation_angle:00000000 summation_angle
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1990   .bss.curr_angle:00000000 curr_angle
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1997   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1972   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1977   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s 			page 57


C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1978   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1983   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1984   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1986   .bss.curr_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:1993   .bss.initial_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2000   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2007   .bss.start_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2014   .bss.summation_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2021   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2028   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2034   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2044   .rodata._Z21calculate_robot_anglev.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2048   .rodata._Z28initialize_steering_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccPnxeLf.s:2052   .rodata._Z2goif.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN8steering9set_angleEf
steering
__aeabi_dcmple
__aeabi_dmul
__aeabi_dadd
_ZN3leg9is_raisedEv
_ZN8steering9set_omegaEf
steps
leg
__aeabi_d2iz
_ZN3leg26is_raised_without_deadzoneEv
_ZN7encoder9get_angleEv
printf
USE_IMU_FLAG
_ZN3leg9set_omegaEf
HAL_GetTick
HAL_GPIO_WritePin
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
_ZN7encoder16get_actual_angleEv
HAL_GPIO_ReadPin
