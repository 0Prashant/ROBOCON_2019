ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot_functions.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB509:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE509:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB515:
  50              		.file 2 "Core/Src/robot/robot_functions.cpp"
   1:Core/Src/robot/robot_functions.cpp **** #include "robot_functions.h"
   2:Core/Src/robot/robot_functions.cpp **** 
   3:Core/Src/robot/robot_functions.cpp **** extern leg leg[2];
   4:Core/Src/robot/robot_functions.cpp **** extern steering steering;
   5:Core/Src/robot/robot_functions.cpp **** extern bool USE_IMU_FLAG;
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
   8:Core/Src/robot/robot_functions.cpp **** 
   9:Core/Src/robot/robot_functions.cpp **** static const float robot_speed = 7;      //17 is the maximum with safe zone
  10:Core/Src/robot/robot_functions.cpp **** static const float steering_speed = 0.8; // 0.875 is the 100%
  11:Core/Src/robot/robot_functions.cpp **** static const float steering_angle_limit = 8.5 * PI / 180;
  12:Core/Src/robot/robot_functions.cpp **** 
  13:Core/Src/robot/robot_functions.cpp **** extern int steps[7];
  14:Core/Src/robot/robot_functions.cpp **** extern float angles[7];
  15:Core/Src/robot/robot_functions.cpp **** float summation_angle = 0;
  16:Core/Src/robot/robot_functions.cpp **** uint32_t start_time;
  17:Core/Src/robot/robot_functions.cpp **** 
  18:Core/Src/robot/robot_functions.cpp **** bool STEERING_FLAG = false;
  19:Core/Src/robot/robot_functions.cpp **** 
  20:Core/Src/robot/robot_functions.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  21:Core/Src/robot/robot_functions.cpp **** float tolerance = 3 * PI / 180;
  22:Core/Src/robot/robot_functions.cpp **** 
  23:Core/Src/robot/robot_functions.cpp **** /*
  24:Core/Src/robot/robot_functions.cpp ****  * \brief This function makes the robot to reach the provided steps and angle.
  25:Core/Src/robot/robot_functions.cpp ****  * \brief this function needs to be called every 10 ms unti it reaches the desired position.
  26:Core/Src/robot/robot_functions.cpp ****  * \params: number of steps and angle in degree the robot has to reach.
  27:Core/Src/robot/robot_functions.cpp ****  * \returns true if robot reaches to the provided steps and angle.
  28:Core/Src/robot/robot_functions.cpp ****  * The angles that are caalibrated in degrees needs to be converted to radian.
  29:Core/Src/robot/robot_functions.cpp ****  * The function move_leg() is called at the beginning which moves the leg upto the desired point.
  30:Core/Src/robot/robot_functions.cpp ****  * There are two parameters inside this function move_leg(), the steps parameter is used whereas th
  31:Core/Src/robot/robot_functions.cpp ****  * The condition is if statement is to ensure that the robot is not in sand dune and it has not rea
  32:Core/Src/robot/robot_functions.cpp ****  * Whenever the robot reaches the sand dune the number of steps is declared to 100, so the step != 
  33:Core/Src/robot/robot_functions.cpp ****  * The function calculate_robot_angle() calculates its relative position from the initial state and
  34:Core/Src/robot/robot_functions.cpp ****  * This function operates until the desired steps and desired angles is reached. This is ensured by
  35:Core/Src/robot/robot_functions.cpp ****  * After the desired step and angle is reached, the function returns True.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 3


  36:Core/Src/robot/robot_functions.cpp **** */
  37:Core/Src/robot/robot_functions.cpp **** bool go(int step, float angle)
  38:Core/Src/robot/robot_functions.cpp **** {
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
  42:Core/Src/robot/robot_functions.cpp **** 	{
  43:Core/Src/robot/robot_functions.cpp **** 		
  44:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
  45:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
  46:Core/Src/robot/robot_functions.cpp **** 	}
  47:Core/Src/robot/robot_functions.cpp **** 	else
  48:Core/Src/robot/robot_functions.cpp **** 	{
  49:Core/Src/robot/robot_functions.cpp **** 		if(HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin)==GPIO_PIN_RESET){
  50:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = true;
  51:Core/Src/robot/robot_functions.cpp **** 		}
  52:Core/Src/robot/robot_functions.cpp **** 		else{
  53:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = false;
  54:Core/Src/robot/robot_functions.cpp **** 		}
  55:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
  56:Core/Src/robot/robot_functions.cpp **** 	}
  57:Core/Src/robot/robot_functions.cpp **** 	// printf(" steps = %d\t robot_angle = %d\t curr_angle = %d\t", (int)(leg[0].get_steps()), (int)(r
  58:Core/Src/robot/robot_functions.cpp **** 	printf("\n steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d", (int)(leg[0].get_
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
  60:Core/Src/robot/robot_functions.cpp **** 
  61:Core/Src/robot/robot_functions.cpp **** 	// if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
  62:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
  63:Core/Src/robot/robot_functions.cpp **** 	{
  64:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
  65:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
  66:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
  67:Core/Src/robot/robot_functions.cpp **** 		return true;
  68:Core/Src/robot/robot_functions.cpp **** 	}
  69:Core/Src/robot/robot_functions.cpp **** 	else
  70:Core/Src/robot/robot_functions.cpp **** 	{
  71:Core/Src/robot/robot_functions.cpp **** 		return false;
  72:Core/Src/robot/robot_functions.cpp **** 	}
  73:Core/Src/robot/robot_functions.cpp **** }
  74:Core/Src/robot/robot_functions.cpp **** /*
  75:Core/Src/robot/robot_functions.cpp ****  *The function move_leg() is the basic function to give speed to the motor.
  76:Core/Src/robot/robot_functions.cpp ****  *\return params: void
  77:Core/Src/robot/robot_functions.cpp ****  *\input parameter: steps, angle
  78:Core/Src/robot/robot_functions.cpp ****  *This function takes two input parameters: step and angle. Although the parameter angle is not use
  79:Core/Src/robot/robot_functions.cpp ****  *The variable leg_speed stores the value of speed. When the robot is in sand_dune region, the spee
  80:Core/Src/robot/robot_functions.cpp ****  *The variable del_speed stores the value of difference in speed in case where the legs are not in 
  81:Core/Src/robot/robot_functions.cpp ****  *If the legs are not in 180 degrees phase difference, some calculations need to be made in order t
  82:Core/Src/robot/robot_functions.cpp ****  *This is done by evaluating the angles every time. Whenever the returned angle is not in the desir
  83:Core/Src/robot/robot_functions.cpp ****  *difference is the two leg angles multiplied by leg_speed which is again multiplied by the factor 
  84:Core/Src/robot/robot_functions.cpp ****  *Following the above reference, the leg_speed is calculated in closed loop basis.
  85:Core/Src/robot/robot_functions.cpp **** */
  86:Core/Src/robot/robot_functions.cpp **** void move_leg(int step, float angle)
  87:Core/Src/robot/robot_functions.cpp **** {
  88:Core/Src/robot/robot_functions.cpp **** 	float del_speed = 0;
  89:Core/Src/robot/robot_functions.cpp **** 	float leg_speed = robot_speed;
  90:Core/Src/robot/robot_functions.cpp **** 
  91:Core/Src/robot/robot_functions.cpp **** 	//Setting the slow speed in sand dune and tussok
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step==steps[6])) ? 4 : robot_speed;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 4


  93:Core/Src/robot/robot_functions.cpp **** 
  94:Core/Src/robot/robot_functions.cpp **** 	printf("\t%d\t", (int)leg_speed);
  95:Core/Src/robot/robot_functions.cpp **** 
  96:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
  97:Core/Src/robot/robot_functions.cpp **** 	del_speed = 3 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
  98:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
  99:Core/Src/robot/robot_functions.cpp **** 	{
 100:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 101:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 102:Core/Src/robot/robot_functions.cpp **** 	}
 103:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 104:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 105:Core/Src/robot/robot_functions.cpp **** }
 106:Core/Src/robot/robot_functions.cpp **** 
 107:Core/Src/robot/robot_functions.cpp **** /*
 108:Core/Src/robot/robot_functions.cpp ****  *The function move_steering() is concerned with moving the steering to certain angle with certain 
 109:Core/Src/robot/robot_functions.cpp ****  *Return patameter: void
 110:Core/Src/robot/robot_functions.cpp ****  *Input parameters: step, angle
 111:Core/Src/robot/robot_functions.cpp ****  *During initialization, the summation_angle is set to 0. After the robot starts to move, there is 
 112:Core/Src/robot/robot_functions.cpp ****  * This error of course needs to be minimized. This minimization is done by  summing all the drifts
 113:Core/Src/robot/robot_functions.cpp ****  * that it gives to the robot. Whenever the steering sets the angle for robot, this error is also a
 114:Core/Src/robot/robot_functions.cpp ****  * The robot changes the angle whenever the outside leg is raised. For the robot and leg to be in t
 115:Core/Src/robot/robot_functions.cpp ****  * the outside leg is in fallen state.
 116:Core/Src/robot/robot_functions.cpp **** */
 117:Core/Src/robot/robot_functions.cpp **** void move_steering(int step, float angle)
 118:Core/Src/robot/robot_functions.cpp **** {
 119:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 120:Core/Src/robot/robot_functions.cpp **** 	{
 121:Core/Src/robot/robot_functions.cpp **** 		summation_angle += robot_angle;
 122:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 123:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 124:Core/Src/robot/robot_functions.cpp **** 		printf("\tstep_entered\t");
 125:Core/Src/robot/robot_functions.cpp **** 	}
 126:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 127:Core/Src/robot/robot_functions.cpp **** 	{
 128:Core/Src/robot/robot_functions.cpp **** 		// printf("  raised  ");
 129:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 130:Core/Src/robot/robot_functions.cpp **** 	}
 131:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 132:Core/Src/robot/robot_functions.cpp **** 	{
 133:Core/Src/robot/robot_functions.cpp **** 		// printf("  fallen  ");
 134:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 135:Core/Src/robot/robot_functions.cpp **** 	}
 136:Core/Src/robot/robot_functions.cpp **** 	else
 137:Core/Src/robot/robot_functions.cpp **** 	{
 138:Core/Src/robot/robot_functions.cpp **** 		// printf("  nothing  ");
 139:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 140:Core/Src/robot/robot_functions.cpp **** 	}
 141:Core/Src/robot/robot_functions.cpp **** }
 142:Core/Src/robot/robot_functions.cpp **** /*
 143:Core/Src/robot/robot_functions.cpp ****  * The function set_angle() is concerned with setting the angle for steering.
 144:Core/Src/robot/robot_functions.cpp ****  * Return params : void
 145:Core/Src/robot/robot_functions.cpp ****  * Input patams : angle
 146:Core/Src/robot/robot_functions.cpp ****  * The variable del_angle stores the differnece in given input angle and the current angle returned
 147:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns positive value, it depicts that the robot has already reached the angl
 148:Core/Src/robot/robot_functions.cpp ****  * TO correct this to the desired angle the angle needs to be set.
 149:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns a negative value, it depicts that the robot has not reached the desire
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 5


 150:Core/Src/robot/robot_functions.cpp **** */
 151:Core/Src/robot/robot_functions.cpp **** void set_angle(float angle)
 152:Core/Src/robot/robot_functions.cpp **** {
 153:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 154:Core/Src/robot/robot_functions.cpp **** 	// printf("\tdel_angle = %d\t", (int)(del_angle));
 155:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 156:Core/Src/robot/robot_functions.cpp **** 	{
 157:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 158:Core/Src/robot/robot_functions.cpp **** 	}
 159:Core/Src/robot/robot_functions.cpp **** 	else
 160:Core/Src/robot/robot_functions.cpp **** 	{
 161:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 162:Core/Src/robot/robot_functions.cpp **** 	}
 163:Core/Src/robot/robot_functions.cpp **** 	//*/
 164:Core/Src/robot/robot_functions.cpp **** }
 165:Core/Src/robot/robot_functions.cpp **** /*
 166:Core/Src/robot/robot_functions.cpp ****  * This function correct_steering_angle() is called whenever the outside leg is fallen and the stee
 167:Core/Src/robot/robot_functions.cpp ****  * return param: void
 168:Core/Src/robot/robot_functions.cpp ****  * input params: angle
 169:Core/Src/robot/robot_functions.cpp ****  * same as set_angle function. the difference is this function is called whenever the leg is not ra
 170:Core/Src/robot/robot_functions.cpp ****  * the leg is raised.
 171:Core/Src/robot/robot_functions.cpp **** */
 172:Core/Src/robot/robot_functions.cpp **** void correct_steering_angle(float angle)
 173:Core/Src/robot/robot_functions.cpp **** {
 174:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 175:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (2*steering_angle_limit * 180 / PI))
 176:Core/Src/robot/robot_functions.cpp **** 	{
 177:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 178:Core/Src/robot/robot_functions.cpp **** 		// printf("center_alligned\t");
 179:Core/Src/robot/robot_functions.cpp **** 	}
 180:Core/Src/robot/robot_functions.cpp **** 	else
 181:Core/Src/robot/robot_functions.cpp **** 	{
 182:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 183:Core/Src/robot/robot_functions.cpp **** 		// printf("peak_alligned\t");
 184:Core/Src/robot/robot_functions.cpp **** 	}
 185:Core/Src/robot/robot_functions.cpp **** 	//*/
 186:Core/Src/robot/robot_functions.cpp **** }
 187:Core/Src/robot/robot_functions.cpp **** /**
 188:Core/Src/robot/robot_functions.cpp ****  * This function calculate_robot_angle() calculates the relative robot angle from the initial posit
 189:Core/Src/robot/robot_functions.cpp ****  * to zero and all other angles are taken with reference to this initial angle.
 190:Core/Src/robot/robot_functions.cpp ****  * return param : void
 191:Core/Src/robot/robot_functions.cpp ****  * /params input parameters : void
 192:Core/Src/robot/robot_functions.cpp ****  * The variable robot_angle stores the realtive value of robot angle from the original position
 193:Core/Src/robot/robot_functions.cpp ****  * The temp_robot_angle is just the temporary variable.
 194:Core/Src/robot/robot_functions.cpp **** */
 195:Core/Src/robot/robot_functions.cpp **** void calculate_robot_angle()
 196:Core/Src/robot/robot_functions.cpp **** {
 197:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 198:Core/Src/robot/robot_functions.cpp **** 	{
 199:Core/Src/robot/robot_functions.cpp **** 		// if (!(leg[0].is_raised() == Leg_condition::RAISED)){
 200:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 201:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 202:Core/Src/robot/robot_functions.cpp **** 		// }
 203:Core/Src/robot/robot_functions.cpp **** 		// printf("\tusing IMU\t");
 204:Core/Src/robot/robot_functions.cpp **** 	}
 205:Core/Src/robot/robot_functions.cpp **** 	else
 206:Core/Src/robot/robot_functions.cpp **** 	{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 6


 207:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 208:Core/Src/robot/robot_functions.cpp **** 		{
 209:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 210:Core/Src/robot/robot_functions.cpp **** 			// printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 211:Core/Src/robot/robot_functions.cpp **** 		}
 212:Core/Src/robot/robot_functions.cpp **** 		else
 213:Core/Src/robot/robot_functions.cpp **** 		{
 214:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 215:Core/Src/robot/robot_functions.cpp **** 			// printf("\t%d\t%d", (int)(steering.get_angle()*180/PI), (int)(temp_robot_angle*180/PI));
 216:Core/Src/robot/robot_functions.cpp **** 		}
 217:Core/Src/robot/robot_functions.cpp **** 		// printf("\tusing ENCODER\t");
 218:Core/Src/robot/robot_functions.cpp **** 	}
 219:Core/Src/robot/robot_functions.cpp **** }
 220:Core/Src/robot/robot_functions.cpp **** 
 221:Core/Src/robot/robot_functions.cpp **** /**
 222:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the robot in erected position at the start of the game.
 223:Core/Src/robot/robot_functions.cpp ****  * \bug remember to face towards anticlockwise direction from the 0 position at the start of the ga
 224:Core/Src/robot/robot_functions.cpp ****  * \params void
 225:Core/Src/robot/robot_functions.cpp ****  * \returns void
 226:Core/Src/robot/robot_functions.cpp ****  */
 227:Core/Src/robot/robot_functions.cpp **** 
 228:Core/Src/robot/robot_functions.cpp **** void initialize_position(void)
 229:Core/Src/robot/robot_functions.cpp **** {
 230:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 231:Core/Src/robot/robot_functions.cpp **** 	while (true)
 232:Core/Src/robot/robot_functions.cpp **** 	{
 233:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 234:Core/Src/robot/robot_functions.cpp **** 		{
 235:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 236:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 237:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 238:Core/Src/robot/robot_functions.cpp **** 				break;
 239:Core/Src/robot/robot_functions.cpp **** 		}
 240:Core/Src/robot/robot_functions.cpp **** 	}
 241:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 242:Core/Src/robot/robot_functions.cpp **** 	{
 243:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 244:Core/Src/robot/robot_functions.cpp **** 		{
 245:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 246:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 247:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 248:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 249:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 250:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 251:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_actual_angle(90 * PI / 180);
 252:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_actual_angle(90 * PI / 180);
 253:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 254:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 255:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 256:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 257:Core/Src/robot/robot_functions.cpp **** 		}
 258:Core/Src/robot/robot_functions.cpp **** 	}
 259:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 260:Core/Src/robot/robot_functions.cpp **** 	while (true)
 261:Core/Src/robot/robot_functions.cpp **** 	{
 262:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 263:Core/Src/robot/robot_functions.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 7


 264:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 265:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 266:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 267:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 268:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 269:Core/Src/robot/robot_functions.cpp **** 				break;
 270:Core/Src/robot/robot_functions.cpp **** 		}
 271:Core/Src/robot/robot_functions.cpp **** 	}
 272:Core/Src/robot/robot_functions.cpp **** }
 273:Core/Src/robot/robot_functions.cpp **** 
 274:Core/Src/robot/robot_functions.cpp **** /**
 275:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the leg in erected position at the start of the game.
 276:Core/Src/robot/robot_functions.cpp ****  * \params void
 277:Core/Src/robot/robot_functions.cpp ****  * \returns true if leg is erected.
 278:Core/Src/robot/robot_functions.cpp ****  */
 279:Core/Src/robot/robot_functions.cpp **** bool initialize_leg_position(void)
 280:Core/Src/robot/robot_functions.cpp **** {
 281:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 282:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 283:Core/Src/robot/robot_functions.cpp **** 	static bool leg0_flag = false;
 284:Core/Src/robot/robot_functions.cpp **** 	static bool leg1_flag = false;
 285:Core/Src/robot/robot_functions.cpp **** 
 286:Core/Src/robot/robot_functions.cpp **** 	// printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 287:Core/Src/robot/robot_functions.cpp **** 	// , leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].ge
 288:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 289:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 290:Core/Src/robot/robot_functions.cpp **** 	{
 291:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 292:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 293:Core/Src/robot/robot_functions.cpp **** 	}
 294:Core/Src/robot/robot_functions.cpp **** 	else
 295:Core/Src/robot/robot_functions.cpp **** 	{
 296:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 297:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 298:Core/Src/robot/robot_functions.cpp **** 	}
 299:Core/Src/robot/robot_functions.cpp **** 
 300:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 301:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 302:Core/Src/robot/robot_functions.cpp **** 	{
 303:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 304:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 305:Core/Src/robot/robot_functions.cpp **** 	}
 306:Core/Src/robot/robot_functions.cpp **** 	else
 307:Core/Src/robot/robot_functions.cpp **** 	{
 308:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 309:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 310:Core/Src/robot/robot_functions.cpp **** 	}
 311:Core/Src/robot/robot_functions.cpp **** 
 312:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 313:Core/Src/robot/robot_functions.cpp **** 	{
 314:Core/Src/robot/robot_functions.cpp **** 
 315:Core/Src/robot/robot_functions.cpp **** 		return true;
 316:Core/Src/robot/robot_functions.cpp **** 	}
 317:Core/Src/robot/robot_functions.cpp **** 	else
 318:Core/Src/robot/robot_functions.cpp **** 	{
 319:Core/Src/robot/robot_functions.cpp **** 		return false;
 320:Core/Src/robot/robot_functions.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 8


 321:Core/Src/robot/robot_functions.cpp **** }
 322:Core/Src/robot/robot_functions.cpp **** 
 323:Core/Src/robot/robot_functions.cpp **** /**
 324:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 325:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the steering in center position at the start of the game.
 326:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 327:Core/Src/robot/robot_functions.cpp ****  * \params void
 328:Core/Src/robot/robot_functions.cpp ****  * \returns true if reached to 0 angle.
 329:Core/Src/robot/robot_functions.cpp ****  */
 330:Core/Src/robot/robot_functions.cpp **** bool initialize_steering_position(void)
 331:Core/Src/robot/robot_functions.cpp **** {
 332:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 333:Core/Src/robot/robot_functions.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 334:Core/Src/robot/robot_functions.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 335:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 336:Core/Src/robot/robot_functions.cpp **** 	{
 337:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 338:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 339:Core/Src/robot/robot_functions.cpp **** 		return true;
 340:Core/Src/robot/robot_functions.cpp **** 	}
 341:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 342:Core/Src/robot/robot_functions.cpp **** 	{
 343:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 344:Core/Src/robot/robot_functions.cpp **** 		return true;
 345:Core/Src/robot/robot_functions.cpp **** 	}
 346:Core/Src/robot/robot_functions.cpp **** 	else
 347:Core/Src/robot/robot_functions.cpp **** 	{
 348:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 349:Core/Src/robot/robot_functions.cpp **** 		return false;
 350:Core/Src/robot/robot_functions.cpp **** 	}
 351:Core/Src/robot/robot_functions.cpp **** }
 352:Core/Src/robot/robot_functions.cpp **** 
 353:Core/Src/robot/robot_functions.cpp **** bool getup_n_run()
 354:Core/Src/robot/robot_functions.cpp **** {
 355:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 356:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 357:Core/Src/robot/robot_functions.cpp **** 
 358:Core/Src/robot/robot_functions.cpp **** 	// printf("\tInitializing_Leg_Orientation_GETUP\t");
 359:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(0);
 360:Core/Src/robot/robot_functions.cpp **** 	// printf(" \t%d \t%d", (int)(leg[1].get_angle()), (int)(leg_initial_position));
 361:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 362:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 363:Core/Src/robot/robot_functions.cpp **** 	{
 364:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 365:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_actual_angle(90 * PI / 180);
 366:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_actual_angle(90 * PI / 180);
 367:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 368:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 369:Core/Src/robot/robot_functions.cpp **** 		// printf("\tIF\t");
 370:Core/Src/robot/robot_functions.cpp **** 		return true;
 371:Core/Src/robot/robot_functions.cpp **** 	}
 372:Core/Src/robot/robot_functions.cpp **** 	else
 373:Core/Src/robot/robot_functions.cpp **** 	{
 374:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 375:Core/Src/robot/robot_functions.cpp **** 		// printf("\tELSE\t");
 376:Core/Src/robot/robot_functions.cpp **** 		return false;
 377:Core/Src/robot/robot_functions.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 9


 378:Core/Src/robot/robot_functions.cpp **** 
 379:Core/Src/robot/robot_functions.cpp **** }
 380:Core/Src/robot/robot_functions.cpp **** 
 381:Core/Src/robot/robot_functions.cpp **** /**
 382:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 383:Core/Src/robot/robot_functions.cpp ****  * \brief This function calculates all the datas including the motor omegas, orientation and angles
 384:Core/Src/robot/robot_functions.cpp ****  * \remarks remember to call this function only once in every 10 ms.
 385:Core/Src/robot/robot_functions.cpp ****  * \params void
 386:Core/Src/robot/robot_functions.cpp ****  * \returns void
 387:Core/Src/robot/robot_functions.cpp ****  */
 388:Core/Src/robot/robot_functions.cpp **** void calculate_datas()
 389:Core/Src/robot/robot_functions.cpp **** {
 390:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 391:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 392:Core/Src/robot/robot_functions.cpp **** 	steering.calculate_omega();
 393:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 394:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 395:Core/Src/robot/robot_functions.cpp **** 	// printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 396:Core/Src/robot/robot_functions.cpp **** 	// printf("\trobot_angle = %d\t", (int)(robot_angle*180/PI));
 397:Core/Src/robot/robot_functions.cpp **** }
 398:Core/Src/robot/robot_functions.cpp **** 
 399:Core/Src/robot/robot_functions.cpp **** float motion_profile(float angle_in_degrees, float min_speed, float max_speed)
 400:Core/Src/robot/robot_functions.cpp **** {
 401:Core/Src/robot/robot_functions.cpp **** 	float damping_angle = 30;
 402:Core/Src/robot/robot_functions.cpp **** 	float speed = 0;
 403:Core/Src/robot/robot_functions.cpp **** 	min_speed = 1.1;
 404:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 405:Core/Src/robot/robot_functions.cpp **** 	{
 406:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 407:Core/Src/robot/robot_functions.cpp **** 		// max_speed = 10;
 408:Core/Src/robot/robot_functions.cpp **** 	}
 409:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 410:Core/Src/robot/robot_functions.cpp **** 	{
 411:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 412:Core/Src/robot/robot_functions.cpp **** 		// printf("condition1");
 413:Core/Src/robot/robot_functions.cpp **** 	}
 414:Core/Src/robot/robot_functions.cpp **** 
 415:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 416:Core/Src/robot/robot_functions.cpp **** 	{
 417:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 418:Core/Src/robot/robot_functions.cpp **** 		// printf("conditionelseif");
 419:Core/Src/robot/robot_functions.cpp **** 	}
 420:Core/Src/robot/robot_functions.cpp **** 
 421:Core/Src/robot/robot_functions.cpp **** 	else
 422:Core/Src/robot/robot_functions.cpp **** 	{
 423:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 424:Core/Src/robot/robot_functions.cpp **** 		// printf("else");
 425:Core/Src/robot/robot_functions.cpp **** 	}
 426:Core/Src/robot/robot_functions.cpp **** 	// printf("\tSpeed = %d", (int)(speed*100));
 427:Core/Src/robot/robot_functions.cpp **** 	return speed;
 428:Core/Src/robot/robot_functions.cpp **** }...
  51              		.loc 2 428 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 10


  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 428 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 428 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB95:
  75              	.LBB96:
  76              	.LBB97:
  77              	.LBB98:
  78              	.LBB99:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE99:
  86              	.LBE98:
  87              	.LBB100:
  88              	.LBB101:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE101:
  93              	.LBE100:
  94              	.LBB102:
  95              	.LBB103:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE103:
 100              	.LBE102:
 101              	.LBE97:
 102              	.LBE96:
 103              	.LBE95:
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
 104              		.loc 2 6 0
 105 001a 084E     		ldr	r6, .L9+4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 11


 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB104:
 113              	.LBB105:
 114              	.LBB106:
 115              	.LBB107:
 116              	.LBB108:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE108:
 122              	.LBE107:
 123              	.LBB109:
 124              	.LBB110:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE110:
 129              	.LBE109:
 130              	.LBB111:
 131              	.LBB112:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE112:
 136              	.LBE111:
 137              	.LBE106:
 138              	.LBE105:
 139              	.LBE104:
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
 140              		.loc 2 7 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 428 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE515:
 157              		.global	__aeabi_f2d
 158              		.global	__aeabi_ddiv
 159              		.global	__aeabi_d2f
 160              		.global	__aeabi_dcmpgt
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 12


 161              		.global	__aeabi_dcmplt
 162              		.section	.text._Z9set_anglef,"ax",%progbits
 163              		.align	1
 164              		.global	_Z9set_anglef
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	_Z9set_anglef:
 171              	.LFB495:
 152:Core/Src/robot/robot_functions.cpp **** {
 172              		.loc 2 152 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL13:
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 182 0002 2DED028B 		vpush.64	{d8}
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 80, -16
 186              		.cfi_offset 81, -12
 153:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 187              		.loc 2 153 0
 188 0006 264B     		ldr	r3, .L25+24
 189 0008 D3ED007A 		vldr.32	s15, [r3]
 190 000c 30EE670A 		vsub.f32	s0, s0, s15
 191              	.LVL14:
 192 0010 DFED247A 		vldr.32	s15, .L25+28
 193 0014 60EE277A 		vmul.f32	s15, s0, s15
 194 0018 17EE900A 		vmov	r0, s15
 195 001c FFF7FEFF 		bl	__aeabi_f2d
 196              	.LVL15:
 197 0020 19A3     		adr	r3, .L25
 198 0022 D3E90023 		ldrd	r2, [r3]
 199 0026 FFF7FEFF 		bl	__aeabi_ddiv
 200              	.LVL16:
 201 002a FFF7FEFF 		bl	__aeabi_d2f
 202              	.LVL17:
 203 002e 08EE100A 		vmov	s16, r0
 204              	.LVL18:
 155:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 205              		.loc 2 155 0
 206 0032 B5EEC08A 		vcmpe.f32	s16, #0
 207 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 208 003a 12DB     		blt	.L22
 157:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 209              		.loc 2 157 0
 210 003c FFF7FEFF 		bl	__aeabi_f2d
 211              	.LVL19:
 212 0040 13A3     		adr	r3, .L25+8
 213 0042 D3E90023 		ldrd	r2, [r3]
 214 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 13


 215              	.LVL20:
 216 004a 38B9     		cbnz	r0, .L24
 217              	.LVL21:
 218              	.L14:
 157:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 219              		.loc 2 157 0 is_stmt 0 discriminator 4
 220 004c B0EE480A 		vmov.f32	s0, s16
 221 0050 1548     		ldr	r0, .L25+32
 222 0052 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 223              	.LVL22:
 224              	.L11:
 164:Core/Src/robot/robot_functions.cpp **** }
 225              		.loc 2 164 0 is_stmt 1
 226 0056 BDEC028B 		vldm	sp!, {d8}
 227              	.LCFI3:
 228              		.cfi_remember_state
 229              		.cfi_restore 80
 230              		.cfi_restore 81
 231              		.cfi_def_cfa_offset 8
 232 005a 08BD     		pop	{r3, pc}
 233              	.LVL23:
 234              	.L24:
 235              	.LCFI4:
 236              		.cfi_restore_state
 157:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 237              		.loc 2 157 0
 238 005c B2EE018A 		vmov.f32	s16, #8.5e+0
 239              	.LVL24:
 240 0060 F4E7     		b	.L14
 241              	.LVL25:
 242              	.L22:
 161:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 243              		.loc 2 161 0
 244 0062 FFF7FEFF 		bl	__aeabi_f2d
 245              	.LVL26:
 246 0066 0CA3     		adr	r3, .L25+16
 247 0068 D3E90023 		ldrd	r2, [r3]
 248 006c FFF7FEFF 		bl	__aeabi_dcmplt
 249              	.LVL27:
 250 0070 08B1     		cbz	r0, .L17
 251 0072 BAEE018A 		vmov.f32	s16, #-8.5e+0
 252              	.LVL28:
 253              	.L17:
 161:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 254              		.loc 2 161 0 is_stmt 0 discriminator 4
 255 0076 B0EE480A 		vmov.f32	s0, s16
 256 007a 0B48     		ldr	r0, .L25+32
 257 007c FFF7FEFF 		bl	_ZN8steering9set_angleEf
 258              	.LVL29:
 164:Core/Src/robot/robot_functions.cpp **** }
 259              		.loc 2 164 0 is_stmt 1 discriminator 4
 260 0080 E9E7     		b	.L11
 261              	.L26:
 262 0082 00BFAFF3 		.align	3
 262      0080
 263              	.L25:
 264 0088 182D4454 		.word	1413754136
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 14


 265 008c FB210940 		.word	1074340347
 266 0090 945EEEF9 		.word	-101818732
 267 0094 FFFF2040 		.word	1075904511
 268 0098 945EEEF9 		.word	-101818732
 269 009c FFFF20C0 		.word	-1071579137
 270 00a0 00000000 		.word	.LANCHOR2
 271 00a4 00003443 		.word	1127481344
 272 00a8 00000000 		.word	steering
 273              		.cfi_endproc
 274              	.LFE495:
 276              		.global	__aeabi_dcmple
 277              		.section	.text._Z22correct_steering_anglef,"ax",%progbits
 278              		.align	1
 279              		.global	_Z22correct_steering_anglef
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	_Z22correct_steering_anglef:
 286              	.LFB496:
 173:Core/Src/robot/robot_functions.cpp **** {
 287              		.loc 2 173 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL30:
 292 0000 08B5     		push	{r3, lr}
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 297 0002 2DED028B 		vpush.64	{d8}
 298              	.LCFI6:
 299              		.cfi_def_cfa_offset 16
 300              		.cfi_offset 80, -16
 301              		.cfi_offset 81, -12
 174:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 302              		.loc 2 174 0
 303 0006 204B     		ldr	r3, .L40+16
 304 0008 D3ED007A 		vldr.32	s15, [r3]
 305 000c 30EE670A 		vsub.f32	s0, s0, s15
 306              	.LVL31:
 307 0010 DFED1E7A 		vldr.32	s15, .L40+20
 308 0014 60EE277A 		vmul.f32	s15, s0, s15
 309 0018 17EE900A 		vmov	r0, s15
 310 001c FFF7FEFF 		bl	__aeabi_f2d
 311              	.LVL32:
 312 0020 15A3     		adr	r3, .L40
 313 0022 D3E90023 		ldrd	r2, [r3]
 314 0026 FFF7FEFF 		bl	__aeabi_ddiv
 315              	.LVL33:
 316 002a FFF7FEFF 		bl	__aeabi_d2f
 317              	.LVL34:
 318 002e 08EE100A 		vmov	s16, r0
 319              	.LVL35:
 175:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (2*steering_angle_limit * 180 / PI))
 320              		.loc 2 175 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 15


 321 0032 F0EEC87A 		vabs.f32	s15, s16
 322 0036 17EE900A 		vmov	r0, s15
 323              	.LVL36:
 324 003a FFF7FEFF 		bl	__aeabi_f2d
 325              	.LVL37:
 326 003e 10A3     		adr	r3, .L40+8
 327 0040 D3E90023 		ldrd	r2, [r3]
 328 0044 FFF7FEFF 		bl	__aeabi_dcmple
 329              	.LVL38:
 330 0048 60B9     		cbnz	r0, .L39
 182:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 331              		.loc 2 182 0
 332 004a B5EEC08A 		vcmpe.f32	s16, #0
 333 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 334 0052 0DDD     		ble	.L37
 335 0054 BAEE010A 		vmov.f32	s0, #-8.5e+0
 336              	.L31:
 182:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 337              		.loc 2 182 0 is_stmt 0 discriminator 4
 338 0058 0D48     		ldr	r0, .L40+24
 339 005a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 340              	.LVL39:
 341              	.L27:
 186:Core/Src/robot/robot_functions.cpp **** }
 342              		.loc 2 186 0 is_stmt 1
 343 005e BDEC028B 		vldm	sp!, {d8}
 344              	.LCFI7:
 345              		.cfi_remember_state
 346              		.cfi_restore 80
 347              		.cfi_restore 81
 348              		.cfi_def_cfa_offset 8
 349              	.LVL40:
 350 0062 08BD     		pop	{r3, pc}
 351              	.LVL41:
 352              	.L39:
 353              	.LCFI8:
 354              		.cfi_restore_state
 177:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 355              		.loc 2 177 0
 356 0064 9FED0B0A 		vldr.32	s0, .L40+28
 357 0068 0948     		ldr	r0, .L40+24
 358 006a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 359              	.LVL42:
 360 006e F6E7     		b	.L27
 361              	.L37:
 182:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 362              		.loc 2 182 0
 363 0070 B2EE010A 		vmov.f32	s0, #8.5e+0
 364 0074 F0E7     		b	.L31
 365              	.L41:
 366 0076 00BF     		.align	3
 367              	.L40:
 368 0078 182D4454 		.word	1413754136
 369 007c FB210940 		.word	1074340347
 370 0080 945EEEF9 		.word	-101818732
 371 0084 FFFF3040 		.word	1076953087
 372 0088 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 16


 373 008c 00003443 		.word	1127481344
 374 0090 00000000 		.word	steering
 375 0094 00000000 		.word	0
 376              		.cfi_endproc
 377              	.LFE496:
 379              		.section	.text._Z13move_steeringif,"ax",%progbits
 380              		.align	1
 381              		.global	_Z13move_steeringif
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	_Z13move_steeringif:
 388              	.LFB494:
 118:Core/Src/robot/robot_functions.cpp **** {
 389              		.loc 2 118 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL43:
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI9:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 399 0002 2DED028B 		vpush.64	{d8}
 400              	.LCFI10:
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 80, -16
 403              		.cfi_offset 81, -12
 404 0006 B0EE408A 		vmov.f32	s16, s0
 119:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 405              		.loc 2 119 0
 406 000a 194B     		ldr	r3, .L51
 407 000c 1B68     		ldr	r3, [r3]
 408 000e 8342     		cmp	r3, r0
 409 0010 0ED0     		beq	.L48
 410              	.LVL44:
 411              	.L43:
 126:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 412              		.loc 2 126 0
 413 0012 1848     		ldr	r0, .L51+4
 414 0014 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 415              	.LVL45:
 416 0018 F0B1     		cbz	r0, .L49
 131:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 417              		.loc 2 131 0
 418 001a 1648     		ldr	r0, .L51+4
 419 001c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 420              	.LVL46:
 421 0020 0128     		cmp	r0, #1
 422 0022 20D0     		beq	.L50
 139:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 423              		.loc 2 139 0
 424 0024 9FED140A 		vldr.32	s0, .L51+8
 425 0028 1448     		ldr	r0, .L51+12
 426 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 17


 427              	.LVL47:
 141:Core/Src/robot/robot_functions.cpp **** }
 428              		.loc 2 141 0
 429 002e 17E0     		b	.L42
 430              	.LVL48:
 431              	.L48:
 121:Core/Src/robot/robot_functions.cpp **** 		summation_angle += robot_angle;
 432              		.loc 2 121 0
 433 0030 134B     		ldr	r3, .L51+16
 434 0032 D3ED007A 		vldr.32	s15, [r3]
 435 0036 134A     		ldr	r2, .L51+20
 436 0038 92ED007A 		vldr.32	s14, [r2]
 437 003c 77EE877A 		vadd.f32	s15, s15, s14
 438 0040 C3ED007A 		vstr.32	s15, [r3]
 122:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 439              		.loc 2 122 0
 440 0044 F1EE677A 		vneg.f32	s15, s15
 441              	.LVL49:
 123:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 442              		.loc 2 123 0
 443 0048 9FED0F7A 		vldr.32	s14, .L51+24
 444 004c 87EE878A 		vdiv.f32	s16, s15, s14
 445              	.LVL50:
 124:Core/Src/robot/robot_functions.cpp **** 		printf("\tstep_entered\t");
 446              		.loc 2 124 0
 447 0050 0E48     		ldr	r0, .L51+28
 448              	.LVL51:
 449 0052 FFF7FEFF 		bl	printf
 450              	.LVL52:
 451 0056 DCE7     		b	.L43
 452              	.L49:
 129:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 453              		.loc 2 129 0
 454 0058 B0EE480A 		vmov.f32	s0, s16
 455 005c FFF7FEFF 		bl	_Z9set_anglef
 456              	.LVL53:
 457              	.L42:
 141:Core/Src/robot/robot_functions.cpp **** }
 458              		.loc 2 141 0
 459 0060 BDEC028B 		vldm	sp!, {d8}
 460              	.LCFI11:
 461              		.cfi_remember_state
 462              		.cfi_restore 80
 463              		.cfi_restore 81
 464              		.cfi_def_cfa_offset 8
 465              	.LVL54:
 466 0064 08BD     		pop	{r3, pc}
 467              	.LVL55:
 468              	.L50:
 469              	.LCFI12:
 470              		.cfi_restore_state
 134:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 471              		.loc 2 134 0
 472 0066 B0EE480A 		vmov.f32	s0, s16
 473 006a FFF7FEFF 		bl	_Z22correct_steering_anglef
 474              	.LVL56:
 475 006e F7E7     		b	.L42
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 18


 476              	.L52:
 477              		.align	2
 478              	.L51:
 479 0070 00000000 		.word	steps
 480 0074 00000000 		.word	leg
 481 0078 00000000 		.word	0
 482 007c 00000000 		.word	steering
 483 0080 00000000 		.word	.LANCHOR3
 484 0084 00000000 		.word	.LANCHOR2
 485 0088 0000FA43 		.word	1140457472
 486 008c 00000000 		.word	.LC0
 487              		.cfi_endproc
 488              	.LFE494:
 490              		.global	__aeabi_dmul
 491              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 492              		.align	1
 493              		.global	_Z21calculate_robot_anglev
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv4-sp-d16
 499              	_Z21calculate_robot_anglev:
 500              	.LFB497:
 196:Core/Src/robot/robot_functions.cpp **** {
 501              		.loc 2 196 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI13:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 510 0002 2DED028B 		vpush.64	{d8}
 511              	.LCFI14:
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 80, -16
 514              		.cfi_offset 81, -12
 197:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 515              		.loc 2 197 0
 516 0006 204B     		ldr	r3, .L59+8
 517 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 000a EBB1     		cbz	r3, .L54
 519              	.LVL57:
 520              	.LBB113:
 521              	.LBB114:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 522              		.loc 1 36 0
 523 000c 1F4B     		ldr	r3, .L59+12
 524 000e 93ED027A 		vldr.32	s14, [r3, #8]
 525              	.LVL58:
 526              	.LBE114:
 527              	.LBE113:
 528              	.LBB115:
 529              	.LBB116:
 530 0012 1F4B     		ldr	r3, .L59+16
 531 0014 D3ED027A 		vldr.32	s15, [r3, #8]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 19


 532              	.LVL59:
 533              	.LBE116:
 534              	.LBE115:
 200:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 535              		.loc 2 200 0
 536 0018 77EE677A 		vsub.f32	s15, s14, s15
 537 001c 17EE900A 		vmov	r0, s15
 538 0020 FFF7FEFF 		bl	__aeabi_f2d
 539              	.LVL60:
 540 0024 16A3     		adr	r3, .L59
 541 0026 D3E90023 		ldrd	r2, [r3]
 542 002a FFF7FEFF 		bl	__aeabi_dmul
 543              	.LVL61:
 544 002e 0022     		movs	r2, #0
 545 0030 184B     		ldr	r3, .L59+20
 546 0032 FFF7FEFF 		bl	__aeabi_ddiv
 547              	.LVL62:
 548 0036 FFF7FEFF 		bl	__aeabi_d2f
 549              	.LVL63:
 550 003a 174B     		ldr	r3, .L59+24
 551 003c 1860     		str	r0, [r3]	@ float
 201:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 552              		.loc 2 201 0
 553 003e 174B     		ldr	r3, .L59+28
 554 0040 1860     		str	r0, [r3]	@ float
 555              	.L53:
 219:Core/Src/robot/robot_functions.cpp **** }
 556              		.loc 2 219 0
 557 0042 BDEC028B 		vldm	sp!, {d8}
 558              	.LCFI15:
 559              		.cfi_remember_state
 560              		.cfi_restore 80
 561              		.cfi_restore 81
 562              		.cfi_def_cfa_offset 8
 563 0046 08BD     		pop	{r3, pc}
 564              	.L54:
 565              	.LCFI16:
 566              		.cfi_restore_state
 207:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 567              		.loc 2 207 0
 568 0048 1548     		ldr	r0, .L59+32
 569 004a FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 570              	.LVL64:
 571 004e 58B9     		cbnz	r0, .L58
 214:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 572              		.loc 2 214 0
 573 0050 114B     		ldr	r3, .L59+24
 574 0052 93ED008A 		vldr.32	s16, [r3]
 575              	.LVL65:
 576              	.LBB117:
 577              	.LBB118:
 578              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 20


   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 21


  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 579              		.loc 3 112 0
 580 0056 1348     		ldr	r0, .L59+36
 581 0058 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 582              	.LVL66:
 583              	.LBE118:
 584              	.LBE117:
 214:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 22


 585              		.loc 2 214 0
 586 005c 38EE400A 		vsub.f32	s0, s16, s0
 587 0060 0E4B     		ldr	r3, .L59+28
 588 0062 83ED000A 		vstr.32	s0, [r3]
 219:Core/Src/robot/robot_functions.cpp **** }
 589              		.loc 2 219 0
 590 0066 ECE7     		b	.L53
 591              	.L58:
 592              	.LVL67:
 593              	.LBB119:
 594              	.LBB120:
 595              		.loc 3 112 0
 596 0068 0E48     		ldr	r0, .L59+36
 597 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 598              	.LVL68:
 599              	.LBE120:
 600              	.LBE119:
 209:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 601              		.loc 2 209 0
 602 006e 0B4B     		ldr	r3, .L59+28
 603 0070 D3ED007A 		vldr.32	s15, [r3]
 604 0074 30EE270A 		vadd.f32	s0, s0, s15
 605 0078 074B     		ldr	r3, .L59+24
 606 007a 83ED000A 		vstr.32	s0, [r3]
 607 007e E0E7     		b	.L53
 608              	.L60:
 609              		.align	3
 610              	.L59:
 611 0080 182D4454 		.word	1413754136
 612 0084 FB210940 		.word	1074340347
 613 0088 00000000 		.word	USE_IMU_FLAG
 614 008c 00000000 		.word	.LANCHOR0
 615 0090 00000000 		.word	.LANCHOR1
 616 0094 00806640 		.word	1080459264
 617 0098 00000000 		.word	.LANCHOR2
 618 009c 00000000 		.word	.LANCHOR4
 619 00a0 00000000 		.word	leg
 620 00a4 0C000000 		.word	steering+12
 621              		.cfi_endproc
 622              	.LFE497:
 624              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 625              		.align	1
 626              		.global	_Z23initialize_leg_positionv
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 630              		.fpu fpv4-sp-d16
 632              	_Z23initialize_leg_positionv:
 633              	.LFB499:
 280:Core/Src/robot/robot_functions.cpp **** {
 634              		.loc 2 280 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 08B5     		push	{r3, lr}
 639              	.LCFI17:
 640              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 23


 641              		.cfi_offset 3, -8
 642              		.cfi_offset 14, -4
 643              	.LVL69:
 644              	.LBB121:
 645              	.LBB122:
 646              		.file 4 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 647              		.loc 4 47 0
 648 0002 3748     		ldr	r0, .L79+16
 649 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 650              	.LVL70:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 24


 651              	.LBE122:
 652              	.LBE121:
 288:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 653              		.loc 2 288 0
 654 0008 10EE100A 		vmov	r0, s0
 655 000c FFF7FEFF 		bl	__aeabi_f2d
 656              	.LVL71:
 657 0010 2FA3     		adr	r3, .L79
 658 0012 D3E90023 		ldrd	r2, [r3]
 659 0016 FFF7FEFF 		bl	__aeabi_dcmpgt
 660              	.LVL72:
 661 001a 80B1     		cbz	r0, .L62
 662              	.LVL73:
 663              	.LBB123:
 664              	.LBB124:
 665              		.loc 4 47 0
 666 001c 3048     		ldr	r0, .L79+16
 667 001e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 668              	.LVL74:
 669              	.LBE124:
 670              	.LBE123:
 289:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 671              		.loc 2 289 0
 672 0022 10EE100A 		vmov	r0, s0
 673 0026 FFF7FEFF 		bl	__aeabi_f2d
 674              	.LVL75:
 288:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 675              		.loc 2 288 0
 676 002a 2BA3     		adr	r3, .L79+8
 677 002c D3E90023 		ldrd	r2, [r3]
 678 0030 FFF7FEFF 		bl	__aeabi_dcmplt
 679              	.LVL76:
 680 0034 18B1     		cbz	r0, .L62
 681              	.LVL77:
 682              	.LBB125:
 683              	.LBB126:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 684              		.loc 4 45 0
 685 0036 2B4B     		ldr	r3, .L79+20
 686 0038 1B69     		ldr	r3, [r3, #16]
 687              	.LVL78:
 688              	.LBE126:
 689              	.LBE125:
 289:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 690              		.loc 2 289 0
 691 003a 002B     		cmp	r3, #0
 692 003c 32D1     		bne	.L78
 693              	.L62:
 296:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 694              		.loc 2 296 0 discriminator 3
 695 003e B0EE080A 		vmov.f32	s0, #3.0e+0
 696 0042 2848     		ldr	r0, .L79+20
 697 0044 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 698              	.LVL79:
 297:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 699              		.loc 2 297 0 discriminator 3
 700 0048 274B     		ldr	r3, .L79+24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 25


 701 004a 0022     		movs	r2, #0
 702 004c 1A70     		strb	r2, [r3]
 703              	.L65:
 704              	.LVL80:
 705              	.LBB127:
 706              	.LBB128:
 707              		.loc 4 47 0
 708 004e 2748     		ldr	r0, .L79+28
 709 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 710              	.LVL81:
 711              	.LBE128:
 712              	.LBE127:
 300:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 713              		.loc 2 300 0
 714 0054 10EE100A 		vmov	r0, s0
 715 0058 FFF7FEFF 		bl	__aeabi_f2d
 716              	.LVL82:
 301:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 717              		.loc 2 301 0
 718 005c 1CA3     		adr	r3, .L79
 719 005e D3E90023 		ldrd	r2, [r3]
 720 0062 FFF7FEFF 		bl	__aeabi_dcmpgt
 721              	.LVL83:
 722 0066 78B1     		cbz	r0, .L66
 723              	.LVL84:
 724              	.LBB129:
 725              	.LBB130:
 726              		.loc 4 47 0
 727 0068 2048     		ldr	r0, .L79+28
 728 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 729              	.LVL85:
 730              	.LBE130:
 731              	.LBE129:
 301:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 732              		.loc 2 301 0
 733 006e 10EE100A 		vmov	r0, s0
 734 0072 FFF7FEFF 		bl	__aeabi_f2d
 735              	.LVL86:
 300:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 736              		.loc 2 300 0
 737 0076 18A3     		adr	r3, .L79+8
 738 0078 D3E90023 		ldrd	r2, [r3]
 739 007c FFF7FEFF 		bl	__aeabi_dcmplt
 740              	.LVL87:
 741 0080 10B1     		cbz	r0, .L66
 742              	.LVL88:
 743              	.LBB131:
 744              	.LBB132:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 745              		.loc 4 45 0
 746 0082 184B     		ldr	r3, .L79+20
 747 0084 9B6E     		ldr	r3, [r3, #104]
 748              	.LVL89:
 749              	.LBE132:
 750              	.LBE131:
 301:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 751              		.loc 2 301 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 26


 752 0086 B3B9     		cbnz	r3, .L69
 753              	.L66:
 308:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 754              		.loc 2 308 0 discriminator 2
 755 0088 B0EE080A 		vmov.f32	s0, #3.0e+0
 756 008c 1848     		ldr	r0, .L79+32
 757 008e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 758              	.LVL90:
 309:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 759              		.loc 2 309 0 discriminator 2
 760 0092 184B     		ldr	r3, .L79+36
 761 0094 0022     		movs	r2, #0
 762 0096 1A70     		strb	r2, [r3]
 763              	.L70:
 312:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 764              		.loc 2 312 0
 765 0098 134B     		ldr	r3, .L79+24
 766 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 767 009c A3B1     		cbz	r3, .L72
 312:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 768              		.loc 2 312 0 is_stmt 0 discriminator 1
 769 009e 154B     		ldr	r3, .L79+36
 770 00a0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 771              	.L71:
 321:Core/Src/robot/robot_functions.cpp **** }
 772              		.loc 2 321 0 is_stmt 1
 773 00a2 08BD     		pop	{r3, pc}
 774              	.L78:
 291:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 775              		.loc 2 291 0
 776 00a4 9FED140A 		vldr.32	s0, .L79+40
 777 00a8 0E48     		ldr	r0, .L79+20
 778 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 779              	.LVL91:
 292:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 780              		.loc 2 292 0
 781 00ae 0E4B     		ldr	r3, .L79+24
 782 00b0 0122     		movs	r2, #1
 783 00b2 1A70     		strb	r2, [r3]
 784 00b4 CBE7     		b	.L65
 785              	.L69:
 303:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 786              		.loc 2 303 0
 787 00b6 9FED100A 		vldr.32	s0, .L79+40
 788 00ba 0D48     		ldr	r0, .L79+32
 789 00bc FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 790              	.LVL92:
 304:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 791              		.loc 2 304 0
 792 00c0 0C4B     		ldr	r3, .L79+36
 793 00c2 0122     		movs	r2, #1
 794 00c4 1A70     		strb	r2, [r3]
 795 00c6 E7E7     		b	.L70
 796              	.L72:
 319:Core/Src/robot/robot_functions.cpp **** 		return false;
 797              		.loc 2 319 0
 798 00c8 0020     		movs	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 27


 799 00ca EAE7     		b	.L71
 800              	.L80:
 801 00cc AFF30080 		.align	3
 802              	.L79:
 803 00d0 44031FEA 		.word	-367066300
 804 00d4 0604F83F 		.word	1073218566
 805 00d8 EC5669BE 		.word	-1100392724
 806 00dc EF3FFA3F 		.word	1073364975
 807 00e0 3C000000 		.word	leg+60
 808 00e4 00000000 		.word	leg
 809 00e8 00000000 		.word	.LANCHOR5
 810 00ec 94000000 		.word	leg+148
 811 00f0 58000000 		.word	leg+88
 812 00f4 00000000 		.word	.LANCHOR6
 813 00f8 00000000 		.word	0
 814              		.cfi_endproc
 815              	.LFE499:
 817              		.global	__aeabi_d2iz
 818              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 819              		.align	1
 820              		.global	_Z28initialize_steering_positionv
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	_Z28initialize_steering_positionv:
 827              	.LFB500:
 331:Core/Src/robot/robot_functions.cpp **** {
 828              		.loc 2 331 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832 0000 10B5     		push	{r4, lr}
 833              	.LCFI18:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 14, -4
 837              	.LVL93:
 838              	.LBB133:
 839              	.LBB134:
 840              		.loc 3 112 0
 841 0002 1F48     		ldr	r0, .L88+8
 842 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 843              	.LVL94:
 844              	.LBE134:
 845              	.LBE133:
 332:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 846              		.loc 2 332 0
 847 0008 DFED1E7A 		vldr.32	s15, .L88+12
 848 000c 60EE277A 		vmul.f32	s15, s0, s15
 849 0010 17EE900A 		vmov	r0, s15
 850 0014 FFF7FEFF 		bl	__aeabi_f2d
 851              	.LVL95:
 852 0018 17A3     		adr	r3, .L88
 853 001a D3E90023 		ldrd	r2, [r3]
 854 001e FFF7FEFF 		bl	__aeabi_ddiv
 855              	.LVL96:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 28


 856 0022 FFF7FEFF 		bl	__aeabi_d2iz
 857              	.LVL97:
 858 0026 0146     		mov	r1, r0
 859 0028 1748     		ldr	r0, .L88+16
 860 002a FFF7FEFF 		bl	printf
 861              	.LVL98:
 335:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 862              		.loc 2 335 0
 863 002e FFF7FEFF 		bl	HAL_GetTick
 864              	.LVL99:
 865 0032 164B     		ldr	r3, .L88+20
 866 0034 1B68     		ldr	r3, [r3]
 867 0036 C01A     		subs	r0, r0, r3
 868 0038 B0F5FA7F 		cmp	r0, #500
 869 003c 09D2     		bcs	.L86
 341:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 870              		.loc 2 341 0
 871 003e 144B     		ldr	r3, .L88+24
 872 0040 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 873 0042 9CB9     		cbnz	r4, .L87
 348:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 874              		.loc 2 348 0
 875 0044 B6EE000A 		vmov.f32	s0, #5.0e-1
 876 0048 1248     		ldr	r0, .L88+28
 877 004a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 878              	.LVL100:
 879              	.L83:
 351:Core/Src/robot/robot_functions.cpp **** }
 880              		.loc 2 351 0
 881 004e 2046     		mov	r0, r4
 882 0050 10BD     		pop	{r4, pc}
 883              	.L86:
 337:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 884              		.loc 2 337 0
 885 0052 9FED110A 		vldr.32	s0, .L88+32
 886 0056 0F48     		ldr	r0, .L88+28
 887 0058 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 888              	.LVL101:
 338:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 889              		.loc 2 338 0
 890 005c 0122     		movs	r2, #1
 891 005e 4FF48051 		mov	r1, #4096
 892 0062 0E48     		ldr	r0, .L88+36
 893 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 894              	.LVL102:
 339:Core/Src/robot/robot_functions.cpp **** 		return true;
 895              		.loc 2 339 0
 896 0068 0124     		movs	r4, #1
 897 006a F0E7     		b	.L83
 898              	.L87:
 343:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 899              		.loc 2 343 0
 900 006c 9FED0A0A 		vldr.32	s0, .L88+32
 901 0070 0848     		ldr	r0, .L88+28
 902 0072 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 903              	.LVL103:
 344:Core/Src/robot/robot_functions.cpp **** 		return true;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 29


 904              		.loc 2 344 0
 905 0076 EAE7     		b	.L83
 906              	.L89:
 907              		.align	3
 908              	.L88:
 909 0078 182D4454 		.word	1413754136
 910 007c FB210940 		.word	1074340347
 911 0080 0C000000 		.word	steering+12
 912 0084 00003443 		.word	1127481344
 913 0088 00000000 		.word	.LC1
 914 008c 00000000 		.word	.LANCHOR7
 915 0090 00000000 		.word	.LANCHOR8
 916 0094 00000000 		.word	steering
 917 0098 00000000 		.word	0
 918 009c 000C0240 		.word	1073875968
 919              		.cfi_endproc
 920              	.LFE500:
 922              		.section	.text._Z19initialize_positionv,"ax",%progbits
 923              		.align	1
 924              		.global	_Z19initialize_positionv
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
 930              	_Z19initialize_positionv:
 931              	.LFB498:
 229:Core/Src/robot/robot_functions.cpp **** {
 932              		.loc 2 229 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 937              	.LCFI19:
 938              		.cfi_def_cfa_offset 24
 939              		.cfi_offset 4, -24
 940              		.cfi_offset 5, -20
 941              		.cfi_offset 6, -16
 942              		.cfi_offset 7, -12
 943              		.cfi_offset 8, -8
 944              		.cfi_offset 14, -4
 945 0004 2DED028B 		vpush.64	{d8}
 946              	.LCFI20:
 947              		.cfi_def_cfa_offset 32
 948              		.cfi_offset 80, -32
 949              		.cfi_offset 81, -28
 230:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 950              		.loc 2 230 0
 951 0008 FFF7FEFF 		bl	HAL_GetTick
 952              	.LVL104:
 953 000c 0646     		mov	r6, r0
 954              	.LVL105:
 955              	.L91:
 233:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 956              		.loc 2 233 0
 957 000e FFF7FEFF 		bl	HAL_GetTick
 958              	.LVL106:
 959 0012 801B     		subs	r0, r0, r6
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 30


 960 0014 0928     		cmp	r0, #9
 961 0016 FAD9     		bls	.L91
 235:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 962              		.loc 2 235 0
 963 0018 FFF7FEFF 		bl	HAL_GetTick
 964              	.LVL107:
 965 001c 0646     		mov	r6, r0
 966              	.LVL108:
 236:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 967              		.loc 2 236 0
 968 001e 3A48     		ldr	r0, .L99
 969              	.LVL109:
 970 0020 FFF7FEFF 		bl	printf
 971              	.LVL110:
 237:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 972              		.loc 2 237 0
 973 0024 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 974              	.LVL111:
 975 0028 0028     		cmp	r0, #0
 976 002a F0D0     		beq	.L91
 977              	.LBB135:
 241:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 978              		.loc 2 241 0
 979 002c 0024     		movs	r4, #0
 980 002e 00E0     		b	.L95
 981              	.LVL112:
 982              	.L94:
 241:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 983              		.loc 2 241 0 is_stmt 0 discriminator 2
 984 0030 0134     		adds	r4, r4, #1
 985              	.LVL113:
 986              	.L95:
 241:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 987              		.loc 2 241 0 discriminator 1
 988 0032 364B     		ldr	r3, .L99+4
 989 0034 9C42     		cmp	r4, r3
 990 0036 3CDC     		bgt	.L93
 243:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 991              		.loc 2 243 0 is_stmt 1
 992 0038 FFF7FEFF 		bl	HAL_GetTick
 993              	.LVL114:
 994 003c 801B     		subs	r0, r0, r6
 995 003e 0928     		cmp	r0, #9
 996 0040 F6D9     		bls	.L94
 245:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 997              		.loc 2 245 0
 998 0042 FFF7FEFF 		bl	HAL_GetTick
 999              	.LVL115:
 1000 0046 0646     		mov	r6, r0
 1001              	.LVL116:
 246:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 1002              		.loc 2 246 0
 1003 0048 3148     		ldr	r0, .L99+8
 1004              	.LVL117:
 1005 004a FFF7FEFF 		bl	printf
 1006              	.LVL118:
 247:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 31


 1007              		.loc 2 247 0
 1008 004e 314D     		ldr	r5, .L99+12
 1009 0050 0027     		movs	r7, #0
 1010 0052 2F61     		str	r7, [r5, #16]
 248:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 1011              		.loc 2 248 0
 1012 0054 AF66     		str	r7, [r5, #104]
 249:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 1013              		.loc 2 249 0
 1014 0056 9FED308A 		vldr.32	s16, .L99+16
 1015 005a B0EE480A 		vmov.f32	s0, s16
 1016 005e 2846     		mov	r0, r5
 1017 0060 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1018              	.LVL119:
 250:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 1019              		.loc 2 250 0
 1020 0064 05F15808 		add	r8, r5, #88
 1021 0068 B0EE480A 		vmov.f32	s0, s16
 1022 006c 4046     		mov	r0, r8
 1023 006e FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1024              	.LVL120:
 1025              	.LBB136:
 1026              	.LBB137:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1027              		.loc 4 40 0
 1028 0072 B0EE480A 		vmov.f32	s0, s16
 1029 0076 05F13C00 		add	r0, r5, #60
 1030 007a FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1031              	.LVL121:
 1032              	.LBE137:
 1033              	.LBE136:
 1034              	.LBB138:
 1035              	.LBB139:
 1036 007e B0EE480A 		vmov.f32	s0, s16
 1037 0082 05F19400 		add	r0, r5, #148
 1038 0086 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1039              	.LVL122:
 1040              	.LBE139:
 1041              	.LBE138:
 253:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1042              		.loc 2 253 0
 1043 008a 9FED248A 		vldr.32	s16, .L99+20
 1044 008e B0EE480A 		vmov.f32	s0, s16
 1045 0092 2846     		mov	r0, r5
 1046 0094 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1047              	.LVL123:
 254:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1048              		.loc 2 254 0
 1049 0098 B0EE480A 		vmov.f32	s0, s16
 1050 009c 4046     		mov	r0, r8
 1051 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1052              	.LVL124:
 255:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 1053              		.loc 2 255 0
 1054 00a2 B0EE480A 		vmov.f32	s0, s16
 1055 00a6 1E48     		ldr	r0, .L99+24
 1056 00a8 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 32


 1057              	.LVL125:
 256:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 1058              		.loc 2 256 0
 1059 00ac 1D4B     		ldr	r3, .L99+28
 1060 00ae 1F70     		strb	r7, [r3]
 1061 00b0 BEE7     		b	.L94
 1062              	.L93:
 1063              	.LBE135:
 259:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1064              		.loc 2 259 0
 1065 00b2 FFF7FEFF 		bl	HAL_GetTick
 1066              	.LVL126:
 1067 00b6 1C4B     		ldr	r3, .L99+32
 1068 00b8 1860     		str	r0, [r3]
 1069              	.LVL127:
 1070              	.L96:
 262:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1071              		.loc 2 262 0
 1072 00ba FFF7FEFF 		bl	HAL_GetTick
 1073              	.LVL128:
 1074 00be 801B     		subs	r0, r0, r6
 1075 00c0 0928     		cmp	r0, #9
 1076 00c2 FAD9     		bls	.L96
 264:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1077              		.loc 2 264 0
 1078 00c4 FFF7FEFF 		bl	HAL_GetTick
 1079              	.LVL129:
 1080 00c8 0646     		mov	r6, r0
 1081              	.LVL130:
 265:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1082              		.loc 2 265 0
 1083 00ca FFF7FEFF 		bl	HAL_GetTick
 1084              	.LVL131:
 1085 00ce 164B     		ldr	r3, .L99+32
 1086 00d0 1A68     		ldr	r2, [r3]
 1087 00d2 0146     		mov	r1, r0
 1088 00d4 1548     		ldr	r0, .L99+36
 1089 00d6 FFF7FEFF 		bl	printf
 1090              	.LVL132:
 266:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1091              		.loc 2 266 0
 1092 00da 9FED108A 		vldr.32	s16, .L99+20
 1093 00de 0D4C     		ldr	r4, .L99+12
 1094 00e0 B0EE480A 		vmov.f32	s0, s16
 1095 00e4 2046     		mov	r0, r4
 1096 00e6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1097              	.LVL133:
 267:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1098              		.loc 2 267 0
 1099 00ea B0EE480A 		vmov.f32	s0, s16
 1100 00ee 04F15800 		add	r0, r4, #88
 1101 00f2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1102              	.LVL134:
 268:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1103              		.loc 2 268 0
 1104 00f6 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1105              	.LVL135:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 33


 1106 00fa 0028     		cmp	r0, #0
 1107 00fc DDD0     		beq	.L96
 272:Core/Src/robot/robot_functions.cpp **** }
 1108              		.loc 2 272 0
 1109 00fe BDEC028B 		vldm	sp!, {d8}
 1110              	.LCFI21:
 1111              		.cfi_restore 80
 1112              		.cfi_restore 81
 1113              		.cfi_def_cfa_offset 24
 1114 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1115              	.LVL136:
 1116              	.L100:
 1117 0106 00BF     		.align	2
 1118              	.L99:
 1119 0108 00000000 		.word	.LC2
 1120 010c BFC62D00 		.word	2999999
 1121 0110 20000000 		.word	.LC3
 1122 0114 00000000 		.word	leg
 1123 0118 DB0FC93F 		.word	1070141403
 1124 011c 00000000 		.word	0
 1125 0120 00000000 		.word	steering
 1126 0124 00000000 		.word	.LANCHOR8
 1127 0128 00000000 		.word	.LANCHOR7
 1128 012c 34000000 		.word	.LC4
 1129              		.cfi_endproc
 1130              	.LFE498:
 1132              		.section	.text._Z11getup_n_runv,"ax",%progbits
 1133              		.align	1
 1134              		.global	_Z11getup_n_runv
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv4-sp-d16
 1140              	_Z11getup_n_runv:
 1141              	.LFB501:
 354:Core/Src/robot/robot_functions.cpp **** {
 1142              		.loc 2 354 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146 0000 10B5     		push	{r4, lr}
 1147              	.LCFI22:
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 4, -8
 1150              		.cfi_offset 14, -4
 1151 0002 2DED028B 		vpush.64	{d8}
 1152              	.LCFI23:
 1153              		.cfi_def_cfa_offset 16
 1154              		.cfi_offset 80, -16
 1155              		.cfi_offset 81, -12
 1156              	.LVL137:
 359:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(0);
 1157              		.loc 2 359 0
 1158 0006 2A4C     		ldr	r4, .L110+16
 1159 0008 9FED2A0A 		vldr.32	s0, .L110+20
 1160 000c 2046     		mov	r0, r4
 1161 000e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 34


 1162              	.LVL138:
 1163              	.LBB140:
 1164              	.LBB141:
 1165              		.loc 4 47 0
 1166 0012 04F19400 		add	r0, r4, #148
 1167 0016 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1168              	.LVL139:
 1169              	.LBE141:
 1170              	.LBE140:
 361:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1171              		.loc 2 361 0
 1172 001a 10EE100A 		vmov	r0, s0
 1173 001e FFF7FEFF 		bl	__aeabi_f2d
 1174              	.LVL140:
 1175 0022 1FA3     		adr	r3, .L110
 1176 0024 D3E90023 		ldrd	r2, [r3]
 1177 0028 FFF7FEFF 		bl	__aeabi_dcmpgt
 1178              	.LVL141:
 1179 002c 68B1     		cbz	r0, .L102
 1180              	.LVL142:
 1181              	.LBB142:
 1182              	.LBB143:
 1183              		.loc 4 47 0
 1184 002e 04F19400 		add	r0, r4, #148
 1185 0032 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1186              	.LVL143:
 1187              	.LBE143:
 1188              	.LBE142:
 362:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 1189              		.loc 2 362 0
 1190 0036 10EE100A 		vmov	r0, s0
 1191 003a FFF7FEFF 		bl	__aeabi_f2d
 1192              	.LVL144:
 361:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1193              		.loc 2 361 0
 1194 003e 1AA3     		adr	r3, .L110+8
 1195 0040 D3E90023 		ldrd	r2, [r3]
 1196 0044 FFF7FEFF 		bl	__aeabi_dcmplt
 1197              	.LVL145:
 1198 0048 40B9     		cbnz	r0, .L109
 1199              	.L102:
 374:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 1200              		.loc 2 374 0 discriminator 4
 1201 004a B0EE080A 		vmov.f32	s0, #3.0e+0
 1202 004e 1A48     		ldr	r0, .L110+24
 1203 0050 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1204              	.LVL146:
 376:Core/Src/robot/robot_functions.cpp **** 		return false;
 1205              		.loc 2 376 0 discriminator 4
 1206 0054 0020     		movs	r0, #0
 1207              	.L105:
 379:Core/Src/robot/robot_functions.cpp **** }
 1208              		.loc 2 379 0
 1209 0056 BDEC028B 		vldm	sp!, {d8}
 1210              	.LCFI24:
 1211              		.cfi_remember_state
 1212              		.cfi_restore 80
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 35


 1213              		.cfi_restore 81
 1214              		.cfi_def_cfa_offset 8
 1215 005a 10BD     		pop	{r4, pc}
 1216              	.L109:
 1217              	.LCFI25:
 1218              		.cfi_restore_state
 364:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1219              		.loc 2 364 0
 1220 005c 5834     		adds	r4, r4, #88
 1221 005e 9FED150A 		vldr.32	s0, .L110+20
 1222 0062 2046     		mov	r0, r4
 1223 0064 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1224              	.LVL147:
 1225              	.LBB144:
 1226              	.LBB145:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1227              		.loc 4 40 0
 1228 0068 9FED148A 		vldr.32	s16, .L110+28
 1229 006c B0EE480A 		vmov.f32	s0, s16
 1230 0070 A4F11C00 		sub	r0, r4, #28
 1231 0074 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1232              	.LVL148:
 1233              	.LBE145:
 1234              	.LBE144:
 1235              	.LBB146:
 1236              	.LBB147:
 1237 0078 B0EE480A 		vmov.f32	s0, s16
 1238 007c 04F13C00 		add	r0, r4, #60
 1239 0080 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1240              	.LVL149:
 1241              	.LBE147:
 1242              	.LBE146:
 367:Core/Src/robot/robot_functions.cpp **** 		leg[0].reset_angle(90 * PI / 180);
 1243              		.loc 2 367 0
 1244 0084 B0EE480A 		vmov.f32	s0, s16
 1245 0088 A4F15800 		sub	r0, r4, #88
 1246 008c FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1247              	.LVL150:
 368:Core/Src/robot/robot_functions.cpp **** 		leg[1].reset_angle(90 * PI / 180);
 1248              		.loc 2 368 0
 1249 0090 B0EE480A 		vmov.f32	s0, s16
 1250 0094 2046     		mov	r0, r4
 1251 0096 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1252              	.LVL151:
 370:Core/Src/robot/robot_functions.cpp **** 		return true;
 1253              		.loc 2 370 0
 1254 009a 0120     		movs	r0, #1
 1255 009c DBE7     		b	.L105
 1256              	.L111:
 1257 009e 00BF     		.align	3
 1258              	.L110:
 1259 00a0 44031FEA 		.word	-367066300
 1260 00a4 0604F83F 		.word	1073218566
 1261 00a8 EC5669BE 		.word	-1100392724
 1262 00ac EF3FFA3F 		.word	1073364975
 1263 00b0 00000000 		.word	leg
 1264 00b4 00000000 		.word	0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 36


 1265 00b8 58000000 		.word	leg+88
 1266 00bc DB0FC93F 		.word	1070141403
 1267              		.cfi_endproc
 1268              	.LFE501:
 1270              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1271              		.align	1
 1272              		.global	_Z15calculate_datasv
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu fpv4-sp-d16
 1278              	_Z15calculate_datasv:
 1279              	.LFB502:
 389:Core/Src/robot/robot_functions.cpp **** {
 1280              		.loc 2 389 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 16
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284 0000 10B5     		push	{r4, lr}
 1285              	.LCFI26:
 1286              		.cfi_def_cfa_offset 8
 1287              		.cfi_offset 4, -8
 1288              		.cfi_offset 14, -4
 1289 0002 84B0     		sub	sp, sp, #16
 1290              	.LCFI27:
 1291              		.cfi_def_cfa_offset 24
 390:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 1292              		.loc 2 390 0
 1293 0004 0C4C     		ldr	r4, .L114
 1294 0006 2046     		mov	r0, r4
 1295 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1296              	.LVL152:
 391:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 1297              		.loc 2 391 0
 1298 000c 04F15800 		add	r0, r4, #88
 1299 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1300              	.LVL153:
 1301              	.LBB148:
 1302              	.LBB149:
 102:Core/Inc/devs/steering.h **** 
 1303              		.loc 3 102 0
 1304 0014 0948     		ldr	r0, .L114+4
 1305 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1306              	.LVL154:
 1307              	.LBE149:
 1308              	.LBE148:
 393:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 1309              		.loc 2 393 0
 1310 001a 01AC     		add	r4, sp, #4
 1311 001c 0A21     		movs	r1, #10
 1312 001e 2046     		mov	r0, r4
 1313 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1314              	.LVL155:
 1315 0024 064B     		ldr	r3, .L114+8
 1316 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1317 002a 83E80700 		stm	r3, {r0, r1, r2}
 394:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 37


 1318              		.loc 2 394 0
 1319 002e FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1320              	.LVL156:
 397:Core/Src/robot/robot_functions.cpp **** }
 1321              		.loc 2 397 0
 1322 0032 04B0     		add	sp, sp, #16
 1323              	.LCFI28:
 1324              		.cfi_def_cfa_offset 8
 1325              		@ sp needed
 1326 0034 10BD     		pop	{r4, pc}
 1327              	.L115:
 1328 0036 00BF     		.align	2
 1329              	.L114:
 1330 0038 00000000 		.word	leg
 1331 003c 0C000000 		.word	steering+12
 1332 0040 00000000 		.word	.LANCHOR1
 1333              		.cfi_endproc
 1334              	.LFE502:
 1336              		.section	.text._Z14motion_profilefff,"ax",%progbits
 1337              		.align	1
 1338              		.global	_Z14motion_profilefff
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv4-sp-d16
 1344              	_Z14motion_profilefff:
 1345              	.LFB503:
 400:Core/Src/robot/robot_functions.cpp **** {
 1346              		.loc 2 400 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351              	.LVL157:
 404:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 1352              		.loc 2 404 0
 1353 0000 DFED237A 		vldr.32	s15, .L135
 1354 0004 B4EEE70A 		vcmpe.f32	s0, s15
 1355 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1356 000c 01DD     		ble	.L117
 406:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 1357              		.loc 2 406 0
 1358 000e 30EE670A 		vsub.f32	s0, s0, s15
 1359              	.LVL158:
 1360              	.L117:
 409:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1361              		.loc 2 409 0
 1362 0012 B5EEC00A 		vcmpe.f32	s0, #0
 1363 0016 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1364 001a 06DB     		blt	.L119
 409:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1365              		.loc 2 409 0 is_stmt 0 discriminator 1
 1366 001c F3EE0E7A 		vmov.f32	s15, #3.0e+1
 1367 0020 B4EEE70A 		vcmpe.f32	s0, s15
 1368 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1369 0028 1ED9     		bls	.L134
 1370              	.L119:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 38


 415:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 1371              		.loc 2 415 0 is_stmt 1
 1372 002a DFED1A7A 		vldr.32	s15, .L135+4
 1373 002e B4EEE70A 		vcmpe.f32	s0, s15
 1374 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1375 0036 24DB     		blt	.L132
 415:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 1376              		.loc 2 415 0 is_stmt 0 discriminator 1
 1377 0038 DFED157A 		vldr.32	s15, .L135
 1378 003c B4EEE70A 		vcmpe.f32	s0, s15
 1379 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1380 0044 20D8     		bhi	.L133
 417:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 1381              		.loc 2 417 0 is_stmt 1
 1382 0046 DFED147A 		vldr.32	s15, .L135+8
 1383 004a 77EEC17A 		vsub.f32	s15, s15, s2
 1384 004e F3EE0E6A 		vmov.f32	s13, #3.0e+1
 1385 0052 87EEA67A 		vdiv.f32	s14, s15, s13
 1386 0056 DFED0F7A 		vldr.32	s15, .L135+4
 1387 005a 70EE677A 		vsub.f32	s15, s0, s15
 1388 005e 27EE270A 		vmul.f32	s0, s14, s15
 1389              	.LVL159:
 1390 0062 30EE010A 		vadd.f32	s0, s0, s2
 1391              	.LVL160:
 1392 0066 7047     		bx	lr
 1393              	.LVL161:
 1394              	.L134:
 411:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 1395              		.loc 2 411 0
 1396 0068 9FED0B7A 		vldr.32	s14, .L135+8
 1397 006c 71EE477A 		vsub.f32	s15, s2, s14
 1398 0070 F3EE0E6A 		vmov.f32	s13, #3.0e+1
 1399 0074 87EEA61A 		vdiv.f32	s2, s15, s13
 1400              	.LVL162:
 1401 0078 21EE001A 		vmul.f32	s2, s2, s0
 1402 007c 31EE070A 		vadd.f32	s0, s2, s14
 1403              	.LVL163:
 1404 0080 7047     		bx	lr
 1405              	.LVL164:
 1406              	.L132:
 423:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 1407              		.loc 2 423 0
 1408 0082 B0EE410A 		vmov.f32	s0, s2
 1409              	.LVL165:
 1410 0086 7047     		bx	lr
 1411              	.LVL166:
 1412              	.L133:
 1413 0088 B0EE410A 		vmov.f32	s0, s2
 1414              	.LVL167:
 1415              		.loc 2 428 0
 1416 008c 7047     		bx	lr
 1417              	.L136:
 1418 008e 00BF     		.align	2
 1419              	.L135:
 1420 0090 00003443 		.word	1127481344
 1421 0094 00001643 		.word	1125515264
 1422 0098 CDCC8C3F 		.word	1066192077
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 39


 1423              		.cfi_endproc
 1424              	.LFE503:
 1426              		.section	.text._Z8move_legif,"ax",%progbits
 1427              		.align	1
 1428              		.global	_Z8move_legif
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu fpv4-sp-d16
 1434              	_Z8move_legif:
 1435              	.LFB493:
  87:Core/Src/robot/robot_functions.cpp **** {
 1436              		.loc 2 87 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              	.LVL168:
 1441 0000 10B5     		push	{r4, lr}
 1442              	.LCFI29:
 1443              		.cfi_def_cfa_offset 8
 1444              		.cfi_offset 4, -8
 1445              		.cfi_offset 14, -4
 1446 0002 2DED028B 		vpush.64	{d8}
 1447              	.LCFI30:
 1448              		.cfi_def_cfa_offset 16
 1449              		.cfi_offset 80, -16
 1450              		.cfi_offset 81, -12
 1451              	.LVL169:
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step==steps[6])) ? 4 : robot_speed;
 1452              		.loc 2 92 0
 1453 0006 6428     		cmp	r0, #100
 1454 0008 57D0     		beq	.L141
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step==steps[6])) ? 4 : robot_speed;
 1455              		.loc 2 92 0 is_stmt 0 discriminator 2
 1456 000a 2F4B     		ldr	r3, .L146+8
 1457 000c 9B69     		ldr	r3, [r3, #24]
 1458 000e 8342     		cmp	r3, r0
 1459 0010 50D0     		beq	.L145
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step==steps[6])) ? 4 : robot_speed;
 1460              		.loc 2 92 0
 1461 0012 B1EE0C8A 		vmov.f32	s16, #7.0e+0
 1462              	.L138:
 1463              	.LVL170:
  94:Core/Src/robot/robot_functions.cpp **** 	printf("\t%d\t", (int)leg_speed);
 1464              		.loc 2 94 0 is_stmt 1 discriminator 6
 1465 0016 FDEEC87A 		vcvt.s32.f32	s15, s16
 1466 001a 17EE901A 		vmov	r1, s15	@ int
 1467 001e 2B48     		ldr	r0, .L146+12
 1468              	.LVL171:
 1469 0020 FFF7FEFF 		bl	printf
 1470              	.LVL172:
 1471              	.LBB150:
 1472              	.LBB151:
 1473              		.loc 4 47 0 discriminator 6
 1474 0024 2A4C     		ldr	r4, .L146+16
 1475 0026 2046     		mov	r0, r4
 1476 0028 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 40


 1477              	.LVL173:
 1478              	.LBE151:
 1479              	.LBE150:
  96:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
 1480              		.loc 2 96 0 discriminator 6
 1481 002c DFED297A 		vldr.32	s15, .L146+20
 1482 0030 60EE277A 		vmul.f32	s15, s0, s15
 1483 0034 17EE900A 		vmov	r0, s15
 1484 0038 FFF7FEFF 		bl	__aeabi_f2d
 1485              	.LVL174:
 1486 003c 20A3     		adr	r3, .L146
 1487 003e D3E90023 		ldrd	r2, [r3]
 1488 0042 FFF7FEFF 		bl	__aeabi_ddiv
 1489              	.LVL175:
 1490 0046 FFF7FEFF 		bl	__aeabi_d2f
 1491              	.LVL176:
 1492 004a B0EE481A 		vmov.f32	s2, s16
 1493 004e F7EE000A 		vmov.f32	s1, #1.0e+0
 1494 0052 00EE100A 		vmov	s0, r0
 1495 0056 FFF7FEFF 		bl	_Z14motion_profilefff
 1496              	.LVL177:
 1497 005a F0EE408A 		vmov.f32	s17, s0
 1498              	.LVL178:
 1499              	.LBB152:
 1500              	.LBB153:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1501              		.loc 4 48 0 discriminator 6
 1502 005e 2046     		mov	r0, r4
 1503 0060 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1504              	.LVL179:
 1505 0064 B0EE408A 		vmov.f32	s16, s0
 1506              	.LVL180:
 1507              	.LBE153:
 1508              	.LBE152:
 1509              	.LBB154:
 1510              	.LBB155:
 1511 0068 04F15800 		add	r0, r4, #88
 1512 006c FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1513              	.LVL181:
 1514              	.LBE155:
 1515              	.LBE154:
  97:Core/Src/robot/robot_functions.cpp **** 	del_speed = 3 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 1516              		.loc 2 97 0 discriminator 6
 1517 0070 38EE408A 		vsub.f32	s16, s16, s0
 1518 0074 B0EE080A 		vmov.f32	s0, #3.0e+0
 1519 0078 28EE008A 		vmul.f32	s16, s16, s0
 1520 007c 28EE288A 		vmul.f32	s16, s16, s17
 1521              	.LVL182:
 1522              	.LBB156:
 1523              	.LBB157:
 1524              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 41


   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 42


  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 43


 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 44


 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 45


 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 1525              		.loc 5 242 0 discriminator 6
 1526 0080 F0EEC87A 		vabs.f32	s15, s16
 1527              	.LVL183:
 1528              	.LBE157:
 1529              	.LBE156:
  98:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
 1530              		.loc 2 98 0 discriminator 6
 1531 0084 F4EEE78A 		vcmpe.f32	s17, s15
 1532 0088 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1533 008c 03D8     		bhi	.L139
 100:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 1534              		.loc 2 100 0
 1535 008e 88EE277A 		vdiv.f32	s14, s16, s15
 1536              	.LVL184:
 101:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 1537              		.loc 2 101 0
 1538 0092 28EE878A 		vmul.f32	s16, s17, s14
 1539              	.LVL185:
 1540              	.L139:
 103:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 1541              		.loc 2 103 0
 1542 0096 104C     		ldr	r4, .L146+24
 1543 0098 38EEC80A 		vsub.f32	s0, s17, s16
 1544 009c 2046     		mov	r0, r4
 1545 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1546              	.LVL186:
 104:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 1547              		.loc 2 104 0
 1548 00a2 38EE280A 		vadd.f32	s0, s16, s17
 1549 00a6 04F15800 		add	r0, r4, #88
 1550 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1551              	.LVL187:
 105:Core/Src/robot/robot_functions.cpp **** }
 1552              		.loc 2 105 0
 1553 00ae BDEC028B 		vldm	sp!, {d8}
 1554              	.LCFI31:
 1555              		.cfi_remember_state
 1556              		.cfi_restore 80
 1557              		.cfi_restore 81
 1558              		.cfi_def_cfa_offset 8
 1559              	.LVL188:
 1560 00b2 10BD     		pop	{r4, pc}
 1561              	.LVL189:
 1562              	.L145:
 1563              	.LCFI32:
 1564              		.cfi_restore_state
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step==100)||(step==steps[6])) ? 4 : robot_speed;
 1565              		.loc 2 92 0
 1566 00b4 B1EE008A 		vmov.f32	s16, #4.0e+0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 46


 1567 00b8 ADE7     		b	.L138
 1568              	.L141:
 1569 00ba B1EE008A 		vmov.f32	s16, #4.0e+0
 1570 00be AAE7     		b	.L138
 1571              	.L147:
 1572              		.align	3
 1573              	.L146:
 1574 00c0 182D4454 		.word	1413754136
 1575 00c4 FB210940 		.word	1074340347
 1576 00c8 00000000 		.word	steps
 1577 00cc 00000000 		.word	.LC5
 1578 00d0 3C000000 		.word	leg+60
 1579 00d4 00003443 		.word	1127481344
 1580 00d8 00000000 		.word	leg
 1581              		.cfi_endproc
 1582              	.LFE493:
 1584              		.section	.text._Z2goif,"ax",%progbits
 1585              		.align	1
 1586              		.global	_Z2goif
 1587              		.syntax unified
 1588              		.thumb
 1589              		.thumb_func
 1590              		.fpu fpv4-sp-d16
 1592              	_Z2goif:
 1593              	.LFB492:
  38:Core/Src/robot/robot_functions.cpp **** {
 1594              		.loc 2 38 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 8
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
 1598              	.LVL190:
 1599 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1600              	.LCFI33:
 1601              		.cfi_def_cfa_offset 32
 1602              		.cfi_offset 4, -32
 1603              		.cfi_offset 5, -28
 1604              		.cfi_offset 6, -24
 1605              		.cfi_offset 7, -20
 1606              		.cfi_offset 8, -16
 1607              		.cfi_offset 9, -12
 1608              		.cfi_offset 10, -8
 1609              		.cfi_offset 14, -4
 1610 0004 2DED028B 		vpush.64	{d8}
 1611              	.LCFI34:
 1612              		.cfi_def_cfa_offset 40
 1613              		.cfi_offset 80, -40
 1614              		.cfi_offset 81, -36
 1615 0008 84B0     		sub	sp, sp, #16
 1616              	.LCFI35:
 1617              		.cfi_def_cfa_offset 56
 1618 000a 0546     		mov	r5, r0
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
 1619              		.loc 2 39 0
 1620 000c 10EE100A 		vmov	r0, s0
 1621              	.LVL191:
 1622 0010 FFF7FEFF 		bl	__aeabi_f2d
 1623              	.LVL192:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 47


 1624 0014 54A3     		adr	r3, .L158+40
 1625 0016 D3E90023 		ldrd	r2, [r3]
 1626 001a FFF7FEFF 		bl	__aeabi_dmul
 1627              	.LVL193:
 1628 001e FFF7FEFF 		bl	__aeabi_d2f
 1629              	.LVL194:
 1630 0022 08EE100A 		vmov	s16, r0
 1631              	.LVL195:
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
 1632              		.loc 2 40 0
 1633 0026 00EE100A 		vmov	s0, r0
 1634 002a 2846     		mov	r0, r5
 1635              	.LVL196:
 1636 002c FFF7FEFF 		bl	_Z8move_legif
 1637              	.LVL197:
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
 1638              		.loc 2 41 0
 1639 0030 642D     		cmp	r5, #100
 1640 0032 62D0     		beq	.L156
  49:Core/Src/robot/robot_functions.cpp **** 		if(HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin)==GPIO_PIN_RESET){
 1641              		.loc 2 49 0
 1642 0034 4021     		movs	r1, #64
 1643 0036 4448     		ldr	r0, .L158+8
 1644 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1645              	.LVL198:
 1646 003c 0028     		cmp	r0, #0
 1647 003e 65D1     		bne	.L151
  50:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = true;
 1648              		.loc 2 50 0
 1649 0040 424B     		ldr	r3, .L158+12
 1650 0042 0122     		movs	r2, #1
 1651 0044 1A70     		strb	r2, [r3]
 1652              	.L152:
  55:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
 1653              		.loc 2 55 0
 1654 0046 B0EE480A 		vmov.f32	s0, s16
 1655 004a 2846     		mov	r0, r5
 1656 004c FFF7FEFF 		bl	_Z13move_steeringif
 1657              	.LVL199:
 1658              	.L150:
 1659              	.LBB158:
 1660              	.LBB159:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1661              		.loc 4 45 0
 1662 0050 3F4C     		ldr	r4, .L158+16
 1663 0052 D4F810A0 		ldr	r10, [r4, #16]
 1664              	.LVL200:
 1665              	.LBE159:
 1666              	.LBE158:
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1667              		.loc 2 59 0
 1668 0056 3F4B     		ldr	r3, .L158+20
 1669 0058 D3ED007A 		vldr.32	s15, [r3]
 1670 005c 9FED3E8A 		vldr.32	s16, .L158+24
 1671              	.LVL201:
 1672 0060 67EE887A 		vmul.f32	s15, s15, s16
 1673 0064 17EE900A 		vmov	r0, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 48


 1674 0068 FFF7FEFF 		bl	__aeabi_f2d
 1675              	.LVL202:
 1676 006c 34A3     		adr	r3, .L158
 1677 006e D3E90023 		ldrd	r2, [r3]
 1678 0072 FFF7FEFF 		bl	__aeabi_ddiv
 1679              	.LVL203:
 1680 0076 0646     		mov	r6, r0
 1681 0078 0F46     		mov	r7, r1
 1682              	.LVL204:
 1683              	.LBB160:
 1684              	.LBB161:
 1685              		.loc 4 48 0
 1686 007a 04F13C00 		add	r0, r4, #60
 1687 007e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1688              	.LVL205:
 1689              	.LBE161:
 1690              	.LBE160:
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1691              		.loc 2 59 0
 1692 0082 60EE087A 		vmul.f32	s15, s0, s16
 1693 0086 17EE900A 		vmov	r0, s15
 1694 008a FFF7FEFF 		bl	__aeabi_f2d
 1695              	.LVL206:
 1696 008e 2CA3     		adr	r3, .L158
 1697 0090 D3E90023 		ldrd	r2, [r3]
 1698 0094 FFF7FEFF 		bl	__aeabi_ddiv
 1699              	.LVL207:
 1700 0098 8046     		mov	r8, r0
 1701 009a 8946     		mov	r9, r1
 1702              	.LVL208:
 1703              	.LBB162:
 1704              	.LBB163:
 1705              		.loc 4 48 0
 1706 009c 04F19400 		add	r0, r4, #148
 1707 00a0 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1708              	.LVL209:
 1709              	.LBE163:
 1710              	.LBE162:
  59:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1711              		.loc 2 59 0
 1712 00a4 60EE087A 		vmul.f32	s15, s0, s16
 1713 00a8 17EE900A 		vmov	r0, s15
 1714 00ac FFF7FEFF 		bl	__aeabi_f2d
 1715              	.LVL210:
 1716 00b0 23A3     		adr	r3, .L158
 1717 00b2 D3E90023 		ldrd	r2, [r3]
 1718 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 1719              	.LVL211:
 1720 00ba CDE90201 		strd	r0, [sp, #8]
  58:Core/Src/robot/robot_functions.cpp **** 	printf("\n steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d", (int)(leg[0].get_
 1721              		.loc 2 58 0
 1722 00be 4046     		mov	r0, r8
 1723 00c0 4946     		mov	r1, r9
 1724 00c2 FFF7FEFF 		bl	__aeabi_d2iz
 1725              	.LVL212:
 1726 00c6 8046     		mov	r8, r0
 1727 00c8 3046     		mov	r0, r6
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 49


 1728 00ca 3946     		mov	r1, r7
 1729 00cc FFF7FEFF 		bl	__aeabi_d2iz
 1730              	.LVL213:
 1731 00d0 0646     		mov	r6, r0
 1732 00d2 DDE90201 		ldrd	r0, [sp, #8]
 1733 00d6 FFF7FEFF 		bl	__aeabi_d2iz
 1734              	.LVL214:
 1735 00da 0090     		str	r0, [sp]
 1736 00dc 4346     		mov	r3, r8
 1737 00de 3246     		mov	r2, r6
 1738 00e0 5146     		mov	r1, r10
 1739 00e2 1E48     		ldr	r0, .L158+28
 1740 00e4 FFF7FEFF 		bl	printf
 1741              	.LVL215:
 1742              	.LBB164:
 1743              	.LBB165:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1744              		.loc 4 45 0
 1745 00e8 2369     		ldr	r3, [r4, #16]
 1746              	.LVL216:
 1747              	.LBE165:
 1748              	.LBE164:
  62:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
 1749              		.loc 2 62 0
 1750 00ea 9D42     		cmp	r5, r3
 1751 00ec 12DD     		ble	.L157
  71:Core/Src/robot/robot_functions.cpp **** 		return false;
 1752              		.loc 2 71 0
 1753 00ee 0020     		movs	r0, #0
 1754              	.L153:
  73:Core/Src/robot/robot_functions.cpp **** }
 1755              		.loc 2 73 0
 1756 00f0 04B0     		add	sp, sp, #16
 1757              	.LCFI36:
 1758              		.cfi_remember_state
 1759              		.cfi_def_cfa_offset 40
 1760              		@ sp needed
 1761 00f2 BDEC028B 		vldm	sp!, {d8}
 1762              	.LCFI37:
 1763              		.cfi_restore 80
 1764              		.cfi_restore 81
 1765              		.cfi_def_cfa_offset 32
 1766 00f6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1767              	.LVL217:
 1768              	.L156:
 1769              	.LCFI38:
 1770              		.cfi_restore_state
  44:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
 1771              		.loc 2 44 0
 1772 00fa 144B     		ldr	r3, .L158+12
 1773 00fc 0022     		movs	r2, #0
 1774 00fe 1A70     		strb	r2, [r3]
  45:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 1775              		.loc 2 45 0
 1776 0100 9FED170A 		vldr.32	s0, .L158+32
 1777 0104 1748     		ldr	r0, .L158+36
 1778 0106 FFF7FEFF 		bl	_ZN8steering9set_angleEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 50


 1779              	.LVL218:
 1780 010a A1E7     		b	.L150
 1781              	.L151:
  53:Core/Src/robot/robot_functions.cpp **** 			USE_IMU_FLAG = false;
 1782              		.loc 2 53 0
 1783 010c 0F4B     		ldr	r3, .L158+12
 1784 010e 0022     		movs	r2, #0
 1785 0110 1A70     		strb	r2, [r3]
 1786 0112 98E7     		b	.L152
 1787              	.LVL219:
 1788              	.L157:
  64:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 1789              		.loc 2 64 0
 1790 0114 9FED128A 		vldr.32	s16, .L158+32
 1791 0118 B0EE480A 		vmov.f32	s0, s16
 1792 011c 2046     		mov	r0, r4
 1793 011e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1794              	.LVL220:
  65:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1795              		.loc 2 65 0
 1796 0122 B0EE480A 		vmov.f32	s0, s16
 1797 0126 04F15800 		add	r0, r4, #88
 1798 012a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1799              	.LVL221:
  66:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1800              		.loc 2 66 0
 1801 012e B0EE480A 		vmov.f32	s0, s16
 1802 0132 0C48     		ldr	r0, .L158+36
 1803 0134 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1804              	.LVL222:
  67:Core/Src/robot/robot_functions.cpp **** 		return true;
 1805              		.loc 2 67 0
 1806 0138 0120     		movs	r0, #1
 1807 013a D9E7     		b	.L153
 1808              	.L159:
 1809 013c AFF30080 		.align	3
 1810              	.L158:
 1811 0140 182D4454 		.word	1413754136
 1812 0144 FB210940 		.word	1074340347
 1813 0148 00100240 		.word	1073876992
 1814 014c 00000000 		.word	USE_IMU_FLAG
 1815 0150 00000000 		.word	leg
 1816 0154 00000000 		.word	.LANCHOR2
 1817 0158 00003443 		.word	1127481344
 1818 015c 00000000 		.word	.LC6
 1819 0160 00000000 		.word	0
 1820 0164 00000000 		.word	steering
 1821 0168 399D52A2 		.word	-1571644103
 1822 016c 46DF913F 		.word	1066524486
 1823              		.cfi_endproc
 1824              	.LFE492:
 1826              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1827              		.align	1
 1828              		.syntax unified
 1829              		.thumb
 1830              		.thumb_func
 1831              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 51


 1833              	_GLOBAL__sub_I_initial_angle:
 1834              	.LFB516:
 1835              		.loc 2 428 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839 0000 08B5     		push	{r3, lr}
 1840              	.LCFI39:
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 3, -8
 1843              		.cfi_offset 14, -4
 1844              		.loc 2 428 0
 1845 0002 4FF6FF71 		movw	r1, #65535
 1846 0006 0120     		movs	r0, #1
 1847 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1848              	.LVL223:
 1849 000c 08BD     		pop	{r3, pc}
 1850              		.cfi_endproc
 1851              	.LFE516:
 1853              		.section	.init_array,"aw",%init_array
 1854              		.align	2
 1855 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1856              		.global	tolerance
 1857              		.global	temp_robot_angle
 1858              		.global	robot_angle
 1859              		.global	STEERING_FLAG
 1860              		.global	start_time
 1861              		.global	summation_angle
 1862              		.global	curr_angle
 1863              		.global	initial_angle
 1864              		.section	.bss.STEERING_FLAG,"aw",%nobits
 1865              		.set	.LANCHOR8,. + 0
 1868              	STEERING_FLAG:
 1869 0000 00       		.space	1
 1870              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1871              		.set	.LANCHOR5,. + 0
 1874              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1875 0000 00       		.space	1
 1876              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1877              		.set	.LANCHOR6,. + 0
 1880              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1881 0000 00       		.space	1
 1882              		.section	.bss.curr_angle,"aw",%nobits
 1883              		.align	2
 1884              		.set	.LANCHOR1,. + 0
 1887              	curr_angle:
 1888 0000 00000000 		.space	12
 1888      00000000 
 1888      00000000 
 1889              		.section	.bss.initial_angle,"aw",%nobits
 1890              		.align	2
 1891              		.set	.LANCHOR0,. + 0
 1894              	initial_angle:
 1895 0000 00000000 		.space	12
 1895      00000000 
 1895      00000000 
 1896              		.section	.bss.robot_angle,"aw",%nobits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 52


 1897              		.align	2
 1898              		.set	.LANCHOR2,. + 0
 1901              	robot_angle:
 1902 0000 00000000 		.space	4
 1903              		.section	.bss.start_time,"aw",%nobits
 1904              		.align	2
 1905              		.set	.LANCHOR7,. + 0
 1908              	start_time:
 1909 0000 00000000 		.space	4
 1910              		.section	.bss.summation_angle,"aw",%nobits
 1911              		.align	2
 1912              		.set	.LANCHOR3,. + 0
 1915              	summation_angle:
 1916 0000 00000000 		.space	4
 1917              		.section	.bss.temp_robot_angle,"aw",%nobits
 1918              		.align	2
 1919              		.set	.LANCHOR4,. + 0
 1922              	temp_robot_angle:
 1923 0000 00000000 		.space	4
 1924              		.section	.data.tolerance,"aw",%progbits
 1925              		.align	2
 1928              	tolerance:
 1929 0000 5077563D 		.word	1029076816
 1930              		.section	.rodata._Z13move_steeringif.str1.4,"aMS",%progbits,1
 1931              		.align	2
 1932              	.LC0:
 1933 0000 09737465 		.ascii	"\011step_entered\011\000"
 1933      705F656E 
 1933      74657265 
 1933      640900
 1934              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1935              		.align	2
 1936              	.LC2:
 1937 0000 0A496E69 		.ascii	"\012Initializing_Leg_Orientation\011\000"
 1937      7469616C 
 1937      697A696E 
 1937      675F4C65 
 1937      675F4F72 
 1938 001f 00       		.space	1
 1939              	.LC3:
 1940 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1940      6974696E 
 1940      675F5468 
 1940      655F4C65 
 1940      67200900 
 1941              	.LC4:
 1942 0034 09496E69 		.ascii	"\011Initializing_Steering_Orientation\011 %d \011 %"
 1942      7469616C 
 1942      697A696E 
 1942      675F5374 
 1942      65657269 
 1943 005e 6400     		.ascii	"d\000"
 1944              		.section	.rodata._Z28initialize_steering_positionv.str1.4,"aMS",%progbits,1
 1945              		.align	2
 1946              	.LC1:
 1947 0000 0A616E67 		.ascii	"\012angle = %d\011\000"
 1947      6C65203D 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 53


 1947      20256409 
 1947      00
 1948              		.section	.rodata._Z2goif.str1.4,"aMS",%progbits,1
 1949              		.align	2
 1950              	.LC6:
 1951 0000 0A207374 		.ascii	"\012 steps = %d\011 robot_angle = %d\011 leg_1_angl"
 1951      65707320 
 1951      3D202564 
 1951      0920726F 
 1951      626F745F 
 1952 002a 65203D20 		.ascii	"e = %d\011 leg_2_angle = %d\000"
 1952      25640920 
 1952      6C65675F 
 1952      325F616E 
 1952      676C6520 
 1953              		.section	.rodata._Z8move_legif.str1.4,"aMS",%progbits,1
 1954              		.align	2
 1955              	.LC5:
 1956 0000 09256409 		.ascii	"\011%d\011\000"
 1956      00
 1957              		.text
 1958              	.Letext0:
 1959              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1960              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1961              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1962              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1963              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1964              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1965              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1966              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1967              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1968              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1969              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1970              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1971              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1972              		.file 19 "Core/Inc/periphs/tim.h"
 1973              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1974              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1975              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1976              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1977              		.file 24 "Core/Inc/devs/motor.h"
 1978              		.file 25 "Core/Inc/devs/encoder.h"
 1979              		.file 26 "Core/Inc/utils/pid_algorithms.h"
 1980              		.file 27 "Core/Inc/devs/limit_switch.h"
 1981              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1982              		.file 29 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1983              		.file 30 "<built-in>"
 1984              		.file 31 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 robot_functions.cpp
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:163    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:170    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:264    .text._Z9set_anglef:00000088 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:278    .text._Z22correct_steering_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:285    .text._Z22correct_steering_anglef:00000000 _Z22correct_steering_anglef
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:368    .text._Z22correct_steering_anglef:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:380    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:387    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:479    .text._Z13move_steeringif:00000070 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:492    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:499    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:611    .text._Z21calculate_robot_anglev:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:625    .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:632    .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:803    .text._Z23initialize_leg_positionv:000000d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:819    .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:826    .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:909    .text._Z28initialize_steering_positionv:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:923    .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:930    .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1119   .text._Z19initialize_positionv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1133   .text._Z11getup_n_runv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1140   .text._Z11getup_n_runv:00000000 _Z11getup_n_runv
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1259   .text._Z11getup_n_runv:000000a0 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1271   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1278   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1330   .text._Z15calculate_datasv:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1337   .text._Z14motion_profilefff:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1344   .text._Z14motion_profilefff:00000000 _Z14motion_profilefff
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1420   .text._Z14motion_profilefff:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1427   .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1434   .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1574   .text._Z8move_legif:000000c0 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1585   .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1592   .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1811   .text._Z2goif:00000140 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1827   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1833   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1854   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1928   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1922   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1901   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1868   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1908   .bss.start_time:00000000 start_time
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1915   .bss.summation_angle:00000000 summation_angle
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1887   .bss.curr_angle:00000000 curr_angle
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1894   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1869   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1874   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s 			page 55


C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1875   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1880   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1881   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1883   .bss.curr_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1890   .bss.initial_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1897   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1904   .bss.start_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1911   .bss.summation_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1918   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1925   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1931   .rodata._Z13move_steeringif.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1935   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1945   .rodata._Z28initialize_steering_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1949   .rodata._Z2goif.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccywHWae.s:1954   .rodata._Z8move_legif.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN8steering9set_angleEf
steering
__aeabi_dcmple
_ZN3leg9is_raisedEv
_ZN8steering9set_omegaEf
printf
steps
leg
__aeabi_dmul
_ZN3leg26is_raised_without_deadzoneEv
_ZN7encoder9get_angleEv
USE_IMU_FLAG
_ZN3leg9set_omegaEf
__aeabi_d2iz
HAL_GetTick
HAL_GPIO_WritePin
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
_ZN7encoder16get_actual_angleEv
HAL_GPIO_ReadPin
