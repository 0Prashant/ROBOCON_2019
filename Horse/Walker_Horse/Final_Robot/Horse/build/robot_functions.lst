ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot_functions.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4Vec3IfED2Ev,"axG",%progbits,_ZN4Vec3IfED5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN4Vec3IfED2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN4Vec3IfED2Ev:
  26              	.LFB509:
  27              		.file 1 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 2


  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 32 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE509:
  39              		.weak	_ZN4Vec3IfED1Ev
  40              		.thumb_set _ZN4Vec3IfED1Ev,_ZN4Vec3IfED2Ev
  41              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	_Z41__static_initialization_and_destruction_0ii:
  49              	.LFB515:
  50              		.file 2 "Core/Src/robot/robot_functions.cpp"
   1:Core/Src/robot/robot_functions.cpp **** #include "robot_functions.h"
   2:Core/Src/robot/robot_functions.cpp **** 
   3:Core/Src/robot/robot_functions.cpp **** extern leg leg[2];
   4:Core/Src/robot/robot_functions.cpp **** extern steering steering;
   5:Core/Src/robot/robot_functions.cpp **** extern bool USE_IMU_FLAG;
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
   8:Core/Src/robot/robot_functions.cpp **** 
   9:Core/Src/robot/robot_functions.cpp **** static const float robot_speed = 8;      //17 is the maximum with safe zone
  10:Core/Src/robot/robot_functions.cpp **** static const float steering_speed = 0.8; // 0.875 is the 100%
  11:Core/Src/robot/robot_functions.cpp **** static const float steering_angle_limit = 6 * PI / 180;
  12:Core/Src/robot/robot_functions.cpp **** 
  13:Core/Src/robot/robot_functions.cpp **** extern int steps[7];
  14:Core/Src/robot/robot_functions.cpp **** extern float angles[7];
  15:Core/Src/robot/robot_functions.cpp **** float summation_angle = 0;
  16:Core/Src/robot/robot_functions.cpp **** uint32_t start_time;
  17:Core/Src/robot/robot_functions.cpp **** 
  18:Core/Src/robot/robot_functions.cpp **** bool STEERING_FLAG = false;
  19:Core/Src/robot/robot_functions.cpp **** 
  20:Core/Src/robot/robot_functions.cpp **** float robot_angle = 0, temp_robot_angle = 0;
  21:Core/Src/robot/robot_functions.cpp **** float tolerance = 3 * PI / 180;
  22:Core/Src/robot/robot_functions.cpp **** 
  23:Core/Src/robot/robot_functions.cpp **** /*
  24:Core/Src/robot/robot_functions.cpp ****  * \brief This function makes the robot to reach the provided steps and angle.
  25:Core/Src/robot/robot_functions.cpp ****  * \brief this function needs to be called every 10 ms unti it reaches the desired position.
  26:Core/Src/robot/robot_functions.cpp ****  * \params: number of steps and angle in degree the robot has to reach.
  27:Core/Src/robot/robot_functions.cpp ****  * \returns true if robot reaches to the provided steps and angle.
  28:Core/Src/robot/robot_functions.cpp ****  * The angles that are caalibrated in degrees needs to be converted to radian.
  29:Core/Src/robot/robot_functions.cpp ****  * The function move_leg() is called at the beginning which moves the leg upto the desired point.
  30:Core/Src/robot/robot_functions.cpp ****  * There are two parameters inside this function move_leg(), the steps parameter is used whereas th
  31:Core/Src/robot/robot_functions.cpp ****  * The condition is if statement is to ensure that the robot is not in sand dune and it has not rea
  32:Core/Src/robot/robot_functions.cpp ****  * Whenever the robot reaches the sand dune the number of steps is declared to 100, so the step != 
  33:Core/Src/robot/robot_functions.cpp ****  * The function calculate_robot_angle() calculates its relative position from the initial state and
  34:Core/Src/robot/robot_functions.cpp ****  * This function operates until the desired steps and desired angles is reached. This is ensured by
  35:Core/Src/robot/robot_functions.cpp ****  * After the desired step and angle is reached, the function returns True.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 3


  36:Core/Src/robot/robot_functions.cpp **** */
  37:Core/Src/robot/robot_functions.cpp **** bool go(int step, float angle)
  38:Core/Src/robot/robot_functions.cpp **** {
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
  42:Core/Src/robot/robot_functions.cpp **** 	{
  43:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
  44:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
  45:Core/Src/robot/robot_functions.cpp **** 	}
  46:Core/Src/robot/robot_functions.cpp **** 	else
  47:Core/Src/robot/robot_functions.cpp **** 	{
  48:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = true;
  49:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
  50:Core/Src/robot/robot_functions.cpp **** 	}
  51:Core/Src/robot/robot_functions.cpp **** 	// printf(" \nsteps = %d\t robot_angle = %d\t curr_angle = %d\t", (int)(leg[0].get_steps()), (int)
  52:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
  53:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
  54:Core/Src/robot/robot_functions.cpp **** 
  55:Core/Src/robot/robot_functions.cpp **** 	// if ((leg[0].get_steps()   >= step) && (fabs(angle - robot_angle) <= 0.1))
  56:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
  57:Core/Src/robot/robot_functions.cpp **** 	{
  58:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
  59:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
  60:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
  61:Core/Src/robot/robot_functions.cpp **** 		return true;
  62:Core/Src/robot/robot_functions.cpp **** 	}
  63:Core/Src/robot/robot_functions.cpp **** 	else
  64:Core/Src/robot/robot_functions.cpp **** 	{
  65:Core/Src/robot/robot_functions.cpp **** 		return false;
  66:Core/Src/robot/robot_functions.cpp **** 	}
  67:Core/Src/robot/robot_functions.cpp **** }
  68:Core/Src/robot/robot_functions.cpp **** /*
  69:Core/Src/robot/robot_functions.cpp ****  *The function move_leg() is the basic function to give speed to the motor.
  70:Core/Src/robot/robot_functions.cpp ****  *\return params: void
  71:Core/Src/robot/robot_functions.cpp ****  *\input parameter: steps, angle
  72:Core/Src/robot/robot_functions.cpp ****  *This function takes two input parameters: step and angle. Although the parameter angle is not use
  73:Core/Src/robot/robot_functions.cpp ****  *The variable leg_speed stores the value of speed. When the robot is in sand_dune region, the spee
  74:Core/Src/robot/robot_functions.cpp ****  *The variable del_speed stores the value of difference in speed in case where the legs are not in 
  75:Core/Src/robot/robot_functions.cpp ****  *If the legs are not in 180 degrees phase difference, some calculations need to be made in order t
  76:Core/Src/robot/robot_functions.cpp ****  *This is done by evaluating the angles every time. Whenever the returned angle is not in the desir
  77:Core/Src/robot/robot_functions.cpp ****  *difference is the two leg angles multiplied by leg_speed which is again multiplied by the factor 
  78:Core/Src/robot/robot_functions.cpp ****  *Following the above reference, the leg_speed is calculated in closed loop basis.
  79:Core/Src/robot/robot_functions.cpp **** */
  80:Core/Src/robot/robot_functions.cpp **** void move_leg(int step, float angle)
  81:Core/Src/robot/robot_functions.cpp **** {
  82:Core/Src/robot/robot_functions.cpp **** 	float del_speed = 0;
  83:Core/Src/robot/robot_functions.cpp **** 	float leg_speed = robot_speed;
  84:Core/Src/robot/robot_functions.cpp **** 
  85:Core/Src/robot/robot_functions.cpp **** 	//Setting the slow speed in sand dune and tussok
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 36)) ? robot_speed / 1.3 : robot_speed;
  87:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[6])
  88:Core/Src/robot/robot_functions.cpp **** 	{
  89:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 4;
  90:Core/Src/robot/robot_functions.cpp **** 	}
  91:Core/Src/robot/robot_functions.cpp **** 
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 4


  93:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
  94:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
  95:Core/Src/robot/robot_functions.cpp **** 	{
  96:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
  97:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
  98:Core/Src/robot/robot_functions.cpp **** 	}
  99:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 100:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 101:Core/Src/robot/robot_functions.cpp **** }
 102:Core/Src/robot/robot_functions.cpp **** 
 103:Core/Src/robot/robot_functions.cpp **** /*
 104:Core/Src/robot/robot_functions.cpp ****  *The function move_steering() is concerned with moving the steering to certain angle with certain 
 105:Core/Src/robot/robot_functions.cpp ****  *Return patameter: void
 106:Core/Src/robot/robot_functions.cpp ****  *Input parameters: step, angle
 107:Core/Src/robot/robot_functions.cpp ****  *During initialization, the summation_angle is set to 0. After the robot starts to move, there is 
 108:Core/Src/robot/robot_functions.cpp ****  * This error of course needs to be minimized. This minimization is done by  summing all the drifts
 109:Core/Src/robot/robot_functions.cpp ****  * that it gives to the robot. Whenever the steering sets the angle for robot, this error is also a
 110:Core/Src/robot/robot_functions.cpp ****  * The robot changes the angle whenever the outside leg is raised. For the robot and leg to be in t
 111:Core/Src/robot/robot_functions.cpp ****  * the outside leg is in fallen state.
 112:Core/Src/robot/robot_functions.cpp **** */
 113:Core/Src/robot/robot_functions.cpp **** void move_steering(int step, float angle)
 114:Core/Src/robot/robot_functions.cpp **** {
 115:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 116:Core/Src/robot/robot_functions.cpp **** 	{
 117:Core/Src/robot/robot_functions.cpp **** 		summation_angle += robot_angle;
 118:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 119:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 120:Core/Src/robot/robot_functions.cpp **** 	}
 121:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 122:Core/Src/robot/robot_functions.cpp **** 	{
 123:Core/Src/robot/robot_functions.cpp **** 		// printf("  raised  ");
 124:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 125:Core/Src/robot/robot_functions.cpp **** 	}
 126:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
 127:Core/Src/robot/robot_functions.cpp **** 	{
 128:Core/Src/robot/robot_functions.cpp **** 		// printf("  fallen  ");
 129:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 130:Core/Src/robot/robot_functions.cpp **** 	}
 131:Core/Src/robot/robot_functions.cpp **** 	else
 132:Core/Src/robot/robot_functions.cpp **** 	{
 133:Core/Src/robot/robot_functions.cpp **** 		// printf("  nothing  ");
 134:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 135:Core/Src/robot/robot_functions.cpp **** 	}
 136:Core/Src/robot/robot_functions.cpp **** }
 137:Core/Src/robot/robot_functions.cpp **** /*
 138:Core/Src/robot/robot_functions.cpp ****  * The function set_angle() is concerned with setting the angle for steering.
 139:Core/Src/robot/robot_functions.cpp ****  * Return params : void
 140:Core/Src/robot/robot_functions.cpp ****  * Input patams : angle
 141:Core/Src/robot/robot_functions.cpp ****  * The variable del_angle stores the differnece in given input angle and the current angle returned
 142:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns positive value, it depicts that the robot has already reached the angl
 143:Core/Src/robot/robot_functions.cpp ****  * TO correct this to the desired angle the angle needs to be set.
 144:Core/Src/robot/robot_functions.cpp ****  * If this del_angle returns a negative value, it depicts that the robot has not reached the desire
 145:Core/Src/robot/robot_functions.cpp **** */
 146:Core/Src/robot/robot_functions.cpp **** void set_angle(float angle)
 147:Core/Src/robot/robot_functions.cpp **** {
 148:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 149:Core/Src/robot/robot_functions.cpp **** 	// printf("\tdel_angle = %d\t", (int)(del_angle));
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 5


 150:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 151:Core/Src/robot/robot_functions.cpp **** 	{
 152:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 153:Core/Src/robot/robot_functions.cpp **** 	}
 154:Core/Src/robot/robot_functions.cpp **** 	else
 155:Core/Src/robot/robot_functions.cpp **** 	{
 156:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 157:Core/Src/robot/robot_functions.cpp **** 	}
 158:Core/Src/robot/robot_functions.cpp **** 	//*/
 159:Core/Src/robot/robot_functions.cpp **** }
 160:Core/Src/robot/robot_functions.cpp **** /*
 161:Core/Src/robot/robot_functions.cpp ****  * This function correct_steering_angle() is called whenever the outside leg is fallen and the stee
 162:Core/Src/robot/robot_functions.cpp ****  * return param: void
 163:Core/Src/robot/robot_functions.cpp ****  * input params: angle
 164:Core/Src/robot/robot_functions.cpp ****  * same as set_angle function. the difference is this function is called whenever the leg is not ra
 165:Core/Src/robot/robot_functions.cpp ****  * the leg is raised.
 166:Core/Src/robot/robot_functions.cpp **** */
 167:Core/Src/robot/robot_functions.cpp **** void correct_steering_angle(float angle)
 168:Core/Src/robot/robot_functions.cpp **** {
 169:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 170:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 171:Core/Src/robot/robot_functions.cpp **** 	{
 172:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 173:Core/Src/robot/robot_functions.cpp **** 		// printf("center_alligned\t");
 174:Core/Src/robot/robot_functions.cpp **** 	}
 175:Core/Src/robot/robot_functions.cpp **** 	else
 176:Core/Src/robot/robot_functions.cpp **** 	{
 177:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 178:Core/Src/robot/robot_functions.cpp **** 		// printf("peak_alligned\t");
 179:Core/Src/robot/robot_functions.cpp **** 	}
 180:Core/Src/robot/robot_functions.cpp **** 	//*/
 181:Core/Src/robot/robot_functions.cpp **** }
 182:Core/Src/robot/robot_functions.cpp **** /**
 183:Core/Src/robot/robot_functions.cpp ****  * This function calculate_robot_angle() calculates the relative robot angle from the initial posit
 184:Core/Src/robot/robot_functions.cpp ****  * to zero and all other angles are taken with reference to this initial angle.
 185:Core/Src/robot/robot_functions.cpp ****  * return param : void
 186:Core/Src/robot/robot_functions.cpp ****  * /params input parameters : void
 187:Core/Src/robot/robot_functions.cpp ****  * The variable robot_angle stores the realtive value of robot angle from the original position
 188:Core/Src/robot/robot_functions.cpp ****  * The temp_robot_angle is just the temporary variable.
 189:Core/Src/robot/robot_functions.cpp **** */
 190:Core/Src/robot/robot_functions.cpp **** void calculate_robot_angle()
 191:Core/Src/robot/robot_functions.cpp **** {
 192:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 193:Core/Src/robot/robot_functions.cpp **** 	{
 194:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 195:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 196:Core/Src/robot/robot_functions.cpp **** 	}
 197:Core/Src/robot/robot_functions.cpp **** 	else
 198:Core/Src/robot/robot_functions.cpp **** 	{
 199:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 200:Core/Src/robot/robot_functions.cpp **** 		{
 201:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 202:Core/Src/robot/robot_functions.cpp **** 		}
 203:Core/Src/robot/robot_functions.cpp **** 		else
 204:Core/Src/robot/robot_functions.cpp **** 		{
 205:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 206:Core/Src/robot/robot_functions.cpp **** 		}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 6


 207:Core/Src/robot/robot_functions.cpp **** 	}
 208:Core/Src/robot/robot_functions.cpp **** }
 209:Core/Src/robot/robot_functions.cpp **** 
 210:Core/Src/robot/robot_functions.cpp **** /**
 211:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the robot in erected position at the start of the game.
 212:Core/Src/robot/robot_functions.cpp ****  * \bug remember to face towards anticlockwise direction from the 0 position at the start of the ga
 213:Core/Src/robot/robot_functions.cpp ****  * \params void
 214:Core/Src/robot/robot_functions.cpp ****  * \returns void
 215:Core/Src/robot/robot_functions.cpp ****  */
 216:Core/Src/robot/robot_functions.cpp **** 
 217:Core/Src/robot/robot_functions.cpp **** void initialize_position(void)
 218:Core/Src/robot/robot_functions.cpp **** {
 219:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 220:Core/Src/robot/robot_functions.cpp **** 	while (true)
 221:Core/Src/robot/robot_functions.cpp **** 	{
 222:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 223:Core/Src/robot/robot_functions.cpp **** 		{
 224:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 225:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 226:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 227:Core/Src/robot/robot_functions.cpp **** 				break;
 228:Core/Src/robot/robot_functions.cpp **** 		}
 229:Core/Src/robot/robot_functions.cpp **** 	}
 230:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 231:Core/Src/robot/robot_functions.cpp **** 	{
 232:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 233:Core/Src/robot/robot_functions.cpp **** 		{
 234:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 235:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 236:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 237:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 238:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 239:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 240:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_actual_angle(90 * PI / 180);
 241:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_actual_angle(90 * PI / 180);
 242:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 243:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 244:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 245:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 246:Core/Src/robot/robot_functions.cpp **** 		}
 247:Core/Src/robot/robot_functions.cpp **** 	}
 248:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 249:Core/Src/robot/robot_functions.cpp **** 	while (true)
 250:Core/Src/robot/robot_functions.cpp **** 	{
 251:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 252:Core/Src/robot/robot_functions.cpp **** 		{
 253:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 254:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 255:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 256:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 257:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 258:Core/Src/robot/robot_functions.cpp **** 				break;
 259:Core/Src/robot/robot_functions.cpp **** 		}
 260:Core/Src/robot/robot_functions.cpp **** 	}
 261:Core/Src/robot/robot_functions.cpp **** }
 262:Core/Src/robot/robot_functions.cpp **** 
 263:Core/Src/robot/robot_functions.cpp **** /**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 7


 264:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the leg in erected position at the start of the game.
 265:Core/Src/robot/robot_functions.cpp ****  * \params void
 266:Core/Src/robot/robot_functions.cpp ****  * \returns true if leg is erected.
 267:Core/Src/robot/robot_functions.cpp ****  */
 268:Core/Src/robot/robot_functions.cpp **** bool initialize_leg_position(void)
 269:Core/Src/robot/robot_functions.cpp **** {
 270:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 271:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 272:Core/Src/robot/robot_functions.cpp **** 	static bool leg0_flag = false;
 273:Core/Src/robot/robot_functions.cpp **** 	static bool leg1_flag = false;
 274:Core/Src/robot/robot_functions.cpp **** 
 275:Core/Src/robot/robot_functions.cpp **** 	// printf("\n\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d, \trobot_angle = %d"
 276:Core/Src/robot/robot_functions.cpp **** 	// , leg[0].get_steps(), (int)(leg[0].get_angle() * 180 / PI), leg[1].get_steps(), (int)(leg[1].ge
 277:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 278:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 279:Core/Src/robot/robot_functions.cpp **** 	{
 280:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 281:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 282:Core/Src/robot/robot_functions.cpp **** 	}
 283:Core/Src/robot/robot_functions.cpp **** 	else
 284:Core/Src/robot/robot_functions.cpp **** 	{
 285:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 286:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 287:Core/Src/robot/robot_functions.cpp **** 	}
 288:Core/Src/robot/robot_functions.cpp **** 
 289:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 290:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 291:Core/Src/robot/robot_functions.cpp **** 	{
 292:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 293:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 294:Core/Src/robot/robot_functions.cpp **** 	}
 295:Core/Src/robot/robot_functions.cpp **** 	else
 296:Core/Src/robot/robot_functions.cpp **** 	{
 297:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 298:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 299:Core/Src/robot/robot_functions.cpp **** 	}
 300:Core/Src/robot/robot_functions.cpp **** 
 301:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 302:Core/Src/robot/robot_functions.cpp **** 	{
 303:Core/Src/robot/robot_functions.cpp **** 
 304:Core/Src/robot/robot_functions.cpp **** 		return true;
 305:Core/Src/robot/robot_functions.cpp **** 	}
 306:Core/Src/robot/robot_functions.cpp **** 	else
 307:Core/Src/robot/robot_functions.cpp **** 	{
 308:Core/Src/robot/robot_functions.cpp **** 		return false;
 309:Core/Src/robot/robot_functions.cpp **** 	}
 310:Core/Src/robot/robot_functions.cpp **** }
 311:Core/Src/robot/robot_functions.cpp **** 
 312:Core/Src/robot/robot_functions.cpp **** /**
 313:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 314:Core/Src/robot/robot_functions.cpp ****  * \brief This function initializes the steering in center position at the start of the game.
 315:Core/Src/robot/robot_functions.cpp ****  * \bug remember to towards anticlockwise direction from the 0 position at the start of the game.
 316:Core/Src/robot/robot_functions.cpp ****  * \params void
 317:Core/Src/robot/robot_functions.cpp ****  * \returns true if reached to 0 angle.
 318:Core/Src/robot/robot_functions.cpp ****  */
 319:Core/Src/robot/robot_functions.cpp **** bool initialize_steering_position(void)
 320:Core/Src/robot/robot_functions.cpp **** {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 8


 321:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 322:Core/Src/robot/robot_functions.cpp **** 	// printf("\tsteps0 = %d, angle0 = %d\tsteps0 = %d, angle0 = %d", leg[0].get_steps(),(int)(leg[0].
 323:Core/Src/robot/robot_functions.cpp **** 	// , leg[1].get_steps(),(int)(leg[1].get_angle()*180/PI) );
 324:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 325:Core/Src/robot/robot_functions.cpp **** 	{
 326:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 327:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 328:Core/Src/robot/robot_functions.cpp **** 		return true;
 329:Core/Src/robot/robot_functions.cpp **** 	}
 330:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 331:Core/Src/robot/robot_functions.cpp **** 	{
 332:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 333:Core/Src/robot/robot_functions.cpp **** 		return true;
 334:Core/Src/robot/robot_functions.cpp **** 	}
 335:Core/Src/robot/robot_functions.cpp **** 	else
 336:Core/Src/robot/robot_functions.cpp **** 	{
 337:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 338:Core/Src/robot/robot_functions.cpp **** 		return false;
 339:Core/Src/robot/robot_functions.cpp **** 	}
 340:Core/Src/robot/robot_functions.cpp **** }
 341:Core/Src/robot/robot_functions.cpp **** 
 342:Core/Src/robot/robot_functions.cpp **** void getup_n_run()
 343:Core/Src/robot/robot_functions.cpp **** {
 344:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 345:Core/Src/robot/robot_functions.cpp **** 	float initial_tolerance = 4;
 346:Core/Src/robot/robot_functions.cpp **** 	float leg_initial_position = 90;
 347:Core/Src/robot/robot_functions.cpp **** 	leg[0].reset_angle(90 * PI / 180);
 348:Core/Src/robot/robot_functions.cpp **** 	leg[1].reset_angle(270 * PI / 180);
 349:Core/Src/robot/robot_functions.cpp **** 
 350:Core/Src/robot/robot_functions.cpp **** 	while (true)
 351:Core/Src/robot/robot_functions.cpp **** 	{
 352:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 353:Core/Src/robot/robot_functions.cpp **** 		{
 354:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 355:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 356:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 357:Core/Src/robot/robot_functions.cpp **** 			if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 358:Core/Src/robot/robot_functions.cpp **** 			    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 359:Core/Src/robot/robot_functions.cpp **** 			{
 360:Core/Src/robot/robot_functions.cpp **** 				leg[1].set_omega(0);
 361:Core/Src/robot/robot_functions.cpp **** 				break;
 362:Core/Src/robot/robot_functions.cpp **** 			}
 363:Core/Src/robot/robot_functions.cpp **** 			else
 364:Core/Src/robot/robot_functions.cpp **** 			{
 365:Core/Src/robot/robot_functions.cpp **** 				leg[1].set_omega(3);
 366:Core/Src/robot/robot_functions.cpp **** 			}
 367:Core/Src/robot/robot_functions.cpp **** 		}
 368:Core/Src/robot/robot_functions.cpp **** 	}
 369:Core/Src/robot/robot_functions.cpp **** 
 370:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 371:Core/Src/robot/robot_functions.cpp **** 	while (true)
 372:Core/Src/robot/robot_functions.cpp **** 	{
 373:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 374:Core/Src/robot/robot_functions.cpp **** 		{
 375:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 376:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 377:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 9


 378:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 379:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 380:Core/Src/robot/robot_functions.cpp **** 				break;
 381:Core/Src/robot/robot_functions.cpp **** 		}
 382:Core/Src/robot/robot_functions.cpp **** 	}
 383:Core/Src/robot/robot_functions.cpp **** 
 384:Core/Src/robot/robot_functions.cpp **** 	leg[0].reset_actual_angle(90 * PI / 180);
 385:Core/Src/robot/robot_functions.cpp **** 	leg[1].reset_actual_angle(90 * PI / 180);
 386:Core/Src/robot/robot_functions.cpp **** 	leg[0].reset_angle(90 * PI / 180);
 387:Core/Src/robot/robot_functions.cpp **** 	leg[1].reset_angle(90 * PI / 180);
 388:Core/Src/robot/robot_functions.cpp **** }
 389:Core/Src/robot/robot_functions.cpp **** 
 390:Core/Src/robot/robot_functions.cpp **** /**
 391:Core/Src/robot/robot_functions.cpp ****  * \brief Called by initialize_position();
 392:Core/Src/robot/robot_functions.cpp ****  * \brief This function calculates all the datas including the motor omegas, orientation and angles
 393:Core/Src/robot/robot_functions.cpp ****  * \remarks remember to call this function only once in every 10 ms.
 394:Core/Src/robot/robot_functions.cpp ****  * \params void
 395:Core/Src/robot/robot_functions.cpp ****  * \returns void
 396:Core/Src/robot/robot_functions.cpp ****  */
 397:Core/Src/robot/robot_functions.cpp **** void calculate_datas()
 398:Core/Src/robot/robot_functions.cpp **** {
 399:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 400:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 401:Core/Src/robot/robot_functions.cpp **** 	steering.calculate_omega();
 402:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 403:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 404:Core/Src/robot/robot_functions.cpp **** 	// printf("\tangleZ = %d\t", (int)curr_angle.getZ());
 405:Core/Src/robot/robot_functions.cpp **** 	// printf("\trobot_angle = %d\t", (int)(robot_angle*180/PI));
 406:Core/Src/robot/robot_functions.cpp **** }
 407:Core/Src/robot/robot_functions.cpp **** 
 408:Core/Src/robot/robot_functions.cpp **** float motion_profile(float angle_in_degrees, float min_speed, float max_speed)
 409:Core/Src/robot/robot_functions.cpp **** {
 410:Core/Src/robot/robot_functions.cpp **** 	float damping_angle = 30;
 411:Core/Src/robot/robot_functions.cpp **** 	float speed = 0;
 412:Core/Src/robot/robot_functions.cpp **** 	min_speed = 1.8;
 413:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 414:Core/Src/robot/robot_functions.cpp **** 	{
 415:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 416:Core/Src/robot/robot_functions.cpp **** 		// max_speed = 10;
 417:Core/Src/robot/robot_functions.cpp **** 	}
 418:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 419:Core/Src/robot/robot_functions.cpp **** 	{
 420:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 421:Core/Src/robot/robot_functions.cpp **** 		// printf("condition1");
 422:Core/Src/robot/robot_functions.cpp **** 	}
 423:Core/Src/robot/robot_functions.cpp **** 
 424:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 425:Core/Src/robot/robot_functions.cpp **** 	{
 426:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 427:Core/Src/robot/robot_functions.cpp **** 		// printf("conditionelseif");
 428:Core/Src/robot/robot_functions.cpp **** 	}
 429:Core/Src/robot/robot_functions.cpp **** 
 430:Core/Src/robot/robot_functions.cpp **** 	else
 431:Core/Src/robot/robot_functions.cpp **** 	{
 432:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 433:Core/Src/robot/robot_functions.cpp **** 		// printf("else");
 434:Core/Src/robot/robot_functions.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 10


 435:Core/Src/robot/robot_functions.cpp **** 	// printf("\tSpeed = %d", (int)(speed*100));
 436:Core/Src/robot/robot_functions.cpp **** 
 437:Core/Src/robot/robot_functions.cpp **** 	return speed;
 438:Core/Src/robot/robot_functions.cpp **** }...
  51              		.loc 2 438 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
  56 0000 0128     		cmp	r0, #1
  57 0002 00D0     		beq	.L8
  58              	.L5:
  59 0004 7047     		bx	lr
  60              	.L8:
  61              		.loc 2 438 0 is_stmt 0 discriminator 1
  62 0006 4FF6FF73 		movw	r3, #65535
  63 000a 9942     		cmp	r1, r3
  64 000c FAD1     		bne	.L5
  65              		.loc 2 438 0
  66 000e 70B5     		push	{r4, r5, r6, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 4, -16
  70              		.cfi_offset 5, -12
  71              		.cfi_offset 6, -8
  72              		.cfi_offset 14, -4
  73              	.LVL2:
  74              	.LBB95:
  75              	.LBB96:
  76              	.LBB97:
  77              	.LBB98:
  78              	.LBB99:
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  79              		.loc 1 37 0 is_stmt 1
  80 0010 0948     		ldr	r0, .L9
  81              	.LVL3:
  82 0012 0024     		movs	r4, #0
  83 0014 0460     		str	r4, [r0]	@ float
  84              	.LVL4:
  85              	.LBE99:
  86              	.LBE98:
  87              	.LBB100:
  88              	.LBB101:
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  89              		.loc 1 38 0
  90 0016 4460     		str	r4, [r0, #4]	@ float
  91              	.LVL5:
  92              	.LBE101:
  93              	.LBE100:
  94              	.LBB102:
  95              	.LBB103:
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  96              		.loc 1 39 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 11


  97 0018 8460     		str	r4, [r0, #8]	@ float
  98              	.LVL6:
  99              	.LBE103:
 100              	.LBE102:
 101              	.LBE97:
 102              	.LBE96:
 103              	.LBE95:
   6:Core/Src/robot/robot_functions.cpp **** Vec3<float> initial_angle;
 104              		.loc 2 6 0
 105 001a 084E     		ldr	r6, .L9+4
 106 001c 084D     		ldr	r5, .L9+8
 107 001e 3246     		mov	r2, r6
 108 0020 2946     		mov	r1, r5
 109              	.LVL7:
 110 0022 FFF7FEFF 		bl	__aeabi_atexit
 111              	.LVL8:
 112              	.LBB104:
 113              	.LBB105:
 114              	.LBB106:
 115              	.LBB107:
 116              	.LBB108:
  37:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
 117              		.loc 1 37 0
 118 0026 0748     		ldr	r0, .L9+12
 119 0028 0460     		str	r4, [r0]	@ float
 120              	.LVL9:
 121              	.LBE108:
 122              	.LBE107:
 123              	.LBB109:
 124              	.LBB110:
  38:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 125              		.loc 1 38 0
 126 002a 4460     		str	r4, [r0, #4]	@ float
 127              	.LVL10:
 128              	.LBE110:
 129              	.LBE109:
 130              	.LBB111:
 131              	.LBB112:
 132              		.loc 1 39 0
 133 002c 8460     		str	r4, [r0, #8]	@ float
 134              	.LVL11:
 135              	.LBE112:
 136              	.LBE111:
 137              	.LBE106:
 138              	.LBE105:
 139              	.LBE104:
   7:Core/Src/robot/robot_functions.cpp **** Vec3<float> curr_angle;
 140              		.loc 2 7 0
 141 002e 3246     		mov	r2, r6
 142 0030 2946     		mov	r1, r5
 143 0032 FFF7FEFF 		bl	__aeabi_atexit
 144              	.LVL12:
 145              		.loc 2 438 0
 146 0036 70BD     		pop	{r4, r5, r6, pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 12


 150 0038 00000000 		.word	.LANCHOR0
 151 003c 00000000 		.word	__dso_handle
 152 0040 00000000 		.word	_ZN4Vec3IfED1Ev
 153 0044 00000000 		.word	.LANCHOR1
 154              		.cfi_endproc
 155              	.LFE515:
 157              		.global	__aeabi_f2d
 158              		.global	__aeabi_ddiv
 159              		.global	__aeabi_d2f
 160              		.global	__aeabi_dcmpgt
 161              		.global	__aeabi_dcmplt
 162              		.section	.text._Z9set_anglef,"ax",%progbits
 163              		.align	1
 164              		.global	_Z9set_anglef
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	_Z9set_anglef:
 171              	.LFB495:
 147:Core/Src/robot/robot_functions.cpp **** {
 172              		.loc 2 147 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL13:
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 182 0002 2DED028B 		vpush.64	{d8}
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 80, -16
 186              		.cfi_offset 81, -12
 148:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 187              		.loc 2 148 0
 188 0006 264B     		ldr	r3, .L25+24
 189 0008 D3ED007A 		vldr.32	s15, [r3]
 190 000c 30EE670A 		vsub.f32	s0, s0, s15
 191              	.LVL14:
 192 0010 DFED247A 		vldr.32	s15, .L25+28
 193 0014 60EE277A 		vmul.f32	s15, s0, s15
 194 0018 17EE900A 		vmov	r0, s15
 195 001c FFF7FEFF 		bl	__aeabi_f2d
 196              	.LVL15:
 197 0020 19A3     		adr	r3, .L25
 198 0022 D3E90023 		ldrd	r2, [r3]
 199 0026 FFF7FEFF 		bl	__aeabi_ddiv
 200              	.LVL16:
 201 002a FFF7FEFF 		bl	__aeabi_d2f
 202              	.LVL17:
 203 002e 08EE100A 		vmov	s16, r0
 204              	.LVL18:
 150:Core/Src/robot/robot_functions.cpp **** 	if (del_angle >= 0)
 205              		.loc 2 150 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 13


 206 0032 B5EEC08A 		vcmpe.f32	s16, #0
 207 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 208 003a 12DB     		blt	.L22
 152:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 209              		.loc 2 152 0
 210 003c FFF7FEFF 		bl	__aeabi_f2d
 211              	.LVL19:
 212 0040 13A3     		adr	r3, .L25+8
 213 0042 D3E90023 		ldrd	r2, [r3]
 214 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 215              	.LVL20:
 216 004a 38B9     		cbnz	r0, .L24
 217              	.LVL21:
 218              	.L14:
 152:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 219              		.loc 2 152 0 is_stmt 0 discriminator 4
 220 004c B0EE480A 		vmov.f32	s0, s16
 221 0050 1548     		ldr	r0, .L25+32
 222 0052 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 223              	.LVL22:
 224              	.L11:
 159:Core/Src/robot/robot_functions.cpp **** }
 225              		.loc 2 159 0 is_stmt 1
 226 0056 BDEC028B 		vldm	sp!, {d8}
 227              	.LCFI3:
 228              		.cfi_remember_state
 229              		.cfi_restore 80
 230              		.cfi_restore 81
 231              		.cfi_def_cfa_offset 8
 232 005a 08BD     		pop	{r3, pc}
 233              	.LVL23:
 234              	.L24:
 235              	.LCFI4:
 236              		.cfi_restore_state
 152:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle > (steering_angle_limit * 180 / PI)) ? (steering_angle_limit * 180 
 237              		.loc 2 152 0
 238 005c B1EE088A 		vmov.f32	s16, #6.0e+0
 239              	.LVL24:
 240 0060 F4E7     		b	.L14
 241              	.LVL25:
 242              	.L22:
 156:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 243              		.loc 2 156 0
 244 0062 FFF7FEFF 		bl	__aeabi_f2d
 245              	.LVL26:
 246 0066 0CA3     		adr	r3, .L25+16
 247 0068 D3E90023 		ldrd	r2, [r3]
 248 006c FFF7FEFF 		bl	__aeabi_dcmplt
 249              	.LVL27:
 250 0070 08B1     		cbz	r0, .L17
 251 0072 B9EE088A 		vmov.f32	s16, #-6.0e+0
 252              	.LVL28:
 253              	.L17:
 156:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle((del_angle < -(steering_angle_limit * 180 / PI)) ? -(steering_angle_limit * 18
 254              		.loc 2 156 0 is_stmt 0 discriminator 4
 255 0076 B0EE480A 		vmov.f32	s0, s16
 256 007a 0B48     		ldr	r0, .L25+32
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 14


 257 007c FFF7FEFF 		bl	_ZN8steering9set_angleEf
 258              	.LVL29:
 159:Core/Src/robot/robot_functions.cpp **** }
 259              		.loc 2 159 0 is_stmt 1 discriminator 4
 260 0080 E9E7     		b	.L11
 261              	.L26:
 262 0082 00BFAFF3 		.align	3
 262      0080
 263              	.L25:
 264 0088 182D4454 		.word	1413754136
 265 008c FB210940 		.word	1074340347
 266 0090 8DD80401 		.word	17094797
 267 0094 00001840 		.word	1075314688
 268 0098 8DD80401 		.word	17094797
 269 009c 000018C0 		.word	-1072168960
 270 00a0 00000000 		.word	.LANCHOR2
 271 00a4 00003443 		.word	1127481344
 272 00a8 00000000 		.word	steering
 273              		.cfi_endproc
 274              	.LFE495:
 276              		.global	__aeabi_dcmple
 277              		.section	.text._Z22correct_steering_anglef,"ax",%progbits
 278              		.align	1
 279              		.global	_Z22correct_steering_anglef
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	_Z22correct_steering_anglef:
 286              	.LFB496:
 168:Core/Src/robot/robot_functions.cpp **** {
 287              		.loc 2 168 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL30:
 292 0000 08B5     		push	{r3, lr}
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 297 0002 2DED028B 		vpush.64	{d8}
 298              	.LCFI6:
 299              		.cfi_def_cfa_offset 16
 300              		.cfi_offset 80, -16
 301              		.cfi_offset 81, -12
 169:Core/Src/robot/robot_functions.cpp **** 	float del_angle = (angle - robot_angle) * 180 / PI;
 302              		.loc 2 169 0
 303 0006 204B     		ldr	r3, .L40+16
 304 0008 D3ED007A 		vldr.32	s15, [r3]
 305 000c 30EE670A 		vsub.f32	s0, s0, s15
 306              	.LVL31:
 307 0010 DFED1E7A 		vldr.32	s15, .L40+20
 308 0014 60EE277A 		vmul.f32	s15, s0, s15
 309 0018 17EE900A 		vmov	r0, s15
 310 001c FFF7FEFF 		bl	__aeabi_f2d
 311              	.LVL32:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 15


 312 0020 15A3     		adr	r3, .L40
 313 0022 D3E90023 		ldrd	r2, [r3]
 314 0026 FFF7FEFF 		bl	__aeabi_ddiv
 315              	.LVL33:
 316 002a FFF7FEFF 		bl	__aeabi_d2f
 317              	.LVL34:
 318 002e 08EE100A 		vmov	s16, r0
 319              	.LVL35:
 170:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_angle) <= (steering_angle_limit * 180 / PI))
 320              		.loc 2 170 0
 321 0032 F0EEC87A 		vabs.f32	s15, s16
 322 0036 17EE900A 		vmov	r0, s15
 323              	.LVL36:
 324 003a FFF7FEFF 		bl	__aeabi_f2d
 325              	.LVL37:
 326 003e 10A3     		adr	r3, .L40+8
 327 0040 D3E90023 		ldrd	r2, [r3]
 328 0044 FFF7FEFF 		bl	__aeabi_dcmple
 329              	.LVL38:
 330 0048 60B9     		cbnz	r0, .L39
 177:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 331              		.loc 2 177 0
 332 004a B5EEC08A 		vcmpe.f32	s16, #0
 333 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 334 0052 0DDD     		ble	.L37
 335 0054 B9EE080A 		vmov.f32	s0, #-6.0e+0
 336              	.L31:
 177:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 337              		.loc 2 177 0 is_stmt 0 discriminator 4
 338 0058 0D48     		ldr	r0, .L40+24
 339 005a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 340              	.LVL39:
 341              	.L27:
 181:Core/Src/robot/robot_functions.cpp **** }
 342              		.loc 2 181 0 is_stmt 1
 343 005e BDEC028B 		vldm	sp!, {d8}
 344              	.LCFI7:
 345              		.cfi_remember_state
 346              		.cfi_restore 80
 347              		.cfi_restore 81
 348              		.cfi_def_cfa_offset 8
 349              	.LVL40:
 350 0062 08BD     		pop	{r3, pc}
 351              	.LVL41:
 352              	.L39:
 353              	.LCFI8:
 354              		.cfi_restore_state
 172:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 355              		.loc 2 172 0
 356 0064 9FED0B0A 		vldr.32	s0, .L40+28
 357 0068 0948     		ldr	r0, .L40+24
 358 006a FFF7FEFF 		bl	_ZN8steering9set_angleEf
 359              	.LVL42:
 360 006e F6E7     		b	.L27
 361              	.L37:
 177:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(del_angle > 0 ? -(steering_angle_limit * 180 / PI) : (steering_angle_limit * 1
 362              		.loc 2 177 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 16


 363 0070 B1EE080A 		vmov.f32	s0, #6.0e+0
 364 0074 F0E7     		b	.L31
 365              	.L41:
 366 0076 00BF     		.align	3
 367              	.L40:
 368 0078 182D4454 		.word	1413754136
 369 007c FB210940 		.word	1074340347
 370 0080 8DD80401 		.word	17094797
 371 0084 00001840 		.word	1075314688
 372 0088 00000000 		.word	.LANCHOR2
 373 008c 00003443 		.word	1127481344
 374 0090 00000000 		.word	steering
 375 0094 00000000 		.word	0
 376              		.cfi_endproc
 377              	.LFE496:
 379              		.section	.text._Z13move_steeringif,"ax",%progbits
 380              		.align	1
 381              		.global	_Z13move_steeringif
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	_Z13move_steeringif:
 388              	.LFB494:
 114:Core/Src/robot/robot_functions.cpp **** {
 389              		.loc 2 114 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL43:
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI9:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 399 0002 2DED028B 		vpush.64	{d8}
 400              	.LCFI10:
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 80, -16
 403              		.cfi_offset 81, -12
 404 0006 B0EE408A 		vmov.f32	s16, s0
 115:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[0])
 405              		.loc 2 115 0
 406 000a 184B     		ldr	r3, .L51
 407 000c 1B68     		ldr	r3, [r3]
 408 000e 8342     		cmp	r3, r0
 409 0010 0ED0     		beq	.L48
 410              	.LVL44:
 411              	.L43:
 121:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].is_raised() == Leg_condition::RAISED)
 412              		.loc 2 121 0
 413 0012 1748     		ldr	r0, .L51+4
 414              	.LVL45:
 415 0014 FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 416              	.LVL46:
 417 0018 D8B1     		cbz	r0, .L49
 126:Core/Src/robot/robot_functions.cpp **** 	else if (leg[0].is_raised() == Leg_condition::FALLEN)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 17


 418              		.loc 2 126 0
 419 001a 1548     		ldr	r0, .L51+4
 420 001c FFF7FEFF 		bl	_ZN3leg9is_raisedEv
 421              	.LVL47:
 422 0020 0128     		cmp	r0, #1
 423 0022 1DD0     		beq	.L50
 134:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 424              		.loc 2 134 0
 425 0024 9FED130A 		vldr.32	s0, .L51+8
 426 0028 1348     		ldr	r0, .L51+12
 427 002a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 428              	.LVL48:
 136:Core/Src/robot/robot_functions.cpp **** }
 429              		.loc 2 136 0
 430 002e 14E0     		b	.L42
 431              	.LVL49:
 432              	.L48:
 117:Core/Src/robot/robot_functions.cpp **** 		summation_angle += robot_angle;
 433              		.loc 2 117 0
 434 0030 124B     		ldr	r3, .L51+16
 435 0032 D3ED007A 		vldr.32	s15, [r3]
 436 0036 124A     		ldr	r2, .L51+20
 437 0038 92ED007A 		vldr.32	s14, [r2]
 438 003c 77EE877A 		vadd.f32	s15, s15, s14
 439 0040 C3ED007A 		vstr.32	s15, [r3]
 118:Core/Src/robot/robot_functions.cpp **** 		angle = -summation_angle;
 440              		.loc 2 118 0
 441 0044 F1EE677A 		vneg.f32	s15, s15
 442              	.LVL50:
 119:Core/Src/robot/robot_functions.cpp **** 		angle /= 500;
 443              		.loc 2 119 0
 444 0048 9FED0E7A 		vldr.32	s14, .L51+24
 445 004c 87EE878A 		vdiv.f32	s16, s15, s14
 446              	.LVL51:
 447 0050 DFE7     		b	.L43
 448              	.LVL52:
 449              	.L49:
 124:Core/Src/robot/robot_functions.cpp **** 		set_angle(angle);
 450              		.loc 2 124 0
 451 0052 B0EE480A 		vmov.f32	s0, s16
 452 0056 FFF7FEFF 		bl	_Z9set_anglef
 453              	.LVL53:
 454              	.L42:
 136:Core/Src/robot/robot_functions.cpp **** }
 455              		.loc 2 136 0
 456 005a BDEC028B 		vldm	sp!, {d8}
 457              	.LCFI11:
 458              		.cfi_remember_state
 459              		.cfi_restore 80
 460              		.cfi_restore 81
 461              		.cfi_def_cfa_offset 8
 462              	.LVL54:
 463 005e 08BD     		pop	{r3, pc}
 464              	.LVL55:
 465              	.L50:
 466              	.LCFI12:
 467              		.cfi_restore_state
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 18


 129:Core/Src/robot/robot_functions.cpp **** 		correct_steering_angle(angle);
 468              		.loc 2 129 0
 469 0060 B0EE480A 		vmov.f32	s0, s16
 470 0064 FFF7FEFF 		bl	_Z22correct_steering_anglef
 471              	.LVL56:
 472 0068 F7E7     		b	.L42
 473              	.L52:
 474 006a 00BF     		.align	2
 475              	.L51:
 476 006c 00000000 		.word	steps
 477 0070 00000000 		.word	leg
 478 0074 00000000 		.word	0
 479 0078 00000000 		.word	steering
 480 007c 00000000 		.word	.LANCHOR3
 481 0080 00000000 		.word	.LANCHOR2
 482 0084 0000FA43 		.word	1140457472
 483              		.cfi_endproc
 484              	.LFE494:
 486              		.global	__aeabi_dmul
 487              		.section	.text._Z21calculate_robot_anglev,"ax",%progbits
 488              		.align	1
 489              		.global	_Z21calculate_robot_anglev
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv4-sp-d16
 495              	_Z21calculate_robot_anglev:
 496              	.LFB497:
 191:Core/Src/robot/robot_functions.cpp **** {
 497              		.loc 2 191 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              	.LCFI13:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 3, -8
 505              		.cfi_offset 14, -4
 506 0002 2DED028B 		vpush.64	{d8}
 507              	.LCFI14:
 508              		.cfi_def_cfa_offset 16
 509              		.cfi_offset 80, -16
 510              		.cfi_offset 81, -12
 192:Core/Src/robot/robot_functions.cpp **** 	if (USE_IMU_FLAG)
 511              		.loc 2 192 0
 512 0006 204B     		ldr	r3, .L59+8
 513 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 514 000a EBB1     		cbz	r3, .L54
 515              	.LVL57:
 516              	.LBB113:
 517              	.LBB114:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 518              		.loc 1 36 0
 519 000c 1F4B     		ldr	r3, .L59+12
 520 000e 93ED027A 		vldr.32	s14, [r3, #8]
 521              	.LVL58:
 522              	.LBE114:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 19


 523              	.LBE113:
 524              	.LBB115:
 525              	.LBB116:
 526 0012 1F4B     		ldr	r3, .L59+16
 527 0014 D3ED027A 		vldr.32	s15, [r3, #8]
 528              	.LVL59:
 529              	.LBE116:
 530              	.LBE115:
 194:Core/Src/robot/robot_functions.cpp **** 		robot_angle = (initial_angle.getZ() - curr_angle.getZ()) * PI / 180;
 531              		.loc 2 194 0
 532 0018 77EE677A 		vsub.f32	s15, s14, s15
 533 001c 17EE900A 		vmov	r0, s15
 534 0020 FFF7FEFF 		bl	__aeabi_f2d
 535              	.LVL60:
 536 0024 16A3     		adr	r3, .L59
 537 0026 D3E90023 		ldrd	r2, [r3]
 538 002a FFF7FEFF 		bl	__aeabi_dmul
 539              	.LVL61:
 540 002e 0022     		movs	r2, #0
 541 0030 184B     		ldr	r3, .L59+20
 542 0032 FFF7FEFF 		bl	__aeabi_ddiv
 543              	.LVL62:
 544 0036 FFF7FEFF 		bl	__aeabi_d2f
 545              	.LVL63:
 546 003a 174B     		ldr	r3, .L59+24
 547 003c 1860     		str	r0, [r3]	@ float
 195:Core/Src/robot/robot_functions.cpp **** 		temp_robot_angle = robot_angle;
 548              		.loc 2 195 0
 549 003e 174B     		ldr	r3, .L59+28
 550 0040 1860     		str	r0, [r3]	@ float
 551              	.L53:
 208:Core/Src/robot/robot_functions.cpp **** }
 552              		.loc 2 208 0
 553 0042 BDEC028B 		vldm	sp!, {d8}
 554              	.LCFI15:
 555              		.cfi_remember_state
 556              		.cfi_restore 80
 557              		.cfi_restore 81
 558              		.cfi_def_cfa_offset 8
 559 0046 08BD     		pop	{r3, pc}
 560              	.L54:
 561              	.LCFI16:
 562              		.cfi_restore_state
 199:Core/Src/robot/robot_functions.cpp **** 		if (leg[0].is_raised_without_deadzone())
 563              		.loc 2 199 0
 564 0048 1548     		ldr	r0, .L59+32
 565 004a FFF7FEFF 		bl	_ZN3leg26is_raised_without_deadzoneEv
 566              	.LVL64:
 567 004e 58B9     		cbnz	r0, .L58
 205:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 568              		.loc 2 205 0
 569 0050 114B     		ldr	r3, .L59+24
 570 0052 93ED008A 		vldr.32	s16, [r3]
 571              	.LVL65:
 572              	.LBB117:
 573              	.LBB118:
 574              		.file 3 "Core/Inc/devs/steering.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 20


   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 21


  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 575              		.loc 3 112 0
 576 0056 1348     		ldr	r0, .L59+36
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 22


 577 0058 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 578              	.LVL66:
 579              	.LBE118:
 580              	.LBE117:
 205:Core/Src/robot/robot_functions.cpp **** 			temp_robot_angle = robot_angle - steering.get_angle();
 581              		.loc 2 205 0
 582 005c 38EE400A 		vsub.f32	s0, s16, s0
 583 0060 0E4B     		ldr	r3, .L59+28
 584 0062 83ED000A 		vstr.32	s0, [r3]
 208:Core/Src/robot/robot_functions.cpp **** }
 585              		.loc 2 208 0
 586 0066 ECE7     		b	.L53
 587              	.L58:
 588              	.LVL67:
 589              	.LBB119:
 590              	.LBB120:
 591              		.loc 3 112 0
 592 0068 0E48     		ldr	r0, .L59+36
 593 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 594              	.LVL68:
 595              	.LBE120:
 596              	.LBE119:
 201:Core/Src/robot/robot_functions.cpp **** 			robot_angle = steering.get_angle() + temp_robot_angle;
 597              		.loc 2 201 0
 598 006e 0B4B     		ldr	r3, .L59+28
 599 0070 D3ED007A 		vldr.32	s15, [r3]
 600 0074 30EE270A 		vadd.f32	s0, s0, s15
 601 0078 074B     		ldr	r3, .L59+24
 602 007a 83ED000A 		vstr.32	s0, [r3]
 603 007e E0E7     		b	.L53
 604              	.L60:
 605              		.align	3
 606              	.L59:
 607 0080 182D4454 		.word	1413754136
 608 0084 FB210940 		.word	1074340347
 609 0088 00000000 		.word	USE_IMU_FLAG
 610 008c 00000000 		.word	.LANCHOR0
 611 0090 00000000 		.word	.LANCHOR1
 612 0094 00806640 		.word	1080459264
 613 0098 00000000 		.word	.LANCHOR2
 614 009c 00000000 		.word	.LANCHOR4
 615 00a0 00000000 		.word	leg
 616 00a4 0C000000 		.word	steering+12
 617              		.cfi_endproc
 618              	.LFE497:
 620              		.section	.text._Z23initialize_leg_positionv,"ax",%progbits
 621              		.align	1
 622              		.global	_Z23initialize_leg_positionv
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	_Z23initialize_leg_positionv:
 629              	.LFB499:
 269:Core/Src/robot/robot_functions.cpp **** {
 630              		.loc 2 269 0
 631              		.cfi_startproc
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 23


 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634 0000 08B5     		push	{r3, lr}
 635              	.LCFI17:
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 3, -8
 638              		.cfi_offset 14, -4
 639              	.LVL69:
 640              	.LBB121:
 641              	.LBB122:
 642              		.file 4 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 24


  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 643              		.loc 4 47 0
 644 0002 3748     		ldr	r0, .L79+16
 645 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 646              	.LVL70:
 647              	.LBE122:
 648              	.LBE121:
 277:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 649              		.loc 2 277 0
 650 0008 10EE100A 		vmov	r0, s0
 651 000c FFF7FEFF 		bl	__aeabi_f2d
 652              	.LVL71:
 653 0010 2FA3     		adr	r3, .L79
 654 0012 D3E90023 		ldrd	r2, [r3]
 655 0016 FFF7FEFF 		bl	__aeabi_dcmpgt
 656              	.LVL72:
 657 001a 80B1     		cbz	r0, .L62
 658              	.LVL73:
 659              	.LBB123:
 660              	.LBB124:
 661              		.loc 4 47 0
 662 001c 3048     		ldr	r0, .L79+16
 663 001e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 664              	.LVL74:
 665              	.LBE124:
 666              	.LBE123:
 278:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 667              		.loc 2 278 0
 668 0022 10EE100A 		vmov	r0, s0
 669 0026 FFF7FEFF 		bl	__aeabi_f2d
 670              	.LVL75:
 277:Core/Src/robot/robot_functions.cpp **** 	if ((leg[0].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 671              		.loc 2 277 0
 672 002a 2BA3     		adr	r3, .L79+8
 673 002c D3E90023 		ldrd	r2, [r3]
 674 0030 FFF7FEFF 		bl	__aeabi_dcmplt
 675              	.LVL76:
 676 0034 18B1     		cbz	r0, .L62
 677              	.LVL77:
 678              	.LBB125:
 679              	.LBB126:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 680              		.loc 4 45 0
 681 0036 2B4B     		ldr	r3, .L79+20
 682 0038 1B69     		ldr	r3, [r3, #16]
 683              	.LVL78:
 684              	.LBE126:
 685              	.LBE125:
 278:Core/Src/robot/robot_functions.cpp **** 	    (leg[0].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180) && (leg[0].get_s
 686              		.loc 2 278 0
 687 003a 002B     		cmp	r3, #0
 688 003c 32D1     		bne	.L78
 689              	.L62:
 285:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(3);
 690              		.loc 2 285 0 discriminator 3
 691 003e B0EE080A 		vmov.f32	s0, #3.0e+0
 692 0042 2848     		ldr	r0, .L79+20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 25


 693 0044 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 694              	.LVL79:
 286:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = false;
 695              		.loc 2 286 0 discriminator 3
 696 0048 274B     		ldr	r3, .L79+24
 697 004a 0022     		movs	r2, #0
 698 004c 1A70     		strb	r2, [r3]
 699              	.L65:
 700              	.LVL80:
 701              	.LBB127:
 702              	.LBB128:
 703              		.loc 4 47 0
 704 004e 2748     		ldr	r0, .L79+28
 705 0050 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 706              	.LVL81:
 707              	.LBE128:
 708              	.LBE127:
 289:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 709              		.loc 2 289 0
 710 0054 10EE100A 		vmov	r0, s0
 711 0058 FFF7FEFF 		bl	__aeabi_f2d
 712              	.LVL82:
 290:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 713              		.loc 2 290 0
 714 005c 1CA3     		adr	r3, .L79
 715 005e D3E90023 		ldrd	r2, [r3]
 716 0062 FFF7FEFF 		bl	__aeabi_dcmpgt
 717              	.LVL83:
 718 0066 78B1     		cbz	r0, .L66
 719              	.LVL84:
 720              	.LBB129:
 721              	.LBB130:
 722              		.loc 4 47 0
 723 0068 2048     		ldr	r0, .L79+28
 724 006a FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 725              	.LVL85:
 726              	.LBE130:
 727              	.LBE129:
 290:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 728              		.loc 2 290 0
 729 006e 10EE100A 		vmov	r0, s0
 730 0072 FFF7FEFF 		bl	__aeabi_f2d
 731              	.LVL86:
 289:Core/Src/robot/robot_functions.cpp **** 	if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 732              		.loc 2 289 0
 733 0076 18A3     		adr	r3, .L79+8
 734 0078 D3E90023 		ldrd	r2, [r3]
 735 007c FFF7FEFF 		bl	__aeabi_dcmplt
 736              	.LVL87:
 737 0080 10B1     		cbz	r0, .L66
 738              	.LVL88:
 739              	.LBB131:
 740              	.LBB132:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 741              		.loc 4 45 0
 742 0082 184B     		ldr	r3, .L79+20
 743 0084 9B6E     		ldr	r3, [r3, #104]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 26


 744              	.LVL89:
 745              	.LBE132:
 746              	.LBE131:
 290:Core/Src/robot/robot_functions.cpp **** 	    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)) && (leg[1].get_
 747              		.loc 2 290 0
 748 0086 B3B9     		cbnz	r3, .L69
 749              	.L66:
 297:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(3);
 750              		.loc 2 297 0 discriminator 2
 751 0088 B0EE080A 		vmov.f32	s0, #3.0e+0
 752 008c 1848     		ldr	r0, .L79+32
 753 008e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 754              	.LVL90:
 298:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = false;
 755              		.loc 2 298 0 discriminator 2
 756 0092 184B     		ldr	r3, .L79+36
 757 0094 0022     		movs	r2, #0
 758 0096 1A70     		strb	r2, [r3]
 759              	.L70:
 301:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 760              		.loc 2 301 0
 761 0098 134B     		ldr	r3, .L79+24
 762 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 763 009c A3B1     		cbz	r3, .L72
 301:Core/Src/robot/robot_functions.cpp **** 	if (leg0_flag && leg1_flag)
 764              		.loc 2 301 0 is_stmt 0 discriminator 1
 765 009e 154B     		ldr	r3, .L79+36
 766 00a0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 767              	.L71:
 310:Core/Src/robot/robot_functions.cpp **** }
 768              		.loc 2 310 0 is_stmt 1
 769 00a2 08BD     		pop	{r3, pc}
 770              	.L78:
 280:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 771              		.loc 2 280 0
 772 00a4 9FED140A 		vldr.32	s0, .L79+40
 773 00a8 0E48     		ldr	r0, .L79+20
 774 00aa FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 775              	.LVL91:
 281:Core/Src/robot/robot_functions.cpp **** 		leg0_flag = true;
 776              		.loc 2 281 0
 777 00ae 0E4B     		ldr	r3, .L79+24
 778 00b0 0122     		movs	r2, #1
 779 00b2 1A70     		strb	r2, [r3]
 780 00b4 CBE7     		b	.L65
 781              	.L69:
 292:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 782              		.loc 2 292 0
 783 00b6 9FED100A 		vldr.32	s0, .L79+40
 784 00ba 0D48     		ldr	r0, .L79+32
 785 00bc FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 786              	.LVL92:
 293:Core/Src/robot/robot_functions.cpp **** 		leg1_flag = true;
 787              		.loc 2 293 0
 788 00c0 0C4B     		ldr	r3, .L79+36
 789 00c2 0122     		movs	r2, #1
 790 00c4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 27


 791 00c6 E7E7     		b	.L70
 792              	.L72:
 308:Core/Src/robot/robot_functions.cpp **** 		return false;
 793              		.loc 2 308 0
 794 00c8 0020     		movs	r0, #0
 795 00ca EAE7     		b	.L71
 796              	.L80:
 797 00cc AFF30080 		.align	3
 798              	.L79:
 799 00d0 44031FEA 		.word	-367066300
 800 00d4 0604F83F 		.word	1073218566
 801 00d8 EC5669BE 		.word	-1100392724
 802 00dc EF3FFA3F 		.word	1073364975
 803 00e0 3C000000 		.word	leg+60
 804 00e4 00000000 		.word	leg
 805 00e8 00000000 		.word	.LANCHOR5
 806 00ec 94000000 		.word	leg+148
 807 00f0 58000000 		.word	leg+88
 808 00f4 00000000 		.word	.LANCHOR6
 809 00f8 00000000 		.word	0
 810              		.cfi_endproc
 811              	.LFE499:
 813              		.global	__aeabi_d2iz
 814              		.section	.text._Z28initialize_steering_positionv,"ax",%progbits
 815              		.align	1
 816              		.global	_Z28initialize_steering_positionv
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	_Z28initialize_steering_positionv:
 823              	.LFB500:
 320:Core/Src/robot/robot_functions.cpp **** {
 824              		.loc 2 320 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828 0000 10B5     		push	{r4, lr}
 829              	.LCFI18:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833              	.LVL93:
 834              	.LBB133:
 835              	.LBB134:
 836              		.loc 3 112 0
 837 0002 1F48     		ldr	r0, .L88+8
 838 0004 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 839              	.LVL94:
 840              	.LBE134:
 841              	.LBE133:
 321:Core/Src/robot/robot_functions.cpp **** 	printf("\nangle = %d\t", (int)(steering.get_angle() * 180 / PI));
 842              		.loc 2 321 0
 843 0008 DFED1E7A 		vldr.32	s15, .L88+12
 844 000c 60EE277A 		vmul.f32	s15, s0, s15
 845 0010 17EE900A 		vmov	r0, s15
 846 0014 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 28


 847              	.LVL95:
 848 0018 17A3     		adr	r3, .L88
 849 001a D3E90023 		ldrd	r2, [r3]
 850 001e FFF7FEFF 		bl	__aeabi_ddiv
 851              	.LVL96:
 852 0022 FFF7FEFF 		bl	__aeabi_d2iz
 853              	.LVL97:
 854 0026 0146     		mov	r1, r0
 855 0028 1748     		ldr	r0, .L88+16
 856 002a FFF7FEFF 		bl	printf
 857              	.LVL98:
 324:Core/Src/robot/robot_functions.cpp **** 	if (((HAL_GetTick() - start_time) >= 500))
 858              		.loc 2 324 0
 859 002e FFF7FEFF 		bl	HAL_GetTick
 860              	.LVL99:
 861 0032 164B     		ldr	r3, .L88+20
 862 0034 1B68     		ldr	r3, [r3]
 863 0036 C01A     		subs	r0, r0, r3
 864 0038 B0F5FA7F 		cmp	r0, #500
 865 003c 09D2     		bcs	.L86
 330:Core/Src/robot/robot_functions.cpp **** 	if (STEERING_FLAG)
 866              		.loc 2 330 0
 867 003e 144B     		ldr	r3, .L88+24
 868 0040 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 869 0042 9CB9     		cbnz	r4, .L87
 337:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0.5);
 870              		.loc 2 337 0
 871 0044 B6EE000A 		vmov.f32	s0, #5.0e-1
 872 0048 1248     		ldr	r0, .L88+28
 873 004a FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 874              	.LVL100:
 875              	.L83:
 340:Core/Src/robot/robot_functions.cpp **** }
 876              		.loc 2 340 0
 877 004e 2046     		mov	r0, r4
 878 0050 10BD     		pop	{r4, pc}
 879              	.L86:
 326:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 880              		.loc 2 326 0
 881 0052 9FED110A 		vldr.32	s0, .L88+32
 882 0056 0F48     		ldr	r0, .L88+28
 883 0058 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 884              	.LVL101:
 327:Core/Src/robot/robot_functions.cpp **** 		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 885              		.loc 2 327 0
 886 005c 0122     		movs	r2, #1
 887 005e 4FF48051 		mov	r1, #4096
 888 0062 0E48     		ldr	r0, .L88+36
 889 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 890              	.LVL102:
 328:Core/Src/robot/robot_functions.cpp **** 		return true;
 891              		.loc 2 328 0
 892 0068 0124     		movs	r4, #1
 893 006a F0E7     		b	.L83
 894              	.L87:
 332:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 895              		.loc 2 332 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 29


 896 006c 9FED0A0A 		vldr.32	s0, .L88+32
 897 0070 0848     		ldr	r0, .L88+28
 898 0072 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 899              	.LVL103:
 333:Core/Src/robot/robot_functions.cpp **** 		return true;
 900              		.loc 2 333 0
 901 0076 EAE7     		b	.L83
 902              	.L89:
 903              		.align	3
 904              	.L88:
 905 0078 182D4454 		.word	1413754136
 906 007c FB210940 		.word	1074340347
 907 0080 0C000000 		.word	steering+12
 908 0084 00003443 		.word	1127481344
 909 0088 00000000 		.word	.LC0
 910 008c 00000000 		.word	.LANCHOR7
 911 0090 00000000 		.word	.LANCHOR8
 912 0094 00000000 		.word	steering
 913 0098 00000000 		.word	0
 914 009c 000C0240 		.word	1073875968
 915              		.cfi_endproc
 916              	.LFE500:
 918              		.section	.text._Z19initialize_positionv,"ax",%progbits
 919              		.align	1
 920              		.global	_Z19initialize_positionv
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu fpv4-sp-d16
 926              	_Z19initialize_positionv:
 927              	.LFB498:
 218:Core/Src/robot/robot_functions.cpp **** {
 928              		.loc 2 218 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 933              	.LCFI19:
 934              		.cfi_def_cfa_offset 24
 935              		.cfi_offset 4, -24
 936              		.cfi_offset 5, -20
 937              		.cfi_offset 6, -16
 938              		.cfi_offset 7, -12
 939              		.cfi_offset 8, -8
 940              		.cfi_offset 14, -4
 941 0004 2DED028B 		vpush.64	{d8}
 942              	.LCFI20:
 943              		.cfi_def_cfa_offset 32
 944              		.cfi_offset 80, -32
 945              		.cfi_offset 81, -28
 219:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 946              		.loc 2 219 0
 947 0008 FFF7FEFF 		bl	HAL_GetTick
 948              	.LVL104:
 949 000c 0646     		mov	r6, r0
 950              	.LVL105:
 951              	.L91:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 30


 222:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 952              		.loc 2 222 0
 953 000e FFF7FEFF 		bl	HAL_GetTick
 954              	.LVL106:
 955 0012 801B     		subs	r0, r0, r6
 956 0014 0928     		cmp	r0, #9
 957 0016 FAD9     		bls	.L91
 224:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 958              		.loc 2 224 0
 959 0018 FFF7FEFF 		bl	HAL_GetTick
 960              	.LVL107:
 961 001c 0646     		mov	r6, r0
 962              	.LVL108:
 225:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 963              		.loc 2 225 0
 964 001e 3A48     		ldr	r0, .L99
 965              	.LVL109:
 966 0020 FFF7FEFF 		bl	printf
 967              	.LVL110:
 226:Core/Src/robot/robot_functions.cpp **** 			if (initialize_leg_position() == true)
 968              		.loc 2 226 0
 969 0024 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 970              	.LVL111:
 971 0028 0028     		cmp	r0, #0
 972 002a F0D0     		beq	.L91
 973              	.LBB135:
 230:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 974              		.loc 2 230 0
 975 002c 0024     		movs	r4, #0
 976 002e 00E0     		b	.L95
 977              	.LVL112:
 978              	.L94:
 230:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 979              		.loc 2 230 0 is_stmt 0 discriminator 2
 980 0030 0134     		adds	r4, r4, #1
 981              	.LVL113:
 982              	.L95:
 230:Core/Src/robot/robot_functions.cpp **** 	for (int32_t i = 0; i < 3000000; i++)
 983              		.loc 2 230 0 discriminator 1
 984 0032 364B     		ldr	r3, .L99+4
 985 0034 9C42     		cmp	r4, r3
 986 0036 3CDC     		bgt	.L93
 232:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 987              		.loc 2 232 0 is_stmt 1
 988 0038 FFF7FEFF 		bl	HAL_GetTick
 989              	.LVL114:
 990 003c 801B     		subs	r0, r0, r6
 991 003e 0928     		cmp	r0, #9
 992 0040 F6D9     		bls	.L94
 234:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 993              		.loc 2 234 0
 994 0042 FFF7FEFF 		bl	HAL_GetTick
 995              	.LVL115:
 996 0046 0646     		mov	r6, r0
 997              	.LVL116:
 235:Core/Src/robot/robot_functions.cpp **** 			printf("\n\tWaiting_The_Leg \t");
 998              		.loc 2 235 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 31


 999 0048 3148     		ldr	r0, .L99+8
 1000              	.LVL117:
 1001 004a FFF7FEFF 		bl	printf
 1002              	.LVL118:
 236:Core/Src/robot/robot_functions.cpp **** 			leg[0].steps = 0;
 1003              		.loc 2 236 0
 1004 004e 314D     		ldr	r5, .L99+12
 1005 0050 0027     		movs	r7, #0
 1006 0052 2F61     		str	r7, [r5, #16]
 237:Core/Src/robot/robot_functions.cpp **** 			leg[1].steps = 0;
 1007              		.loc 2 237 0
 1008 0054 AF66     		str	r7, [r5, #104]
 238:Core/Src/robot/robot_functions.cpp **** 			leg[0].reset_angle(90 * PI / 180);
 1009              		.loc 2 238 0
 1010 0056 9FED308A 		vldr.32	s16, .L99+16
 1011 005a B0EE480A 		vmov.f32	s0, s16
 1012 005e 2846     		mov	r0, r5
 1013 0060 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1014              	.LVL119:
 239:Core/Src/robot/robot_functions.cpp **** 			leg[1].reset_angle(90 * PI / 180);
 1015              		.loc 2 239 0
 1016 0064 05F15808 		add	r8, r5, #88
 1017 0068 B0EE480A 		vmov.f32	s0, s16
 1018 006c 4046     		mov	r0, r8
 1019 006e FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1020              	.LVL120:
 1021              	.LBB136:
 1022              	.LBB137:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1023              		.loc 4 40 0
 1024 0072 B0EE480A 		vmov.f32	s0, s16
 1025 0076 05F13C00 		add	r0, r5, #60
 1026 007a FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1027              	.LVL121:
 1028              	.LBE137:
 1029              	.LBE136:
 1030              	.LBB138:
 1031              	.LBB139:
 1032 007e B0EE480A 		vmov.f32	s0, s16
 1033 0082 05F19400 		add	r0, r5, #148
 1034 0086 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1035              	.LVL122:
 1036              	.LBE139:
 1037              	.LBE138:
 242:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1038              		.loc 2 242 0
 1039 008a 9FED248A 		vldr.32	s16, .L99+20
 1040 008e B0EE480A 		vmov.f32	s0, s16
 1041 0092 2846     		mov	r0, r5
 1042 0094 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1043              	.LVL123:
 243:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1044              		.loc 2 243 0
 1045 0098 B0EE480A 		vmov.f32	s0, s16
 1046 009c 4046     		mov	r0, r8
 1047 009e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1048              	.LVL124:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 32


 244:Core/Src/robot/robot_functions.cpp **** 			steering.set_omega(0);
 1049              		.loc 2 244 0
 1050 00a2 B0EE480A 		vmov.f32	s0, s16
 1051 00a6 1E48     		ldr	r0, .L99+24
 1052 00a8 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1053              	.LVL125:
 245:Core/Src/robot/robot_functions.cpp **** 			STEERING_FLAG = false;
 1054              		.loc 2 245 0
 1055 00ac 1D4B     		ldr	r3, .L99+28
 1056 00ae 1F70     		strb	r7, [r3]
 1057 00b0 BEE7     		b	.L94
 1058              	.L93:
 1059              	.LBE135:
 248:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1060              		.loc 2 248 0
 1061 00b2 FFF7FEFF 		bl	HAL_GetTick
 1062              	.LVL126:
 1063 00b6 1C4B     		ldr	r3, .L99+32
 1064 00b8 1860     		str	r0, [r3]
 1065              	.LVL127:
 1066              	.L96:
 251:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1067              		.loc 2 251 0
 1068 00ba FFF7FEFF 		bl	HAL_GetTick
 1069              	.LVL128:
 1070 00be 801B     		subs	r0, r0, r6
 1071 00c0 0928     		cmp	r0, #9
 1072 00c2 FAD9     		bls	.L96
 253:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1073              		.loc 2 253 0
 1074 00c4 FFF7FEFF 		bl	HAL_GetTick
 1075              	.LVL129:
 1076 00c8 0646     		mov	r6, r0
 1077              	.LVL130:
 254:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1078              		.loc 2 254 0
 1079 00ca FFF7FEFF 		bl	HAL_GetTick
 1080              	.LVL131:
 1081 00ce 164B     		ldr	r3, .L99+32
 1082 00d0 1A68     		ldr	r2, [r3]
 1083 00d2 0146     		mov	r1, r0
 1084 00d4 1548     		ldr	r0, .L99+36
 1085 00d6 FFF7FEFF 		bl	printf
 1086              	.LVL132:
 255:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1087              		.loc 2 255 0
 1088 00da 9FED108A 		vldr.32	s16, .L99+20
 1089 00de 0D4C     		ldr	r4, .L99+12
 1090 00e0 B0EE480A 		vmov.f32	s0, s16
 1091 00e4 2046     		mov	r0, r4
 1092 00e6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1093              	.LVL133:
 256:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1094              		.loc 2 256 0
 1095 00ea B0EE480A 		vmov.f32	s0, s16
 1096 00ee 04F15800 		add	r0, r4, #88
 1097 00f2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 33


 1098              	.LVL134:
 257:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1099              		.loc 2 257 0
 1100 00f6 FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1101              	.LVL135:
 1102 00fa 0028     		cmp	r0, #0
 1103 00fc DDD0     		beq	.L96
 261:Core/Src/robot/robot_functions.cpp **** }
 1104              		.loc 2 261 0
 1105 00fe BDEC028B 		vldm	sp!, {d8}
 1106              	.LCFI21:
 1107              		.cfi_restore 80
 1108              		.cfi_restore 81
 1109              		.cfi_def_cfa_offset 24
 1110 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1111              	.LVL136:
 1112              	.L100:
 1113 0106 00BF     		.align	2
 1114              	.L99:
 1115 0108 00000000 		.word	.LC1
 1116 010c BFC62D00 		.word	2999999
 1117 0110 20000000 		.word	.LC2
 1118 0114 00000000 		.word	leg
 1119 0118 DB0FC93F 		.word	1070141403
 1120 011c 00000000 		.word	0
 1121 0120 00000000 		.word	steering
 1122 0124 00000000 		.word	.LANCHOR8
 1123 0128 00000000 		.word	.LANCHOR7
 1124 012c 34000000 		.word	.LC3
 1125              		.cfi_endproc
 1126              	.LFE498:
 1128              		.section	.text._Z11getup_n_runv,"ax",%progbits
 1129              		.align	1
 1130              		.global	_Z11getup_n_runv
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu fpv4-sp-d16
 1136              	_Z11getup_n_runv:
 1137              	.LFB501:
 343:Core/Src/robot/robot_functions.cpp **** {
 1138              		.loc 2 343 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142 0000 38B5     		push	{r3, r4, r5, lr}
 1143              	.LCFI22:
 1144              		.cfi_def_cfa_offset 16
 1145              		.cfi_offset 3, -16
 1146              		.cfi_offset 4, -12
 1147              		.cfi_offset 5, -8
 1148              		.cfi_offset 14, -4
 1149 0002 2DED028B 		vpush.64	{d8}
 1150              	.LCFI23:
 1151              		.cfi_def_cfa_offset 24
 1152              		.cfi_offset 80, -24
 1153              		.cfi_offset 81, -20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 34


 344:Core/Src/robot/robot_functions.cpp **** 	uint32_t dt = HAL_GetTick();
 1154              		.loc 2 344 0
 1155 0006 FFF7FEFF 		bl	HAL_GetTick
 1156              	.LVL137:
 1157 000a 0446     		mov	r4, r0
 1158              	.LVL138:
 347:Core/Src/robot/robot_functions.cpp **** 	leg[0].reset_angle(90 * PI / 180);
 1159              		.loc 2 347 0
 1160 000c 4A4D     		ldr	r5, .L112+16
 1161 000e 9FED4B0A 		vldr.32	s0, .L112+20
 1162 0012 2846     		mov	r0, r5
 1163              	.LVL139:
 1164 0014 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1165              	.LVL140:
 348:Core/Src/robot/robot_functions.cpp **** 	leg[1].reset_angle(270 * PI / 180);
 1166              		.loc 2 348 0
 1167 0018 9FED490A 		vldr.32	s0, .L112+24
 1168 001c 05F15800 		add	r0, r5, #88
 1169 0020 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1170              	.LVL141:
 1171 0024 04E0     		b	.L102
 1172              	.L103:
 365:Core/Src/robot/robot_functions.cpp **** 				leg[1].set_omega(3);
 1173              		.loc 2 365 0 discriminator 4
 1174 0026 B0EE080A 		vmov.f32	s0, #3.0e+0
 1175 002a 4648     		ldr	r0, .L112+28
 1176 002c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1177              	.LVL142:
 1178              	.L102:
 352:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1179              		.loc 2 352 0
 1180 0030 FFF7FEFF 		bl	HAL_GetTick
 1181              	.LVL143:
 1182 0034 001B     		subs	r0, r0, r4
 1183 0036 0928     		cmp	r0, #9
 1184 0038 FAD9     		bls	.L102
 354:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1185              		.loc 2 354 0
 1186 003a FFF7FEFF 		bl	HAL_GetTick
 1187              	.LVL144:
 1188 003e 0446     		mov	r4, r0
 1189              	.LVL145:
 355:Core/Src/robot/robot_functions.cpp **** 			printf("\nInitializing_Leg_Orientation\t");
 1190              		.loc 2 355 0
 1191 0040 4148     		ldr	r0, .L112+32
 1192              	.LVL146:
 1193 0042 FFF7FEFF 		bl	printf
 1194              	.LVL147:
 356:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1195              		.loc 2 356 0
 1196 0046 3C4D     		ldr	r5, .L112+16
 1197 0048 9FED400A 		vldr.32	s0, .L112+36
 1198 004c 2846     		mov	r0, r5
 1199 004e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1200              	.LVL148:
 1201              	.LBB140:
 1202              	.LBB141:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 35


 1203              		.loc 4 47 0
 1204 0052 05F19400 		add	r0, r5, #148
 1205 0056 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1206              	.LVL149:
 1207              	.LBE141:
 1208              	.LBE140:
 357:Core/Src/robot/robot_functions.cpp **** 			if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1209              		.loc 2 357 0
 1210 005a 10EE100A 		vmov	r0, s0
 1211 005e FFF7FEFF 		bl	__aeabi_f2d
 1212              	.LVL150:
 1213 0062 31A3     		adr	r3, .L112
 1214 0064 D3E90023 		ldrd	r2, [r3]
 1215 0068 FFF7FEFF 		bl	__aeabi_dcmpgt
 1216              	.LVL151:
 1217 006c 0028     		cmp	r0, #0
 1218 006e DAD0     		beq	.L103
 1219              	.LVL152:
 1220              	.LBB142:
 1221              	.LBB143:
 1222              		.loc 4 47 0
 1223 0070 05F19400 		add	r0, r5, #148
 1224 0074 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1225              	.LVL153:
 1226              	.LBE143:
 1227              	.LBE142:
 358:Core/Src/robot/robot_functions.cpp **** 			    (leg[1].get_angle() < ((leg_initial_position + initial_tolerance) * PI / 180)))
 1228              		.loc 2 358 0
 1229 0078 10EE100A 		vmov	r0, s0
 1230 007c FFF7FEFF 		bl	__aeabi_f2d
 1231              	.LVL154:
 357:Core/Src/robot/robot_functions.cpp **** 			if ((leg[1].get_angle() > ((leg_initial_position - initial_tolerance) * PI / 180)) &&
 1232              		.loc 2 357 0
 1233 0080 2BA3     		adr	r3, .L112+8
 1234 0082 D3E90023 		ldrd	r2, [r3]
 1235 0086 FFF7FEFF 		bl	__aeabi_dcmplt
 1236              	.LVL155:
 1237 008a 0028     		cmp	r0, #0
 1238 008c CBD0     		beq	.L103
 360:Core/Src/robot/robot_functions.cpp **** 				leg[1].set_omega(0);
 1239              		.loc 2 360 0
 1240 008e 9FED2F0A 		vldr.32	s0, .L112+36
 1241 0092 05F15800 		add	r0, r5, #88
 1242 0096 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1243              	.LVL156:
 370:Core/Src/robot/robot_functions.cpp **** 	start_time = HAL_GetTick();
 1244              		.loc 2 370 0
 1245 009a FFF7FEFF 		bl	HAL_GetTick
 1246              	.LVL157:
 1247 009e 2C4B     		ldr	r3, .L112+40
 1248 00a0 1860     		str	r0, [r3]
 1249              	.L108:
 373:Core/Src/robot/robot_functions.cpp **** 		if ((HAL_GetTick() - dt) >= (int)(SAMPLE_TIME))
 1250              		.loc 2 373 0
 1251 00a2 FFF7FEFF 		bl	HAL_GetTick
 1252              	.LVL158:
 1253 00a6 001B     		subs	r0, r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 36


 1254 00a8 0928     		cmp	r0, #9
 1255 00aa FAD9     		bls	.L108
 375:Core/Src/robot/robot_functions.cpp **** 			dt = HAL_GetTick();
 1256              		.loc 2 375 0
 1257 00ac FFF7FEFF 		bl	HAL_GetTick
 1258              	.LVL159:
 1259 00b0 0446     		mov	r4, r0
 1260              	.LVL160:
 376:Core/Src/robot/robot_functions.cpp **** 			printf("\tInitializing_Steering_Orientation\t %d \t %d", (int)HAL_GetTick(), (int)start_time);
 1261              		.loc 2 376 0
 1262 00b2 FFF7FEFF 		bl	HAL_GetTick
 1263              	.LVL161:
 1264 00b6 264B     		ldr	r3, .L112+40
 1265 00b8 1A68     		ldr	r2, [r3]
 1266 00ba 0146     		mov	r1, r0
 1267 00bc 2548     		ldr	r0, .L112+44
 1268 00be FFF7FEFF 		bl	printf
 1269              	.LVL162:
 377:Core/Src/robot/robot_functions.cpp **** 			leg[0].set_omega(0);
 1270              		.loc 2 377 0
 1271 00c2 9FED228A 		vldr.32	s16, .L112+36
 1272 00c6 1C4D     		ldr	r5, .L112+16
 1273 00c8 B0EE480A 		vmov.f32	s0, s16
 1274 00cc 2846     		mov	r0, r5
 1275 00ce FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1276              	.LVL163:
 378:Core/Src/robot/robot_functions.cpp **** 			leg[1].set_omega(0);
 1277              		.loc 2 378 0
 1278 00d2 B0EE480A 		vmov.f32	s0, s16
 1279 00d6 05F15800 		add	r0, r5, #88
 1280 00da FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1281              	.LVL164:
 379:Core/Src/robot/robot_functions.cpp **** 			if (initialize_steering_position() == true)
 1282              		.loc 2 379 0
 1283 00de FFF7FEFF 		bl	_Z28initialize_steering_positionv
 1284              	.LVL165:
 1285 00e2 0028     		cmp	r0, #0
 1286 00e4 DDD0     		beq	.L108
 1287              	.LVL166:
 1288              	.LBB144:
 1289              	.LBB145:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 1290              		.loc 4 40 0
 1291 00e6 9FED158A 		vldr.32	s16, .L112+20
 1292 00ea 05F13C04 		add	r4, r5, #60
 1293              	.LVL167:
 1294 00ee B0EE480A 		vmov.f32	s0, s16
 1295 00f2 2046     		mov	r0, r4
 1296 00f4 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 1297              	.LVL168:
 1298              	.LBE145:
 1299              	.LBE144:
 1300              	.LBB146:
 1301              	.LBB147:
 1302 00f8 B0EE480A 		vmov.f32	s0, s16
 1303 00fc 04F15800 		add	r0, r4, #88
 1304 0100 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 37


 1305              	.LVL169:
 1306              	.LBE147:
 1307              	.LBE146:
 386:Core/Src/robot/robot_functions.cpp **** 	leg[0].reset_angle(90 * PI / 180);
 1308              		.loc 2 386 0
 1309 0104 3C3C     		subs	r4, r4, #60
 1310 0106 B0EE480A 		vmov.f32	s0, s16
 1311 010a 2046     		mov	r0, r4
 1312 010c FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1313              	.LVL170:
 387:Core/Src/robot/robot_functions.cpp **** 	leg[1].reset_angle(90 * PI / 180);
 1314              		.loc 2 387 0
 1315 0110 B0EE480A 		vmov.f32	s0, s16
 1316 0114 04F15800 		add	r0, r4, #88
 1317 0118 FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 1318              	.LVL171:
 388:Core/Src/robot/robot_functions.cpp **** }
 1319              		.loc 2 388 0
 1320 011c BDEC028B 		vldm	sp!, {d8}
 1321              	.LCFI24:
 1322              		.cfi_restore 80
 1323              		.cfi_restore 81
 1324              		.cfi_def_cfa_offset 16
 1325 0120 38BD     		pop	{r3, r4, r5, pc}
 1326              	.L113:
 1327 0122 00BFAFF3 		.align	3
 1327      0080
 1328              	.L112:
 1329 0128 44031FEA 		.word	-367066300
 1330 012c 0604F83F 		.word	1073218566
 1331 0130 EC5669BE 		.word	-1100392724
 1332 0134 EF3FFA3F 		.word	1073364975
 1333 0138 00000000 		.word	leg
 1334 013c DB0FC93F 		.word	1070141403
 1335 0140 E4CB9640 		.word	1083624420
 1336 0144 58000000 		.word	leg+88
 1337 0148 00000000 		.word	.LC1
 1338 014c 00000000 		.word	0
 1339 0150 00000000 		.word	.LANCHOR7
 1340 0154 34000000 		.word	.LC3
 1341              		.cfi_endproc
 1342              	.LFE501:
 1344              		.section	.text._Z15calculate_datasv,"ax",%progbits
 1345              		.align	1
 1346              		.global	_Z15calculate_datasv
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1350              		.fpu fpv4-sp-d16
 1352              	_Z15calculate_datasv:
 1353              	.LFB502:
 398:Core/Src/robot/robot_functions.cpp **** {
 1354              		.loc 2 398 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 16
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 38


 1359              	.LCFI25:
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 4, -8
 1362              		.cfi_offset 14, -4
 1363 0002 84B0     		sub	sp, sp, #16
 1364              	.LCFI26:
 1365              		.cfi_def_cfa_offset 24
 399:Core/Src/robot/robot_functions.cpp **** 	leg[0].calculate_omega();
 1366              		.loc 2 399 0
 1367 0004 0C4C     		ldr	r4, .L116
 1368 0006 2046     		mov	r0, r4
 1369 0008 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1370              	.LVL172:
 400:Core/Src/robot/robot_functions.cpp **** 	leg[1].calculate_omega();
 1371              		.loc 2 400 0
 1372 000c 04F15800 		add	r0, r4, #88
 1373 0010 FFF7FEFF 		bl	_ZN3leg15calculate_omegaEv
 1374              	.LVL173:
 1375              	.LBB148:
 1376              	.LBB149:
 102:Core/Inc/devs/steering.h **** 
 1377              		.loc 3 102 0
 1378 0014 0948     		ldr	r0, .L116+4
 1379 0016 FFF7FEFF 		bl	_ZN7encoder15calculate_omegaEv
 1380              	.LVL174:
 1381              	.LBE149:
 1382              	.LBE148:
 402:Core/Src/robot/robot_functions.cpp **** 	curr_angle = read_Orientation(10);
 1383              		.loc 2 402 0
 1384 001a 01AC     		add	r4, sp, #4
 1385 001c 0A21     		movs	r1, #10
 1386 001e 2046     		mov	r0, r4
 1387 0020 FFF7FEFF 		bl	_Z16read_Orientationm
 1388              	.LVL175:
 1389 0024 064B     		ldr	r3, .L116+8
 1390 0026 94E80700 		ldm	r4, {r0, r1, r2}
 1391 002a 83E80700 		stm	r3, {r0, r1, r2}
 403:Core/Src/robot/robot_functions.cpp **** 	calculate_robot_angle();
 1392              		.loc 2 403 0
 1393 002e FFF7FEFF 		bl	_Z21calculate_robot_anglev
 1394              	.LVL176:
 406:Core/Src/robot/robot_functions.cpp **** }
 1395              		.loc 2 406 0
 1396 0032 04B0     		add	sp, sp, #16
 1397              	.LCFI27:
 1398              		.cfi_def_cfa_offset 8
 1399              		@ sp needed
 1400 0034 10BD     		pop	{r4, pc}
 1401              	.L117:
 1402 0036 00BF     		.align	2
 1403              	.L116:
 1404 0038 00000000 		.word	leg
 1405 003c 0C000000 		.word	steering+12
 1406 0040 00000000 		.word	.LANCHOR1
 1407              		.cfi_endproc
 1408              	.LFE502:
 1410              		.section	.text._Z14motion_profilefff,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 39


 1411              		.align	1
 1412              		.global	_Z14motion_profilefff
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	_Z14motion_profilefff:
 1419              	.LFB503:
 409:Core/Src/robot/robot_functions.cpp **** {
 1420              		.loc 2 409 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 0
 1423              		@ frame_needed = 0, uses_anonymous_args = 0
 1424              		@ link register save eliminated.
 1425              	.LVL177:
 413:Core/Src/robot/robot_functions.cpp **** 	if (angle_in_degrees > 180)
 1426              		.loc 2 413 0
 1427 0000 DFED237A 		vldr.32	s15, .L137
 1428 0004 B4EEE70A 		vcmpe.f32	s0, s15
 1429 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1430 000c 01DD     		ble	.L119
 415:Core/Src/robot/robot_functions.cpp **** 		angle_in_degrees -= 180;
 1431              		.loc 2 415 0
 1432 000e 30EE670A 		vsub.f32	s0, s0, s15
 1433              	.LVL178:
 1434              	.L119:
 418:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1435              		.loc 2 418 0
 1436 0012 B5EEC00A 		vcmpe.f32	s0, #0
 1437 0016 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1438 001a 06DB     		blt	.L121
 418:Core/Src/robot/robot_functions.cpp **** 	if ((angle_in_degrees >= 0) && (angle_in_degrees <= damping_angle))
 1439              		.loc 2 418 0 is_stmt 0 discriminator 1
 1440 001c F3EE0E7A 		vmov.f32	s15, #3.0e+1
 1441 0020 B4EEE70A 		vcmpe.f32	s0, s15
 1442 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1443 0028 1ED9     		bls	.L136
 1444              	.L121:
 424:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 1445              		.loc 2 424 0 is_stmt 1
 1446 002a DFED1A7A 		vldr.32	s15, .L137+4
 1447 002e B4EEE70A 		vcmpe.f32	s0, s15
 1448 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1449 0036 24DB     		blt	.L134
 424:Core/Src/robot/robot_functions.cpp **** 	else if ((angle_in_degrees >= (180 - damping_angle)) && (angle_in_degrees <= 180))
 1450              		.loc 2 424 0 is_stmt 0 discriminator 1
 1451 0038 DFED157A 		vldr.32	s15, .L137
 1452 003c B4EEE70A 		vcmpe.f32	s0, s15
 1453 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1454 0044 20D8     		bhi	.L135
 426:Core/Src/robot/robot_functions.cpp **** 		speed = ((min_speed - max_speed) / (180 - (180 - damping_angle))) * (angle_in_degrees - (180 - da
 1455              		.loc 2 426 0 is_stmt 1
 1456 0046 DFED147A 		vldr.32	s15, .L137+8
 1457 004a 77EEC17A 		vsub.f32	s15, s15, s2
 1458 004e F3EE0E6A 		vmov.f32	s13, #3.0e+1
 1459 0052 87EEA67A 		vdiv.f32	s14, s15, s13
 1460 0056 DFED0F7A 		vldr.32	s15, .L137+4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 40


 1461 005a 70EE677A 		vsub.f32	s15, s0, s15
 1462 005e 27EE270A 		vmul.f32	s0, s14, s15
 1463              	.LVL179:
 1464 0062 30EE010A 		vadd.f32	s0, s0, s2
 1465              	.LVL180:
 1466 0066 7047     		bx	lr
 1467              	.LVL181:
 1468              	.L136:
 420:Core/Src/robot/robot_functions.cpp **** 		speed = ((max_speed - min_speed) / (damping_angle - 0)) * (angle_in_degrees - 0) + min_speed;
 1469              		.loc 2 420 0
 1470 0068 9FED0B7A 		vldr.32	s14, .L137+8
 1471 006c 71EE477A 		vsub.f32	s15, s2, s14
 1472 0070 F3EE0E6A 		vmov.f32	s13, #3.0e+1
 1473 0074 87EEA61A 		vdiv.f32	s2, s15, s13
 1474              	.LVL182:
 1475 0078 21EE001A 		vmul.f32	s2, s2, s0
 1476 007c 31EE070A 		vadd.f32	s0, s2, s14
 1477              	.LVL183:
 1478 0080 7047     		bx	lr
 1479              	.LVL184:
 1480              	.L134:
 432:Core/Src/robot/robot_functions.cpp **** 		speed = max_speed;
 1481              		.loc 2 432 0
 1482 0082 B0EE410A 		vmov.f32	s0, s2
 1483              	.LVL185:
 1484 0086 7047     		bx	lr
 1485              	.LVL186:
 1486              	.L135:
 1487 0088 B0EE410A 		vmov.f32	s0, s2
 1488              	.LVL187:
 1489              		.loc 2 438 0
 1490 008c 7047     		bx	lr
 1491              	.L138:
 1492 008e 00BF     		.align	2
 1493              	.L137:
 1494 0090 00003443 		.word	1127481344
 1495 0094 00001643 		.word	1125515264
 1496 0098 6666E63F 		.word	1072064102
 1497              		.cfi_endproc
 1498              	.LFE503:
 1500              		.section	.text._Z8move_legif,"ax",%progbits
 1501              		.align	1
 1502              		.global	_Z8move_legif
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu fpv4-sp-d16
 1508              	_Z8move_legif:
 1509              	.LFB493:
  81:Core/Src/robot/robot_functions.cpp **** {
 1510              		.loc 2 81 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              	.LVL188:
 1515 0000 10B5     		push	{r4, lr}
 1516              	.LCFI28:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 41


 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 4, -8
 1519              		.cfi_offset 14, -4
 1520 0002 2DED028B 		vpush.64	{d8}
 1521              	.LCFI29:
 1522              		.cfi_def_cfa_offset 16
 1523              		.cfi_offset 80, -16
 1524              		.cfi_offset 81, -12
 1525              	.LVL189:
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 36)) ? robot_speed / 1.3 : robot_speed;
 1526              		.loc 2 86 0
 1527 0006 6428     		cmp	r0, #100
 1528 0008 50D0     		beq	.L144
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 36)) ? robot_speed / 1.3 : robot_speed;
 1529              		.loc 2 86 0 is_stmt 0 discriminator 2
 1530 000a 2428     		cmp	r0, #36
 1531 000c 4BD0     		beq	.L149
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 36)) ? robot_speed / 1.3 : robot_speed;
 1532              		.loc 2 86 0
 1533 000e B2EE008A 		vmov.f32	s16, #8.0e+0
 1534              	.L140:
 1535              	.LVL190:
  87:Core/Src/robot/robot_functions.cpp **** 	if (step == steps[6])
 1536              		.loc 2 87 0 is_stmt 1 discriminator 6
 1537 0012 2B4B     		ldr	r3, .L151+8
 1538 0014 9B69     		ldr	r3, [r3, #24]
 1539 0016 8342     		cmp	r3, r0
 1540 0018 4BD0     		beq	.L150
 1541              	.LVL191:
 1542              	.L141:
 1543              	.LBB150:
 1544              	.LBB151:
 1545              		.loc 4 47 0
 1546 001a 2A4C     		ldr	r4, .L151+12
 1547 001c 2046     		mov	r0, r4
 1548              	.LVL192:
 1549 001e FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 1550              	.LVL193:
 1551              	.LBE151:
 1552              	.LBE150:
  92:Core/Src/robot/robot_functions.cpp **** 	leg_speed = motion_profile(leg[0].get_angle() * 180 / PI, 1, leg_speed);
 1553              		.loc 2 92 0
 1554 0022 DFED297A 		vldr.32	s15, .L151+16
 1555 0026 60EE277A 		vmul.f32	s15, s0, s15
 1556 002a 17EE900A 		vmov	r0, s15
 1557 002e FFF7FEFF 		bl	__aeabi_f2d
 1558              	.LVL194:
 1559 0032 21A3     		adr	r3, .L151
 1560 0034 D3E90023 		ldrd	r2, [r3]
 1561 0038 FFF7FEFF 		bl	__aeabi_ddiv
 1562              	.LVL195:
 1563 003c FFF7FEFF 		bl	__aeabi_d2f
 1564              	.LVL196:
 1565 0040 B0EE481A 		vmov.f32	s2, s16
 1566 0044 F7EE000A 		vmov.f32	s1, #1.0e+0
 1567 0048 00EE100A 		vmov	s0, r0
 1568 004c FFF7FEFF 		bl	_Z14motion_profilefff
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 42


 1569              	.LVL197:
 1570 0050 F0EE408A 		vmov.f32	s17, s0
 1571              	.LVL198:
 1572              	.LBB152:
 1573              	.LBB153:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 1574              		.loc 4 48 0
 1575 0054 2046     		mov	r0, r4
 1576 0056 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1577              	.LVL199:
 1578 005a B0EE408A 		vmov.f32	s16, s0
 1579              	.LVL200:
 1580              	.LBE153:
 1581              	.LBE152:
 1582              	.LBB154:
 1583              	.LBB155:
 1584 005e 04F15800 		add	r0, r4, #88
 1585 0062 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1586              	.LVL201:
 1587              	.LBE155:
 1588              	.LBE154:
  93:Core/Src/robot/robot_functions.cpp **** 	del_speed = 2 * (leg[0].get_actual_angle() - leg[1].get_actual_angle()) * leg_speed;
 1589              		.loc 2 93 0
 1590 0066 38EE400A 		vsub.f32	s0, s16, s0
 1591 006a 30EE000A 		vadd.f32	s0, s0, s0
 1592 006e 20EE288A 		vmul.f32	s16, s0, s17
 1593              	.LVL202:
 1594              	.LBB156:
 1595              	.LBB157:
 1596              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
   1:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
   3:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
   5:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // any later version.
  10:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  11:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  16:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  20:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  25:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** /** @file include/cmath
  26:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 43


  28:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *
  29:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  *  as macros in C).
  33:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****  */
  34:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  35:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  36:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** //
  38:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  39:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #pragma GCC system_header
  40:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  41:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include_next <math.h>
  46:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  49:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  52:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef div
  54:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef acos
  55:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef asin
  56:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan
  57:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef atan2
  58:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ceil
  59:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cos
  60:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef cosh
  61:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef exp
  62:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fabs
  63:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef floor
  64:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef fmod
  65:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef frexp
  66:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef ldexp
  67:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log
  68:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef log10
  69:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef modf
  70:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef pow
  71:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sin
  72:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sinh
  73:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef sqrt
  74:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tan
  75:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #undef tanh
  76:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  77:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** extern "C++"
  78:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  79:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** {
  81:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  83:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::acos;
  84:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 44


  85:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(float __x)
  88:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  90:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   acos(long double __x)
  92:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
  94:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
  95:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
  96:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
  99:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 102:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::asin;
 103:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 104:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(float __x)
 107:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 109:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   asin(long double __x)
 111:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 113:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 114:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 115:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 118:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 121:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan;
 122:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 123:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(float __x)
 126:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 128:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan(long double __x)
 130:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 132:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 133:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 134:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 137:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 140:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::atan2;
 141:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 45


 142:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 147:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 151:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 152:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     {
 157:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     }
 160:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 161:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::ceil;
 162:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 163:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(float __x)
 166:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 168:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   ceil(long double __x)
 170:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 172:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 173:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 174:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 177:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 180:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cos;
 181:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 182:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(float __x)
 185:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 187:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cos(long double __x)
 189:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 191:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 192:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 193:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 196:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 46


 199:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::cosh;
 200:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 201:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(float __x)
 204:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 206:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   cosh(long double __x)
 208:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 210:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 211:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 212:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 215:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 218:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::exp;
 219:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 220:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(float __x)
 223:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 225:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   exp(long double __x)
 227:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #endif
 229:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 230:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   template<typename _Tp>
 231:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****                                     double>::__type
 234:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 237:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   using ::fabs;
 238:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** 
 239:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   fabs(float __x)
 242:c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\arm-none-eabi\include\c++\7.2.1\cmath ****   { return __builtin_fabsf(__x); }
 1597              		.loc 5 242 0
 1598 0072 F0EEC87A 		vabs.f32	s15, s16
 1599              	.LVL203:
 1600              	.LBE157:
 1601              	.LBE156:
  94:Core/Src/robot/robot_functions.cpp **** 	if (fabs(del_speed) >= leg_speed)
 1602              		.loc 2 94 0
 1603 0076 F4EEE78A 		vcmpe.f32	s17, s15
 1604 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1605 007e 03D8     		bhi	.L142
  96:Core/Src/robot/robot_functions.cpp **** 		del_speed /= fabs(del_speed);
 1606              		.loc 2 96 0
 1607 0080 88EE277A 		vdiv.f32	s14, s16, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 47


 1608              	.LVL204:
  97:Core/Src/robot/robot_functions.cpp **** 		del_speed *= leg_speed;
 1609              		.loc 2 97 0
 1610 0084 28EE878A 		vmul.f32	s16, s17, s14
 1611              	.LVL205:
 1612              	.L142:
  99:Core/Src/robot/robot_functions.cpp **** 	leg[0].set_omega(leg_speed - del_speed);
 1613              		.loc 2 99 0
 1614 0088 104C     		ldr	r4, .L151+20
 1615 008a 38EEC80A 		vsub.f32	s0, s17, s16
 1616 008e 2046     		mov	r0, r4
 1617 0090 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1618              	.LVL206:
 100:Core/Src/robot/robot_functions.cpp **** 	leg[1].set_omega(leg_speed + del_speed);
 1619              		.loc 2 100 0
 1620 0094 38EE280A 		vadd.f32	s0, s16, s17
 1621 0098 04F15800 		add	r0, r4, #88
 1622 009c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1623              	.LVL207:
 101:Core/Src/robot/robot_functions.cpp **** }
 1624              		.loc 2 101 0
 1625 00a0 BDEC028B 		vldm	sp!, {d8}
 1626              	.LCFI30:
 1627              		.cfi_remember_state
 1628              		.cfi_restore 80
 1629              		.cfi_restore 81
 1630              		.cfi_def_cfa_offset 8
 1631              	.LVL208:
 1632 00a4 10BD     		pop	{r4, pc}
 1633              	.LVL209:
 1634              	.L149:
 1635              	.LCFI31:
 1636              		.cfi_restore_state
  86:Core/Src/robot/robot_functions.cpp **** 	leg_speed = ((step == 100) || (step == 36)) ? robot_speed / 1.3 : robot_speed;
 1637              		.loc 2 86 0
 1638 00a6 9FED0A8A 		vldr.32	s16, .L151+24
 1639 00aa B2E7     		b	.L140
 1640              	.L144:
 1641 00ac 9FED088A 		vldr.32	s16, .L151+24
 1642 00b0 AFE7     		b	.L140
 1643              	.LVL210:
 1644              	.L150:
  89:Core/Src/robot/robot_functions.cpp **** 		leg_speed = 4;
 1645              		.loc 2 89 0
 1646 00b2 B1EE008A 		vmov.f32	s16, #4.0e+0
 1647              	.LVL211:
 1648 00b6 B0E7     		b	.L141
 1649              	.L152:
 1650              		.align	3
 1651              	.L151:
 1652 00b8 182D4454 		.word	1413754136
 1653 00bc FB210940 		.word	1074340347
 1654 00c0 00000000 		.word	steps
 1655 00c4 3C000000 		.word	leg+60
 1656 00c8 00003443 		.word	1127481344
 1657 00cc 00000000 		.word	leg
 1658 00d0 4FECC440 		.word	1086647375
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 48


 1659              		.cfi_endproc
 1660              	.LFE493:
 1662              		.section	.text._Z2goif,"ax",%progbits
 1663              		.align	1
 1664              		.global	_Z2goif
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1668              		.fpu fpv4-sp-d16
 1670              	_Z2goif:
 1671              	.LFB492:
  38:Core/Src/robot/robot_functions.cpp **** {
 1672              		.loc 2 38 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 8
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              	.LVL212:
 1677 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1678              	.LCFI32:
 1679              		.cfi_def_cfa_offset 32
 1680              		.cfi_offset 4, -32
 1681              		.cfi_offset 5, -28
 1682              		.cfi_offset 6, -24
 1683              		.cfi_offset 7, -20
 1684              		.cfi_offset 8, -16
 1685              		.cfi_offset 9, -12
 1686              		.cfi_offset 10, -8
 1687              		.cfi_offset 14, -4
 1688 0004 2DED028B 		vpush.64	{d8}
 1689              	.LCFI33:
 1690              		.cfi_def_cfa_offset 40
 1691              		.cfi_offset 80, -40
 1692              		.cfi_offset 81, -36
 1693 0008 84B0     		sub	sp, sp, #16
 1694              	.LCFI34:
 1695              		.cfi_def_cfa_offset 56
 1696 000a 0546     		mov	r5, r0
  39:Core/Src/robot/robot_functions.cpp **** 	angle *= PI / 180;
 1697              		.loc 2 39 0
 1698 000c 10EE100A 		vmov	r0, s0
 1699              	.LVL213:
 1700 0010 FFF7FEFF 		bl	__aeabi_f2d
 1701              	.LVL214:
 1702 0014 4DA3     		adr	r3, .L161+36
 1703 0016 D3E90023 		ldrd	r2, [r3]
 1704 001a FFF7FEFF 		bl	__aeabi_dmul
 1705              	.LVL215:
 1706 001e FFF7FEFF 		bl	__aeabi_d2f
 1707              	.LVL216:
 1708 0022 08EE100A 		vmov	s16, r0
 1709              	.LVL217:
  40:Core/Src/robot/robot_functions.cpp **** 	move_leg(step, angle);
 1710              		.loc 2 40 0
 1711 0026 00EE100A 		vmov	s0, r0
 1712 002a 2846     		mov	r0, r5
 1713              	.LVL218:
 1714 002c FFF7FEFF 		bl	_Z8move_legif
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 49


 1715              	.LVL219:
  41:Core/Src/robot/robot_functions.cpp **** 	if ((step == 100))
 1716              		.loc 2 41 0
 1717 0030 642D     		cmp	r5, #100
 1718 0032 5CD0     		beq	.L159
  48:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = true;
 1719              		.loc 2 48 0
 1720 0034 3E4B     		ldr	r3, .L161+8
 1721 0036 0122     		movs	r2, #1
 1722 0038 1A70     		strb	r2, [r3]
  49:Core/Src/robot/robot_functions.cpp **** 		move_steering(step, angle);
 1723              		.loc 2 49 0
 1724 003a B0EE480A 		vmov.f32	s0, s16
 1725 003e 2846     		mov	r0, r5
 1726 0040 FFF7FEFF 		bl	_Z13move_steeringif
 1727              	.LVL220:
 1728              	.L155:
 1729              	.LBB158:
 1730              	.LBB159:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1731              		.loc 4 45 0
 1732 0044 3B4C     		ldr	r4, .L161+12
 1733 0046 D4F810A0 		ldr	r10, [r4, #16]
 1734              	.LVL221:
 1735              	.LBE159:
 1736              	.LBE158:
  53:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1737              		.loc 2 53 0
 1738 004a 3B4B     		ldr	r3, .L161+16
 1739 004c D3ED007A 		vldr.32	s15, [r3]
 1740 0050 9FED3A8A 		vldr.32	s16, .L161+20
 1741              	.LVL222:
 1742 0054 67EE887A 		vmul.f32	s15, s15, s16
 1743 0058 17EE900A 		vmov	r0, s15
 1744 005c FFF7FEFF 		bl	__aeabi_f2d
 1745              	.LVL223:
 1746 0060 31A3     		adr	r3, .L161
 1747 0062 D3E90023 		ldrd	r2, [r3]
 1748 0066 FFF7FEFF 		bl	__aeabi_ddiv
 1749              	.LVL224:
 1750 006a 0646     		mov	r6, r0
 1751 006c 0F46     		mov	r7, r1
 1752              	.LVL225:
 1753              	.LBB160:
 1754              	.LBB161:
 1755              		.loc 4 48 0
 1756 006e 04F13C00 		add	r0, r4, #60
 1757 0072 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1758              	.LVL226:
 1759              	.LBE161:
 1760              	.LBE160:
  53:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1761              		.loc 2 53 0
 1762 0076 60EE087A 		vmul.f32	s15, s0, s16
 1763 007a 17EE900A 		vmov	r0, s15
 1764 007e FFF7FEFF 		bl	__aeabi_f2d
 1765              	.LVL227:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 50


 1766 0082 29A3     		adr	r3, .L161
 1767 0084 D3E90023 		ldrd	r2, [r3]
 1768 0088 FFF7FEFF 		bl	__aeabi_ddiv
 1769              	.LVL228:
 1770 008c 8046     		mov	r8, r0
 1771 008e 8946     		mov	r9, r1
 1772              	.LVL229:
 1773              	.LBB162:
 1774              	.LBB163:
 1775              		.loc 4 48 0
 1776 0090 04F19400 		add	r0, r4, #148
 1777 0094 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 1778              	.LVL230:
 1779              	.LBE163:
 1780              	.LBE162:
  53:Core/Src/robot/robot_functions.cpp **** 	       (int)(robot_angle * 180 / PI), (int)(leg[0].get_actual_angle() * 180 / PI), (int)(leg[1].ge
 1781              		.loc 2 53 0
 1782 0098 60EE087A 		vmul.f32	s15, s0, s16
 1783 009c 17EE900A 		vmov	r0, s15
 1784 00a0 FFF7FEFF 		bl	__aeabi_f2d
 1785              	.LVL231:
 1786 00a4 20A3     		adr	r3, .L161
 1787 00a6 D3E90023 		ldrd	r2, [r3]
 1788 00aa FFF7FEFF 		bl	__aeabi_ddiv
 1789              	.LVL232:
 1790 00ae CDE90201 		strd	r0, [sp, #8]
  52:Core/Src/robot/robot_functions.cpp **** 	printf(" steps = %d\t robot_angle = %d\t leg_1_angle = %d\t leg_2_angle = %d\n", (int)(leg[0].get_
 1791              		.loc 2 52 0
 1792 00b2 4046     		mov	r0, r8
 1793 00b4 4946     		mov	r1, r9
 1794 00b6 FFF7FEFF 		bl	__aeabi_d2iz
 1795              	.LVL233:
 1796 00ba 8046     		mov	r8, r0
 1797 00bc 3046     		mov	r0, r6
 1798 00be 3946     		mov	r1, r7
 1799 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 1800              	.LVL234:
 1801 00c4 0646     		mov	r6, r0
 1802 00c6 DDE90201 		ldrd	r0, [sp, #8]
 1803 00ca FFF7FEFF 		bl	__aeabi_d2iz
 1804              	.LVL235:
 1805 00ce 0090     		str	r0, [sp]
 1806 00d0 4346     		mov	r3, r8
 1807 00d2 3246     		mov	r2, r6
 1808 00d4 5146     		mov	r1, r10
 1809 00d6 1A48     		ldr	r0, .L161+24
 1810 00d8 FFF7FEFF 		bl	printf
 1811              	.LVL236:
 1812              	.LBB164:
 1813              	.LBB165:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1814              		.loc 4 45 0
 1815 00dc 2369     		ldr	r3, [r4, #16]
 1816              	.LVL237:
 1817              	.LBE165:
 1818              	.LBE164:
  56:Core/Src/robot/robot_functions.cpp **** 	if (leg[0].get_steps() >= step)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 51


 1819              		.loc 2 56 0
 1820 00de 9D42     		cmp	r5, r3
 1821 00e0 0EDD     		ble	.L160
  65:Core/Src/robot/robot_functions.cpp **** 		return false;
 1822              		.loc 2 65 0
 1823 00e2 0020     		movs	r0, #0
 1824              	.L156:
  67:Core/Src/robot/robot_functions.cpp **** }
 1825              		.loc 2 67 0
 1826 00e4 04B0     		add	sp, sp, #16
 1827              	.LCFI35:
 1828              		.cfi_remember_state
 1829              		.cfi_def_cfa_offset 40
 1830              		@ sp needed
 1831 00e6 BDEC028B 		vldm	sp!, {d8}
 1832              	.LCFI36:
 1833              		.cfi_restore 80
 1834              		.cfi_restore 81
 1835              		.cfi_def_cfa_offset 32
 1836 00ea BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1837              	.LVL238:
 1838              	.L159:
 1839              	.LCFI37:
 1840              		.cfi_restore_state
  43:Core/Src/robot/robot_functions.cpp **** 		USE_IMU_FLAG = false;
 1841              		.loc 2 43 0
 1842 00ee 104B     		ldr	r3, .L161+8
 1843 00f0 0022     		movs	r2, #0
 1844 00f2 1A70     		strb	r2, [r3]
  44:Core/Src/robot/robot_functions.cpp **** 		steering.set_angle(0);
 1845              		.loc 2 44 0
 1846 00f4 9FED130A 		vldr.32	s0, .L161+28
 1847 00f8 1348     		ldr	r0, .L161+32
 1848 00fa FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1849              	.LVL239:
 1850 00fe A1E7     		b	.L155
 1851              	.LVL240:
 1852              	.L160:
  58:Core/Src/robot/robot_functions.cpp **** 		leg[0].set_omega(0);
 1853              		.loc 2 58 0
 1854 0100 9FED108A 		vldr.32	s16, .L161+28
 1855 0104 B0EE480A 		vmov.f32	s0, s16
 1856 0108 2046     		mov	r0, r4
 1857 010a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1858              	.LVL241:
  59:Core/Src/robot/robot_functions.cpp **** 		leg[1].set_omega(0);
 1859              		.loc 2 59 0
 1860 010e B0EE480A 		vmov.f32	s0, s16
 1861 0112 04F15800 		add	r0, r4, #88
 1862 0116 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1863              	.LVL242:
  60:Core/Src/robot/robot_functions.cpp **** 		steering.set_omega(0);
 1864              		.loc 2 60 0
 1865 011a B0EE480A 		vmov.f32	s0, s16
 1866 011e 0A48     		ldr	r0, .L161+32
 1867 0120 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1868              	.LVL243:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 52


  61:Core/Src/robot/robot_functions.cpp **** 		return true;
 1869              		.loc 2 61 0
 1870 0124 0120     		movs	r0, #1
 1871 0126 DDE7     		b	.L156
 1872              	.L162:
 1873              		.align	3
 1874              	.L161:
 1875 0128 182D4454 		.word	1413754136
 1876 012c FB210940 		.word	1074340347
 1877 0130 00000000 		.word	USE_IMU_FLAG
 1878 0134 00000000 		.word	leg
 1879 0138 00000000 		.word	.LANCHOR2
 1880 013c 00003443 		.word	1127481344
 1881 0140 00000000 		.word	.LC4
 1882 0144 00000000 		.word	0
 1883 0148 00000000 		.word	steering
 1884 014c 399D52A2 		.word	-1571644103
 1885 0150 46DF913F 		.word	1066524486
 1886              		.cfi_endproc
 1887              	.LFE492:
 1889              		.section	.text._GLOBAL__sub_I_initial_angle,"ax",%progbits
 1890              		.align	1
 1891              		.syntax unified
 1892              		.thumb
 1893              		.thumb_func
 1894              		.fpu fpv4-sp-d16
 1896              	_GLOBAL__sub_I_initial_angle:
 1897              	.LFB516:
 1898              		.loc 2 438 0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902 0000 08B5     		push	{r3, lr}
 1903              	.LCFI38:
 1904              		.cfi_def_cfa_offset 8
 1905              		.cfi_offset 3, -8
 1906              		.cfi_offset 14, -4
 1907              		.loc 2 438 0
 1908 0002 4FF6FF71 		movw	r1, #65535
 1909 0006 0120     		movs	r0, #1
 1910 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1911              	.LVL244:
 1912 000c 08BD     		pop	{r3, pc}
 1913              		.cfi_endproc
 1914              	.LFE516:
 1916              		.section	.init_array,"aw",%init_array
 1917              		.align	2
 1918 0000 00000000 		.word	_GLOBAL__sub_I_initial_angle(target1)
 1919              		.global	tolerance
 1920              		.global	temp_robot_angle
 1921              		.global	robot_angle
 1922              		.global	STEERING_FLAG
 1923              		.global	start_time
 1924              		.global	summation_angle
 1925              		.global	curr_angle
 1926              		.global	initial_angle
 1927              		.section	.bss.STEERING_FLAG,"aw",%nobits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 53


 1928              		.set	.LANCHOR8,. + 0
 1931              	STEERING_FLAG:
 1932 0000 00       		.space	1
 1933              		.section	.bss._ZZ23initialize_leg_positionvE9leg0_flag,"aw",%nobits
 1934              		.set	.LANCHOR5,. + 0
 1937              	_ZZ23initialize_leg_positionvE9leg0_flag:
 1938 0000 00       		.space	1
 1939              		.section	.bss._ZZ23initialize_leg_positionvE9leg1_flag,"aw",%nobits
 1940              		.set	.LANCHOR6,. + 0
 1943              	_ZZ23initialize_leg_positionvE9leg1_flag:
 1944 0000 00       		.space	1
 1945              		.section	.bss.curr_angle,"aw",%nobits
 1946              		.align	2
 1947              		.set	.LANCHOR1,. + 0
 1950              	curr_angle:
 1951 0000 00000000 		.space	12
 1951      00000000 
 1951      00000000 
 1952              		.section	.bss.initial_angle,"aw",%nobits
 1953              		.align	2
 1954              		.set	.LANCHOR0,. + 0
 1957              	initial_angle:
 1958 0000 00000000 		.space	12
 1958      00000000 
 1958      00000000 
 1959              		.section	.bss.robot_angle,"aw",%nobits
 1960              		.align	2
 1961              		.set	.LANCHOR2,. + 0
 1964              	robot_angle:
 1965 0000 00000000 		.space	4
 1966              		.section	.bss.start_time,"aw",%nobits
 1967              		.align	2
 1968              		.set	.LANCHOR7,. + 0
 1971              	start_time:
 1972 0000 00000000 		.space	4
 1973              		.section	.bss.summation_angle,"aw",%nobits
 1974              		.align	2
 1975              		.set	.LANCHOR3,. + 0
 1978              	summation_angle:
 1979 0000 00000000 		.space	4
 1980              		.section	.bss.temp_robot_angle,"aw",%nobits
 1981              		.align	2
 1982              		.set	.LANCHOR4,. + 0
 1985              	temp_robot_angle:
 1986 0000 00000000 		.space	4
 1987              		.section	.data.tolerance,"aw",%progbits
 1988              		.align	2
 1991              	tolerance:
 1992 0000 5077563D 		.word	1029076816
 1993              		.section	.rodata._Z19initialize_positionv.str1.4,"aMS",%progbits,1
 1994              		.align	2
 1995              	.LC1:
 1996 0000 0A496E69 		.ascii	"\012Initializing_Leg_Orientation\011\000"
 1996      7469616C 
 1996      697A696E 
 1996      675F4C65 
 1996      675F4F72 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 54


 1997 001f 00       		.space	1
 1998              	.LC2:
 1999 0020 0A095761 		.ascii	"\012\011Waiting_The_Leg \011\000"
 1999      6974696E 
 1999      675F5468 
 1999      655F4C65 
 1999      67200900 
 2000              	.LC3:
 2001 0034 09496E69 		.ascii	"\011Initializing_Steering_Orientation\011 %d \011 %"
 2001      7469616C 
 2001      697A696E 
 2001      675F5374 
 2001      65657269 
 2002 005e 6400     		.ascii	"d\000"
 2003              		.section	.rodata._Z28initialize_steering_positionv.str1.4,"aMS",%progbits,1
 2004              		.align	2
 2005              	.LC0:
 2006 0000 0A616E67 		.ascii	"\012angle = %d\011\000"
 2006      6C65203D 
 2006      20256409 
 2006      00
 2007              		.section	.rodata._Z2goif.str1.4,"aMS",%progbits,1
 2008              		.align	2
 2009              	.LC4:
 2010 0000 20737465 		.ascii	" steps = %d\011 robot_angle = %d\011 leg_1_angle = "
 2010      7073203D 
 2010      20256409 
 2010      20726F62 
 2010      6F745F61 
 2011 002d 25640920 		.ascii	"%d\011 leg_2_angle = %d\012\000"
 2011      6C65675F 
 2011      325F616E 
 2011      676C6520 
 2011      3D202564 
 2012              		.text
 2013              	.Letext0:
 2014              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2015              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 2016              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2017              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2018              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2019              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2020              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2021              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 2022              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2023              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2024              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2025              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2026              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2027              		.file 19 "Core/Inc/periphs/tim.h"
 2028              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2029              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2030              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2031              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2032              		.file 24 "Core/Inc/devs/motor.h"
 2033              		.file 25 "Core/Inc/devs/encoder.h"
 2034              		.file 26 "Core/Inc/utils/pid_algorithms.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 55


 2035              		.file 27 "Core/Inc/devs/limit_switch.h"
 2036              		.file 28 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2037              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 2038              		.file 30 "<built-in>"
 2039              		.file 31 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 robot_functions.cpp
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:18     .text._ZN4Vec3IfED2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED2Ev
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:25     .text._ZN4Vec3IfED2Ev:00000000 _ZN4Vec3IfED1Ev
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:42     .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:48     .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:150    .text._Z41__static_initialization_and_destruction_0ii:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:163    .text._Z9set_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:170    .text._Z9set_anglef:00000000 _Z9set_anglef
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:264    .text._Z9set_anglef:00000088 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:278    .text._Z22correct_steering_anglef:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:285    .text._Z22correct_steering_anglef:00000000 _Z22correct_steering_anglef
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:368    .text._Z22correct_steering_anglef:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:380    .text._Z13move_steeringif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:387    .text._Z13move_steeringif:00000000 _Z13move_steeringif
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:476    .text._Z13move_steeringif:0000006c $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:488    .text._Z21calculate_robot_anglev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:495    .text._Z21calculate_robot_anglev:00000000 _Z21calculate_robot_anglev
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:607    .text._Z21calculate_robot_anglev:00000080 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:621    .text._Z23initialize_leg_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:628    .text._Z23initialize_leg_positionv:00000000 _Z23initialize_leg_positionv
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:799    .text._Z23initialize_leg_positionv:000000d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:815    .text._Z28initialize_steering_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:822    .text._Z28initialize_steering_positionv:00000000 _Z28initialize_steering_positionv
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:905    .text._Z28initialize_steering_positionv:00000078 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:919    .text._Z19initialize_positionv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:926    .text._Z19initialize_positionv:00000000 _Z19initialize_positionv
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1115   .text._Z19initialize_positionv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1129   .text._Z11getup_n_runv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1136   .text._Z11getup_n_runv:00000000 _Z11getup_n_runv
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1329   .text._Z11getup_n_runv:00000128 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1345   .text._Z15calculate_datasv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1352   .text._Z15calculate_datasv:00000000 _Z15calculate_datasv
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1404   .text._Z15calculate_datasv:00000038 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1411   .text._Z14motion_profilefff:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1418   .text._Z14motion_profilefff:00000000 _Z14motion_profilefff
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1494   .text._Z14motion_profilefff:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1501   .text._Z8move_legif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1508   .text._Z8move_legif:00000000 _Z8move_legif
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1652   .text._Z8move_legif:000000b8 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1663   .text._Z2goif:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1670   .text._Z2goif:00000000 _Z2goif
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1875   .text._Z2goif:00000128 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1890   .text._GLOBAL__sub_I_initial_angle:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1896   .text._GLOBAL__sub_I_initial_angle:00000000 _GLOBAL__sub_I_initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1917   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1991   .data.tolerance:00000000 tolerance
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1985   .bss.temp_robot_angle:00000000 temp_robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1964   .bss.robot_angle:00000000 robot_angle
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1931   .bss.STEERING_FLAG:00000000 STEERING_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1971   .bss.start_time:00000000 start_time
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1978   .bss.summation_angle:00000000 summation_angle
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1950   .bss.curr_angle:00000000 curr_angle
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1957   .bss.initial_angle:00000000 initial_angle
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1932   .bss.STEERING_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1937   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 _ZZ23initialize_leg_positionvE9leg0_flag
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s 			page 57


C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1938   .bss._ZZ23initialize_leg_positionvE9leg0_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1943   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 _ZZ23initialize_leg_positionvE9leg1_flag
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1944   .bss._ZZ23initialize_leg_positionvE9leg1_flag:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1946   .bss.curr_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1953   .bss.initial_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1960   .bss.robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1967   .bss.start_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1974   .bss.summation_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1981   .bss.temp_robot_angle:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1988   .data.tolerance:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:1994   .rodata._Z19initialize_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:2004   .rodata._Z28initialize_steering_positionv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccOMnGNy.s:2008   .rodata._Z2goif.str1.4:00000000 $d
                           .group:00000000 _ZN4Vec3IfED5Ev

UNDEFINED SYMBOLS
__aeabi_atexit
__dso_handle
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
__aeabi_dcmpgt
__aeabi_dcmplt
_ZN8steering9set_angleEf
steering
__aeabi_dcmple
_ZN3leg9is_raisedEv
_ZN8steering9set_omegaEf
steps
leg
__aeabi_dmul
_ZN3leg26is_raised_without_deadzoneEv
_ZN7encoder9get_angleEv
USE_IMU_FLAG
_ZN3leg9set_omegaEf
__aeabi_d2iz
printf
HAL_GetTick
HAL_GPIO_WritePin
_ZN3leg11reset_angleEf
_ZN7encoder18reset_actual_angleEf
_ZN3leg15calculate_omegaEv
_ZN7encoder15calculate_omegaEv
_Z16read_Orientationm
_ZN7encoder16get_actual_angleEv
