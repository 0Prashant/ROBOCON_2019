ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB505:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = true;
  15:Core/Src/robot/robot.cpp **** float omega0 = 0;
  16:Core/Src/robot/robot.cpp **** float omega1 = 0;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** // float steps[7] = {7, 13, 17, 19, 24, 27, 36}`;        //for 7 rad/sec
  19:Core/Src/robot/robot.cpp **** float steps[7] = {5, 9, 13, 15, 19, 22, 29};		//for 9 rad/sec
  20:Core/Src/robot/robot.cpp **** float angles[7] = {0, 45, 45, 50, -20, 0, -90};
  21:Core/Src/robot/robot.cpp **** 
  22:Core/Src/robot/robot.cpp **** 
  23:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  24:Core/Src/robot/robot.cpp **** {
  25:Core/Src/robot/robot.cpp **** 	switch (*state_)
  26:Core/Src/robot/robot.cpp **** 	{
  27:Core/Src/robot/robot.cpp **** 	case HOME:
  28:Core/Src/robot/robot.cpp **** 	{
  29:Core/Src/robot/robot.cpp **** 		/**
  30:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  31:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  33:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
  34:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  35:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  36:Core/Src/robot/robot.cpp **** 			*/
  37:Core/Src/robot/robot.cpp **** 
  38:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  39:Core/Src/robot/robot.cpp **** 		// printf("\n\tWaiting_to_start\t");
  40:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  41:Core/Src/robot/robot.cpp **** 		
  42:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  43:Core/Src/robot/robot.cpp **** 		{
  44:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  45:Core/Src/robot/robot.cpp **** 			initial_angle.setZ(initial_angle.getZ()+2);
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		else if(ROBOT_START_FLAG)
  48:Core/Src/robot/robot.cpp **** 		{
  49:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  50:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  51:Core/Src/robot/robot.cpp **** 		}
  52:Core/Src/robot/robot.cpp **** 		// printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[
  53:Core/Src/robot/robot.cpp **** 		//        (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (i
  54:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET))
  55:Core/Src/robot/robot.cpp **** 		{
  56:Core/Src/robot/robot.cpp **** 
  57:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  59:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  60:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  61:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  62:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  63:Core/Src/robot/robot.cpp **** 			
  64:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  65:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
  66:Core/Src/robot/robot.cpp **** 			{
  67:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
  68:Core/Src/robot/robot.cpp **** 					zone_select();
  69:Core/Src/robot/robot.cpp **** 				}
  70:Core/Src/robot/robot.cpp **** 			}
  71:Core/Src/robot/robot.cpp **** 		}
  72:Core/Src/robot/robot.cpp **** 		else{
  73:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  74:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  75:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
  76:Core/Src/robot/robot.cpp **** 		}
  77:Core/Src/robot/robot.cpp **** 		// if((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  78:Core/Src/robot/robot.cpp **** 		// (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  79:Core/Src/robot/robot.cpp **** 		// (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  80:Core/Src/robot/robot.cpp **** 		// (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  81:Core/Src/robot/robot.cpp **** 		// {
  82:Core/Src/robot/robot.cpp **** 		// 	ROBOT_START_FLAG = true;
  83:Core/Src/robot/robot.cpp **** 		// 	INITIAL_ANGLE_FLAG = false;
  84:Core/Src/robot/robot.cpp **** 		// 	if(getup_n_run() == true){
  85:Core/Src/robot/robot.cpp **** 		// 		zone_select();
  86:Core/Src/robot/robot.cpp **** 		// 	}
  87:Core/Src/robot/robot.cpp **** 		// }
  88:Core/Src/robot/robot.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 3


  89:Core/Src/robot/robot.cpp **** 	break;
  90:Core/Src/robot/robot.cpp **** 
  91:Core/Src/robot/robot.cpp **** 	case MARCH:
  92:Core/Src/robot/robot.cpp **** 	{
  93:Core/Src/robot/robot.cpp **** 		/*
  94:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
  95:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
  96:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
  97:Core/Src/robot/robot.cpp **** 		*/
  98:Core/Src/robot/robot.cpp **** 		// printf("March");
  99:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 100:Core/Src/robot/robot.cpp **** 		{
 101:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 102:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 103:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 104:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 105:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 106:Core/Src/robot/robot.cpp **** 		}
 107:Core/Src/robot/robot.cpp **** 	}
 108:Core/Src/robot/robot.cpp **** 	break;
 109:Core/Src/robot/robot.cpp **** 
 110:Core/Src/robot/robot.cpp **** 	case TURN_45:
 111:Core/Src/robot/robot.cpp **** 	{
 112:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 113:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 114:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 115:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 116:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 117:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 118:Core/Src/robot/robot.cpp **** 		*/
 119:Core/Src/robot/robot.cpp **** 		printf("Turn 45");
 120:Core/Src/robot/robot.cpp **** 
 121:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 122:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 123:Core/Src/robot/robot.cpp **** 		{
 124:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 125:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 126:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 127:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 128:Core/Src/robot/robot.cpp **** 
 129:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 130:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 131:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 132:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 133:Core/Src/robot/robot.cpp **** 		}
 134:Core/Src/robot/robot.cpp **** 		//*/
 135:Core/Src/robot/robot.cpp **** 	}
 136:Core/Src/robot/robot.cpp **** 	break;
 137:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 138:Core/Src/robot/robot.cpp **** 	{
 139:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 140:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 141:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 142:Core/Src/robot/robot.cpp **** 			*/
 143:Core/Src/robot/robot.cpp **** 		printf("Sand dune");
 144:Core/Src/robot/robot.cpp **** 
 145:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 4


 146:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 147:Core/Src/robot/robot.cpp **** 		{
 148:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 149:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 150:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 151:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 152:Core/Src/robot/robot.cpp **** 
 153:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 154:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 155:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 156:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 157:Core/Src/robot/robot.cpp **** 		}
 158:Core/Src/robot/robot.cpp **** 		//*/
 159:Core/Src/robot/robot.cpp **** 	}
 160:Core/Src/robot/robot.cpp **** 	break;
 161:Core/Src/robot/robot.cpp **** 	case STATE_D:
 162:Core/Src/robot/robot.cpp **** 	{
 163:Core/Src/robot/robot.cpp **** 		/*
 164:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 165:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 166:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 167:Core/Src/robot/robot.cpp **** 		printf("State D");
 168:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 169:Core/Src/robot/robot.cpp **** 		{
 170:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 171:Core/Src/robot/robot.cpp **** 
 172:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 173:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 174:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 175:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 176:Core/Src/robot/robot.cpp **** 		}
 177:Core/Src/robot/robot.cpp **** 	}
 178:Core/Src/robot/robot.cpp **** 	break;
 179:Core/Src/robot/robot.cpp **** 
 180:Core/Src/robot/robot.cpp **** 	case TURN_90:
 181:Core/Src/robot/robot.cpp **** 	{
 182:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 183:Core/Src/robot/robot.cpp **** 			no of steps = 
 184:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 185:Core/Src/robot/robot.cpp **** 			*/
 186:Core/Src/robot/robot.cpp **** 		printf("Turn 90");
 187:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 188:Core/Src/robot/robot.cpp **** 		{
 189:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 190:Core/Src/robot/robot.cpp **** 
 191:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 192:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 193:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 194:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 195:Core/Src/robot/robot.cpp **** 		}
 196:Core/Src/robot/robot.cpp **** 	}
 197:Core/Src/robot/robot.cpp **** 	break;
 198:Core/Src/robot/robot.cpp **** 
 199:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 200:Core/Src/robot/robot.cpp **** 	{
 201:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 202:Core/Src/robot/robot.cpp **** 			robot stops 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 5


 203:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 204:Core/Src/robot/robot.cpp **** 			*/
 205:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 206:Core/Src/robot/robot.cpp **** 		printf("tussock");
 207:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG){
 208:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 209:Core/Src/robot/robot.cpp **** 			{
 210:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 211:Core/Src/robot/robot.cpp **** 			}
 212:Core/Src/robot/robot.cpp **** 		}
 213:Core/Src/robot/robot.cpp **** 		else{
 214:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 215:Core/Src/robot/robot.cpp **** 			{
 216:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 217:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 218:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 219:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 220:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 221:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 222:Core/Src/robot/robot.cpp **** 			}
 223:Core/Src/robot/robot.cpp **** 		}
 224:Core/Src/robot/robot.cpp **** 	}
 225:Core/Src/robot/robot.cpp **** 	break;
 226:Core/Src/robot/robot.cpp **** 
 227:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 228:Core/Src/robot/robot.cpp **** 	{
 229:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 230:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 231:Core/Src/robot/robot.cpp **** 			*/
 232:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 233:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 234:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 235:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 236:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 237:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 238:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 239:Core/Src/robot/robot.cpp **** 		{
 240:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 241:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 242:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 243:Core/Src/robot/robot.cpp **** 			
 244:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 245:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 246:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 247:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 248:Core/Src/robot/robot.cpp **** 		}
 249:Core/Src/robot/robot.cpp **** 	}
 250:Core/Src/robot/robot.cpp **** 	break;
 251:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 252:Core/Src/robot/robot.cpp **** 	{
 253:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 254:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 255:Core/Src/robot/robot.cpp **** 			*/
 256:Core/Src/robot/robot.cpp **** 		
 257:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 258:Core/Src/robot/robot.cpp **** 		printf("MOUNTAIN");
 259:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG_2){
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 261:Core/Src/robot/robot.cpp **** 			{
 262:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 263:Core/Src/robot/robot.cpp **** 			}
 264:Core/Src/robot/robot.cpp **** 		}
 265:Core/Src/robot/robot.cpp **** 		else{
 266:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 267:Core/Src/robot/robot.cpp **** 			{
 268:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 269:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 270:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 271:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 272:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 273:Core/Src/robot/robot.cpp **** 			}
 274:Core/Src/robot/robot.cpp **** 		}
 275:Core/Src/robot/robot.cpp **** 	}
 276:Core/Src/robot/robot.cpp **** 
 277:Core/Src/robot/robot.cpp **** 	break;
 278:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 279:Core/Src/robot/robot.cpp **** 	{
 280:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 281:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 282:Core/Src/robot/robot.cpp **** 			*/
 283:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 284:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 285:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 286:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 287:Core/Src/robot/robot.cpp **** 		
 288:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 289:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 290:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 291:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 292:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 293:Core/Src/robot/robot.cpp **** 	}
 294:Core/Src/robot/robot.cpp **** 	break;
 295:Core/Src/robot/robot.cpp **** 	case TUNE:
 296:Core/Src/robot/robot.cpp **** 	{
 297:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 298:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 299:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 300:Core/Src/robot/robot.cpp **** 	}
 301:Core/Src/robot/robot.cpp **** 	}
 302:Core/Src/robot/robot.cpp **** }
 303:Core/Src/robot/robot.cpp **** 
 304:Core/Src/robot/robot.cpp **** bool play()
 305:Core/Src/robot/robot.cpp **** {
 306:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 307:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 308:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 309:Core/Src/robot/robot.cpp **** 	return true;
 310:Core/Src/robot/robot.cpp **** }
 311:Core/Src/robot/robot.cpp **** 
 312:Core/Src/robot/robot.cpp **** void zone_select(void)
 313:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 313 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 7


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LBB85:
 314:Core/Src/robot/robot.cpp **** 
 315:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 315 0
  39 0002 4FF48041 		mov	r1, #16384
  40 0006 6A48     		ldr	r0, .L19
  41 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000c 08BB     		cbnz	r0, .L2
 316:Core/Src/robot/robot.cpp **** 	{
 317:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 317 0
  45 000e 0123     		movs	r3, #1
  46 0010 684A     		ldr	r2, .L19+4
  47 0012 1370     		strb	r3, [r2]
 318:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 318 0
  49 0014 684A     		ldr	r2, .L19+8
  50 0016 1370     		strb	r3, [r2]
 319:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 319 0
  52 0018 6848     		ldr	r0, .L19+12
  53 001a FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE85:
  57              	.LBB105:
 320:Core/Src/robot/robot.cpp **** 	}
 321:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 322:Core/Src/robot/robot.cpp **** 	{
 323:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
 324:Core/Src/robot/robot.cpp **** 		robo_state = SAND_DUNE;
 325:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1]-1;
 326:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1]-1;
 327:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 328:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 329:Core/Src/robot/robot.cpp **** 		{
 330:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 331:Core/Src/robot/robot.cpp **** 		}
 332:Core/Src/robot/robot.cpp **** 		initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + angle
 333:Core/Src/robot/robot.cpp **** 	}
 334:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 335:Core/Src/robot/robot.cpp **** 	{
 336:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 337:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 338:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 339:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 340:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 341:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 342:Core/Src/robot/robot.cpp **** 		{
 343:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 8


 344:Core/Src/robot/robot.cpp **** 		}
 345:Core/Src/robot/robot.cpp **** 		initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + angle
 346:Core/Src/robot/robot.cpp **** 	}
 347:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 348:Core/Src/robot/robot.cpp **** 	{
 349:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 350:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 351:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 352:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 353:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 354:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 355:Core/Src/robot/robot.cpp **** 		{
 356:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 357:Core/Src/robot/robot.cpp **** 		}
 358:Core/Src/robot/robot.cpp **** 	}
 359:Core/Src/robot/robot.cpp **** 	else
 360:Core/Src/robot/robot.cpp **** 	{
 361:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 362:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 363:Core/Src/robot/robot.cpp **** 	}
 364:Core/Src/robot/robot.cpp **** 
 365:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 365 0
  59 001e 4FF48061 		mov	r1, #1024
  60 0022 6348     		ldr	r0, .L19
  61 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0028 0028     		cmp	r0, #0
  64 002a 40F0A780 		bne	.L12
  65              	.LBB106:
 366:Core/Src/robot/robot.cpp **** 	{
 367:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 367 0
  67 002e 6448     		ldr	r0, .L19+16
  68 0030 FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB107:
 368:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 368 0
  72 0034 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L14:
  75              		.loc 1 368 0 is_stmt 0 discriminator 3
  76 0036 062A     		cmp	r2, #6
  77 0038 00F3B980 		bgt	.L1
 369:Core/Src/robot/robot.cpp **** 		{
 370:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 370 0 is_stmt 1 discriminator 2
  79 003c 614B     		ldr	r3, .L19+20
  80 003e 03EB8203 		add	r3, r3, r2, lsl #2
  81 0042 D3ED007A 		vldr.32	s15, [r3]
  82 0046 F1EE677A 		vneg.f32	s15, s15
  83 004a C3ED007A 		vstr.32	s15, [r3]
 368:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  84              		.loc 1 368 0 discriminator 2
  85 004e 0132     		adds	r2, r2, #1
  86              	.LVL5:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 9


  87 0050 F1E7     		b	.L14
  88              	.LVL6:
  89              	.L2:
  90              	.LBE107:
  91              	.LBE106:
  92              	.LBE105:
  93              	.LBB111:
  94              	.LBB86:
 321:Core/Src/robot/robot.cpp **** 	{
  95              		.loc 1 321 0
  96 0052 1021     		movs	r1, #16
  97 0054 5C48     		ldr	r0, .L19+24
  98 0056 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  99              	.LVL7:
 100 005a 78BB     		cbnz	r0, .L4
 101              	.LBB87:
 323:Core/Src/robot/robot.cpp **** 		robo_state = SAND_DUNE;
 102              		.loc 1 323 0
 103 005c 5B48     		ldr	r0, .L19+28
 104 005e FFF7FEFF 		bl	printf
 105              	.LVL8:
 324:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1]-1;
 106              		.loc 1 324 0
 107 0062 544B     		ldr	r3, .L19+4
 108 0064 0322     		movs	r2, #3
 109 0066 1A70     		strb	r2, [r3]
 325:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1]-1;
 110              		.loc 1 325 0
 111 0068 594B     		ldr	r3, .L19+32
 112 006a D3ED017A 		vldr.32	s15, [r3, #4]
 113 006e B7EE007A 		vmov.f32	s14, #1.0e+0
 114 0072 77EEC77A 		vsub.f32	s15, s15, s14
 115 0076 FDEEE77A 		vcvt.s32.f32	s15, s15
 116 007a 564A     		ldr	r2, .L19+36
 117 007c C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 326:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 118              		.loc 1 326 0
 119 0080 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 327:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 120              		.loc 1 327 0
 121 0084 4F4B     		ldr	r3, .L19+20
 122 0086 93ED017A 		vldr.32	s14, [r3, #4]
 123              	.LVL9:
 124              	.LBB88:
 328:Core/Src/robot/robot.cpp **** 		{
 125              		.loc 1 328 0
 126 008a 0022     		movs	r2, #0
 127              	.LVL10:
 128              	.L6:
 328:Core/Src/robot/robot.cpp **** 		{
 129              		.loc 1 328 0 is_stmt 0 discriminator 3
 130 008c 062A     		cmp	r2, #6
 131 008e 0ADC     		bgt	.L5
 330:Core/Src/robot/robot.cpp **** 		}
 132              		.loc 1 330 0 is_stmt 1 discriminator 2
 133 0090 4C4B     		ldr	r3, .L19+20
 134 0092 03EB8203 		add	r3, r3, r2, lsl #2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 10


 135 0096 D3ED007A 		vldr.32	s15, [r3]
 136 009a 77EEC77A 		vsub.f32	s15, s15, s14
 137 009e C3ED007A 		vstr.32	s15, [r3]
 328:Core/Src/robot/robot.cpp **** 		{
 138              		.loc 1 328 0 discriminator 2
 139 00a2 0132     		adds	r2, r2, #1
 140              	.LVL11:
 141 00a4 F2E7     		b	.L6
 142              	.L5:
 143              	.LVL12:
 144              	.LBE88:
 145              	.LBB89:
 146              	.LBB90:
 147              		.file 2 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
 148              		.loc 2 36 0
 149 00a6 4C4B     		ldr	r3, .L19+40
 150 00a8 93ED027A 		vldr.32	s14, [r3, #8]
 151              	.LVL13:
 152              	.LBE90:
 153              	.LBE89:
 332:Core/Src/robot/robot.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 11


 154              		.loc 1 332 0
 155 00ac 454A     		ldr	r2, .L19+20
 156              	.LVL14:
 157 00ae D2ED017A 		vldr.32	s15, [r2, #4]
 158 00b2 77EE877A 		vadd.f32	s15, s15, s14
 159              	.LVL15:
 160              	.LBB91:
 161              	.LBB92:
 162              	.LBB93:
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 163              		.loc 2 39 0
 164 00b6 C3ED027A 		vstr.32	s15, [r3, #8]
 165              	.LVL16:
 166 00ba B0E7     		b	.L3
 167              	.LVL17:
 168              	.L4:
 169              	.LBE93:
 170              	.LBE92:
 171              	.LBE91:
 172              	.LBE87:
 173              	.LBB94:
 334:Core/Src/robot/robot.cpp **** 	{
 174              		.loc 1 334 0
 175 00bc 4FF48051 		mov	r1, #4096
 176 00c0 3B48     		ldr	r0, .L19
 177 00c2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 178              	.LVL18:
 179 00c6 58BB     		cbnz	r0, .L7
 180              	.LBB95:
 336:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 181              		.loc 1 336 0
 182 00c8 4448     		ldr	r0, .L19+44
 183 00ca FFF7FEFF 		bl	printf
 184              	.LVL19:
 337:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 185              		.loc 1 337 0
 186 00ce 394B     		ldr	r3, .L19+4
 187 00d0 0422     		movs	r2, #4
 188 00d2 1A70     		strb	r2, [r3]
 338:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 189              		.loc 1 338 0
 190 00d4 3E4B     		ldr	r3, .L19+32
 191 00d6 D3ED027A 		vldr.32	s15, [r3, #8]
 192 00da FDEEE77A 		vcvt.s32.f32	s15, s15
 193 00de 3D4A     		ldr	r2, .L19+36
 194 00e0 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 339:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 195              		.loc 1 339 0
 196 00e4 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 340:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 197              		.loc 1 340 0
 198 00e8 364B     		ldr	r3, .L19+20
 199 00ea 93ED027A 		vldr.32	s14, [r3, #8]
 200              	.LVL20:
 201              	.LBB96:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 12


 341:Core/Src/robot/robot.cpp **** 		{
 202              		.loc 1 341 0
 203 00ee 0022     		movs	r2, #0
 204              	.LVL21:
 205              	.L9:
 341:Core/Src/robot/robot.cpp **** 		{
 206              		.loc 1 341 0 is_stmt 0 discriminator 3
 207 00f0 062A     		cmp	r2, #6
 208 00f2 0ADC     		bgt	.L8
 343:Core/Src/robot/robot.cpp **** 		}
 209              		.loc 1 343 0 is_stmt 1 discriminator 2
 210 00f4 334B     		ldr	r3, .L19+20
 211 00f6 03EB8203 		add	r3, r3, r2, lsl #2
 212 00fa D3ED007A 		vldr.32	s15, [r3]
 213 00fe 77EEC77A 		vsub.f32	s15, s15, s14
 214 0102 C3ED007A 		vstr.32	s15, [r3]
 341:Core/Src/robot/robot.cpp **** 		{
 215              		.loc 1 341 0 discriminator 2
 216 0106 0132     		adds	r2, r2, #1
 217              	.LVL22:
 218 0108 F2E7     		b	.L9
 219              	.L8:
 220              	.LVL23:
 221              	.LBE96:
 222              	.LBB97:
 223              	.LBB98:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 224              		.loc 2 36 0
 225 010a 334B     		ldr	r3, .L19+40
 226 010c 93ED027A 		vldr.32	s14, [r3, #8]
 227              	.LVL24:
 228              	.LBE98:
 229              	.LBE97:
 345:Core/Src/robot/robot.cpp **** 	}
 230              		.loc 1 345 0
 231 0110 2C4A     		ldr	r2, .L19+20
 232              	.LVL25:
 233 0112 D2ED027A 		vldr.32	s15, [r2, #8]
 234 0116 77EE877A 		vadd.f32	s15, s15, s14
 235              	.LVL26:
 236              	.LBB99:
 237              	.LBB100:
 238              	.LBB101:
 239              		.loc 2 39 0
 240 011a C3ED027A 		vstr.32	s15, [r3, #8]
 241              	.LVL27:
 242 011e 7EE7     		b	.L3
 243              	.LVL28:
 244              	.L7:
 245              	.LBE101:
 246              	.LBE100:
 247              	.LBE99:
 248              	.LBE95:
 249              	.LBB102:
 347:Core/Src/robot/robot.cpp **** 	{
 250              		.loc 1 347 0
 251 0120 0221     		movs	r1, #2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 13


 252 0122 2F48     		ldr	r0, .L19+48
 253 0124 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 254              	.LVL29:
 255 0128 08BB     		cbnz	r0, .L10
 256              	.LBB103:
 349:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 257              		.loc 1 349 0
 258 012a 2E48     		ldr	r0, .L19+52
 259 012c FFF7FEFF 		bl	printf
 260              	.LVL30:
 350:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 261              		.loc 1 350 0
 262 0130 204B     		ldr	r3, .L19+4
 263 0132 0722     		movs	r2, #7
 264 0134 1A70     		strb	r2, [r3]
 351:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 265              		.loc 1 351 0
 266 0136 264B     		ldr	r3, .L19+32
 267 0138 D3ED057A 		vldr.32	s15, [r3, #20]
 268 013c FDEEE77A 		vcvt.s32.f32	s15, s15
 269 0140 244A     		ldr	r2, .L19+36
 270 0142 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 352:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 271              		.loc 1 352 0
 272 0146 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 353:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 273              		.loc 1 353 0
 274 014a 1E4B     		ldr	r3, .L19+20
 275 014c 93ED057A 		vldr.32	s14, [r3, #20]
 276              	.LVL31:
 277              	.LBB104:
 354:Core/Src/robot/robot.cpp **** 		{
 278              		.loc 1 354 0
 279 0150 0022     		movs	r2, #0
 280              	.LVL32:
 281              	.L11:
 354:Core/Src/robot/robot.cpp **** 		{
 282              		.loc 1 354 0 is_stmt 0 discriminator 3
 283 0152 062A     		cmp	r2, #6
 284 0154 3FF763AF 		bgt	.L3
 356:Core/Src/robot/robot.cpp **** 		}
 285              		.loc 1 356 0 is_stmt 1 discriminator 2
 286 0158 1A4B     		ldr	r3, .L19+20
 287 015a 03EB8203 		add	r3, r3, r2, lsl #2
 288 015e D3ED007A 		vldr.32	s15, [r3]
 289 0162 77EEC77A 		vsub.f32	s15, s15, s14
 290 0166 C3ED007A 		vstr.32	s15, [r3]
 354:Core/Src/robot/robot.cpp **** 		{
 291              		.loc 1 354 0 discriminator 2
 292 016a 0132     		adds	r2, r2, #1
 293              	.LVL33:
 294 016c F1E7     		b	.L11
 295              	.LVL34:
 296              	.L10:
 297              	.LBE104:
 298              	.LBE103:
 361:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 14


 299              		.loc 1 361 0
 300 016e 1E48     		ldr	r0, .L19+56
 301 0170 FFF7FEFF 		bl	printf
 302              	.LVL35:
 362:Core/Src/robot/robot.cpp **** 	}
 303              		.loc 1 362 0
 304 0174 0F4B     		ldr	r3, .L19+4
 305 0176 0122     		movs	r2, #1
 306 0178 1A70     		strb	r2, [r3]
 307 017a 50E7     		b	.L3
 308              	.L12:
 309              	.LBE102:
 310              	.LBE94:
 311              	.LBE86:
 312              	.LBE111:
 313              	.LBB112:
 314              	.LBB108:
 371:Core/Src/robot/robot.cpp **** 		}
 372:Core/Src/robot/robot.cpp **** 	}
 373:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
 315              		.loc 1 373 0
 316 017c 1021     		movs	r1, #16
 317 017e 1B48     		ldr	r0, .L19+60
 318 0180 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 319              	.LVL36:
 320 0184 80B1     		cbz	r0, .L18
 321              	.LBB109:
 374:Core/Src/robot/robot.cpp **** 	{
 375:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");
 376:Core/Src/robot/robot.cpp **** 	}
 377:Core/Src/robot/robot.cpp **** 	else{
 378:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 322              		.loc 1 378 0
 323 0186 1A48     		ldr	r0, .L19+64
 324 0188 FFF7FEFF 		bl	printf
 325              	.LVL37:
 326              	.LBB110:
 379:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 327              		.loc 1 379 0
 328 018c 0022     		movs	r2, #0
 329              	.LVL38:
 330              	.L16:
 331              		.loc 1 379 0 is_stmt 0 discriminator 3
 332 018e 062A     		cmp	r2, #6
 333 0190 0DDC     		bgt	.L1
 380:Core/Src/robot/robot.cpp **** 		{
 381:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 334              		.loc 1 381 0 is_stmt 1 discriminator 2
 335 0192 0C4B     		ldr	r3, .L19+20
 336 0194 03EB8203 		add	r3, r3, r2, lsl #2
 337 0198 D3ED007A 		vldr.32	s15, [r3]
 338 019c F1EE677A 		vneg.f32	s15, s15
 339 01a0 C3ED007A 		vstr.32	s15, [r3]
 379:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 340              		.loc 1 379 0 discriminator 2
 341 01a4 0132     		adds	r2, r2, #1
 342              	.LVL39:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 15


 343 01a6 F2E7     		b	.L16
 344              	.LVL40:
 345              	.L18:
 346              	.LBE110:
 347              	.LBE109:
 375:Core/Src/robot/robot.cpp **** 	}
 348              		.loc 1 375 0
 349 01a8 1248     		ldr	r0, .L19+68
 350 01aa FFF7FEFF 		bl	printf
 351              	.LVL41:
 352              	.L1:
 353              	.LBE108:
 354              	.LBE112:
 382:Core/Src/robot/robot.cpp **** 		}
 383:Core/Src/robot/robot.cpp **** 	}
 384:Core/Src/robot/robot.cpp **** }...
 355              		.loc 1 384 0
 356 01ae 08BD     		pop	{r3, pc}
 357              	.L20:
 358              		.align	2
 359              	.L19:
 360 01b0 00080240 		.word	1073874944
 361 01b4 00000000 		.word	.LANCHOR0
 362 01b8 00000000 		.word	.LANCHOR1
 363 01bc 00000000 		.word	.LC0
 364 01c0 54000000 		.word	.LC5
 365 01c4 00000000 		.word	.LANCHOR3
 366 01c8 00000240 		.word	1073872896
 367 01cc 10000000 		.word	.LC1
 368 01d0 00000000 		.word	.LANCHOR2
 369 01d4 00000000 		.word	leg
 370 01d8 00000000 		.word	initial_angle
 371 01dc 1C000000 		.word	.LC2
 372 01e0 000C0240 		.word	1073875968
 373 01e4 30000000 		.word	.LC3
 374 01e8 44000000 		.word	.LC4
 375 01ec 00100240 		.word	1073876992
 376 01f0 70000000 		.word	.LC7
 377 01f4 60000000 		.word	.LC6
 378              		.cfi_endproc
 379              	.LFE505:
 381              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 382              		.align	1
 383              		.weak	_Z12swap_ElementIfEvRT_S1_
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	_Z12swap_ElementIfEvRT_S1_:
 390              	.LFB521:
  16:Core/Inc/utils/vec3.h **** {
 391              		.loc 2 16 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396              	.LVL42:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 16


  18:Core/Inc/utils/vec3.h ****         first = second;
 397              		.loc 2 18 0
 398 0000 0368     		ldr	r3, [r0]	@ float
 399              	.LVL43:
  19:Core/Inc/utils/vec3.h ****         second = temp;
 400              		.loc 2 19 0
 401 0002 0A68     		ldr	r2, [r1]	@ float
 402 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h **** }
 403              		.loc 2 20 0
 404 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** 
 405              		.loc 2 21 0
 406 0008 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE521:
 410              		.global	__aeabi_f2d
 411              		.global	__aeabi_ddiv
 412              		.global	__aeabi_d2f
 413              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 414              		.align	1
 415              		.global	_Z11start_RobotP12Robot_States
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	_Z11start_RobotP12Robot_States:
 422              	.LFB503:
  24:Core/Src/robot/robot.cpp **** {
 423              		.loc 1 24 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 16
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL44:
 428 0000 30B5     		push	{r4, r5, lr}
 429              	.LCFI1:
 430              		.cfi_def_cfa_offset 12
 431              		.cfi_offset 4, -12
 432              		.cfi_offset 5, -8
 433              		.cfi_offset 14, -4
 434 0002 2DED028B 		vpush.64	{d8}
 435              	.LCFI2:
 436              		.cfi_def_cfa_offset 20
 437              		.cfi_offset 80, -20
 438              		.cfi_offset 81, -16
 439 0006 85B0     		sub	sp, sp, #20
 440              	.LCFI3:
 441              		.cfi_def_cfa_offset 40
 442 0008 0446     		mov	r4, r0
 443              	.LBB138:
  25:Core/Src/robot/robot.cpp **** 	switch (*state_)
 444              		.loc 1 25 0
 445 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 446 000c 0A2B     		cmp	r3, #10
 447 000e 00F2C782 		bhi	.L22
 448 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
 449              	.L25:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 17


 450 0016 0B00     		.2byte	(.L24-.L25)/2
 451 0018 9C00     		.2byte	(.L26-.L25)/2
 452 001a C300     		.2byte	(.L27-.L25)/2
 453 001c 0201     		.2byte	(.L28-.L25)/2
 454 001e 5201     		.2byte	(.L29-.L25)/2
 455 0020 7C01     		.2byte	(.L30-.L25)/2
 456 0022 C901     		.2byte	(.L31-.L25)/2
 457 0024 0202     		.2byte	(.L32-.L25)/2
 458 0026 6102     		.2byte	(.L33-.L25)/2
 459 0028 9502     		.2byte	(.L34-.L25)/2
 460 002a C902     		.2byte	(.L35-.L25)/2
 461              		.p2align 1
 462              	.L24:
 463              	.LBB139:
 464              	.LBB140:
  42:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 465              		.loc 1 42 0
 466 002c CD4B     		ldr	r3, .L53
 467 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468 0030 1BB9     		cbnz	r3, .L36
  42:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 469              		.loc 1 42 0 is_stmt 0 discriminator 1
 470 0032 CD4A     		ldr	r2, .L53+4
 471 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 472 0036 002A     		cmp	r2, #0
 473 0038 41D1     		bne	.L49
 474              	.L36:
  47:Core/Src/robot/robot.cpp **** 		else if(ROBOT_START_FLAG)
 475              		.loc 1 47 0 is_stmt 1
 476 003a 002B     		cmp	r3, #0
 477 003c 5DD1     		bne	.L50
 478              	.LVL45:
 479              	.L37:
 480              	.LBB141:
  54:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET))
 481              		.loc 1 54 0
 482 003e 4FF40071 		mov	r1, #512
 483 0042 CA48     		ldr	r0, .L53+8
 484 0044 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 485              	.LVL46:
 486 0048 0028     		cmp	r0, #0
 487 004a 6CD1     		bne	.L38
 488              	.LBB142:
  57:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 489              		.loc 1 57 0
 490 004c C74C     		ldr	r4, .L53+8
 491 004e 0022     		movs	r2, #0
 492 0050 4FF48051 		mov	r1, #4096
 493 0054 2046     		mov	r0, r4
 494 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 495              	.LVL47:
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 496              		.loc 1 58 0
 497 005a 0022     		movs	r2, #0
 498 005c 4FF40051 		mov	r1, #8192
 499 0060 2046     		mov	r0, r4
 500 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 18


 501              	.LVL48:
  59:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 502              		.loc 1 59 0
 503 0066 0022     		movs	r2, #0
 504 0068 4FF48041 		mov	r1, #16384
 505 006c 2046     		mov	r0, r4
 506 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 507              	.LVL49:
  60:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 508              		.loc 1 60 0
 509 0072 0022     		movs	r2, #0
 510 0074 4FF40041 		mov	r1, #32768
 511 0078 2046     		mov	r0, r4
 512 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 513              	.LVL50:
  61:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 514              		.loc 1 61 0
 515 007e 0022     		movs	r2, #0
 516 0080 0421     		movs	r1, #4
 517 0082 BB48     		ldr	r0, .L53+12
 518 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 519              	.LVL51:
  62:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 520              		.loc 1 62 0
 521 0088 B64B     		ldr	r3, .L53
 522 008a 0022     		movs	r2, #0
 523 008c 1A70     		strb	r2, [r3]
  64:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 524              		.loc 1 64 0
 525 008e B94B     		ldr	r3, .L53+16
 526 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 0092 BFF35B8F 		dmb	ish
 528 0096 13F0010F 		tst	r3, #1
 529 009a 37D0     		beq	.L51
 530              	.L39:
  65:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 531              		.loc 1 65 0
 532 009c FFF7FEFF 		bl	HAL_GetTick
 533              	.LVL52:
 534 00a0 B54B     		ldr	r3, .L53+20
 535 00a2 1B68     		ldr	r3, [r3]
 536 00a4 C01A     		subs	r0, r0, r3
 537 00a6 B0F5FA7F 		cmp	r0, #500
 538 00aa C0F07982 		bcc	.L22
  67:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
 539              		.loc 1 67 0
 540 00ae FFF7FEFF 		bl	_Z11getup_n_runv
 541              	.LVL53:
 542 00b2 0028     		cmp	r0, #0
 543 00b4 00F07482 		beq	.L22
  68:Core/Src/robot/robot.cpp **** 					zone_select();
 544              		.loc 1 68 0
 545 00b8 FFF7FEFF 		bl	_Z11zone_selectv
 546              	.LVL54:
 547 00bc 70E2     		b	.L22
 548              	.LVL55:
 549              	.L49:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 19


 550              	.LBE142:
 551              	.LBE141:
 552              	.LBB144:
 553              	.LBB145:
 554              	.LBB146:
 555              	.LBB147:
 556              	.LBB148:
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 20


  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 557              		.loc 2 129 0
 558 00be AF4B     		ldr	r3, .L53+24
 559 00c0 1A68     		ldr	r2, [r3]	@ float
 560 00c2 0192     		str	r2, [sp, #4]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 561              		.loc 2 130 0
 562 00c4 5A68     		ldr	r2, [r3, #4]	@ float
 563 00c6 0292     		str	r2, [sp, #8]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 564              		.loc 2 131 0
 565 00c8 9B68     		ldr	r3, [r3, #8]	@ float
 566 00ca 0393     		str	r3, [sp, #12]	@ float
 567              	.LVL56:
 568              	.LBE148:
 569              	.LBE147:
 570              	.LBE146:
 571              	.LBB149:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 21


 572              	.LBB150:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 573              		.loc 2 175 0
 574 00cc AC4C     		ldr	r4, .L53+28
 575 00ce 01A9     		add	r1, sp, #4
 576              	.LVL57:
 577 00d0 2046     		mov	r0, r4
 578              	.LVL58:
 579 00d2 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 580              	.LVL59:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 581              		.loc 2 176 0
 582 00d6 02A9     		add	r1, sp, #8
 583 00d8 201D     		adds	r0, r4, #4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 22


 584 00da FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 585              	.LVL60:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 586              		.loc 2 177 0
 587 00de 03A9     		add	r1, sp, #12
 588 00e0 04F10800 		add	r0, r4, #8
 589 00e4 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 590              	.LVL61:
 591              	.LBE150:
 592              	.LBE149:
 593              	.LBE145:
 594              	.LBE144:
 595              	.LBB151:
 596              	.LBB152:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 597              		.loc 2 36 0
 598 00e8 D4ED027A 		vldr.32	s15, [r4, #8]
 599              	.LVL62:
 600              	.LBE152:
 601              	.LBE151:
  45:Core/Src/robot/robot.cpp **** 			initial_angle.setZ(initial_angle.getZ()+2);
 602              		.loc 1 45 0
 603 00ec B0EE007A 		vmov.f32	s14, #2.0e+0
 604 00f0 77EE877A 		vadd.f32	s15, s15, s14
 605              	.LVL63:
 606              	.LBB153:
 607              	.LBB154:
  39:Core/Inc/utils/vec3.h **** 
 608              		.loc 2 39 0
 609 00f4 C4ED027A 		vstr.32	s15, [r4, #8]
 610 00f8 A1E7     		b	.L37
 611              	.LVL64:
 612              	.L50:
 613              	.LBE154:
 614              	.LBE153:
  49:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 615              		.loc 1 49 0
 616 00fa 9B4B     		ldr	r3, .L53+4
 617 00fc 0022     		movs	r2, #0
 618 00fe 1A70     		strb	r2, [r3]
  50:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 619              		.loc 1 50 0
 620 0100 0122     		movs	r2, #1
 621 0102 0421     		movs	r1, #4
 622 0104 9A48     		ldr	r0, .L53+12
 623              	.LVL65:
 624 0106 FFF7FEFF 		bl	HAL_GPIO_WritePin
 625              	.LVL66:
 626 010a 98E7     		b	.L37
 627              	.LVL67:
 628              	.L51:
 629              	.LBB155:
 630              	.LBB143:
  64:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 631              		.loc 1 64 0 discriminator 1
 632 010c 9948     		ldr	r0, .L53+16
 633 010e FFF7FEFF 		bl	__cxa_guard_acquire
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 23


 634              	.LVL68:
 635 0112 0028     		cmp	r0, #0
 636 0114 C2D0     		beq	.L39
  64:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 637              		.loc 1 64 0 is_stmt 0 discriminator 2
 638 0116 FFF7FEFF 		bl	HAL_GetTick
 639              	.LVL69:
 640 011a 974B     		ldr	r3, .L53+20
 641 011c 1860     		str	r0, [r3]
 642 011e 9548     		ldr	r0, .L53+16
 643 0120 FFF7FEFF 		bl	__cxa_guard_release
 644              	.LVL70:
 645 0124 BAE7     		b	.L39
 646              	.L38:
 647              	.LBE143:
  73:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 648              		.loc 1 73 0 is_stmt 1
 649 0126 9FED978A 		vldr.32	s16, .L53+32
 650 012a 974C     		ldr	r4, .L53+36
 651 012c B0EE480A 		vmov.f32	s0, s16
 652 0130 2046     		mov	r0, r4
 653 0132 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 654              	.LVL71:
  74:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 655              		.loc 1 74 0
 656 0136 B0EE480A 		vmov.f32	s0, s16
 657 013a 04F15800 		add	r0, r4, #88
 658 013e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 659              	.LVL72:
  75:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 660              		.loc 1 75 0
 661 0142 B0EE480A 		vmov.f32	s0, s16
 662 0146 9148     		ldr	r0, .L53+40
 663 0148 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 664              	.LVL73:
 665 014c 28E2     		b	.L22
 666              	.LVL74:
 667              	.L26:
 668              	.LBE155:
 669              	.LBE140:
  99:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 670              		.loc 1 99 0
 671 014e 904B     		ldr	r3, .L53+44
 672 0150 D3ED007A 		vldr.32	s15, [r3]
 673 0154 8F4B     		ldr	r3, .L53+48
 674 0156 93ED000A 		vldr.32	s0, [r3]
 675 015a FDEEE77A 		vcvt.s32.f32	s15, s15
 676 015e 17EE900A 		vmov	r0, s15	@ int
 677              	.LVL75:
 678 0162 FFF7FEFF 		bl	_Z2goif
 679              	.LVL76:
 680 0166 0028     		cmp	r0, #0
 681 0168 00F01A82 		beq	.L22
 101:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 682              		.loc 1 101 0
 683 016c 0223     		movs	r3, #2
 684 016e 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 24


 102:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 685              		.loc 1 102 0
 686 0170 7E4C     		ldr	r4, .L53+8
 687              	.LVL77:
 688 0172 4FF48051 		mov	r1, #4096
 689 0176 2046     		mov	r0, r4
 690 0178 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 691              	.LVL78:
 103:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 692              		.loc 1 103 0
 693 017c 4FF40051 		mov	r1, #8192
 694 0180 2046     		mov	r0, r4
 695 0182 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 696              	.LVL79:
 104:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 697              		.loc 1 104 0
 698 0186 4FF48041 		mov	r1, #16384
 699 018a 2046     		mov	r0, r4
 700 018c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 701              	.LVL80:
 105:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 702              		.loc 1 105 0
 703 0190 4FF40041 		mov	r1, #32768
 704 0194 2046     		mov	r0, r4
 705 0196 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 706              	.LVL81:
 707 019a 01E2     		b	.L22
 708              	.LVL82:
 709              	.L27:
 119:Core/Src/robot/robot.cpp **** 		printf("Turn 45");
 710              		.loc 1 119 0
 711 019c 7E48     		ldr	r0, .L53+52
 712              	.LVL83:
 713 019e FFF7FEFF 		bl	printf
 714              	.LVL84:
 121:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 715              		.loc 1 121 0
 716 01a2 7C4B     		ldr	r3, .L53+48
 717 01a4 93ED010A 		vldr.32	s0, [r3, #4]
 718 01a8 6320     		movs	r0, #99
 719 01aa FFF7FEFF 		bl	_Z2goif
 720              	.LVL85:
 122:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 721              		.loc 1 122 0
 722 01ae 4FF40061 		mov	r1, #2048
 723 01b2 6E48     		ldr	r0, .L53+8
 724 01b4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 725              	.LVL86:
 726 01b8 68B1     		cbz	r0, .L40
 727              	.LVL87:
 728              	.LBB156:
 729              	.LBB157:
 730              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 25


   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
 731              		.loc 3 45 0
 732 01ba 734B     		ldr	r3, .L53+36
 733 01bc D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 734              	.LVL88:
 735              	.LBE157:
 736              	.LBE156:
 122:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 737              		.loc 1 122 0
 738 01c0 F8EEE77A 		vcvt.f32.s32	s15, s15
 739 01c4 724B     		ldr	r3, .L53+44
 740 01c6 93ED017A 		vldr.32	s14, [r3, #4]
 741 01ca F4EEC77A 		vcmpe.f32	s15, s14
 742 01ce F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 743 01d2 40F3E581 		ble	.L22
 744              	.L40:
 125:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 26


 745              		.loc 1 125 0 discriminator 3
 746 01d6 0323     		movs	r3, #3
 747 01d8 2370     		strb	r3, [r4]
 126:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 748              		.loc 1 126 0 discriminator 3
 749 01da 6D4B     		ldr	r3, .L53+44
 750 01dc D3ED017A 		vldr.32	s15, [r3, #4]
 751 01e0 FDEEE77A 		vcvt.s32.f32	s15, s15
 752 01e4 684A     		ldr	r2, .L53+36
 753 01e6 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 127:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 754              		.loc 1 127 0 discriminator 3
 755 01ea C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 129:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 756              		.loc 1 129 0 discriminator 3
 757 01ee 5F4C     		ldr	r4, .L53+8
 758              	.LVL89:
 759 01f0 4FF48051 		mov	r1, #4096
 760 01f4 2046     		mov	r0, r4
 761 01f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 762              	.LVL90:
 130:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 763              		.loc 1 130 0 discriminator 3
 764 01fa 4FF40051 		mov	r1, #8192
 765 01fe 2046     		mov	r0, r4
 766 0200 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 767              	.LVL91:
 131:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 768              		.loc 1 131 0 discriminator 3
 769 0204 4FF48041 		mov	r1, #16384
 770 0208 2046     		mov	r0, r4
 771 020a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 772              	.LVL92:
 132:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 773              		.loc 1 132 0 discriminator 3
 774 020e 4FF40041 		mov	r1, #32768
 775 0212 2046     		mov	r0, r4
 776 0214 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 777              	.LVL93:
 778 0218 C2E1     		b	.L22
 779              	.LVL94:
 780              	.L28:
 143:Core/Src/robot/robot.cpp **** 		printf("Sand dune");
 781              		.loc 1 143 0
 782 021a 6048     		ldr	r0, .L53+56
 783              	.LVL95:
 784 021c FFF7FEFF 		bl	printf
 785              	.LVL96:
 145:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 786              		.loc 1 145 0
 787 0220 5C4B     		ldr	r3, .L53+48
 788 0222 93ED020A 		vldr.32	s0, [r3, #8]
 789 0226 6420     		movs	r0, #100
 790 0228 FFF7FEFF 		bl	_Z2goif
 791              	.LVL97:
 146:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 792              		.loc 1 146 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 27


 793 022c 4FF48071 		mov	r1, #256
 794 0230 4E48     		ldr	r0, .L53+8
 795 0232 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 796              	.LVL98:
 797 0236 80B9     		cbnz	r0, .L42
 798              	.LVL99:
 799              	.LBB158:
 800              	.LBB159:
 801              		.loc 3 45 0
 802 0238 534B     		ldr	r3, .L53+36
 803 023a 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 804              	.LVL100:
 805              	.LBE159:
 806              	.LBE158:
 146:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 807              		.loc 1 146 0
 808 023e B8EEC77A 		vcvt.f32.s32	s14, s14
 809 0242 534B     		ldr	r3, .L53+44
 810 0244 D3ED027A 		vldr.32	s15, [r3, #8]
 811 0248 F7EE006A 		vmov.f32	s13, #1.0e+0
 812 024c 77EEE67A 		vsub.f32	s15, s15, s13
 813 0250 B4EEE77A 		vcmpe.f32	s14, s15
 814 0254 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 815 0258 0DDC     		bgt	.L43
 816              	.L42:
 817              	.LVL101:
 818              	.LBB160:
 819              	.LBB161:
 820              		.loc 3 45 0 discriminator 4
 821 025a 4B4B     		ldr	r3, .L53+36
 822 025c D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 823              	.LVL102:
 824              	.LBE161:
 825              	.LBE160:
 146:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 826              		.loc 1 146 0 discriminator 4
 827 0260 F8EEE77A 		vcvt.f32.s32	s15, s15
 828 0264 4A4B     		ldr	r3, .L53+44
 829 0266 93ED027A 		vldr.32	s14, [r3, #8]
 830 026a F4EEC77A 		vcmpe.f32	s15, s14
 831 026e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 832 0272 40F39581 		ble	.L22
 833              	.L43:
 149:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 834              		.loc 1 149 0 discriminator 5
 835 0276 0423     		movs	r3, #4
 836 0278 2370     		strb	r3, [r4]
 150:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 837              		.loc 1 150 0 discriminator 5
 838 027a 454B     		ldr	r3, .L53+44
 839 027c D3ED027A 		vldr.32	s15, [r3, #8]
 840 0280 FDEEE77A 		vcvt.s32.f32	s15, s15
 841 0284 404A     		ldr	r2, .L53+36
 842 0286 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 151:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 843              		.loc 1 151 0 discriminator 5
 844 028a C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 28


 153:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 845              		.loc 1 153 0 discriminator 5
 846 028e 374C     		ldr	r4, .L53+8
 847              	.LVL103:
 848 0290 4FF48051 		mov	r1, #4096
 849 0294 2046     		mov	r0, r4
 850 0296 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 851              	.LVL104:
 154:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 852              		.loc 1 154 0 discriminator 5
 853 029a 4FF40051 		mov	r1, #8192
 854 029e 2046     		mov	r0, r4
 855 02a0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 856              	.LVL105:
 155:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 857              		.loc 1 155 0 discriminator 5
 858 02a4 4FF48041 		mov	r1, #16384
 859 02a8 2046     		mov	r0, r4
 860 02aa FFF7FEFF 		bl	HAL_GPIO_TogglePin
 861              	.LVL106:
 156:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 862              		.loc 1 156 0 discriminator 5
 863 02ae 4FF40041 		mov	r1, #32768
 864 02b2 2046     		mov	r0, r4
 865 02b4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 866              	.LVL107:
 867 02b8 72E1     		b	.L22
 868              	.LVL108:
 869              	.L29:
 167:Core/Src/robot/robot.cpp **** 		printf("State D");
 870              		.loc 1 167 0
 871 02ba 3948     		ldr	r0, .L53+60
 872              	.LVL109:
 873 02bc FFF7FEFF 		bl	printf
 874              	.LVL110:
 168:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 875              		.loc 1 168 0
 876 02c0 334B     		ldr	r3, .L53+44
 877 02c2 D3ED037A 		vldr.32	s15, [r3, #12]
 878 02c6 334B     		ldr	r3, .L53+48
 879 02c8 93ED030A 		vldr.32	s0, [r3, #12]
 880 02cc FDEEE77A 		vcvt.s32.f32	s15, s15
 881 02d0 17EE900A 		vmov	r0, s15	@ int
 882 02d4 FFF7FEFF 		bl	_Z2goif
 883              	.LVL111:
 884 02d8 0028     		cmp	r0, #0
 885 02da 00F06181 		beq	.L22
 170:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 886              		.loc 1 170 0
 887 02de 0523     		movs	r3, #5
 888 02e0 2370     		strb	r3, [r4]
 172:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 889              		.loc 1 172 0
 890 02e2 224C     		ldr	r4, .L53+8
 891              	.LVL112:
 892 02e4 4FF48051 		mov	r1, #4096
 893 02e8 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 29


 894 02ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 895              	.LVL113:
 173:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 896              		.loc 1 173 0
 897 02ee 4FF40051 		mov	r1, #8192
 898 02f2 2046     		mov	r0, r4
 899 02f4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 900              	.LVL114:
 174:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 901              		.loc 1 174 0
 902 02f8 4FF48041 		mov	r1, #16384
 903 02fc 2046     		mov	r0, r4
 904 02fe FFF7FEFF 		bl	HAL_GPIO_TogglePin
 905              	.LVL115:
 175:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 906              		.loc 1 175 0
 907 0302 4FF40041 		mov	r1, #32768
 908 0306 2046     		mov	r0, r4
 909 0308 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 910              	.LVL116:
 911 030c 48E1     		b	.L22
 912              	.LVL117:
 913              	.L30:
 186:Core/Src/robot/robot.cpp **** 		printf("Turn 90");
 914              		.loc 1 186 0
 915 030e 2548     		ldr	r0, .L53+64
 916              	.LVL118:
 917 0310 FFF7FEFF 		bl	printf
 918              	.LVL119:
 187:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 919              		.loc 1 187 0
 920 0314 1E4B     		ldr	r3, .L53+44
 921 0316 D3ED047A 		vldr.32	s15, [r3, #16]
 922 031a 1E4B     		ldr	r3, .L53+48
 923 031c 93ED040A 		vldr.32	s0, [r3, #16]
 924 0320 FDEEE77A 		vcvt.s32.f32	s15, s15
 925 0324 17EE900A 		vmov	r0, s15	@ int
 926 0328 FFF7FEFF 		bl	_Z2goif
 927              	.LVL120:
 928 032c 0028     		cmp	r0, #0
 929 032e 00F03781 		beq	.L22
 189:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 930              		.loc 1 189 0
 931 0332 0623     		movs	r3, #6
 932 0334 2370     		strb	r3, [r4]
 191:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 933              		.loc 1 191 0
 934 0336 0D4C     		ldr	r4, .L53+8
 935              	.LVL121:
 936 0338 4FF48051 		mov	r1, #4096
 937 033c 2046     		mov	r0, r4
 938 033e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 939              	.LVL122:
 192:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 940              		.loc 1 192 0
 941 0342 4FF40051 		mov	r1, #8192
 942 0346 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 30


 943 0348 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 944              	.LVL123:
 193:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 945              		.loc 1 193 0
 946 034c 4FF48041 		mov	r1, #16384
 947 0350 2046     		mov	r0, r4
 948 0352 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 949              	.LVL124:
 194:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 950              		.loc 1 194 0
 951 0356 4FF40041 		mov	r1, #32768
 952 035a 2046     		mov	r0, r4
 953 035c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 954              	.LVL125:
 955 0360 1EE1     		b	.L22
 956              	.L54:
 957 0362 00BF     		.align	2
 958              	.L53:
 959 0364 00000000 		.word	.LANCHOR1
 960 0368 00000000 		.word	.LANCHOR4
 961 036c 000C0240 		.word	1073875968
 962 0370 00080240 		.word	1073874944
 963 0374 00000000 		.word	.LANCHOR5
 964 0378 00000000 		.word	.LANCHOR6
 965 037c 00000000 		.word	curr_angle
 966 0380 00000000 		.word	initial_angle
 967 0384 00000000 		.word	0
 968 0388 00000000 		.word	leg
 969 038c 00000000 		.word	steering
 970 0390 00000000 		.word	.LANCHOR2
 971 0394 00000000 		.word	.LANCHOR3
 972 0398 00000000 		.word	.LC8
 973 039c 08000000 		.word	.LC9
 974 03a0 14000000 		.word	.LC10
 975 03a4 1C000000 		.word	.LC11
 976              	.LVL126:
 977              	.L31:
 978              	.LBB162:
 206:Core/Src/robot/robot.cpp **** 		printf("tussock");
 979              		.loc 1 206 0
 980 03a8 8B48     		ldr	r0, .L55+8
 981              	.LVL127:
 982 03aa FFF7FEFF 		bl	printf
 983              	.LVL128:
 207:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG){
 984              		.loc 1 207 0
 985 03ae 8B4B     		ldr	r3, .L55+12
 986 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 987 03b2 93B9     		cbnz	r3, .L45
 208:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 988              		.loc 1 208 0
 989 03b4 8A4B     		ldr	r3, .L55+16
 990 03b6 D3ED057A 		vldr.32	s15, [r3, #20]
 991 03ba 8A4B     		ldr	r3, .L55+20
 992 03bc 93ED050A 		vldr.32	s0, [r3, #20]
 993 03c0 FDEEE77A 		vcvt.s32.f32	s15, s15
 994 03c4 17EE900A 		vmov	r0, s15	@ int
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 31


 995 03c8 FFF7FEFF 		bl	_Z2goif
 996              	.LVL129:
 997 03cc 0028     		cmp	r0, #0
 998 03ce 00F0E780 		beq	.L22
 210:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 999              		.loc 1 210 0
 1000 03d2 824B     		ldr	r3, .L55+12
 1001 03d4 0122     		movs	r2, #1
 1002 03d6 1A70     		strb	r2, [r3]
 1003 03d8 E2E0     		b	.L22
 1004              	.L45:
 214:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1005              		.loc 1 214 0
 1006 03da FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1007              	.LVL130:
 1008 03de 0028     		cmp	r0, #0
 1009 03e0 00F0DE80 		beq	.L22
 216:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1010              		.loc 1 216 0
 1011 03e4 0723     		movs	r3, #7
 1012 03e6 2370     		strb	r3, [r4]
 217:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 1013              		.loc 1 217 0
 1014 03e8 7F4B     		ldr	r3, .L55+24
 1015 03ea 0022     		movs	r2, #0
 1016 03ec 1A70     		strb	r2, [r3]
 218:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1017              		.loc 1 218 0
 1018 03ee 7F4C     		ldr	r4, .L55+28
 1019              	.LVL131:
 1020 03f0 4FF48051 		mov	r1, #4096
 1021 03f4 2046     		mov	r0, r4
 1022 03f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1023              	.LVL132:
 219:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1024              		.loc 1 219 0
 1025 03fa 4FF40051 		mov	r1, #8192
 1026 03fe 2046     		mov	r0, r4
 1027 0400 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1028              	.LVL133:
 220:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1029              		.loc 1 220 0
 1030 0404 4FF48041 		mov	r1, #16384
 1031 0408 2046     		mov	r0, r4
 1032 040a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1033              	.LVL134:
 221:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1034              		.loc 1 221 0
 1035 040e 4FF40041 		mov	r1, #32768
 1036 0412 2046     		mov	r0, r4
 1037 0414 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1038              	.LVL135:
 1039 0418 C2E0     		b	.L22
 1040              	.LVL136:
 1041              	.L32:
 1042              	.LBE162:
 232:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 32


 1043              		.loc 1 232 0
 1044 041a 7548     		ldr	r0, .L55+32
 1045              	.LVL137:
 1046 041c FFF7FEFF 		bl	printf
 1047              	.LVL138:
 233:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1048              		.loc 1 233 0
 1049 0420 9FED748A 		vldr.32	s16, .L55+36
 1050 0424 744D     		ldr	r5, .L55+40
 1051 0426 B0EE480A 		vmov.f32	s0, s16
 1052 042a 2846     		mov	r0, r5
 1053 042c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1054              	.LVL139:
 234:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1055              		.loc 1 234 0
 1056 0430 B0EE480A 		vmov.f32	s0, s16
 1057 0434 05F15800 		add	r0, r5, #88
 1058 0438 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1059              	.LVL140:
 235:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1060              		.loc 1 235 0
 1061 043c B0EE480A 		vmov.f32	s0, s16
 1062 0440 6E48     		ldr	r0, .L55+44
 1063 0442 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1064              	.LVL141:
 236:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 1065              		.loc 1 236 0
 1066 0446 4FF40061 		mov	r1, #2048
 1067 044a 6848     		ldr	r0, .L55+28
 1068 044c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1069              	.LVL142:
 238:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1070              		.loc 1 238 0
 1071 0450 98BB     		cbnz	r0, .L52
 1072              	.L46:
 238:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1073              		.loc 1 238 0 is_stmt 0 discriminator 1
 1074 0452 654B     		ldr	r3, .L55+24
 1075 0454 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1076 0456 002B     		cmp	r3, #0
 1077 0458 00F0A280 		beq	.L22
 240:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1078              		.loc 1 240 0 is_stmt 1
 1079 045c 0823     		movs	r3, #8
 1080 045e 2370     		strb	r3, [r4]
 241:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1081              		.loc 1 241 0
 1082 0460 674B     		ldr	r3, .L55+48
 1083 0462 93ED007A 		vldr.32	s14, [r3]
 1084 0466 DFED677A 		vldr.32	s15, .L55+52
 1085 046a 67EE277A 		vmul.f32	s15, s14, s15
 1086 046e 17EE900A 		vmov	r0, s15
 1087 0472 FFF7FEFF 		bl	__aeabi_f2d
 1088              	.LVL143:
 1089 0476 56A3     		adr	r3, .L55
 1090 0478 D3E90023 		ldrd	r2, [r3]
 1091 047c FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 33


 1092              	.LVL144:
 1093 0480 FFF7FEFF 		bl	__aeabi_d2f
 1094              	.LVL145:
 1095 0484 574B     		ldr	r3, .L55+20
 1096 0486 9861     		str	r0, [r3, #24]	@ float
 242:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1097              		.loc 1 242 0
 1098 0488 574B     		ldr	r3, .L55+24
 1099 048a 0022     		movs	r2, #0
 1100 048c 1A70     		strb	r2, [r3]
 244:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1101              		.loc 1 244 0
 1102 048e 574C     		ldr	r4, .L55+28
 1103              	.LVL146:
 1104 0490 4FF48051 		mov	r1, #4096
 1105 0494 2046     		mov	r0, r4
 1106 0496 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1107              	.LVL147:
 245:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1108              		.loc 1 245 0
 1109 049a 4FF40051 		mov	r1, #8192
 1110 049e 2046     		mov	r0, r4
 1111 04a0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1112              	.LVL148:
 246:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1113              		.loc 1 246 0
 1114 04a4 4FF48041 		mov	r1, #16384
 1115 04a8 2046     		mov	r0, r4
 1116 04aa FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1117              	.LVL149:
 247:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1118              		.loc 1 247 0
 1119 04ae 4FF40041 		mov	r1, #32768
 1120 04b2 2046     		mov	r0, r4
 1121 04b4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1122              	.LVL150:
 1123 04b8 72E0     		b	.L22
 1124              	.LVL151:
 1125              	.L52:
 237:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1126              		.loc 1 237 0
 1127 04ba 4FF48071 		mov	r1, #256
 1128 04be 4B48     		ldr	r0, .L55+28
 1129 04c0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1130              	.LVL152:
 236:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 1131              		.loc 1 236 0
 1132 04c4 0028     		cmp	r0, #0
 1133 04c6 C4D0     		beq	.L46
 238:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1134              		.loc 1 238 0
 1135 04c8 4FF48061 		mov	r1, #1024
 1136 04cc 4748     		ldr	r0, .L55+28
 1137 04ce FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1138              	.LVL153:
 237:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1139              		.loc 1 237 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 34


 1140 04d2 0028     		cmp	r0, #0
 1141 04d4 BDD0     		beq	.L46
 1142 04d6 63E0     		b	.L22
 1143              	.LVL154:
 1144              	.L33:
 1145              	.LBB163:
 258:Core/Src/robot/robot.cpp **** 		printf("MOUNTAIN");
 1146              		.loc 1 258 0
 1147 04d8 4B48     		ldr	r0, .L55+56
 1148              	.LVL155:
 1149 04da FFF7FEFF 		bl	printf
 1150              	.LVL156:
 259:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG_2){
 1151              		.loc 1 259 0
 1152 04de 4B4B     		ldr	r3, .L55+60
 1153 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1154 04e2 8BB9     		cbnz	r3, .L47
 260:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 1155              		.loc 1 260 0
 1156 04e4 3E4B     		ldr	r3, .L55+16
 1157 04e6 D3ED067A 		vldr.32	s15, [r3, #24]
 1158 04ea 3E4B     		ldr	r3, .L55+20
 1159 04ec 93ED060A 		vldr.32	s0, [r3, #24]
 1160 04f0 FDEEE77A 		vcvt.s32.f32	s15, s15
 1161 04f4 17EE900A 		vmov	r0, s15	@ int
 1162 04f8 FFF7FEFF 		bl	_Z2goif
 1163              	.LVL157:
 1164 04fc 0028     		cmp	r0, #0
 1165 04fe 4FD0     		beq	.L22
 262:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1166              		.loc 1 262 0
 1167 0500 424B     		ldr	r3, .L55+60
 1168 0502 0122     		movs	r2, #1
 1169 0504 1A70     		strb	r2, [r3]
 1170 0506 4BE0     		b	.L22
 1171              	.L47:
 266:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1172              		.loc 1 266 0
 1173 0508 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1174              	.LVL158:
 1175 050c 0028     		cmp	r0, #0
 1176 050e 47D0     		beq	.L22
 268:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1177              		.loc 1 268 0
 1178 0510 0923     		movs	r3, #9
 1179 0512 2370     		strb	r3, [r4]
 269:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1180              		.loc 1 269 0
 1181 0514 354C     		ldr	r4, .L55+28
 1182              	.LVL159:
 1183 0516 4FF48051 		mov	r1, #4096
 1184 051a 2046     		mov	r0, r4
 1185 051c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1186              	.LVL160:
 270:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1187              		.loc 1 270 0
 1188 0520 4FF40051 		mov	r1, #8192
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 35


 1189 0524 2046     		mov	r0, r4
 1190 0526 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1191              	.LVL161:
 271:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1192              		.loc 1 271 0
 1193 052a 4FF48041 		mov	r1, #16384
 1194 052e 2046     		mov	r0, r4
 1195 0530 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1196              	.LVL162:
 272:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1197              		.loc 1 272 0
 1198 0534 4FF40041 		mov	r1, #32768
 1199 0538 2046     		mov	r0, r4
 1200 053a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1201              	.LVL163:
 1202 053e 2FE0     		b	.L22
 1203              	.LVL164:
 1204              	.L34:
 1205              	.LBE163:
 283:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1206              		.loc 1 283 0
 1207 0540 3348     		ldr	r0, .L55+64
 1208              	.LVL165:
 1209 0542 FFF7FEFF 		bl	puts
 1210              	.LVL166:
 284:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 1211              		.loc 1 284 0
 1212 0546 9FED2B8A 		vldr.32	s16, .L55+36
 1213 054a 2B4C     		ldr	r4, .L55+40
 1214              	.LVL167:
 1215 054c B0EE480A 		vmov.f32	s0, s16
 1216 0550 2046     		mov	r0, r4
 1217 0552 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1218              	.LVL168:
 285:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1219              		.loc 1 285 0
 1220 0556 B0EE480A 		vmov.f32	s0, s16
 1221 055a 04F15800 		add	r0, r4, #88
 1222 055e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1223              	.LVL169:
 286:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1224              		.loc 1 286 0
 1225 0562 B0EE480A 		vmov.f32	s0, s16
 1226 0566 2548     		ldr	r0, .L55+44
 1227 0568 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1228              	.LVL170:
 288:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1229              		.loc 1 288 0
 1230 056c 1F4C     		ldr	r4, .L55+28
 1231 056e 4FF48051 		mov	r1, #4096
 1232 0572 2046     		mov	r0, r4
 1233 0574 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1234              	.LVL171:
 289:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1235              		.loc 1 289 0
 1236 0578 4FF40051 		mov	r1, #8192
 1237 057c 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 36


 1238 057e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1239              	.LVL172:
 290:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1240              		.loc 1 290 0
 1241 0582 4FF48041 		mov	r1, #16384
 1242 0586 2046     		mov	r0, r4
 1243 0588 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1244              	.LVL173:
 291:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1245              		.loc 1 291 0
 1246 058c 4FF40041 		mov	r1, #32768
 1247 0590 2046     		mov	r0, r4
 1248 0592 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1249              	.LVL174:
 292:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1250              		.loc 1 292 0
 1251 0596 0122     		movs	r2, #1
 1252 0598 0421     		movs	r1, #4
 1253 059a 1E48     		ldr	r0, .L55+68
 1254 059c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1255              	.LVL175:
 1256              	.L22:
 1257              	.LBE139:
 1258              	.LBE138:
 302:Core/Src/robot/robot.cpp **** }
 1259              		.loc 1 302 0
 1260 05a0 05B0     		add	sp, sp, #20
 1261              	.LCFI4:
 1262              		.cfi_remember_state
 1263              		.cfi_def_cfa_offset 20
 1264              		@ sp needed
 1265 05a2 BDEC028B 		vldm	sp!, {d8}
 1266              	.LCFI5:
 1267              		.cfi_restore 80
 1268              		.cfi_restore 81
 1269              		.cfi_def_cfa_offset 12
 1270 05a6 30BD     		pop	{r4, r5, pc}
 1271              	.LVL176:
 1272              	.L35:
 1273              	.LCFI6:
 1274              		.cfi_restore_state
 1275              	.LBB165:
 1276              	.LBB164:
 297:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1277              		.loc 1 297 0
 1278 05a8 134C     		ldr	r4, .L55+40
 1279 05aa B2EE040A 		vmov.f32	s0, #1.0e+1
 1280 05ae 2046     		mov	r0, r4
 1281              	.LVL177:
 1282 05b0 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1283              	.LVL178:
 298:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1284              		.loc 1 298 0
 1285 05b4 B2EE040A 		vmov.f32	s0, #1.0e+1
 1286 05b8 04F15800 		add	r0, r4, #88
 1287 05bc FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1288              	.LVL179:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 37


 299:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1289              		.loc 1 299 0
 1290 05c0 9FED0C0A 		vldr.32	s0, .L55+36
 1291 05c4 0D48     		ldr	r0, .L55+44
 1292 05c6 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1293              	.LVL180:
 1294              	.LBE164:
 1295              	.LBE165:
 302:Core/Src/robot/robot.cpp **** }
 1296              		.loc 1 302 0
 1297 05ca E9E7     		b	.L22
 1298              	.L56:
 1299 05cc AFF30080 		.align	3
 1300              	.L55:
 1301 05d0 182D4454 		.word	1413754136
 1302 05d4 FB210940 		.word	1074340347
 1303 05d8 24000000 		.word	.LC12
 1304 05dc 00000000 		.word	.LANCHOR7
 1305 05e0 00000000 		.word	.LANCHOR2
 1306 05e4 00000000 		.word	.LANCHOR3
 1307 05e8 00000000 		.word	.LANCHOR1
 1308 05ec 000C0240 		.word	1073875968
 1309 05f0 2C000000 		.word	.LC13
 1310 05f4 00000000 		.word	0
 1311 05f8 00000000 		.word	leg
 1312 05fc 00000000 		.word	steering
 1313 0600 00000000 		.word	robot_angle
 1314 0604 00003443 		.word	1127481344
 1315 0608 38000000 		.word	.LC14
 1316 060c 00000000 		.word	.LANCHOR8
 1317 0610 44000000 		.word	.LC15
 1318 0614 00000240 		.word	1073872896
 1319              		.cfi_endproc
 1320              	.LFE503:
 1322              		.section	.text._Z4playv,"ax",%progbits
 1323              		.align	1
 1324              		.global	_Z4playv
 1325              		.syntax unified
 1326              		.thumb
 1327              		.thumb_func
 1328              		.fpu fpv4-sp-d16
 1330              	_Z4playv:
 1331              	.LFB504:
 305:Core/Src/robot/robot.cpp **** {
 1332              		.loc 1 305 0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 0
 1335              		@ frame_needed = 0, uses_anonymous_args = 0
 1336 0000 10B5     		push	{r4, lr}
 1337              	.LCFI7:
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 4, -8
 1340              		.cfi_offset 14, -4
 306:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1341              		.loc 1 306 0
 1342 0002 0948     		ldr	r0, .L59
 1343 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 38


 1344              	.LVL181:
 1345              	.LBB166:
 1346              	.LBB167:
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1347              		.loc 3 46 0
 1348 0008 084C     		ldr	r4, .L59+4
 1349 000a 2046     		mov	r0, r4
 1350 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1351              	.LVL182:
 1352              	.LBE167:
 1353              	.LBE166:
 307:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1354              		.loc 1 307 0
 1355 0010 074B     		ldr	r3, .L59+8
 1356 0012 83ED000A 		vstr.32	s0, [r3]
 1357              	.LVL183:
 1358              	.LBB168:
 1359              	.LBB169:
 1360              		.loc 3 46 0
 1361 0016 04F15800 		add	r0, r4, #88
 1362 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1363              	.LVL184:
 1364              	.LBE169:
 1365              	.LBE168:
 308:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1366              		.loc 1 308 0
 1367 001e 054B     		ldr	r3, .L59+12
 1368 0020 83ED000A 		vstr.32	s0, [r3]
 310:Core/Src/robot/robot.cpp **** }
 1369              		.loc 1 310 0
 1370 0024 0120     		movs	r0, #1
 1371 0026 10BD     		pop	{r4, pc}
 1372              	.L60:
 1373              		.align	2
 1374              	.L59:
 1375 0028 00000000 		.word	.LANCHOR0
 1376 002c 3C000000 		.word	leg+60
 1377 0030 00000000 		.word	.LANCHOR9
 1378 0034 00000000 		.word	.LANCHOR10
 1379              		.cfi_endproc
 1380              	.LFE504:
 1382              		.global	angles
 1383              		.global	steps
 1384              		.global	omega1
 1385              		.global	omega0
 1386              		.global	USE_IMU_FLAG
 1387              		.global	GEREGE_FLAG
 1388              		.global	ROBOT_START_FLAG
 1389              		.global	robo_state
 1390              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1393              	GEREGE_FLAG:
 1394 0000 00       		.space	1
 1395              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1396              		.set	.LANCHOR1,. + 0
 1399              	ROBOT_START_FLAG:
 1400 0000 00       		.space	1
 1401              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 39


 1402              		.align	2
 1403              		.set	.LANCHOR5,. + 0
 1406              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1407 0000 00000000 		.space	4
 1408              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
 1409              		.set	.LANCHOR7,. + 0
 1412              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1413 0000 00       		.space	1
 1414              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1415              		.set	.LANCHOR8,. + 0
 1418              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1419 0000 00       		.space	1
 1420              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1421              		.align	2
 1422              		.set	.LANCHOR6,. + 0
 1425              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1426 0000 00000000 		.space	4
 1427              		.section	.bss.omega0,"aw",%nobits
 1428              		.align	2
 1429              		.set	.LANCHOR9,. + 0
 1432              	omega0:
 1433 0000 00000000 		.space	4
 1434              		.section	.bss.omega1,"aw",%nobits
 1435              		.align	2
 1436              		.set	.LANCHOR10,. + 0
 1439              	omega1:
 1440 0000 00000000 		.space	4
 1441              		.section	.bss.robo_state,"aw",%nobits
 1442              		.set	.LANCHOR0,. + 0
 1445              	robo_state:
 1446 0000 00       		.space	1
 1447              		.section	.data.USE_IMU_FLAG,"aw",%progbits
 1450              	USE_IMU_FLAG:
 1451 0000 01       		.byte	1
 1452              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1453              		.set	.LANCHOR4,. + 0
 1456              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1457 0000 01       		.byte	1
 1458              		.section	.data.angles,"aw",%progbits
 1459              		.align	2
 1460              		.set	.LANCHOR3,. + 0
 1463              	angles:
 1464 0000 00000000 		.word	0
 1465 0004 00003442 		.word	1110704128
 1466 0008 00003442 		.word	1110704128
 1467 000c 00004842 		.word	1112014848
 1468 0010 0000A0C1 		.word	-1046478848
 1469 0014 00000000 		.word	0
 1470 0018 0000B4C2 		.word	-1028390912
 1471              		.section	.data.steps,"aw",%progbits
 1472              		.align	2
 1473              		.set	.LANCHOR2,. + 0
 1476              	steps:
 1477 0000 0000A040 		.word	1084227584
 1478 0004 00001041 		.word	1091567616
 1479 0008 00005041 		.word	1095761920
 1480 000c 00007041 		.word	1097859072
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 40


 1481 0010 00009841 		.word	1100480512
 1482 0014 0000B041 		.word	1102053376
 1483 0018 0000E841 		.word	1105723392
 1484              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
 1485              		.align	2
 1486              	.LC8:
 1487 0000 5475726E 		.ascii	"Turn 45\000"
 1487      20343500 
 1488              	.LC9:
 1489 0008 53616E64 		.ascii	"Sand dune\000"
 1489      2064756E 
 1489      6500
 1490 0012 0000     		.space	2
 1491              	.LC10:
 1492 0014 53746174 		.ascii	"State D\000"
 1492      65204400 
 1493              	.LC11:
 1494 001c 5475726E 		.ascii	"Turn 90\000"
 1494      20393000 
 1495              	.LC12:
 1496 0024 74757373 		.ascii	"tussock\000"
 1496      6F636B00 
 1497              	.LC13:
 1498 002c 0A426173 		.ascii	"\012Base camp\000"
 1498      65206361 
 1498      6D7000
 1499 0037 00       		.space	1
 1500              	.LC14:
 1501 0038 4D4F554E 		.ascii	"MOUNTAIN\000"
 1501      5441494E 
 1501      00
 1502 0041 000000   		.space	3
 1503              	.LC15:
 1504 0044 0A55554B 		.ascii	"\012UUKHAI\000"
 1504      48414900 
 1505              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1506              		.align	2
 1507              	.LC0:
 1508 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1508      6F6E6520 
 1508      4D415243 
 1508      4800
 1509 000e 0000     		.space	2
 1510              	.LC1:
 1511 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1511      6F6E6520 
 1511      343500
 1512 001b 00       		.space	1
 1513              	.LC2:
 1514 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
 1514      6F6E6520 
 1514      53414E44 
 1514      5F44554E 
 1514      4500
 1515 002e 0000     		.space	2
 1516              	.LC3:
 1517 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 41


 1517      6F6E6520 
 1517      4D4F554E 
 1517      5441494E 
 1517      00
 1518 0041 000000   		.space	3
 1519              	.LC4:
 1520 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
 1520      6F6E6520 
 1520      44656661 
 1520      756C7400 
 1521              	.LC5:
 1522 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1522      6F6E6520 
 1522      52454400 
 1523              	.LC6:
 1524 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1524      6F6E6520 
 1524      424C5545 
 1524      00
 1525 006d 000000   		.space	3
 1526              	.LC7:
 1527 0070 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1527      6F6E6520 
 1527      44656661 
 1527      756C745F 
 1527      52454400 
 1528              		.text
 1529              	.Letext0:
 1530              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1531              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1532              		.file 6 "Core/Inc/sys/FreeRTOSConfig.h"
 1533              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 1534              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1535              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1536              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1537              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1538              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1539              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1540              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1541              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1542              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1543              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1544              		.file 18 "Core/Inc/periphs/tim.h"
 1545              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1546              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1547              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1548              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1549              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1550              		.file 24 "Core/Inc/devs/motor.h"
 1551              		.file 25 "Core/Inc/devs/encoder.h"
 1552              		.file 26 "Core/Inc/utils/pid_algorithms.h"
 1553              		.file 27 "Core/Inc/devs/limit_switch.h"
 1554              		.file 28 "Core/Inc/devs/steering.h"
 1555              		.file 29 "Core/Inc/robot/robot.h"
 1556              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1557              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1558              		.file 32 "Core/Inc/robot/robot_functions.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 42


 1559              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:360    .text._Z11zone_selectv:000001b0 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:382    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:389    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:414    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:421    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:450    .text._Z11start_RobotP12Robot_States:00000016 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:461    .text._Z11start_RobotP12Robot_States:0000002c $t
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:959    .text._Z11start_RobotP12Robot_States:00000364 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:980    .text._Z11start_RobotP12Robot_States:000003a8 $t
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1301   .text._Z11start_RobotP12Robot_States:000005d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1323   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1330   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1375   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1463   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1476   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1439   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1432   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1450   .data.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1393   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1399   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1445   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1394   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1400   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1402   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1406   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1412   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1413   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1418   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1419   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1421   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1425   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1428   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1435   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1446   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1456   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1459   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1472   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1485   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s:1506   .rodata._Z11zone_selectv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
initial_angle
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
HAL_GPIO_WritePin
HAL_GetTick
_Z11getup_n_runv
__cxa_guard_acquire
__cxa_guard_release
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFqarEo.s 			page 44


_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
_Z2goif
HAL_GPIO_TogglePin
curr_angle
steering
_Z23initialize_leg_positionv
puts
_ZN8steering9set_omegaEf
robot_angle
_ZN7encoder9get_omegaEv
