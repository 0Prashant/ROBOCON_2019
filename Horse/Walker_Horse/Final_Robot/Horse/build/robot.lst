ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB505:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = true;
  15:Core/Src/robot/robot.cpp **** bool FRONT_PROXIMITY_FLAG = false;
  16:Core/Src/robot/robot.cpp **** bool BACK_PROXIMITY_FLAG = false;
  17:Core/Src/robot/robot.cpp **** float omega0 = 0;
  18:Core/Src/robot/robot.cpp **** float omega1 = 0;
  19:Core/Src/robot/robot.cpp **** 
  20:Core/Src/robot/robot.cpp **** // float steps[7] = {7, 13, 17, 19, 24, 27, 36};        //for 7 rad/sec
  21:Core/Src/robot/robot.cpp **** float steps[7] = {6, 13, 17, 19, 24, 27, 36};		//for 8 rad/sec
  22:Core/Src/robot/robot.cpp **** float angles[7] = {0, 45, 45, 45, 0, 0, -90};
  23:Core/Src/robot/robot.cpp **** 
  24:Core/Src/robot/robot.cpp **** 
  25:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  26:Core/Src/robot/robot.cpp **** {
  27:Core/Src/robot/robot.cpp **** 	switch (*state_)
  28:Core/Src/robot/robot.cpp **** 	{
  29:Core/Src/robot/robot.cpp **** 	case HOME:
  30:Core/Src/robot/robot.cpp **** 	{
  31:Core/Src/robot/robot.cpp **** 		/**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  33:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
  34:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  35:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
  36:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  37:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  38:Core/Src/robot/robot.cpp **** 			*/
  39:Core/Src/robot/robot.cpp **** 		static bool WAIT_FLAG = true;
  40:Core/Src/robot/robot.cpp **** 		printf("\n\tWaiting_to_start\t");
  41:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  42:Core/Src/robot/robot.cpp **** 		if(WAIT_FLAG){
  43:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  44:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  45:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG)
  48:Core/Src/robot/robot.cpp **** 		{
  49:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  50:Core/Src/robot/robot.cpp **** 		}
  51:Core/Src/robot/robot.cpp **** 		else
  52:Core/Src/robot/robot.cpp **** 		{
  53:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  54:Core/Src/robot/robot.cpp **** 		}
  55:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\t\trobot_angle = %d\t", (int)(leg[0
  56:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
  57:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET) && ROBOT_START
  58:Core/Src/robot/robot.cpp **** 		{
  59:Core/Src/robot/robot.cpp **** 
  60:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  61:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  62:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  63:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  64:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  65:Core/Src/robot/robot.cpp **** 			
  66:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  67:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(1000))
  68:Core/Src/robot/robot.cpp **** 			{
  69:Core/Src/robot/robot.cpp **** 				WAIT_FLAG = false;
  70:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
  71:Core/Src/robot/robot.cpp **** 					printf("\n\n\n\t\tMARCHMARCHMARCH\n\n\n");
  72:Core/Src/robot/robot.cpp **** 				*state_ = MARCH;
  73:Core/Src/robot/robot.cpp **** 				}
  74:Core/Src/robot/robot.cpp **** 			}
  75:Core/Src/robot/robot.cpp **** 		}
  76:Core/Src/robot/robot.cpp **** 	}
  77:Core/Src/robot/robot.cpp **** 	break;
  78:Core/Src/robot/robot.cpp **** 
  79:Core/Src/robot/robot.cpp **** 	case MARCH:
  80:Core/Src/robot/robot.cpp **** 	{
  81:Core/Src/robot/robot.cpp **** 		/*
  82:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
  83:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
  84:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
  85:Core/Src/robot/robot.cpp **** 		*/
  86:Core/Src/robot/robot.cpp **** 		printf("March");
  87:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
  88:Core/Src/robot/robot.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 3


  89:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
  90:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
  91:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
  92:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
  93:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
  94:Core/Src/robot/robot.cpp **** 		}
  95:Core/Src/robot/robot.cpp **** 	}
  96:Core/Src/robot/robot.cpp **** 	break;
  97:Core/Src/robot/robot.cpp **** 
  98:Core/Src/robot/robot.cpp **** 	case TURN_45:
  99:Core/Src/robot/robot.cpp **** 	{
 100:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 101:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 102:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 103:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 104:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 105:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 106:Core/Src/robot/robot.cpp **** 		*/
 107:Core/Src/robot/robot.cpp **** 		printf("Turn 45");
 108:Core/Src/robot/robot.cpp **** 
 109:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 110:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET) || leg[0].get_steps() > steps[1])
 111:Core/Src/robot/robot.cpp **** 		{
 112:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 113:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 114:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 115:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 116:Core/Src/robot/robot.cpp **** 			BACK_PROXIMITY_FLAG = false;
 117:Core/Src/robot/robot.cpp **** 			FRONT_PROXIMITY_FLAG = false;
 118:Core/Src/robot/robot.cpp **** 
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 120:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 121:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 122:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 123:Core/Src/robot/robot.cpp **** 		}
 124:Core/Src/robot/robot.cpp **** 		//*/
 125:Core/Src/robot/robot.cpp **** 	}
 126:Core/Src/robot/robot.cpp **** 	break;
 127:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 128:Core/Src/robot/robot.cpp **** 	{
 129:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 130:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 131:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 132:Core/Src/robot/robot.cpp **** 			*/
 133:Core/Src/robot/robot.cpp **** 		printf("Sand dune");
 134:Core/Src/robot/robot.cpp **** 
 135:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 136:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET) && (leg[0].get_steps() > (steps[2] -
 137:Core/Src/robot/robot.cpp **** 		{
 138:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 139:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 142:Core/Src/robot/robot.cpp **** 
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 4


 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 147:Core/Src/robot/robot.cpp **** 		}
 148:Core/Src/robot/robot.cpp **** 		//*/
 149:Core/Src/robot/robot.cpp **** 	}
 150:Core/Src/robot/robot.cpp **** 	break;
 151:Core/Src/robot/robot.cpp **** 	case STATE_D:
 152:Core/Src/robot/robot.cpp **** 	{
 153:Core/Src/robot/robot.cpp **** 		/*
 154:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 155:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 156:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 157:Core/Src/robot/robot.cpp **** 		printf("State D");
 158:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 159:Core/Src/robot/robot.cpp **** 		{
 160:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 161:Core/Src/robot/robot.cpp **** 
 162:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 163:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 164:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 165:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 166:Core/Src/robot/robot.cpp **** 		}
 167:Core/Src/robot/robot.cpp **** 	}
 168:Core/Src/robot/robot.cpp **** 	break;
 169:Core/Src/robot/robot.cpp **** 
 170:Core/Src/robot/robot.cpp **** 	case TURN_90:
 171:Core/Src/robot/robot.cpp **** 	{
 172:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 173:Core/Src/robot/robot.cpp **** 			no of steps = 
 174:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 175:Core/Src/robot/robot.cpp **** 			*/
 176:Core/Src/robot/robot.cpp **** 		printf("Turn 90");
 177:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 178:Core/Src/robot/robot.cpp **** 		{
 179:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 180:Core/Src/robot/robot.cpp **** 
 181:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 182:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 183:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 184:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 185:Core/Src/robot/robot.cpp **** 		}
 186:Core/Src/robot/robot.cpp **** 	}
 187:Core/Src/robot/robot.cpp **** 	break;
 188:Core/Src/robot/robot.cpp **** 
 189:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 190:Core/Src/robot/robot.cpp **** 	{
 191:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 192:Core/Src/robot/robot.cpp **** 			robot stops 
 193:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 194:Core/Src/robot/robot.cpp **** 			*/
 195:Core/Src/robot/robot.cpp **** 		printf("tussock");
 196:Core/Src/robot/robot.cpp **** 		if (go(steps[5], angles[5]) == true)
 197:Core/Src/robot/robot.cpp **** 		{
 198:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 199:Core/Src/robot/robot.cpp **** 			{
 200:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 201:Core/Src/robot/robot.cpp **** 				
 202:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 5


 203:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 204:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 205:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 206:Core/Src/robot/robot.cpp **** 			}
 207:Core/Src/robot/robot.cpp **** 		}
 208:Core/Src/robot/robot.cpp **** 	}
 209:Core/Src/robot/robot.cpp **** 	break;
 210:Core/Src/robot/robot.cpp **** 
 211:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 212:Core/Src/robot/robot.cpp **** 	{
 213:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 214:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 215:Core/Src/robot/robot.cpp **** 			*/
 216:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 217:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 218:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 219:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 220:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET))
 221:Core/Src/robot/robot.cpp **** 		{
 222:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 223:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 224:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 225:Core/Src/robot/robot.cpp **** 			
 226:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 227:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 228:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 229:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 230:Core/Src/robot/robot.cpp **** 		}
 231:Core/Src/robot/robot.cpp **** 	}
 232:Core/Src/robot/robot.cpp **** 	break;
 233:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 234:Core/Src/robot/robot.cpp **** 	{
 235:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 236:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 237:Core/Src/robot/robot.cpp **** 			*/
 238:Core/Src/robot/robot.cpp **** 		printf("MOUNTAIN");
 239:Core/Src/robot/robot.cpp **** 		if (go(steps[6], angles[6]) == true)
 240:Core/Src/robot/robot.cpp **** 		{
 241:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 242:Core/Src/robot/robot.cpp **** 			{
 243:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 244:Core/Src/robot/robot.cpp **** 
 245:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 246:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 247:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 248:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 249:Core/Src/robot/robot.cpp **** 			}
 250:Core/Src/robot/robot.cpp **** 		}
 251:Core/Src/robot/robot.cpp **** 	}
 252:Core/Src/robot/robot.cpp **** 
 253:Core/Src/robot/robot.cpp **** 	break;
 254:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 255:Core/Src/robot/robot.cpp **** 	{
 256:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 257:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 258:Core/Src/robot/robot.cpp **** 			*/
 259:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 6


 260:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 261:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 262:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 263:Core/Src/robot/robot.cpp **** 		
 264:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 265:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 266:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 267:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 268:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 269:Core/Src/robot/robot.cpp **** 	}
 270:Core/Src/robot/robot.cpp **** 	break;
 271:Core/Src/robot/robot.cpp **** 	case TUNE:
 272:Core/Src/robot/robot.cpp **** 	{
 273:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 274:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 275:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 276:Core/Src/robot/robot.cpp **** 	}
 277:Core/Src/robot/robot.cpp **** 	}
 278:Core/Src/robot/robot.cpp **** }
 279:Core/Src/robot/robot.cpp **** 
 280:Core/Src/robot/robot.cpp **** bool play()
 281:Core/Src/robot/robot.cpp **** {
 282:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 283:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 284:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 285:Core/Src/robot/robot.cpp **** 	return true;
 286:Core/Src/robot/robot.cpp **** }
 287:Core/Src/robot/robot.cpp **** 
 288:Core/Src/robot/robot.cpp **** void zone_select(void)
 289:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 289 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LBB81:
 290:Core/Src/robot/robot.cpp **** 
 291:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET)
  38              		.loc 1 291 0
  39 0002 4FF48071 		mov	r1, #256
  40 0006 5848     		ldr	r0, .L16
  41 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000c F0B9     		cbnz	r0, .L2
 292:Core/Src/robot/robot.cpp **** 	{
 293:Core/Src/robot/robot.cpp **** 		robo_state = HOME;
  44              		.loc 1 293 0
  45 000e 574B     		ldr	r3, .L16+4
  46 0010 0022     		movs	r2, #0
  47 0012 1A70     		strb	r2, [r3]
 294:Core/Src/robot/robot.cpp **** 		GEREGE_FLAG = true;
  48              		.loc 1 294 0
  49 0014 0123     		movs	r3, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 7


  50 0016 564A     		ldr	r2, .L16+8
  51 0018 1370     		strb	r3, [r2]
 295:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  52              		.loc 1 295 0
  53 001a 564A     		ldr	r2, .L16+12
  54 001c 1370     		strb	r3, [r2]
  55              	.L3:
  56              	.LBE81:
  57              	.LBB101:
 296:Core/Src/robot/robot.cpp **** 	}
 297:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET)
 298:Core/Src/robot/robot.cpp **** 	{
 299:Core/Src/robot/robot.cpp **** 		robo_state = SAND_DUNE;
 300:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1];
 301:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1];
 302:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 303:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 304:Core/Src/robot/robot.cpp **** 		{
 305:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 306:Core/Src/robot/robot.cpp **** 		}
 307:Core/Src/robot/robot.cpp **** 		initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + angle
 308:Core/Src/robot/robot.cpp **** 	}
 309:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET)
 310:Core/Src/robot/robot.cpp **** 	{
 311:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 312:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 313:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 314:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 315:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 316:Core/Src/robot/robot.cpp **** 		{
 317:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 318:Core/Src/robot/robot.cpp **** 		}
 319:Core/Src/robot/robot.cpp **** 		initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + angle
 320:Core/Src/robot/robot.cpp **** 	}
 321:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET)
 322:Core/Src/robot/robot.cpp **** 	{
 323:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 324:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 325:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 326:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 327:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 328:Core/Src/robot/robot.cpp **** 		{
 329:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 330:Core/Src/robot/robot.cpp **** 		}
 331:Core/Src/robot/robot.cpp **** 	}
 332:Core/Src/robot/robot.cpp **** 	else
 333:Core/Src/robot/robot.cpp **** 	{
 334:Core/Src/robot/robot.cpp **** 		robo_state = HOME;
 335:Core/Src/robot/robot.cpp **** 	}
 336:Core/Src/robot/robot.cpp **** 
 337:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET)
  58              		.loc 1 337 0
  59 001e 4FF48071 		mov	r1, #256
  60 0022 5148     		ldr	r0, .L16
  61 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL1:
  63 0028 0028     		cmp	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 8


  64 002a 40F09680 		bne	.L12
  65              	.LBB102:
 338:Core/Src/robot/robot.cpp **** 	{
 339:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  66              		.loc 1 339 0
  67 002e 0022     		movs	r2, #0
  68              	.L14:
  69              	.LVL2:
  70              		.loc 1 339 0 is_stmt 0 discriminator 3
  71 0030 062A     		cmp	r2, #6
  72 0032 00F39780 		bgt	.L1
 340:Core/Src/robot/robot.cpp **** 		{
 341:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  73              		.loc 1 341 0 is_stmt 1 discriminator 2
  74 0036 504B     		ldr	r3, .L16+16
  75 0038 03EB8203 		add	r3, r3, r2, lsl #2
  76 003c D3ED007A 		vldr.32	s15, [r3]
  77 0040 F1EE677A 		vneg.f32	s15, s15
  78 0044 C3ED007A 		vstr.32	s15, [r3]
 339:Core/Src/robot/robot.cpp **** 		{
  79              		.loc 1 339 0 discriminator 2
  80 0048 0132     		adds	r2, r2, #1
  81              	.LVL3:
  82 004a F1E7     		b	.L14
  83              	.LVL4:
  84              	.L2:
  85              	.LBE102:
  86              	.LBE101:
  87              	.LBB103:
  88              	.LBB82:
 297:Core/Src/robot/robot.cpp **** 	{
  89              		.loc 1 297 0
  90 004c 4FF48071 		mov	r1, #256
  91 0050 4548     		ldr	r0, .L16
  92 0052 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  93              	.LVL5:
  94 0056 40BB     		cbnz	r0, .L4
  95              	.LBB83:
 299:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1];
  96              		.loc 1 299 0
  97 0058 444B     		ldr	r3, .L16+4
  98 005a 0322     		movs	r2, #3
  99 005c 1A70     		strb	r2, [r3]
 300:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1];
 100              		.loc 1 300 0
 101 005e 474B     		ldr	r3, .L16+20
 102 0060 D3ED017A 		vldr.32	s15, [r3, #4]
 103 0064 FDEEE77A 		vcvt.s32.f32	s15, s15
 104 0068 454A     		ldr	r2, .L16+24
 105 006a C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 301:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 106              		.loc 1 301 0
 107 006e C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 302:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 108              		.loc 1 302 0
 109 0072 414B     		ldr	r3, .L16+16
 110 0074 93ED017A 		vldr.32	s14, [r3, #4]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 9


 111              	.LVL6:
 112              	.LBB84:
 303:Core/Src/robot/robot.cpp **** 		{
 113              		.loc 1 303 0
 114 0078 0022     		movs	r2, #0
 115              	.LVL7:
 116              	.L6:
 303:Core/Src/robot/robot.cpp **** 		{
 117              		.loc 1 303 0 is_stmt 0 discriminator 3
 118 007a 062A     		cmp	r2, #6
 119 007c 0ADC     		bgt	.L5
 305:Core/Src/robot/robot.cpp **** 		}
 120              		.loc 1 305 0 is_stmt 1 discriminator 2
 121 007e 3E4B     		ldr	r3, .L16+16
 122 0080 03EB8203 		add	r3, r3, r2, lsl #2
 123 0084 D3ED007A 		vldr.32	s15, [r3]
 124 0088 77EEC77A 		vsub.f32	s15, s15, s14
 125 008c C3ED007A 		vstr.32	s15, [r3]
 303:Core/Src/robot/robot.cpp **** 		{
 126              		.loc 1 303 0 discriminator 2
 127 0090 0132     		adds	r2, r2, #1
 128              	.LVL8:
 129 0092 F2E7     		b	.L6
 130              	.L5:
 131              	.LVL9:
 132              	.LBE84:
 133              	.LBB85:
 134              	.LBB86:
 135              		.file 2 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
  19:Core/Inc/utils/vec3.h ****         first = second;
  20:Core/Inc/utils/vec3.h ****         second = temp;
  21:Core/Inc/utils/vec3.h **** }
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 10


  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
 136              		.loc 2 36 0
 137 0094 3B4B     		ldr	r3, .L16+28
 138 0096 93ED027A 		vldr.32	s14, [r3, #8]
 139              	.LVL10:
 140              	.LBE86:
 141              	.LBE85:
 307:Core/Src/robot/robot.cpp **** 	}
 142              		.loc 1 307 0
 143 009a 374A     		ldr	r2, .L16+16
 144              	.LVL11:
 145 009c D2ED017A 		vldr.32	s15, [r2, #4]
 146 00a0 77EE877A 		vadd.f32	s15, s15, s14
 147              	.LVL12:
 148              	.LBB87:
 149              	.LBB88:
 150              	.LBB89:
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
 151              		.loc 2 39 0
 152 00a4 C3ED027A 		vstr.32	s15, [r3, #8]
 153              	.LVL13:
 154 00a8 B9E7     		b	.L3
 155              	.LVL14:
 156              	.L4:
 157              	.LBE89:
 158              	.LBE88:
 159              	.LBE87:
 160              	.LBE83:
 161              	.LBB90:
 309:Core/Src/robot/robot.cpp **** 	{
 162              		.loc 1 309 0
 163 00aa 4FF48071 		mov	r1, #256
 164 00ae 2E48     		ldr	r0, .L16
 165 00b0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 166              	.LVL15:
 167 00b4 40BB     		cbnz	r0, .L7
 168              	.LBB91:
 311:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 169              		.loc 1 311 0
 170 00b6 2D4B     		ldr	r3, .L16+4
 171 00b8 0422     		movs	r2, #4
 172 00ba 1A70     		strb	r2, [r3]
 312:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 173              		.loc 1 312 0
 174 00bc 2F4B     		ldr	r3, .L16+20
 175 00be D3ED027A 		vldr.32	s15, [r3, #8]
 176 00c2 FDEEE77A 		vcvt.s32.f32	s15, s15
 177 00c6 2E4A     		ldr	r2, .L16+24
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 11


 178 00c8 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 313:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 179              		.loc 1 313 0
 180 00cc C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 314:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 181              		.loc 1 314 0
 182 00d0 294B     		ldr	r3, .L16+16
 183 00d2 93ED027A 		vldr.32	s14, [r3, #8]
 184              	.LVL16:
 185              	.LBB92:
 315:Core/Src/robot/robot.cpp **** 		{
 186              		.loc 1 315 0
 187 00d6 0022     		movs	r2, #0
 188              	.LVL17:
 189              	.L9:
 315:Core/Src/robot/robot.cpp **** 		{
 190              		.loc 1 315 0 is_stmt 0 discriminator 3
 191 00d8 062A     		cmp	r2, #6
 192 00da 0ADC     		bgt	.L8
 317:Core/Src/robot/robot.cpp **** 		}
 193              		.loc 1 317 0 is_stmt 1 discriminator 2
 194 00dc 264B     		ldr	r3, .L16+16
 195 00de 03EB8203 		add	r3, r3, r2, lsl #2
 196 00e2 D3ED007A 		vldr.32	s15, [r3]
 197 00e6 77EEC77A 		vsub.f32	s15, s15, s14
 198 00ea C3ED007A 		vstr.32	s15, [r3]
 315:Core/Src/robot/robot.cpp **** 		{
 199              		.loc 1 315 0 discriminator 2
 200 00ee 0132     		adds	r2, r2, #1
 201              	.LVL18:
 202 00f0 F2E7     		b	.L9
 203              	.L8:
 204              	.LVL19:
 205              	.LBE92:
 206              	.LBB93:
 207              	.LBB94:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 208              		.loc 2 36 0
 209 00f2 244B     		ldr	r3, .L16+28
 210 00f4 93ED027A 		vldr.32	s14, [r3, #8]
 211              	.LVL20:
 212              	.LBE94:
 213              	.LBE93:
 319:Core/Src/robot/robot.cpp **** 	}
 214              		.loc 1 319 0
 215 00f8 1F4A     		ldr	r2, .L16+16
 216              	.LVL21:
 217 00fa D2ED027A 		vldr.32	s15, [r2, #8]
 218 00fe 77EE877A 		vadd.f32	s15, s15, s14
 219              	.LVL22:
 220              	.LBB95:
 221              	.LBB96:
 222              	.LBB97:
 223              		.loc 2 39 0
 224 0102 C3ED027A 		vstr.32	s15, [r3, #8]
 225              	.LVL23:
 226 0106 8AE7     		b	.L3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 12


 227              	.LVL24:
 228              	.L7:
 229              	.LBE97:
 230              	.LBE96:
 231              	.LBE95:
 232              	.LBE91:
 233              	.LBB98:
 321:Core/Src/robot/robot.cpp **** 	{
 234              		.loc 1 321 0
 235 0108 4FF48071 		mov	r1, #256
 236 010c 1648     		ldr	r0, .L16
 237 010e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 238              	.LVL25:
 239 0112 F0B9     		cbnz	r0, .L10
 240              	.LBB99:
 323:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 241              		.loc 1 323 0
 242 0114 154B     		ldr	r3, .L16+4
 243 0116 0722     		movs	r2, #7
 244 0118 1A70     		strb	r2, [r3]
 324:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 245              		.loc 1 324 0
 246 011a 184B     		ldr	r3, .L16+20
 247 011c D3ED057A 		vldr.32	s15, [r3, #20]
 248 0120 FDEEE77A 		vcvt.s32.f32	s15, s15
 249 0124 164A     		ldr	r2, .L16+24
 250 0126 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 325:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 251              		.loc 1 325 0
 252 012a C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 326:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 253              		.loc 1 326 0
 254 012e 124B     		ldr	r3, .L16+16
 255 0130 93ED057A 		vldr.32	s14, [r3, #20]
 256              	.LVL26:
 257              	.LBB100:
 327:Core/Src/robot/robot.cpp **** 		{
 258              		.loc 1 327 0
 259 0134 0022     		movs	r2, #0
 260              	.LVL27:
 261              	.L11:
 327:Core/Src/robot/robot.cpp **** 		{
 262              		.loc 1 327 0 is_stmt 0 discriminator 3
 263 0136 062A     		cmp	r2, #6
 264 0138 3FF771AF 		bgt	.L3
 329:Core/Src/robot/robot.cpp **** 		}
 265              		.loc 1 329 0 is_stmt 1 discriminator 2
 266 013c 0E4B     		ldr	r3, .L16+16
 267 013e 03EB8203 		add	r3, r3, r2, lsl #2
 268 0142 D3ED007A 		vldr.32	s15, [r3]
 269 0146 77EEC77A 		vsub.f32	s15, s15, s14
 270 014a C3ED007A 		vstr.32	s15, [r3]
 327:Core/Src/robot/robot.cpp **** 		{
 271              		.loc 1 327 0 discriminator 2
 272 014e 0132     		adds	r2, r2, #1
 273              	.LVL28:
 274 0150 F1E7     		b	.L11
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 13


 275              	.LVL29:
 276              	.L10:
 277              	.LBE100:
 278              	.LBE99:
 334:Core/Src/robot/robot.cpp **** 	}
 279              		.loc 1 334 0
 280 0152 064B     		ldr	r3, .L16+4
 281 0154 0022     		movs	r2, #0
 282 0156 1A70     		strb	r2, [r3]
 283 0158 61E7     		b	.L3
 284              	.L12:
 285              	.LBE98:
 286              	.LBE90:
 287              	.LBE82:
 288              	.LBE103:
 289              	.LBB104:
 342:Core/Src/robot/robot.cpp **** 		}
 343:Core/Src/robot/robot.cpp **** 	}
 344:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET)
 290              		.loc 1 344 0
 291 015a 4FF48071 		mov	r1, #256
 292 015e 0248     		ldr	r0, .L16
 293 0160 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 294              	.LVL30:
 295              	.L1:
 296              	.LBE104:
 345:Core/Src/robot/robot.cpp **** 	{
 346:Core/Src/robot/robot.cpp **** 	}
 347:Core/Src/robot/robot.cpp **** }...
 297              		.loc 1 347 0
 298 0164 08BD     		pop	{r3, pc}
 299              	.L17:
 300 0166 00BF     		.align	2
 301              	.L16:
 302 0168 000C0240 		.word	1073875968
 303 016c 00000000 		.word	.LANCHOR0
 304 0170 00000000 		.word	.LANCHOR1
 305 0174 00000000 		.word	.LANCHOR2
 306 0178 00000000 		.word	.LANCHOR4
 307 017c 00000000 		.word	.LANCHOR3
 308 0180 00000000 		.word	leg
 309 0184 00000000 		.word	initial_angle
 310              		.cfi_endproc
 311              	.LFE505:
 313              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 314              		.align	1
 315              		.weak	_Z12swap_ElementIfEvRT_S1_
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	_Z12swap_ElementIfEvRT_S1_:
 322              	.LFB521:
  16:Core/Inc/utils/vec3.h **** {
 323              		.loc 2 16 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 14


 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL31:
  18:Core/Inc/utils/vec3.h ****         first = second;
 329              		.loc 2 18 0
 330 0000 0368     		ldr	r3, [r0]	@ float
 331              	.LVL32:
  19:Core/Inc/utils/vec3.h ****         second = temp;
 332              		.loc 2 19 0
 333 0002 0A68     		ldr	r2, [r1]	@ float
 334 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h **** }
 335              		.loc 2 20 0
 336 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** 
 337              		.loc 2 21 0
 338 0008 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE521:
 342              		.global	__aeabi_f2d
 343              		.global	__aeabi_ddiv
 344              		.global	__aeabi_d2iz
 345              		.global	__aeabi_d2f
 346              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 347              		.align	1
 348              		.global	_Z11start_RobotP12Robot_States
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu fpv4-sp-d16
 354              	_Z11start_RobotP12Robot_States:
 355              	.LFB503:
  26:Core/Src/robot/robot.cpp **** {
 356              		.loc 1 26 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 24
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              	.LVL33:
 361 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 362              	.LCFI1:
 363              		.cfi_def_cfa_offset 32
 364              		.cfi_offset 4, -32
 365              		.cfi_offset 5, -28
 366              		.cfi_offset 6, -24
 367              		.cfi_offset 7, -20
 368              		.cfi_offset 8, -16
 369              		.cfi_offset 9, -12
 370              		.cfi_offset 10, -8
 371              		.cfi_offset 14, -4
 372 0004 2DED028B 		vpush.64	{d8}
 373              	.LCFI2:
 374              		.cfi_def_cfa_offset 40
 375              		.cfi_offset 80, -40
 376              		.cfi_offset 81, -36
 377 0008 88B0     		sub	sp, sp, #32
 378              	.LCFI3:
 379              		.cfi_def_cfa_offset 72
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 15


 380 000a 8246     		mov	r10, r0
 381              	.LBB130:
  27:Core/Src/robot/robot.cpp **** 	switch (*state_)
 382              		.loc 1 27 0
 383 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 384 000e 0A2B     		cmp	r3, #10
 385 0010 00F22583 		bhi	.L19
 386 0014 DFE813F0 		tbh	[pc, r3, lsl #1]
 387              	.L22:
 388 0018 0B00     		.2byte	(.L21-.L22)/2
 389 001a FC00     		.2byte	(.L23-.L22)/2
 390 001c 2701     		.2byte	(.L24-.L22)/2
 391 001e A001     		.2byte	(.L25-.L22)/2
 392 0020 F101     		.2byte	(.L26-.L22)/2
 393 0022 1C02     		.2byte	(.L27-.L22)/2
 394 0024 4702     		.2byte	(.L28-.L22)/2
 395 0026 7702     		.2byte	(.L29-.L22)/2
 396 0028 C502     		.2byte	(.L30-.L22)/2
 397 002a F302     		.2byte	(.L31-.L22)/2
 398 002c 2803     		.2byte	(.L32-.L22)/2
 399              		.p2align 1
 400              	.L21:
 401              	.LBB131:
 402              	.LBB132:
  40:Core/Src/robot/robot.cpp **** 		printf("\n\tWaiting_to_start\t");
 403              		.loc 1 40 0
 404 002e B248     		ldr	r0, .L45+8
 405              	.LVL34:
 406 0030 FFF7FEFF 		bl	printf
 407              	.LVL35:
  42:Core/Src/robot/robot.cpp **** 		if(WAIT_FLAG){
 408              		.loc 1 42 0
 409 0034 B14B     		ldr	r3, .L45+12
 410 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 0038 002B     		cmp	r3, #0
 412 003a 40F0C280 		bne	.L43
 413              	.L33:
  47:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG)
 414              		.loc 1 47 0
 415 003e B04B     		ldr	r3, .L45+16
 416 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 417 0042 002B     		cmp	r3, #0
 418 0044 40F0D180 		bne	.L34
 419              	.LVL36:
 420              	.LBB133:
 421              	.LBB134:
 422              	.LBB135:
 423              	.LBB136:
 424              	.LBB137:
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 16


  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 17


 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 425              		.loc 2 129 0
 426 0048 AE4B     		ldr	r3, .L45+20
 427 004a 1A68     		ldr	r2, [r3]	@ float
 428 004c 0592     		str	r2, [sp, #20]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 429              		.loc 2 130 0
 430 004e 5A68     		ldr	r2, [r3, #4]	@ float
 431 0050 0692     		str	r2, [sp, #24]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 432              		.loc 2 131 0
 433 0052 9B68     		ldr	r3, [r3, #8]	@ float
 434 0054 0793     		str	r3, [sp, #28]	@ float
 435              	.LVL37:
 436              	.LBE137:
 437              	.LBE136:
 438              	.LBE135:
 439              	.LBB138:
 440              	.LBB139:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 18


 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 441              		.loc 2 175 0
 442 0056 AC4C     		ldr	r4, .L45+24
 443 0058 05A9     		add	r1, sp, #20
 444              	.LVL38:
 445 005a 2046     		mov	r0, r4
 446 005c FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 447              	.LVL39:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 448              		.loc 2 176 0
 449 0060 06A9     		add	r1, sp, #24
 450 0062 201D     		adds	r0, r4, #4
 451 0064 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 452              	.LVL40:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 453              		.loc 2 177 0
 454 0068 07A9     		add	r1, sp, #28
 455 006a 04F10800 		add	r0, r4, #8
 456 006e FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 457              	.LVL41:
 458              	.L35:
 459              	.LBE139:
 460              	.LBE138:
 461              	.LBE134:
 462              	.LBE133:
 463              	.LBB140:
 464              	.LBB141:
 465              		.file 3 "Core/Inc/devs/leg.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 19


   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 466              		.loc 3 47 0
 467 0072 A64E     		ldr	r6, .L45+28
 468 0074 3046     		mov	r0, r6
 469 0076 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 470              	.LVL42:
 471              	.LBE141:
 472              	.LBE140:
  55:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\t\trobot_angle = %d\t", (int)(leg[0
 473              		.loc 1 55 0
 474 007a 9FEDA58A 		vldr.32	s16, .L45+32
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 20


 475 007e 60EE087A 		vmul.f32	s15, s0, s16
 476 0082 17EE900A 		vmov	r0, s15
 477 0086 FFF7FEFF 		bl	__aeabi_f2d
 478              	.LVL43:
 479 008a 99A3     		adr	r3, .L45
 480 008c D3E90023 		ldrd	r2, [r3]
 481 0090 FFF7FEFF 		bl	__aeabi_ddiv
 482              	.LVL44:
 483 0094 0446     		mov	r4, r0
 484 0096 0D46     		mov	r5, r1
 485              	.LVL45:
 486              	.LBB142:
 487              	.LBB143:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 488              		.loc 3 48 0
 489 0098 06F15800 		add	r0, r6, #88
 490 009c FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 491              	.LVL46:
 492              	.LBE143:
 493              	.LBE142:
  56:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 494              		.loc 1 56 0
 495 00a0 60EE087A 		vmul.f32	s15, s0, s16
 496 00a4 17EE900A 		vmov	r0, s15
 497 00a8 FFF7FEFF 		bl	__aeabi_f2d
 498              	.LVL47:
 499 00ac 90A3     		adr	r3, .L45
 500 00ae D3E90023 		ldrd	r2, [r3]
 501 00b2 FFF7FEFF 		bl	__aeabi_ddiv
 502              	.LVL48:
 503 00b6 0646     		mov	r6, r0
 504 00b8 0F46     		mov	r7, r1
 505              	.LVL49:
 506              	.LBB144:
 507              	.LBB145:
 508              		.file 4 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 21


  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 22


  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 509              		.loc 4 112 0
 510 00ba 9648     		ldr	r0, .L45+36
 511 00bc FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 512              	.LVL50:
 513              	.LBE145:
 514              	.LBE144:
  56:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 515              		.loc 1 56 0
 516 00c0 60EE087A 		vmul.f32	s15, s0, s16
 517 00c4 17EE900A 		vmov	r0, s15
 518 00c8 FFF7FEFF 		bl	__aeabi_f2d
 519              	.LVL51:
 520 00cc 88A3     		adr	r3, .L45
 521 00ce D3E90023 		ldrd	r2, [r3]
 522 00d2 FFF7FEFF 		bl	__aeabi_ddiv
 523              	.LVL52:
 524 00d6 8046     		mov	r8, r0
 525 00d8 8946     		mov	r9, r1
 526 00da 8F4B     		ldr	r3, .L45+40
 527 00dc D3ED007A 		vldr.32	s15, [r3]
 528 00e0 67EE887A 		vmul.f32	s15, s15, s16
 529 00e4 17EE900A 		vmov	r0, s15
 530 00e8 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 23


 531              	.LVL53:
 532 00ec 80A3     		adr	r3, .L45
 533 00ee D3E90023 		ldrd	r2, [r3]
 534 00f2 FFF7FEFF 		bl	__aeabi_ddiv
 535              	.LVL54:
 536 00f6 CDE90201 		strd	r0, [sp, #8]
  55:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\t\trobot_angle = %d\t", (int)(leg[0
 537              		.loc 1 55 0
 538 00fa 4046     		mov	r0, r8
 539 00fc 4946     		mov	r1, r9
 540 00fe FFF7FEFF 		bl	__aeabi_d2iz
 541              	.LVL55:
 542 0102 8046     		mov	r8, r0
 543 0104 3046     		mov	r0, r6
 544 0106 3946     		mov	r1, r7
 545 0108 FFF7FEFF 		bl	__aeabi_d2iz
 546              	.LVL56:
 547 010c 0646     		mov	r6, r0
 548 010e 2046     		mov	r0, r4
 549 0110 2946     		mov	r1, r5
 550 0112 FFF7FEFF 		bl	__aeabi_d2iz
 551              	.LVL57:
 552 0116 0446     		mov	r4, r0
 553 0118 DDE90201 		ldrd	r0, [sp, #8]
 554 011c FFF7FEFF 		bl	__aeabi_d2iz
 555              	.LVL58:
 556 0120 0090     		str	r0, [sp]
 557 0122 4346     		mov	r3, r8
 558 0124 3246     		mov	r2, r6
 559 0126 2146     		mov	r1, r4
 560 0128 7C48     		ldr	r0, .L45+44
 561 012a FFF7FEFF 		bl	printf
 562              	.LVL59:
 563              	.LBB146:
  57:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET) && ROBOT_START
 564              		.loc 1 57 0
 565 012e 4FF40071 		mov	r1, #512
 566 0132 7B48     		ldr	r0, .L45+48
 567 0134 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 568              	.LVL60:
 569 0138 0028     		cmp	r0, #0
 570 013a 40F09082 		bne	.L19
  57:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET) && ROBOT_START
 571              		.loc 1 57 0 is_stmt 0 discriminator 1
 572 013e 704B     		ldr	r3, .L45+16
 573 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0142 002B     		cmp	r3, #0
 575 0144 00F08B82 		beq	.L19
 576              	.LBB147:
  60:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 577              		.loc 1 60 0 is_stmt 1
 578 0148 754C     		ldr	r4, .L45+48
 579 014a 0022     		movs	r2, #0
 580 014c 4FF48051 		mov	r1, #4096
 581 0150 2046     		mov	r0, r4
 582 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
 583              	.LVL61:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 24


  61:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 584              		.loc 1 61 0
 585 0156 0022     		movs	r2, #0
 586 0158 4FF40051 		mov	r1, #8192
 587 015c 2046     		mov	r0, r4
 588 015e FFF7FEFF 		bl	HAL_GPIO_WritePin
 589              	.LVL62:
  62:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 590              		.loc 1 62 0
 591 0162 0022     		movs	r2, #0
 592 0164 4FF48041 		mov	r1, #16384
 593 0168 2046     		mov	r0, r4
 594 016a FFF7FEFF 		bl	HAL_GPIO_WritePin
 595              	.LVL63:
  63:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 596              		.loc 1 63 0
 597 016e 0022     		movs	r2, #0
 598 0170 4FF40041 		mov	r1, #32768
 599 0174 2046     		mov	r0, r4
 600 0176 FFF7FEFF 		bl	HAL_GPIO_WritePin
 601              	.LVL64:
  64:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 602              		.loc 1 64 0
 603 017a 0022     		movs	r2, #0
 604 017c 0421     		movs	r1, #4
 605 017e 6948     		ldr	r0, .L45+52
 606 0180 FFF7FEFF 		bl	HAL_GPIO_WritePin
 607              	.LVL65:
  66:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 608              		.loc 1 66 0
 609 0184 684B     		ldr	r3, .L45+56
 610 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 611 0188 BFF35B8F 		dmb	ish
 612 018c 13F0010F 		tst	r3, #1
 613 0190 31D0     		beq	.L44
 614              	.L36:
  67:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(1000))
 615              		.loc 1 67 0
 616 0192 FFF7FEFF 		bl	HAL_GetTick
 617              	.LVL66:
 618 0196 654B     		ldr	r3, .L45+60
 619 0198 1B68     		ldr	r3, [r3]
 620 019a C01A     		subs	r0, r0, r3
 621 019c B0F57A7F 		cmp	r0, #1000
 622 01a0 C0F05D82 		bcc	.L19
  69:Core/Src/robot/robot.cpp **** 				WAIT_FLAG = false;
 623              		.loc 1 69 0
 624 01a4 554B     		ldr	r3, .L45+12
 625 01a6 0022     		movs	r2, #0
 626 01a8 1A70     		strb	r2, [r3]
  70:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
 627              		.loc 1 70 0
 628 01aa FFF7FEFF 		bl	_Z11getup_n_runv
 629              	.LVL67:
 630 01ae 0028     		cmp	r0, #0
 631 01b0 00F05582 		beq	.L19
  71:Core/Src/robot/robot.cpp **** 					printf("\n\n\n\t\tMARCHMARCHMARCH\n\n\n");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 25


 632              		.loc 1 71 0
 633 01b4 5E48     		ldr	r0, .L45+64
 634 01b6 FFF7FEFF 		bl	puts
 635              	.LVL68:
  72:Core/Src/robot/robot.cpp **** 				*state_ = MARCH;
 636              		.loc 1 72 0
 637 01ba 0123     		movs	r3, #1
 638 01bc 8AF80030 		strb	r3, [r10]
 639 01c0 4DE2     		b	.L19
 640              	.L43:
 641              	.LBE147:
 642              	.LBE146:
  43:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 643              		.loc 1 43 0
 644 01c2 9FED5C8A 		vldr.32	s16, .L45+68
 645 01c6 5C4C     		ldr	r4, .L45+72
 646 01c8 B0EE480A 		vmov.f32	s0, s16
 647 01cc 2046     		mov	r0, r4
 648 01ce FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 649              	.LVL69:
  44:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 650              		.loc 1 44 0
 651 01d2 B0EE480A 		vmov.f32	s0, s16
 652 01d6 04F15800 		add	r0, r4, #88
 653 01da FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 654              	.LVL70:
  45:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 655              		.loc 1 45 0
 656 01de B0EE480A 		vmov.f32	s0, s16
 657 01e2 5648     		ldr	r0, .L45+76
 658 01e4 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 659              	.LVL71:
 660 01e8 29E7     		b	.L33
 661              	.L34:
  53:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 662              		.loc 1 53 0
 663 01ea 0122     		movs	r2, #1
 664 01ec 0421     		movs	r1, #4
 665 01ee 4D48     		ldr	r0, .L45+52
 666 01f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 667              	.LVL72:
 668 01f4 3DE7     		b	.L35
 669              	.L44:
 670              	.LBB149:
 671              	.LBB148:
  66:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 672              		.loc 1 66 0 discriminator 1
 673 01f6 4C48     		ldr	r0, .L45+56
 674 01f8 FFF7FEFF 		bl	__cxa_guard_acquire
 675              	.LVL73:
 676 01fc 0028     		cmp	r0, #0
 677 01fe C8D0     		beq	.L36
  66:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 678              		.loc 1 66 0 is_stmt 0 discriminator 2
 679 0200 FFF7FEFF 		bl	HAL_GetTick
 680              	.LVL74:
 681 0204 494B     		ldr	r3, .L45+60
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 26


 682 0206 1860     		str	r0, [r3]
 683 0208 4748     		ldr	r0, .L45+56
 684 020a FFF7FEFF 		bl	__cxa_guard_release
 685              	.LVL75:
 686 020e C0E7     		b	.L36
 687              	.LVL76:
 688              	.L23:
 689              	.LBE148:
 690              	.LBE149:
 691              	.LBE132:
  86:Core/Src/robot/robot.cpp **** 		printf("March");
 692              		.loc 1 86 0 is_stmt 1
 693 0210 4B48     		ldr	r0, .L45+80
 694              	.LVL77:
 695 0212 FFF7FEFF 		bl	printf
 696              	.LVL78:
  87:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 697              		.loc 1 87 0
 698 0216 4B4B     		ldr	r3, .L45+84
 699 0218 D3ED007A 		vldr.32	s15, [r3]
 700 021c 4A4B     		ldr	r3, .L45+88
 701 021e 93ED000A 		vldr.32	s0, [r3]
 702 0222 FDEEE77A 		vcvt.s32.f32	s15, s15
 703 0226 17EE900A 		vmov	r0, s15	@ int
 704 022a FFF7FEFF 		bl	_Z2goif
 705              	.LVL79:
 706 022e 0028     		cmp	r0, #0
 707 0230 00F01582 		beq	.L19
  89:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 708              		.loc 1 89 0
 709 0234 0223     		movs	r3, #2
 710 0236 8AF80030 		strb	r3, [r10]
  90:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 711              		.loc 1 90 0
 712 023a 394C     		ldr	r4, .L45+48
 713 023c 4FF48051 		mov	r1, #4096
 714 0240 2046     		mov	r0, r4
 715 0242 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 716              	.LVL80:
  91:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 717              		.loc 1 91 0
 718 0246 4FF40051 		mov	r1, #8192
 719 024a 2046     		mov	r0, r4
 720 024c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 721              	.LVL81:
  92:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 722              		.loc 1 92 0
 723 0250 4FF48041 		mov	r1, #16384
 724 0254 2046     		mov	r0, r4
 725 0256 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 726              	.LVL82:
  93:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 727              		.loc 1 93 0
 728 025a 4FF40041 		mov	r1, #32768
 729 025e 2046     		mov	r0, r4
 730 0260 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 731              	.LVL83:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 27


 732 0264 FBE1     		b	.L19
 733              	.LVL84:
 734              	.L24:
 107:Core/Src/robot/robot.cpp **** 		printf("Turn 45");
 735              		.loc 1 107 0
 736 0266 3948     		ldr	r0, .L45+92
 737              	.LVL85:
 738 0268 FFF7FEFF 		bl	printf
 739              	.LVL86:
 109:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 740              		.loc 1 109 0
 741 026c 364B     		ldr	r3, .L45+88
 742 026e 93ED010A 		vldr.32	s0, [r3, #4]
 743 0272 6320     		movs	r0, #99
 744 0274 FFF7FEFF 		bl	_Z2goif
 745              	.LVL87:
 110:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET) || leg[0].get_steps() > steps[1])
 746              		.loc 1 110 0
 747 0278 4FF48061 		mov	r1, #1024
 748 027c 2848     		ldr	r0, .L45+48
 749 027e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 750              	.LVL88:
 751 0282 68B1     		cbz	r0, .L37
 752              	.LVL89:
 753              	.LBB150:
 754              	.LBB151:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 755              		.loc 3 45 0
 756 0284 2C4B     		ldr	r3, .L45+72
 757 0286 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 758              	.LVL90:
 759              	.LBE151:
 760              	.LBE150:
 110:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET) || leg[0].get_steps() > steps[1])
 761              		.loc 1 110 0
 762 028a F8EEE77A 		vcvt.f32.s32	s15, s15
 763 028e 2D4B     		ldr	r3, .L45+84
 764 0290 93ED017A 		vldr.32	s14, [r3, #4]
 765 0294 F4EEC77A 		vcmpe.f32	s15, s14
 766 0298 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 767 029c 40F3DF81 		ble	.L19
 768              	.L37:
 113:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 769              		.loc 1 113 0 discriminator 3
 770 02a0 0323     		movs	r3, #3
 771 02a2 8AF80030 		strb	r3, [r10]
 114:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 772              		.loc 1 114 0 discriminator 3
 773 02a6 274B     		ldr	r3, .L45+84
 774 02a8 D3ED017A 		vldr.32	s15, [r3, #4]
 775 02ac FDEEE77A 		vcvt.s32.f32	s15, s15
 776 02b0 214A     		ldr	r2, .L45+72
 777 02b2 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 115:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 778              		.loc 1 115 0 discriminator 3
 779 02b6 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 116:Core/Src/robot/robot.cpp **** 			BACK_PROXIMITY_FLAG = false;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 28


 780              		.loc 1 116 0 discriminator 3
 781 02ba 0023     		movs	r3, #0
 782 02bc 244A     		ldr	r2, .L45+96
 783 02be 1370     		strb	r3, [r2]
 117:Core/Src/robot/robot.cpp **** 			FRONT_PROXIMITY_FLAG = false;
 784              		.loc 1 117 0 discriminator 3
 785 02c0 244A     		ldr	r2, .L45+100
 786 02c2 1370     		strb	r3, [r2]
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 787              		.loc 1 119 0 discriminator 3
 788 02c4 164C     		ldr	r4, .L45+48
 789 02c6 4FF48051 		mov	r1, #4096
 790 02ca 2046     		mov	r0, r4
 791 02cc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 792              	.LVL91:
 120:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 793              		.loc 1 120 0 discriminator 3
 794 02d0 4FF40051 		mov	r1, #8192
 795 02d4 2046     		mov	r0, r4
 796 02d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 797              	.LVL92:
 121:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 798              		.loc 1 121 0 discriminator 3
 799 02da 4FF48041 		mov	r1, #16384
 800 02de 2046     		mov	r0, r4
 801 02e0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 802              	.LVL93:
 122:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 803              		.loc 1 122 0 discriminator 3
 804 02e4 4FF40041 		mov	r1, #32768
 805 02e8 2046     		mov	r0, r4
 806 02ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 807              	.LVL94:
 808 02ee B6E1     		b	.L19
 809              	.L46:
 810              		.align	3
 811              	.L45:
 812 02f0 182D4454 		.word	1413754136
 813 02f4 FB210940 		.word	1074340347
 814 02f8 00000000 		.word	.LC0
 815 02fc 00000000 		.word	.LANCHOR5
 816 0300 00000000 		.word	.LANCHOR2
 817 0304 00000000 		.word	curr_angle
 818 0308 00000000 		.word	initial_angle
 819 030c 3C000000 		.word	leg+60
 820 0310 00003443 		.word	1127481344
 821 0314 0C000000 		.word	steering+12
 822 0318 00000000 		.word	robot_angle
 823 031c 14000000 		.word	.LC1
 824 0320 000C0240 		.word	1073875968
 825 0324 00080240 		.word	1073874944
 826 0328 00000000 		.word	.LANCHOR6
 827 032c 00000000 		.word	.LANCHOR7
 828 0330 5C000000 		.word	.LC2
 829 0334 00000000 		.word	0
 830 0338 00000000 		.word	leg
 831 033c 00000000 		.word	steering
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 29


 832 0340 74000000 		.word	.LC3
 833 0344 00000000 		.word	.LANCHOR3
 834 0348 00000000 		.word	.LANCHOR4
 835 034c 7C000000 		.word	.LC4
 836 0350 00000000 		.word	.LANCHOR8
 837 0354 00000000 		.word	.LANCHOR9
 838              	.LVL95:
 839              	.L25:
 133:Core/Src/robot/robot.cpp **** 		printf("Sand dune");
 840              		.loc 1 133 0
 841 0358 CF48     		ldr	r0, .L47+8
 842              	.LVL96:
 843 035a FFF7FEFF 		bl	printf
 844              	.LVL97:
 135:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 845              		.loc 1 135 0
 846 035e CF4B     		ldr	r3, .L47+12
 847 0360 93ED020A 		vldr.32	s0, [r3, #8]
 848 0364 6420     		movs	r0, #100
 849 0366 FFF7FEFF 		bl	_Z2goif
 850              	.LVL98:
 136:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET) && (leg[0].get_steps() > (steps[2] -
 851              		.loc 1 136 0
 852 036a 4FF48071 		mov	r1, #256
 853 036e CC48     		ldr	r0, .L47+16
 854 0370 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 855              	.LVL99:
 856 0374 80B9     		cbnz	r0, .L39
 857              	.LVL100:
 858              	.LBB152:
 859              	.LBB153:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 860              		.loc 3 45 0
 861 0376 CB4B     		ldr	r3, .L47+20
 862 0378 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 863              	.LVL101:
 864              	.LBE153:
 865              	.LBE152:
 136:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET) && (leg[0].get_steps() > (steps[2] -
 866              		.loc 1 136 0
 867 037c B8EEC77A 		vcvt.f32.s32	s14, s14
 868 0380 C94B     		ldr	r3, .L47+24
 869 0382 D3ED027A 		vldr.32	s15, [r3, #8]
 870 0386 F7EE006A 		vmov.f32	s13, #1.0e+0
 871 038a 77EEE67A 		vsub.f32	s15, s15, s13
 872 038e B4EEE77A 		vcmpe.f32	s14, s15
 873 0392 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 874 0396 0DDC     		bgt	.L40
 875              	.L39:
 876              	.LVL102:
 877              	.LBB154:
 878              	.LBB155:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 879              		.loc 3 45 0 discriminator 4
 880 0398 C24B     		ldr	r3, .L47+20
 881 039a D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 882              	.LVL103:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 30


 883              	.LBE155:
 884              	.LBE154:
 136:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET) && (leg[0].get_steps() > (steps[2] -
 885              		.loc 1 136 0 discriminator 4
 886 039e F8EEE77A 		vcvt.f32.s32	s15, s15
 887 03a2 C14B     		ldr	r3, .L47+24
 888 03a4 93ED027A 		vldr.32	s14, [r3, #8]
 889 03a8 F4EEC77A 		vcmpe.f32	s15, s14
 890 03ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 891 03b0 40F35581 		ble	.L19
 892              	.L40:
 139:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 893              		.loc 1 139 0 discriminator 5
 894 03b4 0423     		movs	r3, #4
 895 03b6 8AF80030 		strb	r3, [r10]
 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 896              		.loc 1 140 0 discriminator 5
 897 03ba BB4B     		ldr	r3, .L47+24
 898 03bc D3ED027A 		vldr.32	s15, [r3, #8]
 899 03c0 FDEEE77A 		vcvt.s32.f32	s15, s15
 900 03c4 B74A     		ldr	r2, .L47+20
 901 03c6 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 902              		.loc 1 141 0 discriminator 5
 903 03ca C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 904              		.loc 1 143 0 discriminator 5
 905 03ce B44C     		ldr	r4, .L47+16
 906 03d0 4FF48051 		mov	r1, #4096
 907 03d4 2046     		mov	r0, r4
 908 03d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 909              	.LVL104:
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 910              		.loc 1 144 0 discriminator 5
 911 03da 4FF40051 		mov	r1, #8192
 912 03de 2046     		mov	r0, r4
 913 03e0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 914              	.LVL105:
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 915              		.loc 1 145 0 discriminator 5
 916 03e4 4FF48041 		mov	r1, #16384
 917 03e8 2046     		mov	r0, r4
 918 03ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 919              	.LVL106:
 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 920              		.loc 1 146 0 discriminator 5
 921 03ee 4FF40041 		mov	r1, #32768
 922 03f2 2046     		mov	r0, r4
 923 03f4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 924              	.LVL107:
 925 03f8 31E1     		b	.L19
 926              	.LVL108:
 927              	.L26:
 157:Core/Src/robot/robot.cpp **** 		printf("State D");
 928              		.loc 1 157 0
 929 03fa AC48     		ldr	r0, .L47+28
 930              	.LVL109:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 31


 931 03fc FFF7FEFF 		bl	printf
 932              	.LVL110:
 158:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 933              		.loc 1 158 0
 934 0400 A94B     		ldr	r3, .L47+24
 935 0402 D3ED037A 		vldr.32	s15, [r3, #12]
 936 0406 A54B     		ldr	r3, .L47+12
 937 0408 93ED030A 		vldr.32	s0, [r3, #12]
 938 040c FDEEE77A 		vcvt.s32.f32	s15, s15
 939 0410 17EE900A 		vmov	r0, s15	@ int
 940 0414 FFF7FEFF 		bl	_Z2goif
 941              	.LVL111:
 942 0418 0028     		cmp	r0, #0
 943 041a 00F02081 		beq	.L19
 160:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 944              		.loc 1 160 0
 945 041e 0523     		movs	r3, #5
 946 0420 8AF80030 		strb	r3, [r10]
 162:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 947              		.loc 1 162 0
 948 0424 9E4C     		ldr	r4, .L47+16
 949 0426 4FF48051 		mov	r1, #4096
 950 042a 2046     		mov	r0, r4
 951 042c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 952              	.LVL112:
 163:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 953              		.loc 1 163 0
 954 0430 4FF40051 		mov	r1, #8192
 955 0434 2046     		mov	r0, r4
 956 0436 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 957              	.LVL113:
 164:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 958              		.loc 1 164 0
 959 043a 4FF48041 		mov	r1, #16384
 960 043e 2046     		mov	r0, r4
 961 0440 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 962              	.LVL114:
 165:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 963              		.loc 1 165 0
 964 0444 4FF40041 		mov	r1, #32768
 965 0448 2046     		mov	r0, r4
 966 044a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 967              	.LVL115:
 968 044e 06E1     		b	.L19
 969              	.LVL116:
 970              	.L27:
 176:Core/Src/robot/robot.cpp **** 		printf("Turn 90");
 971              		.loc 1 176 0
 972 0450 9748     		ldr	r0, .L47+32
 973              	.LVL117:
 974 0452 FFF7FEFF 		bl	printf
 975              	.LVL118:
 177:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 976              		.loc 1 177 0
 977 0456 944B     		ldr	r3, .L47+24
 978 0458 D3ED047A 		vldr.32	s15, [r3, #16]
 979 045c 8F4B     		ldr	r3, .L47+12
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 32


 980 045e 93ED040A 		vldr.32	s0, [r3, #16]
 981 0462 FDEEE77A 		vcvt.s32.f32	s15, s15
 982 0466 17EE900A 		vmov	r0, s15	@ int
 983 046a FFF7FEFF 		bl	_Z2goif
 984              	.LVL119:
 985 046e 0028     		cmp	r0, #0
 986 0470 00F0F580 		beq	.L19
 179:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 987              		.loc 1 179 0
 988 0474 0623     		movs	r3, #6
 989 0476 8AF80030 		strb	r3, [r10]
 181:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 990              		.loc 1 181 0
 991 047a 894C     		ldr	r4, .L47+16
 992 047c 4FF48051 		mov	r1, #4096
 993 0480 2046     		mov	r0, r4
 994 0482 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 995              	.LVL120:
 182:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 996              		.loc 1 182 0
 997 0486 4FF40051 		mov	r1, #8192
 998 048a 2046     		mov	r0, r4
 999 048c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1000              	.LVL121:
 183:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1001              		.loc 1 183 0
 1002 0490 4FF48041 		mov	r1, #16384
 1003 0494 2046     		mov	r0, r4
 1004 0496 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1005              	.LVL122:
 184:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1006              		.loc 1 184 0
 1007 049a 4FF40041 		mov	r1, #32768
 1008 049e 2046     		mov	r0, r4
 1009 04a0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1010              	.LVL123:
 1011 04a4 DBE0     		b	.L19
 1012              	.LVL124:
 1013              	.L28:
 195:Core/Src/robot/robot.cpp **** 		printf("tussock");
 1014              		.loc 1 195 0
 1015 04a6 8348     		ldr	r0, .L47+36
 1016              	.LVL125:
 1017 04a8 FFF7FEFF 		bl	printf
 1018              	.LVL126:
 196:Core/Src/robot/robot.cpp **** 		if (go(steps[5], angles[5]) == true)
 1019              		.loc 1 196 0
 1020 04ac 7E4B     		ldr	r3, .L47+24
 1021 04ae D3ED057A 		vldr.32	s15, [r3, #20]
 1022 04b2 7A4B     		ldr	r3, .L47+12
 1023 04b4 93ED050A 		vldr.32	s0, [r3, #20]
 1024 04b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1025 04bc 17EE900A 		vmov	r0, s15	@ int
 1026 04c0 FFF7FEFF 		bl	_Z2goif
 1027              	.LVL127:
 1028 04c4 0028     		cmp	r0, #0
 1029 04c6 00F0CA80 		beq	.L19
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 33


 198:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1030              		.loc 1 198 0
 1031 04ca FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1032              	.LVL128:
 1033 04ce 0028     		cmp	r0, #0
 1034 04d0 00F0C580 		beq	.L19
 200:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1035              		.loc 1 200 0
 1036 04d4 0723     		movs	r3, #7
 1037 04d6 8AF80030 		strb	r3, [r10]
 202:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1038              		.loc 1 202 0
 1039 04da 714C     		ldr	r4, .L47+16
 1040 04dc 4FF48051 		mov	r1, #4096
 1041 04e0 2046     		mov	r0, r4
 1042 04e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1043              	.LVL129:
 203:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1044              		.loc 1 203 0
 1045 04e6 4FF40051 		mov	r1, #8192
 1046 04ea 2046     		mov	r0, r4
 1047 04ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1048              	.LVL130:
 204:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1049              		.loc 1 204 0
 1050 04f0 4FF48041 		mov	r1, #16384
 1051 04f4 2046     		mov	r0, r4
 1052 04f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1053              	.LVL131:
 205:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1054              		.loc 1 205 0
 1055 04fa 4FF40041 		mov	r1, #32768
 1056 04fe 2046     		mov	r0, r4
 1057 0500 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1058              	.LVL132:
 1059 0504 ABE0     		b	.L19
 1060              	.LVL133:
 1061              	.L29:
 216:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1062              		.loc 1 216 0
 1063 0506 6C48     		ldr	r0, .L47+40
 1064              	.LVL134:
 1065 0508 FFF7FEFF 		bl	printf
 1066              	.LVL135:
 217:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1067              		.loc 1 217 0
 1068 050c 9FED6B8A 		vldr.32	s16, .L47+44
 1069 0510 644C     		ldr	r4, .L47+20
 1070 0512 B0EE480A 		vmov.f32	s0, s16
 1071 0516 2046     		mov	r0, r4
 1072 0518 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1073              	.LVL136:
 218:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1074              		.loc 1 218 0
 1075 051c B0EE480A 		vmov.f32	s0, s16
 1076 0520 04F15800 		add	r0, r4, #88
 1077 0524 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 34


 1078              	.LVL137:
 219:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1079              		.loc 1 219 0
 1080 0528 B0EE480A 		vmov.f32	s0, s16
 1081 052c 6448     		ldr	r0, .L47+48
 1082 052e FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1083              	.LVL138:
 220:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET))
 1084              		.loc 1 220 0
 1085 0532 4FF48061 		mov	r1, #1024
 1086 0536 5A48     		ldr	r0, .L47+16
 1087 0538 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1088              	.LVL139:
 1089 053c 0028     		cmp	r0, #0
 1090 053e 40F08E80 		bne	.L19
 222:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1091              		.loc 1 222 0
 1092 0542 0823     		movs	r3, #8
 1093 0544 8AF80030 		strb	r3, [r10]
 223:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1094              		.loc 1 223 0
 1095 0548 5E4B     		ldr	r3, .L47+52
 1096 054a 93ED007A 		vldr.32	s14, [r3]
 1097 054e DFED5E7A 		vldr.32	s15, .L47+56
 1098 0552 67EE277A 		vmul.f32	s15, s14, s15
 1099 0556 17EE900A 		vmov	r0, s15
 1100 055a FFF7FEFF 		bl	__aeabi_f2d
 1101              	.LVL140:
 1102 055e 4CA3     		adr	r3, .L47
 1103 0560 D3E90023 		ldrd	r2, [r3]
 1104 0564 FFF7FEFF 		bl	__aeabi_ddiv
 1105              	.LVL141:
 1106 0568 FFF7FEFF 		bl	__aeabi_d2f
 1107              	.LVL142:
 1108 056c 4B4B     		ldr	r3, .L47+12
 1109 056e 9861     		str	r0, [r3, #24]	@ float
 224:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1110              		.loc 1 224 0
 1111 0570 564B     		ldr	r3, .L47+60
 1112 0572 0022     		movs	r2, #0
 1113 0574 1A70     		strb	r2, [r3]
 226:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1114              		.loc 1 226 0
 1115 0576 4A4C     		ldr	r4, .L47+16
 1116 0578 4FF48051 		mov	r1, #4096
 1117 057c 2046     		mov	r0, r4
 1118 057e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1119              	.LVL143:
 227:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1120              		.loc 1 227 0
 1121 0582 4FF40051 		mov	r1, #8192
 1122 0586 2046     		mov	r0, r4
 1123 0588 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1124              	.LVL144:
 228:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1125              		.loc 1 228 0
 1126 058c 4FF48041 		mov	r1, #16384
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 35


 1127 0590 2046     		mov	r0, r4
 1128 0592 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1129              	.LVL145:
 229:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1130              		.loc 1 229 0
 1131 0596 4FF40041 		mov	r1, #32768
 1132 059a 2046     		mov	r0, r4
 1133 059c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1134              	.LVL146:
 1135 05a0 5DE0     		b	.L19
 1136              	.LVL147:
 1137              	.L30:
 238:Core/Src/robot/robot.cpp **** 		printf("MOUNTAIN");
 1138              		.loc 1 238 0
 1139 05a2 4B48     		ldr	r0, .L47+64
 1140              	.LVL148:
 1141 05a4 FFF7FEFF 		bl	printf
 1142              	.LVL149:
 239:Core/Src/robot/robot.cpp **** 		if (go(steps[6], angles[6]) == true)
 1143              		.loc 1 239 0
 1144 05a8 3F4B     		ldr	r3, .L47+24
 1145 05aa D3ED067A 		vldr.32	s15, [r3, #24]
 1146 05ae 3B4B     		ldr	r3, .L47+12
 1147 05b0 93ED060A 		vldr.32	s0, [r3, #24]
 1148 05b4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1149 05b8 17EE900A 		vmov	r0, s15	@ int
 1150 05bc FFF7FEFF 		bl	_Z2goif
 1151              	.LVL150:
 1152 05c0 0028     		cmp	r0, #0
 1153 05c2 4CD0     		beq	.L19
 241:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1154              		.loc 1 241 0
 1155 05c4 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1156              	.LVL151:
 1157 05c8 0028     		cmp	r0, #0
 1158 05ca 48D0     		beq	.L19
 243:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1159              		.loc 1 243 0
 1160 05cc 0923     		movs	r3, #9
 1161 05ce 8AF80030 		strb	r3, [r10]
 245:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1162              		.loc 1 245 0
 1163 05d2 334C     		ldr	r4, .L47+16
 1164 05d4 4FF48051 		mov	r1, #4096
 1165 05d8 2046     		mov	r0, r4
 1166 05da FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1167              	.LVL152:
 246:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1168              		.loc 1 246 0
 1169 05de 4FF40051 		mov	r1, #8192
 1170 05e2 2046     		mov	r0, r4
 1171 05e4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1172              	.LVL153:
 247:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1173              		.loc 1 247 0
 1174 05e8 4FF48041 		mov	r1, #16384
 1175 05ec 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 36


 1176 05ee FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1177              	.LVL154:
 248:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1178              		.loc 1 248 0
 1179 05f2 4FF40041 		mov	r1, #32768
 1180 05f6 2046     		mov	r0, r4
 1181 05f8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1182              	.LVL155:
 1183 05fc 2FE0     		b	.L19
 1184              	.LVL156:
 1185              	.L31:
 259:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1186              		.loc 1 259 0
 1187 05fe 3548     		ldr	r0, .L47+68
 1188              	.LVL157:
 1189 0600 FFF7FEFF 		bl	puts
 1190              	.LVL158:
 260:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 1191              		.loc 1 260 0
 1192 0604 9FED2D8A 		vldr.32	s16, .L47+44
 1193 0608 264C     		ldr	r4, .L47+20
 1194 060a B0EE480A 		vmov.f32	s0, s16
 1195 060e 2046     		mov	r0, r4
 1196 0610 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1197              	.LVL159:
 261:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1198              		.loc 1 261 0
 1199 0614 B0EE480A 		vmov.f32	s0, s16
 1200 0618 04F15800 		add	r0, r4, #88
 1201 061c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1202              	.LVL160:
 262:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1203              		.loc 1 262 0
 1204 0620 B0EE480A 		vmov.f32	s0, s16
 1205 0624 2648     		ldr	r0, .L47+48
 1206 0626 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1207              	.LVL161:
 264:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1208              		.loc 1 264 0
 1209 062a 1D4C     		ldr	r4, .L47+16
 1210 062c 4FF48051 		mov	r1, #4096
 1211 0630 2046     		mov	r0, r4
 1212 0632 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1213              	.LVL162:
 265:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1214              		.loc 1 265 0
 1215 0636 4FF40051 		mov	r1, #8192
 1216 063a 2046     		mov	r0, r4
 1217 063c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1218              	.LVL163:
 266:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1219              		.loc 1 266 0
 1220 0640 4FF48041 		mov	r1, #16384
 1221 0644 2046     		mov	r0, r4
 1222 0646 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1223              	.LVL164:
 267:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 37


 1224              		.loc 1 267 0
 1225 064a 4FF40041 		mov	r1, #32768
 1226 064e 2046     		mov	r0, r4
 1227 0650 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1228              	.LVL165:
 268:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1229              		.loc 1 268 0
 1230 0654 0122     		movs	r2, #1
 1231 0656 0421     		movs	r1, #4
 1232 0658 1F48     		ldr	r0, .L47+72
 1233 065a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1234              	.LVL166:
 1235              	.L19:
 1236              	.LBE131:
 1237              	.LBE130:
 278:Core/Src/robot/robot.cpp **** }
 1238              		.loc 1 278 0
 1239 065e 08B0     		add	sp, sp, #32
 1240              	.LCFI4:
 1241              		.cfi_remember_state
 1242              		.cfi_def_cfa_offset 40
 1243              		@ sp needed
 1244 0660 BDEC028B 		vldm	sp!, {d8}
 1245              	.LCFI5:
 1246              		.cfi_restore 80
 1247              		.cfi_restore 81
 1248              		.cfi_def_cfa_offset 32
 1249 0664 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1250              	.LVL167:
 1251              	.L32:
 1252              	.LCFI6:
 1253              		.cfi_restore_state
 1254              	.LBB157:
 1255              	.LBB156:
 273:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1256              		.loc 1 273 0
 1257 0668 0E4C     		ldr	r4, .L47+20
 1258 066a B2EE040A 		vmov.f32	s0, #1.0e+1
 1259 066e 2046     		mov	r0, r4
 1260              	.LVL168:
 1261 0670 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1262              	.LVL169:
 274:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1263              		.loc 1 274 0
 1264 0674 B2EE040A 		vmov.f32	s0, #1.0e+1
 1265 0678 04F15800 		add	r0, r4, #88
 1266 067c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1267              	.LVL170:
 275:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1268              		.loc 1 275 0
 1269 0680 9FED0E0A 		vldr.32	s0, .L47+44
 1270 0684 0E48     		ldr	r0, .L47+48
 1271 0686 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1272              	.LVL171:
 1273              	.LBE156:
 1274              	.LBE157:
 278:Core/Src/robot/robot.cpp **** }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 38


 1275              		.loc 1 278 0
 1276 068a E8E7     		b	.L19
 1277              	.L48:
 1278 068c AFF30080 		.align	3
 1279              	.L47:
 1280 0690 182D4454 		.word	1413754136
 1281 0694 FB210940 		.word	1074340347
 1282 0698 84000000 		.word	.LC5
 1283 069c 00000000 		.word	.LANCHOR4
 1284 06a0 000C0240 		.word	1073875968
 1285 06a4 00000000 		.word	leg
 1286 06a8 00000000 		.word	.LANCHOR3
 1287 06ac 90000000 		.word	.LC6
 1288 06b0 98000000 		.word	.LC7
 1289 06b4 A0000000 		.word	.LC8
 1290 06b8 A8000000 		.word	.LC9
 1291 06bc 00000000 		.word	0
 1292 06c0 00000000 		.word	steering
 1293 06c4 00000000 		.word	robot_angle
 1294 06c8 00003443 		.word	1127481344
 1295 06cc 00000000 		.word	.LANCHOR2
 1296 06d0 B4000000 		.word	.LC10
 1297 06d4 C0000000 		.word	.LC11
 1298 06d8 00000240 		.word	1073872896
 1299              		.cfi_endproc
 1300              	.LFE503:
 1302              		.section	.text._Z4playv,"ax",%progbits
 1303              		.align	1
 1304              		.global	_Z4playv
 1305              		.syntax unified
 1306              		.thumb
 1307              		.thumb_func
 1308              		.fpu fpv4-sp-d16
 1310              	_Z4playv:
 1311              	.LFB504:
 281:Core/Src/robot/robot.cpp **** {
 1312              		.loc 1 281 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 0
 1315              		@ frame_needed = 0, uses_anonymous_args = 0
 1316 0000 10B5     		push	{r4, lr}
 1317              	.LCFI7:
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 4, -8
 1320              		.cfi_offset 14, -4
 282:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1321              		.loc 1 282 0
 1322 0002 0948     		ldr	r0, .L51
 1323 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1324              	.LVL172:
 1325              	.LBB158:
 1326              	.LBB159:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1327              		.loc 3 46 0
 1328 0008 084C     		ldr	r4, .L51+4
 1329 000a 2046     		mov	r0, r4
 1330 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 39


 1331              	.LVL173:
 1332              	.LBE159:
 1333              	.LBE158:
 283:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1334              		.loc 1 283 0
 1335 0010 074B     		ldr	r3, .L51+8
 1336 0012 83ED000A 		vstr.32	s0, [r3]
 1337              	.LVL174:
 1338              	.LBB160:
 1339              	.LBB161:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1340              		.loc 3 46 0
 1341 0016 04F15800 		add	r0, r4, #88
 1342 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1343              	.LVL175:
 1344              	.LBE161:
 1345              	.LBE160:
 284:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1346              		.loc 1 284 0
 1347 001e 054B     		ldr	r3, .L51+12
 1348 0020 83ED000A 		vstr.32	s0, [r3]
 286:Core/Src/robot/robot.cpp **** }
 1349              		.loc 1 286 0
 1350 0024 0120     		movs	r0, #1
 1351 0026 10BD     		pop	{r4, pc}
 1352              	.L52:
 1353              		.align	2
 1354              	.L51:
 1355 0028 00000000 		.word	.LANCHOR0
 1356 002c 3C000000 		.word	leg+60
 1357 0030 00000000 		.word	.LANCHOR10
 1358 0034 00000000 		.word	.LANCHOR11
 1359              		.cfi_endproc
 1360              	.LFE504:
 1362              		.global	angles
 1363              		.global	steps
 1364              		.global	omega1
 1365              		.global	omega0
 1366              		.global	BACK_PROXIMITY_FLAG
 1367              		.global	FRONT_PROXIMITY_FLAG
 1368              		.global	USE_IMU_FLAG
 1369              		.global	GEREGE_FLAG
 1370              		.global	ROBOT_START_FLAG
 1371              		.global	robo_state
 1372              		.section	.bss.BACK_PROXIMITY_FLAG,"aw",%nobits
 1373              		.set	.LANCHOR8,. + 0
 1376              	BACK_PROXIMITY_FLAG:
 1377 0000 00       		.space	1
 1378              		.section	.bss.FRONT_PROXIMITY_FLAG,"aw",%nobits
 1379              		.set	.LANCHOR9,. + 0
 1382              	FRONT_PROXIMITY_FLAG:
 1383 0000 00       		.space	1
 1384              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1385              		.set	.LANCHOR1,. + 0
 1388              	GEREGE_FLAG:
 1389 0000 00       		.space	1
 1390              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 40


 1391              		.set	.LANCHOR2,. + 0
 1394              	ROBOT_START_FLAG:
 1395 0000 00       		.space	1
 1396              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1397              		.align	2
 1398              		.set	.LANCHOR6,. + 0
 1401              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1402 0000 00000000 		.space	4
 1403              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1404              		.align	2
 1405              		.set	.LANCHOR7,. + 0
 1408              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1409 0000 00000000 		.space	4
 1410              		.section	.bss.omega0,"aw",%nobits
 1411              		.align	2
 1412              		.set	.LANCHOR10,. + 0
 1415              	omega0:
 1416 0000 00000000 		.space	4
 1417              		.section	.bss.omega1,"aw",%nobits
 1418              		.align	2
 1419              		.set	.LANCHOR11,. + 0
 1422              	omega1:
 1423 0000 00000000 		.space	4
 1424              		.section	.bss.robo_state,"aw",%nobits
 1425              		.set	.LANCHOR0,. + 0
 1428              	robo_state:
 1429 0000 00       		.space	1
 1430              		.section	.data.USE_IMU_FLAG,"aw",%progbits
 1433              	USE_IMU_FLAG:
 1434 0000 01       		.byte	1
 1435              		.section	.data._ZZ11start_RobotP12Robot_StatesE9WAIT_FLAG,"aw",%progbits
 1436              		.set	.LANCHOR5,. + 0
 1439              	_ZZ11start_RobotP12Robot_StatesE9WAIT_FLAG:
 1440 0000 01       		.byte	1
 1441              		.section	.data.angles,"aw",%progbits
 1442              		.align	2
 1443              		.set	.LANCHOR4,. + 0
 1446              	angles:
 1447 0000 00000000 		.word	0
 1448 0004 00003442 		.word	1110704128
 1449 0008 00003442 		.word	1110704128
 1450 000c 00003442 		.word	1110704128
 1451 0010 00000000 		.word	0
 1452 0014 00000000 		.word	0
 1453 0018 0000B4C2 		.word	-1028390912
 1454              		.section	.data.steps,"aw",%progbits
 1455              		.align	2
 1456              		.set	.LANCHOR3,. + 0
 1459              	steps:
 1460 0000 0000C040 		.word	1086324736
 1461 0004 00005041 		.word	1095761920
 1462 0008 00008841 		.word	1099431936
 1463 000c 00009841 		.word	1100480512
 1464 0010 0000C041 		.word	1103101952
 1465 0014 0000D841 		.word	1104674816
 1466 0018 00001042 		.word	1108344832
 1467              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 41


 1468              		.align	2
 1469              	.LC0:
 1470 0000 0A095761 		.ascii	"\012\011Waiting_to_start\011\000"
 1470      6974696E 
 1470      675F746F 
 1470      5F737461 
 1470      72740900 
 1471              	.LC1:
 1472 0014 6C656730 		.ascii	"leg0_angle = %d\011leg1_angle = %d\011steering_angl"
 1472      5F616E67 
 1472      6C65203D 
 1472      20256409 
 1472      6C656731 
 1473 0041 65203D20 		.ascii	"e = %d\011\011robot_angle = %d\011\000"
 1473      25640909 
 1473      726F626F 
 1473      745F616E 
 1473      676C6520 
 1474 005b 00       		.space	1
 1475              	.LC2:
 1476 005c 0A0A0A09 		.ascii	"\012\012\012\011\011MARCHMARCHMARCH\012\012\000"
 1476      094D4152 
 1476      43484D41 
 1476      5243484D 
 1476      41524348 
 1477 0073 00       		.space	1
 1478              	.LC3:
 1479 0074 4D617263 		.ascii	"March\000"
 1479      6800
 1480 007a 0000     		.space	2
 1481              	.LC4:
 1482 007c 5475726E 		.ascii	"Turn 45\000"
 1482      20343500 
 1483              	.LC5:
 1484 0084 53616E64 		.ascii	"Sand dune\000"
 1484      2064756E 
 1484      6500
 1485 008e 0000     		.space	2
 1486              	.LC6:
 1487 0090 53746174 		.ascii	"State D\000"
 1487      65204400 
 1488              	.LC7:
 1489 0098 5475726E 		.ascii	"Turn 90\000"
 1489      20393000 
 1490              	.LC8:
 1491 00a0 74757373 		.ascii	"tussock\000"
 1491      6F636B00 
 1492              	.LC9:
 1493 00a8 0A426173 		.ascii	"\012Base camp\000"
 1493      65206361 
 1493      6D7000
 1494 00b3 00       		.space	1
 1495              	.LC10:
 1496 00b4 4D4F554E 		.ascii	"MOUNTAIN\000"
 1496      5441494E 
 1496      00
 1497 00bd 000000   		.space	3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 42


 1498              	.LC11:
 1499 00c0 0A55554B 		.ascii	"\012UUKHAI\000"
 1499      48414900 
 1500              		.text
 1501              	.Letext0:
 1502              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1503              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1504              		.file 7 "Core/Inc/sys/FreeRTOSConfig.h"
 1505              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1506              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1507              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1508              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1509              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1510              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1511              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1512              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1513              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1514              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1515              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1516              		.file 19 "Core/Inc/periphs/tim.h"
 1517              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1518              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1519              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1520              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1521              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1522              		.file 25 "Core/Inc/devs/motor.h"
 1523              		.file 26 "Core/Inc/devs/encoder.h"
 1524              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1525              		.file 28 "Core/Inc/devs/limit_switch.h"
 1526              		.file 29 "Core/Inc/robot/robot.h"
 1527              		.file 30 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1528              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1529              		.file 32 "Core/Inc/robot/robot_functions.h"
 1530              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:302    .text._Z11zone_selectv:00000168 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:314    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:321    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:347    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:354    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:388    .text._Z11start_RobotP12Robot_States:00000018 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:399    .text._Z11start_RobotP12Robot_States:0000002e $t
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:812    .text._Z11start_RobotP12Robot_States:000002f0 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:841    .text._Z11start_RobotP12Robot_States:00000358 $t
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1280   .text._Z11start_RobotP12Robot_States:00000690 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1303   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1310   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1355   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1446   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1459   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1422   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1415   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1376   .bss.BACK_PROXIMITY_FLAG:00000000 BACK_PROXIMITY_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1382   .bss.FRONT_PROXIMITY_FLAG:00000000 FRONT_PROXIMITY_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1433   .data.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1388   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1394   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1428   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1377   .bss.BACK_PROXIMITY_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1383   .bss.FRONT_PROXIMITY_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1389   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1395   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1397   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1401   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1404   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1408   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1411   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1418   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1429   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1439   .data._ZZ11start_RobotP12Robot_StatesE9WAIT_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE9WAIT_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1442   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1455   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s:1468   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
leg
initial_angle
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_d2f
printf
_ZN7encoder9get_angleEv
_ZN7encoder16get_actual_angleEv
HAL_GPIO_WritePin
HAL_GetTick
_Z11getup_n_runv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccgU5cXu.s 			page 44


puts
_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
__cxa_guard_acquire
__cxa_guard_release
_Z2goif
HAL_GPIO_TogglePin
curr_angle
steering
robot_angle
_Z23initialize_leg_positionv
_ZN8steering9set_omegaEf
_ZN7encoder9get_omegaEv
