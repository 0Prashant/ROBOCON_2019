ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB499:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = true;
  15:Core/Src/robot/robot.cpp **** float omega0 = 0;
  16:Core/Src/robot/robot.cpp **** float omega1 = 0;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** int steps[7] = {6, 10, 15, 17, 22, 24, 31};
  19:Core/Src/robot/robot.cpp **** float angles[7] = {0 , 45, 45, 60, -10, 0, -90};
  20:Core/Src/robot/robot.cpp **** 
  21:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  22:Core/Src/robot/robot.cpp **** {
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
  24:Core/Src/robot/robot.cpp **** 	{
  25:Core/Src/robot/robot.cpp **** 	case HOME:
  26:Core/Src/robot/robot.cpp **** 	{
  27:Core/Src/robot/robot.cpp **** 		/**
  28:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  29:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
  30:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  31:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  33:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  34:Core/Src/robot/robot.cpp **** 			*/
  35:Core/Src/robot/robot.cpp **** 
  36:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
  39:Core/Src/robot/robot.cpp **** 		{
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
  41:Core/Src/robot/robot.cpp **** 		}
  42:Core/Src/robot/robot.cpp **** 		else
  43:Core/Src/robot/robot.cpp **** 		{
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  48:Core/Src/robot/robot.cpp **** 
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  50:Core/Src/robot/robot.cpp **** 		{
  51:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  52:Core/Src/robot/robot.cpp **** 			// initial_angle.setZ(initial_angle.getZ());
  53:Core/Src/robot/robot.cpp **** 			printf("\t%d\t", (int)initial_angle.getZ());
  54:Core/Src/robot/robot.cpp **** 		}
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
  56:Core/Src/robot/robot.cpp **** 		{
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  59:Core/Src/robot/robot.cpp **** 		}
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  66:Core/Src/robot/robot.cpp **** 		{
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  70:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  71:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
  72:Core/Src/robot/robot.cpp **** 			{
  73:Core/Src/robot/robot.cpp **** 				zone_select();
  74:Core/Src/robot/robot.cpp **** 			}
  75:Core/Src/robot/robot.cpp **** 		}
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
  77:Core/Src/robot/robot.cpp **** 		{
  78:Core/Src/robot/robot.cpp **** 
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  85:Core/Src/robot/robot.cpp **** 
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
  88:Core/Src/robot/robot.cpp **** 			{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 3


  89:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
  90:Core/Src/robot/robot.cpp **** 				{
  91:Core/Src/robot/robot.cpp **** 					zone_select();
  92:Core/Src/robot/robot.cpp **** 				}
  93:Core/Src/robot/robot.cpp **** 			}
  94:Core/Src/robot/robot.cpp **** 		}
  95:Core/Src/robot/robot.cpp **** 
  96:Core/Src/robot/robot.cpp **** 		else
  97:Core/Src/robot/robot.cpp **** 		{
  98:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  99:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 100:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 101:Core/Src/robot/robot.cpp **** 		}
 102:Core/Src/robot/robot.cpp **** 	}
 103:Core/Src/robot/robot.cpp **** 	break;
 104:Core/Src/robot/robot.cpp **** 
 105:Core/Src/robot/robot.cpp **** 	case MARCH:
 106:Core/Src/robot/robot.cpp **** 	{
 107:Core/Src/robot/robot.cpp **** 		/*
 108:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
 109:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
 110:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
 111:Core/Src/robot/robot.cpp **** 		*/
 112:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 113:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 114:Core/Src/robot/robot.cpp **** 		{
 115:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 120:Core/Src/robot/robot.cpp **** 		}
 121:Core/Src/robot/robot.cpp **** 	}
 122:Core/Src/robot/robot.cpp **** 	break;
 123:Core/Src/robot/robot.cpp **** 
 124:Core/Src/robot/robot.cpp **** 	case TURN_45:
 125:Core/Src/robot/robot.cpp **** 	{
 126:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 127:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 128:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 129:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 130:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 131:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 132:Core/Src/robot/robot.cpp **** 		*/
 133:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 134:Core/Src/robot/robot.cpp **** 
 135:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 137:Core/Src/robot/robot.cpp **** 		{
 138:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 139:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 142:Core/Src/robot/robot.cpp **** 
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 4


 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 147:Core/Src/robot/robot.cpp **** 		}
 148:Core/Src/robot/robot.cpp **** 		//*/
 149:Core/Src/robot/robot.cpp **** 	}
 150:Core/Src/robot/robot.cpp **** 	break;
 151:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 152:Core/Src/robot/robot.cpp **** 	{
 153:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 154:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 155:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 156:Core/Src/robot/robot.cpp **** 			*/
 157:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 158:Core/Src/robot/robot.cpp **** 
 159:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 161:Core/Src/robot/robot.cpp **** 		{
 162:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 163:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 164:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 165:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 166:Core/Src/robot/robot.cpp **** 
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 171:Core/Src/robot/robot.cpp **** 		}
 172:Core/Src/robot/robot.cpp **** 		//*/
 173:Core/Src/robot/robot.cpp **** 	}
 174:Core/Src/robot/robot.cpp **** 	break;
 175:Core/Src/robot/robot.cpp **** 	case STATE_D:
 176:Core/Src/robot/robot.cpp **** 	{
 177:Core/Src/robot/robot.cpp **** 		/*
 178:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 179:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 180:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 181:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 182:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 183:Core/Src/robot/robot.cpp **** 		{
 184:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 185:Core/Src/robot/robot.cpp **** 
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 190:Core/Src/robot/robot.cpp **** 		}
 191:Core/Src/robot/robot.cpp **** 	}
 192:Core/Src/robot/robot.cpp **** 	break;
 193:Core/Src/robot/robot.cpp **** 
 194:Core/Src/robot/robot.cpp **** 	case TURN_90:
 195:Core/Src/robot/robot.cpp **** 	{
 196:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 197:Core/Src/robot/robot.cpp **** 			no of steps = 
 198:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 199:Core/Src/robot/robot.cpp **** 			*/
 200:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 201:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 202:Core/Src/robot/robot.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 5


 203:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 204:Core/Src/robot/robot.cpp **** 
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 209:Core/Src/robot/robot.cpp **** 		}
 210:Core/Src/robot/robot.cpp **** 	}
 211:Core/Src/robot/robot.cpp **** 	break;
 212:Core/Src/robot/robot.cpp **** 
 213:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 214:Core/Src/robot/robot.cpp **** 	{
 215:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 216:Core/Src/robot/robot.cpp **** 			robot stops 
 217:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 218:Core/Src/robot/robot.cpp **** 			*/
 219:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 220:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 221:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 222:Core/Src/robot/robot.cpp **** 		{
 223:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 224:Core/Src/robot/robot.cpp **** 			{
 225:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 226:Core/Src/robot/robot.cpp **** 			}
 227:Core/Src/robot/robot.cpp **** 		}
 228:Core/Src/robot/robot.cpp **** 		else
 229:Core/Src/robot/robot.cpp **** 		{
 230:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 231:Core/Src/robot/robot.cpp **** 			{
 232:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 233:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 238:Core/Src/robot/robot.cpp **** 			}
 239:Core/Src/robot/robot.cpp **** 		}
 240:Core/Src/robot/robot.cpp **** 	}
 241:Core/Src/robot/robot.cpp **** 	break;
 242:Core/Src/robot/robot.cpp **** 
 243:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 244:Core/Src/robot/robot.cpp **** 	{
 245:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 246:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 247:Core/Src/robot/robot.cpp **** 			*/
 248:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 249:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 250:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 251:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 254:Core/Src/robot/robot.cpp **** 		    ROBOT_START_FLAG)
 255:Core/Src/robot/robot.cpp **** 		{
 256:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 257:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 258:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 259:Core/Src/robot/robot.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 261:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 264:Core/Src/robot/robot.cpp **** 		}
 265:Core/Src/robot/robot.cpp **** 	}
 266:Core/Src/robot/robot.cpp **** 	break;
 267:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 268:Core/Src/robot/robot.cpp **** 	{
 269:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 270:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 271:Core/Src/robot/robot.cpp **** 			*/
 272:Core/Src/robot/robot.cpp **** 
 273:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 274:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 275:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 276:Core/Src/robot/robot.cpp **** 		{
 277:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 278:Core/Src/robot/robot.cpp **** 			{
 279:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 280:Core/Src/robot/robot.cpp **** 			}
 281:Core/Src/robot/robot.cpp **** 		}
 282:Core/Src/robot/robot.cpp **** 		else
 283:Core/Src/robot/robot.cpp **** 		{
 284:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 285:Core/Src/robot/robot.cpp **** 			{
 286:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 287:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 288:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 289:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 290:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 291:Core/Src/robot/robot.cpp **** 			}
 292:Core/Src/robot/robot.cpp **** 		}
 293:Core/Src/robot/robot.cpp **** 	}
 294:Core/Src/robot/robot.cpp **** 
 295:Core/Src/robot/robot.cpp **** 	break;
 296:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 297:Core/Src/robot/robot.cpp **** 	{
 298:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 299:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 300:Core/Src/robot/robot.cpp **** 			*/
 301:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 305:Core/Src/robot/robot.cpp **** 
 306:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 307:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 308:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 309:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 311:Core/Src/robot/robot.cpp **** 	}
 312:Core/Src/robot/robot.cpp **** 	break;
 313:Core/Src/robot/robot.cpp **** 	case TUNE:
 314:Core/Src/robot/robot.cpp **** 	{
 315:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 316:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 7


 317:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 318:Core/Src/robot/robot.cpp **** 	}
 319:Core/Src/robot/robot.cpp **** 	}
 320:Core/Src/robot/robot.cpp **** }
 321:Core/Src/robot/robot.cpp **** 
 322:Core/Src/robot/robot.cpp **** bool play()
 323:Core/Src/robot/robot.cpp **** {
 324:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 325:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 326:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 327:Core/Src/robot/robot.cpp **** 	return true;
 328:Core/Src/robot/robot.cpp **** }
 329:Core/Src/robot/robot.cpp **** 
 330:Core/Src/robot/robot.cpp **** void zone_select(void)
 331:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 331 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LBB52:
 332:Core/Src/robot/robot.cpp **** 
 333:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 333 0
  39 0002 4FF48041 		mov	r1, #16384
  40 0006 6948     		ldr	r0, .L17
  41 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000c 28BB     		cbnz	r0, .L2
 334:Core/Src/robot/robot.cpp **** 	{
 335:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 335 0
  45 000e 0123     		movs	r3, #1
  46 0010 674A     		ldr	r2, .L17+4
  47 0012 1370     		strb	r3, [r2]
 336:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 336 0
  49 0014 674A     		ldr	r2, .L17+8
  50 0016 1370     		strb	r3, [r2]
 337:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 337 0
  52 0018 6748     		ldr	r0, .L17+12
  53 001a FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE52:
  57              	.LBB62:
 338:Core/Src/robot/robot.cpp **** 	}
 339:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 340:Core/Src/robot/robot.cpp **** 	{
 341:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
 342:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 343:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 8


 344:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 345:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 346:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 347:Core/Src/robot/robot.cpp **** 		{
 348:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 349:Core/Src/robot/robot.cpp **** 		}
 350:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 351:Core/Src/robot/robot.cpp **** 	}
 352:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 353:Core/Src/robot/robot.cpp **** 	{
 354:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 355:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 356:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 357:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 358:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 359:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 360:Core/Src/robot/robot.cpp **** 		{
 361:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 362:Core/Src/robot/robot.cpp **** 		}
 363:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 364:Core/Src/robot/robot.cpp **** 	}
 365:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 366:Core/Src/robot/robot.cpp **** 	{
 367:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 368:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 369:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 370:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 371:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 372:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 373:Core/Src/robot/robot.cpp **** 		{
 374:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 375:Core/Src/robot/robot.cpp **** 		}
 376:Core/Src/robot/robot.cpp **** 	}
 377:Core/Src/robot/robot.cpp **** 	else
 378:Core/Src/robot/robot.cpp **** 	{
 379:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 380:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 381:Core/Src/robot/robot.cpp **** 	}
 382:Core/Src/robot/robot.cpp **** 
 383:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 383 0
  59 001e 4FF48061 		mov	r1, #1024
  60 0022 6248     		ldr	r0, .L17
  61 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0028 0028     		cmp	r0, #0
  64 002a 40F08280 		bne	.L10
  65              	.LBB63:
 384:Core/Src/robot/robot.cpp **** 	{
 385:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 385 0
  67 002e 6348     		ldr	r0, .L17+16
  68 0030 FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB64:
 386:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 386 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 9


  72 0034 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L12:
  75              		.loc 1 386 0 is_stmt 0 discriminator 3
  76 0036 062A     		cmp	r2, #6
  77 0038 00F3B680 		bgt	.L1
 387:Core/Src/robot/robot.cpp **** 		{
 388:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 388 0 is_stmt 1 discriminator 2
  79 003c 604B     		ldr	r3, .L17+20
  80 003e 03EB8203 		add	r3, r3, r2, lsl #2
  81 0042 D3ED007A 		vldr.32	s15, [r3]
  82 0046 F1EE677A 		vneg.f32	s15, s15
 389:Core/Src/robot/robot.cpp **** 			angles[i] -= 7.5;
  83              		.loc 1 389 0 discriminator 2
  84 004a B1EE0E7A 		vmov.f32	s14, #7.5e+0
  85 004e 77EEC77A 		vsub.f32	s15, s15, s14
  86 0052 C3ED007A 		vstr.32	s15, [r3]
 386:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  87              		.loc 1 386 0 discriminator 2
  88 0056 0132     		adds	r2, r2, #1
  89              	.LVL5:
  90 0058 EDE7     		b	.L12
  91              	.LVL6:
  92              	.L2:
  93              	.LBE64:
  94              	.LBE63:
  95              	.LBE62:
  96              	.LBB70:
  97              	.LBB53:
 339:Core/Src/robot/robot.cpp **** 	{
  98              		.loc 1 339 0
  99 005a 1021     		movs	r1, #16
 100 005c 5948     		ldr	r0, .L17+24
 101 005e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 102              	.LVL7:
 103 0062 E0B9     		cbnz	r0, .L4
 104              	.LBB54:
 341:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 105              		.loc 1 341 0
 106 0064 5848     		ldr	r0, .L17+28
 107 0066 FFF7FEFF 		bl	printf
 108              	.LVL8:
 342:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
 109              		.loc 1 342 0
 110 006a 514B     		ldr	r3, .L17+4
 111 006c 0222     		movs	r2, #2
 112 006e 1A70     		strb	r2, [r3]
 343:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 113              		.loc 1 343 0
 114 0070 564B     		ldr	r3, .L17+32
 115 0072 5B68     		ldr	r3, [r3, #4]
 116 0074 023B     		subs	r3, r3, #2
 117 0076 564A     		ldr	r2, .L17+36
 118 0078 1361     		str	r3, [r2, #16]
 344:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 119              		.loc 1 344 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 10


 120 007a 9366     		str	r3, [r2, #104]
 345:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 121              		.loc 1 345 0
 122 007c 504B     		ldr	r3, .L17+20
 123 007e 93ED017A 		vldr.32	s14, [r3, #4]
 124              	.LVL9:
 125              	.LBB55:
 346:Core/Src/robot/robot.cpp **** 		{
 126              		.loc 1 346 0
 127 0082 0022     		movs	r2, #0
 128              	.LVL10:
 129              	.L5:
 346:Core/Src/robot/robot.cpp **** 		{
 130              		.loc 1 346 0 is_stmt 0 discriminator 3
 131 0084 062A     		cmp	r2, #6
 132 0086 CADC     		bgt	.L3
 348:Core/Src/robot/robot.cpp **** 		}
 133              		.loc 1 348 0 is_stmt 1 discriminator 2
 134 0088 4D4B     		ldr	r3, .L17+20
 135 008a 03EB8203 		add	r3, r3, r2, lsl #2
 136 008e D3ED007A 		vldr.32	s15, [r3]
 137 0092 77EEC77A 		vsub.f32	s15, s15, s14
 138 0096 C3ED007A 		vstr.32	s15, [r3]
 346:Core/Src/robot/robot.cpp **** 		{
 139              		.loc 1 346 0 discriminator 2
 140 009a 0132     		adds	r2, r2, #1
 141              	.LVL11:
 142 009c F2E7     		b	.L5
 143              	.LVL12:
 144              	.L4:
 145              	.LBE55:
 146              	.LBE54:
 147              	.LBB56:
 352:Core/Src/robot/robot.cpp **** 	{
 148              		.loc 1 352 0
 149 009e 4FF48051 		mov	r1, #4096
 150 00a2 4248     		ldr	r0, .L17
 151 00a4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 152              	.LVL13:
 153 00a8 D8B9     		cbnz	r0, .L6
 154              	.LBB57:
 354:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 155              		.loc 1 354 0
 156 00aa 4A48     		ldr	r0, .L17+40
 157 00ac FFF7FEFF 		bl	printf
 158              	.LVL14:
 355:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 159              		.loc 1 355 0
 160 00b0 3F4B     		ldr	r3, .L17+4
 161 00b2 0422     		movs	r2, #4
 162 00b4 1A70     		strb	r2, [r3]
 356:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 163              		.loc 1 356 0
 164 00b6 454B     		ldr	r3, .L17+32
 165 00b8 9A68     		ldr	r2, [r3, #8]
 166 00ba 454B     		ldr	r3, .L17+36
 167 00bc 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 11


 357:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 168              		.loc 1 357 0
 169 00be 9A66     		str	r2, [r3, #104]
 358:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 170              		.loc 1 358 0
 171 00c0 3F4B     		ldr	r3, .L17+20
 172 00c2 93ED027A 		vldr.32	s14, [r3, #8]
 173              	.LVL15:
 174              	.LBB58:
 359:Core/Src/robot/robot.cpp **** 		{
 175              		.loc 1 359 0
 176 00c6 0022     		movs	r2, #0
 177              	.LVL16:
 178              	.L7:
 359:Core/Src/robot/robot.cpp **** 		{
 179              		.loc 1 359 0 is_stmt 0 discriminator 3
 180 00c8 062A     		cmp	r2, #6
 181 00ca A8DC     		bgt	.L3
 361:Core/Src/robot/robot.cpp **** 		}
 182              		.loc 1 361 0 is_stmt 1 discriminator 2
 183 00cc 3C4B     		ldr	r3, .L17+20
 184 00ce 03EB8203 		add	r3, r3, r2, lsl #2
 185 00d2 D3ED007A 		vldr.32	s15, [r3]
 186 00d6 77EEC77A 		vsub.f32	s15, s15, s14
 187 00da C3ED007A 		vstr.32	s15, [r3]
 359:Core/Src/robot/robot.cpp **** 		{
 188              		.loc 1 359 0 discriminator 2
 189 00de 0132     		adds	r2, r2, #1
 190              	.LVL17:
 191 00e0 F2E7     		b	.L7
 192              	.LVL18:
 193              	.L6:
 194              	.LBE58:
 195              	.LBE57:
 196              	.LBB59:
 365:Core/Src/robot/robot.cpp **** 	{
 197              		.loc 1 365 0
 198 00e2 0221     		movs	r1, #2
 199 00e4 3C48     		ldr	r0, .L17+44
 200 00e6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL19:
 202 00ea D8B9     		cbnz	r0, .L8
 203              	.LBB60:
 367:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 204              		.loc 1 367 0
 205 00ec 3B48     		ldr	r0, .L17+48
 206 00ee FFF7FEFF 		bl	printf
 207              	.LVL20:
 368:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 208              		.loc 1 368 0
 209 00f2 2F4B     		ldr	r3, .L17+4
 210 00f4 0722     		movs	r2, #7
 211 00f6 1A70     		strb	r2, [r3]
 369:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 212              		.loc 1 369 0
 213 00f8 344B     		ldr	r3, .L17+32
 214 00fa 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 12


 215 00fc 344B     		ldr	r3, .L17+36
 216 00fe 1A61     		str	r2, [r3, #16]
 370:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 217              		.loc 1 370 0
 218 0100 9A66     		str	r2, [r3, #104]
 371:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 219              		.loc 1 371 0
 220 0102 2F4B     		ldr	r3, .L17+20
 221 0104 93ED057A 		vldr.32	s14, [r3, #20]
 222              	.LVL21:
 223              	.LBB61:
 372:Core/Src/robot/robot.cpp **** 		{
 224              		.loc 1 372 0
 225 0108 0022     		movs	r2, #0
 226              	.LVL22:
 227              	.L9:
 372:Core/Src/robot/robot.cpp **** 		{
 228              		.loc 1 372 0 is_stmt 0 discriminator 3
 229 010a 062A     		cmp	r2, #6
 230 010c 87DC     		bgt	.L3
 374:Core/Src/robot/robot.cpp **** 		}
 231              		.loc 1 374 0 is_stmt 1 discriminator 2
 232 010e 2C4B     		ldr	r3, .L17+20
 233 0110 03EB8203 		add	r3, r3, r2, lsl #2
 234 0114 D3ED007A 		vldr.32	s15, [r3]
 235 0118 77EEC77A 		vsub.f32	s15, s15, s14
 236 011c C3ED007A 		vstr.32	s15, [r3]
 372:Core/Src/robot/robot.cpp **** 		{
 237              		.loc 1 372 0 discriminator 2
 238 0120 0132     		adds	r2, r2, #1
 239              	.LVL23:
 240 0122 F2E7     		b	.L9
 241              	.LVL24:
 242              	.L8:
 243              	.LBE61:
 244              	.LBE60:
 379:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 245              		.loc 1 379 0
 246 0124 2E48     		ldr	r0, .L17+52
 247 0126 FFF7FEFF 		bl	printf
 248              	.LVL25:
 380:Core/Src/robot/robot.cpp **** 	}
 249              		.loc 1 380 0
 250 012a 214B     		ldr	r3, .L17+4
 251 012c 0122     		movs	r2, #1
 252 012e 1A70     		strb	r2, [r3]
 253 0130 75E7     		b	.L3
 254              	.L10:
 255              	.LBE59:
 256              	.LBE56:
 257              	.LBE53:
 258              	.LBE70:
 259              	.LBB71:
 260              	.LBB65:
 390:Core/Src/robot/robot.cpp **** 			// printf("\n\t angles= %d",(int)(angles[i]));
 391:Core/Src/robot/robot.cpp **** 		}
 392:Core/Src/robot/robot.cpp **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 13


 393:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
 261              		.loc 1 393 0
 262 0132 1021     		movs	r1, #16
 263 0134 2B48     		ldr	r0, .L17+56
 264 0136 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 265              	.LVL26:
 266 013a C8B9     		cbnz	r0, .L13
 267              	.LBB66:
 394:Core/Src/robot/robot.cpp **** 	{
 395:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");for (int i = 0; i < 7; i++)
 268              		.loc 1 395 0
 269 013c 2A48     		ldr	r0, .L17+60
 270 013e FFF7FEFF 		bl	printf
 271              	.LVL27:
 272              	.LBB67:
 273 0142 0024     		movs	r4, #0
 274              	.LVL28:
 275              	.L14:
 276              		.loc 1 395 0 is_stmt 0 discriminator 3
 277 0144 062C     		cmp	r4, #6
 278 0146 2FDC     		bgt	.L1
 396:Core/Src/robot/robot.cpp **** 		{
 397:Core/Src/robot/robot.cpp **** 			angles[i] -= 7.5;
 279              		.loc 1 397 0 is_stmt 1 discriminator 2
 280 0148 1D4B     		ldr	r3, .L17+20
 281 014a 03EB8403 		add	r3, r3, r4, lsl #2
 282 014e D3ED007A 		vldr.32	s15, [r3]
 283 0152 B1EE0E7A 		vmov.f32	s14, #7.5e+0
 284 0156 77EEC77A 		vsub.f32	s15, s15, s14
 285 015a C3ED007A 		vstr.32	s15, [r3]
 398:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 286              		.loc 1 398 0 discriminator 2
 287 015e FDEEE77A 		vcvt.s32.f32	s15, s15
 288 0162 17EE901A 		vmov	r1, s15	@ int
 289 0166 2148     		ldr	r0, .L17+64
 290 0168 FFF7FEFF 		bl	printf
 291              	.LVL29:
 395:Core/Src/robot/robot.cpp **** 		{
 292              		.loc 1 395 0 discriminator 2
 293 016c 0134     		adds	r4, r4, #1
 294              	.LVL30:
 295 016e E9E7     		b	.L14
 296              	.LVL31:
 297              	.L13:
 298              	.LBE67:
 299              	.LBE66:
 300              	.LBB68:
 399:Core/Src/robot/robot.cpp **** 		}
 400:Core/Src/robot/robot.cpp **** 	}
 401:Core/Src/robot/robot.cpp **** 	else
 402:Core/Src/robot/robot.cpp **** 	{
 403:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 301              		.loc 1 403 0
 302 0170 1F48     		ldr	r0, .L17+68
 303 0172 FFF7FEFF 		bl	printf
 304              	.LVL32:
 305              	.LBB69:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 14


 404:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 306              		.loc 1 404 0
 307 0176 0024     		movs	r4, #0
 308              	.LVL33:
 309              	.L15:
 310              		.loc 1 404 0 is_stmt 0 discriminator 3
 311 0178 062C     		cmp	r4, #6
 312 017a 15DC     		bgt	.L1
 405:Core/Src/robot/robot.cpp **** 		{
 406:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 313              		.loc 1 406 0 is_stmt 1 discriminator 2
 314 017c 104B     		ldr	r3, .L17+20
 315 017e 03EB8403 		add	r3, r3, r4, lsl #2
 316 0182 D3ED007A 		vldr.32	s15, [r3]
 317 0186 F1EE677A 		vneg.f32	s15, s15
 407:Core/Src/robot/robot.cpp **** 			angles[i] -= 7.5;
 318              		.loc 1 407 0 discriminator 2
 319 018a B1EE0E7A 		vmov.f32	s14, #7.5e+0
 320 018e 77EEC77A 		vsub.f32	s15, s15, s14
 321 0192 C3ED007A 		vstr.32	s15, [r3]
 408:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 322              		.loc 1 408 0 discriminator 2
 323 0196 FDEEE77A 		vcvt.s32.f32	s15, s15
 324 019a 17EE901A 		vmov	r1, s15	@ int
 325 019e 1348     		ldr	r0, .L17+64
 326 01a0 FFF7FEFF 		bl	printf
 327              	.LVL34:
 404:Core/Src/robot/robot.cpp **** 		{
 328              		.loc 1 404 0 discriminator 2
 329 01a4 0134     		adds	r4, r4, #1
 330              	.LVL35:
 331 01a6 E7E7     		b	.L15
 332              	.LVL36:
 333              	.L1:
 334              	.LBE69:
 335              	.LBE68:
 336              	.LBE65:
 337              	.LBE71:
 409:Core/Src/robot/robot.cpp **** 		}
 410:Core/Src/robot/robot.cpp **** 	}
 411:Core/Src/robot/robot.cpp **** }
 338              		.loc 1 411 0
 339 01a8 10BD     		pop	{r4, pc}
 340              	.L18:
 341 01aa 00BF     		.align	2
 342              	.L17:
 343 01ac 00080240 		.word	1073874944
 344 01b0 00000000 		.word	.LANCHOR0
 345 01b4 00000000 		.word	.LANCHOR1
 346 01b8 00000000 		.word	.LC0
 347 01bc 54000000 		.word	.LC5
 348 01c0 00000000 		.word	.LANCHOR3
 349 01c4 00000240 		.word	1073872896
 350 01c8 10000000 		.word	.LC1
 351 01cc 00000000 		.word	.LANCHOR2
 352 01d0 00000000 		.word	leg
 353 01d4 1C000000 		.word	.LC2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 15


 354 01d8 000C0240 		.word	1073875968
 355 01dc 30000000 		.word	.LC3
 356 01e0 44000000 		.word	.LC4
 357 01e4 00100240 		.word	1073876992
 358 01e8 60000000 		.word	.LC6
 359 01ec 70000000 		.word	.LC7
 360 01f0 80000000 		.word	.LC8
 361              		.cfi_endproc
 362              	.LFE499:
 364              		.global	__aeabi_f2d
 365              		.global	__aeabi_ddiv
 366              		.global	__aeabi_d2iz
 367              		.section	.text._Z4testv,"ax",%progbits
 368              		.align	1
 369              		.global	_Z4testv
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv4-sp-d16
 375              	_Z4testv:
 376              	.LFB500:
 412:Core/Src/robot/robot.cpp **** 
 413:Core/Src/robot/robot.cpp **** void test(void)
 414:Core/Src/robot/robot.cpp **** {
 377              		.loc 1 414 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 382              	.LCFI1:
 383              		.cfi_def_cfa_offset 32
 384              		.cfi_offset 3, -32
 385              		.cfi_offset 4, -28
 386              		.cfi_offset 5, -24
 387              		.cfi_offset 6, -20
 388              		.cfi_offset 7, -16
 389              		.cfi_offset 8, -12
 390              		.cfi_offset 9, -8
 391              		.cfi_offset 14, -4
 392 0004 2DED028B 		vpush.64	{d8}
 393              	.LCFI2:
 394              		.cfi_def_cfa_offset 40
 395              		.cfi_offset 80, -40
 396              		.cfi_offset 81, -36
 415:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET){
 397              		.loc 1 415 0
 398 0008 4FF40061 		mov	r1, #2048
 399 000c 4048     		ldr	r0, .L27+8
 400 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 401              	.LVL37:
 402 0012 0028     		cmp	r0, #0
 403 0014 6CD0     		beq	.L24
 404              	.L20:
 416:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 417:Core/Src/robot/robot.cpp **** 	}
 418:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET){
 405              		.loc 1 418 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 16


 406 0016 4FF48071 		mov	r1, #256
 407 001a 3D48     		ldr	r0, .L27+8
 408 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 409              	.LVL38:
 410 0020 0028     		cmp	r0, #0
 411 0022 69D0     		beq	.L25
 412              	.L21:
 419:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 420:Core/Src/robot/robot.cpp **** 	}
 421:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET){
 413              		.loc 1 421 0
 414 0024 4FF48061 		mov	r1, #1024
 415 0028 3948     		ldr	r0, .L27+8
 416 002a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 417              	.LVL39:
 418 002e 0028     		cmp	r0, #0
 419 0030 66D0     		beq	.L26
 420              	.L22:
 422:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 423:Core/Src/robot/robot.cpp **** 	}
 424:Core/Src/robot/robot.cpp **** 	leg[0].set_omega(0);
 421              		.loc 1 424 0
 422 0032 9FED388A 		vldr.32	s16, .L27+12
 423 0036 384C     		ldr	r4, .L27+16
 424 0038 B0EE480A 		vmov.f32	s0, s16
 425 003c 2046     		mov	r0, r4
 426 003e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 427              	.LVL40:
 425:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(0);
 428              		.loc 1 425 0
 429 0042 B0EE480A 		vmov.f32	s0, s16
 430 0046 04F15800 		add	r0, r4, #88
 431 004a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 432              	.LVL41:
 426:Core/Src/robot/robot.cpp **** 	steering.set_angle(0);
 433              		.loc 1 426 0
 434 004e 334D     		ldr	r5, .L27+20
 435 0050 B0EE480A 		vmov.f32	s0, s16
 436 0054 2846     		mov	r0, r5
 437 0056 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 438              	.LVL42:
 439              	.LBB72:
 440              	.LBB73:
 441              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 17


  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 442              		.loc 2 48 0
 443 005a 04F13C00 		add	r0, r4, #60
 444 005e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 445              	.LVL43:
 446              	.LBE73:
 447              	.LBE72:
 427:Core/Src/robot/robot.cpp **** 	printf("\nleg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d", (int)(leg[0].get_actual_angle() 
 448              		.loc 1 427 0
 449 0062 9FED2F8A 		vldr.32	s16, .L27+24
 450 0066 60EE087A 		vmul.f32	s15, s0, s16
 451 006a 17EE900A 		vmov	r0, s15
 452 006e FFF7FEFF 		bl	__aeabi_f2d
 453              	.LVL44:
 454 0072 25A3     		adr	r3, .L27
 455 0074 D3E90023 		ldrd	r2, [r3]
 456 0078 FFF7FEFF 		bl	__aeabi_ddiv
 457              	.LVL45:
 458 007c 0646     		mov	r6, r0
 459 007e 0F46     		mov	r7, r1
 460              	.LVL46:
 461              	.LBB74:
 462              	.LBB75:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 18


 463              		.loc 2 48 0
 464 0080 04F19400 		add	r0, r4, #148
 465 0084 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 466              	.LVL47:
 467              	.LBE75:
 468              	.LBE74:
 428:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 469              		.loc 1 428 0
 470 0088 60EE087A 		vmul.f32	s15, s0, s16
 471 008c 17EE900A 		vmov	r0, s15
 472 0090 FFF7FEFF 		bl	__aeabi_f2d
 473              	.LVL48:
 474 0094 1CA3     		adr	r3, .L27
 475 0096 D3E90023 		ldrd	r2, [r3]
 476 009a FFF7FEFF 		bl	__aeabi_ddiv
 477              	.LVL49:
 478 009e 8046     		mov	r8, r0
 479 00a0 8946     		mov	r9, r1
 480              	.LVL50:
 481              	.LBB76:
 482              	.LBB77:
 483              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 19


  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 20


  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 484              		.loc 3 112 0
 485 00a2 05F10C00 		add	r0, r5, #12
 486 00a6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 487              	.LVL51:
 488              	.LBE77:
 489              	.LBE76:
 490              		.loc 1 428 0
 491 00aa 60EE087A 		vmul.f32	s15, s0, s16
 492 00ae 17EE900A 		vmov	r0, s15
 493 00b2 FFF7FEFF 		bl	__aeabi_f2d
 494              	.LVL52:
 495 00b6 14A3     		adr	r3, .L27
 496 00b8 D3E90023 		ldrd	r2, [r3]
 497 00bc FFF7FEFF 		bl	__aeabi_ddiv
 498              	.LVL53:
 427:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 499              		.loc 1 427 0
 500 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 501              	.LVL54:
 502 00c4 0546     		mov	r5, r0
 503 00c6 4046     		mov	r0, r8
 504 00c8 4946     		mov	r1, r9
 505 00ca FFF7FEFF 		bl	__aeabi_d2iz
 506              	.LVL55:
 507 00ce 0446     		mov	r4, r0
 508 00d0 3046     		mov	r0, r6
 509 00d2 3946     		mov	r1, r7
 510 00d4 FFF7FEFF 		bl	__aeabi_d2iz
 511              	.LVL56:
 512 00d8 2B46     		mov	r3, r5
 513 00da 2246     		mov	r2, r4
 514 00dc 0146     		mov	r1, r0
 515 00de 1148     		ldr	r0, .L27+28
 516 00e0 FFF7FEFF 		bl	printf
 517              	.LVL57:
 429:Core/Src/robot/robot.cpp **** 	zone_select();
 518              		.loc 1 429 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 21


 519 00e4 FFF7FEFF 		bl	_Z11zone_selectv
 520              	.LVL58:
 430:Core/Src/robot/robot.cpp **** }...
 521              		.loc 1 430 0
 522 00e8 BDEC028B 		vldm	sp!, {d8}
 523              	.LCFI3:
 524              		.cfi_remember_state
 525              		.cfi_restore 80
 526              		.cfi_restore 81
 527              		.cfi_def_cfa_offset 32
 528 00ec BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 529              	.L24:
 530              	.LCFI4:
 531              		.cfi_restore_state
 416:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 532              		.loc 1 416 0
 533 00f0 0D48     		ldr	r0, .L27+32
 534 00f2 FFF7FEFF 		bl	printf
 535              	.LVL59:
 536 00f6 8EE7     		b	.L20
 537              	.L25:
 419:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 538              		.loc 1 419 0
 539 00f8 0C48     		ldr	r0, .L27+36
 540 00fa FFF7FEFF 		bl	printf
 541              	.LVL60:
 542 00fe 91E7     		b	.L21
 543              	.L26:
 422:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 544              		.loc 1 422 0
 545 0100 0B48     		ldr	r0, .L27+40
 546 0102 FFF7FEFF 		bl	printf
 547              	.LVL61:
 548 0106 94E7     		b	.L22
 549              	.L28:
 550              		.align	3
 551              	.L27:
 552 0108 182D4454 		.word	1413754136
 553 010c FB210940 		.word	1074340347
 554 0110 000C0240 		.word	1073875968
 555 0114 00000000 		.word	0
 556 0118 00000000 		.word	leg
 557 011c 00000000 		.word	steering
 558 0120 00003443 		.word	1127481344
 559 0124 18000000 		.word	.LC12
 560 0128 00000000 		.word	.LC9
 561 012c 08000000 		.word	.LC10
 562 0130 10000000 		.word	.LC11
 563              		.cfi_endproc
 564              	.LFE500:
 566              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 567              		.align	1
 568              		.weak	_Z12swap_ElementIfEvRT_S1_
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 22


 574              	_Z12swap_ElementIfEvRT_S1_:
 575              	.LFB510:
 576              		.file 4 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
 577              		.loc 4 16 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL62:
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
 583              		.loc 4 18 0
 584 0000 0368     		ldr	r3, [r0]	@ float
 585              	.LVL63:
  19:Core/Inc/utils/vec3.h ****         first = second;
 586              		.loc 4 19 0
 587 0002 0A68     		ldr	r2, [r1]	@ float
 588 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h ****         second = temp;
 589              		.loc 4 20 0
 590 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** }
 591              		.loc 4 21 0
 592 0008 7047     		bx	lr
 593              		.cfi_endproc
 594              	.LFE510:
 596              		.global	__aeabi_d2f
 597              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 598              		.align	1
 599              		.global	_Z11start_RobotP12Robot_States
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	_Z11start_RobotP12Robot_States:
 606              	.LFB497:
  22:Core/Src/robot/robot.cpp **** {
 607              		.loc 1 22 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 16
 610              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 23


 611              	.LVL64:
 612 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 613              	.LCFI5:
 614              		.cfi_def_cfa_offset 36
 615              		.cfi_offset 4, -36
 616              		.cfi_offset 5, -32
 617              		.cfi_offset 6, -28
 618              		.cfi_offset 7, -24
 619              		.cfi_offset 8, -20
 620              		.cfi_offset 9, -16
 621              		.cfi_offset 10, -12
 622              		.cfi_offset 11, -8
 623              		.cfi_offset 14, -4
 624 0004 2DED028B 		vpush.64	{d8}
 625              	.LCFI6:
 626              		.cfi_def_cfa_offset 44
 627              		.cfi_offset 80, -44
 628              		.cfi_offset 81, -40
 629 0008 87B0     		sub	sp, sp, #28
 630              	.LCFI7:
 631              		.cfi_def_cfa_offset 72
 632 000a 0446     		mov	r4, r0
 633              	.LBB116:
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
 634              		.loc 1 23 0
 635 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 636 000e 0A2B     		cmp	r3, #10
 637 0010 00F27A83 		bhi	.L30
 638 0014 DFE813F0 		tbh	[pc, r3, lsl #1]
 639              	.L33:
 640 0018 0B00     		.2byte	(.L32-.L33)/2
 641 001a 5201     		.2byte	(.L34-.L33)/2
 642 001c AC01     		.2byte	(.L35-.L33)/2
 643 001e DF01     		.2byte	(.L36-.L33)/2
 644 0020 1902     		.2byte	(.L37-.L33)/2
 645 0022 3E02     		.2byte	(.L38-.L33)/2
 646 0024 6302     		.2byte	(.L39-.L33)/2
 647 0026 9702     		.2byte	(.L40-.L33)/2
 648 0028 EF02     		.2byte	(.L41-.L33)/2
 649 002a 4803     		.2byte	(.L42-.L33)/2
 650 002c 7D03     		.2byte	(.L43-.L33)/2
 651              		.p2align 1
 652              	.L32:
 653              	.LBB117:
 654              	.LBB118:
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
 655              		.loc 1 37 0
 656 002e B848     		ldr	r0, .L68+8
 657              	.LVL65:
 658 0030 FFF7FEFF 		bl	printf
 659              	.LVL66:
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
 660              		.loc 1 38 0
 661 0034 4021     		movs	r1, #64
 662 0036 B748     		ldr	r0, .L68+12
 663 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 664              	.LVL67:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 24


 665 003c 0028     		cmp	r0, #0
 666 003e 40F0A080 		bne	.L44
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
 667              		.loc 1 40 0
 668 0042 B54B     		ldr	r3, .L68+16
 669 0044 0122     		movs	r2, #1
 670 0046 1A70     		strb	r2, [r3]
 671              	.L45:
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 672              		.loc 1 49 0
 673 0048 B44B     		ldr	r3, .L68+20
 674 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 675 004c 23B9     		cbnz	r3, .L46
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 676              		.loc 1 49 0 is_stmt 0 discriminator 1
 677 004e B44A     		ldr	r2, .L68+24
 678 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 679 0052 002A     		cmp	r2, #0
 680 0054 40F09C80 		bne	.L62
 681              	.L46:
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
 682              		.loc 1 55 0 is_stmt 1
 683 0058 002B     		cmp	r3, #0
 684 005a 40F0B880 		bne	.L63
 685              	.LVL68:
 686              	.L47:
 687              	.LBB119:
 688              	.LBB120:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 689              		.loc 2 47 0
 690 005e B14E     		ldr	r6, .L68+28
 691 0060 3046     		mov	r0, r6
 692 0062 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 693              	.LVL69:
 694              	.LBE120:
 695              	.LBE119:
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 696              		.loc 1 60 0
 697 0066 9FEDB08A 		vldr.32	s16, .L68+32
 698 006a 60EE087A 		vmul.f32	s15, s0, s16
 699 006e 17EE900A 		vmov	r0, s15
 700 0072 FFF7FEFF 		bl	__aeabi_f2d
 701              	.LVL70:
 702 0076 A4A3     		adr	r3, .L68
 703 0078 D3E90023 		ldrd	r2, [r3]
 704 007c FFF7FEFF 		bl	__aeabi_ddiv
 705              	.LVL71:
 706 0080 0446     		mov	r4, r0
 707 0082 0D46     		mov	r5, r1
 708              	.LVL72:
 709              	.LBB121:
 710              	.LBB122:
 711              		.loc 2 48 0
 712 0084 06F15800 		add	r0, r6, #88
 713 0088 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 714              	.LVL73:
 715              	.LBE122:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 25


 716              	.LBE121:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 717              		.loc 1 61 0
 718 008c 60EE087A 		vmul.f32	s15, s0, s16
 719 0090 17EE900A 		vmov	r0, s15
 720 0094 FFF7FEFF 		bl	__aeabi_f2d
 721              	.LVL74:
 722 0098 9BA3     		adr	r3, .L68
 723 009a D3E90023 		ldrd	r2, [r3]
 724 009e FFF7FEFF 		bl	__aeabi_ddiv
 725              	.LVL75:
 726 00a2 0646     		mov	r6, r0
 727 00a4 0F46     		mov	r7, r1
 728              	.LVL76:
 729              	.LBB123:
 730              	.LBB124:
 731              		.loc 3 112 0
 732 00a6 A148     		ldr	r0, .L68+36
 733 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 734              	.LVL77:
 735              	.LBE124:
 736              	.LBE123:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 737              		.loc 1 61 0
 738 00ac 60EE087A 		vmul.f32	s15, s0, s16
 739 00b0 17EE900A 		vmov	r0, s15
 740 00b4 FFF7FEFF 		bl	__aeabi_f2d
 741              	.LVL78:
 742 00b8 93A3     		adr	r3, .L68
 743 00ba D3E90023 		ldrd	r2, [r3]
 744 00be FFF7FEFF 		bl	__aeabi_ddiv
 745              	.LVL79:
 746 00c2 8046     		mov	r8, r0
 747 00c4 8946     		mov	r9, r1
 748 00c6 9A4B     		ldr	r3, .L68+40
 749 00c8 D3ED007A 		vldr.32	s15, [r3]
 750 00cc 67EE887A 		vmul.f32	s15, s15, s16
 751 00d0 17EE900A 		vmov	r0, s15
 752 00d4 FFF7FEFF 		bl	__aeabi_f2d
 753              	.LVL80:
 754 00d8 8BA3     		adr	r3, .L68
 755 00da D3E90023 		ldrd	r2, [r3]
 756 00de FFF7FEFF 		bl	__aeabi_ddiv
 757              	.LVL81:
 758 00e2 8246     		mov	r10, r0
 759 00e4 8B46     		mov	fp, r1
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 760              		.loc 1 60 0
 761 00e6 4046     		mov	r0, r8
 762 00e8 4946     		mov	r1, r9
 763 00ea FFF7FEFF 		bl	__aeabi_d2iz
 764              	.LVL82:
 765 00ee 8046     		mov	r8, r0
 766 00f0 3046     		mov	r0, r6
 767 00f2 3946     		mov	r1, r7
 768 00f4 FFF7FEFF 		bl	__aeabi_d2iz
 769              	.LVL83:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 26


 770 00f8 0646     		mov	r6, r0
 771 00fa 2046     		mov	r0, r4
 772 00fc 2946     		mov	r1, r5
 773 00fe FFF7FEFF 		bl	__aeabi_d2iz
 774              	.LVL84:
 775 0102 0446     		mov	r4, r0
 776 0104 5046     		mov	r0, r10
 777 0106 5946     		mov	r1, fp
 778 0108 FFF7FEFF 		bl	__aeabi_d2iz
 779              	.LVL85:
 780 010c 0090     		str	r0, [sp]
 781 010e 4346     		mov	r3, r8
 782 0110 3246     		mov	r2, r6
 783 0112 2146     		mov	r1, r4
 784 0114 8748     		ldr	r0, .L68+44
 785 0116 FFF7FEFF 		bl	printf
 786              	.LVL86:
 787              	.LBB125:
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 788              		.loc 1 62 0
 789 011a 4FF48041 		mov	r1, #16384
 790 011e 8648     		ldr	r0, .L68+48
 791 0120 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 792              	.LVL87:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 793              		.loc 1 64 0
 794 0124 28B1     		cbz	r0, .L48
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 795              		.loc 1 63 0
 796 0126 1021     		movs	r1, #16
 797 0128 8448     		ldr	r0, .L68+52
 798 012a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 799              	.LVL88:
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 800              		.loc 1 62 0
 801 012e 0028     		cmp	r0, #0
 802 0130 56D1     		bne	.L64
 803              	.L48:
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 804              		.loc 1 67 0 discriminator 1
 805 0132 0022     		movs	r2, #0
 806 0134 0421     		movs	r1, #4
 807 0136 8048     		ldr	r0, .L68+48
 808 0138 FFF7FEFF 		bl	HAL_GPIO_WritePin
 809              	.LVL89:
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
 810              		.loc 1 68 0 discriminator 1
 811 013c 774B     		ldr	r3, .L68+20
 812 013e 0122     		movs	r2, #1
 813 0140 1A70     		strb	r2, [r3]
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 814              		.loc 1 69 0 discriminator 1
 815 0142 774B     		ldr	r3, .L68+24
 816 0144 0022     		movs	r2, #0
 817 0146 1A70     		strb	r2, [r3]
 818              	.LVL90:
 819              	.LBB126:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 27


 820              	.LBB127:
 821              	.LBB128:
 822              	.LBB129:
 823              	.LBB130:
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 28


  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 824              		.loc 4 129 0 discriminator 1
 825 0148 7D4B     		ldr	r3, .L68+56
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 29


 826 014a 1A68     		ldr	r2, [r3]	@ float
 827 014c 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 828              		.loc 4 130 0 discriminator 1
 829 014e 5A68     		ldr	r2, [r3, #4]	@ float
 830 0150 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 831              		.loc 4 131 0 discriminator 1
 832 0152 9B68     		ldr	r3, [r3, #8]	@ float
 833 0154 0593     		str	r3, [sp, #20]	@ float
 834              	.LVL91:
 835              	.LBE130:
 836              	.LBE129:
 837              	.LBE128:
 838              	.LBB131:
 839              	.LBB132:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 30


 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 840              		.loc 4 175 0 discriminator 1
 841 0156 7B4C     		ldr	r4, .L68+60
 842 0158 03A9     		add	r1, sp, #12
 843              	.LVL92:
 844 015a 2046     		mov	r0, r4
 845 015c FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 846              	.LVL93:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 847              		.loc 4 176 0 discriminator 1
 848 0160 04A9     		add	r1, sp, #16
 849 0162 201D     		adds	r0, r4, #4
 850 0164 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 851              	.LVL94:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 852              		.loc 4 177 0 discriminator 1
 853 0168 05A9     		add	r1, sp, #20
 854 016a 04F10800 		add	r0, r4, #8
 855 016e FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 856              	.LVL95:
 857              	.LBE132:
 858              	.LBE131:
 859              	.LBE127:
 860              	.LBE126:
  71:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
 861              		.loc 1 71 0 discriminator 1
 862 0172 FFF7FEFF 		bl	_Z11getup_n_runv
 863              	.LVL96:
 864 0176 0028     		cmp	r0, #0
 865 0178 00F0C682 		beq	.L30
  73:Core/Src/robot/robot.cpp **** 				zone_select();
 866              		.loc 1 73 0
 867 017c FFF7FEFF 		bl	_Z11zone_selectv
 868              	.LVL97:
 869 0180 C2E2     		b	.L30
 870              	.LVL98:
 871              	.L44:
 872              	.LBE125:
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
 873              		.loc 1 44 0
 874 0182 654B     		ldr	r3, .L68+16
 875 0184 0022     		movs	r2, #0
 876 0186 1A70     		strb	r2, [r3]
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
 877              		.loc 1 45 0
 878 0188 694B     		ldr	r3, .L68+40
 879 018a 0022     		movs	r2, #0
 880 018c 1A60     		str	r2, [r3]	@ float
 881 018e 5BE7     		b	.L45
 882              	.L62:
 883              	.LVL99:
 884              	.LBB135:
 885              	.LBB136:
 886              	.LBB137:
 887              	.LBB138:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 31


 888              	.LBB139:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 889              		.loc 4 129 0
 890 0190 6B4B     		ldr	r3, .L68+56
 891 0192 1A68     		ldr	r2, [r3]	@ float
 892 0194 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 893              		.loc 4 130 0
 894 0196 5A68     		ldr	r2, [r3, #4]	@ float
 895 0198 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 896              		.loc 4 131 0
 897 019a 9B68     		ldr	r3, [r3, #8]	@ float
 898 019c 0593     		str	r3, [sp, #20]	@ float
 899              	.LVL100:
 900              	.LBE139:
 901              	.LBE138:
 902              	.LBE137:
 903              	.LBB140:
 904              	.LBB141:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 905              		.loc 4 175 0
 906 019e 694C     		ldr	r4, .L68+60
 907              	.LVL101:
 908 01a0 03A9     		add	r1, sp, #12
 909              	.LVL102:
 910 01a2 2046     		mov	r0, r4
 911 01a4 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 912              	.LVL103:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 913              		.loc 4 176 0
 914 01a8 04A9     		add	r1, sp, #16
 915 01aa 201D     		adds	r0, r4, #4
 916 01ac FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 917              	.LVL104:
 918              		.loc 4 177 0
 919 01b0 05A9     		add	r1, sp, #20
 920 01b2 04F10800 		add	r0, r4, #8
 921 01b6 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 922              	.LVL105:
 923              	.LBE141:
 924              	.LBE140:
 925              	.LBE136:
 926              	.LBE135:
 927              	.LBB142:
 928              	.LBB143:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 929              		.loc 4 36 0
 930 01ba D4ED027A 		vldr.32	s15, [r4, #8]
 931              	.LVL106:
 932              	.LBE143:
 933              	.LBE142:
  53:Core/Src/robot/robot.cpp **** 			printf("\t%d\t", (int)initial_angle.getZ());
 934              		.loc 1 53 0
 935 01be FDEEE77A 		vcvt.s32.f32	s15, s15
 936 01c2 17EE901A 		vmov	r1, s15	@ int
 937 01c6 6048     		ldr	r0, .L68+64
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 32


 938 01c8 FFF7FEFF 		bl	printf
 939              	.LVL107:
 940 01cc 47E7     		b	.L47
 941              	.LVL108:
 942              	.L63:
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 943              		.loc 1 57 0
 944 01ce 544B     		ldr	r3, .L68+24
 945 01d0 0022     		movs	r2, #0
 946 01d2 1A70     		strb	r2, [r3]
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 947              		.loc 1 58 0
 948 01d4 0122     		movs	r2, #1
 949 01d6 0421     		movs	r1, #4
 950 01d8 5748     		ldr	r0, .L68+48
 951 01da FFF7FEFF 		bl	HAL_GPIO_WritePin
 952              	.LVL109:
 953 01de 3EE7     		b	.L47
 954              	.LVL110:
 955              	.L64:
 956              	.LBB144:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 957              		.loc 1 64 0
 958 01e0 4FF48051 		mov	r1, #4096
 959 01e4 5448     		ldr	r0, .L68+48
 960 01e6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 961              	.LVL111:
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 962              		.loc 1 63 0
 963 01ea 0028     		cmp	r0, #0
 964 01ec A1D0     		beq	.L48
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
 965              		.loc 1 65 0 discriminator 2
 966 01ee 0221     		movs	r1, #2
 967 01f0 5648     		ldr	r0, .L68+68
 968 01f2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 969              	.LVL112:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 970              		.loc 1 64 0 discriminator 2
 971 01f6 0028     		cmp	r0, #0
 972 01f8 9BD0     		beq	.L48
 973              	.LBB133:
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
 974              		.loc 1 76 0
 975 01fa 4FF40071 		mov	r1, #512
 976 01fe 5348     		ldr	r0, .L68+68
 977 0200 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 978              	.LVL113:
 979 0204 0028     		cmp	r0, #0
 980 0206 45D1     		bne	.L65
 981              	.LBB134:
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 982              		.loc 1 79 0
 983 0208 504C     		ldr	r4, .L68+68
 984 020a 0022     		movs	r2, #0
 985 020c 4FF48051 		mov	r1, #4096
 986 0210 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 33


 987 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 988              	.LVL114:
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 989              		.loc 1 80 0
 990 0216 0022     		movs	r2, #0
 991 0218 4FF40051 		mov	r1, #8192
 992 021c 2046     		mov	r0, r4
 993 021e FFF7FEFF 		bl	HAL_GPIO_WritePin
 994              	.LVL115:
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 995              		.loc 1 81 0
 996 0222 0022     		movs	r2, #0
 997 0224 4FF48041 		mov	r1, #16384
 998 0228 2046     		mov	r0, r4
 999 022a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1000              	.LVL116:
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 1001              		.loc 1 82 0
 1002 022e 0022     		movs	r2, #0
 1003 0230 4FF40041 		mov	r1, #32768
 1004 0234 2046     		mov	r0, r4
 1005 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1006              	.LVL117:
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 1007              		.loc 1 83 0
 1008 023a 0022     		movs	r2, #0
 1009 023c 0421     		movs	r1, #4
 1010 023e 3E48     		ldr	r0, .L68+48
 1011 0240 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1012              	.LVL118:
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1013              		.loc 1 84 0
 1014 0244 354B     		ldr	r3, .L68+20
 1015 0246 0022     		movs	r2, #0
 1016 0248 1A70     		strb	r2, [r3]
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1017              		.loc 1 86 0
 1018 024a 414B     		ldr	r3, .L68+72
 1019 024c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 024e BFF35B8F 		dmb	ish
 1021 0252 13F0010F 		tst	r3, #1
 1022 0256 10D0     		beq	.L66
 1023              	.L53:
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 1024              		.loc 1 87 0
 1025 0258 FFF7FEFF 		bl	HAL_GetTick
 1026              	.LVL119:
 1027 025c 3D4B     		ldr	r3, .L68+76
 1028 025e 1B68     		ldr	r3, [r3]
 1029 0260 C31A     		subs	r3, r0, r3
 1030 0262 B3F5FA7F 		cmp	r3, #500
 1031 0266 C0F04F82 		bcc	.L30
  89:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
 1032              		.loc 1 89 0
 1033 026a FFF7FEFF 		bl	_Z11getup_n_runv
 1034              	.LVL120:
 1035 026e 0028     		cmp	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 34


 1036 0270 00F04A82 		beq	.L30
  91:Core/Src/robot/robot.cpp **** 					zone_select();
 1037              		.loc 1 91 0
 1038 0274 FFF7FEFF 		bl	_Z11zone_selectv
 1039              	.LVL121:
 1040 0278 46E2     		b	.L30
 1041              	.L66:
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1042              		.loc 1 86 0 discriminator 1
 1043 027a 3548     		ldr	r0, .L68+72
 1044 027c FFF7FEFF 		bl	__cxa_guard_acquire
 1045              	.LVL122:
 1046 0280 0028     		cmp	r0, #0
 1047 0282 E9D0     		beq	.L53
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1048              		.loc 1 86 0 is_stmt 0 discriminator 2
 1049 0284 FFF7FEFF 		bl	HAL_GetTick
 1050              	.LVL123:
 1051 0288 324B     		ldr	r3, .L68+76
 1052 028a 1860     		str	r0, [r3]
 1053 028c 3048     		ldr	r0, .L68+72
 1054 028e FFF7FEFF 		bl	__cxa_guard_release
 1055              	.LVL124:
 1056 0292 E1E7     		b	.L53
 1057              	.L65:
 1058              	.LBE134:
  98:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1059              		.loc 1 98 0 is_stmt 1
 1060 0294 9FED308A 		vldr.32	s16, .L68+80
 1061 0298 304C     		ldr	r4, .L68+84
 1062 029a B0EE480A 		vmov.f32	s0, s16
 1063 029e 2046     		mov	r0, r4
 1064 02a0 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1065              	.LVL125:
  99:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1066              		.loc 1 99 0
 1067 02a4 B0EE480A 		vmov.f32	s0, s16
 1068 02a8 04F15800 		add	r0, r4, #88
 1069 02ac FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1070              	.LVL126:
 100:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 1071              		.loc 1 100 0
 1072 02b0 B0EE480A 		vmov.f32	s0, s16
 1073 02b4 2A48     		ldr	r0, .L68+88
 1074 02b6 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1075              	.LVL127:
 1076 02ba 25E2     		b	.L30
 1077              	.LVL128:
 1078              	.L34:
 1079              	.LBE133:
 1080              	.LBE144:
 1081              	.LBE118:
 112:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 1082              		.loc 1 112 0
 1083 02bc 2948     		ldr	r0, .L68+92
 1084              	.LVL129:
 1085 02be FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 35


 1086              	.LVL130:
 113:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 1087              		.loc 1 113 0
 1088 02c2 294B     		ldr	r3, .L68+96
 1089 02c4 93ED000A 		vldr.32	s0, [r3]
 1090 02c8 284B     		ldr	r3, .L68+100
 1091 02ca 1868     		ldr	r0, [r3]
 1092 02cc FFF7FEFF 		bl	_Z2goif
 1093              	.LVL131:
 1094 02d0 0028     		cmp	r0, #0
 1095 02d2 00F01982 		beq	.L30
 115:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 1096              		.loc 1 115 0
 1097 02d6 0223     		movs	r3, #2
 1098 02d8 2370     		strb	r3, [r4]
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1099              		.loc 1 116 0
 1100 02da 1C4C     		ldr	r4, .L68+68
 1101              	.LVL132:
 1102 02dc 4FF48051 		mov	r1, #4096
 1103 02e0 2046     		mov	r0, r4
 1104 02e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1105              	.LVL133:
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1106              		.loc 1 117 0
 1107 02e6 4FF40051 		mov	r1, #8192
 1108 02ea 2046     		mov	r0, r4
 1109 02ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1110              	.LVL134:
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1111              		.loc 1 118 0
 1112 02f0 4FF48041 		mov	r1, #16384
 1113 02f4 2046     		mov	r0, r4
 1114 02f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1115              	.LVL135:
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1116              		.loc 1 119 0
 1117 02fa 4FF40041 		mov	r1, #32768
 1118 02fe 2046     		mov	r0, r4
 1119 0300 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1120              	.LVL136:
 1121 0304 00E2     		b	.L30
 1122              	.L69:
 1123 0306 00BF     		.align	3
 1124              	.L68:
 1125 0308 182D4454 		.word	1413754136
 1126 030c FB210940 		.word	1074340347
 1127 0310 00000000 		.word	.LC13
 1128 0314 00100240 		.word	1073876992
 1129 0318 00000000 		.word	.LANCHOR4
 1130 031c 00000000 		.word	.LANCHOR1
 1131 0320 00000000 		.word	.LANCHOR5
 1132 0324 3C000000 		.word	leg+60
 1133 0328 00003443 		.word	1127481344
 1134 032c 0C000000 		.word	steering+12
 1135 0330 00000000 		.word	robot_angle
 1136 0334 10000000 		.word	.LC15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 36


 1137 0338 00080240 		.word	1073874944
 1138 033c 00000240 		.word	1073872896
 1139 0340 00000000 		.word	curr_angle
 1140 0344 00000000 		.word	initial_angle
 1141 0348 08000000 		.word	.LC14
 1142 034c 000C0240 		.word	1073875968
 1143 0350 00000000 		.word	.LANCHOR6
 1144 0354 00000000 		.word	.LANCHOR7
 1145 0358 00000000 		.word	0
 1146 035c 00000000 		.word	leg
 1147 0360 00000000 		.word	steering
 1148 0364 58000000 		.word	.LC16
 1149 0368 00000000 		.word	.LANCHOR3
 1150 036c 00000000 		.word	.LANCHOR2
 1151              	.LVL137:
 1152              	.L35:
 133:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 1153              		.loc 1 133 0
 1154 0370 BB48     		ldr	r0, .L70+8
 1155              	.LVL138:
 1156 0372 FFF7FEFF 		bl	printf
 1157              	.LVL139:
 135:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 1158              		.loc 1 135 0
 1159 0376 BB4B     		ldr	r3, .L70+12
 1160 0378 93ED010A 		vldr.32	s0, [r3, #4]
 1161 037c 6320     		movs	r0, #99
 1162 037e FFF7FEFF 		bl	_Z2goif
 1163              	.LVL140:
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1164              		.loc 1 136 0
 1165 0382 4FF40061 		mov	r1, #2048
 1166 0386 B848     		ldr	r0, .L70+16
 1167 0388 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1168              	.LVL141:
 1169 038c 30B1     		cbz	r0, .L54
 1170              	.LVL142:
 1171              	.LBB145:
 1172              	.LBB146:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1173              		.loc 2 45 0
 1174 038e B74B     		ldr	r3, .L70+20
 1175 0390 1B69     		ldr	r3, [r3, #16]
 1176              	.LVL143:
 1177              	.LBE146:
 1178              	.LBE145:
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1179              		.loc 1 136 0
 1180 0392 B74A     		ldr	r2, .L70+24
 1181 0394 5268     		ldr	r2, [r2, #4]
 1182 0396 9A42     		cmp	r2, r3
 1183 0398 80F2B681 		bge	.L30
 1184              	.L54:
 139:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 1185              		.loc 1 139 0 discriminator 3
 1186 039c 0323     		movs	r3, #3
 1187 039e 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 37


 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 1188              		.loc 1 140 0 discriminator 3
 1189 03a0 B34B     		ldr	r3, .L70+24
 1190 03a2 5A68     		ldr	r2, [r3, #4]
 1191 03a4 B14B     		ldr	r3, .L70+20
 1192 03a6 1A61     		str	r2, [r3, #16]
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 1193              		.loc 1 141 0 discriminator 3
 1194 03a8 9A66     		str	r2, [r3, #104]
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1195              		.loc 1 143 0 discriminator 3
 1196 03aa AF4C     		ldr	r4, .L70+16
 1197              	.LVL144:
 1198 03ac 4FF48051 		mov	r1, #4096
 1199 03b0 2046     		mov	r0, r4
 1200 03b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1201              	.LVL145:
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1202              		.loc 1 144 0 discriminator 3
 1203 03b6 4FF40051 		mov	r1, #8192
 1204 03ba 2046     		mov	r0, r4
 1205 03bc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1206              	.LVL146:
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1207              		.loc 1 145 0 discriminator 3
 1208 03c0 4FF48041 		mov	r1, #16384
 1209 03c4 2046     		mov	r0, r4
 1210 03c6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1211              	.LVL147:
 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1212              		.loc 1 146 0 discriminator 3
 1213 03ca 4FF40041 		mov	r1, #32768
 1214 03ce 2046     		mov	r0, r4
 1215 03d0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1216              	.LVL148:
 1217 03d4 98E1     		b	.L30
 1218              	.LVL149:
 1219              	.L36:
 157:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 1220              		.loc 1 157 0
 1221 03d6 A748     		ldr	r0, .L70+28
 1222              	.LVL150:
 1223 03d8 FFF7FEFF 		bl	printf
 1224              	.LVL151:
 159:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 1225              		.loc 1 159 0
 1226 03dc A14B     		ldr	r3, .L70+12
 1227 03de 93ED020A 		vldr.32	s0, [r3, #8]
 1228 03e2 6420     		movs	r0, #100
 1229 03e4 FFF7FEFF 		bl	_Z2goif
 1230              	.LVL152:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1231              		.loc 1 160 0
 1232 03e8 4FF48071 		mov	r1, #256
 1233 03ec 9E48     		ldr	r0, .L70+16
 1234 03ee FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1235              	.LVL153:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 38


 1236 03f2 30B9     		cbnz	r0, .L55
 1237              	.LVL154:
 1238              	.LBB147:
 1239              	.LBB148:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1240              		.loc 2 45 0
 1241 03f4 9D4B     		ldr	r3, .L70+20
 1242 03f6 1A69     		ldr	r2, [r3, #16]
 1243              	.LVL155:
 1244              	.LBE148:
 1245              	.LBE147:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1246              		.loc 1 160 0
 1247 03f8 9D4B     		ldr	r3, .L70+24
 1248 03fa 9B68     		ldr	r3, [r3, #8]
 1249 03fc 023B     		subs	r3, r3, #2
 1250 03fe 9342     		cmp	r3, r2
 1251 0400 06DB     		blt	.L56
 1252              	.L55:
 1253              	.LVL156:
 1254              	.LBB149:
 1255              	.LBB150:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1256              		.loc 2 45 0 discriminator 4
 1257 0402 9A4B     		ldr	r3, .L70+20
 1258 0404 1B69     		ldr	r3, [r3, #16]
 1259              	.LVL157:
 1260              	.LBE150:
 1261              	.LBE149:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1262              		.loc 1 160 0 discriminator 4
 1263 0406 9A4A     		ldr	r2, .L70+24
 1264 0408 9268     		ldr	r2, [r2, #8]
 1265 040a 9A42     		cmp	r2, r3
 1266 040c 00F37C81 		bgt	.L30
 1267              	.L56:
 163:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 1268              		.loc 1 163 0 discriminator 5
 1269 0410 0423     		movs	r3, #4
 1270 0412 2370     		strb	r3, [r4]
 164:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 1271              		.loc 1 164 0 discriminator 5
 1272 0414 964B     		ldr	r3, .L70+24
 1273 0416 9A68     		ldr	r2, [r3, #8]
 1274 0418 944B     		ldr	r3, .L70+20
 1275 041a 1A61     		str	r2, [r3, #16]
 165:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 1276              		.loc 1 165 0 discriminator 5
 1277 041c 9A66     		str	r2, [r3, #104]
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1278              		.loc 1 167 0 discriminator 5
 1279 041e 924C     		ldr	r4, .L70+16
 1280              	.LVL158:
 1281 0420 4FF48051 		mov	r1, #4096
 1282 0424 2046     		mov	r0, r4
 1283 0426 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1284              	.LVL159:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 39


 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1285              		.loc 1 168 0 discriminator 5
 1286 042a 4FF40051 		mov	r1, #8192
 1287 042e 2046     		mov	r0, r4
 1288 0430 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1289              	.LVL160:
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1290              		.loc 1 169 0 discriminator 5
 1291 0434 4FF48041 		mov	r1, #16384
 1292 0438 2046     		mov	r0, r4
 1293 043a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1294              	.LVL161:
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1295              		.loc 1 170 0 discriminator 5
 1296 043e 4FF40041 		mov	r1, #32768
 1297 0442 2046     		mov	r0, r4
 1298 0444 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1299              	.LVL162:
 1300 0448 5EE1     		b	.L30
 1301              	.LVL163:
 1302              	.L37:
 181:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 1303              		.loc 1 181 0
 1304 044a 8B48     		ldr	r0, .L70+32
 1305              	.LVL164:
 1306 044c FFF7FEFF 		bl	printf
 1307              	.LVL165:
 182:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 1308              		.loc 1 182 0
 1309 0450 844B     		ldr	r3, .L70+12
 1310 0452 93ED030A 		vldr.32	s0, [r3, #12]
 1311 0456 864B     		ldr	r3, .L70+24
 1312 0458 D868     		ldr	r0, [r3, #12]
 1313 045a FFF7FEFF 		bl	_Z2goif
 1314              	.LVL166:
 1315 045e 0028     		cmp	r0, #0
 1316 0460 00F05281 		beq	.L30
 184:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 1317              		.loc 1 184 0
 1318 0464 0523     		movs	r3, #5
 1319 0466 2370     		strb	r3, [r4]
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1320              		.loc 1 186 0
 1321 0468 7F4C     		ldr	r4, .L70+16
 1322              	.LVL167:
 1323 046a 4FF48051 		mov	r1, #4096
 1324 046e 2046     		mov	r0, r4
 1325 0470 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1326              	.LVL168:
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1327              		.loc 1 187 0
 1328 0474 4FF40051 		mov	r1, #8192
 1329 0478 2046     		mov	r0, r4
 1330 047a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1331              	.LVL169:
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1332              		.loc 1 188 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 40


 1333 047e 4FF48041 		mov	r1, #16384
 1334 0482 2046     		mov	r0, r4
 1335 0484 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1336              	.LVL170:
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1337              		.loc 1 189 0
 1338 0488 4FF40041 		mov	r1, #32768
 1339 048c 2046     		mov	r0, r4
 1340 048e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1341              	.LVL171:
 1342 0492 39E1     		b	.L30
 1343              	.LVL172:
 1344              	.L38:
 200:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 1345              		.loc 1 200 0
 1346 0494 7948     		ldr	r0, .L70+36
 1347              	.LVL173:
 1348 0496 FFF7FEFF 		bl	printf
 1349              	.LVL174:
 201:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 1350              		.loc 1 201 0
 1351 049a 724B     		ldr	r3, .L70+12
 1352 049c 93ED040A 		vldr.32	s0, [r3, #16]
 1353 04a0 734B     		ldr	r3, .L70+24
 1354 04a2 1869     		ldr	r0, [r3, #16]
 1355 04a4 FFF7FEFF 		bl	_Z2goif
 1356              	.LVL175:
 1357 04a8 0028     		cmp	r0, #0
 1358 04aa 00F02D81 		beq	.L30
 203:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 1359              		.loc 1 203 0
 1360 04ae 0623     		movs	r3, #6
 1361 04b0 2370     		strb	r3, [r4]
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1362              		.loc 1 205 0
 1363 04b2 6D4C     		ldr	r4, .L70+16
 1364              	.LVL176:
 1365 04b4 4FF48051 		mov	r1, #4096
 1366 04b8 2046     		mov	r0, r4
 1367 04ba FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1368              	.LVL177:
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1369              		.loc 1 206 0
 1370 04be 4FF40051 		mov	r1, #8192
 1371 04c2 2046     		mov	r0, r4
 1372 04c4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1373              	.LVL178:
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1374              		.loc 1 207 0
 1375 04c8 4FF48041 		mov	r1, #16384
 1376 04cc 2046     		mov	r0, r4
 1377 04ce FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1378              	.LVL179:
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1379              		.loc 1 208 0
 1380 04d2 4FF40041 		mov	r1, #32768
 1381 04d6 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 41


 1382 04d8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1383              	.LVL180:
 1384 04dc 14E1     		b	.L30
 1385              	.LVL181:
 1386              	.L39:
 1387              	.LBB151:
 220:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 1388              		.loc 1 220 0
 1389 04de 6848     		ldr	r0, .L70+40
 1390              	.LVL182:
 1391 04e0 FFF7FEFF 		bl	printf
 1392              	.LVL183:
 221:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 1393              		.loc 1 221 0
 1394 04e4 674B     		ldr	r3, .L70+44
 1395 04e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 04e8 6BB9     		cbnz	r3, .L57
 223:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 1397              		.loc 1 223 0
 1398 04ea 5E4B     		ldr	r3, .L70+12
 1399 04ec 93ED050A 		vldr.32	s0, [r3, #20]
 1400 04f0 5F4B     		ldr	r3, .L70+24
 1401 04f2 5869     		ldr	r0, [r3, #20]
 1402 04f4 FFF7FEFF 		bl	_Z2goif
 1403              	.LVL184:
 1404 04f8 0028     		cmp	r0, #0
 1405 04fa 00F00581 		beq	.L30
 225:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 1406              		.loc 1 225 0
 1407 04fe 614B     		ldr	r3, .L70+44
 1408 0500 0122     		movs	r2, #1
 1409 0502 1A70     		strb	r2, [r3]
 1410 0504 00E1     		b	.L30
 1411              	.L57:
 230:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1412              		.loc 1 230 0
 1413 0506 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1414              	.LVL185:
 1415 050a 0028     		cmp	r0, #0
 1416 050c 00F0FC80 		beq	.L30
 232:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1417              		.loc 1 232 0
 1418 0510 0723     		movs	r3, #7
 1419 0512 2370     		strb	r3, [r4]
 233:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 1420              		.loc 1 233 0
 1421 0514 5C4B     		ldr	r3, .L70+48
 1422 0516 0022     		movs	r2, #0
 1423 0518 1A70     		strb	r2, [r3]
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1424              		.loc 1 234 0
 1425 051a 534C     		ldr	r4, .L70+16
 1426              	.LVL186:
 1427 051c 4FF48051 		mov	r1, #4096
 1428 0520 2046     		mov	r0, r4
 1429 0522 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1430              	.LVL187:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 42


 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1431              		.loc 1 235 0
 1432 0526 4FF40051 		mov	r1, #8192
 1433 052a 2046     		mov	r0, r4
 1434 052c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1435              	.LVL188:
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1436              		.loc 1 236 0
 1437 0530 4FF48041 		mov	r1, #16384
 1438 0534 2046     		mov	r0, r4
 1439 0536 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1440              	.LVL189:
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1441              		.loc 1 237 0
 1442 053a 4FF40041 		mov	r1, #32768
 1443 053e 2046     		mov	r0, r4
 1444 0540 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1445              	.LVL190:
 1446 0544 E0E0     		b	.L30
 1447              	.LVL191:
 1448              	.L40:
 1449              	.LBE151:
 248:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1450              		.loc 1 248 0
 1451 0546 5148     		ldr	r0, .L70+52
 1452              	.LVL192:
 1453 0548 FFF7FEFF 		bl	printf
 1454              	.LVL193:
 249:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1455              		.loc 1 249 0
 1456 054c 9FED508A 		vldr.32	s16, .L70+56
 1457 0550 464D     		ldr	r5, .L70+20
 1458 0552 B0EE480A 		vmov.f32	s0, s16
 1459 0556 2846     		mov	r0, r5
 1460 0558 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1461              	.LVL194:
 250:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1462              		.loc 1 250 0
 1463 055c B0EE480A 		vmov.f32	s0, s16
 1464 0560 05F15800 		add	r0, r5, #88
 1465 0564 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1466              	.LVL195:
 251:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1467              		.loc 1 251 0
 1468 0568 B0EE480A 		vmov.f32	s0, s16
 1469 056c 4948     		ldr	r0, .L70+60
 1470 056e FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1471              	.LVL196:
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1472              		.loc 1 252 0
 1473 0572 4FF48071 		mov	r1, #256
 1474 0576 3C48     		ldr	r0, .L70+16
 1475 0578 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1476              	.LVL197:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1477              		.loc 1 253 0
 1478 057c 98BB     		cbnz	r0, .L67
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 43


 1479              	.L58:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1480              		.loc 1 253 0 is_stmt 0 discriminator 1
 1481 057e 424B     		ldr	r3, .L70+48
 1482 0580 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1483 0582 002B     		cmp	r3, #0
 1484 0584 00F0C080 		beq	.L30
 256:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1485              		.loc 1 256 0 is_stmt 1
 1486 0588 0823     		movs	r3, #8
 1487 058a 2370     		strb	r3, [r4]
 257:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1488              		.loc 1 257 0
 1489 058c 424B     		ldr	r3, .L70+64
 1490 058e 93ED007A 		vldr.32	s14, [r3]
 1491 0592 DFED427A 		vldr.32	s15, .L70+68
 1492 0596 67EE277A 		vmul.f32	s15, s14, s15
 1493 059a 17EE900A 		vmov	r0, s15
 1494 059e FFF7FEFF 		bl	__aeabi_f2d
 1495              	.LVL198:
 1496 05a2 2DA3     		adr	r3, .L70
 1497 05a4 D3E90023 		ldrd	r2, [r3]
 1498 05a8 FFF7FEFF 		bl	__aeabi_ddiv
 1499              	.LVL199:
 1500 05ac FFF7FEFF 		bl	__aeabi_d2f
 1501              	.LVL200:
 1502 05b0 2C4B     		ldr	r3, .L70+12
 1503 05b2 9861     		str	r0, [r3, #24]	@ float
 258:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1504              		.loc 1 258 0
 1505 05b4 344B     		ldr	r3, .L70+48
 1506 05b6 0022     		movs	r2, #0
 1507 05b8 1A70     		strb	r2, [r3]
 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1508              		.loc 1 260 0
 1509 05ba 2B4C     		ldr	r4, .L70+16
 1510              	.LVL201:
 1511 05bc 4FF48051 		mov	r1, #4096
 1512 05c0 2046     		mov	r0, r4
 1513 05c2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1514              	.LVL202:
 261:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1515              		.loc 1 261 0
 1516 05c6 4FF40051 		mov	r1, #8192
 1517 05ca 2046     		mov	r0, r4
 1518 05cc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1519              	.LVL203:
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1520              		.loc 1 262 0
 1521 05d0 4FF48041 		mov	r1, #16384
 1522 05d4 2046     		mov	r0, r4
 1523 05d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1524              	.LVL204:
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1525              		.loc 1 263 0
 1526 05da 4FF40041 		mov	r1, #32768
 1527 05de 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 44


 1528 05e0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1529              	.LVL205:
 1530 05e4 90E0     		b	.L30
 1531              	.LVL206:
 1532              	.L67:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1533              		.loc 1 253 0 discriminator 2
 1534 05e6 4FF48061 		mov	r1, #1024
 1535 05ea 1F48     		ldr	r0, .L70+16
 1536 05ec FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1537              	.LVL207:
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1538              		.loc 1 252 0 discriminator 2
 1539 05f0 0028     		cmp	r0, #0
 1540 05f2 C4D0     		beq	.L58
 1541 05f4 88E0     		b	.L30
 1542              	.LVL208:
 1543              	.L41:
 1544              	.LBB152:
 274:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 1545              		.loc 1 274 0
 1546 05f6 2A48     		ldr	r0, .L70+72
 1547              	.LVL209:
 1548 05f8 FFF7FEFF 		bl	printf
 1549              	.LVL210:
 275:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 1550              		.loc 1 275 0
 1551 05fc 294B     		ldr	r3, .L70+76
 1552 05fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 0600 63B9     		cbnz	r3, .L59
 277:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 1554              		.loc 1 277 0
 1555 0602 184B     		ldr	r3, .L70+12
 1556 0604 93ED060A 		vldr.32	s0, [r3, #24]
 1557 0608 194B     		ldr	r3, .L70+24
 1558 060a 9869     		ldr	r0, [r3, #24]
 1559 060c FFF7FEFF 		bl	_Z2goif
 1560              	.LVL211:
 1561 0610 0028     		cmp	r0, #0
 1562 0612 79D0     		beq	.L30
 279:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1563              		.loc 1 279 0
 1564 0614 234B     		ldr	r3, .L70+76
 1565 0616 0122     		movs	r2, #1
 1566 0618 1A70     		strb	r2, [r3]
 1567 061a 75E0     		b	.L30
 1568              	.L59:
 284:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1569              		.loc 1 284 0
 1570 061c FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1571              	.LVL212:
 1572 0620 0028     		cmp	r0, #0
 1573 0622 71D0     		beq	.L30
 286:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1574              		.loc 1 286 0
 1575 0624 0923     		movs	r3, #9
 1576 0626 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 45


 287:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1577              		.loc 1 287 0
 1578 0628 0F4C     		ldr	r4, .L70+16
 1579              	.LVL213:
 1580 062a 4FF48051 		mov	r1, #4096
 1581 062e 2046     		mov	r0, r4
 1582 0630 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1583              	.LVL214:
 288:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1584              		.loc 1 288 0
 1585 0634 4FF40051 		mov	r1, #8192
 1586 0638 2046     		mov	r0, r4
 1587 063a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1588              	.LVL215:
 289:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1589              		.loc 1 289 0
 1590 063e 4FF48041 		mov	r1, #16384
 1591 0642 2046     		mov	r0, r4
 1592 0644 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1593              	.LVL216:
 290:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1594              		.loc 1 290 0
 1595 0648 4FF40041 		mov	r1, #32768
 1596 064c 2046     		mov	r0, r4
 1597 064e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1598              	.LVL217:
 1599 0652 59E0     		b	.L30
 1600              	.L71:
 1601 0654 AFF30080 		.align	3
 1602              	.L70:
 1603 0658 182D4454 		.word	1413754136
 1604 065c FB210940 		.word	1074340347
 1605 0660 60000000 		.word	.LC17
 1606 0664 00000000 		.word	.LANCHOR3
 1607 0668 000C0240 		.word	1073875968
 1608 066c 00000000 		.word	leg
 1609 0670 00000000 		.word	.LANCHOR2
 1610 0674 6C000000 		.word	.LC18
 1611 0678 78000000 		.word	.LC19
 1612 067c 84000000 		.word	.LC20
 1613 0680 90000000 		.word	.LC21
 1614 0684 00000000 		.word	.LANCHOR8
 1615 0688 00000000 		.word	.LANCHOR1
 1616 068c 9C000000 		.word	.LC22
 1617 0690 00000000 		.word	0
 1618 0694 00000000 		.word	steering
 1619 0698 00000000 		.word	robot_angle
 1620 069c 00003443 		.word	1127481344
 1621 06a0 A8000000 		.word	.LC23
 1622 06a4 00000000 		.word	.LANCHOR9
 1623              	.LVL218:
 1624              	.L42:
 1625              	.LBE152:
 301:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1626              		.loc 1 301 0
 1627 06a8 2348     		ldr	r0, .L72
 1628              	.LVL219:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 46


 1629 06aa FFF7FEFF 		bl	puts
 1630              	.LVL220:
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1631              		.loc 1 302 0
 1632 06ae 9FED238A 		vldr.32	s16, .L72+4
 1633 06b2 234C     		ldr	r4, .L72+8
 1634              	.LVL221:
 1635 06b4 B0EE480A 		vmov.f32	s0, s16
 1636 06b8 2046     		mov	r0, r4
 1637 06ba FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1638              	.LVL222:
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1639              		.loc 1 303 0
 1640 06be B0EE480A 		vmov.f32	s0, s16
 1641 06c2 04F15800 		add	r0, r4, #88
 1642 06c6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1643              	.LVL223:
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1644              		.loc 1 304 0
 1645 06ca B0EE480A 		vmov.f32	s0, s16
 1646 06ce 1D48     		ldr	r0, .L72+12
 1647 06d0 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1648              	.LVL224:
 306:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1649              		.loc 1 306 0
 1650 06d4 1C4C     		ldr	r4, .L72+16
 1651 06d6 4FF48051 		mov	r1, #4096
 1652 06da 2046     		mov	r0, r4
 1653 06dc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1654              	.LVL225:
 307:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1655              		.loc 1 307 0
 1656 06e0 4FF40051 		mov	r1, #8192
 1657 06e4 2046     		mov	r0, r4
 1658 06e6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1659              	.LVL226:
 308:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1660              		.loc 1 308 0
 1661 06ea 4FF48041 		mov	r1, #16384
 1662 06ee 2046     		mov	r0, r4
 1663 06f0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1664              	.LVL227:
 309:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1665              		.loc 1 309 0
 1666 06f4 4FF40041 		mov	r1, #32768
 1667 06f8 2046     		mov	r0, r4
 1668 06fa FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1669              	.LVL228:
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1670              		.loc 1 310 0
 1671 06fe 0122     		movs	r2, #1
 1672 0700 0421     		movs	r1, #4
 1673 0702 1248     		ldr	r0, .L72+20
 1674 0704 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1675              	.LVL229:
 1676              	.L30:
 1677              	.LBE117:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 47


 1678              	.LBE116:
 320:Core/Src/robot/robot.cpp **** }
 1679              		.loc 1 320 0
 1680 0708 07B0     		add	sp, sp, #28
 1681              	.LCFI8:
 1682              		.cfi_remember_state
 1683              		.cfi_def_cfa_offset 44
 1684              		@ sp needed
 1685 070a BDEC028B 		vldm	sp!, {d8}
 1686              	.LCFI9:
 1687              		.cfi_restore 80
 1688              		.cfi_restore 81
 1689              		.cfi_def_cfa_offset 36
 1690 070e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1691              	.LVL230:
 1692              	.L43:
 1693              	.LCFI10:
 1694              		.cfi_restore_state
 1695              	.LBB154:
 1696              	.LBB153:
 315:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1697              		.loc 1 315 0
 1698 0712 0B4C     		ldr	r4, .L72+8
 1699 0714 B2EE040A 		vmov.f32	s0, #1.0e+1
 1700 0718 2046     		mov	r0, r4
 1701              	.LVL231:
 1702 071a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1703              	.LVL232:
 316:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1704              		.loc 1 316 0
 1705 071e B2EE040A 		vmov.f32	s0, #1.0e+1
 1706 0722 04F15800 		add	r0, r4, #88
 1707 0726 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1708              	.LVL233:
 317:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1709              		.loc 1 317 0
 1710 072a 9FED040A 		vldr.32	s0, .L72+4
 1711 072e 0548     		ldr	r0, .L72+12
 1712 0730 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1713              	.LVL234:
 1714              	.LBE153:
 1715              	.LBE154:
 320:Core/Src/robot/robot.cpp **** }
 1716              		.loc 1 320 0
 1717 0734 E8E7     		b	.L30
 1718              	.L73:
 1719 0736 00BF     		.align	2
 1720              	.L72:
 1721 0738 B4000000 		.word	.LC24
 1722 073c 00000000 		.word	0
 1723 0740 00000000 		.word	leg
 1724 0744 00000000 		.word	steering
 1725 0748 000C0240 		.word	1073875968
 1726 074c 00000240 		.word	1073872896
 1727              		.cfi_endproc
 1728              	.LFE497:
 1730              		.section	.text._Z4playv,"ax",%progbits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 48


 1731              		.align	1
 1732              		.global	_Z4playv
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1736              		.fpu fpv4-sp-d16
 1738              	_Z4playv:
 1739              	.LFB498:
 323:Core/Src/robot/robot.cpp **** {
 1740              		.loc 1 323 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744 0000 10B5     		push	{r4, lr}
 1745              	.LCFI11:
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 4, -8
 1748              		.cfi_offset 14, -4
 324:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1749              		.loc 1 324 0
 1750 0002 0948     		ldr	r0, .L76
 1751 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1752              	.LVL235:
 1753              	.LBB155:
 1754              	.LBB156:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1755              		.loc 2 46 0
 1756 0008 084C     		ldr	r4, .L76+4
 1757 000a 2046     		mov	r0, r4
 1758 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1759              	.LVL236:
 1760              	.LBE156:
 1761              	.LBE155:
 325:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1762              		.loc 1 325 0
 1763 0010 074B     		ldr	r3, .L76+8
 1764 0012 83ED000A 		vstr.32	s0, [r3]
 1765              	.LVL237:
 1766              	.LBB157:
 1767              	.LBB158:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1768              		.loc 2 46 0
 1769 0016 04F15800 		add	r0, r4, #88
 1770 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1771              	.LVL238:
 1772              	.LBE158:
 1773              	.LBE157:
 326:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1774              		.loc 1 326 0
 1775 001e 054B     		ldr	r3, .L76+12
 1776 0020 83ED000A 		vstr.32	s0, [r3]
 328:Core/Src/robot/robot.cpp **** }
 1777              		.loc 1 328 0
 1778 0024 0120     		movs	r0, #1
 1779 0026 10BD     		pop	{r4, pc}
 1780              	.L77:
 1781              		.align	2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 49


 1782              	.L76:
 1783 0028 00000000 		.word	.LANCHOR0
 1784 002c 3C000000 		.word	leg+60
 1785 0030 00000000 		.word	.LANCHOR10
 1786 0034 00000000 		.word	.LANCHOR11
 1787              		.cfi_endproc
 1788              	.LFE498:
 1790              		.global	angles
 1791              		.global	steps
 1792              		.global	omega1
 1793              		.global	omega0
 1794              		.global	USE_IMU_FLAG
 1795              		.global	GEREGE_FLAG
 1796              		.global	ROBOT_START_FLAG
 1797              		.global	robo_state
 1798              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1801              	GEREGE_FLAG:
 1802 0000 00       		.space	1
 1803              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1804              		.set	.LANCHOR1,. + 0
 1807              	ROBOT_START_FLAG:
 1808 0000 00       		.space	1
 1809              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1810              		.align	2
 1811              		.set	.LANCHOR6,. + 0
 1814              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1815 0000 00000000 		.space	4
 1816              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
 1817              		.set	.LANCHOR8,. + 0
 1820              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1821 0000 00       		.space	1
 1822              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1823              		.set	.LANCHOR9,. + 0
 1826              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1827 0000 00       		.space	1
 1828              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1829              		.align	2
 1830              		.set	.LANCHOR7,. + 0
 1833              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1834 0000 00000000 		.space	4
 1835              		.section	.bss.omega0,"aw",%nobits
 1836              		.align	2
 1837              		.set	.LANCHOR10,. + 0
 1840              	omega0:
 1841 0000 00000000 		.space	4
 1842              		.section	.bss.omega1,"aw",%nobits
 1843              		.align	2
 1844              		.set	.LANCHOR11,. + 0
 1847              	omega1:
 1848 0000 00000000 		.space	4
 1849              		.section	.bss.robo_state,"aw",%nobits
 1850              		.set	.LANCHOR0,. + 0
 1853              	robo_state:
 1854 0000 00       		.space	1
 1855              		.section	.data.USE_IMU_FLAG,"aw",%progbits
 1856              		.set	.LANCHOR4,. + 0
 1859              	USE_IMU_FLAG:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 50


 1860 0000 01       		.byte	1
 1861              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1862              		.set	.LANCHOR5,. + 0
 1865              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1866 0000 01       		.byte	1
 1867              		.section	.data.angles,"aw",%progbits
 1868              		.align	2
 1869              		.set	.LANCHOR3,. + 0
 1872              	angles:
 1873 0000 00000000 		.word	0
 1874 0004 00003442 		.word	1110704128
 1875 0008 00003442 		.word	1110704128
 1876 000c 00007042 		.word	1114636288
 1877 0010 000020C1 		.word	-1054867456
 1878 0014 00000000 		.word	0
 1879 0018 0000B4C2 		.word	-1028390912
 1880              		.section	.data.steps,"aw",%progbits
 1881              		.align	2
 1882              		.set	.LANCHOR2,. + 0
 1885              	steps:
 1886 0000 06000000 		.word	6
 1887 0004 0A000000 		.word	10
 1888 0008 0F000000 		.word	15
 1889 000c 11000000 		.word	17
 1890 0010 16000000 		.word	22
 1891 0014 18000000 		.word	24
 1892 0018 1F000000 		.word	31
 1893              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
 1894              		.align	2
 1895              	.LC13:
 1896 0000 0A484F4D 		.ascii	"\012HOME\000"
 1896      4500
 1897 0006 0000     		.space	2
 1898              	.LC14:
 1899 0008 09256409 		.ascii	"\011%d\011\000"
 1899      00
 1900 000d 000000   		.space	3
 1901              	.LC15:
 1902 0010 6C656730 		.ascii	"leg0_angle = %d\011leg1_angle = %d\011steering_angl"
 1902      5F616E67 
 1902      6C65203D 
 1902      20256409 
 1902      6C656731 
 1903 003d 65203D20 		.ascii	"e = %d\011robot_angle = %d\011\000"
 1903      25640972 
 1903      6F626F74 
 1903      5F616E67 
 1903      6C65203D 
 1904 0056 0000     		.space	2
 1905              	.LC16:
 1906 0058 0A4D6172 		.ascii	"\012March\000"
 1906      636800
 1907 005f 00       		.space	1
 1908              	.LC17:
 1909 0060 0A547572 		.ascii	"\012Turn 45\000"
 1909      6E203435 
 1909      00
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 51


 1910 0069 000000   		.space	3
 1911              	.LC18:
 1912 006c 0A53616E 		.ascii	"\012Sand dune\000"
 1912      64206475 
 1912      6E6500
 1913 0077 00       		.space	1
 1914              	.LC19:
 1915 0078 0A537461 		.ascii	"\012State D\000"
 1915      74652044 
 1915      00
 1916 0081 000000   		.space	3
 1917              	.LC20:
 1918 0084 0A547572 		.ascii	"\012Turn 90\000"
 1918      6E203930 
 1918      00
 1919 008d 000000   		.space	3
 1920              	.LC21:
 1921 0090 0A547573 		.ascii	"\012Tussock\000"
 1921      736F636B 
 1921      00
 1922 0099 000000   		.space	3
 1923              	.LC22:
 1924 009c 0A426173 		.ascii	"\012Base camp\000"
 1924      65206361 
 1924      6D7000
 1925 00a7 00       		.space	1
 1926              	.LC23:
 1927 00a8 0A4D4F55 		.ascii	"\012MOUNTAIN\000"
 1927      4E544149 
 1927      4E00
 1928 00b2 0000     		.space	2
 1929              	.LC24:
 1930 00b4 0A55554B 		.ascii	"\012UUKHAI\000"
 1930      48414900 
 1931              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1932              		.align	2
 1933              	.LC0:
 1934 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1934      6F6E6520 
 1934      4D415243 
 1934      4800
 1935 000e 0000     		.space	2
 1936              	.LC1:
 1937 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1937      6F6E6520 
 1937      343500
 1938 001b 00       		.space	1
 1939              	.LC2:
 1940 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
 1940      6F6E6520 
 1940      53414E44 
 1940      5F44554E 
 1940      4500
 1941 002e 0000     		.space	2
 1942              	.LC3:
 1943 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
 1943      6F6E6520 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 52


 1943      4D4F554E 
 1943      5441494E 
 1943      00
 1944 0041 000000   		.space	3
 1945              	.LC4:
 1946 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
 1946      6F6E6520 
 1946      44656661 
 1946      756C7400 
 1947              	.LC5:
 1948 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1948      6F6E6520 
 1948      52454400 
 1949              	.LC6:
 1950 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1950      6F6E6520 
 1950      424C5545 
 1950      00
 1951 006d 000000   		.space	3
 1952              	.LC7:
 1953 0070 0A092061 		.ascii	"\012\011 angles= %d\000"
 1953      6E676C65 
 1953      733D2025 
 1953      6400
 1954 007e 0000     		.space	2
 1955              	.LC8:
 1956 0080 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1956      6F6E6520 
 1956      44656661 
 1956      756C745F 
 1956      52454400 
 1957              		.section	.rodata._Z4testv.str1.4,"aMS",%progbits,1
 1958              		.align	2
 1959              	.LC9:
 1960 0000 0A204652 		.ascii	"\012 FRONT\000"
 1960      4F4E5400 
 1961              	.LC10:
 1962 0008 0A204241 		.ascii	"\012 BACK\000"
 1962      434B00
 1963 000f 00       		.space	1
 1964              	.LC11:
 1965 0010 0A205550 		.ascii	"\012 UP\000"
 1965      00
 1966 0015 000000   		.space	3
 1967              	.LC12:
 1968 0018 0A6C6567 		.ascii	"\012leg0_angle = %d\011leg1_angle = %d\011steering_"
 1968      305F616E 
 1968      676C6520 
 1968      3D202564 
 1968      096C6567 
 1969 0042 616E676C 		.ascii	"angle = %d\000"
 1969      65203D20 
 1969      256400
 1970              		.text
 1971              	.Letext0:
 1972              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1973              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 53


 1974              		.file 7 "Core/Inc/sys/FreeRTOSConfig.h"
 1975              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1976              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1977              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1978              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1979              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1980              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1981              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1982              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1983              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1984              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1985              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1986              		.file 19 "Core/Inc/periphs/tim.h"
 1987              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1988              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1989              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1990              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1991              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1992              		.file 25 "Core/Inc/devs/motor.h"
 1993              		.file 26 "Core/Inc/devs/encoder.h"
 1994              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1995              		.file 28 "Core/Inc/devs/limit_switch.h"
 1996              		.file 29 "Core/Inc/robot/robot.h"
 1997              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1998              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1999              		.file 32 "Core/Inc/robot/robot_functions.h"
 2000              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:343    .text._Z11zone_selectv:000001ac $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:368    .text._Z4testv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:375    .text._Z4testv:00000000 _Z4testv
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:552    .text._Z4testv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:567    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:574    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:598    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:605    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:640    .text._Z11start_RobotP12Robot_States:00000018 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:651    .text._Z11start_RobotP12Robot_States:0000002e $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1125   .text._Z11start_RobotP12Robot_States:00000308 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1154   .text._Z11start_RobotP12Robot_States:00000370 $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1603   .text._Z11start_RobotP12Robot_States:00000658 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1627   .text._Z11start_RobotP12Robot_States:000006a8 $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1721   .text._Z11start_RobotP12Robot_States:00000738 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1731   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1738   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1783   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1872   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1885   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1847   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1840   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1859   .data.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1801   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1807   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1853   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1802   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1808   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1810   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1814   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1820   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1821   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1826   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1827   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1829   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1833   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1836   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1843   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1854   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1865   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1868   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1881   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1894   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1932   .rodata._Z11zone_selectv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s:1958   .rodata._Z4testv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccFVrg3p.s 			page 55


_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
_ZN7encoder16get_actual_angleEv
_ZN7encoder9get_angleEv
steering
__aeabi_d2f
HAL_GPIO_WritePin
_Z11getup_n_runv
HAL_GetTick
__cxa_guard_acquire
__cxa_guard_release
_Z2goif
HAL_GPIO_TogglePin
robot_angle
curr_angle
initial_angle
_Z23initialize_leg_positionv
puts
_ZN8steering9set_omegaEf
_ZN7encoder9get_omegaEv
