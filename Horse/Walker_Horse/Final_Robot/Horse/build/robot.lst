ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB505:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = true;
  15:Core/Src/robot/robot.cpp **** float omega0 = 0;
  16:Core/Src/robot/robot.cpp **** float omega1 = 0;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** // float steps[7] = {7, 13, 17, 19, 24, 27, 36}`;        //for 7 rad/sec
  19:Core/Src/robot/robot.cpp **** float steps[7] = {5, 9, 13, 16, 21, 23, 30};		//for 9 rad/sec
  20:Core/Src/robot/robot.cpp **** float angles[7] = {0, 45, 45, 55, -10, 0, -90};
  21:Core/Src/robot/robot.cpp **** 
  22:Core/Src/robot/robot.cpp **** 
  23:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  24:Core/Src/robot/robot.cpp **** {
  25:Core/Src/robot/robot.cpp **** 	switch (*state_)
  26:Core/Src/robot/robot.cpp **** 	{
  27:Core/Src/robot/robot.cpp **** 	case HOME:
  28:Core/Src/robot/robot.cpp **** 	{
  29:Core/Src/robot/robot.cpp **** 		/**
  30:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  31:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  33:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
  34:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  35:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  36:Core/Src/robot/robot.cpp **** 			*/
  37:Core/Src/robot/robot.cpp **** 
  38:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  39:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
  40:Core/Src/robot/robot.cpp **** 		if(HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin)==GPIO_PIN_RESET){
  41:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
  42:Core/Src/robot/robot.cpp **** 		}
  43:Core/Src/robot/robot.cpp **** 		else{
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  48:Core/Src/robot/robot.cpp **** 		
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  50:Core/Src/robot/robot.cpp **** 		{
  51:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  52:Core/Src/robot/robot.cpp **** 			initial_angle.setZ(initial_angle.getZ()+5);
  53:Core/Src/robot/robot.cpp **** 			printf("\t%d\t", (int)initial_angle.getZ());
  54:Core/Src/robot/robot.cpp **** 		}
  55:Core/Src/robot/robot.cpp **** 		else if(ROBOT_START_FLAG)
  56:Core/Src/robot/robot.cpp **** 		{
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  59:Core/Src/robot/robot.cpp **** 		}
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
  62:Core/Src/robot/robot.cpp **** 		if((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  63:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  64:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  65:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  66:Core/Src/robot/robot.cpp **** 		{
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  70:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  71:Core/Src/robot/robot.cpp **** 			if(getup_n_run() == true){
  72:Core/Src/robot/robot.cpp **** 				zone_select();
  73:Core/Src/robot/robot.cpp **** 			}
  74:Core/Src/robot/robot.cpp **** 			printf("\n\nEntered here!!\n\n");
  75:Core/Src/robot/robot.cpp **** 		}
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET))
  77:Core/Src/robot/robot.cpp **** 		{
  78:Core/Src/robot/robot.cpp **** 
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  85:Core/Src/robot/robot.cpp **** 			
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
  88:Core/Src/robot/robot.cpp **** 			{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 3


  89:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
  90:Core/Src/robot/robot.cpp **** 					zone_select();
  91:Core/Src/robot/robot.cpp **** 				}
  92:Core/Src/robot/robot.cpp **** 			}
  93:Core/Src/robot/robot.cpp **** 		}
  94:Core/Src/robot/robot.cpp **** 		
  95:Core/Src/robot/robot.cpp **** 		else{
  96:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  97:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  98:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
  99:Core/Src/robot/robot.cpp **** 		}
 100:Core/Src/robot/robot.cpp **** 		
 101:Core/Src/robot/robot.cpp **** 	}
 102:Core/Src/robot/robot.cpp **** 	break;
 103:Core/Src/robot/robot.cpp **** 
 104:Core/Src/robot/robot.cpp **** 	case MARCH:
 105:Core/Src/robot/robot.cpp **** 	{
 106:Core/Src/robot/robot.cpp **** 		/*
 107:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
 108:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
 109:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
 110:Core/Src/robot/robot.cpp **** 		*/
 111:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 112:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 113:Core/Src/robot/robot.cpp **** 		{
 114:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 115:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 119:Core/Src/robot/robot.cpp **** 		}
 120:Core/Src/robot/robot.cpp **** 	}
 121:Core/Src/robot/robot.cpp **** 	break;
 122:Core/Src/robot/robot.cpp **** 
 123:Core/Src/robot/robot.cpp **** 	case TURN_45:
 124:Core/Src/robot/robot.cpp **** 	{
 125:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 126:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 127:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 128:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 129:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 130:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 131:Core/Src/robot/robot.cpp **** 		*/
 132:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 133:Core/Src/robot/robot.cpp **** 
 134:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 135:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 136:Core/Src/robot/robot.cpp **** 		{
 137:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 138:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 139:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 140:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 141:Core/Src/robot/robot.cpp **** 
 142:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 4


 146:Core/Src/robot/robot.cpp **** 		}
 147:Core/Src/robot/robot.cpp **** 		//*/
 148:Core/Src/robot/robot.cpp **** 	}
 149:Core/Src/robot/robot.cpp **** 	break;
 150:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 151:Core/Src/robot/robot.cpp **** 	{
 152:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 153:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 154:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 155:Core/Src/robot/robot.cpp **** 			*/
 156:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 157:Core/Src/robot/robot.cpp **** 
 158:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 159:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 160:Core/Src/robot/robot.cpp **** 		{
 161:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 162:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 163:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 164:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 165:Core/Src/robot/robot.cpp **** 
 166:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 170:Core/Src/robot/robot.cpp **** 		}
 171:Core/Src/robot/robot.cpp **** 		//*/
 172:Core/Src/robot/robot.cpp **** 	}
 173:Core/Src/robot/robot.cpp **** 	break;
 174:Core/Src/robot/robot.cpp **** 	case STATE_D:
 175:Core/Src/robot/robot.cpp **** 	{
 176:Core/Src/robot/robot.cpp **** 		/*
 177:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 178:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 179:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 180:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 181:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 182:Core/Src/robot/robot.cpp **** 		{
 183:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 184:Core/Src/robot/robot.cpp **** 
 185:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 189:Core/Src/robot/robot.cpp **** 		}
 190:Core/Src/robot/robot.cpp **** 	}
 191:Core/Src/robot/robot.cpp **** 	break;
 192:Core/Src/robot/robot.cpp **** 
 193:Core/Src/robot/robot.cpp **** 	case TURN_90:
 194:Core/Src/robot/robot.cpp **** 	{
 195:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 196:Core/Src/robot/robot.cpp **** 			no of steps = 
 197:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 198:Core/Src/robot/robot.cpp **** 			*/
 199:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 200:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 201:Core/Src/robot/robot.cpp **** 		{
 202:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 5


 203:Core/Src/robot/robot.cpp **** 
 204:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 208:Core/Src/robot/robot.cpp **** 		}
 209:Core/Src/robot/robot.cpp **** 	}
 210:Core/Src/robot/robot.cpp **** 	break;
 211:Core/Src/robot/robot.cpp **** 
 212:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 213:Core/Src/robot/robot.cpp **** 	{
 214:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 215:Core/Src/robot/robot.cpp **** 			robot stops 
 216:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 217:Core/Src/robot/robot.cpp **** 			*/
 218:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 219:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 220:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG){
 221:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 222:Core/Src/robot/robot.cpp **** 			{
 223:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 224:Core/Src/robot/robot.cpp **** 			}
 225:Core/Src/robot/robot.cpp **** 		}
 226:Core/Src/robot/robot.cpp **** 		else{
 227:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 228:Core/Src/robot/robot.cpp **** 			{
 229:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 230:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 231:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 232:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 233:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 235:Core/Src/robot/robot.cpp **** 			}
 236:Core/Src/robot/robot.cpp **** 		}
 237:Core/Src/robot/robot.cpp **** 	}
 238:Core/Src/robot/robot.cpp **** 	break;
 239:Core/Src/robot/robot.cpp **** 
 240:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 241:Core/Src/robot/robot.cpp **** 	{
 242:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 243:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 244:Core/Src/robot/robot.cpp **** 			*/
 245:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 246:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 247:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 248:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 249:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 250:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 251:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 252:Core/Src/robot/robot.cpp **** 		{
 253:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 254:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 255:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 256:Core/Src/robot/robot.cpp **** 			
 257:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 258:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 259:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 261:Core/Src/robot/robot.cpp **** 		}
 262:Core/Src/robot/robot.cpp **** 	}
 263:Core/Src/robot/robot.cpp **** 	break;
 264:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 265:Core/Src/robot/robot.cpp **** 	{
 266:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 267:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 268:Core/Src/robot/robot.cpp **** 			*/
 269:Core/Src/robot/robot.cpp **** 		
 270:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 271:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 272:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG_2){
 273:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 274:Core/Src/robot/robot.cpp **** 			{
 275:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 276:Core/Src/robot/robot.cpp **** 			}
 277:Core/Src/robot/robot.cpp **** 		}
 278:Core/Src/robot/robot.cpp **** 		else{
 279:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 280:Core/Src/robot/robot.cpp **** 			{
 281:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 282:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 283:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 284:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 285:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 286:Core/Src/robot/robot.cpp **** 			}
 287:Core/Src/robot/robot.cpp **** 		}
 288:Core/Src/robot/robot.cpp **** 	}
 289:Core/Src/robot/robot.cpp **** 
 290:Core/Src/robot/robot.cpp **** 	break;
 291:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 292:Core/Src/robot/robot.cpp **** 	{
 293:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 294:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 295:Core/Src/robot/robot.cpp **** 			*/
 296:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 297:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 298:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 299:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 300:Core/Src/robot/robot.cpp **** 		
 301:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 302:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 303:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 304:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 305:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 306:Core/Src/robot/robot.cpp **** 	}
 307:Core/Src/robot/robot.cpp **** 	break;
 308:Core/Src/robot/robot.cpp **** 	case TUNE:
 309:Core/Src/robot/robot.cpp **** 	{
 310:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 311:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 312:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 313:Core/Src/robot/robot.cpp **** 	}
 314:Core/Src/robot/robot.cpp **** 	}
 315:Core/Src/robot/robot.cpp **** }
 316:Core/Src/robot/robot.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 7


 317:Core/Src/robot/robot.cpp **** bool play()
 318:Core/Src/robot/robot.cpp **** {
 319:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 320:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 321:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 322:Core/Src/robot/robot.cpp **** 	return true;
 323:Core/Src/robot/robot.cpp **** }
 324:Core/Src/robot/robot.cpp **** 
 325:Core/Src/robot/robot.cpp **** void zone_select(void)
 326:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 326 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LBB50:
 327:Core/Src/robot/robot.cpp **** 
 328:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 328 0
  39 0002 4FF48041 		mov	r1, #16384
  40 0006 5F48     		ldr	r0, .L17
  41 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000c 08BB     		cbnz	r0, .L2
 329:Core/Src/robot/robot.cpp **** 	{
 330:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 330 0
  45 000e 0123     		movs	r3, #1
  46 0010 5D4A     		ldr	r2, .L17+4
  47 0012 1370     		strb	r3, [r2]
 331:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 331 0
  49 0014 5D4A     		ldr	r2, .L17+8
  50 0016 1370     		strb	r3, [r2]
 332:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 332 0
  52 0018 5D48     		ldr	r0, .L17+12
  53 001a FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE50:
  57              	.LBB60:
 333:Core/Src/robot/robot.cpp **** 	}
 334:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 335:Core/Src/robot/robot.cpp **** 	{
 336:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
 337:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 338:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1]-2;
 339:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1]-2;
 340:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 341:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 342:Core/Src/robot/robot.cpp **** 		{
 343:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 8


 344:Core/Src/robot/robot.cpp **** 		}
 345:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 346:Core/Src/robot/robot.cpp **** 	}
 347:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 348:Core/Src/robot/robot.cpp **** 	{
 349:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 350:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 351:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 352:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 353:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 354:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 355:Core/Src/robot/robot.cpp **** 		{
 356:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 357:Core/Src/robot/robot.cpp **** 		}
 358:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 359:Core/Src/robot/robot.cpp **** 	}
 360:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 361:Core/Src/robot/robot.cpp **** 	{
 362:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 363:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 364:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 365:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 366:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 367:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 368:Core/Src/robot/robot.cpp **** 		{
 369:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 370:Core/Src/robot/robot.cpp **** 		}
 371:Core/Src/robot/robot.cpp **** 	}
 372:Core/Src/robot/robot.cpp **** 	else
 373:Core/Src/robot/robot.cpp **** 	{
 374:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 375:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 376:Core/Src/robot/robot.cpp **** 	}
 377:Core/Src/robot/robot.cpp **** 
 378:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 378 0
  59 001e 4FF48061 		mov	r1, #1024
  60 0022 5848     		ldr	r0, .L17
  61 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0028 0028     		cmp	r0, #0
  64 002a 40F09180 		bne	.L10
  65              	.LBB61:
 379:Core/Src/robot/robot.cpp **** 	{
 380:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 380 0
  67 002e 5948     		ldr	r0, .L17+16
  68 0030 FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB62:
 381:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 381 0
  72 0034 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L12:
  75              		.loc 1 381 0 is_stmt 0 discriminator 3
  76 0036 062A     		cmp	r2, #6
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 9


  77 0038 00F3A380 		bgt	.L1
 382:Core/Src/robot/robot.cpp **** 		{
 383:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 383 0 is_stmt 1 discriminator 2
  79 003c 564B     		ldr	r3, .L17+20
  80 003e 03EB8203 		add	r3, r3, r2, lsl #2
  81 0042 D3ED007A 		vldr.32	s15, [r3]
  82 0046 F1EE677A 		vneg.f32	s15, s15
  83 004a C3ED007A 		vstr.32	s15, [r3]
 381:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  84              		.loc 1 381 0 discriminator 2
  85 004e 0132     		adds	r2, r2, #1
  86              	.LVL5:
  87 0050 F1E7     		b	.L12
  88              	.LVL6:
  89              	.L2:
  90              	.LBE62:
  91              	.LBE61:
  92              	.LBE60:
  93              	.LBB66:
  94              	.LBB51:
 334:Core/Src/robot/robot.cpp **** 	{
  95              		.loc 1 334 0
  96 0052 1021     		movs	r1, #16
  97 0054 5148     		ldr	r0, .L17+24
  98 0056 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  99              	.LVL7:
 100 005a 20BB     		cbnz	r0, .L4
 101              	.LBB52:
 336:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 102              		.loc 1 336 0
 103 005c 5048     		ldr	r0, .L17+28
 104 005e FFF7FEFF 		bl	printf
 105              	.LVL8:
 337:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1]-2;
 106              		.loc 1 337 0
 107 0062 494B     		ldr	r3, .L17+4
 108 0064 0222     		movs	r2, #2
 109 0066 1A70     		strb	r2, [r3]
 338:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1]-2;
 110              		.loc 1 338 0
 111 0068 4E4B     		ldr	r3, .L17+32
 112 006a D3ED017A 		vldr.32	s15, [r3, #4]
 113 006e B0EE007A 		vmov.f32	s14, #2.0e+0
 114 0072 77EEC77A 		vsub.f32	s15, s15, s14
 115 0076 FDEEE77A 		vcvt.s32.f32	s15, s15
 116 007a 4B4A     		ldr	r2, .L17+36
 117 007c C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 339:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 118              		.loc 1 339 0
 119 0080 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 340:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 120              		.loc 1 340 0
 121 0084 444B     		ldr	r3, .L17+20
 122 0086 93ED017A 		vldr.32	s14, [r3, #4]
 123              	.LVL9:
 124              	.LBB53:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 10


 341:Core/Src/robot/robot.cpp **** 		{
 125              		.loc 1 341 0
 126 008a 0022     		movs	r2, #0
 127              	.LVL10:
 128              	.L5:
 341:Core/Src/robot/robot.cpp **** 		{
 129              		.loc 1 341 0 is_stmt 0 discriminator 3
 130 008c 062A     		cmp	r2, #6
 131 008e C6DC     		bgt	.L3
 343:Core/Src/robot/robot.cpp **** 		}
 132              		.loc 1 343 0 is_stmt 1 discriminator 2
 133 0090 414B     		ldr	r3, .L17+20
 134 0092 03EB8203 		add	r3, r3, r2, lsl #2
 135 0096 D3ED007A 		vldr.32	s15, [r3]
 136 009a 77EEC77A 		vsub.f32	s15, s15, s14
 137 009e C3ED007A 		vstr.32	s15, [r3]
 341:Core/Src/robot/robot.cpp **** 		{
 138              		.loc 1 341 0 discriminator 2
 139 00a2 0132     		adds	r2, r2, #1
 140              	.LVL11:
 141 00a4 F2E7     		b	.L5
 142              	.LVL12:
 143              	.L4:
 144              	.LBE53:
 145              	.LBE52:
 146              	.LBB54:
 347:Core/Src/robot/robot.cpp **** 	{
 147              		.loc 1 347 0
 148 00a6 4FF48051 		mov	r1, #4096
 149 00aa 3648     		ldr	r0, .L17
 150 00ac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 151              	.LVL13:
 152 00b0 00BB     		cbnz	r0, .L6
 153              	.LBB55:
 349:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 154              		.loc 1 349 0
 155 00b2 3E48     		ldr	r0, .L17+40
 156 00b4 FFF7FEFF 		bl	printf
 157              	.LVL14:
 350:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 158              		.loc 1 350 0
 159 00b8 334B     		ldr	r3, .L17+4
 160 00ba 0422     		movs	r2, #4
 161 00bc 1A70     		strb	r2, [r3]
 351:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 162              		.loc 1 351 0
 163 00be 394B     		ldr	r3, .L17+32
 164 00c0 D3ED027A 		vldr.32	s15, [r3, #8]
 165 00c4 FDEEE77A 		vcvt.s32.f32	s15, s15
 166 00c8 374A     		ldr	r2, .L17+36
 167 00ca C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 352:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 168              		.loc 1 352 0
 169 00ce C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 353:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 170              		.loc 1 353 0
 171 00d2 314B     		ldr	r3, .L17+20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 11


 172 00d4 93ED027A 		vldr.32	s14, [r3, #8]
 173              	.LVL15:
 174              	.LBB56:
 354:Core/Src/robot/robot.cpp **** 		{
 175              		.loc 1 354 0
 176 00d8 0022     		movs	r2, #0
 177              	.LVL16:
 178              	.L7:
 354:Core/Src/robot/robot.cpp **** 		{
 179              		.loc 1 354 0 is_stmt 0 discriminator 3
 180 00da 062A     		cmp	r2, #6
 181 00dc 9FDC     		bgt	.L3
 356:Core/Src/robot/robot.cpp **** 		}
 182              		.loc 1 356 0 is_stmt 1 discriminator 2
 183 00de 2E4B     		ldr	r3, .L17+20
 184 00e0 03EB8203 		add	r3, r3, r2, lsl #2
 185 00e4 D3ED007A 		vldr.32	s15, [r3]
 186 00e8 77EEC77A 		vsub.f32	s15, s15, s14
 187 00ec C3ED007A 		vstr.32	s15, [r3]
 354:Core/Src/robot/robot.cpp **** 		{
 188              		.loc 1 354 0 discriminator 2
 189 00f0 0132     		adds	r2, r2, #1
 190              	.LVL17:
 191 00f2 F2E7     		b	.L7
 192              	.LVL18:
 193              	.L6:
 194              	.LBE56:
 195              	.LBE55:
 196              	.LBB57:
 360:Core/Src/robot/robot.cpp **** 	{
 197              		.loc 1 360 0
 198 00f4 0221     		movs	r1, #2
 199 00f6 2E48     		ldr	r0, .L17+44
 200 00f8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL19:
 202 00fc 08BB     		cbnz	r0, .L8
 203              	.LBB58:
 362:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 204              		.loc 1 362 0
 205 00fe 2D48     		ldr	r0, .L17+48
 206 0100 FFF7FEFF 		bl	printf
 207              	.LVL20:
 363:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 208              		.loc 1 363 0
 209 0104 204B     		ldr	r3, .L17+4
 210 0106 0722     		movs	r2, #7
 211 0108 1A70     		strb	r2, [r3]
 364:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 212              		.loc 1 364 0
 213 010a 264B     		ldr	r3, .L17+32
 214 010c D3ED057A 		vldr.32	s15, [r3, #20]
 215 0110 FDEEE77A 		vcvt.s32.f32	s15, s15
 216 0114 244A     		ldr	r2, .L17+36
 217 0116 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 365:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 218              		.loc 1 365 0
 219 011a C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 12


 366:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 220              		.loc 1 366 0
 221 011e 1E4B     		ldr	r3, .L17+20
 222 0120 93ED057A 		vldr.32	s14, [r3, #20]
 223              	.LVL21:
 224              	.LBB59:
 367:Core/Src/robot/robot.cpp **** 		{
 225              		.loc 1 367 0
 226 0124 0022     		movs	r2, #0
 227              	.LVL22:
 228              	.L9:
 367:Core/Src/robot/robot.cpp **** 		{
 229              		.loc 1 367 0 is_stmt 0 discriminator 3
 230 0126 062A     		cmp	r2, #6
 231 0128 3FF779AF 		bgt	.L3
 369:Core/Src/robot/robot.cpp **** 		}
 232              		.loc 1 369 0 is_stmt 1 discriminator 2
 233 012c 1A4B     		ldr	r3, .L17+20
 234 012e 03EB8203 		add	r3, r3, r2, lsl #2
 235 0132 D3ED007A 		vldr.32	s15, [r3]
 236 0136 77EEC77A 		vsub.f32	s15, s15, s14
 237 013a C3ED007A 		vstr.32	s15, [r3]
 367:Core/Src/robot/robot.cpp **** 		{
 238              		.loc 1 367 0 discriminator 2
 239 013e 0132     		adds	r2, r2, #1
 240              	.LVL23:
 241 0140 F1E7     		b	.L9
 242              	.LVL24:
 243              	.L8:
 244              	.LBE59:
 245              	.LBE58:
 374:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 246              		.loc 1 374 0
 247 0142 1D48     		ldr	r0, .L17+52
 248 0144 FFF7FEFF 		bl	printf
 249              	.LVL25:
 375:Core/Src/robot/robot.cpp **** 	}
 250              		.loc 1 375 0
 251 0148 0F4B     		ldr	r3, .L17+4
 252 014a 0122     		movs	r2, #1
 253 014c 1A70     		strb	r2, [r3]
 254 014e 66E7     		b	.L3
 255              	.L10:
 256              	.LBE57:
 257              	.LBE54:
 258              	.LBE51:
 259              	.LBE66:
 260              	.LBB67:
 261              	.LBB63:
 384:Core/Src/robot/robot.cpp **** 		}
 385:Core/Src/robot/robot.cpp **** 	}
 386:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
 262              		.loc 1 386 0
 263 0150 1021     		movs	r1, #16
 264 0152 1A48     		ldr	r0, .L17+56
 265 0154 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 266              	.LVL26:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 13


 267 0158 80B1     		cbz	r0, .L16
 268              	.LBB64:
 387:Core/Src/robot/robot.cpp **** 	{
 388:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");
 389:Core/Src/robot/robot.cpp **** 	}
 390:Core/Src/robot/robot.cpp **** 	else{
 391:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 269              		.loc 1 391 0
 270 015a 1948     		ldr	r0, .L17+60
 271 015c FFF7FEFF 		bl	printf
 272              	.LVL27:
 273              	.LBB65:
 392:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 274              		.loc 1 392 0
 275 0160 0022     		movs	r2, #0
 276              	.LVL28:
 277              	.L14:
 278              		.loc 1 392 0 is_stmt 0 discriminator 3
 279 0162 062A     		cmp	r2, #6
 280 0164 0DDC     		bgt	.L1
 393:Core/Src/robot/robot.cpp **** 		{
 394:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 281              		.loc 1 394 0 is_stmt 1 discriminator 2
 282 0166 0C4B     		ldr	r3, .L17+20
 283 0168 03EB8203 		add	r3, r3, r2, lsl #2
 284 016c D3ED007A 		vldr.32	s15, [r3]
 285 0170 F1EE677A 		vneg.f32	s15, s15
 286 0174 C3ED007A 		vstr.32	s15, [r3]
 392:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 287              		.loc 1 392 0 discriminator 2
 288 0178 0132     		adds	r2, r2, #1
 289              	.LVL29:
 290 017a F2E7     		b	.L14
 291              	.LVL30:
 292              	.L16:
 293              	.LBE65:
 294              	.LBE64:
 388:Core/Src/robot/robot.cpp **** 	}
 295              		.loc 1 388 0
 296 017c 1148     		ldr	r0, .L17+64
 297 017e FFF7FEFF 		bl	printf
 298              	.LVL31:
 299              	.L1:
 300              	.LBE63:
 301              	.LBE67:
 395:Core/Src/robot/robot.cpp **** 		}
 396:Core/Src/robot/robot.cpp **** 	}
 397:Core/Src/robot/robot.cpp **** }...
 302              		.loc 1 397 0
 303 0182 08BD     		pop	{r3, pc}
 304              	.L18:
 305              		.align	2
 306              	.L17:
 307 0184 00080240 		.word	1073874944
 308 0188 00000000 		.word	.LANCHOR0
 309 018c 00000000 		.word	.LANCHOR1
 310 0190 00000000 		.word	.LC0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 14


 311 0194 54000000 		.word	.LC5
 312 0198 00000000 		.word	.LANCHOR3
 313 019c 00000240 		.word	1073872896
 314 01a0 10000000 		.word	.LC1
 315 01a4 00000000 		.word	.LANCHOR2
 316 01a8 00000000 		.word	leg
 317 01ac 1C000000 		.word	.LC2
 318 01b0 000C0240 		.word	1073875968
 319 01b4 30000000 		.word	.LC3
 320 01b8 44000000 		.word	.LC4
 321 01bc 00100240 		.word	1073876992
 322 01c0 70000000 		.word	.LC7
 323 01c4 60000000 		.word	.LC6
 324              		.cfi_endproc
 325              	.LFE505:
 327              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 328              		.align	1
 329              		.weak	_Z12swap_ElementIfEvRT_S1_
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	_Z12swap_ElementIfEvRT_S1_:
 336              	.LFB516:
 337              		.file 2 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
 338              		.loc 2 16 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL32:
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
 344              		.loc 2 18 0
 345 0000 0368     		ldr	r3, [r0]	@ float
 346              	.LVL33:
  19:Core/Inc/utils/vec3.h ****         first = second;
 347              		.loc 2 19 0
 348 0002 0A68     		ldr	r2, [r1]	@ float
 349 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h ****         second = temp;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 15


 350              		.loc 2 20 0
 351 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** }
 352              		.loc 2 21 0
 353 0008 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE516:
 357              		.global	__aeabi_f2d
 358              		.global	__aeabi_ddiv
 359              		.global	__aeabi_d2iz
 360              		.global	__aeabi_d2f
 361              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 362              		.align	1
 363              		.global	_Z11start_RobotP12Robot_States
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv4-sp-d16
 369              	_Z11start_RobotP12Robot_States:
 370              	.LFB503:
  24:Core/Src/robot/robot.cpp **** {
 371              		.loc 1 24 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 16
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              	.LVL34:
 376 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 377              	.LCFI1:
 378              		.cfi_def_cfa_offset 36
 379              		.cfi_offset 4, -36
 380              		.cfi_offset 5, -32
 381              		.cfi_offset 6, -28
 382              		.cfi_offset 7, -24
 383              		.cfi_offset 8, -20
 384              		.cfi_offset 9, -16
 385              		.cfi_offset 10, -12
 386              		.cfi_offset 11, -8
 387              		.cfi_offset 14, -4
 388 0004 2DED028B 		vpush.64	{d8}
 389              	.LCFI2:
 390              		.cfi_def_cfa_offset 44
 391              		.cfi_offset 80, -44
 392              		.cfi_offset 81, -40
 393 0008 87B0     		sub	sp, sp, #28
 394              	.LCFI3:
 395              		.cfi_def_cfa_offset 72
 396 000a 0446     		mov	r4, r0
 397              	.LBB108:
  25:Core/Src/robot/robot.cpp **** 	switch (*state_)
 398              		.loc 1 25 0
 399 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 400 000e 0A2B     		cmp	r3, #10
 401 0010 00F2CA83 		bhi	.L20
 402 0014 DFE813F0 		tbh	[pc, r3, lsl #1]
 403              	.L23:
 404 0018 0B00     		.2byte	(.L22-.L23)/2
 405 001a 5C01     		.2byte	(.L24-.L23)/2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 16


 406 001c BE01     		.2byte	(.L25-.L23)/2
 407 001e FD01     		.2byte	(.L26-.L23)/2
 408 0020 4D02     		.2byte	(.L27-.L23)/2
 409 0022 7702     		.2byte	(.L28-.L23)/2
 410 0024 A102     		.2byte	(.L29-.L23)/2
 411 0026 DA02     		.2byte	(.L30-.L23)/2
 412 0028 3903     		.2byte	(.L31-.L23)/2
 413 002a 9803     		.2byte	(.L32-.L23)/2
 414 002c CD03     		.2byte	(.L33-.L23)/2
 415              		.p2align 1
 416              	.L22:
 417              	.LBB109:
 418              	.LBB110:
  39:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
 419              		.loc 1 39 0
 420 002e C048     		ldr	r0, .L62+8
 421              	.LVL35:
 422 0030 FFF7FEFF 		bl	printf
 423              	.LVL36:
  40:Core/Src/robot/robot.cpp **** 		if(HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin)==GPIO_PIN_RESET){
 424              		.loc 1 40 0
 425 0034 4021     		movs	r1, #64
 426 0036 BF48     		ldr	r0, .L62+12
 427 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 428              	.LVL37:
 429 003c 0028     		cmp	r0, #0
 430 003e 40F0A180 		bne	.L34
  41:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
 431              		.loc 1 41 0
 432 0042 BD4B     		ldr	r3, .L62+16
 433 0044 0122     		movs	r2, #1
 434 0046 1A70     		strb	r2, [r3]
 435              	.L35:
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 436              		.loc 1 49 0
 437 0048 BC4B     		ldr	r3, .L62+20
 438 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 439 004c 23B9     		cbnz	r3, .L36
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 440              		.loc 1 49 0 is_stmt 0 discriminator 1
 441 004e BC4A     		ldr	r2, .L62+24
 442 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 443 0052 002A     		cmp	r2, #0
 444 0054 40F09D80 		bne	.L55
 445              	.L36:
  55:Core/Src/robot/robot.cpp **** 		else if(ROBOT_START_FLAG)
 446              		.loc 1 55 0 is_stmt 1
 447 0058 002B     		cmp	r3, #0
 448 005a 40F0BF80 		bne	.L56
 449              	.LVL38:
 450              	.L37:
 451              	.LBB111:
 452              	.LBB112:
 453              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 17


   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 454              		.loc 3 47 0
 455 005e B94E     		ldr	r6, .L62+28
 456 0060 3046     		mov	r0, r6
 457 0062 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 458              	.LVL39:
 459              	.LBE112:
 460              	.LBE111:
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 461              		.loc 1 60 0
 462 0066 9FEDB88A 		vldr.32	s16, .L62+32
 463 006a 60EE087A 		vmul.f32	s15, s0, s16
 464 006e 17EE900A 		vmov	r0, s15
 465 0072 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 18


 466              	.LVL40:
 467 0076 ACA3     		adr	r3, .L62
 468 0078 D3E90023 		ldrd	r2, [r3]
 469 007c FFF7FEFF 		bl	__aeabi_ddiv
 470              	.LVL41:
 471 0080 0446     		mov	r4, r0
 472 0082 0D46     		mov	r5, r1
 473              	.LVL42:
 474              	.LBB113:
 475              	.LBB114:
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 476              		.loc 3 48 0
 477 0084 06F15800 		add	r0, r6, #88
 478 0088 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 479              	.LVL43:
 480              	.LBE114:
 481              	.LBE113:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 482              		.loc 1 61 0
 483 008c 60EE087A 		vmul.f32	s15, s0, s16
 484 0090 17EE900A 		vmov	r0, s15
 485 0094 FFF7FEFF 		bl	__aeabi_f2d
 486              	.LVL44:
 487 0098 A3A3     		adr	r3, .L62
 488 009a D3E90023 		ldrd	r2, [r3]
 489 009e FFF7FEFF 		bl	__aeabi_ddiv
 490              	.LVL45:
 491 00a2 0646     		mov	r6, r0
 492 00a4 0F46     		mov	r7, r1
 493              	.LVL46:
 494              	.LBB115:
 495              	.LBB116:
 496              		.file 4 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 19


  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 20


  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 497              		.loc 4 112 0
 498 00a6 A948     		ldr	r0, .L62+36
 499 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 500              	.LVL47:
 501              	.LBE116:
 502              	.LBE115:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 503              		.loc 1 61 0
 504 00ac 60EE087A 		vmul.f32	s15, s0, s16
 505 00b0 17EE900A 		vmov	r0, s15
 506 00b4 FFF7FEFF 		bl	__aeabi_f2d
 507              	.LVL48:
 508 00b8 9BA3     		adr	r3, .L62
 509 00ba D3E90023 		ldrd	r2, [r3]
 510 00be FFF7FEFF 		bl	__aeabi_ddiv
 511              	.LVL49:
 512 00c2 8046     		mov	r8, r0
 513 00c4 8946     		mov	r9, r1
 514 00c6 A24B     		ldr	r3, .L62+40
 515 00c8 D3ED007A 		vldr.32	s15, [r3]
 516 00cc 67EE887A 		vmul.f32	s15, s15, s16
 517 00d0 17EE900A 		vmov	r0, s15
 518 00d4 FFF7FEFF 		bl	__aeabi_f2d
 519              	.LVL50:
 520 00d8 93A3     		adr	r3, .L62
 521 00da D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 21


 522 00de FFF7FEFF 		bl	__aeabi_ddiv
 523              	.LVL51:
 524 00e2 8246     		mov	r10, r0
 525 00e4 8B46     		mov	fp, r1
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 526              		.loc 1 60 0
 527 00e6 4046     		mov	r0, r8
 528 00e8 4946     		mov	r1, r9
 529 00ea FFF7FEFF 		bl	__aeabi_d2iz
 530              	.LVL52:
 531 00ee 8046     		mov	r8, r0
 532 00f0 3046     		mov	r0, r6
 533 00f2 3946     		mov	r1, r7
 534 00f4 FFF7FEFF 		bl	__aeabi_d2iz
 535              	.LVL53:
 536 00f8 0646     		mov	r6, r0
 537 00fa 2046     		mov	r0, r4
 538 00fc 2946     		mov	r1, r5
 539 00fe FFF7FEFF 		bl	__aeabi_d2iz
 540              	.LVL54:
 541 0102 0446     		mov	r4, r0
 542 0104 5046     		mov	r0, r10
 543 0106 5946     		mov	r1, fp
 544 0108 FFF7FEFF 		bl	__aeabi_d2iz
 545              	.LVL55:
 546 010c 0090     		str	r0, [sp]
 547 010e 4346     		mov	r3, r8
 548 0110 3246     		mov	r2, r6
 549 0112 2146     		mov	r1, r4
 550 0114 8F48     		ldr	r0, .L62+44
 551 0116 FFF7FEFF 		bl	printf
 552              	.LVL56:
 553              	.LBB117:
  62:Core/Src/robot/robot.cpp **** 		if((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 554              		.loc 1 62 0
 555 011a 4FF48041 		mov	r1, #16384
 556 011e 8E48     		ldr	r0, .L62+48
 557 0120 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 558              	.LVL57:
  64:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 559              		.loc 1 64 0
 560 0124 28B1     		cbz	r0, .L38
  63:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 561              		.loc 1 63 0
 562 0126 1021     		movs	r1, #16
 563 0128 8C48     		ldr	r0, .L62+52
 564 012a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 565              	.LVL58:
  62:Core/Src/robot/robot.cpp **** 		if((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 566              		.loc 1 62 0
 567 012e 0028     		cmp	r0, #0
 568 0130 5DD1     		bne	.L57
 569              	.L38:
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 570              		.loc 1 67 0 discriminator 1
 571 0132 0022     		movs	r2, #0
 572 0134 0421     		movs	r1, #4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 22


 573 0136 8848     		ldr	r0, .L62+48
 574 0138 FFF7FEFF 		bl	HAL_GPIO_WritePin
 575              	.LVL59:
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
 576              		.loc 1 68 0 discriminator 1
 577 013c 7F4B     		ldr	r3, .L62+20
 578 013e 0122     		movs	r2, #1
 579 0140 1A70     		strb	r2, [r3]
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 580              		.loc 1 69 0 discriminator 1
 581 0142 7F4B     		ldr	r3, .L62+24
 582 0144 0022     		movs	r2, #0
 583 0146 1A70     		strb	r2, [r3]
 584              	.LVL60:
 585              	.LBB118:
 586              	.LBB119:
 587              	.LBB120:
 588              	.LBB121:
 589              	.LBB122:
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 23


  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 24


 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 590              		.loc 2 129 0 discriminator 1
 591 0148 854B     		ldr	r3, .L62+56
 592 014a 1A68     		ldr	r2, [r3]	@ float
 593 014c 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 594              		.loc 2 130 0 discriminator 1
 595 014e 5A68     		ldr	r2, [r3, #4]	@ float
 596 0150 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 597              		.loc 2 131 0 discriminator 1
 598 0152 9B68     		ldr	r3, [r3, #8]	@ float
 599 0154 0593     		str	r3, [sp, #20]	@ float
 600              	.LVL61:
 601              	.LBE122:
 602              	.LBE121:
 603              	.LBE120:
 604              	.LBB123:
 605              	.LBB124:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 25


 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 606              		.loc 2 175 0 discriminator 1
 607 0156 834C     		ldr	r4, .L62+60
 608 0158 03A9     		add	r1, sp, #12
 609              	.LVL62:
 610 015a 2046     		mov	r0, r4
 611 015c FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 612              	.LVL63:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 613              		.loc 2 176 0 discriminator 1
 614 0160 04A9     		add	r1, sp, #16
 615 0162 201D     		adds	r0, r4, #4
 616 0164 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 617              	.LVL64:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 618              		.loc 2 177 0 discriminator 1
 619 0168 05A9     		add	r1, sp, #20
 620 016a 04F10800 		add	r0, r4, #8
 621 016e FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 622              	.LVL65:
 623              	.LBE124:
 624              	.LBE123:
 625              	.LBE119:
 626              	.LBE118:
  71:Core/Src/robot/robot.cpp **** 			if(getup_n_run() == true){
 627              		.loc 1 71 0 discriminator 1
 628 0172 FFF7FEFF 		bl	_Z11getup_n_runv
 629              	.LVL66:
 630 0176 0028     		cmp	r0, #0
 631 0178 40F08680 		bne	.L58
 632              	.L41:
  74:Core/Src/robot/robot.cpp **** 			printf("\n\nEntered here!!\n\n");
 633              		.loc 1 74 0
 634 017c 7A48     		ldr	r0, .L62+64
 635 017e FFF7FEFF 		bl	puts
 636              	.LVL67:
 637 0182 11E3     		b	.L20
 638              	.LVL68:
 639              	.L34:
 640              	.LBE117:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 26


  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
 641              		.loc 1 44 0
 642 0184 6C4B     		ldr	r3, .L62+16
 643 0186 0022     		movs	r2, #0
 644 0188 1A70     		strb	r2, [r3]
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
 645              		.loc 1 45 0
 646 018a 714B     		ldr	r3, .L62+40
 647 018c 0022     		movs	r2, #0
 648 018e 1A60     		str	r2, [r3]	@ float
 649 0190 5AE7     		b	.L35
 650              	.L55:
 651              	.LVL69:
 652              	.LBB129:
 653              	.LBB130:
 654              	.LBB131:
 655              	.LBB132:
 656              	.LBB133:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 657              		.loc 2 129 0
 658 0192 734B     		ldr	r3, .L62+56
 659 0194 1A68     		ldr	r2, [r3]	@ float
 660 0196 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 661              		.loc 2 130 0
 662 0198 5A68     		ldr	r2, [r3, #4]	@ float
 663 019a 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 664              		.loc 2 131 0
 665 019c 9B68     		ldr	r3, [r3, #8]	@ float
 666 019e 0593     		str	r3, [sp, #20]	@ float
 667              	.LVL70:
 668              	.LBE133:
 669              	.LBE132:
 670              	.LBE131:
 671              	.LBB134:
 672              	.LBB135:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 673              		.loc 2 175 0
 674 01a0 704C     		ldr	r4, .L62+60
 675              	.LVL71:
 676 01a2 03A9     		add	r1, sp, #12
 677              	.LVL72:
 678 01a4 2046     		mov	r0, r4
 679 01a6 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 680              	.LVL73:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 681              		.loc 2 176 0
 682 01aa 04A9     		add	r1, sp, #16
 683 01ac 201D     		adds	r0, r4, #4
 684 01ae FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 685              	.LVL74:
 686              		.loc 2 177 0
 687 01b2 05A9     		add	r1, sp, #20
 688 01b4 04F10800 		add	r0, r4, #8
 689 01b8 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 690              	.LVL75:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 27


 691              	.LBE135:
 692              	.LBE134:
 693              	.LBE130:
 694              	.LBE129:
 695              	.LBB136:
 696              	.LBB137:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 697              		.loc 2 36 0
 698 01bc D4ED027A 		vldr.32	s15, [r4, #8]
 699              	.LVL76:
 700              	.LBE137:
 701              	.LBE136:
  52:Core/Src/robot/robot.cpp **** 			initial_angle.setZ(initial_angle.getZ()+5);
 702              		.loc 1 52 0
 703 01c0 B1EE047A 		vmov.f32	s14, #5.0e+0
 704 01c4 77EE877A 		vadd.f32	s15, s15, s14
 705              	.LVL77:
 706              	.LBB138:
 707              	.LBB139:
  39:Core/Inc/utils/vec3.h **** 
 708              		.loc 2 39 0
 709 01c8 C4ED027A 		vstr.32	s15, [r4, #8]
 710              	.LVL78:
 711              	.LBE139:
 712              	.LBE138:
  53:Core/Src/robot/robot.cpp **** 			printf("\t%d\t", (int)initial_angle.getZ());
 713              		.loc 1 53 0
 714 01cc FDEEE77A 		vcvt.s32.f32	s15, s15
 715 01d0 17EE901A 		vmov	r1, s15	@ int
 716 01d4 6548     		ldr	r0, .L62+68
 717 01d6 FFF7FEFF 		bl	printf
 718              	.LVL79:
 719 01da 40E7     		b	.L37
 720              	.LVL80:
 721              	.L56:
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 722              		.loc 1 57 0
 723 01dc 584B     		ldr	r3, .L62+24
 724 01de 0022     		movs	r2, #0
 725 01e0 1A70     		strb	r2, [r3]
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 726              		.loc 1 58 0
 727 01e2 0122     		movs	r2, #1
 728 01e4 0421     		movs	r1, #4
 729 01e6 5C48     		ldr	r0, .L62+48
 730 01e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 731              	.LVL81:
 732 01ec 37E7     		b	.L37
 733              	.LVL82:
 734              	.L57:
 735              	.LBB140:
  64:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 736              		.loc 1 64 0
 737 01ee 4FF48051 		mov	r1, #4096
 738 01f2 5948     		ldr	r0, .L62+48
 739 01f4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 740              	.LVL83:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 28


  63:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 741              		.loc 1 63 0
 742 01f8 0028     		cmp	r0, #0
 743 01fa 9AD0     		beq	.L38
  65:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
 744              		.loc 1 65 0 discriminator 2
 745 01fc 0221     		movs	r1, #2
 746 01fe 5C48     		ldr	r0, .L62+72
 747 0200 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 748              	.LVL84:
  64:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 749              		.loc 1 64 0 discriminator 2
 750 0204 0028     		cmp	r0, #0
 751 0206 94D0     		beq	.L38
 752              	.LBB125:
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET))
 753              		.loc 1 76 0
 754 0208 4FF40071 		mov	r1, #512
 755 020c 5848     		ldr	r0, .L62+72
 756 020e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 757              	.LVL85:
 758 0212 0028     		cmp	r0, #0
 759 0214 48D1     		bne	.L59
 760              	.LBB126:
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 761              		.loc 1 79 0
 762 0216 564C     		ldr	r4, .L62+72
 763 0218 0022     		movs	r2, #0
 764 021a 4FF48051 		mov	r1, #4096
 765 021e 2046     		mov	r0, r4
 766 0220 FFF7FEFF 		bl	HAL_GPIO_WritePin
 767              	.LVL86:
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 768              		.loc 1 80 0
 769 0224 0022     		movs	r2, #0
 770 0226 4FF40051 		mov	r1, #8192
 771 022a 2046     		mov	r0, r4
 772 022c FFF7FEFF 		bl	HAL_GPIO_WritePin
 773              	.LVL87:
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 774              		.loc 1 81 0
 775 0230 0022     		movs	r2, #0
 776 0232 4FF48041 		mov	r1, #16384
 777 0236 2046     		mov	r0, r4
 778 0238 FFF7FEFF 		bl	HAL_GPIO_WritePin
 779              	.LVL88:
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 780              		.loc 1 82 0
 781 023c 0022     		movs	r2, #0
 782 023e 4FF40041 		mov	r1, #32768
 783 0242 2046     		mov	r0, r4
 784 0244 FFF7FEFF 		bl	HAL_GPIO_WritePin
 785              	.LVL89:
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 786              		.loc 1 83 0
 787 0248 0022     		movs	r2, #0
 788 024a 0421     		movs	r1, #4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 29


 789 024c 4248     		ldr	r0, .L62+48
 790 024e FFF7FEFF 		bl	HAL_GPIO_WritePin
 791              	.LVL90:
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 792              		.loc 1 84 0
 793 0252 3A4B     		ldr	r3, .L62+20
 794 0254 0022     		movs	r2, #0
 795 0256 1A70     		strb	r2, [r3]
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 796              		.loc 1 86 0
 797 0258 464B     		ldr	r3, .L62+76
 798 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 799 025c BFF35B8F 		dmb	ish
 800 0260 13F0010F 		tst	r3, #1
 801 0264 13D0     		beq	.L60
 802              	.L44:
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 803              		.loc 1 87 0
 804 0266 FFF7FEFF 		bl	HAL_GetTick
 805              	.LVL91:
 806 026a 434B     		ldr	r3, .L62+80
 807 026c 1B68     		ldr	r3, [r3]
 808 026e C31A     		subs	r3, r0, r3
 809 0270 B3F5FA7F 		cmp	r3, #500
 810 0274 C0F09882 		bcc	.L20
  89:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
 811              		.loc 1 89 0
 812 0278 FFF7FEFF 		bl	_Z11getup_n_runv
 813              	.LVL92:
 814 027c 0028     		cmp	r0, #0
 815 027e 00F09382 		beq	.L20
  90:Core/Src/robot/robot.cpp **** 					zone_select();
 816              		.loc 1 90 0
 817 0282 FFF7FEFF 		bl	_Z11zone_selectv
 818              	.LVL93:
 819 0286 8FE2     		b	.L20
 820              	.L58:
 821              	.LBE126:
 822              	.LBE125:
  72:Core/Src/robot/robot.cpp **** 				zone_select();
 823              		.loc 1 72 0
 824 0288 FFF7FEFF 		bl	_Z11zone_selectv
 825              	.LVL94:
 826 028c 76E7     		b	.L41
 827              	.L60:
 828              	.LBB128:
 829              	.LBB127:
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 830              		.loc 1 86 0 discriminator 1
 831 028e 3948     		ldr	r0, .L62+76
 832 0290 FFF7FEFF 		bl	__cxa_guard_acquire
 833              	.LVL95:
 834 0294 0028     		cmp	r0, #0
 835 0296 E6D0     		beq	.L44
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 836              		.loc 1 86 0 is_stmt 0 discriminator 2
 837 0298 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 30


 838              	.LVL96:
 839 029c 364B     		ldr	r3, .L62+80
 840 029e 1860     		str	r0, [r3]
 841 02a0 3448     		ldr	r0, .L62+76
 842 02a2 FFF7FEFF 		bl	__cxa_guard_release
 843              	.LVL97:
 844 02a6 DEE7     		b	.L44
 845              	.L59:
 846              	.LBE127:
  96:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 847              		.loc 1 96 0 is_stmt 1
 848 02a8 9FED348A 		vldr.32	s16, .L62+84
 849 02ac 344C     		ldr	r4, .L62+88
 850 02ae B0EE480A 		vmov.f32	s0, s16
 851 02b2 2046     		mov	r0, r4
 852 02b4 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 853              	.LVL98:
  97:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 854              		.loc 1 97 0
 855 02b8 B0EE480A 		vmov.f32	s0, s16
 856 02bc 04F15800 		add	r0, r4, #88
 857 02c0 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 858              	.LVL99:
  98:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 859              		.loc 1 98 0
 860 02c4 B0EE480A 		vmov.f32	s0, s16
 861 02c8 2E48     		ldr	r0, .L62+92
 862 02ca FFF7FEFF 		bl	_ZN8steering9set_angleEf
 863              	.LVL100:
 864 02ce 6BE2     		b	.L20
 865              	.LVL101:
 866              	.L24:
 867              	.LBE128:
 868              	.LBE140:
 869              	.LBE110:
 111:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 870              		.loc 1 111 0
 871 02d0 2D48     		ldr	r0, .L62+96
 872              	.LVL102:
 873 02d2 FFF7FEFF 		bl	printf
 874              	.LVL103:
 112:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 875              		.loc 1 112 0
 876 02d6 2D4B     		ldr	r3, .L62+100
 877 02d8 D3ED007A 		vldr.32	s15, [r3]
 878 02dc 2C4B     		ldr	r3, .L62+104
 879 02de 93ED000A 		vldr.32	s0, [r3]
 880 02e2 FDEEE77A 		vcvt.s32.f32	s15, s15
 881 02e6 17EE900A 		vmov	r0, s15	@ int
 882 02ea FFF7FEFF 		bl	_Z2goif
 883              	.LVL104:
 884 02ee 0028     		cmp	r0, #0
 885 02f0 00F05A82 		beq	.L20
 114:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 886              		.loc 1 114 0
 887 02f4 0223     		movs	r3, #2
 888 02f6 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 31


 115:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 889              		.loc 1 115 0
 890 02f8 1D4C     		ldr	r4, .L62+72
 891              	.LVL105:
 892 02fa 4FF48051 		mov	r1, #4096
 893 02fe 2046     		mov	r0, r4
 894 0300 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 895              	.LVL106:
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 896              		.loc 1 116 0
 897 0304 4FF40051 		mov	r1, #8192
 898 0308 2046     		mov	r0, r4
 899 030a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 900              	.LVL107:
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 901              		.loc 1 117 0
 902 030e 4FF48041 		mov	r1, #16384
 903 0312 2046     		mov	r0, r4
 904 0314 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 905              	.LVL108:
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 906              		.loc 1 118 0
 907 0318 4FF40041 		mov	r1, #32768
 908 031c 2046     		mov	r0, r4
 909 031e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 910              	.LVL109:
 911 0322 41E2     		b	.L20
 912              	.L63:
 913 0324 AFF30080 		.align	3
 914              	.L62:
 915 0328 182D4454 		.word	1413754136
 916 032c FB210940 		.word	1074340347
 917 0330 00000000 		.word	.LC8
 918 0334 00100240 		.word	1073876992
 919 0338 00000000 		.word	.LANCHOR4
 920 033c 00000000 		.word	.LANCHOR1
 921 0340 00000000 		.word	.LANCHOR5
 922 0344 3C000000 		.word	leg+60
 923 0348 00003443 		.word	1127481344
 924 034c 0C000000 		.word	steering+12
 925 0350 00000000 		.word	robot_angle
 926 0354 10000000 		.word	.LC10
 927 0358 00080240 		.word	1073874944
 928 035c 00000240 		.word	1073872896
 929 0360 00000000 		.word	curr_angle
 930 0364 00000000 		.word	initial_angle
 931 0368 58000000 		.word	.LC11
 932 036c 08000000 		.word	.LC9
 933 0370 000C0240 		.word	1073875968
 934 0374 00000000 		.word	.LANCHOR6
 935 0378 00000000 		.word	.LANCHOR7
 936 037c 00000000 		.word	0
 937 0380 00000000 		.word	leg
 938 0384 00000000 		.word	steering
 939 0388 6C000000 		.word	.LC12
 940 038c 00000000 		.word	.LANCHOR2
 941 0390 00000000 		.word	.LANCHOR3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 32


 942              	.LVL110:
 943              	.L25:
 132:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 944              		.loc 1 132 0
 945 0394 CC48     		ldr	r0, .L64+8
 946              	.LVL111:
 947 0396 FFF7FEFF 		bl	printf
 948              	.LVL112:
 134:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 949              		.loc 1 134 0
 950 039a CC4B     		ldr	r3, .L64+12
 951 039c 93ED010A 		vldr.32	s0, [r3, #4]
 952 03a0 6320     		movs	r0, #99
 953 03a2 FFF7FEFF 		bl	_Z2goif
 954              	.LVL113:
 135:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 955              		.loc 1 135 0
 956 03a6 4FF40061 		mov	r1, #2048
 957 03aa C948     		ldr	r0, .L64+16
 958 03ac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 959              	.LVL114:
 960 03b0 68B1     		cbz	r0, .L45
 961              	.LVL115:
 962              	.LBB141:
 963              	.LBB142:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 964              		.loc 3 45 0
 965 03b2 C84B     		ldr	r3, .L64+20
 966 03b4 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 967              	.LVL116:
 968              	.LBE142:
 969              	.LBE141:
 135:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 970              		.loc 1 135 0
 971 03b8 F8EEE77A 		vcvt.f32.s32	s15, s15
 972 03bc C64B     		ldr	r3, .L64+24
 973 03be 93ED017A 		vldr.32	s14, [r3, #4]
 974 03c2 F4EEC77A 		vcmpe.f32	s15, s14
 975 03c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 976 03ca 40F3ED81 		ble	.L20
 977              	.L45:
 138:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 978              		.loc 1 138 0 discriminator 3
 979 03ce 0323     		movs	r3, #3
 980 03d0 2370     		strb	r3, [r4]
 139:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 981              		.loc 1 139 0 discriminator 3
 982 03d2 C14B     		ldr	r3, .L64+24
 983 03d4 D3ED017A 		vldr.32	s15, [r3, #4]
 984 03d8 FDEEE77A 		vcvt.s32.f32	s15, s15
 985 03dc BD4A     		ldr	r2, .L64+20
 986 03de C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 140:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 987              		.loc 1 140 0 discriminator 3
 988 03e2 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 142:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 989              		.loc 1 142 0 discriminator 3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 33


 990 03e6 BA4C     		ldr	r4, .L64+16
 991              	.LVL117:
 992 03e8 4FF48051 		mov	r1, #4096
 993 03ec 2046     		mov	r0, r4
 994 03ee FFF7FEFF 		bl	HAL_GPIO_TogglePin
 995              	.LVL118:
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 996              		.loc 1 143 0 discriminator 3
 997 03f2 4FF40051 		mov	r1, #8192
 998 03f6 2046     		mov	r0, r4
 999 03f8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1000              	.LVL119:
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1001              		.loc 1 144 0 discriminator 3
 1002 03fc 4FF48041 		mov	r1, #16384
 1003 0400 2046     		mov	r0, r4
 1004 0402 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1005              	.LVL120:
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1006              		.loc 1 145 0 discriminator 3
 1007 0406 4FF40041 		mov	r1, #32768
 1008 040a 2046     		mov	r0, r4
 1009 040c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1010              	.LVL121:
 1011 0410 CAE1     		b	.L20
 1012              	.LVL122:
 1013              	.L26:
 156:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 1014              		.loc 1 156 0
 1015 0412 B248     		ldr	r0, .L64+28
 1016              	.LVL123:
 1017 0414 FFF7FEFF 		bl	printf
 1018              	.LVL124:
 158:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 1019              		.loc 1 158 0
 1020 0418 AC4B     		ldr	r3, .L64+12
 1021 041a 93ED020A 		vldr.32	s0, [r3, #8]
 1022 041e 6420     		movs	r0, #100
 1023 0420 FFF7FEFF 		bl	_Z2goif
 1024              	.LVL125:
 159:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1025              		.loc 1 159 0
 1026 0424 4FF48071 		mov	r1, #256
 1027 0428 A948     		ldr	r0, .L64+16
 1028 042a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1029              	.LVL126:
 1030 042e 80B9     		cbnz	r0, .L47
 1031              	.LVL127:
 1032              	.LBB143:
 1033              	.LBB144:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1034              		.loc 3 45 0
 1035 0430 A84B     		ldr	r3, .L64+20
 1036 0432 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 1037              	.LVL128:
 1038              	.LBE144:
 1039              	.LBE143:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 34


 159:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1040              		.loc 1 159 0
 1041 0436 B8EEC77A 		vcvt.f32.s32	s14, s14
 1042 043a A74B     		ldr	r3, .L64+24
 1043 043c D3ED027A 		vldr.32	s15, [r3, #8]
 1044 0440 F7EE006A 		vmov.f32	s13, #1.0e+0
 1045 0444 77EEE67A 		vsub.f32	s15, s15, s13
 1046 0448 B4EEE77A 		vcmpe.f32	s14, s15
 1047 044c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1048 0450 0DDC     		bgt	.L48
 1049              	.L47:
 1050              	.LVL129:
 1051              	.LBB145:
 1052              	.LBB146:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1053              		.loc 3 45 0 discriminator 4
 1054 0452 A04B     		ldr	r3, .L64+20
 1055 0454 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1056              	.LVL130:
 1057              	.LBE146:
 1058              	.LBE145:
 159:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1059              		.loc 1 159 0 discriminator 4
 1060 0458 F8EEE77A 		vcvt.f32.s32	s15, s15
 1061 045c 9E4B     		ldr	r3, .L64+24
 1062 045e 93ED027A 		vldr.32	s14, [r3, #8]
 1063 0462 F4EEC77A 		vcmpe.f32	s15, s14
 1064 0466 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1065 046a 40F39D81 		ble	.L20
 1066              	.L48:
 162:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 1067              		.loc 1 162 0 discriminator 5
 1068 046e 0423     		movs	r3, #4
 1069 0470 2370     		strb	r3, [r4]
 163:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 1070              		.loc 1 163 0 discriminator 5
 1071 0472 994B     		ldr	r3, .L64+24
 1072 0474 D3ED027A 		vldr.32	s15, [r3, #8]
 1073 0478 FDEEE77A 		vcvt.s32.f32	s15, s15
 1074 047c 954A     		ldr	r2, .L64+20
 1075 047e C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 164:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 1076              		.loc 1 164 0 discriminator 5
 1077 0482 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 166:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1078              		.loc 1 166 0 discriminator 5
 1079 0486 924C     		ldr	r4, .L64+16
 1080              	.LVL131:
 1081 0488 4FF48051 		mov	r1, #4096
 1082 048c 2046     		mov	r0, r4
 1083 048e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1084              	.LVL132:
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1085              		.loc 1 167 0 discriminator 5
 1086 0492 4FF40051 		mov	r1, #8192
 1087 0496 2046     		mov	r0, r4
 1088 0498 FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 35


 1089              	.LVL133:
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1090              		.loc 1 168 0 discriminator 5
 1091 049c 4FF48041 		mov	r1, #16384
 1092 04a0 2046     		mov	r0, r4
 1093 04a2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1094              	.LVL134:
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1095              		.loc 1 169 0 discriminator 5
 1096 04a6 4FF40041 		mov	r1, #32768
 1097 04aa 2046     		mov	r0, r4
 1098 04ac FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1099              	.LVL135:
 1100 04b0 7AE1     		b	.L20
 1101              	.LVL136:
 1102              	.L27:
 180:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 1103              		.loc 1 180 0
 1104 04b2 8B48     		ldr	r0, .L64+32
 1105              	.LVL137:
 1106 04b4 FFF7FEFF 		bl	printf
 1107              	.LVL138:
 181:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 1108              		.loc 1 181 0
 1109 04b8 874B     		ldr	r3, .L64+24
 1110 04ba D3ED037A 		vldr.32	s15, [r3, #12]
 1111 04be 834B     		ldr	r3, .L64+12
 1112 04c0 93ED030A 		vldr.32	s0, [r3, #12]
 1113 04c4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1114 04c8 17EE900A 		vmov	r0, s15	@ int
 1115 04cc FFF7FEFF 		bl	_Z2goif
 1116              	.LVL139:
 1117 04d0 0028     		cmp	r0, #0
 1118 04d2 00F06981 		beq	.L20
 183:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 1119              		.loc 1 183 0
 1120 04d6 0523     		movs	r3, #5
 1121 04d8 2370     		strb	r3, [r4]
 185:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1122              		.loc 1 185 0
 1123 04da 7D4C     		ldr	r4, .L64+16
 1124              	.LVL140:
 1125 04dc 4FF48051 		mov	r1, #4096
 1126 04e0 2046     		mov	r0, r4
 1127 04e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1128              	.LVL141:
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1129              		.loc 1 186 0
 1130 04e6 4FF40051 		mov	r1, #8192
 1131 04ea 2046     		mov	r0, r4
 1132 04ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1133              	.LVL142:
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1134              		.loc 1 187 0
 1135 04f0 4FF48041 		mov	r1, #16384
 1136 04f4 2046     		mov	r0, r4
 1137 04f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 36


 1138              	.LVL143:
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1139              		.loc 1 188 0
 1140 04fa 4FF40041 		mov	r1, #32768
 1141 04fe 2046     		mov	r0, r4
 1142 0500 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1143              	.LVL144:
 1144 0504 50E1     		b	.L20
 1145              	.LVL145:
 1146              	.L28:
 199:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 1147              		.loc 1 199 0
 1148 0506 7748     		ldr	r0, .L64+36
 1149              	.LVL146:
 1150 0508 FFF7FEFF 		bl	printf
 1151              	.LVL147:
 200:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 1152              		.loc 1 200 0
 1153 050c 724B     		ldr	r3, .L64+24
 1154 050e D3ED047A 		vldr.32	s15, [r3, #16]
 1155 0512 6E4B     		ldr	r3, .L64+12
 1156 0514 93ED040A 		vldr.32	s0, [r3, #16]
 1157 0518 FDEEE77A 		vcvt.s32.f32	s15, s15
 1158 051c 17EE900A 		vmov	r0, s15	@ int
 1159 0520 FFF7FEFF 		bl	_Z2goif
 1160              	.LVL148:
 1161 0524 0028     		cmp	r0, #0
 1162 0526 00F03F81 		beq	.L20
 202:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 1163              		.loc 1 202 0
 1164 052a 0623     		movs	r3, #6
 1165 052c 2370     		strb	r3, [r4]
 204:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1166              		.loc 1 204 0
 1167 052e 684C     		ldr	r4, .L64+16
 1168              	.LVL149:
 1169 0530 4FF48051 		mov	r1, #4096
 1170 0534 2046     		mov	r0, r4
 1171 0536 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1172              	.LVL150:
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1173              		.loc 1 205 0
 1174 053a 4FF40051 		mov	r1, #8192
 1175 053e 2046     		mov	r0, r4
 1176 0540 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1177              	.LVL151:
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1178              		.loc 1 206 0
 1179 0544 4FF48041 		mov	r1, #16384
 1180 0548 2046     		mov	r0, r4
 1181 054a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1182              	.LVL152:
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1183              		.loc 1 207 0
 1184 054e 4FF40041 		mov	r1, #32768
 1185 0552 2046     		mov	r0, r4
 1186 0554 FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 37


 1187              	.LVL153:
 1188 0558 26E1     		b	.L20
 1189              	.LVL154:
 1190              	.L29:
 1191              	.LBB147:
 219:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 1192              		.loc 1 219 0
 1193 055a 6348     		ldr	r0, .L64+40
 1194              	.LVL155:
 1195 055c FFF7FEFF 		bl	printf
 1196              	.LVL156:
 220:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG){
 1197              		.loc 1 220 0
 1198 0560 624B     		ldr	r3, .L64+44
 1199 0562 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 0564 93B9     		cbnz	r3, .L50
 221:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 1201              		.loc 1 221 0
 1202 0566 5C4B     		ldr	r3, .L64+24
 1203 0568 D3ED057A 		vldr.32	s15, [r3, #20]
 1204 056c 574B     		ldr	r3, .L64+12
 1205 056e 93ED050A 		vldr.32	s0, [r3, #20]
 1206 0572 FDEEE77A 		vcvt.s32.f32	s15, s15
 1207 0576 17EE900A 		vmov	r0, s15	@ int
 1208 057a FFF7FEFF 		bl	_Z2goif
 1209              	.LVL157:
 1210 057e 0028     		cmp	r0, #0
 1211 0580 00F01281 		beq	.L20
 223:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 1212              		.loc 1 223 0
 1213 0584 594B     		ldr	r3, .L64+44
 1214 0586 0122     		movs	r2, #1
 1215 0588 1A70     		strb	r2, [r3]
 1216 058a 0DE1     		b	.L20
 1217              	.L50:
 227:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1218              		.loc 1 227 0
 1219 058c FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1220              	.LVL158:
 1221 0590 0028     		cmp	r0, #0
 1222 0592 00F00981 		beq	.L20
 229:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1223              		.loc 1 229 0
 1224 0596 0723     		movs	r3, #7
 1225 0598 2370     		strb	r3, [r4]
 230:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 1226              		.loc 1 230 0
 1227 059a 554B     		ldr	r3, .L64+48
 1228 059c 0022     		movs	r2, #0
 1229 059e 1A70     		strb	r2, [r3]
 231:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1230              		.loc 1 231 0
 1231 05a0 4B4C     		ldr	r4, .L64+16
 1232              	.LVL159:
 1233 05a2 4FF48051 		mov	r1, #4096
 1234 05a6 2046     		mov	r0, r4
 1235 05a8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 38


 1236              	.LVL160:
 232:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1237              		.loc 1 232 0
 1238 05ac 4FF40051 		mov	r1, #8192
 1239 05b0 2046     		mov	r0, r4
 1240 05b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1241              	.LVL161:
 233:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1242              		.loc 1 233 0
 1243 05b6 4FF48041 		mov	r1, #16384
 1244 05ba 2046     		mov	r0, r4
 1245 05bc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1246              	.LVL162:
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1247              		.loc 1 234 0
 1248 05c0 4FF40041 		mov	r1, #32768
 1249 05c4 2046     		mov	r0, r4
 1250 05c6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1251              	.LVL163:
 1252 05ca EDE0     		b	.L20
 1253              	.LVL164:
 1254              	.L30:
 1255              	.LBE147:
 245:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1256              		.loc 1 245 0
 1257 05cc 4948     		ldr	r0, .L64+52
 1258              	.LVL165:
 1259 05ce FFF7FEFF 		bl	printf
 1260              	.LVL166:
 246:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1261              		.loc 1 246 0
 1262 05d2 9FED498A 		vldr.32	s16, .L64+56
 1263 05d6 3F4D     		ldr	r5, .L64+20
 1264 05d8 B0EE480A 		vmov.f32	s0, s16
 1265 05dc 2846     		mov	r0, r5
 1266 05de FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1267              	.LVL167:
 247:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1268              		.loc 1 247 0
 1269 05e2 B0EE480A 		vmov.f32	s0, s16
 1270 05e6 05F15800 		add	r0, r5, #88
 1271 05ea FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1272              	.LVL168:
 248:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1273              		.loc 1 248 0
 1274 05ee B0EE480A 		vmov.f32	s0, s16
 1275 05f2 4248     		ldr	r0, .L64+60
 1276 05f4 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1277              	.LVL169:
 249:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 1278              		.loc 1 249 0
 1279 05f8 4FF40061 		mov	r1, #2048
 1280 05fc 3448     		ldr	r0, .L64+16
 1281 05fe FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1282              	.LVL170:
 251:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1283              		.loc 1 251 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 39


 1284 0602 98BB     		cbnz	r0, .L61
 1285              	.L51:
 251:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1286              		.loc 1 251 0 is_stmt 0 discriminator 1
 1287 0604 3A4B     		ldr	r3, .L64+48
 1288 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1289 0608 002B     		cmp	r3, #0
 1290 060a 00F0CD80 		beq	.L20
 253:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1291              		.loc 1 253 0 is_stmt 1
 1292 060e 0823     		movs	r3, #8
 1293 0610 2370     		strb	r3, [r4]
 254:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1294              		.loc 1 254 0
 1295 0612 3B4B     		ldr	r3, .L64+64
 1296 0614 93ED007A 		vldr.32	s14, [r3]
 1297 0618 DFED3A7A 		vldr.32	s15, .L64+68
 1298 061c 67EE277A 		vmul.f32	s15, s14, s15
 1299 0620 17EE900A 		vmov	r0, s15
 1300 0624 FFF7FEFF 		bl	__aeabi_f2d
 1301              	.LVL171:
 1302 0628 25A3     		adr	r3, .L64
 1303 062a D3E90023 		ldrd	r2, [r3]
 1304 062e FFF7FEFF 		bl	__aeabi_ddiv
 1305              	.LVL172:
 1306 0632 FFF7FEFF 		bl	__aeabi_d2f
 1307              	.LVL173:
 1308 0636 254B     		ldr	r3, .L64+12
 1309 0638 9861     		str	r0, [r3, #24]	@ float
 255:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1310              		.loc 1 255 0
 1311 063a 2D4B     		ldr	r3, .L64+48
 1312 063c 0022     		movs	r2, #0
 1313 063e 1A70     		strb	r2, [r3]
 257:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1314              		.loc 1 257 0
 1315 0640 234C     		ldr	r4, .L64+16
 1316              	.LVL174:
 1317 0642 4FF48051 		mov	r1, #4096
 1318 0646 2046     		mov	r0, r4
 1319 0648 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1320              	.LVL175:
 258:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1321              		.loc 1 258 0
 1322 064c 4FF40051 		mov	r1, #8192
 1323 0650 2046     		mov	r0, r4
 1324 0652 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1325              	.LVL176:
 259:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1326              		.loc 1 259 0
 1327 0656 4FF48041 		mov	r1, #16384
 1328 065a 2046     		mov	r0, r4
 1329 065c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1330              	.LVL177:
 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1331              		.loc 1 260 0
 1332 0660 4FF40041 		mov	r1, #32768
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 40


 1333 0664 2046     		mov	r0, r4
 1334 0666 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1335              	.LVL178:
 1336 066a 9DE0     		b	.L20
 1337              	.LVL179:
 1338              	.L61:
 250:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1339              		.loc 1 250 0
 1340 066c 4FF48071 		mov	r1, #256
 1341 0670 1748     		ldr	r0, .L64+16
 1342 0672 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1343              	.LVL180:
 249:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 1344              		.loc 1 249 0
 1345 0676 0028     		cmp	r0, #0
 1346 0678 C4D0     		beq	.L51
 251:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1347              		.loc 1 251 0
 1348 067a 4FF48061 		mov	r1, #1024
 1349 067e 1448     		ldr	r0, .L64+16
 1350 0680 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1351              	.LVL181:
 250:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1352              		.loc 1 250 0
 1353 0684 0028     		cmp	r0, #0
 1354 0686 BDD0     		beq	.L51
 1355 0688 8EE0     		b	.L20
 1356              	.LVL182:
 1357              	.L31:
 1358              	.LBB148:
 271:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 1359              		.loc 1 271 0
 1360 068a 1F48     		ldr	r0, .L64+72
 1361              	.LVL183:
 1362 068c FFF7FEFF 		bl	printf
 1363              	.LVL184:
 272:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG_2){
 1364              		.loc 1 272 0
 1365 0690 1E4B     		ldr	r3, .L64+76
 1366 0692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 0694 002B     		cmp	r3, #0
 1368 0696 3BD1     		bne	.L52
 273:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 1369              		.loc 1 273 0
 1370 0698 0F4B     		ldr	r3, .L64+24
 1371 069a D3ED067A 		vldr.32	s15, [r3, #24]
 1372 069e 0B4B     		ldr	r3, .L64+12
 1373 06a0 93ED060A 		vldr.32	s0, [r3, #24]
 1374 06a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1375 06a8 17EE900A 		vmov	r0, s15	@ int
 1376 06ac FFF7FEFF 		bl	_Z2goif
 1377              	.LVL185:
 1378 06b0 0028     		cmp	r0, #0
 1379 06b2 79D0     		beq	.L20
 275:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1380              		.loc 1 275 0
 1381 06b4 154B     		ldr	r3, .L64+76
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 41


 1382 06b6 0122     		movs	r2, #1
 1383 06b8 1A70     		strb	r2, [r3]
 1384 06ba 75E0     		b	.L20
 1385              	.L65:
 1386 06bc AFF30080 		.align	3
 1387              	.L64:
 1388 06c0 182D4454 		.word	1413754136
 1389 06c4 FB210940 		.word	1074340347
 1390 06c8 74000000 		.word	.LC13
 1391 06cc 00000000 		.word	.LANCHOR3
 1392 06d0 000C0240 		.word	1073875968
 1393 06d4 00000000 		.word	leg
 1394 06d8 00000000 		.word	.LANCHOR2
 1395 06dc 80000000 		.word	.LC14
 1396 06e0 8C000000 		.word	.LC15
 1397 06e4 98000000 		.word	.LC16
 1398 06e8 A4000000 		.word	.LC17
 1399 06ec 00000000 		.word	.LANCHOR8
 1400 06f0 00000000 		.word	.LANCHOR1
 1401 06f4 B0000000 		.word	.LC18
 1402 06f8 00000000 		.word	0
 1403 06fc 00000000 		.word	steering
 1404 0700 00000000 		.word	robot_angle
 1405 0704 00003443 		.word	1127481344
 1406 0708 BC000000 		.word	.LC19
 1407 070c 00000000 		.word	.LANCHOR9
 1408              	.L52:
 279:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1409              		.loc 1 279 0
 1410 0710 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1411              	.LVL186:
 1412 0714 0028     		cmp	r0, #0
 1413 0716 47D0     		beq	.L20
 281:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1414              		.loc 1 281 0
 1415 0718 0923     		movs	r3, #9
 1416 071a 2370     		strb	r3, [r4]
 282:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1417              		.loc 1 282 0
 1418 071c 2E4C     		ldr	r4, .L66
 1419              	.LVL187:
 1420 071e 4FF48051 		mov	r1, #4096
 1421 0722 2046     		mov	r0, r4
 1422 0724 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1423              	.LVL188:
 283:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1424              		.loc 1 283 0
 1425 0728 4FF40051 		mov	r1, #8192
 1426 072c 2046     		mov	r0, r4
 1427 072e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1428              	.LVL189:
 284:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1429              		.loc 1 284 0
 1430 0732 4FF48041 		mov	r1, #16384
 1431 0736 2046     		mov	r0, r4
 1432 0738 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1433              	.LVL190:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 42


 285:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1434              		.loc 1 285 0
 1435 073c 4FF40041 		mov	r1, #32768
 1436 0740 2046     		mov	r0, r4
 1437 0742 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1438              	.LVL191:
 1439 0746 2FE0     		b	.L20
 1440              	.LVL192:
 1441              	.L32:
 1442              	.LBE148:
 296:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1443              		.loc 1 296 0
 1444 0748 2448     		ldr	r0, .L66+4
 1445              	.LVL193:
 1446 074a FFF7FEFF 		bl	puts
 1447              	.LVL194:
 297:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 1448              		.loc 1 297 0
 1449 074e 9FED248A 		vldr.32	s16, .L66+8
 1450 0752 244C     		ldr	r4, .L66+12
 1451              	.LVL195:
 1452 0754 B0EE480A 		vmov.f32	s0, s16
 1453 0758 2046     		mov	r0, r4
 1454 075a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1455              	.LVL196:
 298:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1456              		.loc 1 298 0
 1457 075e B0EE480A 		vmov.f32	s0, s16
 1458 0762 04F15800 		add	r0, r4, #88
 1459 0766 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1460              	.LVL197:
 299:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1461              		.loc 1 299 0
 1462 076a B0EE480A 		vmov.f32	s0, s16
 1463 076e 1E48     		ldr	r0, .L66+16
 1464 0770 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1465              	.LVL198:
 301:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1466              		.loc 1 301 0
 1467 0774 184C     		ldr	r4, .L66
 1468 0776 4FF48051 		mov	r1, #4096
 1469 077a 2046     		mov	r0, r4
 1470 077c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1471              	.LVL199:
 302:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1472              		.loc 1 302 0
 1473 0780 4FF40051 		mov	r1, #8192
 1474 0784 2046     		mov	r0, r4
 1475 0786 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1476              	.LVL200:
 303:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1477              		.loc 1 303 0
 1478 078a 4FF48041 		mov	r1, #16384
 1479 078e 2046     		mov	r0, r4
 1480 0790 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1481              	.LVL201:
 304:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 43


 1482              		.loc 1 304 0
 1483 0794 4FF40041 		mov	r1, #32768
 1484 0798 2046     		mov	r0, r4
 1485 079a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1486              	.LVL202:
 305:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1487              		.loc 1 305 0
 1488 079e 0122     		movs	r2, #1
 1489 07a0 0421     		movs	r1, #4
 1490 07a2 1248     		ldr	r0, .L66+20
 1491 07a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1492              	.LVL203:
 1493              	.L20:
 1494              	.LBE109:
 1495              	.LBE108:
 315:Core/Src/robot/robot.cpp **** }
 1496              		.loc 1 315 0
 1497 07a8 07B0     		add	sp, sp, #28
 1498              	.LCFI4:
 1499              		.cfi_remember_state
 1500              		.cfi_def_cfa_offset 44
 1501              		@ sp needed
 1502 07aa BDEC028B 		vldm	sp!, {d8}
 1503              	.LCFI5:
 1504              		.cfi_restore 80
 1505              		.cfi_restore 81
 1506              		.cfi_def_cfa_offset 36
 1507 07ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1508              	.LVL204:
 1509              	.L33:
 1510              	.LCFI6:
 1511              		.cfi_restore_state
 1512              	.LBB150:
 1513              	.LBB149:
 310:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1514              		.loc 1 310 0
 1515 07b2 0C4C     		ldr	r4, .L66+12
 1516 07b4 B2EE040A 		vmov.f32	s0, #1.0e+1
 1517 07b8 2046     		mov	r0, r4
 1518              	.LVL205:
 1519 07ba FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1520              	.LVL206:
 311:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1521              		.loc 1 311 0
 1522 07be B2EE040A 		vmov.f32	s0, #1.0e+1
 1523 07c2 04F15800 		add	r0, r4, #88
 1524 07c6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1525              	.LVL207:
 312:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1526              		.loc 1 312 0
 1527 07ca 9FED050A 		vldr.32	s0, .L66+8
 1528 07ce 0648     		ldr	r0, .L66+16
 1529 07d0 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1530              	.LVL208:
 1531              	.LBE149:
 1532              	.LBE150:
 315:Core/Src/robot/robot.cpp **** }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 44


 1533              		.loc 1 315 0
 1534 07d4 E8E7     		b	.L20
 1535              	.L67:
 1536 07d6 00BF     		.align	2
 1537              	.L66:
 1538 07d8 000C0240 		.word	1073875968
 1539 07dc C8000000 		.word	.LC20
 1540 07e0 00000000 		.word	0
 1541 07e4 00000000 		.word	leg
 1542 07e8 00000000 		.word	steering
 1543 07ec 00000240 		.word	1073872896
 1544              		.cfi_endproc
 1545              	.LFE503:
 1547              		.section	.text._Z4playv,"ax",%progbits
 1548              		.align	1
 1549              		.global	_Z4playv
 1550              		.syntax unified
 1551              		.thumb
 1552              		.thumb_func
 1553              		.fpu fpv4-sp-d16
 1555              	_Z4playv:
 1556              	.LFB504:
 318:Core/Src/robot/robot.cpp **** {
 1557              		.loc 1 318 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561 0000 10B5     		push	{r4, lr}
 1562              	.LCFI7:
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 4, -8
 1565              		.cfi_offset 14, -4
 319:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1566              		.loc 1 319 0
 1567 0002 0948     		ldr	r0, .L70
 1568 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1569              	.LVL209:
 1570              	.LBB151:
 1571              	.LBB152:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1572              		.loc 3 46 0
 1573 0008 084C     		ldr	r4, .L70+4
 1574 000a 2046     		mov	r0, r4
 1575 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1576              	.LVL210:
 1577              	.LBE152:
 1578              	.LBE151:
 320:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1579              		.loc 1 320 0
 1580 0010 074B     		ldr	r3, .L70+8
 1581 0012 83ED000A 		vstr.32	s0, [r3]
 1582              	.LVL211:
 1583              	.LBB153:
 1584              	.LBB154:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1585              		.loc 3 46 0
 1586 0016 04F15800 		add	r0, r4, #88
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 45


 1587 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1588              	.LVL212:
 1589              	.LBE154:
 1590              	.LBE153:
 321:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1591              		.loc 1 321 0
 1592 001e 054B     		ldr	r3, .L70+12
 1593 0020 83ED000A 		vstr.32	s0, [r3]
 323:Core/Src/robot/robot.cpp **** }
 1594              		.loc 1 323 0
 1595 0024 0120     		movs	r0, #1
 1596 0026 10BD     		pop	{r4, pc}
 1597              	.L71:
 1598              		.align	2
 1599              	.L70:
 1600 0028 00000000 		.word	.LANCHOR0
 1601 002c 3C000000 		.word	leg+60
 1602 0030 00000000 		.word	.LANCHOR10
 1603 0034 00000000 		.word	.LANCHOR11
 1604              		.cfi_endproc
 1605              	.LFE504:
 1607              		.global	angles
 1608              		.global	steps
 1609              		.global	omega1
 1610              		.global	omega0
 1611              		.global	USE_IMU_FLAG
 1612              		.global	GEREGE_FLAG
 1613              		.global	ROBOT_START_FLAG
 1614              		.global	robo_state
 1615              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1618              	GEREGE_FLAG:
 1619 0000 00       		.space	1
 1620              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1621              		.set	.LANCHOR1,. + 0
 1624              	ROBOT_START_FLAG:
 1625 0000 00       		.space	1
 1626              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1627              		.align	2
 1628              		.set	.LANCHOR6,. + 0
 1631              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1632 0000 00000000 		.space	4
 1633              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
 1634              		.set	.LANCHOR8,. + 0
 1637              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1638 0000 00       		.space	1
 1639              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1640              		.set	.LANCHOR9,. + 0
 1643              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1644 0000 00       		.space	1
 1645              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1646              		.align	2
 1647              		.set	.LANCHOR7,. + 0
 1650              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1651 0000 00000000 		.space	4
 1652              		.section	.bss.omega0,"aw",%nobits
 1653              		.align	2
 1654              		.set	.LANCHOR10,. + 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 46


 1657              	omega0:
 1658 0000 00000000 		.space	4
 1659              		.section	.bss.omega1,"aw",%nobits
 1660              		.align	2
 1661              		.set	.LANCHOR11,. + 0
 1664              	omega1:
 1665 0000 00000000 		.space	4
 1666              		.section	.bss.robo_state,"aw",%nobits
 1667              		.set	.LANCHOR0,. + 0
 1670              	robo_state:
 1671 0000 00       		.space	1
 1672              		.section	.data.USE_IMU_FLAG,"aw",%progbits
 1673              		.set	.LANCHOR4,. + 0
 1676              	USE_IMU_FLAG:
 1677 0000 01       		.byte	1
 1678              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1679              		.set	.LANCHOR5,. + 0
 1682              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1683 0000 01       		.byte	1
 1684              		.section	.data.angles,"aw",%progbits
 1685              		.align	2
 1686              		.set	.LANCHOR3,. + 0
 1689              	angles:
 1690 0000 00000000 		.word	0
 1691 0004 00003442 		.word	1110704128
 1692 0008 00003442 		.word	1110704128
 1693 000c 00005C42 		.word	1113325568
 1694 0010 000020C1 		.word	-1054867456
 1695 0014 00000000 		.word	0
 1696 0018 0000B4C2 		.word	-1028390912
 1697              		.section	.data.steps,"aw",%progbits
 1698              		.align	2
 1699              		.set	.LANCHOR2,. + 0
 1702              	steps:
 1703 0000 0000A040 		.word	1084227584
 1704 0004 00001041 		.word	1091567616
 1705 0008 00005041 		.word	1095761920
 1706 000c 00008041 		.word	1098907648
 1707 0010 0000A841 		.word	1101529088
 1708 0014 0000B841 		.word	1102577664
 1709 0018 0000F041 		.word	1106247680
 1710              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
 1711              		.align	2
 1712              	.LC8:
 1713 0000 0A484F4D 		.ascii	"\012HOME\000"
 1713      4500
 1714 0006 0000     		.space	2
 1715              	.LC9:
 1716 0008 09256409 		.ascii	"\011%d\011\000"
 1716      00
 1717 000d 000000   		.space	3
 1718              	.LC10:
 1719 0010 6C656730 		.ascii	"leg0_angle = %d\011leg1_angle = %d\011steering_angl"
 1719      5F616E67 
 1719      6C65203D 
 1719      20256409 
 1719      6C656731 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 47


 1720 003d 65203D20 		.ascii	"e = %d\011robot_angle = %d\011\000"
 1720      25640972 
 1720      6F626F74 
 1720      5F616E67 
 1720      6C65203D 
 1721 0056 0000     		.space	2
 1722              	.LC11:
 1723 0058 0A0A456E 		.ascii	"\012\012Entered here!!\012\000"
 1723      74657265 
 1723      64206865 
 1723      72652121 
 1723      0A00
 1724 006a 0000     		.space	2
 1725              	.LC12:
 1726 006c 0A4D6172 		.ascii	"\012March\000"
 1726      636800
 1727 0073 00       		.space	1
 1728              	.LC13:
 1729 0074 0A547572 		.ascii	"\012Turn 45\000"
 1729      6E203435 
 1729      00
 1730 007d 000000   		.space	3
 1731              	.LC14:
 1732 0080 0A53616E 		.ascii	"\012Sand dune\000"
 1732      64206475 
 1732      6E6500
 1733 008b 00       		.space	1
 1734              	.LC15:
 1735 008c 0A537461 		.ascii	"\012State D\000"
 1735      74652044 
 1735      00
 1736 0095 000000   		.space	3
 1737              	.LC16:
 1738 0098 0A547572 		.ascii	"\012Turn 90\000"
 1738      6E203930 
 1738      00
 1739 00a1 000000   		.space	3
 1740              	.LC17:
 1741 00a4 0A547573 		.ascii	"\012Tussock\000"
 1741      736F636B 
 1741      00
 1742 00ad 000000   		.space	3
 1743              	.LC18:
 1744 00b0 0A426173 		.ascii	"\012Base camp\000"
 1744      65206361 
 1744      6D7000
 1745 00bb 00       		.space	1
 1746              	.LC19:
 1747 00bc 0A4D4F55 		.ascii	"\012MOUNTAIN\000"
 1747      4E544149 
 1747      4E00
 1748 00c6 0000     		.space	2
 1749              	.LC20:
 1750 00c8 0A55554B 		.ascii	"\012UUKHAI\000"
 1750      48414900 
 1751              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1752              		.align	2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 48


 1753              	.LC0:
 1754 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1754      6F6E6520 
 1754      4D415243 
 1754      4800
 1755 000e 0000     		.space	2
 1756              	.LC1:
 1757 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1757      6F6E6520 
 1757      343500
 1758 001b 00       		.space	1
 1759              	.LC2:
 1760 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
 1760      6F6E6520 
 1760      53414E44 
 1760      5F44554E 
 1760      4500
 1761 002e 0000     		.space	2
 1762              	.LC3:
 1763 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
 1763      6F6E6520 
 1763      4D4F554E 
 1763      5441494E 
 1763      00
 1764 0041 000000   		.space	3
 1765              	.LC4:
 1766 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
 1766      6F6E6520 
 1766      44656661 
 1766      756C7400 
 1767              	.LC5:
 1768 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1768      6F6E6520 
 1768      52454400 
 1769              	.LC6:
 1770 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1770      6F6E6520 
 1770      424C5545 
 1770      00
 1771 006d 000000   		.space	3
 1772              	.LC7:
 1773 0070 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1773      6F6E6520 
 1773      44656661 
 1773      756C745F 
 1773      52454400 
 1774              		.text
 1775              	.Letext0:
 1776              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1777              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1778              		.file 7 "Core/Inc/sys/FreeRTOSConfig.h"
 1779              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1780              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1781              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1782              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1783              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1784              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 49


 1785              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1786              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1787              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1788              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1789              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1790              		.file 19 "Core/Inc/periphs/tim.h"
 1791              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1792              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1793              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1794              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1795              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1796              		.file 25 "Core/Inc/devs/motor.h"
 1797              		.file 26 "Core/Inc/devs/encoder.h"
 1798              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1799              		.file 28 "Core/Inc/devs/limit_switch.h"
 1800              		.file 29 "Core/Inc/robot/robot.h"
 1801              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1802              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1803              		.file 32 "Core/Inc/robot/robot_functions.h"
 1804              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:307    .text._Z11zone_selectv:00000184 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:328    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:335    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:362    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:369    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:404    .text._Z11start_RobotP12Robot_States:00000018 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:415    .text._Z11start_RobotP12Robot_States:0000002e $t
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:915    .text._Z11start_RobotP12Robot_States:00000328 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:945    .text._Z11start_RobotP12Robot_States:00000394 $t
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1388   .text._Z11start_RobotP12Robot_States:000006c0 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1410   .text._Z11start_RobotP12Robot_States:00000710 $t
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1538   .text._Z11start_RobotP12Robot_States:000007d8 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1548   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1555   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1600   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1689   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1702   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1664   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1657   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1676   .data.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1618   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1624   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1670   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1619   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1625   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1627   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1631   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1637   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1638   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1643   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1644   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1646   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1650   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1653   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1660   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1671   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1682   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1685   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1698   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1711   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s:1752   .rodata._Z11zone_selectv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_d2f
_ZN7encoder9get_angleEv
_ZN7encoder16get_actual_angleEv
HAL_GPIO_WritePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccRin6Ck.s 			page 51


_Z11getup_n_runv
puts
HAL_GetTick
__cxa_guard_acquire
__cxa_guard_release
_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
_Z2goif
HAL_GPIO_TogglePin
steering
robot_angle
curr_angle
initial_angle
_Z23initialize_leg_positionv
_ZN8steering9set_omegaEf
_ZN7encoder9get_omegaEv
