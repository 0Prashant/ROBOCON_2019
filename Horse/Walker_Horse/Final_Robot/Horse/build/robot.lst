ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB499:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = false;
  15:Core/Src/robot/robot.cpp **** float omega0 = 0;
  16:Core/Src/robot/robot.cpp **** float omega1 = 0;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** float steps[7] = {6, 10, 15, 17, 22, 24, 31};
  19:Core/Src/robot/robot.cpp **** float angles[7] = {0 , 45, 45, 60, -10, 0, -90};
  20:Core/Src/robot/robot.cpp **** 
  21:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  22:Core/Src/robot/robot.cpp **** {
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
  24:Core/Src/robot/robot.cpp **** 	{
  25:Core/Src/robot/robot.cpp **** 	case HOME:
  26:Core/Src/robot/robot.cpp **** 	{
  27:Core/Src/robot/robot.cpp **** 		/**
  28:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  29:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
  30:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  31:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  33:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  34:Core/Src/robot/robot.cpp **** 			*/
  35:Core/Src/robot/robot.cpp **** 
  36:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
  39:Core/Src/robot/robot.cpp **** 		{
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
  41:Core/Src/robot/robot.cpp **** 		}
  42:Core/Src/robot/robot.cpp **** 		else
  43:Core/Src/robot/robot.cpp **** 		{
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  48:Core/Src/robot/robot.cpp **** 
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  50:Core/Src/robot/robot.cpp **** 		{
  51:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  52:Core/Src/robot/robot.cpp **** 			// initial_angle.setZ(initial_angle.getZ());
  53:Core/Src/robot/robot.cpp **** 			// printf("\t%d\t", (int)initial_angle.getZ());
  54:Core/Src/robot/robot.cpp **** 		}
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
  56:Core/Src/robot/robot.cpp **** 		{
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  59:Core/Src/robot/robot.cpp **** 		}
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  66:Core/Src/robot/robot.cpp **** 		{
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  70:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  71:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
  72:Core/Src/robot/robot.cpp **** 			{
  73:Core/Src/robot/robot.cpp **** 				zone_select();
  74:Core/Src/robot/robot.cpp **** 			}
  75:Core/Src/robot/robot.cpp **** 		}
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
  77:Core/Src/robot/robot.cpp **** 		{
  78:Core/Src/robot/robot.cpp **** 
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  85:Core/Src/robot/robot.cpp **** 
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
  88:Core/Src/robot/robot.cpp **** 			{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 3


  89:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
  90:Core/Src/robot/robot.cpp **** 				{
  91:Core/Src/robot/robot.cpp **** 					zone_select();
  92:Core/Src/robot/robot.cpp **** 				}
  93:Core/Src/robot/robot.cpp **** 			}
  94:Core/Src/robot/robot.cpp **** 		}
  95:Core/Src/robot/robot.cpp **** 
  96:Core/Src/robot/robot.cpp **** 		else
  97:Core/Src/robot/robot.cpp **** 		{
  98:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  99:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 100:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 101:Core/Src/robot/robot.cpp **** 		}
 102:Core/Src/robot/robot.cpp **** 	}
 103:Core/Src/robot/robot.cpp **** 	break;
 104:Core/Src/robot/robot.cpp **** 
 105:Core/Src/robot/robot.cpp **** 	case MARCH:
 106:Core/Src/robot/robot.cpp **** 	{
 107:Core/Src/robot/robot.cpp **** 		/*
 108:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
 109:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
 110:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
 111:Core/Src/robot/robot.cpp **** 		*/
 112:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 113:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 114:Core/Src/robot/robot.cpp **** 		{
 115:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 120:Core/Src/robot/robot.cpp **** 		}
 121:Core/Src/robot/robot.cpp **** 	}
 122:Core/Src/robot/robot.cpp **** 	break;
 123:Core/Src/robot/robot.cpp **** 
 124:Core/Src/robot/robot.cpp **** 	case TURN_45:
 125:Core/Src/robot/robot.cpp **** 	{
 126:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 127:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 128:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 129:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 130:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 131:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 132:Core/Src/robot/robot.cpp **** 		*/
 133:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 134:Core/Src/robot/robot.cpp **** 
 135:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 137:Core/Src/robot/robot.cpp **** 		{
 138:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 139:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 142:Core/Src/robot/robot.cpp **** 
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 4


 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 147:Core/Src/robot/robot.cpp **** 		}
 148:Core/Src/robot/robot.cpp **** 		//*/
 149:Core/Src/robot/robot.cpp **** 	}
 150:Core/Src/robot/robot.cpp **** 	break;
 151:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 152:Core/Src/robot/robot.cpp **** 	{
 153:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 154:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 155:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 156:Core/Src/robot/robot.cpp **** 			*/
 157:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 158:Core/Src/robot/robot.cpp **** 
 159:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 161:Core/Src/robot/robot.cpp **** 		{
 162:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 163:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 164:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 165:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 166:Core/Src/robot/robot.cpp **** 
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 171:Core/Src/robot/robot.cpp **** 		}
 172:Core/Src/robot/robot.cpp **** 		//*/
 173:Core/Src/robot/robot.cpp **** 	}
 174:Core/Src/robot/robot.cpp **** 	break;
 175:Core/Src/robot/robot.cpp **** 	case STATE_D:
 176:Core/Src/robot/robot.cpp **** 	{
 177:Core/Src/robot/robot.cpp **** 		/*
 178:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 179:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 180:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 181:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 182:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 183:Core/Src/robot/robot.cpp **** 		{
 184:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 185:Core/Src/robot/robot.cpp **** 
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 190:Core/Src/robot/robot.cpp **** 		}
 191:Core/Src/robot/robot.cpp **** 	}
 192:Core/Src/robot/robot.cpp **** 	break;
 193:Core/Src/robot/robot.cpp **** 
 194:Core/Src/robot/robot.cpp **** 	case TURN_90:
 195:Core/Src/robot/robot.cpp **** 	{
 196:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 197:Core/Src/robot/robot.cpp **** 			no of steps = 
 198:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 199:Core/Src/robot/robot.cpp **** 			*/
 200:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 201:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 202:Core/Src/robot/robot.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 5


 203:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 204:Core/Src/robot/robot.cpp **** 
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 209:Core/Src/robot/robot.cpp **** 		}
 210:Core/Src/robot/robot.cpp **** 	}
 211:Core/Src/robot/robot.cpp **** 	break;
 212:Core/Src/robot/robot.cpp **** 
 213:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 214:Core/Src/robot/robot.cpp **** 	{
 215:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 216:Core/Src/robot/robot.cpp **** 			robot stops 
 217:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 218:Core/Src/robot/robot.cpp **** 			*/
 219:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 220:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 221:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 222:Core/Src/robot/robot.cpp **** 		{
 223:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 224:Core/Src/robot/robot.cpp **** 			{
 225:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 226:Core/Src/robot/robot.cpp **** 			}
 227:Core/Src/robot/robot.cpp **** 		}
 228:Core/Src/robot/robot.cpp **** 		else
 229:Core/Src/robot/robot.cpp **** 		{
 230:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 231:Core/Src/robot/robot.cpp **** 			{
 232:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 233:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 238:Core/Src/robot/robot.cpp **** 			}
 239:Core/Src/robot/robot.cpp **** 		}
 240:Core/Src/robot/robot.cpp **** 	}
 241:Core/Src/robot/robot.cpp **** 	break;
 242:Core/Src/robot/robot.cpp **** 
 243:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 244:Core/Src/robot/robot.cpp **** 	{
 245:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 246:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 247:Core/Src/robot/robot.cpp **** 			*/
 248:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 249:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 250:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 251:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 254:Core/Src/robot/robot.cpp **** 		    ROBOT_START_FLAG)
 255:Core/Src/robot/robot.cpp **** 		{
 256:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 257:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 258:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 259:Core/Src/robot/robot.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 261:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 264:Core/Src/robot/robot.cpp **** 		}
 265:Core/Src/robot/robot.cpp **** 	}
 266:Core/Src/robot/robot.cpp **** 	break;
 267:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 268:Core/Src/robot/robot.cpp **** 	{
 269:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 270:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 271:Core/Src/robot/robot.cpp **** 			*/
 272:Core/Src/robot/robot.cpp **** 
 273:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 274:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 275:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 276:Core/Src/robot/robot.cpp **** 		{
 277:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 278:Core/Src/robot/robot.cpp **** 			{
 279:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 280:Core/Src/robot/robot.cpp **** 			}
 281:Core/Src/robot/robot.cpp **** 		}
 282:Core/Src/robot/robot.cpp **** 		else
 283:Core/Src/robot/robot.cpp **** 		{
 284:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 285:Core/Src/robot/robot.cpp **** 			{
 286:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 287:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 288:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 289:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 290:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 291:Core/Src/robot/robot.cpp **** 			}
 292:Core/Src/robot/robot.cpp **** 		}
 293:Core/Src/robot/robot.cpp **** 	}
 294:Core/Src/robot/robot.cpp **** 
 295:Core/Src/robot/robot.cpp **** 	break;
 296:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 297:Core/Src/robot/robot.cpp **** 	{
 298:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 299:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 300:Core/Src/robot/robot.cpp **** 			*/
 301:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 305:Core/Src/robot/robot.cpp **** 
 306:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 307:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 308:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 309:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 311:Core/Src/robot/robot.cpp **** 	}
 312:Core/Src/robot/robot.cpp **** 	break;
 313:Core/Src/robot/robot.cpp **** 	case TUNE:
 314:Core/Src/robot/robot.cpp **** 	{
 315:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 316:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 7


 317:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 318:Core/Src/robot/robot.cpp **** 	}
 319:Core/Src/robot/robot.cpp **** 	}
 320:Core/Src/robot/robot.cpp **** }
 321:Core/Src/robot/robot.cpp **** 
 322:Core/Src/robot/robot.cpp **** bool play()
 323:Core/Src/robot/robot.cpp **** {
 324:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 325:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 326:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 327:Core/Src/robot/robot.cpp **** 	return true;
 328:Core/Src/robot/robot.cpp **** }
 329:Core/Src/robot/robot.cpp **** 
 330:Core/Src/robot/robot.cpp **** void zone_select(void)
 331:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 331 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LBB50:
 332:Core/Src/robot/robot.cpp **** 
 333:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 333 0
  39 0002 1021     		movs	r1, #16
  40 0004 6A48     		ldr	r0, .L17
  41 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000a 08BB     		cbnz	r0, .L2
 334:Core/Src/robot/robot.cpp **** 	{
 335:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 335 0
  45 000c 0123     		movs	r3, #1
  46 000e 694A     		ldr	r2, .L17+4
  47 0010 1370     		strb	r3, [r2]
 336:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 336 0
  49 0012 694A     		ldr	r2, .L17+8
  50 0014 1370     		strb	r3, [r2]
 337:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 337 0
  52 0016 6948     		ldr	r0, .L17+12
  53 0018 FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE50:
  57              	.LBB60:
 338:Core/Src/robot/robot.cpp **** 	}
 339:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 340:Core/Src/robot/robot.cpp **** 	{
 341:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
 342:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 343:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 8


 344:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 345:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 346:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 347:Core/Src/robot/robot.cpp **** 		{
 348:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 349:Core/Src/robot/robot.cpp **** 		}
 350:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 351:Core/Src/robot/robot.cpp **** 	}
 352:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 353:Core/Src/robot/robot.cpp **** 	{
 354:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 355:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 356:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 357:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 358:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 359:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 360:Core/Src/robot/robot.cpp **** 		{
 361:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 362:Core/Src/robot/robot.cpp **** 		}
 363:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 364:Core/Src/robot/robot.cpp **** 	}
 365:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 366:Core/Src/robot/robot.cpp **** 	{
 367:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 368:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 369:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 370:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 371:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 372:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 373:Core/Src/robot/robot.cpp **** 		{
 374:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 375:Core/Src/robot/robot.cpp **** 		}
 376:Core/Src/robot/robot.cpp **** 	}
 377:Core/Src/robot/robot.cpp **** 	else
 378:Core/Src/robot/robot.cpp **** 	{
 379:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 380:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 381:Core/Src/robot/robot.cpp **** 	}
 382:Core/Src/robot/robot.cpp **** 
 383:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 383 0
  59 001c 4FF48051 		mov	r1, #4096
  60 0020 6748     		ldr	r0, .L17+16
  61 0022 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0026 0028     		cmp	r0, #0
  64 0028 40F09080 		bne	.L10
  65              	.LBB61:
 384:Core/Src/robot/robot.cpp **** 	{
 385:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 385 0
  67 002c 6548     		ldr	r0, .L17+20
  68 002e FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB62:
 386:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 386 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 9


  72 0032 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L12:
  75              		.loc 1 386 0 is_stmt 0 discriminator 3
  76 0034 062A     		cmp	r2, #6
  77 0036 00F3BA80 		bgt	.L1
 387:Core/Src/robot/robot.cpp **** 		{
 388:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 388 0 is_stmt 1 discriminator 2
  79 003a 634B     		ldr	r3, .L17+24
  80 003c 03EB8203 		add	r3, r3, r2, lsl #2
  81 0040 D3ED007A 		vldr.32	s15, [r3]
  82 0044 F1EE677A 		vneg.f32	s15, s15
  83 0048 C3ED007A 		vstr.32	s15, [r3]
 386:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  84              		.loc 1 386 0 discriminator 2
  85 004c 0132     		adds	r2, r2, #1
  86              	.LVL5:
  87 004e F1E7     		b	.L12
  88              	.LVL6:
  89              	.L2:
  90              	.LBE62:
  91              	.LBE61:
  92              	.LBE60:
  93              	.LBB68:
  94              	.LBB51:
 339:Core/Src/robot/robot.cpp **** 	{
  95              		.loc 1 339 0
  96 0050 0421     		movs	r1, #4
  97 0052 5E48     		ldr	r0, .L17+28
  98 0054 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  99              	.LVL7:
 100 0058 20BB     		cbnz	r0, .L4
 101              	.LBB52:
 341:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 102              		.loc 1 341 0
 103 005a 5D48     		ldr	r0, .L17+32
 104 005c FFF7FEFF 		bl	printf
 105              	.LVL8:
 342:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
 106              		.loc 1 342 0
 107 0060 544B     		ldr	r3, .L17+4
 108 0062 0222     		movs	r2, #2
 109 0064 1A70     		strb	r2, [r3]
 343:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 110              		.loc 1 343 0
 111 0066 5B4B     		ldr	r3, .L17+36
 112 0068 D3ED017A 		vldr.32	s15, [r3, #4]
 113 006c B0EE007A 		vmov.f32	s14, #2.0e+0
 114 0070 77EEC77A 		vsub.f32	s15, s15, s14
 115 0074 FDEEE77A 		vcvt.s32.f32	s15, s15
 116 0078 574A     		ldr	r2, .L17+40
 117 007a C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 344:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 118              		.loc 1 344 0
 119 007e C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 345:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 10


 120              		.loc 1 345 0
 121 0082 514B     		ldr	r3, .L17+24
 122 0084 93ED017A 		vldr.32	s14, [r3, #4]
 123              	.LVL9:
 124              	.LBB53:
 346:Core/Src/robot/robot.cpp **** 		{
 125              		.loc 1 346 0
 126 0088 0022     		movs	r2, #0
 127              	.LVL10:
 128              	.L5:
 346:Core/Src/robot/robot.cpp **** 		{
 129              		.loc 1 346 0 is_stmt 0 discriminator 3
 130 008a 062A     		cmp	r2, #6
 131 008c C6DC     		bgt	.L3
 348:Core/Src/robot/robot.cpp **** 		}
 132              		.loc 1 348 0 is_stmt 1 discriminator 2
 133 008e 4E4B     		ldr	r3, .L17+24
 134 0090 03EB8203 		add	r3, r3, r2, lsl #2
 135 0094 D3ED007A 		vldr.32	s15, [r3]
 136 0098 77EEC77A 		vsub.f32	s15, s15, s14
 137 009c C3ED007A 		vstr.32	s15, [r3]
 346:Core/Src/robot/robot.cpp **** 		{
 138              		.loc 1 346 0 discriminator 2
 139 00a0 0132     		adds	r2, r2, #1
 140              	.LVL11:
 141 00a2 F2E7     		b	.L5
 142              	.LVL12:
 143              	.L4:
 144              	.LBE53:
 145              	.LBE52:
 146              	.LBB54:
 352:Core/Src/robot/robot.cpp **** 	{
 147              		.loc 1 352 0
 148 00a4 0221     		movs	r1, #2
 149 00a6 4D48     		ldr	r0, .L17+44
 150 00a8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 151              	.LVL13:
 152 00ac 00BB     		cbnz	r0, .L6
 153              	.LBB55:
 354:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 154              		.loc 1 354 0
 155 00ae 4C48     		ldr	r0, .L17+48
 156 00b0 FFF7FEFF 		bl	printf
 157              	.LVL14:
 355:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 158              		.loc 1 355 0
 159 00b4 3F4B     		ldr	r3, .L17+4
 160 00b6 0422     		movs	r2, #4
 161 00b8 1A70     		strb	r2, [r3]
 356:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 162              		.loc 1 356 0
 163 00ba 464B     		ldr	r3, .L17+36
 164 00bc D3ED027A 		vldr.32	s15, [r3, #8]
 165 00c0 FDEEE77A 		vcvt.s32.f32	s15, s15
 166 00c4 444A     		ldr	r2, .L17+40
 167 00c6 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 357:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 11


 168              		.loc 1 357 0
 169 00ca C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 358:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 170              		.loc 1 358 0
 171 00ce 3E4B     		ldr	r3, .L17+24
 172 00d0 93ED027A 		vldr.32	s14, [r3, #8]
 173              	.LVL15:
 174              	.LBB56:
 359:Core/Src/robot/robot.cpp **** 		{
 175              		.loc 1 359 0
 176 00d4 0022     		movs	r2, #0
 177              	.LVL16:
 178              	.L7:
 359:Core/Src/robot/robot.cpp **** 		{
 179              		.loc 1 359 0 is_stmt 0 discriminator 3
 180 00d6 062A     		cmp	r2, #6
 181 00d8 A0DC     		bgt	.L3
 361:Core/Src/robot/robot.cpp **** 		}
 182              		.loc 1 361 0 is_stmt 1 discriminator 2
 183 00da 3B4B     		ldr	r3, .L17+24
 184 00dc 03EB8203 		add	r3, r3, r2, lsl #2
 185 00e0 D3ED007A 		vldr.32	s15, [r3]
 186 00e4 77EEC77A 		vsub.f32	s15, s15, s14
 187 00e8 C3ED007A 		vstr.32	s15, [r3]
 359:Core/Src/robot/robot.cpp **** 		{
 188              		.loc 1 359 0 discriminator 2
 189 00ec 0132     		adds	r2, r2, #1
 190              	.LVL17:
 191 00ee F2E7     		b	.L7
 192              	.LVL18:
 193              	.L6:
 194              	.LBE56:
 195              	.LBE55:
 196              	.LBB57:
 365:Core/Src/robot/robot.cpp **** 	{
 197              		.loc 1 365 0
 198 00f0 0821     		movs	r1, #8
 199 00f2 3A48     		ldr	r0, .L17+44
 200 00f4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL19:
 202 00f8 08BB     		cbnz	r0, .L8
 203              	.LBB58:
 367:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 204              		.loc 1 367 0
 205 00fa 3A48     		ldr	r0, .L17+52
 206 00fc FFF7FEFF 		bl	printf
 207              	.LVL20:
 368:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 208              		.loc 1 368 0
 209 0100 2C4B     		ldr	r3, .L17+4
 210 0102 0722     		movs	r2, #7
 211 0104 1A70     		strb	r2, [r3]
 369:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 212              		.loc 1 369 0
 213 0106 334B     		ldr	r3, .L17+36
 214 0108 D3ED057A 		vldr.32	s15, [r3, #20]
 215 010c FDEEE77A 		vcvt.s32.f32	s15, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 12


 216 0110 314A     		ldr	r2, .L17+40
 217 0112 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 370:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 218              		.loc 1 370 0
 219 0116 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 371:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 220              		.loc 1 371 0
 221 011a 2B4B     		ldr	r3, .L17+24
 222 011c 93ED057A 		vldr.32	s14, [r3, #20]
 223              	.LVL21:
 224              	.LBB59:
 372:Core/Src/robot/robot.cpp **** 		{
 225              		.loc 1 372 0
 226 0120 0022     		movs	r2, #0
 227              	.LVL22:
 228              	.L9:
 372:Core/Src/robot/robot.cpp **** 		{
 229              		.loc 1 372 0 is_stmt 0 discriminator 3
 230 0122 062A     		cmp	r2, #6
 231 0124 3FF77AAF 		bgt	.L3
 374:Core/Src/robot/robot.cpp **** 		}
 232              		.loc 1 374 0 is_stmt 1 discriminator 2
 233 0128 274B     		ldr	r3, .L17+24
 234 012a 03EB8203 		add	r3, r3, r2, lsl #2
 235 012e D3ED007A 		vldr.32	s15, [r3]
 236 0132 77EEC77A 		vsub.f32	s15, s15, s14
 237 0136 C3ED007A 		vstr.32	s15, [r3]
 372:Core/Src/robot/robot.cpp **** 		{
 238              		.loc 1 372 0 discriminator 2
 239 013a 0132     		adds	r2, r2, #1
 240              	.LVL23:
 241 013c F1E7     		b	.L9
 242              	.LVL24:
 243              	.L8:
 244              	.LBE59:
 245              	.LBE58:
 379:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 246              		.loc 1 379 0
 247 013e 2A48     		ldr	r0, .L17+56
 248 0140 FFF7FEFF 		bl	printf
 249              	.LVL25:
 380:Core/Src/robot/robot.cpp **** 	}
 250              		.loc 1 380 0
 251 0144 1B4B     		ldr	r3, .L17+4
 252 0146 0122     		movs	r2, #1
 253 0148 1A70     		strb	r2, [r3]
 254 014a 67E7     		b	.L3
 255              	.L10:
 256              	.LBE57:
 257              	.LBE54:
 258              	.LBE51:
 259              	.LBE68:
 260              	.LBB69:
 261              	.LBB63:
 389:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 390:Core/Src/robot/robot.cpp **** 			// printf("\n\t angles= %d",(int)(angles[i]));
 391:Core/Src/robot/robot.cpp **** 		}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 13


 392:Core/Src/robot/robot.cpp **** 	}
 393:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
 262              		.loc 1 393 0
 263 014c 2021     		movs	r1, #32
 264 014e 2348     		ldr	r0, .L17+44
 265 0150 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 266              	.LVL26:
 267 0154 98B9     		cbnz	r0, .L13
 268              	.LBB64:
 394:Core/Src/robot/robot.cpp **** 	{
 395:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");for (int i = 0; i < 7; i++)
 269              		.loc 1 395 0
 270 0156 2548     		ldr	r0, .L17+60
 271 0158 FFF7FEFF 		bl	printf
 272              	.LVL27:
 273              	.LBB65:
 274 015c 0024     		movs	r4, #0
 275              	.LVL28:
 276              	.L14:
 277              		.loc 1 395 0 is_stmt 0 discriminator 3
 278 015e 062C     		cmp	r4, #6
 279 0160 25DC     		bgt	.L1
 396:Core/Src/robot/robot.cpp **** 		{
 397:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 398:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 280              		.loc 1 398 0 is_stmt 1 discriminator 2
 281 0162 194B     		ldr	r3, .L17+24
 282 0164 03EB8403 		add	r3, r3, r4, lsl #2
 283 0168 D3ED007A 		vldr.32	s15, [r3]
 284 016c FDEEE77A 		vcvt.s32.f32	s15, s15
 285 0170 17EE901A 		vmov	r1, s15	@ int
 286 0174 1E48     		ldr	r0, .L17+64
 287 0176 FFF7FEFF 		bl	printf
 288              	.LVL29:
 395:Core/Src/robot/robot.cpp **** 		{
 289              		.loc 1 395 0 discriminator 2
 290 017a 0134     		adds	r4, r4, #1
 291              	.LVL30:
 292 017c EFE7     		b	.L14
 293              	.LVL31:
 294              	.L13:
 295              	.LBE65:
 296              	.LBE64:
 297              	.LBB66:
 399:Core/Src/robot/robot.cpp **** 		}
 400:Core/Src/robot/robot.cpp **** 	}
 401:Core/Src/robot/robot.cpp **** 	else
 402:Core/Src/robot/robot.cpp **** 	{
 403:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 298              		.loc 1 403 0
 299 017e 1D48     		ldr	r0, .L17+68
 300 0180 FFF7FEFF 		bl	printf
 301              	.LVL32:
 302              	.LBB67:
 404:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 303              		.loc 1 404 0
 304 0184 0024     		movs	r4, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 14


 305              	.LVL33:
 306              	.L15:
 307              		.loc 1 404 0 is_stmt 0 discriminator 3
 308 0186 062C     		cmp	r4, #6
 309 0188 11DC     		bgt	.L1
 405:Core/Src/robot/robot.cpp **** 		{
 406:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 310              		.loc 1 406 0 is_stmt 1 discriminator 2
 311 018a 0F4B     		ldr	r3, .L17+24
 312 018c 03EB8403 		add	r3, r3, r4, lsl #2
 313 0190 D3ED007A 		vldr.32	s15, [r3]
 314 0194 F1EE677A 		vneg.f32	s15, s15
 315 0198 C3ED007A 		vstr.32	s15, [r3]
 407:Core/Src/robot/robot.cpp **** 			// angles[i] -= 7.5;
 408:Core/Src/robot/robot.cpp **** 			printf("\n\t angles= %d",(int)(angles[i]));
 316              		.loc 1 408 0 discriminator 2
 317 019c FDEEE77A 		vcvt.s32.f32	s15, s15
 318 01a0 17EE901A 		vmov	r1, s15	@ int
 319 01a4 1248     		ldr	r0, .L17+64
 320 01a6 FFF7FEFF 		bl	printf
 321              	.LVL34:
 404:Core/Src/robot/robot.cpp **** 		{
 322              		.loc 1 404 0 discriminator 2
 323 01aa 0134     		adds	r4, r4, #1
 324              	.LVL35:
 325 01ac EBE7     		b	.L15
 326              	.LVL36:
 327              	.L1:
 328              	.LBE67:
 329              	.LBE66:
 330              	.LBE63:
 331              	.LBE69:
 409:Core/Src/robot/robot.cpp **** 		}
 410:Core/Src/robot/robot.cpp **** 	}
 411:Core/Src/robot/robot.cpp **** }
 332              		.loc 1 411 0
 333 01ae 10BD     		pop	{r4, pc}
 334              	.L18:
 335              		.align	2
 336              	.L17:
 337 01b0 00040240 		.word	1073873920
 338 01b4 00000000 		.word	.LANCHOR0
 339 01b8 00000000 		.word	.LANCHOR1
 340 01bc 00000000 		.word	.LC0
 341 01c0 00080240 		.word	1073874944
 342 01c4 54000000 		.word	.LC5
 343 01c8 00000000 		.word	.LANCHOR3
 344 01cc 00100240 		.word	1073876992
 345 01d0 10000000 		.word	.LC1
 346 01d4 00000000 		.word	.LANCHOR2
 347 01d8 00000000 		.word	leg
 348 01dc 000C0240 		.word	1073875968
 349 01e0 1C000000 		.word	.LC2
 350 01e4 30000000 		.word	.LC3
 351 01e8 44000000 		.word	.LC4
 352 01ec 60000000 		.word	.LC6
 353 01f0 70000000 		.word	.LC7
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 15


 354 01f4 80000000 		.word	.LC8
 355              		.cfi_endproc
 356              	.LFE499:
 358              		.global	__aeabi_f2d
 359              		.global	__aeabi_ddiv
 360              		.global	__aeabi_d2iz
 361              		.section	.text._Z4testv,"ax",%progbits
 362              		.align	1
 363              		.global	_Z4testv
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv4-sp-d16
 369              	_Z4testv:
 370              	.LFB500:
 412:Core/Src/robot/robot.cpp **** 
 413:Core/Src/robot/robot.cpp **** void test(void)
 414:Core/Src/robot/robot.cpp **** {
 371              		.loc 1 414 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 376              	.LCFI1:
 377              		.cfi_def_cfa_offset 32
 378              		.cfi_offset 3, -32
 379              		.cfi_offset 4, -28
 380              		.cfi_offset 5, -24
 381              		.cfi_offset 6, -20
 382              		.cfi_offset 7, -16
 383              		.cfi_offset 8, -12
 384              		.cfi_offset 9, -8
 385              		.cfi_offset 14, -4
 386 0004 2DED028B 		vpush.64	{d8}
 387              	.LCFI2:
 388              		.cfi_def_cfa_offset 40
 389              		.cfi_offset 80, -40
 390              		.cfi_offset 81, -36
 415:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET){
 391              		.loc 1 415 0
 392 0008 4FF40061 		mov	r1, #2048
 393 000c 4048     		ldr	r0, .L27+8
 394 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 395              	.LVL37:
 396 0012 0028     		cmp	r0, #0
 397 0014 6CD0     		beq	.L24
 398              	.L20:
 416:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 417:Core/Src/robot/robot.cpp **** 	}
 418:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET){
 399              		.loc 1 418 0
 400 0016 4FF48071 		mov	r1, #256
 401 001a 3D48     		ldr	r0, .L27+8
 402 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 403              	.LVL38:
 404 0020 0028     		cmp	r0, #0
 405 0022 69D0     		beq	.L25
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 16


 406              	.L21:
 419:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 420:Core/Src/robot/robot.cpp **** 	}
 421:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET){
 407              		.loc 1 421 0
 408 0024 4FF48061 		mov	r1, #1024
 409 0028 3948     		ldr	r0, .L27+8
 410 002a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 411              	.LVL39:
 412 002e 0028     		cmp	r0, #0
 413 0030 66D0     		beq	.L26
 414              	.L22:
 422:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 423:Core/Src/robot/robot.cpp **** 	}
 424:Core/Src/robot/robot.cpp **** 	leg[0].set_omega(0);
 415              		.loc 1 424 0
 416 0032 9FED388A 		vldr.32	s16, .L27+12
 417 0036 384C     		ldr	r4, .L27+16
 418 0038 B0EE480A 		vmov.f32	s0, s16
 419 003c 2046     		mov	r0, r4
 420 003e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 421              	.LVL40:
 425:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(0);
 422              		.loc 1 425 0
 423 0042 B0EE480A 		vmov.f32	s0, s16
 424 0046 04F15800 		add	r0, r4, #88
 425 004a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 426              	.LVL41:
 426:Core/Src/robot/robot.cpp **** 	steering.set_angle(0);
 427              		.loc 1 426 0
 428 004e 334D     		ldr	r5, .L27+20
 429 0050 B0EE480A 		vmov.f32	s0, s16
 430 0054 2846     		mov	r0, r5
 431 0056 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 432              	.LVL42:
 433              	.LBB70:
 434              	.LBB71:
 435              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 17


  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 436              		.loc 2 48 0
 437 005a 04F13C00 		add	r0, r4, #60
 438 005e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 439              	.LVL43:
 440              	.LBE71:
 441              	.LBE70:
 427:Core/Src/robot/robot.cpp **** 	printf("\nleg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d", (int)(leg[0].get_actual_angle() 
 442              		.loc 1 427 0
 443 0062 9FED2F8A 		vldr.32	s16, .L27+24
 444 0066 60EE087A 		vmul.f32	s15, s0, s16
 445 006a 17EE900A 		vmov	r0, s15
 446 006e FFF7FEFF 		bl	__aeabi_f2d
 447              	.LVL44:
 448 0072 25A3     		adr	r3, .L27
 449 0074 D3E90023 		ldrd	r2, [r3]
 450 0078 FFF7FEFF 		bl	__aeabi_ddiv
 451              	.LVL45:
 452 007c 0646     		mov	r6, r0
 453 007e 0F46     		mov	r7, r1
 454              	.LVL46:
 455              	.LBB72:
 456              	.LBB73:
 457              		.loc 2 48 0
 458 0080 04F19400 		add	r0, r4, #148
 459 0084 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 460              	.LVL47:
 461              	.LBE73:
 462              	.LBE72:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 18


 428:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 463              		.loc 1 428 0
 464 0088 60EE087A 		vmul.f32	s15, s0, s16
 465 008c 17EE900A 		vmov	r0, s15
 466 0090 FFF7FEFF 		bl	__aeabi_f2d
 467              	.LVL48:
 468 0094 1CA3     		adr	r3, .L27
 469 0096 D3E90023 		ldrd	r2, [r3]
 470 009a FFF7FEFF 		bl	__aeabi_ddiv
 471              	.LVL49:
 472 009e 8046     		mov	r8, r0
 473 00a0 8946     		mov	r9, r1
 474              	.LVL50:
 475              	.LBB74:
 476              	.LBB75:
 477              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 19


  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 20


  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 478              		.loc 3 112 0
 479 00a2 05F10C00 		add	r0, r5, #12
 480 00a6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 481              	.LVL51:
 482              	.LBE75:
 483              	.LBE74:
 484              		.loc 1 428 0
 485 00aa 60EE087A 		vmul.f32	s15, s0, s16
 486 00ae 17EE900A 		vmov	r0, s15
 487 00b2 FFF7FEFF 		bl	__aeabi_f2d
 488              	.LVL52:
 489 00b6 14A3     		adr	r3, .L27
 490 00b8 D3E90023 		ldrd	r2, [r3]
 491 00bc FFF7FEFF 		bl	__aeabi_ddiv
 492              	.LVL53:
 427:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 493              		.loc 1 427 0
 494 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 495              	.LVL54:
 496 00c4 0546     		mov	r5, r0
 497 00c6 4046     		mov	r0, r8
 498 00c8 4946     		mov	r1, r9
 499 00ca FFF7FEFF 		bl	__aeabi_d2iz
 500              	.LVL55:
 501 00ce 0446     		mov	r4, r0
 502 00d0 3046     		mov	r0, r6
 503 00d2 3946     		mov	r1, r7
 504 00d4 FFF7FEFF 		bl	__aeabi_d2iz
 505              	.LVL56:
 506 00d8 2B46     		mov	r3, r5
 507 00da 2246     		mov	r2, r4
 508 00dc 0146     		mov	r1, r0
 509 00de 1148     		ldr	r0, .L27+28
 510 00e0 FFF7FEFF 		bl	printf
 511              	.LVL57:
 429:Core/Src/robot/robot.cpp **** 	zone_select();
 512              		.loc 1 429 0
 513 00e4 FFF7FEFF 		bl	_Z11zone_selectv
 514              	.LVL58:
 430:Core/Src/robot/robot.cpp **** }...
 515              		.loc 1 430 0
 516 00e8 BDEC028B 		vldm	sp!, {d8}
 517              	.LCFI3:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 21


 518              		.cfi_remember_state
 519              		.cfi_restore 80
 520              		.cfi_restore 81
 521              		.cfi_def_cfa_offset 32
 522 00ec BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 523              	.L24:
 524              	.LCFI4:
 525              		.cfi_restore_state
 416:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 526              		.loc 1 416 0
 527 00f0 0D48     		ldr	r0, .L27+32
 528 00f2 FFF7FEFF 		bl	printf
 529              	.LVL59:
 530 00f6 8EE7     		b	.L20
 531              	.L25:
 419:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 532              		.loc 1 419 0
 533 00f8 0C48     		ldr	r0, .L27+36
 534 00fa FFF7FEFF 		bl	printf
 535              	.LVL60:
 536 00fe 91E7     		b	.L21
 537              	.L26:
 422:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 538              		.loc 1 422 0
 539 0100 0B48     		ldr	r0, .L27+40
 540 0102 FFF7FEFF 		bl	printf
 541              	.LVL61:
 542 0106 94E7     		b	.L22
 543              	.L28:
 544              		.align	3
 545              	.L27:
 546 0108 182D4454 		.word	1413754136
 547 010c FB210940 		.word	1074340347
 548 0110 000C0240 		.word	1073875968
 549 0114 00000000 		.word	0
 550 0118 00000000 		.word	leg
 551 011c 00000000 		.word	steering
 552 0120 00003443 		.word	1127481344
 553 0124 18000000 		.word	.LC12
 554 0128 00000000 		.word	.LC9
 555 012c 08000000 		.word	.LC10
 556 0130 10000000 		.word	.LC11
 557              		.cfi_endproc
 558              	.LFE500:
 560              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 561              		.align	1
 562              		.weak	_Z12swap_ElementIfEvRT_S1_
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
 568              	_Z12swap_ElementIfEvRT_S1_:
 569              	.LFB509:
 570              		.file 4 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 22


   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
 571              		.loc 4 16 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              	.LVL62:
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
 577              		.loc 4 18 0
 578 0000 0368     		ldr	r3, [r0]	@ float
 579              	.LVL63:
  19:Core/Inc/utils/vec3.h ****         first = second;
 580              		.loc 4 19 0
 581 0002 0A68     		ldr	r2, [r1]	@ float
 582 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h ****         second = temp;
 583              		.loc 4 20 0
 584 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** }
 585              		.loc 4 21 0
 586 0008 7047     		bx	lr
 587              		.cfi_endproc
 588              	.LFE509:
 590              		.global	__aeabi_d2f
 591              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 592              		.align	1
 593              		.global	_Z11start_RobotP12Robot_States
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu fpv4-sp-d16
 599              	_Z11start_RobotP12Robot_States:
 600              	.LFB497:
  22:Core/Src/robot/robot.cpp **** {
 601              		.loc 1 22 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 16
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL64:
 606 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 607              	.LCFI5:
 608              		.cfi_def_cfa_offset 36
 609              		.cfi_offset 4, -36
 610              		.cfi_offset 5, -32
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 23


 611              		.cfi_offset 6, -28
 612              		.cfi_offset 7, -24
 613              		.cfi_offset 8, -20
 614              		.cfi_offset 9, -16
 615              		.cfi_offset 10, -12
 616              		.cfi_offset 11, -8
 617              		.cfi_offset 14, -4
 618 0004 2DED028B 		vpush.64	{d8}
 619              	.LCFI6:
 620              		.cfi_def_cfa_offset 44
 621              		.cfi_offset 80, -44
 622              		.cfi_offset 81, -40
 623 0008 87B0     		sub	sp, sp, #28
 624              	.LCFI7:
 625              		.cfi_def_cfa_offset 72
 626 000a 0446     		mov	r4, r0
 627              	.LBB112:
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
 628              		.loc 1 23 0
 629 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 630 000e 0A2B     		cmp	r3, #10
 631 0010 00F2AA83 		bhi	.L30
 632 0014 DFE813F0 		tbh	[pc, r3, lsl #1]
 633              	.L33:
 634 0018 0B00     		.2byte	(.L32-.L33)/2
 635 001a 4701     		.2byte	(.L34-.L33)/2
 636 001c A601     		.2byte	(.L35-.L33)/2
 637 001e E501     		.2byte	(.L36-.L33)/2
 638 0020 3502     		.2byte	(.L37-.L33)/2
 639 0022 5F02     		.2byte	(.L38-.L33)/2
 640 0024 8902     		.2byte	(.L39-.L33)/2
 641 0026 C202     		.2byte	(.L40-.L33)/2
 642 0028 1A03     		.2byte	(.L41-.L33)/2
 643 002a 7803     		.2byte	(.L42-.L33)/2
 644 002c AD03     		.2byte	(.L43-.L33)/2
 645              		.p2align 1
 646              	.L32:
 647              	.LBB113:
 648              	.LBB114:
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
 649              		.loc 1 37 0
 650 002e B648     		ldr	r0, .L70+8
 651              	.LVL65:
 652 0030 FFF7FEFF 		bl	printf
 653              	.LVL66:
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
 654              		.loc 1 38 0
 655 0034 4021     		movs	r1, #64
 656 0036 B548     		ldr	r0, .L70+12
 657 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 658              	.LVL67:
 659 003c 0028     		cmp	r0, #0
 660 003e 40F09F80 		bne	.L44
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
 661              		.loc 1 40 0
 662 0042 B34B     		ldr	r3, .L70+16
 663 0044 0122     		movs	r2, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 24


 664 0046 1A70     		strb	r2, [r3]
 665              	.L45:
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 666              		.loc 1 49 0
 667 0048 B24B     		ldr	r3, .L70+20
 668 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 669 004c 23B9     		cbnz	r3, .L46
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 670              		.loc 1 49 0 is_stmt 0 discriminator 1
 671 004e B24A     		ldr	r2, .L70+24
 672 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 673 0052 002A     		cmp	r2, #0
 674 0054 40F09B80 		bne	.L64
 675              	.L46:
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
 676              		.loc 1 55 0 is_stmt 1
 677 0058 002B     		cmp	r3, #0
 678 005a 40F0AE80 		bne	.L65
 679              	.LVL68:
 680              	.L47:
 681              	.LBB115:
 682              	.LBB116:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 683              		.loc 2 47 0
 684 005e AF4E     		ldr	r6, .L70+28
 685 0060 3046     		mov	r0, r6
 686 0062 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 687              	.LVL69:
 688              	.LBE116:
 689              	.LBE115:
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 690              		.loc 1 60 0
 691 0066 9FEDAE8A 		vldr.32	s16, .L70+32
 692 006a 60EE087A 		vmul.f32	s15, s0, s16
 693 006e 17EE900A 		vmov	r0, s15
 694 0072 FFF7FEFF 		bl	__aeabi_f2d
 695              	.LVL70:
 696 0076 A2A3     		adr	r3, .L70
 697 0078 D3E90023 		ldrd	r2, [r3]
 698 007c FFF7FEFF 		bl	__aeabi_ddiv
 699              	.LVL71:
 700 0080 0446     		mov	r4, r0
 701 0082 0D46     		mov	r5, r1
 702              	.LVL72:
 703              	.LBB117:
 704              	.LBB118:
 705              		.loc 2 48 0
 706 0084 06F15800 		add	r0, r6, #88
 707 0088 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 708              	.LVL73:
 709              	.LBE118:
 710              	.LBE117:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 711              		.loc 1 61 0
 712 008c 60EE087A 		vmul.f32	s15, s0, s16
 713 0090 17EE900A 		vmov	r0, s15
 714 0094 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 25


 715              	.LVL74:
 716 0098 99A3     		adr	r3, .L70
 717 009a D3E90023 		ldrd	r2, [r3]
 718 009e FFF7FEFF 		bl	__aeabi_ddiv
 719              	.LVL75:
 720 00a2 0646     		mov	r6, r0
 721 00a4 0F46     		mov	r7, r1
 722              	.LVL76:
 723              	.LBB119:
 724              	.LBB120:
 725              		.loc 3 112 0
 726 00a6 9F48     		ldr	r0, .L70+36
 727 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 728              	.LVL77:
 729              	.LBE120:
 730              	.LBE119:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 731              		.loc 1 61 0
 732 00ac 60EE087A 		vmul.f32	s15, s0, s16
 733 00b0 17EE900A 		vmov	r0, s15
 734 00b4 FFF7FEFF 		bl	__aeabi_f2d
 735              	.LVL78:
 736 00b8 91A3     		adr	r3, .L70
 737 00ba D3E90023 		ldrd	r2, [r3]
 738 00be FFF7FEFF 		bl	__aeabi_ddiv
 739              	.LVL79:
 740 00c2 8046     		mov	r8, r0
 741 00c4 8946     		mov	r9, r1
 742 00c6 984B     		ldr	r3, .L70+40
 743 00c8 D3ED007A 		vldr.32	s15, [r3]
 744 00cc 67EE887A 		vmul.f32	s15, s15, s16
 745 00d0 17EE900A 		vmov	r0, s15
 746 00d4 FFF7FEFF 		bl	__aeabi_f2d
 747              	.LVL80:
 748 00d8 89A3     		adr	r3, .L70
 749 00da D3E90023 		ldrd	r2, [r3]
 750 00de FFF7FEFF 		bl	__aeabi_ddiv
 751              	.LVL81:
 752 00e2 8246     		mov	r10, r0
 753 00e4 8B46     		mov	fp, r1
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 754              		.loc 1 60 0
 755 00e6 4046     		mov	r0, r8
 756 00e8 4946     		mov	r1, r9
 757 00ea FFF7FEFF 		bl	__aeabi_d2iz
 758              	.LVL82:
 759 00ee 8046     		mov	r8, r0
 760 00f0 3046     		mov	r0, r6
 761 00f2 3946     		mov	r1, r7
 762 00f4 FFF7FEFF 		bl	__aeabi_d2iz
 763              	.LVL83:
 764 00f8 0646     		mov	r6, r0
 765 00fa 2046     		mov	r0, r4
 766 00fc 2946     		mov	r1, r5
 767 00fe FFF7FEFF 		bl	__aeabi_d2iz
 768              	.LVL84:
 769 0102 0446     		mov	r4, r0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 26


 770 0104 5046     		mov	r0, r10
 771 0106 5946     		mov	r1, fp
 772 0108 FFF7FEFF 		bl	__aeabi_d2iz
 773              	.LVL85:
 774 010c 0090     		str	r0, [sp]
 775 010e 4346     		mov	r3, r8
 776 0110 3246     		mov	r2, r6
 777 0112 2146     		mov	r1, r4
 778 0114 8548     		ldr	r0, .L70+44
 779 0116 FFF7FEFF 		bl	printf
 780              	.LVL86:
 781              	.LBB121:
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 782              		.loc 1 62 0
 783 011a 1021     		movs	r1, #16
 784 011c 8448     		ldr	r0, .L70+48
 785 011e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 786              	.LVL87:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 787              		.loc 1 64 0
 788 0122 28B1     		cbz	r0, .L48
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 789              		.loc 1 63 0
 790 0124 0421     		movs	r1, #4
 791 0126 7948     		ldr	r0, .L70+12
 792 0128 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 793              	.LVL88:
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 794              		.loc 1 62 0
 795 012c 0028     		cmp	r0, #0
 796 012e 4DD1     		bne	.L66
 797              	.L48:
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 798              		.loc 1 67 0 discriminator 1
 799 0130 0022     		movs	r2, #0
 800 0132 0421     		movs	r1, #4
 801 0134 7F48     		ldr	r0, .L70+52
 802 0136 FFF7FEFF 		bl	HAL_GPIO_WritePin
 803              	.LVL89:
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
 804              		.loc 1 68 0 discriminator 1
 805 013a 764B     		ldr	r3, .L70+20
 806 013c 0122     		movs	r2, #1
 807 013e 1A70     		strb	r2, [r3]
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 808              		.loc 1 69 0 discriminator 1
 809 0140 754B     		ldr	r3, .L70+24
 810 0142 0022     		movs	r2, #0
 811 0144 1A70     		strb	r2, [r3]
 812              	.LVL90:
 813              	.LBB122:
 814              	.LBB123:
 815              	.LBB124:
 816              	.LBB125:
 817              	.LBB126:
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 27


  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 28


  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 818              		.loc 4 129 0 discriminator 1
 819 0146 7C4B     		ldr	r3, .L70+56
 820 0148 1A68     		ldr	r2, [r3]	@ float
 821 014a 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 822              		.loc 4 130 0 discriminator 1
 823 014c 5A68     		ldr	r2, [r3, #4]	@ float
 824 014e 0492     		str	r2, [sp, #16]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 29


 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 825              		.loc 4 131 0 discriminator 1
 826 0150 9B68     		ldr	r3, [r3, #8]	@ float
 827 0152 0593     		str	r3, [sp, #20]	@ float
 828              	.LVL91:
 829              	.LBE126:
 830              	.LBE125:
 831              	.LBE124:
 832              	.LBB127:
 833              	.LBB128:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 834              		.loc 4 175 0 discriminator 1
 835 0154 794C     		ldr	r4, .L70+60
 836 0156 03A9     		add	r1, sp, #12
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 30


 837              	.LVL92:
 838 0158 2046     		mov	r0, r4
 839 015a FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 840              	.LVL93:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 841              		.loc 4 176 0 discriminator 1
 842 015e 04A9     		add	r1, sp, #16
 843 0160 201D     		adds	r0, r4, #4
 844 0162 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 845              	.LVL94:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 846              		.loc 4 177 0 discriminator 1
 847 0166 05A9     		add	r1, sp, #20
 848 0168 04F10800 		add	r0, r4, #8
 849 016c FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 850              	.LVL95:
 851              	.LBE128:
 852              	.LBE127:
 853              	.LBE123:
 854              	.LBE122:
  71:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
 855              		.loc 1 71 0 discriminator 1
 856 0170 FFF7FEFF 		bl	_Z11getup_n_runv
 857              	.LVL96:
 858 0174 0028     		cmp	r0, #0
 859 0176 00F0F782 		beq	.L30
  73:Core/Src/robot/robot.cpp **** 				zone_select();
 860              		.loc 1 73 0
 861 017a FFF7FEFF 		bl	_Z11zone_selectv
 862              	.LVL97:
 863 017e F3E2     		b	.L30
 864              	.LVL98:
 865              	.L44:
 866              	.LBE121:
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
 867              		.loc 1 44 0
 868 0180 634B     		ldr	r3, .L70+16
 869 0182 0022     		movs	r2, #0
 870 0184 1A70     		strb	r2, [r3]
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
 871              		.loc 1 45 0
 872 0186 684B     		ldr	r3, .L70+40
 873 0188 0022     		movs	r2, #0
 874 018a 1A60     		str	r2, [r3]	@ float
 875 018c 5CE7     		b	.L45
 876              	.L64:
 877              	.LVL99:
 878              	.LBB131:
 879              	.LBB132:
 880              	.LBB133:
 881              	.LBB134:
 882              	.LBB135:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 883              		.loc 4 129 0
 884 018e 6A4B     		ldr	r3, .L70+56
 885 0190 1A68     		ldr	r2, [r3]	@ float
 886 0192 0392     		str	r2, [sp, #12]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 31


 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 887              		.loc 4 130 0
 888 0194 5A68     		ldr	r2, [r3, #4]	@ float
 889 0196 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 890              		.loc 4 131 0
 891 0198 9B68     		ldr	r3, [r3, #8]	@ float
 892 019a 0593     		str	r3, [sp, #20]	@ float
 893              	.LVL100:
 894              	.LBE135:
 895              	.LBE134:
 896              	.LBE133:
 897              	.LBB136:
 898              	.LBB137:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 899              		.loc 4 175 0
 900 019c 674C     		ldr	r4, .L70+60
 901              	.LVL101:
 902 019e 03A9     		add	r1, sp, #12
 903              	.LVL102:
 904 01a0 2046     		mov	r0, r4
 905 01a2 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 906              	.LVL103:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 907              		.loc 4 176 0
 908 01a6 04A9     		add	r1, sp, #16
 909 01a8 201D     		adds	r0, r4, #4
 910 01aa FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 911              	.LVL104:
 912              		.loc 4 177 0
 913 01ae 05A9     		add	r1, sp, #20
 914 01b0 04F10800 		add	r0, r4, #8
 915 01b4 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 916              	.LVL105:
 917 01b8 51E7     		b	.L47
 918              	.LVL106:
 919              	.L65:
 920              	.LBE137:
 921              	.LBE136:
 922              	.LBE132:
 923              	.LBE131:
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 924              		.loc 1 57 0
 925 01ba 574B     		ldr	r3, .L70+24
 926 01bc 0022     		movs	r2, #0
 927 01be 1A70     		strb	r2, [r3]
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 928              		.loc 1 58 0
 929 01c0 0122     		movs	r2, #1
 930 01c2 0421     		movs	r1, #4
 931 01c4 5B48     		ldr	r0, .L70+52
 932 01c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 933              	.LVL107:
 934 01ca 48E7     		b	.L47
 935              	.LVL108:
 936              	.L66:
 937              	.LBB138:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 32


  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 938              		.loc 1 64 0
 939 01cc 0221     		movs	r1, #2
 940 01ce 5C48     		ldr	r0, .L70+64
 941 01d0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 942              	.LVL109:
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 943              		.loc 1 63 0
 944 01d4 0028     		cmp	r0, #0
 945 01d6 ABD0     		beq	.L48
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
 946              		.loc 1 65 0 discriminator 2
 947 01d8 0821     		movs	r1, #8
 948 01da 5948     		ldr	r0, .L70+64
 949 01dc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 950              	.LVL110:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 951              		.loc 1 64 0 discriminator 2
 952 01e0 0028     		cmp	r0, #0
 953 01e2 A5D0     		beq	.L48
 954              	.LBB129:
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
 955              		.loc 1 76 0
 956 01e4 4FF40071 		mov	r1, #512
 957 01e8 5548     		ldr	r0, .L70+64
 958 01ea FFF7FEFF 		bl	HAL_GPIO_ReadPin
 959              	.LVL111:
 960 01ee 0028     		cmp	r0, #0
 961 01f0 45D1     		bne	.L67
 962              	.LBB130:
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 963              		.loc 1 79 0
 964 01f2 534C     		ldr	r4, .L70+64
 965 01f4 0022     		movs	r2, #0
 966 01f6 4FF48051 		mov	r1, #4096
 967 01fa 2046     		mov	r0, r4
 968 01fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 969              	.LVL112:
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 970              		.loc 1 80 0
 971 0200 0022     		movs	r2, #0
 972 0202 4FF40051 		mov	r1, #8192
 973 0206 2046     		mov	r0, r4
 974 0208 FFF7FEFF 		bl	HAL_GPIO_WritePin
 975              	.LVL113:
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 976              		.loc 1 81 0
 977 020c 0022     		movs	r2, #0
 978 020e 4FF48041 		mov	r1, #16384
 979 0212 2046     		mov	r0, r4
 980 0214 FFF7FEFF 		bl	HAL_GPIO_WritePin
 981              	.LVL114:
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 982              		.loc 1 82 0
 983 0218 0022     		movs	r2, #0
 984 021a 4FF40041 		mov	r1, #32768
 985 021e 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 33


 986 0220 FFF7FEFF 		bl	HAL_GPIO_WritePin
 987              	.LVL115:
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 988              		.loc 1 83 0
 989 0224 0022     		movs	r2, #0
 990 0226 0421     		movs	r1, #4
 991 0228 4248     		ldr	r0, .L70+52
 992 022a FFF7FEFF 		bl	HAL_GPIO_WritePin
 993              	.LVL116:
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 994              		.loc 1 84 0
 995 022e 394B     		ldr	r3, .L70+20
 996 0230 0022     		movs	r2, #0
 997 0232 1A70     		strb	r2, [r3]
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 998              		.loc 1 86 0
 999 0234 434B     		ldr	r3, .L70+68
 1000 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1001 0238 BFF35B8F 		dmb	ish
 1002 023c 13F0010F 		tst	r3, #1
 1003 0240 10D0     		beq	.L68
 1004              	.L53:
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 1005              		.loc 1 87 0
 1006 0242 FFF7FEFF 		bl	HAL_GetTick
 1007              	.LVL117:
 1008 0246 404B     		ldr	r3, .L70+72
 1009 0248 1B68     		ldr	r3, [r3]
 1010 024a C31A     		subs	r3, r0, r3
 1011 024c B3F5FA7F 		cmp	r3, #500
 1012 0250 C0F08A82 		bcc	.L30
  89:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
 1013              		.loc 1 89 0
 1014 0254 FFF7FEFF 		bl	_Z11getup_n_runv
 1015              	.LVL118:
 1016 0258 0028     		cmp	r0, #0
 1017 025a 00F08582 		beq	.L30
  91:Core/Src/robot/robot.cpp **** 					zone_select();
 1018              		.loc 1 91 0
 1019 025e FFF7FEFF 		bl	_Z11zone_selectv
 1020              	.LVL119:
 1021 0262 81E2     		b	.L30
 1022              	.L68:
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1023              		.loc 1 86 0 discriminator 1
 1024 0264 3748     		ldr	r0, .L70+68
 1025 0266 FFF7FEFF 		bl	__cxa_guard_acquire
 1026              	.LVL120:
 1027 026a 0028     		cmp	r0, #0
 1028 026c E9D0     		beq	.L53
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1029              		.loc 1 86 0 is_stmt 0 discriminator 2
 1030 026e FFF7FEFF 		bl	HAL_GetTick
 1031              	.LVL121:
 1032 0272 354B     		ldr	r3, .L70+72
 1033 0274 1860     		str	r0, [r3]
 1034 0276 3348     		ldr	r0, .L70+68
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 34


 1035 0278 FFF7FEFF 		bl	__cxa_guard_release
 1036              	.LVL122:
 1037 027c E1E7     		b	.L53
 1038              	.L67:
 1039              	.LBE130:
  98:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1040              		.loc 1 98 0 is_stmt 1
 1041 027e 9FED338A 		vldr.32	s16, .L70+76
 1042 0282 334C     		ldr	r4, .L70+80
 1043 0284 B0EE480A 		vmov.f32	s0, s16
 1044 0288 2046     		mov	r0, r4
 1045 028a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1046              	.LVL123:
  99:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1047              		.loc 1 99 0
 1048 028e B0EE480A 		vmov.f32	s0, s16
 1049 0292 04F15800 		add	r0, r4, #88
 1050 0296 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1051              	.LVL124:
 100:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 1052              		.loc 1 100 0
 1053 029a B0EE480A 		vmov.f32	s0, s16
 1054 029e 2D48     		ldr	r0, .L70+84
 1055 02a0 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1056              	.LVL125:
 1057 02a4 60E2     		b	.L30
 1058              	.LVL126:
 1059              	.L34:
 1060              	.LBE129:
 1061              	.LBE138:
 1062              	.LBE114:
 112:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 1063              		.loc 1 112 0
 1064 02a6 2C48     		ldr	r0, .L70+88
 1065              	.LVL127:
 1066 02a8 FFF7FEFF 		bl	printf
 1067              	.LVL128:
 113:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 1068              		.loc 1 113 0
 1069 02ac 2B4B     		ldr	r3, .L70+92
 1070 02ae D3ED007A 		vldr.32	s15, [r3]
 1071 02b2 2B4B     		ldr	r3, .L70+96
 1072 02b4 93ED000A 		vldr.32	s0, [r3]
 1073 02b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1074 02bc 17EE900A 		vmov	r0, s15	@ int
 1075 02c0 FFF7FEFF 		bl	_Z2goif
 1076              	.LVL129:
 1077 02c4 0028     		cmp	r0, #0
 1078 02c6 00F04F82 		beq	.L30
 115:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 1079              		.loc 1 115 0
 1080 02ca 0223     		movs	r3, #2
 1081 02cc 2370     		strb	r3, [r4]
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1082              		.loc 1 116 0
 1083 02ce 1C4C     		ldr	r4, .L70+64
 1084              	.LVL130:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 35


 1085 02d0 4FF48051 		mov	r1, #4096
 1086 02d4 2046     		mov	r0, r4
 1087 02d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1088              	.LVL131:
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1089              		.loc 1 117 0
 1090 02da 4FF40051 		mov	r1, #8192
 1091 02de 2046     		mov	r0, r4
 1092 02e0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1093              	.LVL132:
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1094              		.loc 1 118 0
 1095 02e4 4FF48041 		mov	r1, #16384
 1096 02e8 2046     		mov	r0, r4
 1097 02ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1098              	.LVL133:
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1099              		.loc 1 119 0
 1100 02ee 4FF40041 		mov	r1, #32768
 1101 02f2 2046     		mov	r0, r4
 1102 02f4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1103              	.LVL134:
 1104 02f8 36E2     		b	.L30
 1105              	.L71:
 1106 02fa 00BFAFF3 		.align	3
 1106      0080
 1107              	.L70:
 1108 0300 182D4454 		.word	1413754136
 1109 0304 FB210940 		.word	1074340347
 1110 0308 00000000 		.word	.LC13
 1111 030c 00100240 		.word	1073876992
 1112 0310 00000000 		.word	.LANCHOR4
 1113 0314 00000000 		.word	.LANCHOR1
 1114 0318 00000000 		.word	.LANCHOR5
 1115 031c 3C000000 		.word	leg+60
 1116 0320 00003443 		.word	1127481344
 1117 0324 0C000000 		.word	steering+12
 1118 0328 00000000 		.word	robot_angle
 1119 032c 08000000 		.word	.LC14
 1120 0330 00040240 		.word	1073873920
 1121 0334 00080240 		.word	1073874944
 1122 0338 00000000 		.word	curr_angle
 1123 033c 00000000 		.word	initial_angle
 1124 0340 000C0240 		.word	1073875968
 1125 0344 00000000 		.word	.LANCHOR6
 1126 0348 00000000 		.word	.LANCHOR7
 1127 034c 00000000 		.word	0
 1128 0350 00000000 		.word	leg
 1129 0354 00000000 		.word	steering
 1130 0358 50000000 		.word	.LC15
 1131 035c 00000000 		.word	.LANCHOR2
 1132 0360 00000000 		.word	.LANCHOR3
 1133              	.LVL135:
 1134              	.L35:
 133:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 1135              		.loc 1 133 0
 1136 0364 C848     		ldr	r0, .L72+8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 36


 1137              	.LVL136:
 1138 0366 FFF7FEFF 		bl	printf
 1139              	.LVL137:
 135:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 1140              		.loc 1 135 0
 1141 036a C84B     		ldr	r3, .L72+12
 1142 036c 93ED010A 		vldr.32	s0, [r3, #4]
 1143 0370 6320     		movs	r0, #99
 1144 0372 FFF7FEFF 		bl	_Z2goif
 1145              	.LVL138:
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1146              		.loc 1 136 0
 1147 0376 4FF40061 		mov	r1, #2048
 1148 037a C548     		ldr	r0, .L72+16
 1149 037c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1150              	.LVL139:
 1151 0380 68B1     		cbz	r0, .L54
 1152              	.LVL140:
 1153              	.LBB139:
 1154              	.LBB140:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1155              		.loc 2 45 0
 1156 0382 C44B     		ldr	r3, .L72+20
 1157 0384 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1158              	.LVL141:
 1159              	.LBE140:
 1160              	.LBE139:
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1161              		.loc 1 136 0
 1162 0388 F8EEE77A 		vcvt.f32.s32	s15, s15
 1163 038c C24B     		ldr	r3, .L72+24
 1164 038e 93ED017A 		vldr.32	s14, [r3, #4]
 1165 0392 F4EEC77A 		vcmpe.f32	s15, s14
 1166 0396 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1167 039a 40F3E581 		ble	.L30
 1168              	.L54:
 139:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 1169              		.loc 1 139 0 discriminator 3
 1170 039e 0323     		movs	r3, #3
 1171 03a0 2370     		strb	r3, [r4]
 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 1172              		.loc 1 140 0 discriminator 3
 1173 03a2 BD4B     		ldr	r3, .L72+24
 1174 03a4 D3ED017A 		vldr.32	s15, [r3, #4]
 1175 03a8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1176 03ac B94A     		ldr	r2, .L72+20
 1177 03ae C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 1178              		.loc 1 141 0 discriminator 3
 1179 03b2 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1180              		.loc 1 143 0 discriminator 3
 1181 03b6 B64C     		ldr	r4, .L72+16
 1182              	.LVL142:
 1183 03b8 4FF48051 		mov	r1, #4096
 1184 03bc 2046     		mov	r0, r4
 1185 03be FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 37


 1186              	.LVL143:
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1187              		.loc 1 144 0 discriminator 3
 1188 03c2 4FF40051 		mov	r1, #8192
 1189 03c6 2046     		mov	r0, r4
 1190 03c8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1191              	.LVL144:
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1192              		.loc 1 145 0 discriminator 3
 1193 03cc 4FF48041 		mov	r1, #16384
 1194 03d0 2046     		mov	r0, r4
 1195 03d2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1196              	.LVL145:
 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1197              		.loc 1 146 0 discriminator 3
 1198 03d6 4FF40041 		mov	r1, #32768
 1199 03da 2046     		mov	r0, r4
 1200 03dc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1201              	.LVL146:
 1202 03e0 C2E1     		b	.L30
 1203              	.LVL147:
 1204              	.L36:
 157:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 1205              		.loc 1 157 0
 1206 03e2 AE48     		ldr	r0, .L72+28
 1207              	.LVL148:
 1208 03e4 FFF7FEFF 		bl	printf
 1209              	.LVL149:
 159:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 1210              		.loc 1 159 0
 1211 03e8 A84B     		ldr	r3, .L72+12
 1212 03ea 93ED020A 		vldr.32	s0, [r3, #8]
 1213 03ee 6420     		movs	r0, #100
 1214 03f0 FFF7FEFF 		bl	_Z2goif
 1215              	.LVL150:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1216              		.loc 1 160 0
 1217 03f4 4FF48071 		mov	r1, #256
 1218 03f8 A548     		ldr	r0, .L72+16
 1219 03fa FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1220              	.LVL151:
 1221 03fe 80B9     		cbnz	r0, .L56
 1222              	.LVL152:
 1223              	.LBB141:
 1224              	.LBB142:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1225              		.loc 2 45 0
 1226 0400 A44B     		ldr	r3, .L72+20
 1227 0402 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 1228              	.LVL153:
 1229              	.LBE142:
 1230              	.LBE141:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1231              		.loc 1 160 0
 1232 0406 B8EEC77A 		vcvt.f32.s32	s14, s14
 1233 040a A34B     		ldr	r3, .L72+24
 1234 040c D3ED027A 		vldr.32	s15, [r3, #8]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 38


 1235 0410 F0EE006A 		vmov.f32	s13, #2.0e+0
 1236 0414 77EEE67A 		vsub.f32	s15, s15, s13
 1237 0418 B4EEE77A 		vcmpe.f32	s14, s15
 1238 041c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1239 0420 0DDC     		bgt	.L57
 1240              	.L56:
 1241              	.LVL154:
 1242              	.LBB143:
 1243              	.LBB144:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1244              		.loc 2 45 0 discriminator 4
 1245 0422 9C4B     		ldr	r3, .L72+20
 1246 0424 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1247              	.LVL155:
 1248              	.LBE144:
 1249              	.LBE143:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1250              		.loc 1 160 0 discriminator 4
 1251 0428 F8EEE77A 		vcvt.f32.s32	s15, s15
 1252 042c 9A4B     		ldr	r3, .L72+24
 1253 042e 93ED027A 		vldr.32	s14, [r3, #8]
 1254 0432 F4EEC77A 		vcmpe.f32	s15, s14
 1255 0436 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1256 043a C0F29581 		blt	.L30
 1257              	.L57:
 163:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 1258              		.loc 1 163 0 discriminator 5
 1259 043e 0423     		movs	r3, #4
 1260 0440 2370     		strb	r3, [r4]
 164:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 1261              		.loc 1 164 0 discriminator 5
 1262 0442 954B     		ldr	r3, .L72+24
 1263 0444 D3ED027A 		vldr.32	s15, [r3, #8]
 1264 0448 FDEEE77A 		vcvt.s32.f32	s15, s15
 1265 044c 914A     		ldr	r2, .L72+20
 1266 044e C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 165:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 1267              		.loc 1 165 0 discriminator 5
 1268 0452 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1269              		.loc 1 167 0 discriminator 5
 1270 0456 8E4C     		ldr	r4, .L72+16
 1271              	.LVL156:
 1272 0458 4FF48051 		mov	r1, #4096
 1273 045c 2046     		mov	r0, r4
 1274 045e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1275              	.LVL157:
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1276              		.loc 1 168 0 discriminator 5
 1277 0462 4FF40051 		mov	r1, #8192
 1278 0466 2046     		mov	r0, r4
 1279 0468 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1280              	.LVL158:
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1281              		.loc 1 169 0 discriminator 5
 1282 046c 4FF48041 		mov	r1, #16384
 1283 0470 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 39


 1284 0472 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1285              	.LVL159:
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1286              		.loc 1 170 0 discriminator 5
 1287 0476 4FF40041 		mov	r1, #32768
 1288 047a 2046     		mov	r0, r4
 1289 047c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1290              	.LVL160:
 1291 0480 72E1     		b	.L30
 1292              	.LVL161:
 1293              	.L37:
 181:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 1294              		.loc 1 181 0
 1295 0482 8748     		ldr	r0, .L72+32
 1296              	.LVL162:
 1297 0484 FFF7FEFF 		bl	printf
 1298              	.LVL163:
 182:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 1299              		.loc 1 182 0
 1300 0488 834B     		ldr	r3, .L72+24
 1301 048a D3ED037A 		vldr.32	s15, [r3, #12]
 1302 048e 7F4B     		ldr	r3, .L72+12
 1303 0490 93ED030A 		vldr.32	s0, [r3, #12]
 1304 0494 FDEEE77A 		vcvt.s32.f32	s15, s15
 1305 0498 17EE900A 		vmov	r0, s15	@ int
 1306 049c FFF7FEFF 		bl	_Z2goif
 1307              	.LVL164:
 1308 04a0 0028     		cmp	r0, #0
 1309 04a2 00F06181 		beq	.L30
 184:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 1310              		.loc 1 184 0
 1311 04a6 0523     		movs	r3, #5
 1312 04a8 2370     		strb	r3, [r4]
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1313              		.loc 1 186 0
 1314 04aa 794C     		ldr	r4, .L72+16
 1315              	.LVL165:
 1316 04ac 4FF48051 		mov	r1, #4096
 1317 04b0 2046     		mov	r0, r4
 1318 04b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1319              	.LVL166:
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1320              		.loc 1 187 0
 1321 04b6 4FF40051 		mov	r1, #8192
 1322 04ba 2046     		mov	r0, r4
 1323 04bc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1324              	.LVL167:
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1325              		.loc 1 188 0
 1326 04c0 4FF48041 		mov	r1, #16384
 1327 04c4 2046     		mov	r0, r4
 1328 04c6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1329              	.LVL168:
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1330              		.loc 1 189 0
 1331 04ca 4FF40041 		mov	r1, #32768
 1332 04ce 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 40


 1333 04d0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1334              	.LVL169:
 1335 04d4 48E1     		b	.L30
 1336              	.LVL170:
 1337              	.L38:
 200:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 1338              		.loc 1 200 0
 1339 04d6 7348     		ldr	r0, .L72+36
 1340              	.LVL171:
 1341 04d8 FFF7FEFF 		bl	printf
 1342              	.LVL172:
 201:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 1343              		.loc 1 201 0
 1344 04dc 6E4B     		ldr	r3, .L72+24
 1345 04de D3ED047A 		vldr.32	s15, [r3, #16]
 1346 04e2 6A4B     		ldr	r3, .L72+12
 1347 04e4 93ED040A 		vldr.32	s0, [r3, #16]
 1348 04e8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1349 04ec 17EE900A 		vmov	r0, s15	@ int
 1350 04f0 FFF7FEFF 		bl	_Z2goif
 1351              	.LVL173:
 1352 04f4 0028     		cmp	r0, #0
 1353 04f6 00F03781 		beq	.L30
 203:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 1354              		.loc 1 203 0
 1355 04fa 0623     		movs	r3, #6
 1356 04fc 2370     		strb	r3, [r4]
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1357              		.loc 1 205 0
 1358 04fe 644C     		ldr	r4, .L72+16
 1359              	.LVL174:
 1360 0500 4FF48051 		mov	r1, #4096
 1361 0504 2046     		mov	r0, r4
 1362 0506 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1363              	.LVL175:
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1364              		.loc 1 206 0
 1365 050a 4FF40051 		mov	r1, #8192
 1366 050e 2046     		mov	r0, r4
 1367 0510 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1368              	.LVL176:
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1369              		.loc 1 207 0
 1370 0514 4FF48041 		mov	r1, #16384
 1371 0518 2046     		mov	r0, r4
 1372 051a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1373              	.LVL177:
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1374              		.loc 1 208 0
 1375 051e 4FF40041 		mov	r1, #32768
 1376 0522 2046     		mov	r0, r4
 1377 0524 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1378              	.LVL178:
 1379 0528 1EE1     		b	.L30
 1380              	.LVL179:
 1381              	.L39:
 1382              	.LBB145:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 41


 220:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 1383              		.loc 1 220 0
 1384 052a 5F48     		ldr	r0, .L72+40
 1385              	.LVL180:
 1386 052c FFF7FEFF 		bl	printf
 1387              	.LVL181:
 221:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 1388              		.loc 1 221 0
 1389 0530 5E4B     		ldr	r3, .L72+44
 1390 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1391 0534 93B9     		cbnz	r3, .L59
 223:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 1392              		.loc 1 223 0
 1393 0536 584B     		ldr	r3, .L72+24
 1394 0538 D3ED057A 		vldr.32	s15, [r3, #20]
 1395 053c 534B     		ldr	r3, .L72+12
 1396 053e 93ED050A 		vldr.32	s0, [r3, #20]
 1397 0542 FDEEE77A 		vcvt.s32.f32	s15, s15
 1398 0546 17EE900A 		vmov	r0, s15	@ int
 1399 054a FFF7FEFF 		bl	_Z2goif
 1400              	.LVL182:
 1401 054e 0028     		cmp	r0, #0
 1402 0550 00F00A81 		beq	.L30
 225:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 1403              		.loc 1 225 0
 1404 0554 554B     		ldr	r3, .L72+44
 1405 0556 0122     		movs	r2, #1
 1406 0558 1A70     		strb	r2, [r3]
 1407 055a 05E1     		b	.L30
 1408              	.L59:
 230:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1409              		.loc 1 230 0
 1410 055c FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1411              	.LVL183:
 1412 0560 0028     		cmp	r0, #0
 1413 0562 00F00181 		beq	.L30
 232:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1414              		.loc 1 232 0
 1415 0566 0723     		movs	r3, #7
 1416 0568 2370     		strb	r3, [r4]
 233:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 1417              		.loc 1 233 0
 1418 056a 514B     		ldr	r3, .L72+48
 1419 056c 0022     		movs	r2, #0
 1420 056e 1A70     		strb	r2, [r3]
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1421              		.loc 1 234 0
 1422 0570 474C     		ldr	r4, .L72+16
 1423              	.LVL184:
 1424 0572 4FF48051 		mov	r1, #4096
 1425 0576 2046     		mov	r0, r4
 1426 0578 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1427              	.LVL185:
 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1428              		.loc 1 235 0
 1429 057c 4FF40051 		mov	r1, #8192
 1430 0580 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 42


 1431 0582 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1432              	.LVL186:
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1433              		.loc 1 236 0
 1434 0586 4FF48041 		mov	r1, #16384
 1435 058a 2046     		mov	r0, r4
 1436 058c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1437              	.LVL187:
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1438              		.loc 1 237 0
 1439 0590 4FF40041 		mov	r1, #32768
 1440 0594 2046     		mov	r0, r4
 1441 0596 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1442              	.LVL188:
 1443 059a E5E0     		b	.L30
 1444              	.LVL189:
 1445              	.L40:
 1446              	.LBE145:
 248:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1447              		.loc 1 248 0
 1448 059c 4548     		ldr	r0, .L72+52
 1449              	.LVL190:
 1450 059e FFF7FEFF 		bl	printf
 1451              	.LVL191:
 249:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1452              		.loc 1 249 0
 1453 05a2 9FED458A 		vldr.32	s16, .L72+56
 1454 05a6 3B4D     		ldr	r5, .L72+20
 1455 05a8 B0EE480A 		vmov.f32	s0, s16
 1456 05ac 2846     		mov	r0, r5
 1457 05ae FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1458              	.LVL192:
 250:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1459              		.loc 1 250 0
 1460 05b2 B0EE480A 		vmov.f32	s0, s16
 1461 05b6 05F15800 		add	r0, r5, #88
 1462 05ba FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1463              	.LVL193:
 251:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1464              		.loc 1 251 0
 1465 05be B0EE480A 		vmov.f32	s0, s16
 1466 05c2 3E48     		ldr	r0, .L72+60
 1467 05c4 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1468              	.LVL194:
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1469              		.loc 1 252 0
 1470 05c8 4FF48071 		mov	r1, #256
 1471 05cc 3048     		ldr	r0, .L72+16
 1472 05ce FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1473              	.LVL195:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1474              		.loc 1 253 0
 1475 05d2 98BB     		cbnz	r0, .L69
 1476              	.L60:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1477              		.loc 1 253 0 is_stmt 0 discriminator 1
 1478 05d4 364B     		ldr	r3, .L72+48
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 43


 1479 05d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1480 05d8 002B     		cmp	r3, #0
 1481 05da 00F0C580 		beq	.L30
 256:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1482              		.loc 1 256 0 is_stmt 1
 1483 05de 0823     		movs	r3, #8
 1484 05e0 2370     		strb	r3, [r4]
 257:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1485              		.loc 1 257 0
 1486 05e2 374B     		ldr	r3, .L72+64
 1487 05e4 93ED007A 		vldr.32	s14, [r3]
 1488 05e8 DFED367A 		vldr.32	s15, .L72+68
 1489 05ec 67EE277A 		vmul.f32	s15, s14, s15
 1490 05f0 17EE900A 		vmov	r0, s15
 1491 05f4 FFF7FEFF 		bl	__aeabi_f2d
 1492              	.LVL196:
 1493 05f8 21A3     		adr	r3, .L72
 1494 05fa D3E90023 		ldrd	r2, [r3]
 1495 05fe FFF7FEFF 		bl	__aeabi_ddiv
 1496              	.LVL197:
 1497 0602 FFF7FEFF 		bl	__aeabi_d2f
 1498              	.LVL198:
 1499 0606 214B     		ldr	r3, .L72+12
 1500 0608 9861     		str	r0, [r3, #24]	@ float
 258:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1501              		.loc 1 258 0
 1502 060a 294B     		ldr	r3, .L72+48
 1503 060c 0022     		movs	r2, #0
 1504 060e 1A70     		strb	r2, [r3]
 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1505              		.loc 1 260 0
 1506 0610 1F4C     		ldr	r4, .L72+16
 1507              	.LVL199:
 1508 0612 4FF48051 		mov	r1, #4096
 1509 0616 2046     		mov	r0, r4
 1510 0618 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1511              	.LVL200:
 261:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1512              		.loc 1 261 0
 1513 061c 4FF40051 		mov	r1, #8192
 1514 0620 2046     		mov	r0, r4
 1515 0622 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1516              	.LVL201:
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1517              		.loc 1 262 0
 1518 0626 4FF48041 		mov	r1, #16384
 1519 062a 2046     		mov	r0, r4
 1520 062c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1521              	.LVL202:
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1522              		.loc 1 263 0
 1523 0630 4FF40041 		mov	r1, #32768
 1524 0634 2046     		mov	r0, r4
 1525 0636 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1526              	.LVL203:
 1527 063a 95E0     		b	.L30
 1528              	.LVL204:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 44


 1529              	.L69:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1530              		.loc 1 253 0 discriminator 2
 1531 063c 4FF48061 		mov	r1, #1024
 1532 0640 1348     		ldr	r0, .L72+16
 1533 0642 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1534              	.LVL205:
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1535              		.loc 1 252 0 discriminator 2
 1536 0646 0028     		cmp	r0, #0
 1537 0648 C4D0     		beq	.L60
 1538 064a 8DE0     		b	.L30
 1539              	.LVL206:
 1540              	.L41:
 1541              	.LBB146:
 274:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 1542              		.loc 1 274 0
 1543 064c 1E48     		ldr	r0, .L72+72
 1544              	.LVL207:
 1545 064e FFF7FEFF 		bl	printf
 1546              	.LVL208:
 275:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 1547              		.loc 1 275 0
 1548 0652 1E4B     		ldr	r3, .L72+76
 1549 0654 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1550 0656 002B     		cmp	r3, #0
 1551 0658 3AD1     		bne	.L61
 277:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 1552              		.loc 1 277 0
 1553 065a 0F4B     		ldr	r3, .L72+24
 1554 065c D3ED067A 		vldr.32	s15, [r3, #24]
 1555 0660 0A4B     		ldr	r3, .L72+12
 1556 0662 93ED060A 		vldr.32	s0, [r3, #24]
 1557 0666 FDEEE77A 		vcvt.s32.f32	s15, s15
 1558 066a 17EE900A 		vmov	r0, s15	@ int
 1559 066e FFF7FEFF 		bl	_Z2goif
 1560              	.LVL209:
 1561 0672 0028     		cmp	r0, #0
 1562 0674 78D0     		beq	.L30
 279:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1563              		.loc 1 279 0
 1564 0676 154B     		ldr	r3, .L72+76
 1565 0678 0122     		movs	r2, #1
 1566 067a 1A70     		strb	r2, [r3]
 1567 067c 74E0     		b	.L30
 1568              	.L73:
 1569 067e 00BF     		.align	3
 1570              	.L72:
 1571 0680 182D4454 		.word	1413754136
 1572 0684 FB210940 		.word	1074340347
 1573 0688 58000000 		.word	.LC16
 1574 068c 00000000 		.word	.LANCHOR3
 1575 0690 000C0240 		.word	1073875968
 1576 0694 00000000 		.word	leg
 1577 0698 00000000 		.word	.LANCHOR2
 1578 069c 64000000 		.word	.LC17
 1579 06a0 70000000 		.word	.LC18
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 45


 1580 06a4 7C000000 		.word	.LC19
 1581 06a8 88000000 		.word	.LC20
 1582 06ac 00000000 		.word	.LANCHOR8
 1583 06b0 00000000 		.word	.LANCHOR1
 1584 06b4 94000000 		.word	.LC21
 1585 06b8 00000000 		.word	0
 1586 06bc 00000000 		.word	steering
 1587 06c0 00000000 		.word	robot_angle
 1588 06c4 00003443 		.word	1127481344
 1589 06c8 A0000000 		.word	.LC22
 1590 06cc 00000000 		.word	.LANCHOR9
 1591              	.L61:
 284:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1592              		.loc 1 284 0
 1593 06d0 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1594              	.LVL210:
 1595 06d4 0028     		cmp	r0, #0
 1596 06d6 47D0     		beq	.L30
 286:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1597              		.loc 1 286 0
 1598 06d8 0923     		movs	r3, #9
 1599 06da 2370     		strb	r3, [r4]
 287:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1600              		.loc 1 287 0
 1601 06dc 2E4C     		ldr	r4, .L74
 1602              	.LVL211:
 1603 06de 4FF48051 		mov	r1, #4096
 1604 06e2 2046     		mov	r0, r4
 1605 06e4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1606              	.LVL212:
 288:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1607              		.loc 1 288 0
 1608 06e8 4FF40051 		mov	r1, #8192
 1609 06ec 2046     		mov	r0, r4
 1610 06ee FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1611              	.LVL213:
 289:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1612              		.loc 1 289 0
 1613 06f2 4FF48041 		mov	r1, #16384
 1614 06f6 2046     		mov	r0, r4
 1615 06f8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1616              	.LVL214:
 290:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1617              		.loc 1 290 0
 1618 06fc 4FF40041 		mov	r1, #32768
 1619 0700 2046     		mov	r0, r4
 1620 0702 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1621              	.LVL215:
 1622 0706 2FE0     		b	.L30
 1623              	.LVL216:
 1624              	.L42:
 1625              	.LBE146:
 301:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1626              		.loc 1 301 0
 1627 0708 2448     		ldr	r0, .L74+4
 1628              	.LVL217:
 1629 070a FFF7FEFF 		bl	puts
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 46


 1630              	.LVL218:
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1631              		.loc 1 302 0
 1632 070e 9FED248A 		vldr.32	s16, .L74+8
 1633 0712 244C     		ldr	r4, .L74+12
 1634              	.LVL219:
 1635 0714 B0EE480A 		vmov.f32	s0, s16
 1636 0718 2046     		mov	r0, r4
 1637 071a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1638              	.LVL220:
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1639              		.loc 1 303 0
 1640 071e B0EE480A 		vmov.f32	s0, s16
 1641 0722 04F15800 		add	r0, r4, #88
 1642 0726 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1643              	.LVL221:
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1644              		.loc 1 304 0
 1645 072a B0EE480A 		vmov.f32	s0, s16
 1646 072e 1E48     		ldr	r0, .L74+16
 1647 0730 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1648              	.LVL222:
 306:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1649              		.loc 1 306 0
 1650 0734 184C     		ldr	r4, .L74
 1651 0736 4FF48051 		mov	r1, #4096
 1652 073a 2046     		mov	r0, r4
 1653 073c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1654              	.LVL223:
 307:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1655              		.loc 1 307 0
 1656 0740 4FF40051 		mov	r1, #8192
 1657 0744 2046     		mov	r0, r4
 1658 0746 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1659              	.LVL224:
 308:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1660              		.loc 1 308 0
 1661 074a 4FF48041 		mov	r1, #16384
 1662 074e 2046     		mov	r0, r4
 1663 0750 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1664              	.LVL225:
 309:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1665              		.loc 1 309 0
 1666 0754 4FF40041 		mov	r1, #32768
 1667 0758 2046     		mov	r0, r4
 1668 075a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1669              	.LVL226:
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1670              		.loc 1 310 0
 1671 075e 0122     		movs	r2, #1
 1672 0760 0421     		movs	r1, #4
 1673 0762 1248     		ldr	r0, .L74+20
 1674 0764 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1675              	.LVL227:
 1676              	.L30:
 1677              	.LBE113:
 1678              	.LBE112:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 47


 320:Core/Src/robot/robot.cpp **** }
 1679              		.loc 1 320 0
 1680 0768 07B0     		add	sp, sp, #28
 1681              	.LCFI8:
 1682              		.cfi_remember_state
 1683              		.cfi_def_cfa_offset 44
 1684              		@ sp needed
 1685 076a BDEC028B 		vldm	sp!, {d8}
 1686              	.LCFI9:
 1687              		.cfi_restore 80
 1688              		.cfi_restore 81
 1689              		.cfi_def_cfa_offset 36
 1690 076e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1691              	.LVL228:
 1692              	.L43:
 1693              	.LCFI10:
 1694              		.cfi_restore_state
 1695              	.LBB148:
 1696              	.LBB147:
 315:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1697              		.loc 1 315 0
 1698 0772 0C4C     		ldr	r4, .L74+12
 1699 0774 B2EE040A 		vmov.f32	s0, #1.0e+1
 1700 0778 2046     		mov	r0, r4
 1701              	.LVL229:
 1702 077a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1703              	.LVL230:
 316:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1704              		.loc 1 316 0
 1705 077e B2EE040A 		vmov.f32	s0, #1.0e+1
 1706 0782 04F15800 		add	r0, r4, #88
 1707 0786 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1708              	.LVL231:
 317:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1709              		.loc 1 317 0
 1710 078a 9FED050A 		vldr.32	s0, .L74+8
 1711 078e 0648     		ldr	r0, .L74+16
 1712 0790 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1713              	.LVL232:
 1714              	.LBE147:
 1715              	.LBE148:
 320:Core/Src/robot/robot.cpp **** }
 1716              		.loc 1 320 0
 1717 0794 E8E7     		b	.L30
 1718              	.L75:
 1719 0796 00BF     		.align	2
 1720              	.L74:
 1721 0798 000C0240 		.word	1073875968
 1722 079c AC000000 		.word	.LC23
 1723 07a0 00000000 		.word	0
 1724 07a4 00000000 		.word	leg
 1725 07a8 00000000 		.word	steering
 1726 07ac 00000240 		.word	1073872896
 1727              		.cfi_endproc
 1728              	.LFE497:
 1730              		.section	.text._Z4playv,"ax",%progbits
 1731              		.align	1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 48


 1732              		.global	_Z4playv
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1736              		.fpu fpv4-sp-d16
 1738              	_Z4playv:
 1739              	.LFB498:
 323:Core/Src/robot/robot.cpp **** {
 1740              		.loc 1 323 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744 0000 10B5     		push	{r4, lr}
 1745              	.LCFI11:
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 4, -8
 1748              		.cfi_offset 14, -4
 324:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1749              		.loc 1 324 0
 1750 0002 0948     		ldr	r0, .L78
 1751 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1752              	.LVL233:
 1753              	.LBB149:
 1754              	.LBB150:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1755              		.loc 2 46 0
 1756 0008 084C     		ldr	r4, .L78+4
 1757 000a 2046     		mov	r0, r4
 1758 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1759              	.LVL234:
 1760              	.LBE150:
 1761              	.LBE149:
 325:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1762              		.loc 1 325 0
 1763 0010 074B     		ldr	r3, .L78+8
 1764 0012 83ED000A 		vstr.32	s0, [r3]
 1765              	.LVL235:
 1766              	.LBB151:
 1767              	.LBB152:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1768              		.loc 2 46 0
 1769 0016 04F15800 		add	r0, r4, #88
 1770 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1771              	.LVL236:
 1772              	.LBE152:
 1773              	.LBE151:
 326:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1774              		.loc 1 326 0
 1775 001e 054B     		ldr	r3, .L78+12
 1776 0020 83ED000A 		vstr.32	s0, [r3]
 328:Core/Src/robot/robot.cpp **** }
 1777              		.loc 1 328 0
 1778 0024 0120     		movs	r0, #1
 1779 0026 10BD     		pop	{r4, pc}
 1780              	.L79:
 1781              		.align	2
 1782              	.L78:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 49


 1783 0028 00000000 		.word	.LANCHOR0
 1784 002c 3C000000 		.word	leg+60
 1785 0030 00000000 		.word	.LANCHOR10
 1786 0034 00000000 		.word	.LANCHOR11
 1787              		.cfi_endproc
 1788              	.LFE498:
 1790              		.global	angles
 1791              		.global	steps
 1792              		.global	omega1
 1793              		.global	omega0
 1794              		.global	USE_IMU_FLAG
 1795              		.global	GEREGE_FLAG
 1796              		.global	ROBOT_START_FLAG
 1797              		.global	robo_state
 1798              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1801              	GEREGE_FLAG:
 1802 0000 00       		.space	1
 1803              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1804              		.set	.LANCHOR1,. + 0
 1807              	ROBOT_START_FLAG:
 1808 0000 00       		.space	1
 1809              		.section	.bss.USE_IMU_FLAG,"aw",%nobits
 1810              		.set	.LANCHOR4,. + 0
 1813              	USE_IMU_FLAG:
 1814 0000 00       		.space	1
 1815              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1816              		.align	2
 1817              		.set	.LANCHOR6,. + 0
 1820              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1821 0000 00000000 		.space	4
 1822              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
 1823              		.set	.LANCHOR8,. + 0
 1826              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1827 0000 00       		.space	1
 1828              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1829              		.set	.LANCHOR9,. + 0
 1832              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1833 0000 00       		.space	1
 1834              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1835              		.align	2
 1836              		.set	.LANCHOR7,. + 0
 1839              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1840 0000 00000000 		.space	4
 1841              		.section	.bss.omega0,"aw",%nobits
 1842              		.align	2
 1843              		.set	.LANCHOR10,. + 0
 1846              	omega0:
 1847 0000 00000000 		.space	4
 1848              		.section	.bss.omega1,"aw",%nobits
 1849              		.align	2
 1850              		.set	.LANCHOR11,. + 0
 1853              	omega1:
 1854 0000 00000000 		.space	4
 1855              		.section	.bss.robo_state,"aw",%nobits
 1856              		.set	.LANCHOR0,. + 0
 1859              	robo_state:
 1860 0000 00       		.space	1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 50


 1861              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1862              		.set	.LANCHOR5,. + 0
 1865              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1866 0000 01       		.byte	1
 1867              		.section	.data.angles,"aw",%progbits
 1868              		.align	2
 1869              		.set	.LANCHOR3,. + 0
 1872              	angles:
 1873 0000 00000000 		.word	0
 1874 0004 00003442 		.word	1110704128
 1875 0008 00003442 		.word	1110704128
 1876 000c 00007042 		.word	1114636288
 1877 0010 000020C1 		.word	-1054867456
 1878 0014 00000000 		.word	0
 1879 0018 0000B4C2 		.word	-1028390912
 1880              		.section	.data.steps,"aw",%progbits
 1881              		.align	2
 1882              		.set	.LANCHOR2,. + 0
 1885              	steps:
 1886 0000 0000C040 		.word	1086324736
 1887 0004 00002041 		.word	1092616192
 1888 0008 00007041 		.word	1097859072
 1889 000c 00008841 		.word	1099431936
 1890 0010 0000B041 		.word	1102053376
 1891 0014 0000C041 		.word	1103101952
 1892 0018 0000F841 		.word	1106771968
 1893              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
 1894              		.align	2
 1895              	.LC13:
 1896 0000 0A484F4D 		.ascii	"\012HOME\000"
 1896      4500
 1897 0006 0000     		.space	2
 1898              	.LC14:
 1899 0008 6C656730 		.ascii	"leg0_angle = %d\011leg1_angle = %d\011steering_angl"
 1899      5F616E67 
 1899      6C65203D 
 1899      20256409 
 1899      6C656731 
 1900 0035 65203D20 		.ascii	"e = %d\011robot_angle = %d\011\000"
 1900      25640972 
 1900      6F626F74 
 1900      5F616E67 
 1900      6C65203D 
 1901 004e 0000     		.space	2
 1902              	.LC15:
 1903 0050 0A4D6172 		.ascii	"\012March\000"
 1903      636800
 1904 0057 00       		.space	1
 1905              	.LC16:
 1906 0058 0A547572 		.ascii	"\012Turn 45\000"
 1906      6E203435 
 1906      00
 1907 0061 000000   		.space	3
 1908              	.LC17:
 1909 0064 0A53616E 		.ascii	"\012Sand dune\000"
 1909      64206475 
 1909      6E6500
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 51


 1910 006f 00       		.space	1
 1911              	.LC18:
 1912 0070 0A537461 		.ascii	"\012State D\000"
 1912      74652044 
 1912      00
 1913 0079 000000   		.space	3
 1914              	.LC19:
 1915 007c 0A547572 		.ascii	"\012Turn 90\000"
 1915      6E203930 
 1915      00
 1916 0085 000000   		.space	3
 1917              	.LC20:
 1918 0088 0A547573 		.ascii	"\012Tussock\000"
 1918      736F636B 
 1918      00
 1919 0091 000000   		.space	3
 1920              	.LC21:
 1921 0094 0A426173 		.ascii	"\012Base camp\000"
 1921      65206361 
 1921      6D7000
 1922 009f 00       		.space	1
 1923              	.LC22:
 1924 00a0 0A4D4F55 		.ascii	"\012MOUNTAIN\000"
 1924      4E544149 
 1924      4E00
 1925 00aa 0000     		.space	2
 1926              	.LC23:
 1927 00ac 0A55554B 		.ascii	"\012UUKHAI\000"
 1927      48414900 
 1928              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1929              		.align	2
 1930              	.LC0:
 1931 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1931      6F6E6520 
 1931      4D415243 
 1931      4800
 1932 000e 0000     		.space	2
 1933              	.LC1:
 1934 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1934      6F6E6520 
 1934      343500
 1935 001b 00       		.space	1
 1936              	.LC2:
 1937 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
 1937      6F6E6520 
 1937      53414E44 
 1937      5F44554E 
 1937      4500
 1938 002e 0000     		.space	2
 1939              	.LC3:
 1940 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
 1940      6F6E6520 
 1940      4D4F554E 
 1940      5441494E 
 1940      00
 1941 0041 000000   		.space	3
 1942              	.LC4:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 52


 1943 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
 1943      6F6E6520 
 1943      44656661 
 1943      756C7400 
 1944              	.LC5:
 1945 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1945      6F6E6520 
 1945      52454400 
 1946              	.LC6:
 1947 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1947      6F6E6520 
 1947      424C5545 
 1947      00
 1948 006d 000000   		.space	3
 1949              	.LC7:
 1950 0070 0A092061 		.ascii	"\012\011 angles= %d\000"
 1950      6E676C65 
 1950      733D2025 
 1950      6400
 1951 007e 0000     		.space	2
 1952              	.LC8:
 1953 0080 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1953      6F6E6520 
 1953      44656661 
 1953      756C745F 
 1953      52454400 
 1954              		.section	.rodata._Z4testv.str1.4,"aMS",%progbits,1
 1955              		.align	2
 1956              	.LC9:
 1957 0000 0A204652 		.ascii	"\012 FRONT\000"
 1957      4F4E5400 
 1958              	.LC10:
 1959 0008 0A204241 		.ascii	"\012 BACK\000"
 1959      434B00
 1960 000f 00       		.space	1
 1961              	.LC11:
 1962 0010 0A205550 		.ascii	"\012 UP\000"
 1962      00
 1963 0015 000000   		.space	3
 1964              	.LC12:
 1965 0018 0A6C6567 		.ascii	"\012leg0_angle = %d\011leg1_angle = %d\011steering_"
 1965      305F616E 
 1965      676C6520 
 1965      3D202564 
 1965      096C6567 
 1966 0042 616E676C 		.ascii	"angle = %d\000"
 1966      65203D20 
 1966      256400
 1967              		.text
 1968              	.Letext0:
 1969              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1970              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1971              		.file 7 "Core/Inc/sys/FreeRTOSConfig.h"
 1972              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1973              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1974              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1975              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 53


 1976              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1977              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1978              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1979              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1980              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1981              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1982              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1983              		.file 19 "Core/Inc/periphs/tim.h"
 1984              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1985              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1986              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1987              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1988              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1989              		.file 25 "Core/Inc/devs/motor.h"
 1990              		.file 26 "Core/Inc/devs/encoder.h"
 1991              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1992              		.file 28 "Core/Inc/devs/limit_switch.h"
 1993              		.file 29 "Core/Inc/robot/robot.h"
 1994              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1995              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1996              		.file 32 "Core/Inc/robot/robot_functions.h"
 1997              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:337    .text._Z11zone_selectv:000001b0 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:362    .text._Z4testv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:369    .text._Z4testv:00000000 _Z4testv
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:546    .text._Z4testv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:561    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:568    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:592    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:599    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:634    .text._Z11start_RobotP12Robot_States:00000018 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:645    .text._Z11start_RobotP12Robot_States:0000002e $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1108   .text._Z11start_RobotP12Robot_States:00000300 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1136   .text._Z11start_RobotP12Robot_States:00000364 $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1571   .text._Z11start_RobotP12Robot_States:00000680 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1593   .text._Z11start_RobotP12Robot_States:000006d0 $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1721   .text._Z11start_RobotP12Robot_States:00000798 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1731   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1738   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1783   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1872   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1885   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1853   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1846   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1813   .bss.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1801   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1807   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1859   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1802   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1808   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1814   .bss.USE_IMU_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1816   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1820   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1826   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1827   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1832   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1833   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1835   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1839   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1842   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1849   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1860   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1865   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1868   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1881   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1894   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1929   .rodata._Z11zone_selectv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s:1955   .rodata._Z4testv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
__aeabi_f2d
__aeabi_ddiv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccD8eyKS.s 			page 55


__aeabi_d2iz
_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
_ZN7encoder16get_actual_angleEv
_ZN7encoder9get_angleEv
steering
__aeabi_d2f
HAL_GPIO_WritePin
_Z11getup_n_runv
HAL_GetTick
__cxa_guard_acquire
__cxa_guard_release
_Z2goif
HAL_GPIO_TogglePin
robot_angle
curr_angle
initial_angle
_Z23initialize_leg_positionv
puts
_ZN8steering9set_omegaEf
_ZN7encoder9get_omegaEv
