ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB505:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = true;
  15:Core/Src/robot/robot.cpp **** float omega0 = 0;
  16:Core/Src/robot/robot.cpp **** float omega1 = 0;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** // float steps[7] = {7, 13, 17, 19, 24, 27, 36}`;        //for 7 rad/sec
  19:Core/Src/robot/robot.cpp **** float steps[7] = {5, 9, 13, 15, 20, 22, 29};		//for 9 rad/sec
  20:Core/Src/robot/robot.cpp **** float angles[7] = {0, 45, 45, 55, -20, 0, -90};
  21:Core/Src/robot/robot.cpp **** 
  22:Core/Src/robot/robot.cpp **** 
  23:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  24:Core/Src/robot/robot.cpp **** {
  25:Core/Src/robot/robot.cpp **** 	switch (*state_)
  26:Core/Src/robot/robot.cpp **** 	{
  27:Core/Src/robot/robot.cpp **** 	case HOME:
  28:Core/Src/robot/robot.cpp **** 	{
  29:Core/Src/robot/robot.cpp **** 		/**
  30:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  31:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  33:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
  34:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  35:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  36:Core/Src/robot/robot.cpp **** 			*/
  37:Core/Src/robot/robot.cpp **** 
  38:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  39:Core/Src/robot/robot.cpp **** 		// printf("\nHOME");
  40:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  41:Core/Src/robot/robot.cpp **** 		
  42:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  43:Core/Src/robot/robot.cpp **** 		{
  44:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  45:Core/Src/robot/robot.cpp **** 			initial_angle.setZ(initial_angle.getZ()+2);
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		else if(ROBOT_START_FLAG)
  48:Core/Src/robot/robot.cpp **** 		{
  49:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  50:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  51:Core/Src/robot/robot.cpp **** 		}
  52:Core/Src/robot/robot.cpp **** 		// printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[
  53:Core/Src/robot/robot.cpp **** 		//        (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (i
  54:Core/Src/robot/robot.cpp **** 		if((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  55:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  56:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  57:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  58:Core/Src/robot/robot.cpp **** 		{
  59:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  60:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
  61:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  62:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  63:Core/Src/robot/robot.cpp **** 			if(getup_n_run() == true){
  64:Core/Src/robot/robot.cpp **** 				zone_select();
  65:Core/Src/robot/robot.cpp **** 			}
  66:Core/Src/robot/robot.cpp **** 			printf("\n\nEntered here!!\n\n");
  67:Core/Src/robot/robot.cpp **** 		}
  68:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET))
  69:Core/Src/robot/robot.cpp **** 		{
  70:Core/Src/robot/robot.cpp **** 
  71:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  72:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  73:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  74:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  75:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  76:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  77:Core/Src/robot/robot.cpp **** 			
  78:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  79:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
  80:Core/Src/robot/robot.cpp **** 			{
  81:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
  82:Core/Src/robot/robot.cpp **** 					zone_select();
  83:Core/Src/robot/robot.cpp **** 				}
  84:Core/Src/robot/robot.cpp **** 			}
  85:Core/Src/robot/robot.cpp **** 		}
  86:Core/Src/robot/robot.cpp **** 		
  87:Core/Src/robot/robot.cpp **** 		else{
  88:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 3


  89:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
  90:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
  91:Core/Src/robot/robot.cpp **** 		}
  92:Core/Src/robot/robot.cpp **** 		
  93:Core/Src/robot/robot.cpp **** 	}
  94:Core/Src/robot/robot.cpp **** 	break;
  95:Core/Src/robot/robot.cpp **** 
  96:Core/Src/robot/robot.cpp **** 	case MARCH:
  97:Core/Src/robot/robot.cpp **** 	{
  98:Core/Src/robot/robot.cpp **** 		/*
  99:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
 100:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
 101:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
 102:Core/Src/robot/robot.cpp **** 		*/
 103:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 104:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 105:Core/Src/robot/robot.cpp **** 		{
 106:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 107:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 108:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 109:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 110:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 111:Core/Src/robot/robot.cpp **** 		}
 112:Core/Src/robot/robot.cpp **** 	}
 113:Core/Src/robot/robot.cpp **** 	break;
 114:Core/Src/robot/robot.cpp **** 
 115:Core/Src/robot/robot.cpp **** 	case TURN_45:
 116:Core/Src/robot/robot.cpp **** 	{
 117:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 118:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 119:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 120:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 121:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 122:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 123:Core/Src/robot/robot.cpp **** 		*/
 124:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 125:Core/Src/robot/robot.cpp **** 
 126:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 127:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 128:Core/Src/robot/robot.cpp **** 		{
 129:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 130:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 131:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 132:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 133:Core/Src/robot/robot.cpp **** 
 134:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 135:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 136:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 137:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 138:Core/Src/robot/robot.cpp **** 		}
 139:Core/Src/robot/robot.cpp **** 		//*/
 140:Core/Src/robot/robot.cpp **** 	}
 141:Core/Src/robot/robot.cpp **** 	break;
 142:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 143:Core/Src/robot/robot.cpp **** 	{
 144:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 145:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 4


 146:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 147:Core/Src/robot/robot.cpp **** 			*/
 148:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 149:Core/Src/robot/robot.cpp **** 
 150:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 151:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 152:Core/Src/robot/robot.cpp **** 		{
 153:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 154:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 155:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 156:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 157:Core/Src/robot/robot.cpp **** 
 158:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 159:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 160:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 161:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 162:Core/Src/robot/robot.cpp **** 		}
 163:Core/Src/robot/robot.cpp **** 		//*/
 164:Core/Src/robot/robot.cpp **** 	}
 165:Core/Src/robot/robot.cpp **** 	break;
 166:Core/Src/robot/robot.cpp **** 	case STATE_D:
 167:Core/Src/robot/robot.cpp **** 	{
 168:Core/Src/robot/robot.cpp **** 		/*
 169:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 170:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 171:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 172:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 173:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 174:Core/Src/robot/robot.cpp **** 		{
 175:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 176:Core/Src/robot/robot.cpp **** 
 177:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 178:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 179:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 180:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 181:Core/Src/robot/robot.cpp **** 		}
 182:Core/Src/robot/robot.cpp **** 	}
 183:Core/Src/robot/robot.cpp **** 	break;
 184:Core/Src/robot/robot.cpp **** 
 185:Core/Src/robot/robot.cpp **** 	case TURN_90:
 186:Core/Src/robot/robot.cpp **** 	{
 187:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 188:Core/Src/robot/robot.cpp **** 			no of steps = 
 189:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 190:Core/Src/robot/robot.cpp **** 			*/
 191:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 192:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 193:Core/Src/robot/robot.cpp **** 		{
 194:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 195:Core/Src/robot/robot.cpp **** 
 196:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 197:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 198:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 199:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 200:Core/Src/robot/robot.cpp **** 		}
 201:Core/Src/robot/robot.cpp **** 	}
 202:Core/Src/robot/robot.cpp **** 	break;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 5


 203:Core/Src/robot/robot.cpp **** 
 204:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 205:Core/Src/robot/robot.cpp **** 	{
 206:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 207:Core/Src/robot/robot.cpp **** 			robot stops 
 208:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 209:Core/Src/robot/robot.cpp **** 			*/
 210:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 211:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 212:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG){
 213:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 214:Core/Src/robot/robot.cpp **** 			{
 215:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 216:Core/Src/robot/robot.cpp **** 			}
 217:Core/Src/robot/robot.cpp **** 		}
 218:Core/Src/robot/robot.cpp **** 		else{
 219:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 220:Core/Src/robot/robot.cpp **** 			{
 221:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 222:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 223:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 224:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 225:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 226:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 227:Core/Src/robot/robot.cpp **** 			}
 228:Core/Src/robot/robot.cpp **** 		}
 229:Core/Src/robot/robot.cpp **** 	}
 230:Core/Src/robot/robot.cpp **** 	break;
 231:Core/Src/robot/robot.cpp **** 
 232:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 233:Core/Src/robot/robot.cpp **** 	{
 234:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 235:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 236:Core/Src/robot/robot.cpp **** 			*/
 237:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 238:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 239:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 240:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 241:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 242:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 243:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 244:Core/Src/robot/robot.cpp **** 		{
 245:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 246:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 247:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 248:Core/Src/robot/robot.cpp **** 			
 249:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 250:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 251:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 252:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 253:Core/Src/robot/robot.cpp **** 		}
 254:Core/Src/robot/robot.cpp **** 	}
 255:Core/Src/robot/robot.cpp **** 	break;
 256:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 257:Core/Src/robot/robot.cpp **** 	{
 258:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 259:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			*/
 261:Core/Src/robot/robot.cpp **** 		
 262:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 263:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 264:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG_2){
 265:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 266:Core/Src/robot/robot.cpp **** 			{
 267:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 268:Core/Src/robot/robot.cpp **** 			}
 269:Core/Src/robot/robot.cpp **** 		}
 270:Core/Src/robot/robot.cpp **** 		else{
 271:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 272:Core/Src/robot/robot.cpp **** 			{
 273:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 274:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 275:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 276:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 277:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 278:Core/Src/robot/robot.cpp **** 			}
 279:Core/Src/robot/robot.cpp **** 		}
 280:Core/Src/robot/robot.cpp **** 	}
 281:Core/Src/robot/robot.cpp **** 
 282:Core/Src/robot/robot.cpp **** 	break;
 283:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 284:Core/Src/robot/robot.cpp **** 	{
 285:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 286:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 287:Core/Src/robot/robot.cpp **** 			*/
 288:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 289:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 290:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 291:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 292:Core/Src/robot/robot.cpp **** 		
 293:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 294:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 295:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 296:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 297:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 298:Core/Src/robot/robot.cpp **** 	}
 299:Core/Src/robot/robot.cpp **** 	break;
 300:Core/Src/robot/robot.cpp **** 	case TUNE:
 301:Core/Src/robot/robot.cpp **** 	{
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 305:Core/Src/robot/robot.cpp **** 	}
 306:Core/Src/robot/robot.cpp **** 	}
 307:Core/Src/robot/robot.cpp **** }
 308:Core/Src/robot/robot.cpp **** 
 309:Core/Src/robot/robot.cpp **** bool play()
 310:Core/Src/robot/robot.cpp **** {
 311:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 312:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 313:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 314:Core/Src/robot/robot.cpp **** 	return true;
 315:Core/Src/robot/robot.cpp **** }
 316:Core/Src/robot/robot.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 7


 317:Core/Src/robot/robot.cpp **** void zone_select(void)
 318:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 318 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LBB42:
 319:Core/Src/robot/robot.cpp **** 
 320:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 320 0
  39 0002 4FF48041 		mov	r1, #16384
  40 0006 5F48     		ldr	r0, .L17
  41 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000c 08BB     		cbnz	r0, .L2
 321:Core/Src/robot/robot.cpp **** 	{
 322:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 322 0
  45 000e 0123     		movs	r3, #1
  46 0010 5D4A     		ldr	r2, .L17+4
  47 0012 1370     		strb	r3, [r2]
 323:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 323 0
  49 0014 5D4A     		ldr	r2, .L17+8
  50 0016 1370     		strb	r3, [r2]
 324:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 324 0
  52 0018 5D48     		ldr	r0, .L17+12
  53 001a FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE42:
  57              	.LBB52:
 325:Core/Src/robot/robot.cpp **** 	}
 326:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 327:Core/Src/robot/robot.cpp **** 	{
 328:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
 329:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 330:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1]-2;
 331:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1]-2;
 332:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 333:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 334:Core/Src/robot/robot.cpp **** 		{
 335:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 336:Core/Src/robot/robot.cpp **** 		}
 337:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 338:Core/Src/robot/robot.cpp **** 	}
 339:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 340:Core/Src/robot/robot.cpp **** 	{
 341:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 342:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 343:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 8


 344:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 345:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 346:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 347:Core/Src/robot/robot.cpp **** 		{
 348:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 349:Core/Src/robot/robot.cpp **** 		}
 350:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 351:Core/Src/robot/robot.cpp **** 	}
 352:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 353:Core/Src/robot/robot.cpp **** 	{
 354:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 355:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 356:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 357:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 358:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 359:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 360:Core/Src/robot/robot.cpp **** 		{
 361:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 362:Core/Src/robot/robot.cpp **** 		}
 363:Core/Src/robot/robot.cpp **** 	}
 364:Core/Src/robot/robot.cpp **** 	else
 365:Core/Src/robot/robot.cpp **** 	{
 366:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 367:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 368:Core/Src/robot/robot.cpp **** 	}
 369:Core/Src/robot/robot.cpp **** 
 370:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 370 0
  59 001e 4FF48061 		mov	r1, #1024
  60 0022 5848     		ldr	r0, .L17
  61 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0028 0028     		cmp	r0, #0
  64 002a 40F09180 		bne	.L10
  65              	.LBB53:
 371:Core/Src/robot/robot.cpp **** 	{
 372:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 372 0
  67 002e 5948     		ldr	r0, .L17+16
  68 0030 FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB54:
 373:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 373 0
  72 0034 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L12:
  75              		.loc 1 373 0 is_stmt 0 discriminator 3
  76 0036 062A     		cmp	r2, #6
  77 0038 00F3A380 		bgt	.L1
 374:Core/Src/robot/robot.cpp **** 		{
 375:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 375 0 is_stmt 1 discriminator 2
  79 003c 564B     		ldr	r3, .L17+20
  80 003e 03EB8203 		add	r3, r3, r2, lsl #2
  81 0042 D3ED007A 		vldr.32	s15, [r3]
  82 0046 F1EE677A 		vneg.f32	s15, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 9


  83 004a C3ED007A 		vstr.32	s15, [r3]
 373:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  84              		.loc 1 373 0 discriminator 2
  85 004e 0132     		adds	r2, r2, #1
  86              	.LVL5:
  87 0050 F1E7     		b	.L12
  88              	.LVL6:
  89              	.L2:
  90              	.LBE54:
  91              	.LBE53:
  92              	.LBE52:
  93              	.LBB58:
  94              	.LBB43:
 326:Core/Src/robot/robot.cpp **** 	{
  95              		.loc 1 326 0
  96 0052 1021     		movs	r1, #16
  97 0054 5148     		ldr	r0, .L17+24
  98 0056 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  99              	.LVL7:
 100 005a 20BB     		cbnz	r0, .L4
 101              	.LBB44:
 328:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 102              		.loc 1 328 0
 103 005c 5048     		ldr	r0, .L17+28
 104 005e FFF7FEFF 		bl	printf
 105              	.LVL8:
 329:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1]-2;
 106              		.loc 1 329 0
 107 0062 494B     		ldr	r3, .L17+4
 108 0064 0222     		movs	r2, #2
 109 0066 1A70     		strb	r2, [r3]
 330:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1]-2;
 110              		.loc 1 330 0
 111 0068 4E4B     		ldr	r3, .L17+32
 112 006a D3ED017A 		vldr.32	s15, [r3, #4]
 113 006e B0EE007A 		vmov.f32	s14, #2.0e+0
 114 0072 77EEC77A 		vsub.f32	s15, s15, s14
 115 0076 FDEEE77A 		vcvt.s32.f32	s15, s15
 116 007a 4B4A     		ldr	r2, .L17+36
 117 007c C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 331:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 118              		.loc 1 331 0
 119 0080 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 332:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 120              		.loc 1 332 0
 121 0084 444B     		ldr	r3, .L17+20
 122 0086 93ED017A 		vldr.32	s14, [r3, #4]
 123              	.LVL9:
 124              	.LBB45:
 333:Core/Src/robot/robot.cpp **** 		{
 125              		.loc 1 333 0
 126 008a 0022     		movs	r2, #0
 127              	.LVL10:
 128              	.L5:
 333:Core/Src/robot/robot.cpp **** 		{
 129              		.loc 1 333 0 is_stmt 0 discriminator 3
 130 008c 062A     		cmp	r2, #6
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 10


 131 008e C6DC     		bgt	.L3
 335:Core/Src/robot/robot.cpp **** 		}
 132              		.loc 1 335 0 is_stmt 1 discriminator 2
 133 0090 414B     		ldr	r3, .L17+20
 134 0092 03EB8203 		add	r3, r3, r2, lsl #2
 135 0096 D3ED007A 		vldr.32	s15, [r3]
 136 009a 77EEC77A 		vsub.f32	s15, s15, s14
 137 009e C3ED007A 		vstr.32	s15, [r3]
 333:Core/Src/robot/robot.cpp **** 		{
 138              		.loc 1 333 0 discriminator 2
 139 00a2 0132     		adds	r2, r2, #1
 140              	.LVL11:
 141 00a4 F2E7     		b	.L5
 142              	.LVL12:
 143              	.L4:
 144              	.LBE45:
 145              	.LBE44:
 146              	.LBB46:
 339:Core/Src/robot/robot.cpp **** 	{
 147              		.loc 1 339 0
 148 00a6 4FF48051 		mov	r1, #4096
 149 00aa 3648     		ldr	r0, .L17
 150 00ac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 151              	.LVL13:
 152 00b0 00BB     		cbnz	r0, .L6
 153              	.LBB47:
 341:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 154              		.loc 1 341 0
 155 00b2 3E48     		ldr	r0, .L17+40
 156 00b4 FFF7FEFF 		bl	printf
 157              	.LVL14:
 342:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 158              		.loc 1 342 0
 159 00b8 334B     		ldr	r3, .L17+4
 160 00ba 0422     		movs	r2, #4
 161 00bc 1A70     		strb	r2, [r3]
 343:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 162              		.loc 1 343 0
 163 00be 394B     		ldr	r3, .L17+32
 164 00c0 D3ED027A 		vldr.32	s15, [r3, #8]
 165 00c4 FDEEE77A 		vcvt.s32.f32	s15, s15
 166 00c8 374A     		ldr	r2, .L17+36
 167 00ca C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 344:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 168              		.loc 1 344 0
 169 00ce C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 345:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 170              		.loc 1 345 0
 171 00d2 314B     		ldr	r3, .L17+20
 172 00d4 93ED027A 		vldr.32	s14, [r3, #8]
 173              	.LVL15:
 174              	.LBB48:
 346:Core/Src/robot/robot.cpp **** 		{
 175              		.loc 1 346 0
 176 00d8 0022     		movs	r2, #0
 177              	.LVL16:
 178              	.L7:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 11


 346:Core/Src/robot/robot.cpp **** 		{
 179              		.loc 1 346 0 is_stmt 0 discriminator 3
 180 00da 062A     		cmp	r2, #6
 181 00dc 9FDC     		bgt	.L3
 348:Core/Src/robot/robot.cpp **** 		}
 182              		.loc 1 348 0 is_stmt 1 discriminator 2
 183 00de 2E4B     		ldr	r3, .L17+20
 184 00e0 03EB8203 		add	r3, r3, r2, lsl #2
 185 00e4 D3ED007A 		vldr.32	s15, [r3]
 186 00e8 77EEC77A 		vsub.f32	s15, s15, s14
 187 00ec C3ED007A 		vstr.32	s15, [r3]
 346:Core/Src/robot/robot.cpp **** 		{
 188              		.loc 1 346 0 discriminator 2
 189 00f0 0132     		adds	r2, r2, #1
 190              	.LVL17:
 191 00f2 F2E7     		b	.L7
 192              	.LVL18:
 193              	.L6:
 194              	.LBE48:
 195              	.LBE47:
 196              	.LBB49:
 352:Core/Src/robot/robot.cpp **** 	{
 197              		.loc 1 352 0
 198 00f4 0221     		movs	r1, #2
 199 00f6 2E48     		ldr	r0, .L17+44
 200 00f8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL19:
 202 00fc 08BB     		cbnz	r0, .L8
 203              	.LBB50:
 354:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 204              		.loc 1 354 0
 205 00fe 2D48     		ldr	r0, .L17+48
 206 0100 FFF7FEFF 		bl	printf
 207              	.LVL20:
 355:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 208              		.loc 1 355 0
 209 0104 204B     		ldr	r3, .L17+4
 210 0106 0722     		movs	r2, #7
 211 0108 1A70     		strb	r2, [r3]
 356:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 212              		.loc 1 356 0
 213 010a 264B     		ldr	r3, .L17+32
 214 010c D3ED057A 		vldr.32	s15, [r3, #20]
 215 0110 FDEEE77A 		vcvt.s32.f32	s15, s15
 216 0114 244A     		ldr	r2, .L17+36
 217 0116 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 357:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 218              		.loc 1 357 0
 219 011a C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 358:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 220              		.loc 1 358 0
 221 011e 1E4B     		ldr	r3, .L17+20
 222 0120 93ED057A 		vldr.32	s14, [r3, #20]
 223              	.LVL21:
 224              	.LBB51:
 359:Core/Src/robot/robot.cpp **** 		{
 225              		.loc 1 359 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 12


 226 0124 0022     		movs	r2, #0
 227              	.LVL22:
 228              	.L9:
 359:Core/Src/robot/robot.cpp **** 		{
 229              		.loc 1 359 0 is_stmt 0 discriminator 3
 230 0126 062A     		cmp	r2, #6
 231 0128 3FF779AF 		bgt	.L3
 361:Core/Src/robot/robot.cpp **** 		}
 232              		.loc 1 361 0 is_stmt 1 discriminator 2
 233 012c 1A4B     		ldr	r3, .L17+20
 234 012e 03EB8203 		add	r3, r3, r2, lsl #2
 235 0132 D3ED007A 		vldr.32	s15, [r3]
 236 0136 77EEC77A 		vsub.f32	s15, s15, s14
 237 013a C3ED007A 		vstr.32	s15, [r3]
 359:Core/Src/robot/robot.cpp **** 		{
 238              		.loc 1 359 0 discriminator 2
 239 013e 0132     		adds	r2, r2, #1
 240              	.LVL23:
 241 0140 F1E7     		b	.L9
 242              	.LVL24:
 243              	.L8:
 244              	.LBE51:
 245              	.LBE50:
 366:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 246              		.loc 1 366 0
 247 0142 1D48     		ldr	r0, .L17+52
 248 0144 FFF7FEFF 		bl	printf
 249              	.LVL25:
 367:Core/Src/robot/robot.cpp **** 	}
 250              		.loc 1 367 0
 251 0148 0F4B     		ldr	r3, .L17+4
 252 014a 0122     		movs	r2, #1
 253 014c 1A70     		strb	r2, [r3]
 254 014e 66E7     		b	.L3
 255              	.L10:
 256              	.LBE49:
 257              	.LBE46:
 258              	.LBE43:
 259              	.LBE58:
 260              	.LBB59:
 261              	.LBB55:
 376:Core/Src/robot/robot.cpp **** 		}
 377:Core/Src/robot/robot.cpp **** 	}
 378:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
 262              		.loc 1 378 0
 263 0150 1021     		movs	r1, #16
 264 0152 1A48     		ldr	r0, .L17+56
 265 0154 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 266              	.LVL26:
 267 0158 80B1     		cbz	r0, .L16
 268              	.LBB56:
 379:Core/Src/robot/robot.cpp **** 	{
 380:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");
 381:Core/Src/robot/robot.cpp **** 	}
 382:Core/Src/robot/robot.cpp **** 	else{
 383:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 269              		.loc 1 383 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 13


 270 015a 1948     		ldr	r0, .L17+60
 271 015c FFF7FEFF 		bl	printf
 272              	.LVL27:
 273              	.LBB57:
 384:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 274              		.loc 1 384 0
 275 0160 0022     		movs	r2, #0
 276              	.LVL28:
 277              	.L14:
 278              		.loc 1 384 0 is_stmt 0 discriminator 3
 279 0162 062A     		cmp	r2, #6
 280 0164 0DDC     		bgt	.L1
 385:Core/Src/robot/robot.cpp **** 		{
 386:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 281              		.loc 1 386 0 is_stmt 1 discriminator 2
 282 0166 0C4B     		ldr	r3, .L17+20
 283 0168 03EB8203 		add	r3, r3, r2, lsl #2
 284 016c D3ED007A 		vldr.32	s15, [r3]
 285 0170 F1EE677A 		vneg.f32	s15, s15
 286 0174 C3ED007A 		vstr.32	s15, [r3]
 384:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 287              		.loc 1 384 0 discriminator 2
 288 0178 0132     		adds	r2, r2, #1
 289              	.LVL29:
 290 017a F2E7     		b	.L14
 291              	.LVL30:
 292              	.L16:
 293              	.LBE57:
 294              	.LBE56:
 380:Core/Src/robot/robot.cpp **** 	}
 295              		.loc 1 380 0
 296 017c 1148     		ldr	r0, .L17+64
 297 017e FFF7FEFF 		bl	printf
 298              	.LVL31:
 299              	.L1:
 300              	.LBE55:
 301              	.LBE59:
 387:Core/Src/robot/robot.cpp **** 		}
 388:Core/Src/robot/robot.cpp **** 	}
 389:Core/Src/robot/robot.cpp **** }...
 302              		.loc 1 389 0
 303 0182 08BD     		pop	{r3, pc}
 304              	.L18:
 305              		.align	2
 306              	.L17:
 307 0184 00080240 		.word	1073874944
 308 0188 00000000 		.word	.LANCHOR0
 309 018c 00000000 		.word	.LANCHOR1
 310 0190 00000000 		.word	.LC0
 311 0194 54000000 		.word	.LC5
 312 0198 00000000 		.word	.LANCHOR3
 313 019c 00000240 		.word	1073872896
 314 01a0 10000000 		.word	.LC1
 315 01a4 00000000 		.word	.LANCHOR2
 316 01a8 00000000 		.word	leg
 317 01ac 1C000000 		.word	.LC2
 318 01b0 000C0240 		.word	1073875968
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 14


 319 01b4 30000000 		.word	.LC3
 320 01b8 44000000 		.word	.LC4
 321 01bc 00100240 		.word	1073876992
 322 01c0 70000000 		.word	.LC7
 323 01c4 60000000 		.word	.LC6
 324              		.cfi_endproc
 325              	.LFE505:
 327              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 328              		.align	1
 329              		.weak	_Z12swap_ElementIfEvRT_S1_
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	_Z12swap_ElementIfEvRT_S1_:
 336              	.LFB516:
 337              		.file 2 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
 338              		.loc 2 16 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL32:
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
 344              		.loc 2 18 0
 345 0000 0368     		ldr	r3, [r0]	@ float
 346              	.LVL33:
  19:Core/Inc/utils/vec3.h ****         first = second;
 347              		.loc 2 19 0
 348 0002 0A68     		ldr	r2, [r1]	@ float
 349 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h ****         second = temp;
 350              		.loc 2 20 0
 351 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** }
 352              		.loc 2 21 0
 353 0008 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE516:
 357              		.global	__aeabi_f2d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 15


 358              		.global	__aeabi_ddiv
 359              		.global	__aeabi_d2f
 360              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 361              		.align	1
 362              		.global	_Z11start_RobotP12Robot_States
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	_Z11start_RobotP12Robot_States:
 369              	.LFB503:
  24:Core/Src/robot/robot.cpp **** {
 370              		.loc 1 24 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 16
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL34:
 375 0000 30B5     		push	{r4, r5, lr}
 376              	.LCFI1:
 377              		.cfi_def_cfa_offset 12
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 381 0002 2DED028B 		vpush.64	{d8}
 382              	.LCFI2:
 383              		.cfi_def_cfa_offset 20
 384              		.cfi_offset 80, -20
 385              		.cfi_offset 81, -16
 386 0006 85B0     		sub	sp, sp, #20
 387              	.LCFI3:
 388              		.cfi_def_cfa_offset 40
 389 0008 0446     		mov	r4, r0
 390              	.LBB94:
  25:Core/Src/robot/robot.cpp **** 	switch (*state_)
 391              		.loc 1 25 0
 392 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 393 000c 0A2B     		cmp	r3, #10
 394 000e 00F23583 		bhi	.L20
 395 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
 396              	.L23:
 397 0016 0B00     		.2byte	(.L22-.L23)/2
 398 0018 E000     		.2byte	(.L24-.L23)/2
 399 001a 0A01     		.2byte	(.L25-.L23)/2
 400 001c 6B01     		.2byte	(.L26-.L23)/2
 401 001e BB01     		.2byte	(.L27-.L23)/2
 402 0020 E501     		.2byte	(.L28-.L23)/2
 403 0022 0F02     		.2byte	(.L29-.L23)/2
 404 0024 4802     		.2byte	(.L30-.L23)/2
 405 0026 A702     		.2byte	(.L31-.L23)/2
 406 0028 0303     		.2byte	(.L32-.L23)/2
 407 002a 3703     		.2byte	(.L33-.L23)/2
 408              		.p2align 1
 409              	.L22:
 410              	.LBB95:
 411              	.LBB96:
  42:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 412              		.loc 1 42 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 16


 413 002c 9E4B     		ldr	r3, .L60
 414 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 415 0030 1BB9     		cbnz	r3, .L34
  42:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 416              		.loc 1 42 0 is_stmt 0 discriminator 1
 417 0032 9E4A     		ldr	r2, .L60+4
 418 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 419 0036 002A     		cmp	r2, #0
 420 0038 35D1     		bne	.L53
 421              	.L34:
  47:Core/Src/robot/robot.cpp **** 		else if(ROBOT_START_FLAG)
 422              		.loc 1 47 0 is_stmt 1
 423 003a 002B     		cmp	r3, #0
 424 003c 51D1     		bne	.L54
 425              	.LVL35:
 426              	.L35:
 427              	.LBB97:
  54:Core/Src/robot/robot.cpp **** 		if((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 428              		.loc 1 54 0
 429 003e 4FF48041 		mov	r1, #16384
 430 0042 9B48     		ldr	r0, .L60+8
 431 0044 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 432              	.LVL36:
  56:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 433              		.loc 1 56 0
 434 0048 28B1     		cbz	r0, .L36
  55:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 435              		.loc 1 55 0
 436 004a 1021     		movs	r1, #16
 437 004c 9948     		ldr	r0, .L60+12
 438 004e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 439              	.LVL37:
  54:Core/Src/robot/robot.cpp **** 		if((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 440              		.loc 1 54 0
 441 0052 0028     		cmp	r0, #0
 442 0054 4ED1     		bne	.L55
 443              	.L36:
  59:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 444              		.loc 1 59 0 discriminator 1
 445 0056 0022     		movs	r2, #0
 446 0058 0421     		movs	r1, #4
 447 005a 9548     		ldr	r0, .L60+8
 448 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 449              	.LVL38:
  60:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
 450              		.loc 1 60 0 discriminator 1
 451 0060 914B     		ldr	r3, .L60
 452 0062 0122     		movs	r2, #1
 453 0064 1A70     		strb	r2, [r3]
  61:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 454              		.loc 1 61 0 discriminator 1
 455 0066 914B     		ldr	r3, .L60+4
 456 0068 0022     		movs	r2, #0
 457 006a 1A70     		strb	r2, [r3]
 458              	.LVL39:
 459              	.LBB98:
 460              	.LBB99:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 17


 461              	.LBB100:
 462              	.LBB101:
 463              	.LBB102:
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 18


  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 464              		.loc 2 129 0 discriminator 1
 465 006c 924B     		ldr	r3, .L60+16
 466 006e 1A68     		ldr	r2, [r3]	@ float
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 19


 467 0070 0192     		str	r2, [sp, #4]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 468              		.loc 2 130 0 discriminator 1
 469 0072 5A68     		ldr	r2, [r3, #4]	@ float
 470 0074 0292     		str	r2, [sp, #8]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 471              		.loc 2 131 0 discriminator 1
 472 0076 9B68     		ldr	r3, [r3, #8]	@ float
 473 0078 0393     		str	r3, [sp, #12]	@ float
 474              	.LVL40:
 475              	.LBE102:
 476              	.LBE101:
 477              	.LBE100:
 478              	.LBB103:
 479              	.LBB104:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 20


 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 480              		.loc 2 175 0 discriminator 1
 481 007a 904C     		ldr	r4, .L60+20
 482 007c 01A9     		add	r1, sp, #4
 483              	.LVL41:
 484 007e 2046     		mov	r0, r4
 485 0080 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 486              	.LVL42:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 487              		.loc 2 176 0 discriminator 1
 488 0084 02A9     		add	r1, sp, #8
 489 0086 201D     		adds	r0, r4, #4
 490 0088 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 491              	.LVL43:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 492              		.loc 2 177 0 discriminator 1
 493 008c 03A9     		add	r1, sp, #12
 494 008e 04F10800 		add	r0, r4, #8
 495 0092 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 496              	.LVL44:
 497              	.LBE104:
 498              	.LBE103:
 499              	.LBE99:
 500              	.LBE98:
  63:Core/Src/robot/robot.cpp **** 			if(getup_n_run() == true){
 501              		.loc 1 63 0 discriminator 1
 502 0096 FFF7FEFF 		bl	_Z11getup_n_runv
 503              	.LVL45:
 504 009a 0028     		cmp	r0, #0
 505 009c 77D1     		bne	.L56
 506              	.L39:
  66:Core/Src/robot/robot.cpp **** 			printf("\n\nEntered here!!\n\n");
 507              		.loc 1 66 0
 508 009e 8848     		ldr	r0, .L60+24
 509 00a0 FFF7FEFF 		bl	puts
 510              	.LVL46:
 511 00a4 EAE2     		b	.L20
 512              	.LVL47:
 513              	.L53:
 514              	.LBE97:
 515              	.LBB109:
 516              	.LBB110:
 517              	.LBB111:
 518              	.LBB112:
 519              	.LBB113:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 520              		.loc 2 129 0
 521 00a6 844B     		ldr	r3, .L60+16
 522 00a8 1A68     		ldr	r2, [r3]	@ float
 523 00aa 0192     		str	r2, [sp, #4]	@ float
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 524              		.loc 2 130 0
 525 00ac 5A68     		ldr	r2, [r3, #4]	@ float
 526 00ae 0292     		str	r2, [sp, #8]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 527              		.loc 2 131 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 21


 528 00b0 9B68     		ldr	r3, [r3, #8]	@ float
 529 00b2 0393     		str	r3, [sp, #12]	@ float
 530              	.LVL48:
 531              	.LBE113:
 532              	.LBE112:
 533              	.LBE111:
 534              	.LBB114:
 535              	.LBB115:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 536              		.loc 2 175 0
 537 00b4 814C     		ldr	r4, .L60+20
 538 00b6 01A9     		add	r1, sp, #4
 539              	.LVL49:
 540 00b8 2046     		mov	r0, r4
 541              	.LVL50:
 542 00ba FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 543              	.LVL51:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 544              		.loc 2 176 0
 545 00be 02A9     		add	r1, sp, #8
 546 00c0 201D     		adds	r0, r4, #4
 547 00c2 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 548              	.LVL52:
 549              		.loc 2 177 0
 550 00c6 03A9     		add	r1, sp, #12
 551 00c8 04F10800 		add	r0, r4, #8
 552 00cc FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 553              	.LVL53:
 554              	.LBE115:
 555              	.LBE114:
 556              	.LBE110:
 557              	.LBE109:
 558              	.LBB116:
 559              	.LBB117:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 560              		.loc 2 36 0
 561 00d0 D4ED027A 		vldr.32	s15, [r4, #8]
 562              	.LVL54:
 563              	.LBE117:
 564              	.LBE116:
  45:Core/Src/robot/robot.cpp **** 			initial_angle.setZ(initial_angle.getZ()+2);
 565              		.loc 1 45 0
 566 00d4 B0EE007A 		vmov.f32	s14, #2.0e+0
 567 00d8 77EE877A 		vadd.f32	s15, s15, s14
 568              	.LVL55:
 569              	.LBB118:
 570              	.LBB119:
  39:Core/Inc/utils/vec3.h **** 
 571              		.loc 2 39 0
 572 00dc C4ED027A 		vstr.32	s15, [r4, #8]
 573 00e0 ADE7     		b	.L35
 574              	.LVL56:
 575              	.L54:
 576              	.LBE119:
 577              	.LBE118:
  49:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 578              		.loc 1 49 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 22


 579 00e2 724B     		ldr	r3, .L60+4
 580 00e4 0022     		movs	r2, #0
 581 00e6 1A70     		strb	r2, [r3]
  50:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 582              		.loc 1 50 0
 583 00e8 0122     		movs	r2, #1
 584 00ea 0421     		movs	r1, #4
 585 00ec 7048     		ldr	r0, .L60+8
 586              	.LVL57:
 587 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 588              	.LVL58:
 589 00f2 A4E7     		b	.L35
 590              	.LVL59:
 591              	.L55:
 592              	.LBB120:
  56:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 593              		.loc 1 56 0
 594 00f4 4FF48051 		mov	r1, #4096
 595 00f8 6D48     		ldr	r0, .L60+8
 596 00fa FFF7FEFF 		bl	HAL_GPIO_ReadPin
 597              	.LVL60:
  55:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 598              		.loc 1 55 0
 599 00fe 0028     		cmp	r0, #0
 600 0100 A9D0     		beq	.L36
  57:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
 601              		.loc 1 57 0 discriminator 2
 602 0102 0221     		movs	r1, #2
 603 0104 6F48     		ldr	r0, .L60+28
 604 0106 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 605              	.LVL61:
  56:Core/Src/robot/robot.cpp **** 		(HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 606              		.loc 1 56 0 discriminator 2
 607 010a 0028     		cmp	r0, #0
 608 010c A3D0     		beq	.L36
 609              	.LBB105:
  68:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin)==GPIO_PIN_RESET))
 610              		.loc 1 68 0
 611 010e 4FF40071 		mov	r1, #512
 612 0112 6C48     		ldr	r0, .L60+28
 613 0114 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 614              	.LVL62:
 615 0118 0028     		cmp	r0, #0
 616 011a 48D1     		bne	.L57
 617              	.LBB106:
  71:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 618              		.loc 1 71 0
 619 011c 694C     		ldr	r4, .L60+28
 620 011e 0022     		movs	r2, #0
 621 0120 4FF48051 		mov	r1, #4096
 622 0124 2046     		mov	r0, r4
 623 0126 FFF7FEFF 		bl	HAL_GPIO_WritePin
 624              	.LVL63:
  72:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 625              		.loc 1 72 0
 626 012a 0022     		movs	r2, #0
 627 012c 4FF40051 		mov	r1, #8192
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 23


 628 0130 2046     		mov	r0, r4
 629 0132 FFF7FEFF 		bl	HAL_GPIO_WritePin
 630              	.LVL64:
  73:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 631              		.loc 1 73 0
 632 0136 0022     		movs	r2, #0
 633 0138 4FF48041 		mov	r1, #16384
 634 013c 2046     		mov	r0, r4
 635 013e FFF7FEFF 		bl	HAL_GPIO_WritePin
 636              	.LVL65:
  74:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 637              		.loc 1 74 0
 638 0142 0022     		movs	r2, #0
 639 0144 4FF40041 		mov	r1, #32768
 640 0148 2046     		mov	r0, r4
 641 014a FFF7FEFF 		bl	HAL_GPIO_WritePin
 642              	.LVL66:
  75:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 643              		.loc 1 75 0
 644 014e 0022     		movs	r2, #0
 645 0150 0421     		movs	r1, #4
 646 0152 5748     		ldr	r0, .L60+8
 647 0154 FFF7FEFF 		bl	HAL_GPIO_WritePin
 648              	.LVL67:
  76:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 649              		.loc 1 76 0
 650 0158 534B     		ldr	r3, .L60
 651 015a 0022     		movs	r2, #0
 652 015c 1A70     		strb	r2, [r3]
  78:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 653              		.loc 1 78 0
 654 015e 5A4B     		ldr	r3, .L60+32
 655 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656 0162 BFF35B8F 		dmb	ish
 657 0166 13F0010F 		tst	r3, #1
 658 016a 13D0     		beq	.L58
 659              	.L42:
  79:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 660              		.loc 1 79 0
 661 016c FFF7FEFF 		bl	HAL_GetTick
 662              	.LVL68:
 663 0170 564B     		ldr	r3, .L60+36
 664 0172 1B68     		ldr	r3, [r3]
 665 0174 C31A     		subs	r3, r0, r3
 666 0176 B3F5FA7F 		cmp	r3, #500
 667 017a C0F07F82 		bcc	.L20
  81:Core/Src/robot/robot.cpp **** 				if(getup_n_run() == true){
 668              		.loc 1 81 0
 669 017e FFF7FEFF 		bl	_Z11getup_n_runv
 670              	.LVL69:
 671 0182 0028     		cmp	r0, #0
 672 0184 00F07A82 		beq	.L20
  82:Core/Src/robot/robot.cpp **** 					zone_select();
 673              		.loc 1 82 0
 674 0188 FFF7FEFF 		bl	_Z11zone_selectv
 675              	.LVL70:
 676 018c 76E2     		b	.L20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 24


 677              	.L56:
 678              	.LBE106:
 679              	.LBE105:
  64:Core/Src/robot/robot.cpp **** 				zone_select();
 680              		.loc 1 64 0
 681 018e FFF7FEFF 		bl	_Z11zone_selectv
 682              	.LVL71:
 683 0192 84E7     		b	.L39
 684              	.L58:
 685              	.LBB108:
 686              	.LBB107:
  78:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 687              		.loc 1 78 0 discriminator 1
 688 0194 4C48     		ldr	r0, .L60+32
 689 0196 FFF7FEFF 		bl	__cxa_guard_acquire
 690              	.LVL72:
 691 019a 0028     		cmp	r0, #0
 692 019c E6D0     		beq	.L42
  78:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 693              		.loc 1 78 0 is_stmt 0 discriminator 2
 694 019e FFF7FEFF 		bl	HAL_GetTick
 695              	.LVL73:
 696 01a2 4A4B     		ldr	r3, .L60+36
 697 01a4 1860     		str	r0, [r3]
 698 01a6 4848     		ldr	r0, .L60+32
 699 01a8 FFF7FEFF 		bl	__cxa_guard_release
 700              	.LVL74:
 701 01ac DEE7     		b	.L42
 702              	.L57:
 703              	.LBE107:
  88:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 704              		.loc 1 88 0 is_stmt 1
 705 01ae 9FED488A 		vldr.32	s16, .L60+40
 706 01b2 484C     		ldr	r4, .L60+44
 707 01b4 B0EE480A 		vmov.f32	s0, s16
 708 01b8 2046     		mov	r0, r4
 709 01ba FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 710              	.LVL75:
  89:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 711              		.loc 1 89 0
 712 01be B0EE480A 		vmov.f32	s0, s16
 713 01c2 04F15800 		add	r0, r4, #88
 714 01c6 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 715              	.LVL76:
  90:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 716              		.loc 1 90 0
 717 01ca B0EE480A 		vmov.f32	s0, s16
 718 01ce 4248     		ldr	r0, .L60+48
 719 01d0 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 720              	.LVL77:
 721 01d4 52E2     		b	.L20
 722              	.LVL78:
 723              	.L24:
 724              	.LBE108:
 725              	.LBE120:
 726              	.LBE96:
 103:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 25


 727              		.loc 1 103 0
 728 01d6 4148     		ldr	r0, .L60+52
 729              	.LVL79:
 730 01d8 FFF7FEFF 		bl	printf
 731              	.LVL80:
 104:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 732              		.loc 1 104 0
 733 01dc 404B     		ldr	r3, .L60+56
 734 01de D3ED007A 		vldr.32	s15, [r3]
 735 01e2 404B     		ldr	r3, .L60+60
 736 01e4 93ED000A 		vldr.32	s0, [r3]
 737 01e8 FDEEE77A 		vcvt.s32.f32	s15, s15
 738 01ec 17EE900A 		vmov	r0, s15	@ int
 739 01f0 FFF7FEFF 		bl	_Z2goif
 740              	.LVL81:
 741 01f4 0028     		cmp	r0, #0
 742 01f6 00F04182 		beq	.L20
 106:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 743              		.loc 1 106 0
 744 01fa 0223     		movs	r3, #2
 745 01fc 2370     		strb	r3, [r4]
 107:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 746              		.loc 1 107 0
 747 01fe 314C     		ldr	r4, .L60+28
 748              	.LVL82:
 749 0200 4FF48051 		mov	r1, #4096
 750 0204 2046     		mov	r0, r4
 751 0206 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 752              	.LVL83:
 108:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 753              		.loc 1 108 0
 754 020a 4FF40051 		mov	r1, #8192
 755 020e 2046     		mov	r0, r4
 756 0210 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 757              	.LVL84:
 109:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 758              		.loc 1 109 0
 759 0214 4FF48041 		mov	r1, #16384
 760 0218 2046     		mov	r0, r4
 761 021a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 762              	.LVL85:
 110:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 763              		.loc 1 110 0
 764 021e 4FF40041 		mov	r1, #32768
 765 0222 2046     		mov	r0, r4
 766 0224 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 767              	.LVL86:
 768 0228 28E2     		b	.L20
 769              	.LVL87:
 770              	.L25:
 124:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 771              		.loc 1 124 0
 772 022a 2F48     		ldr	r0, .L60+64
 773              	.LVL88:
 774 022c FFF7FEFF 		bl	printf
 775              	.LVL89:
 126:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 26


 776              		.loc 1 126 0
 777 0230 2C4B     		ldr	r3, .L60+60
 778 0232 93ED010A 		vldr.32	s0, [r3, #4]
 779 0236 6320     		movs	r0, #99
 780 0238 FFF7FEFF 		bl	_Z2goif
 781              	.LVL90:
 127:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 782              		.loc 1 127 0
 783 023c 4FF40061 		mov	r1, #2048
 784 0240 2048     		ldr	r0, .L60+28
 785 0242 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 786              	.LVL91:
 787 0246 68B1     		cbz	r0, .L43
 788              	.LVL92:
 789              	.LBB121:
 790              	.LBB122:
 791              		.file 3 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 27


  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
 792              		.loc 3 45 0
 793 0248 224B     		ldr	r3, .L60+44
 794 024a D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 795              	.LVL93:
 796              	.LBE122:
 797              	.LBE121:
 127:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 798              		.loc 1 127 0
 799 024e F8EEE77A 		vcvt.f32.s32	s15, s15
 800 0252 234B     		ldr	r3, .L60+56
 801 0254 93ED017A 		vldr.32	s14, [r3, #4]
 802 0258 F4EEC77A 		vcmpe.f32	s15, s14
 803 025c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 804 0260 40F30C82 		ble	.L20
 805              	.L43:
 130:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 806              		.loc 1 130 0 discriminator 3
 807 0264 0323     		movs	r3, #3
 808 0266 2370     		strb	r3, [r4]
 131:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 809              		.loc 1 131 0 discriminator 3
 810 0268 1D4B     		ldr	r3, .L60+56
 811 026a D3ED017A 		vldr.32	s15, [r3, #4]
 812 026e FDEEE77A 		vcvt.s32.f32	s15, s15
 813 0272 184A     		ldr	r2, .L60+44
 814 0274 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 132:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 815              		.loc 1 132 0 discriminator 3
 816 0278 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 134:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 817              		.loc 1 134 0 discriminator 3
 818 027c 114C     		ldr	r4, .L60+28
 819              	.LVL94:
 820 027e 4FF48051 		mov	r1, #4096
 821 0282 2046     		mov	r0, r4
 822 0284 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 823              	.LVL95:
 135:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 824              		.loc 1 135 0 discriminator 3
 825 0288 4FF40051 		mov	r1, #8192
 826 028c 2046     		mov	r0, r4
 827 028e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 828              	.LVL96:
 136:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 829              		.loc 1 136 0 discriminator 3
 830 0292 4FF48041 		mov	r1, #16384
 831 0296 2046     		mov	r0, r4
 832 0298 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 833              	.LVL97:
 137:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 834              		.loc 1 137 0 discriminator 3
 835 029c 4FF40041 		mov	r1, #32768
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 28


 836 02a0 2046     		mov	r0, r4
 837 02a2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 838              	.LVL98:
 839 02a6 E9E1     		b	.L20
 840              	.L61:
 841              		.align	2
 842              	.L60:
 843 02a8 00000000 		.word	.LANCHOR1
 844 02ac 00000000 		.word	.LANCHOR4
 845 02b0 00080240 		.word	1073874944
 846 02b4 00000240 		.word	1073872896
 847 02b8 00000000 		.word	curr_angle
 848 02bc 00000000 		.word	initial_angle
 849 02c0 00000000 		.word	.LC8
 850 02c4 000C0240 		.word	1073875968
 851 02c8 00000000 		.word	.LANCHOR5
 852 02cc 00000000 		.word	.LANCHOR6
 853 02d0 00000000 		.word	0
 854 02d4 00000000 		.word	leg
 855 02d8 00000000 		.word	steering
 856 02dc 14000000 		.word	.LC9
 857 02e0 00000000 		.word	.LANCHOR2
 858 02e4 00000000 		.word	.LANCHOR3
 859 02e8 1C000000 		.word	.LC10
 860              	.LVL99:
 861              	.L26:
 148:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 862              		.loc 1 148 0
 863 02ec BA48     		ldr	r0, .L62+8
 864              	.LVL100:
 865 02ee FFF7FEFF 		bl	printf
 866              	.LVL101:
 150:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 867              		.loc 1 150 0
 868 02f2 BA4B     		ldr	r3, .L62+12
 869 02f4 93ED020A 		vldr.32	s0, [r3, #8]
 870 02f8 6420     		movs	r0, #100
 871 02fa FFF7FEFF 		bl	_Z2goif
 872              	.LVL102:
 151:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 873              		.loc 1 151 0
 874 02fe 4FF48071 		mov	r1, #256
 875 0302 B748     		ldr	r0, .L62+16
 876 0304 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 877              	.LVL103:
 878 0308 80B9     		cbnz	r0, .L45
 879              	.LVL104:
 880              	.LBB123:
 881              	.LBB124:
 882              		.loc 3 45 0
 883 030a B64B     		ldr	r3, .L62+20
 884 030c 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 885              	.LVL105:
 886              	.LBE124:
 887              	.LBE123:
 151:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 888              		.loc 1 151 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 29


 889 0310 B8EEC77A 		vcvt.f32.s32	s14, s14
 890 0314 B44B     		ldr	r3, .L62+24
 891 0316 D3ED027A 		vldr.32	s15, [r3, #8]
 892 031a F7EE006A 		vmov.f32	s13, #1.0e+0
 893 031e 77EEE67A 		vsub.f32	s15, s15, s13
 894 0322 B4EEE77A 		vcmpe.f32	s14, s15
 895 0326 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 896 032a 0DDC     		bgt	.L46
 897              	.L45:
 898              	.LVL106:
 899              	.LBB125:
 900              	.LBB126:
 901              		.loc 3 45 0 discriminator 4
 902 032c AD4B     		ldr	r3, .L62+20
 903 032e D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 904              	.LVL107:
 905              	.LBE126:
 906              	.LBE125:
 151:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 907              		.loc 1 151 0 discriminator 4
 908 0332 F8EEE77A 		vcvt.f32.s32	s15, s15
 909 0336 AC4B     		ldr	r3, .L62+24
 910 0338 93ED027A 		vldr.32	s14, [r3, #8]
 911 033c F4EEC77A 		vcmpe.f32	s15, s14
 912 0340 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 913 0344 40F39A81 		ble	.L20
 914              	.L46:
 154:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 915              		.loc 1 154 0 discriminator 5
 916 0348 0423     		movs	r3, #4
 917 034a 2370     		strb	r3, [r4]
 155:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 918              		.loc 1 155 0 discriminator 5
 919 034c A64B     		ldr	r3, .L62+24
 920 034e D3ED027A 		vldr.32	s15, [r3, #8]
 921 0352 FDEEE77A 		vcvt.s32.f32	s15, s15
 922 0356 A34A     		ldr	r2, .L62+20
 923 0358 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 156:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 924              		.loc 1 156 0 discriminator 5
 925 035c C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 158:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 926              		.loc 1 158 0 discriminator 5
 927 0360 9F4C     		ldr	r4, .L62+16
 928              	.LVL108:
 929 0362 4FF48051 		mov	r1, #4096
 930 0366 2046     		mov	r0, r4
 931 0368 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 932              	.LVL109:
 159:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 933              		.loc 1 159 0 discriminator 5
 934 036c 4FF40051 		mov	r1, #8192
 935 0370 2046     		mov	r0, r4
 936 0372 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 937              	.LVL110:
 160:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 938              		.loc 1 160 0 discriminator 5
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 30


 939 0376 4FF48041 		mov	r1, #16384
 940 037a 2046     		mov	r0, r4
 941 037c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 942              	.LVL111:
 161:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 943              		.loc 1 161 0 discriminator 5
 944 0380 4FF40041 		mov	r1, #32768
 945 0384 2046     		mov	r0, r4
 946 0386 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 947              	.LVL112:
 948 038a 77E1     		b	.L20
 949              	.LVL113:
 950              	.L27:
 172:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 951              		.loc 1 172 0
 952 038c 9748     		ldr	r0, .L62+28
 953              	.LVL114:
 954 038e FFF7FEFF 		bl	printf
 955              	.LVL115:
 173:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 956              		.loc 1 173 0
 957 0392 954B     		ldr	r3, .L62+24
 958 0394 D3ED037A 		vldr.32	s15, [r3, #12]
 959 0398 904B     		ldr	r3, .L62+12
 960 039a 93ED030A 		vldr.32	s0, [r3, #12]
 961 039e FDEEE77A 		vcvt.s32.f32	s15, s15
 962 03a2 17EE900A 		vmov	r0, s15	@ int
 963 03a6 FFF7FEFF 		bl	_Z2goif
 964              	.LVL116:
 965 03aa 0028     		cmp	r0, #0
 966 03ac 00F06681 		beq	.L20
 175:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 967              		.loc 1 175 0
 968 03b0 0523     		movs	r3, #5
 969 03b2 2370     		strb	r3, [r4]
 177:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 970              		.loc 1 177 0
 971 03b4 8A4C     		ldr	r4, .L62+16
 972              	.LVL117:
 973 03b6 4FF48051 		mov	r1, #4096
 974 03ba 2046     		mov	r0, r4
 975 03bc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 976              	.LVL118:
 178:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 977              		.loc 1 178 0
 978 03c0 4FF40051 		mov	r1, #8192
 979 03c4 2046     		mov	r0, r4
 980 03c6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 981              	.LVL119:
 179:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 982              		.loc 1 179 0
 983 03ca 4FF48041 		mov	r1, #16384
 984 03ce 2046     		mov	r0, r4
 985 03d0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 986              	.LVL120:
 180:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 987              		.loc 1 180 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 31


 988 03d4 4FF40041 		mov	r1, #32768
 989 03d8 2046     		mov	r0, r4
 990 03da FFF7FEFF 		bl	HAL_GPIO_TogglePin
 991              	.LVL121:
 992 03de 4DE1     		b	.L20
 993              	.LVL122:
 994              	.L28:
 191:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 995              		.loc 1 191 0
 996 03e0 8348     		ldr	r0, .L62+32
 997              	.LVL123:
 998 03e2 FFF7FEFF 		bl	printf
 999              	.LVL124:
 192:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 1000              		.loc 1 192 0
 1001 03e6 804B     		ldr	r3, .L62+24
 1002 03e8 D3ED047A 		vldr.32	s15, [r3, #16]
 1003 03ec 7B4B     		ldr	r3, .L62+12
 1004 03ee 93ED040A 		vldr.32	s0, [r3, #16]
 1005 03f2 FDEEE77A 		vcvt.s32.f32	s15, s15
 1006 03f6 17EE900A 		vmov	r0, s15	@ int
 1007 03fa FFF7FEFF 		bl	_Z2goif
 1008              	.LVL125:
 1009 03fe 0028     		cmp	r0, #0
 1010 0400 00F03C81 		beq	.L20
 194:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 1011              		.loc 1 194 0
 1012 0404 0623     		movs	r3, #6
 1013 0406 2370     		strb	r3, [r4]
 196:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1014              		.loc 1 196 0
 1015 0408 754C     		ldr	r4, .L62+16
 1016              	.LVL126:
 1017 040a 4FF48051 		mov	r1, #4096
 1018 040e 2046     		mov	r0, r4
 1019 0410 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1020              	.LVL127:
 197:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1021              		.loc 1 197 0
 1022 0414 4FF40051 		mov	r1, #8192
 1023 0418 2046     		mov	r0, r4
 1024 041a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1025              	.LVL128:
 198:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1026              		.loc 1 198 0
 1027 041e 4FF48041 		mov	r1, #16384
 1028 0422 2046     		mov	r0, r4
 1029 0424 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1030              	.LVL129:
 199:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1031              		.loc 1 199 0
 1032 0428 4FF40041 		mov	r1, #32768
 1033 042c 2046     		mov	r0, r4
 1034 042e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1035              	.LVL130:
 1036 0432 23E1     		b	.L20
 1037              	.LVL131:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 32


 1038              	.L29:
 1039              	.LBB127:
 211:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 1040              		.loc 1 211 0
 1041 0434 6F48     		ldr	r0, .L62+36
 1042              	.LVL132:
 1043 0436 FFF7FEFF 		bl	printf
 1044              	.LVL133:
 212:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG){
 1045              		.loc 1 212 0
 1046 043a 6F4B     		ldr	r3, .L62+40
 1047 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 043e 93B9     		cbnz	r3, .L48
 213:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 1049              		.loc 1 213 0
 1050 0440 694B     		ldr	r3, .L62+24
 1051 0442 D3ED057A 		vldr.32	s15, [r3, #20]
 1052 0446 654B     		ldr	r3, .L62+12
 1053 0448 93ED050A 		vldr.32	s0, [r3, #20]
 1054 044c FDEEE77A 		vcvt.s32.f32	s15, s15
 1055 0450 17EE900A 		vmov	r0, s15	@ int
 1056 0454 FFF7FEFF 		bl	_Z2goif
 1057              	.LVL134:
 1058 0458 0028     		cmp	r0, #0
 1059 045a 00F00F81 		beq	.L20
 215:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 1060              		.loc 1 215 0
 1061 045e 664B     		ldr	r3, .L62+40
 1062 0460 0122     		movs	r2, #1
 1063 0462 1A70     		strb	r2, [r3]
 1064 0464 0AE1     		b	.L20
 1065              	.L48:
 219:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1066              		.loc 1 219 0
 1067 0466 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1068              	.LVL135:
 1069 046a 0028     		cmp	r0, #0
 1070 046c 00F00681 		beq	.L20
 221:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1071              		.loc 1 221 0
 1072 0470 0723     		movs	r3, #7
 1073 0472 2370     		strb	r3, [r4]
 222:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 1074              		.loc 1 222 0
 1075 0474 614B     		ldr	r3, .L62+44
 1076 0476 0022     		movs	r2, #0
 1077 0478 1A70     		strb	r2, [r3]
 223:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1078              		.loc 1 223 0
 1079 047a 594C     		ldr	r4, .L62+16
 1080              	.LVL136:
 1081 047c 4FF48051 		mov	r1, #4096
 1082 0480 2046     		mov	r0, r4
 1083 0482 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1084              	.LVL137:
 224:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1085              		.loc 1 224 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 33


 1086 0486 4FF40051 		mov	r1, #8192
 1087 048a 2046     		mov	r0, r4
 1088 048c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1089              	.LVL138:
 225:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1090              		.loc 1 225 0
 1091 0490 4FF48041 		mov	r1, #16384
 1092 0494 2046     		mov	r0, r4
 1093 0496 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1094              	.LVL139:
 226:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1095              		.loc 1 226 0
 1096 049a 4FF40041 		mov	r1, #32768
 1097 049e 2046     		mov	r0, r4
 1098 04a0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1099              	.LVL140:
 1100 04a4 EAE0     		b	.L20
 1101              	.LVL141:
 1102              	.L30:
 1103              	.LBE127:
 237:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1104              		.loc 1 237 0
 1105 04a6 5648     		ldr	r0, .L62+48
 1106              	.LVL142:
 1107 04a8 FFF7FEFF 		bl	printf
 1108              	.LVL143:
 238:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1109              		.loc 1 238 0
 1110 04ac 9FED558A 		vldr.32	s16, .L62+52
 1111 04b0 4C4D     		ldr	r5, .L62+20
 1112 04b2 B0EE480A 		vmov.f32	s0, s16
 1113 04b6 2846     		mov	r0, r5
 1114 04b8 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1115              	.LVL144:
 239:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1116              		.loc 1 239 0
 1117 04bc B0EE480A 		vmov.f32	s0, s16
 1118 04c0 05F15800 		add	r0, r5, #88
 1119 04c4 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1120              	.LVL145:
 240:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1121              		.loc 1 240 0
 1122 04c8 B0EE480A 		vmov.f32	s0, s16
 1123 04cc 4E48     		ldr	r0, .L62+56
 1124 04ce FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1125              	.LVL146:
 241:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 1126              		.loc 1 241 0
 1127 04d2 4FF40061 		mov	r1, #2048
 1128 04d6 4248     		ldr	r0, .L62+16
 1129 04d8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1130              	.LVL147:
 243:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1131              		.loc 1 243 0
 1132 04dc 98BB     		cbnz	r0, .L59
 1133              	.L49:
 243:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 34


 1134              		.loc 1 243 0 is_stmt 0 discriminator 1
 1135 04de 474B     		ldr	r3, .L62+44
 1136 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 04e2 002B     		cmp	r3, #0
 1138 04e4 00F0CA80 		beq	.L20
 245:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1139              		.loc 1 245 0 is_stmt 1
 1140 04e8 0823     		movs	r3, #8
 1141 04ea 2370     		strb	r3, [r4]
 246:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1142              		.loc 1 246 0
 1143 04ec 474B     		ldr	r3, .L62+60
 1144 04ee 93ED007A 		vldr.32	s14, [r3]
 1145 04f2 DFED477A 		vldr.32	s15, .L62+64
 1146 04f6 67EE277A 		vmul.f32	s15, s14, s15
 1147 04fa 17EE900A 		vmov	r0, s15
 1148 04fe FFF7FEFF 		bl	__aeabi_f2d
 1149              	.LVL148:
 1150 0502 33A3     		adr	r3, .L62
 1151 0504 D3E90023 		ldrd	r2, [r3]
 1152 0508 FFF7FEFF 		bl	__aeabi_ddiv
 1153              	.LVL149:
 1154 050c FFF7FEFF 		bl	__aeabi_d2f
 1155              	.LVL150:
 1156 0510 324B     		ldr	r3, .L62+12
 1157 0512 9861     		str	r0, [r3, #24]	@ float
 247:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1158              		.loc 1 247 0
 1159 0514 394B     		ldr	r3, .L62+44
 1160 0516 0022     		movs	r2, #0
 1161 0518 1A70     		strb	r2, [r3]
 249:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1162              		.loc 1 249 0
 1163 051a 314C     		ldr	r4, .L62+16
 1164              	.LVL151:
 1165 051c 4FF48051 		mov	r1, #4096
 1166 0520 2046     		mov	r0, r4
 1167 0522 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1168              	.LVL152:
 250:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1169              		.loc 1 250 0
 1170 0526 4FF40051 		mov	r1, #8192
 1171 052a 2046     		mov	r0, r4
 1172 052c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1173              	.LVL153:
 251:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1174              		.loc 1 251 0
 1175 0530 4FF48041 		mov	r1, #16384
 1176 0534 2046     		mov	r0, r4
 1177 0536 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1178              	.LVL154:
 252:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1179              		.loc 1 252 0
 1180 053a 4FF40041 		mov	r1, #32768
 1181 053e 2046     		mov	r0, r4
 1182 0540 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1183              	.LVL155:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 35


 1184 0544 9AE0     		b	.L20
 1185              	.LVL156:
 1186              	.L59:
 242:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1187              		.loc 1 242 0
 1188 0546 4FF48071 		mov	r1, #256
 1189 054a 2548     		ldr	r0, .L62+16
 1190 054c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1191              	.LVL157:
 241:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) ||
 1192              		.loc 1 241 0
 1193 0550 0028     		cmp	r0, #0
 1194 0552 C4D0     		beq	.L49
 243:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) && ROBOT_STAR
 1195              		.loc 1 243 0
 1196 0554 4FF48061 		mov	r1, #1024
 1197 0558 2148     		ldr	r0, .L62+16
 1198 055a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1199              	.LVL158:
 242:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1200              		.loc 1 242 0
 1201 055e 0028     		cmp	r0, #0
 1202 0560 BDD0     		beq	.L49
 1203 0562 8BE0     		b	.L20
 1204              	.LVL159:
 1205              	.L31:
 1206              	.LBB128:
 263:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 1207              		.loc 1 263 0
 1208 0564 2B48     		ldr	r0, .L62+68
 1209              	.LVL160:
 1210 0566 FFF7FEFF 		bl	printf
 1211              	.LVL161:
 264:Core/Src/robot/robot.cpp **** 		if(!INITIALIZATION_FLAG_2){
 1212              		.loc 1 264 0
 1213 056a 2B4B     		ldr	r3, .L62+72
 1214 056c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1215 056e 8BB9     		cbnz	r3, .L50
 265:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 1216              		.loc 1 265 0
 1217 0570 1D4B     		ldr	r3, .L62+24
 1218 0572 D3ED067A 		vldr.32	s15, [r3, #24]
 1219 0576 194B     		ldr	r3, .L62+12
 1220 0578 93ED060A 		vldr.32	s0, [r3, #24]
 1221 057c FDEEE77A 		vcvt.s32.f32	s15, s15
 1222 0580 17EE900A 		vmov	r0, s15	@ int
 1223 0584 FFF7FEFF 		bl	_Z2goif
 1224              	.LVL162:
 1225 0588 0028     		cmp	r0, #0
 1226 058a 77D0     		beq	.L20
 267:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1227              		.loc 1 267 0
 1228 058c 224B     		ldr	r3, .L62+72
 1229 058e 0122     		movs	r2, #1
 1230 0590 1A70     		strb	r2, [r3]
 1231 0592 73E0     		b	.L20
 1232              	.L50:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 36


 271:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1233              		.loc 1 271 0
 1234 0594 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1235              	.LVL163:
 1236 0598 0028     		cmp	r0, #0
 1237 059a 6FD0     		beq	.L20
 273:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1238              		.loc 1 273 0
 1239 059c 0923     		movs	r3, #9
 1240 059e 2370     		strb	r3, [r4]
 274:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1241              		.loc 1 274 0
 1242 05a0 0F4C     		ldr	r4, .L62+16
 1243              	.LVL164:
 1244 05a2 4FF48051 		mov	r1, #4096
 1245 05a6 2046     		mov	r0, r4
 1246 05a8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1247              	.LVL165:
 275:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1248              		.loc 1 275 0
 1249 05ac 4FF40051 		mov	r1, #8192
 1250 05b0 2046     		mov	r0, r4
 1251 05b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1252              	.LVL166:
 276:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1253              		.loc 1 276 0
 1254 05b6 4FF48041 		mov	r1, #16384
 1255 05ba 2046     		mov	r0, r4
 1256 05bc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1257              	.LVL167:
 277:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1258              		.loc 1 277 0
 1259 05c0 4FF40041 		mov	r1, #32768
 1260 05c4 2046     		mov	r0, r4
 1261 05c6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1262              	.LVL168:
 1263 05ca 57E0     		b	.L20
 1264              	.L63:
 1265 05cc AFF30080 		.align	3
 1266              	.L62:
 1267 05d0 182D4454 		.word	1413754136
 1268 05d4 FB210940 		.word	1074340347
 1269 05d8 28000000 		.word	.LC11
 1270 05dc 00000000 		.word	.LANCHOR3
 1271 05e0 000C0240 		.word	1073875968
 1272 05e4 00000000 		.word	leg
 1273 05e8 00000000 		.word	.LANCHOR2
 1274 05ec 34000000 		.word	.LC12
 1275 05f0 40000000 		.word	.LC13
 1276 05f4 4C000000 		.word	.LC14
 1277 05f8 00000000 		.word	.LANCHOR7
 1278 05fc 00000000 		.word	.LANCHOR1
 1279 0600 58000000 		.word	.LC15
 1280 0604 00000000 		.word	0
 1281 0608 00000000 		.word	steering
 1282 060c 00000000 		.word	robot_angle
 1283 0610 00003443 		.word	1127481344
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 37


 1284 0614 64000000 		.word	.LC16
 1285 0618 00000000 		.word	.LANCHOR8
 1286              	.LVL169:
 1287              	.L32:
 1288              	.LBE128:
 288:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1289              		.loc 1 288 0
 1290 061c 2248     		ldr	r0, .L64
 1291              	.LVL170:
 1292 061e FFF7FEFF 		bl	puts
 1293              	.LVL171:
 289:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);  
 1294              		.loc 1 289 0
 1295 0622 9FED228A 		vldr.32	s16, .L64+4
 1296 0626 224C     		ldr	r4, .L64+8
 1297              	.LVL172:
 1298 0628 B0EE480A 		vmov.f32	s0, s16
 1299 062c 2046     		mov	r0, r4
 1300 062e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1301              	.LVL173:
 290:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1302              		.loc 1 290 0
 1303 0632 B0EE480A 		vmov.f32	s0, s16
 1304 0636 04F15800 		add	r0, r4, #88
 1305 063a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1306              	.LVL174:
 291:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1307              		.loc 1 291 0
 1308 063e B0EE480A 		vmov.f32	s0, s16
 1309 0642 1C48     		ldr	r0, .L64+12
 1310 0644 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1311              	.LVL175:
 293:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1312              		.loc 1 293 0
 1313 0648 1B4C     		ldr	r4, .L64+16
 1314 064a 4FF48051 		mov	r1, #4096
 1315 064e 2046     		mov	r0, r4
 1316 0650 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1317              	.LVL176:
 294:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1318              		.loc 1 294 0
 1319 0654 4FF40051 		mov	r1, #8192
 1320 0658 2046     		mov	r0, r4
 1321 065a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1322              	.LVL177:
 295:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1323              		.loc 1 295 0
 1324 065e 4FF48041 		mov	r1, #16384
 1325 0662 2046     		mov	r0, r4
 1326 0664 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1327              	.LVL178:
 296:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1328              		.loc 1 296 0
 1329 0668 4FF40041 		mov	r1, #32768
 1330 066c 2046     		mov	r0, r4
 1331 066e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1332              	.LVL179:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 38


 297:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1333              		.loc 1 297 0
 1334 0672 0122     		movs	r2, #1
 1335 0674 0421     		movs	r1, #4
 1336 0676 1148     		ldr	r0, .L64+20
 1337 0678 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1338              	.LVL180:
 1339              	.L20:
 1340              	.LBE95:
 1341              	.LBE94:
 307:Core/Src/robot/robot.cpp **** }
 1342              		.loc 1 307 0
 1343 067c 05B0     		add	sp, sp, #20
 1344              	.LCFI4:
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 20
 1347              		@ sp needed
 1348 067e BDEC028B 		vldm	sp!, {d8}
 1349              	.LCFI5:
 1350              		.cfi_restore 80
 1351              		.cfi_restore 81
 1352              		.cfi_def_cfa_offset 12
 1353 0682 30BD     		pop	{r4, r5, pc}
 1354              	.LVL181:
 1355              	.L33:
 1356              	.LCFI6:
 1357              		.cfi_restore_state
 1358              	.LBB130:
 1359              	.LBB129:
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1360              		.loc 1 302 0
 1361 0684 0A4C     		ldr	r4, .L64+8
 1362 0686 B2EE040A 		vmov.f32	s0, #1.0e+1
 1363 068a 2046     		mov	r0, r4
 1364              	.LVL182:
 1365 068c FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1366              	.LVL183:
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1367              		.loc 1 303 0
 1368 0690 B2EE040A 		vmov.f32	s0, #1.0e+1
 1369 0694 04F15800 		add	r0, r4, #88
 1370 0698 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1371              	.LVL184:
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1372              		.loc 1 304 0
 1373 069c 9FED030A 		vldr.32	s0, .L64+4
 1374 06a0 0448     		ldr	r0, .L64+12
 1375 06a2 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1376              	.LVL185:
 1377              	.LBE129:
 1378              	.LBE130:
 307:Core/Src/robot/robot.cpp **** }
 1379              		.loc 1 307 0
 1380 06a6 E9E7     		b	.L20
 1381              	.L65:
 1382              		.align	2
 1383              	.L64:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 39


 1384 06a8 70000000 		.word	.LC17
 1385 06ac 00000000 		.word	0
 1386 06b0 00000000 		.word	leg
 1387 06b4 00000000 		.word	steering
 1388 06b8 000C0240 		.word	1073875968
 1389 06bc 00000240 		.word	1073872896
 1390              		.cfi_endproc
 1391              	.LFE503:
 1393              		.section	.text._Z4playv,"ax",%progbits
 1394              		.align	1
 1395              		.global	_Z4playv
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv4-sp-d16
 1401              	_Z4playv:
 1402              	.LFB504:
 310:Core/Src/robot/robot.cpp **** {
 1403              		.loc 1 310 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407 0000 10B5     		push	{r4, lr}
 1408              	.LCFI7:
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 4, -8
 1411              		.cfi_offset 14, -4
 311:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1412              		.loc 1 311 0
 1413 0002 0948     		ldr	r0, .L68
 1414 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1415              	.LVL186:
 1416              	.LBB131:
 1417              	.LBB132:
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1418              		.loc 3 46 0
 1419 0008 084C     		ldr	r4, .L68+4
 1420 000a 2046     		mov	r0, r4
 1421 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1422              	.LVL187:
 1423              	.LBE132:
 1424              	.LBE131:
 312:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1425              		.loc 1 312 0
 1426 0010 074B     		ldr	r3, .L68+8
 1427 0012 83ED000A 		vstr.32	s0, [r3]
 1428              	.LVL188:
 1429              	.LBB133:
 1430              	.LBB134:
 1431              		.loc 3 46 0
 1432 0016 04F15800 		add	r0, r4, #88
 1433 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1434              	.LVL189:
 1435              	.LBE134:
 1436              	.LBE133:
 313:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1437              		.loc 1 313 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 40


 1438 001e 054B     		ldr	r3, .L68+12
 1439 0020 83ED000A 		vstr.32	s0, [r3]
 315:Core/Src/robot/robot.cpp **** }
 1440              		.loc 1 315 0
 1441 0024 0120     		movs	r0, #1
 1442 0026 10BD     		pop	{r4, pc}
 1443              	.L69:
 1444              		.align	2
 1445              	.L68:
 1446 0028 00000000 		.word	.LANCHOR0
 1447 002c 3C000000 		.word	leg+60
 1448 0030 00000000 		.word	.LANCHOR9
 1449 0034 00000000 		.word	.LANCHOR10
 1450              		.cfi_endproc
 1451              	.LFE504:
 1453              		.global	angles
 1454              		.global	steps
 1455              		.global	omega1
 1456              		.global	omega0
 1457              		.global	USE_IMU_FLAG
 1458              		.global	GEREGE_FLAG
 1459              		.global	ROBOT_START_FLAG
 1460              		.global	robo_state
 1461              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1464              	GEREGE_FLAG:
 1465 0000 00       		.space	1
 1466              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1467              		.set	.LANCHOR1,. + 0
 1470              	ROBOT_START_FLAG:
 1471 0000 00       		.space	1
 1472              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1473              		.align	2
 1474              		.set	.LANCHOR5,. + 0
 1477              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1478 0000 00000000 		.space	4
 1479              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
 1480              		.set	.LANCHOR7,. + 0
 1483              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1484 0000 00       		.space	1
 1485              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1486              		.set	.LANCHOR8,. + 0
 1489              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1490 0000 00       		.space	1
 1491              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1492              		.align	2
 1493              		.set	.LANCHOR6,. + 0
 1496              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1497 0000 00000000 		.space	4
 1498              		.section	.bss.omega0,"aw",%nobits
 1499              		.align	2
 1500              		.set	.LANCHOR9,. + 0
 1503              	omega0:
 1504 0000 00000000 		.space	4
 1505              		.section	.bss.omega1,"aw",%nobits
 1506              		.align	2
 1507              		.set	.LANCHOR10,. + 0
 1510              	omega1:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 41


 1511 0000 00000000 		.space	4
 1512              		.section	.bss.robo_state,"aw",%nobits
 1513              		.set	.LANCHOR0,. + 0
 1516              	robo_state:
 1517 0000 00       		.space	1
 1518              		.section	.data.USE_IMU_FLAG,"aw",%progbits
 1521              	USE_IMU_FLAG:
 1522 0000 01       		.byte	1
 1523              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1524              		.set	.LANCHOR4,. + 0
 1527              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1528 0000 01       		.byte	1
 1529              		.section	.data.angles,"aw",%progbits
 1530              		.align	2
 1531              		.set	.LANCHOR3,. + 0
 1534              	angles:
 1535 0000 00000000 		.word	0
 1536 0004 00003442 		.word	1110704128
 1537 0008 00003442 		.word	1110704128
 1538 000c 00005C42 		.word	1113325568
 1539 0010 0000A0C1 		.word	-1046478848
 1540 0014 00000000 		.word	0
 1541 0018 0000B4C2 		.word	-1028390912
 1542              		.section	.data.steps,"aw",%progbits
 1543              		.align	2
 1544              		.set	.LANCHOR2,. + 0
 1547              	steps:
 1548 0000 0000A040 		.word	1084227584
 1549 0004 00001041 		.word	1091567616
 1550 0008 00005041 		.word	1095761920
 1551 000c 00007041 		.word	1097859072
 1552 0010 0000A041 		.word	1101004800
 1553 0014 0000B041 		.word	1102053376
 1554 0018 0000E841 		.word	1105723392
 1555              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
 1556              		.align	2
 1557              	.LC8:
 1558 0000 0A0A456E 		.ascii	"\012\012Entered here!!\012\000"
 1558      74657265 
 1558      64206865 
 1558      72652121 
 1558      0A00
 1559 0012 0000     		.space	2
 1560              	.LC9:
 1561 0014 0A4D6172 		.ascii	"\012March\000"
 1561      636800
 1562 001b 00       		.space	1
 1563              	.LC10:
 1564 001c 0A547572 		.ascii	"\012Turn 45\000"
 1564      6E203435 
 1564      00
 1565 0025 000000   		.space	3
 1566              	.LC11:
 1567 0028 0A53616E 		.ascii	"\012Sand dune\000"
 1567      64206475 
 1567      6E6500
 1568 0033 00       		.space	1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 42


 1569              	.LC12:
 1570 0034 0A537461 		.ascii	"\012State D\000"
 1570      74652044 
 1570      00
 1571 003d 000000   		.space	3
 1572              	.LC13:
 1573 0040 0A547572 		.ascii	"\012Turn 90\000"
 1573      6E203930 
 1573      00
 1574 0049 000000   		.space	3
 1575              	.LC14:
 1576 004c 0A547573 		.ascii	"\012Tussock\000"
 1576      736F636B 
 1576      00
 1577 0055 000000   		.space	3
 1578              	.LC15:
 1579 0058 0A426173 		.ascii	"\012Base camp\000"
 1579      65206361 
 1579      6D7000
 1580 0063 00       		.space	1
 1581              	.LC16:
 1582 0064 0A4D4F55 		.ascii	"\012MOUNTAIN\000"
 1582      4E544149 
 1582      4E00
 1583 006e 0000     		.space	2
 1584              	.LC17:
 1585 0070 0A55554B 		.ascii	"\012UUKHAI\000"
 1585      48414900 
 1586              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1587              		.align	2
 1588              	.LC0:
 1589 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1589      6F6E6520 
 1589      4D415243 
 1589      4800
 1590 000e 0000     		.space	2
 1591              	.LC1:
 1592 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1592      6F6E6520 
 1592      343500
 1593 001b 00       		.space	1
 1594              	.LC2:
 1595 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
 1595      6F6E6520 
 1595      53414E44 
 1595      5F44554E 
 1595      4500
 1596 002e 0000     		.space	2
 1597              	.LC3:
 1598 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
 1598      6F6E6520 
 1598      4D4F554E 
 1598      5441494E 
 1598      00
 1599 0041 000000   		.space	3
 1600              	.LC4:
 1601 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 43


 1601      6F6E6520 
 1601      44656661 
 1601      756C7400 
 1602              	.LC5:
 1603 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1603      6F6E6520 
 1603      52454400 
 1604              	.LC6:
 1605 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1605      6F6E6520 
 1605      424C5545 
 1605      00
 1606 006d 000000   		.space	3
 1607              	.LC7:
 1608 0070 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1608      6F6E6520 
 1608      44656661 
 1608      756C745F 
 1608      52454400 
 1609              		.text
 1610              	.Letext0:
 1611              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1612              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1613              		.file 6 "Core/Inc/sys/FreeRTOSConfig.h"
 1614              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 1615              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1616              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1617              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1618              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1619              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1620              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1621              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1622              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1623              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1624              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1625              		.file 18 "Core/Inc/periphs/tim.h"
 1626              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1627              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1628              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1629              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1630              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1631              		.file 24 "Core/Inc/devs/motor.h"
 1632              		.file 25 "Core/Inc/devs/encoder.h"
 1633              		.file 26 "Core/Inc/utils/pid_algorithms.h"
 1634              		.file 27 "Core/Inc/devs/limit_switch.h"
 1635              		.file 28 "Core/Inc/devs/steering.h"
 1636              		.file 29 "Core/Inc/robot/robot.h"
 1637              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1638              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1639              		.file 32 "Core/Inc/robot/robot_functions.h"
 1640              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:307    .text._Z11zone_selectv:00000184 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:328    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:335    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:361    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:368    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:397    .text._Z11start_RobotP12Robot_States:00000016 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:408    .text._Z11start_RobotP12Robot_States:0000002c $t
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:843    .text._Z11start_RobotP12Robot_States:000002a8 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:863    .text._Z11start_RobotP12Robot_States:000002ec $t
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1267   .text._Z11start_RobotP12Robot_States:000005d0 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1290   .text._Z11start_RobotP12Robot_States:0000061c $t
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1384   .text._Z11start_RobotP12Robot_States:000006a8 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1394   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1401   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1446   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1534   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1547   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1510   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1503   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1521   .data.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1464   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1470   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1516   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1465   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1471   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1473   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1477   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1483   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1484   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1489   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1490   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1492   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1496   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1499   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1506   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1517   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1527   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1530   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1543   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1556   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s:1587   .rodata._Z11zone_selectv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
HAL_GPIO_WritePin
_Z11getup_n_runv
puts
HAL_GetTick
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccpcjWAZ.s 			page 45


__cxa_guard_acquire
__cxa_guard_release
_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
_Z2goif
HAL_GPIO_TogglePin
curr_angle
initial_angle
steering
_Z23initialize_leg_positionv
robot_angle
_ZN8steering9set_omegaEf
_ZN7encoder9get_omegaEv
