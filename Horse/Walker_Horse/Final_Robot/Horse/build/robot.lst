ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robot.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z11zone_selectv,"ax",%progbits
  18              		.align	1
  19              		.global	_Z11zone_selectv
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z11zone_selectv:
  26              	.LFB499:
  27              		.file 1 "Core/Src/robot/robot.cpp"
   1:Core/Src/robot/robot.cpp **** #include "cmsis_os.h"
   2:Core/Src/robot/robot.cpp **** #include "robot.h"
   3:Core/Src/robot/robot.cpp **** 
   4:Core/Src/robot/robot.cpp **** extern leg leg[2];
   5:Core/Src/robot/robot.cpp **** extern steering steering;
   6:Core/Src/robot/robot.cpp **** 
   7:Core/Src/robot/robot.cpp **** extern Vec3<float> initial_angle;
   8:Core/Src/robot/robot.cpp **** extern Vec3<float> curr_angle;
   9:Core/Src/robot/robot.cpp **** extern float robot_angle;
  10:Core/Src/robot/robot.cpp **** Robot_States robo_state;
  11:Core/Src/robot/robot.cpp **** 
  12:Core/Src/robot/robot.cpp **** bool ROBOT_START_FLAG = false;
  13:Core/Src/robot/robot.cpp **** bool GEREGE_FLAG = false;
  14:Core/Src/robot/robot.cpp **** bool USE_IMU_FLAG = true;
  15:Core/Src/robot/robot.cpp **** float omega0 = 0;
  16:Core/Src/robot/robot.cpp **** float omega1 = 0;
  17:Core/Src/robot/robot.cpp **** 
  18:Core/Src/robot/robot.cpp **** float steps[7] = {6, 10, 14, 16, 21, 24, 31};
  19:Core/Src/robot/robot.cpp **** float angles[7] = {0, 45, 45, 60, -10, 0, -90};
  20:Core/Src/robot/robot.cpp **** 
  21:Core/Src/robot/robot.cpp **** void start_Robot(enum Robot_States *state_)
  22:Core/Src/robot/robot.cpp **** {
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
  24:Core/Src/robot/robot.cpp **** 	{
  25:Core/Src/robot/robot.cpp **** 	case HOME:
  26:Core/Src/robot/robot.cpp **** 	{
  27:Core/Src/robot/robot.cpp **** 		/**
  28:Core/Src/robot/robot.cpp **** 		 * vitra ko khutta tala teknaparcha
  29:Core/Src/robot/robot.cpp **** 		 * baira ko khutta mathi teknaparcha
  30:Core/Src/robot/robot.cpp **** 		 * steering IR navetinjel ghumaunaparcha
  31:Core/Src/robot/robot.cpp **** 		 * tespachi stop vaera bascha
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 2


  32:Core/Src/robot/robot.cpp **** 		 * user button thichesi this state ends 
  33:Core/Src/robot/robot.cpp **** 		 *  state_A flag set garnaparcha 
  34:Core/Src/robot/robot.cpp **** 			*/
  35:Core/Src/robot/robot.cpp **** 
  36:Core/Src/robot/robot.cpp **** 		static bool INITIAL_ANGLE_FLAG = true;
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
  39:Core/Src/robot/robot.cpp **** 		{
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
  41:Core/Src/robot/robot.cpp **** 		}
  42:Core/Src/robot/robot.cpp **** 		else
  43:Core/Src/robot/robot.cpp **** 		{
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
  46:Core/Src/robot/robot.cpp **** 		}
  47:Core/Src/robot/robot.cpp **** 		// printf("steering_angle = %d \t", (int)(steering.get_angle()*1800/PI));
  48:Core/Src/robot/robot.cpp **** 
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
  50:Core/Src/robot/robot.cpp **** 		{
  51:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  52:Core/Src/robot/robot.cpp **** 			initial_angle.setZ(initial_angle.getZ());
  53:Core/Src/robot/robot.cpp **** 			printf("\t%d\t", (int)initial_angle.getZ());
  54:Core/Src/robot/robot.cpp **** 		}
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
  56:Core/Src/robot/robot.cpp **** 		{
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
  59:Core/Src/robot/robot.cpp **** 		}
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
  66:Core/Src/robot/robot.cpp **** 		{
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
  70:Core/Src/robot/robot.cpp **** 			initial_angle = curr_angle;
  71:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
  72:Core/Src/robot/robot.cpp **** 			{
  73:Core/Src/robot/robot.cpp **** 				zone_select();
  74:Core/Src/robot/robot.cpp **** 			}
  75:Core/Src/robot/robot.cpp **** 		}
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
  77:Core/Src/robot/robot.cpp **** 		{
  78:Core/Src/robot/robot.cpp **** 
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
  85:Core/Src/robot/robot.cpp **** 
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
  88:Core/Src/robot/robot.cpp **** 			{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 3


  89:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
  90:Core/Src/robot/robot.cpp **** 				{
  91:Core/Src/robot/robot.cpp **** 					zone_select();
  92:Core/Src/robot/robot.cpp **** 				}
  93:Core/Src/robot/robot.cpp **** 			}
  94:Core/Src/robot/robot.cpp **** 		}
  95:Core/Src/robot/robot.cpp **** 
  96:Core/Src/robot/robot.cpp **** 		else
  97:Core/Src/robot/robot.cpp **** 		{
  98:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
  99:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 100:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 101:Core/Src/robot/robot.cpp **** 		}
 102:Core/Src/robot/robot.cpp **** 	}
 103:Core/Src/robot/robot.cpp **** 	break;
 104:Core/Src/robot/robot.cpp **** 
 105:Core/Src/robot/robot.cpp **** 	case MARCH:
 106:Core/Src/robot/robot.cpp **** 	{
 107:Core/Src/robot/robot.cpp **** 		/*
 108:Core/Src/robot/robot.cpp **** 			  Gerege switch thichesi state_A starts when state A flag is set
 109:Core/Src/robot/robot.cpp **** 			  10 steps agadi gayesi state_A flag clear garnaparcha
 110:Core/Src/robot/robot.cpp **** 			  state_B flag set garnaparcha
 111:Core/Src/robot/robot.cpp **** 		*/
 112:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 113:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 114:Core/Src/robot/robot.cpp **** 		{
 115:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 120:Core/Src/robot/robot.cpp **** 		}
 121:Core/Src/robot/robot.cpp **** 	}
 122:Core/Src/robot/robot.cpp **** 	break;
 123:Core/Src/robot/robot.cpp **** 
 124:Core/Src/robot/robot.cpp **** 	case TURN_45:
 125:Core/Src/robot/robot.cpp **** 	{
 126:Core/Src/robot/robot.cpp **** 		/*state _B flag set vayesi angle 45 degree change garnaparcha
 127:Core/Src/robot/robot.cpp **** 			  2 steps jati gayesi sand dune aucha
 128:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapauna proximity sensor use garnaparcha ki
 129:Core/Src/robot/robot.cpp **** 			  ta IMU bata roll value hernaparcha 
 130:Core/Src/robot/robot.cpp **** 			  sand dune kateko thapaesi state_B flag clear garnaparcha
 131:Core/Src/robot/robot.cpp **** 			  state_C flag set garnaparcha			   
 132:Core/Src/robot/robot.cpp **** 		*/
 133:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 134:Core/Src/robot/robot.cpp **** 
 135:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 137:Core/Src/robot/robot.cpp **** 		{
 138:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10) == GPIO_PIN_RESET){
 139:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 142:Core/Src/robot/robot.cpp **** 
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 4


 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 147:Core/Src/robot/robot.cpp **** 		}
 148:Core/Src/robot/robot.cpp **** 		//*/
 149:Core/Src/robot/robot.cpp **** 	}
 150:Core/Src/robot/robot.cpp **** 	break;
 151:Core/Src/robot/robot.cpp **** 	case SAND_DUNE:
 152:Core/Src/robot/robot.cpp **** 	{
 153:Core/Src/robot/robot.cpp **** 		/*state _C flag set vayesi 55 degree jati ghumna parcha 1 to 2 steps
 154:Core/Src/robot/robot.cpp **** 			after this seate_C flag needs to be cleared and state_D flag needs to be set
 155:Core/Src/robot/robot.cpp **** 			sand dune pachi ko ek dui steps wala region
 156:Core/Src/robot/robot.cpp **** 			*/
 157:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 158:Core/Src/robot/robot.cpp **** 
 159:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 161:Core/Src/robot/robot.cpp **** 		{
 162:Core/Src/robot/robot.cpp **** 			// if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_8) == GPIO_PIN_RESET){
 163:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 164:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 165:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 166:Core/Src/robot/robot.cpp **** 
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 171:Core/Src/robot/robot.cpp **** 		}
 172:Core/Src/robot/robot.cpp **** 		//*/
 173:Core/Src/robot/robot.cpp **** 	}
 174:Core/Src/robot/robot.cpp **** 	break;
 175:Core/Src/robot/robot.cpp **** 	case STATE_D:
 176:Core/Src/robot/robot.cpp **** 	{
 177:Core/Src/robot/robot.cpp **** 		/*
 178:Core/Src/robot/robot.cpp **** 			state_D start vayesi ek dui stpes sidha janaparcha around 90 degrees from the original position 
 179:Core/Src/robot/robot.cpp **** 			teti steps pugesi 0 angle ma agadi janaparcha 
 180:Core/Src/robot/robot.cpp **** 			tespachi state d flag clear huncha ani state E flag set huncha*/
 181:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 182:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 183:Core/Src/robot/robot.cpp **** 		{
 184:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 185:Core/Src/robot/robot.cpp **** 
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 190:Core/Src/robot/robot.cpp **** 		}
 191:Core/Src/robot/robot.cpp **** 	}
 192:Core/Src/robot/robot.cpp **** 	break;
 193:Core/Src/robot/robot.cpp **** 
 194:Core/Src/robot/robot.cpp **** 	case TURN_90:
 195:Core/Src/robot/robot.cpp **** 	{
 196:Core/Src/robot/robot.cpp **** 		/*tussock cross garnaparcha
 197:Core/Src/robot/robot.cpp **** 			no of steps = 
 198:Core/Src/robot/robot.cpp **** 			no of steps le state_E end vako thahuncha 
 199:Core/Src/robot/robot.cpp **** 			*/
 200:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 201:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 202:Core/Src/robot/robot.cpp **** 		{
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 5


 203:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 204:Core/Src/robot/robot.cpp **** 
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 209:Core/Src/robot/robot.cpp **** 		}
 210:Core/Src/robot/robot.cpp **** 	}
 211:Core/Src/robot/robot.cpp **** 	break;
 212:Core/Src/robot/robot.cpp **** 
 213:Core/Src/robot/robot.cpp **** 	case TUSSOCK:
 214:Core/Src/robot/robot.cpp **** 	{
 215:Core/Src/robot/robot.cpp **** 		/*state_F flag set vayesi
 216:Core/Src/robot/robot.cpp **** 			robot stops 
 217:Core/Src/robot/robot.cpp **** 			user button thichesi state_F end huncha
 218:Core/Src/robot/robot.cpp **** 			*/
 219:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG = false;
 220:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 221:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 222:Core/Src/robot/robot.cpp **** 		{
 223:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 224:Core/Src/robot/robot.cpp **** 			{
 225:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 226:Core/Src/robot/robot.cpp **** 			}
 227:Core/Src/robot/robot.cpp **** 		}
 228:Core/Src/robot/robot.cpp **** 		else
 229:Core/Src/robot/robot.cpp **** 		{
 230:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 231:Core/Src/robot/robot.cpp **** 			{
 232:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 233:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 238:Core/Src/robot/robot.cpp **** 			}
 239:Core/Src/robot/robot.cpp **** 		}
 240:Core/Src/robot/robot.cpp **** 	}
 241:Core/Src/robot/robot.cpp **** 	break;
 242:Core/Src/robot/robot.cpp **** 
 243:Core/Src/robot/robot.cpp **** 	case BASE_CAMP:
 244:Core/Src/robot/robot.cpp **** 	{
 245:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 246:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 247:Core/Src/robot/robot.cpp **** 			*/
 248:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 249:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 250:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 251:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 254:Core/Src/robot/robot.cpp **** 		    ROBOT_START_FLAG)
 255:Core/Src/robot/robot.cpp **** 		{
 256:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 257:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 258:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 259:Core/Src/robot/robot.cpp **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 6


 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 261:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 264:Core/Src/robot/robot.cpp **** 		}
 265:Core/Src/robot/robot.cpp **** 	}
 266:Core/Src/robot/robot.cpp **** 	break;
 267:Core/Src/robot/robot.cpp **** 	case MOUNTAIN:
 268:Core/Src/robot/robot.cpp **** 	{
 269:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 270:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 271:Core/Src/robot/robot.cpp **** 			*/
 272:Core/Src/robot/robot.cpp **** 
 273:Core/Src/robot/robot.cpp **** 		static bool INITIALIZATION_FLAG_2 = false;
 274:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 275:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 276:Core/Src/robot/robot.cpp **** 		{
 277:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
 278:Core/Src/robot/robot.cpp **** 			{
 279:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 280:Core/Src/robot/robot.cpp **** 			}
 281:Core/Src/robot/robot.cpp **** 		}
 282:Core/Src/robot/robot.cpp **** 		else
 283:Core/Src/robot/robot.cpp **** 		{
 284:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 285:Core/Src/robot/robot.cpp **** 			{
 286:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 287:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 288:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 289:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 290:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 291:Core/Src/robot/robot.cpp **** 			}
 292:Core/Src/robot/robot.cpp **** 		}
 293:Core/Src/robot/robot.cpp **** 	}
 294:Core/Src/robot/robot.cpp **** 
 295:Core/Src/robot/robot.cpp **** 	break;
 296:Core/Src/robot/robot.cpp **** 	case UUKHAI:
 297:Core/Src/robot/robot.cpp **** 	{
 298:Core/Src/robot/robot.cpp **** 		/*state_G flag user button thichesi start huncha
 299:Core/Src/robot/robot.cpp **** 			uukhai zone ma n no of steps gayesi state_G end huncha
 300:Core/Src/robot/robot.cpp **** 			*/
 301:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 305:Core/Src/robot/robot.cpp **** 
 306:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 307:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 308:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 309:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 311:Core/Src/robot/robot.cpp **** 	}
 312:Core/Src/robot/robot.cpp **** 	break;
 313:Core/Src/robot/robot.cpp **** 	case TUNE:
 314:Core/Src/robot/robot.cpp **** 	{
 315:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 316:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 7


 317:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 318:Core/Src/robot/robot.cpp **** 	}
 319:Core/Src/robot/robot.cpp **** 	}
 320:Core/Src/robot/robot.cpp **** }
 321:Core/Src/robot/robot.cpp **** 
 322:Core/Src/robot/robot.cpp **** bool play()
 323:Core/Src/robot/robot.cpp **** {
 324:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 325:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 326:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 327:Core/Src/robot/robot.cpp **** 	return true;
 328:Core/Src/robot/robot.cpp **** }
 329:Core/Src/robot/robot.cpp **** 
 330:Core/Src/robot/robot.cpp **** void zone_select(void)
 331:Core/Src/robot/robot.cpp **** {
  28              		.loc 1 331 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LBB56:
 332:Core/Src/robot/robot.cpp **** 
 333:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET)
  38              		.loc 1 333 0
  39 0002 4FF48041 		mov	r1, #16384
  40 0006 5F48     		ldr	r0, .L17
  41 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
  43 000c 08BB     		cbnz	r0, .L2
 334:Core/Src/robot/robot.cpp **** 	{
 335:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
  44              		.loc 1 335 0
  45 000e 0123     		movs	r3, #1
  46 0010 5D4A     		ldr	r2, .L17+4
  47 0012 1370     		strb	r3, [r2]
 336:Core/Src/robot/robot.cpp **** 		ROBOT_START_FLAG = true;
  48              		.loc 1 336 0
  49 0014 5D4A     		ldr	r2, .L17+8
  50 0016 1370     		strb	r3, [r2]
 337:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MARCH");
  51              		.loc 1 337 0
  52 0018 5D48     		ldr	r0, .L17+12
  53 001a FFF7FEFF 		bl	printf
  54              	.LVL1:
  55              	.L3:
  56              	.LBE56:
  57              	.LBB66:
 338:Core/Src/robot/robot.cpp **** 	}
 339:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET)
 340:Core/Src/robot/robot.cpp **** 	{
 341:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone 45");
 342:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 343:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 8


 344:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 345:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 346:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 347:Core/Src/robot/robot.cpp **** 		{
 348:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 349:Core/Src/robot/robot.cpp **** 		}
 350:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 351:Core/Src/robot/robot.cpp **** 	}
 352:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET)
 353:Core/Src/robot/robot.cpp **** 	{
 354:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone SAND_DUNE");
 355:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 356:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 357:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 358:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
 359:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 360:Core/Src/robot/robot.cpp **** 		{
 361:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 362:Core/Src/robot/robot.cpp **** 		}
 363:Core/Src/robot/robot.cpp **** 		// initial_angle.set_Values(initial_angle.getX(), initial_angle.getY(), initial_angle.getZ() + an
 364:Core/Src/robot/robot.cpp **** 	}
 365:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET)
 366:Core/Src/robot/robot.cpp **** 	{
 367:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone MOUNTAIN");
 368:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 369:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 370:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 371:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 372:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 373:Core/Src/robot/robot.cpp **** 		{
 374:Core/Src/robot/robot.cpp **** 			angles[i] -= temp_angle_;
 375:Core/Src/robot/robot.cpp **** 		}
 376:Core/Src/robot/robot.cpp **** 	}
 377:Core/Src/robot/robot.cpp **** 	else
 378:Core/Src/robot/robot.cpp **** 	{
 379:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default");
 380:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 381:Core/Src/robot/robot.cpp **** 	}
 382:Core/Src/robot/robot.cpp **** 
 383:Core/Src/robot/robot.cpp **** 	if (HAL_GPIO_ReadPin(ZONE_RED_GPIO_Port, ZONE_RED_Pin) == GPIO_PIN_RESET)
  58              		.loc 1 383 0
  59 001e 4FF48061 		mov	r1, #1024
  60 0022 5848     		ldr	r0, .L17
  61 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  62              	.LVL2:
  63 0028 0028     		cmp	r0, #0
  64 002a 40F09180 		bne	.L10
  65              	.LBB67:
 384:Core/Src/robot/robot.cpp **** 	{
 385:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone RED");
  66              		.loc 1 385 0
  67 002e 5948     		ldr	r0, .L17+16
  68 0030 FFF7FEFF 		bl	printf
  69              	.LVL3:
  70              	.LBB68:
 386:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  71              		.loc 1 386 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 9


  72 0034 0022     		movs	r2, #0
  73              	.LVL4:
  74              	.L12:
  75              		.loc 1 386 0 is_stmt 0 discriminator 3
  76 0036 062A     		cmp	r2, #6
  77 0038 00F3A380 		bgt	.L1
 387:Core/Src/robot/robot.cpp **** 		{
 388:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
  78              		.loc 1 388 0 is_stmt 1 discriminator 2
  79 003c 564B     		ldr	r3, .L17+20
  80 003e 03EB8203 		add	r3, r3, r2, lsl #2
  81 0042 D3ED007A 		vldr.32	s15, [r3]
  82 0046 F1EE677A 		vneg.f32	s15, s15
  83 004a C3ED007A 		vstr.32	s15, [r3]
 386:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
  84              		.loc 1 386 0 discriminator 2
  85 004e 0132     		adds	r2, r2, #1
  86              	.LVL5:
  87 0050 F1E7     		b	.L12
  88              	.LVL6:
  89              	.L2:
  90              	.LBE68:
  91              	.LBE67:
  92              	.LBE66:
  93              	.LBB72:
  94              	.LBB57:
 339:Core/Src/robot/robot.cpp **** 	{
  95              		.loc 1 339 0
  96 0052 1021     		movs	r1, #16
  97 0054 5148     		ldr	r0, .L17+24
  98 0056 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  99              	.LVL7:
 100 005a 20BB     		cbnz	r0, .L4
 101              	.LBB58:
 341:Core/Src/robot/robot.cpp **** 		robo_state = TURN_45;
 102              		.loc 1 341 0
 103 005c 5048     		ldr	r0, .L17+28
 104 005e FFF7FEFF 		bl	printf
 105              	.LVL8:
 342:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[1] - 2;
 106              		.loc 1 342 0
 107 0062 494B     		ldr	r3, .L17+4
 108 0064 0222     		movs	r2, #2
 109 0066 1A70     		strb	r2, [r3]
 343:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[1] - 2;
 110              		.loc 1 343 0
 111 0068 4E4B     		ldr	r3, .L17+32
 112 006a D3ED017A 		vldr.32	s15, [r3, #4]
 113 006e B0EE007A 		vmov.f32	s14, #2.0e+0
 114 0072 77EEC77A 		vsub.f32	s15, s15, s14
 115 0076 FDEEE77A 		vcvt.s32.f32	s15, s15
 116 007a 4B4A     		ldr	r2, .L17+36
 117 007c C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 344:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[1];
 118              		.loc 1 344 0
 119 0080 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 345:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 10


 120              		.loc 1 345 0
 121 0084 444B     		ldr	r3, .L17+20
 122 0086 93ED017A 		vldr.32	s14, [r3, #4]
 123              	.LVL9:
 124              	.LBB59:
 346:Core/Src/robot/robot.cpp **** 		{
 125              		.loc 1 346 0
 126 008a 0022     		movs	r2, #0
 127              	.LVL10:
 128              	.L5:
 346:Core/Src/robot/robot.cpp **** 		{
 129              		.loc 1 346 0 is_stmt 0 discriminator 3
 130 008c 062A     		cmp	r2, #6
 131 008e C6DC     		bgt	.L3
 348:Core/Src/robot/robot.cpp **** 		}
 132              		.loc 1 348 0 is_stmt 1 discriminator 2
 133 0090 414B     		ldr	r3, .L17+20
 134 0092 03EB8203 		add	r3, r3, r2, lsl #2
 135 0096 D3ED007A 		vldr.32	s15, [r3]
 136 009a 77EEC77A 		vsub.f32	s15, s15, s14
 137 009e C3ED007A 		vstr.32	s15, [r3]
 346:Core/Src/robot/robot.cpp **** 		{
 138              		.loc 1 346 0 discriminator 2
 139 00a2 0132     		adds	r2, r2, #1
 140              	.LVL11:
 141 00a4 F2E7     		b	.L5
 142              	.LVL12:
 143              	.L4:
 144              	.LBE59:
 145              	.LBE58:
 146              	.LBB60:
 352:Core/Src/robot/robot.cpp **** 	{
 147              		.loc 1 352 0
 148 00a6 4FF48051 		mov	r1, #4096
 149 00aa 3648     		ldr	r0, .L17
 150 00ac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 151              	.LVL13:
 152 00b0 00BB     		cbnz	r0, .L6
 153              	.LBB61:
 354:Core/Src/robot/robot.cpp **** 		robo_state = STATE_D;
 154              		.loc 1 354 0
 155 00b2 3E48     		ldr	r0, .L17+40
 156 00b4 FFF7FEFF 		bl	printf
 157              	.LVL14:
 355:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[2];
 158              		.loc 1 355 0
 159 00b8 334B     		ldr	r3, .L17+4
 160 00ba 0422     		movs	r2, #4
 161 00bc 1A70     		strb	r2, [r3]
 356:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[2];
 162              		.loc 1 356 0
 163 00be 394B     		ldr	r3, .L17+32
 164 00c0 D3ED027A 		vldr.32	s15, [r3, #8]
 165 00c4 FDEEE77A 		vcvt.s32.f32	s15, s15
 166 00c8 374A     		ldr	r2, .L17+36
 167 00ca C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 357:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[2];
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 11


 168              		.loc 1 357 0
 169 00ce C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 358:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 170              		.loc 1 358 0
 171 00d2 314B     		ldr	r3, .L17+20
 172 00d4 93ED027A 		vldr.32	s14, [r3, #8]
 173              	.LVL15:
 174              	.LBB62:
 359:Core/Src/robot/robot.cpp **** 		{
 175              		.loc 1 359 0
 176 00d8 0022     		movs	r2, #0
 177              	.LVL16:
 178              	.L7:
 359:Core/Src/robot/robot.cpp **** 		{
 179              		.loc 1 359 0 is_stmt 0 discriminator 3
 180 00da 062A     		cmp	r2, #6
 181 00dc 9FDC     		bgt	.L3
 361:Core/Src/robot/robot.cpp **** 		}
 182              		.loc 1 361 0 is_stmt 1 discriminator 2
 183 00de 2E4B     		ldr	r3, .L17+20
 184 00e0 03EB8203 		add	r3, r3, r2, lsl #2
 185 00e4 D3ED007A 		vldr.32	s15, [r3]
 186 00e8 77EEC77A 		vsub.f32	s15, s15, s14
 187 00ec C3ED007A 		vstr.32	s15, [r3]
 359:Core/Src/robot/robot.cpp **** 		{
 188              		.loc 1 359 0 discriminator 2
 189 00f0 0132     		adds	r2, r2, #1
 190              	.LVL17:
 191 00f2 F2E7     		b	.L7
 192              	.LVL18:
 193              	.L6:
 194              	.LBE62:
 195              	.LBE61:
 196              	.LBB63:
 365:Core/Src/robot/robot.cpp **** 	{
 197              		.loc 1 365 0
 198 00f4 0221     		movs	r1, #2
 199 00f6 2E48     		ldr	r0, .L17+44
 200 00f8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL19:
 202 00fc 08BB     		cbnz	r0, .L8
 203              	.LBB64:
 367:Core/Src/robot/robot.cpp **** 		robo_state = BASE_CAMP;
 204              		.loc 1 367 0
 205 00fe 2D48     		ldr	r0, .L17+48
 206 0100 FFF7FEFF 		bl	printf
 207              	.LVL20:
 368:Core/Src/robot/robot.cpp **** 		leg[0].steps = steps[5];
 208              		.loc 1 368 0
 209 0104 204B     		ldr	r3, .L17+4
 210 0106 0722     		movs	r2, #7
 211 0108 1A70     		strb	r2, [r3]
 369:Core/Src/robot/robot.cpp **** 		leg[1].steps = steps[5];
 212              		.loc 1 369 0
 213 010a 264B     		ldr	r3, .L17+32
 214 010c D3ED057A 		vldr.32	s15, [r3, #20]
 215 0110 FDEEE77A 		vcvt.s32.f32	s15, s15
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 12


 216 0114 244A     		ldr	r2, .L17+36
 217 0116 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 370:Core/Src/robot/robot.cpp **** 		float temp_angle_ = angles[5];
 218              		.loc 1 370 0
 219 011a C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 371:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 220              		.loc 1 371 0
 221 011e 1E4B     		ldr	r3, .L17+20
 222 0120 93ED057A 		vldr.32	s14, [r3, #20]
 223              	.LVL21:
 224              	.LBB65:
 372:Core/Src/robot/robot.cpp **** 		{
 225              		.loc 1 372 0
 226 0124 0022     		movs	r2, #0
 227              	.LVL22:
 228              	.L9:
 372:Core/Src/robot/robot.cpp **** 		{
 229              		.loc 1 372 0 is_stmt 0 discriminator 3
 230 0126 062A     		cmp	r2, #6
 231 0128 3FF779AF 		bgt	.L3
 374:Core/Src/robot/robot.cpp **** 		}
 232              		.loc 1 374 0 is_stmt 1 discriminator 2
 233 012c 1A4B     		ldr	r3, .L17+20
 234 012e 03EB8203 		add	r3, r3, r2, lsl #2
 235 0132 D3ED007A 		vldr.32	s15, [r3]
 236 0136 77EEC77A 		vsub.f32	s15, s15, s14
 237 013a C3ED007A 		vstr.32	s15, [r3]
 372:Core/Src/robot/robot.cpp **** 		{
 238              		.loc 1 372 0 discriminator 2
 239 013e 0132     		adds	r2, r2, #1
 240              	.LVL23:
 241 0140 F1E7     		b	.L9
 242              	.LVL24:
 243              	.L8:
 244              	.LBE65:
 245              	.LBE64:
 379:Core/Src/robot/robot.cpp **** 		robo_state = MARCH;
 246              		.loc 1 379 0
 247 0142 1D48     		ldr	r0, .L17+52
 248 0144 FFF7FEFF 		bl	printf
 249              	.LVL25:
 380:Core/Src/robot/robot.cpp **** 	}
 250              		.loc 1 380 0
 251 0148 0F4B     		ldr	r3, .L17+4
 252 014a 0122     		movs	r2, #1
 253 014c 1A70     		strb	r2, [r3]
 254 014e 66E7     		b	.L3
 255              	.L10:
 256              	.LBE63:
 257              	.LBE60:
 258              	.LBE57:
 259              	.LBE72:
 260              	.LBB73:
 261              	.LBB69:
 389:Core/Src/robot/robot.cpp **** 		}
 390:Core/Src/robot/robot.cpp **** 	}
 391:Core/Src/robot/robot.cpp **** 	else if (HAL_GPIO_ReadPin(ZONE_BLUE_GPIO_Port, ZONE_BLUE_Pin) == GPIO_PIN_RESET)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 13


 262              		.loc 1 391 0
 263 0150 1021     		movs	r1, #16
 264 0152 1A48     		ldr	r0, .L17+56
 265 0154 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 266              	.LVL26:
 267 0158 80B1     		cbz	r0, .L16
 268              	.LBB70:
 392:Core/Src/robot/robot.cpp **** 	{
 393:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone BLUE");
 394:Core/Src/robot/robot.cpp **** 	}
 395:Core/Src/robot/robot.cpp **** 	else
 396:Core/Src/robot/robot.cpp **** 	{
 397:Core/Src/robot/robot.cpp **** 		printf("\n\n\tZone Default_RED");
 269              		.loc 1 397 0
 270 015a 1948     		ldr	r0, .L17+60
 271 015c FFF7FEFF 		bl	printf
 272              	.LVL27:
 273              	.LBB71:
 398:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 274              		.loc 1 398 0
 275 0160 0022     		movs	r2, #0
 276              	.LVL28:
 277              	.L14:
 278              		.loc 1 398 0 is_stmt 0 discriminator 3
 279 0162 062A     		cmp	r2, #6
 280 0164 0DDC     		bgt	.L1
 399:Core/Src/robot/robot.cpp **** 		{
 400:Core/Src/robot/robot.cpp **** 			angles[i] *= -1;
 281              		.loc 1 400 0 is_stmt 1 discriminator 2
 282 0166 0C4B     		ldr	r3, .L17+20
 283 0168 03EB8203 		add	r3, r3, r2, lsl #2
 284 016c D3ED007A 		vldr.32	s15, [r3]
 285 0170 F1EE677A 		vneg.f32	s15, s15
 286 0174 C3ED007A 		vstr.32	s15, [r3]
 398:Core/Src/robot/robot.cpp **** 		for (int i = 0; i < 7; i++)
 287              		.loc 1 398 0 discriminator 2
 288 0178 0132     		adds	r2, r2, #1
 289              	.LVL29:
 290 017a F2E7     		b	.L14
 291              	.LVL30:
 292              	.L16:
 293              	.LBE71:
 294              	.LBE70:
 393:Core/Src/robot/robot.cpp **** 	}
 295              		.loc 1 393 0
 296 017c 1148     		ldr	r0, .L17+64
 297 017e FFF7FEFF 		bl	printf
 298              	.LVL31:
 299              	.L1:
 300              	.LBE69:
 301              	.LBE73:
 401:Core/Src/robot/robot.cpp **** 		}
 402:Core/Src/robot/robot.cpp **** 	}
 403:Core/Src/robot/robot.cpp **** }
 302              		.loc 1 403 0
 303 0182 08BD     		pop	{r3, pc}
 304              	.L18:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 14


 305              		.align	2
 306              	.L17:
 307 0184 00080240 		.word	1073874944
 308 0188 00000000 		.word	.LANCHOR0
 309 018c 00000000 		.word	.LANCHOR1
 310 0190 00000000 		.word	.LC0
 311 0194 54000000 		.word	.LC5
 312 0198 00000000 		.word	.LANCHOR3
 313 019c 00000240 		.word	1073872896
 314 01a0 10000000 		.word	.LC1
 315 01a4 00000000 		.word	.LANCHOR2
 316 01a8 00000000 		.word	leg
 317 01ac 1C000000 		.word	.LC2
 318 01b0 000C0240 		.word	1073875968
 319 01b4 30000000 		.word	.LC3
 320 01b8 44000000 		.word	.LC4
 321 01bc 00100240 		.word	1073876992
 322 01c0 70000000 		.word	.LC7
 323 01c4 60000000 		.word	.LC6
 324              		.cfi_endproc
 325              	.LFE499:
 327              		.global	__aeabi_f2d
 328              		.global	__aeabi_ddiv
 329              		.global	__aeabi_d2iz
 330              		.section	.text._Z4testv,"ax",%progbits
 331              		.align	1
 332              		.global	_Z4testv
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	_Z4testv:
 339              	.LFB500:
 404:Core/Src/robot/robot.cpp **** 
 405:Core/Src/robot/robot.cpp **** void test(void)
 406:Core/Src/robot/robot.cpp **** {
 340              		.loc 1 406 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 345              	.LCFI1:
 346              		.cfi_def_cfa_offset 32
 347              		.cfi_offset 3, -32
 348              		.cfi_offset 4, -28
 349              		.cfi_offset 5, -24
 350              		.cfi_offset 6, -20
 351              		.cfi_offset 7, -16
 352              		.cfi_offset 8, -12
 353              		.cfi_offset 9, -8
 354              		.cfi_offset 14, -4
 355 0004 2DED028B 		vpush.64	{d8}
 356              	.LCFI2:
 357              		.cfi_def_cfa_offset 40
 358              		.cfi_offset 80, -40
 359              		.cfi_offset 81, -36
 407:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET){
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 15


 360              		.loc 1 407 0
 361 0008 4FF40061 		mov	r1, #2048
 362 000c 4048     		ldr	r0, .L27+8
 363 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 364              	.LVL32:
 365 0012 0028     		cmp	r0, #0
 366 0014 6AD0     		beq	.L24
 367              	.L20:
 408:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 409:Core/Src/robot/robot.cpp **** 	}
 410:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET){
 368              		.loc 1 410 0
 369 0016 4FF48071 		mov	r1, #256
 370 001a 3D48     		ldr	r0, .L27+8
 371 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 372              	.LVL33:
 373 0020 0028     		cmp	r0, #0
 374 0022 67D0     		beq	.L25
 375              	.L21:
 411:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 412:Core/Src/robot/robot.cpp **** 	}
 413:Core/Src/robot/robot.cpp **** 	if(HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET){
 376              		.loc 1 413 0
 377 0024 4FF48061 		mov	r1, #1024
 378 0028 3948     		ldr	r0, .L27+8
 379 002a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 380              	.LVL34:
 381 002e 0028     		cmp	r0, #0
 382 0030 64D0     		beq	.L26
 383              	.L22:
 414:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 415:Core/Src/robot/robot.cpp **** 	}
 416:Core/Src/robot/robot.cpp **** 	leg[0].set_omega(0);
 384              		.loc 1 416 0
 385 0032 9FED388A 		vldr.32	s16, .L27+12
 386 0036 384C     		ldr	r4, .L27+16
 387 0038 B0EE480A 		vmov.f32	s0, s16
 388 003c 2046     		mov	r0, r4
 389 003e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 390              	.LVL35:
 417:Core/Src/robot/robot.cpp **** 	leg[1].set_omega(0);
 391              		.loc 1 417 0
 392 0042 B0EE480A 		vmov.f32	s0, s16
 393 0046 04F15800 		add	r0, r4, #88
 394 004a FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 395              	.LVL36:
 418:Core/Src/robot/robot.cpp **** 	steering.set_angle(0);
 396              		.loc 1 418 0
 397 004e 334D     		ldr	r5, .L27+20
 398 0050 B0EE480A 		vmov.f32	s0, s16
 399 0054 2846     		mov	r0, r5
 400 0056 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 401              	.LVL37:
 402              	.LBB74:
 403              	.LBB75:
 404              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 16


   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 405              		.loc 2 48 0
 406 005a 04F13C00 		add	r0, r4, #60
 407 005e FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 408              	.LVL38:
 409              	.LBE75:
 410              	.LBE74:
 419:Core/Src/robot/robot.cpp **** 	printf("\nleg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d", (int)(leg[0].get_actual_angle() 
 411              		.loc 1 419 0
 412 0062 9FED2F8A 		vldr.32	s16, .L27+24
 413 0066 60EE087A 		vmul.f32	s15, s0, s16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 17


 414 006a 17EE900A 		vmov	r0, s15
 415 006e FFF7FEFF 		bl	__aeabi_f2d
 416              	.LVL39:
 417 0072 25A3     		adr	r3, .L27
 418 0074 D3E90023 		ldrd	r2, [r3]
 419 0078 FFF7FEFF 		bl	__aeabi_ddiv
 420              	.LVL40:
 421 007c 0646     		mov	r6, r0
 422 007e 0F46     		mov	r7, r1
 423              	.LVL41:
 424              	.LBB76:
 425              	.LBB77:
 426              		.loc 2 48 0
 427 0080 04F19400 		add	r0, r4, #148
 428 0084 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 429              	.LVL42:
 430              	.LBE77:
 431              	.LBE76:
 420:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 432              		.loc 1 420 0
 433 0088 60EE087A 		vmul.f32	s15, s0, s16
 434 008c 17EE900A 		vmov	r0, s15
 435 0090 FFF7FEFF 		bl	__aeabi_f2d
 436              	.LVL43:
 437 0094 1CA3     		adr	r3, .L27
 438 0096 D3E90023 		ldrd	r2, [r3]
 439 009a FFF7FEFF 		bl	__aeabi_ddiv
 440              	.LVL44:
 441 009e 8046     		mov	r8, r0
 442 00a0 8946     		mov	r9, r1
 443              	.LVL45:
 444              	.LBB78:
 445              	.LBB79:
 446              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 18


  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 19


  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
  95:Core/Inc/devs/steering.h **** 
  96:Core/Inc/devs/steering.h **** 	/**
  97:Core/Inc/devs/steering.h **** 	 * \brief calculates omega of the steering motor
  98:Core/Inc/devs/steering.h **** 	 * \remark Dont forget to call this function every 10 ms
  99:Core/Inc/devs/steering.h **** 	 * \param void
 100:Core/Inc/devs/steering.h **** 	 * \return void
 101:Core/Inc/devs/steering.h **** 	 */
 102:Core/Inc/devs/steering.h **** 	void calculate_omega(){	encoder__.calculate_omega();}
 103:Core/Inc/devs/steering.h **** 
 104:Core/Inc/devs/steering.h **** 	/**
 105:Core/Inc/devs/steering.h **** 	 * \brief returns the current omega calculated by the encoder
 106:Core/Inc/devs/steering.h **** 	 */
 107:Core/Inc/devs/steering.h **** 	float get_omega(void){return encoder__.get_omega();}
 108:Core/Inc/devs/steering.h **** 
 109:Core/Inc/devs/steering.h **** 	/**
 110:Core/Inc/devs/steering.h **** 	 * \brief returns the current angle calculated by the encoder
 111:Core/Inc/devs/steering.h **** 	 */
 112:Core/Inc/devs/steering.h **** 	float get_angle(void){return encoder__.get_angle();}
 447              		.loc 3 112 0
 448 00a2 05F10C00 		add	r0, r5, #12
 449 00a6 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 450              	.LVL46:
 451              	.LBE79:
 452              	.LBE78:
 453              		.loc 1 420 0
 454 00aa 60EE087A 		vmul.f32	s15, s0, s16
 455 00ae 17EE900A 		vmov	r0, s15
 456 00b2 FFF7FEFF 		bl	__aeabi_f2d
 457              	.LVL47:
 458 00b6 14A3     		adr	r3, .L27
 459 00b8 D3E90023 		ldrd	r2, [r3]
 460 00bc FFF7FEFF 		bl	__aeabi_ddiv
 461              	.LVL48:
 419:Core/Src/robot/robot.cpp **** 	       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI));
 462              		.loc 1 419 0
 463 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 464              	.LVL49:
 465 00c4 0546     		mov	r5, r0
 466 00c6 4046     		mov	r0, r8
 467 00c8 4946     		mov	r1, r9
 468 00ca FFF7FEFF 		bl	__aeabi_d2iz
 469              	.LVL50:
 470 00ce 0446     		mov	r4, r0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 20


 471 00d0 3046     		mov	r0, r6
 472 00d2 3946     		mov	r1, r7
 473 00d4 FFF7FEFF 		bl	__aeabi_d2iz
 474              	.LVL51:
 475 00d8 2B46     		mov	r3, r5
 476 00da 2246     		mov	r2, r4
 477 00dc 0146     		mov	r1, r0
 478 00de 1148     		ldr	r0, .L27+28
 479 00e0 FFF7FEFF 		bl	printf
 480              	.LVL52:
 421:Core/Src/robot/robot.cpp **** }...
 481              		.loc 1 421 0
 482 00e4 BDEC028B 		vldm	sp!, {d8}
 483              	.LCFI3:
 484              		.cfi_remember_state
 485              		.cfi_restore 80
 486              		.cfi_restore 81
 487              		.cfi_def_cfa_offset 32
 488 00e8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 489              	.L24:
 490              	.LCFI4:
 491              		.cfi_restore_state
 408:Core/Src/robot/robot.cpp **** 		printf("\n FRONT");
 492              		.loc 1 408 0
 493 00ec 0E48     		ldr	r0, .L27+32
 494 00ee FFF7FEFF 		bl	printf
 495              	.LVL53:
 496 00f2 90E7     		b	.L20
 497              	.L25:
 411:Core/Src/robot/robot.cpp **** 		printf("\n BACK");
 498              		.loc 1 411 0
 499 00f4 0D48     		ldr	r0, .L27+36
 500 00f6 FFF7FEFF 		bl	printf
 501              	.LVL54:
 502 00fa 93E7     		b	.L21
 503              	.L26:
 414:Core/Src/robot/robot.cpp **** 		printf("\n UP");
 504              		.loc 1 414 0
 505 00fc 0C48     		ldr	r0, .L27+40
 506 00fe FFF7FEFF 		bl	printf
 507              	.LVL55:
 508 0102 96E7     		b	.L22
 509              	.L28:
 510 0104 AFF30080 		.align	3
 511              	.L27:
 512 0108 182D4454 		.word	1413754136
 513 010c FB210940 		.word	1074340347
 514 0110 000C0240 		.word	1073875968
 515 0114 00000000 		.word	0
 516 0118 00000000 		.word	leg
 517 011c 00000000 		.word	steering
 518 0120 00003443 		.word	1127481344
 519 0124 18000000 		.word	.LC11
 520 0128 00000000 		.word	.LC8
 521 012c 08000000 		.word	.LC9
 522 0130 10000000 		.word	.LC10
 523              		.cfi_endproc
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 21


 524              	.LFE500:
 526              		.section	.text._Z12swap_ElementIfEvRT_S1_,"axG",%progbits,_Z12swap_ElementIfEvRT_S1_,comdat
 527              		.align	1
 528              		.weak	_Z12swap_ElementIfEvRT_S1_
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu fpv4-sp-d16
 534              	_Z12swap_ElementIfEvRT_S1_:
 535              	.LFB511:
 536              		.file 4 "Core/Inc/utils/vec3.h"
   1:Core/Inc/utils/vec3.h **** /*
   2:Core/Inc/utils/vec3.h ****  * vec3.h
   3:Core/Inc/utils/vec3.h ****  * 
   4:Core/Inc/utils/vec3.h ****  * Created : 11/9/2018
   5:Core/Inc/utils/vec3.h ****  *  Author : n-is
   6:Core/Inc/utils/vec3.h ****  *   email : 073bex422.nischal@pcampus.edu.np
   7:Core/Inc/utils/vec3.h ****  */
   8:Core/Inc/utils/vec3.h **** 
   9:Core/Inc/utils/vec3.h **** #ifndef _VEC3_H_
  10:Core/Inc/utils/vec3.h **** #define _VEC3_H_
  11:Core/Inc/utils/vec3.h **** 
  12:Core/Inc/utils/vec3.h **** #include "stm32f4xx_hal.h"
  13:Core/Inc/utils/vec3.h **** #include "main.h"
  14:Core/Inc/utils/vec3.h **** 
  15:Core/Inc/utils/vec3.h **** template <typename T>
  16:Core/Inc/utils/vec3.h **** void swap_Element(T &first, T &second)
 537              		.loc 4 16 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542              	.LVL56:
  17:Core/Inc/utils/vec3.h **** {
  18:Core/Inc/utils/vec3.h ****         T temp = first;
 543              		.loc 4 18 0
 544 0000 0368     		ldr	r3, [r0]	@ float
 545              	.LVL57:
  19:Core/Inc/utils/vec3.h ****         first = second;
 546              		.loc 4 19 0
 547 0002 0A68     		ldr	r2, [r1]	@ float
 548 0004 0260     		str	r2, [r0]	@ float
  20:Core/Inc/utils/vec3.h ****         second = temp;
 549              		.loc 4 20 0
 550 0006 0B60     		str	r3, [r1]	@ float
  21:Core/Inc/utils/vec3.h **** }
 551              		.loc 4 21 0
 552 0008 7047     		bx	lr
 553              		.cfi_endproc
 554              	.LFE511:
 556              		.global	__aeabi_d2f
 557              		.section	.text._Z11start_RobotP12Robot_States,"ax",%progbits
 558              		.align	1
 559              		.global	_Z11start_RobotP12Robot_States
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 22


 563              		.fpu fpv4-sp-d16
 565              	_Z11start_RobotP12Robot_States:
 566              	.LFB497:
  22:Core/Src/robot/robot.cpp **** {
 567              		.loc 1 22 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 16
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL58:
 572 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 573              	.LCFI5:
 574              		.cfi_def_cfa_offset 36
 575              		.cfi_offset 4, -36
 576              		.cfi_offset 5, -32
 577              		.cfi_offset 6, -28
 578              		.cfi_offset 7, -24
 579              		.cfi_offset 8, -20
 580              		.cfi_offset 9, -16
 581              		.cfi_offset 10, -12
 582              		.cfi_offset 11, -8
 583              		.cfi_offset 14, -4
 584 0004 2DED028B 		vpush.64	{d8}
 585              	.LCFI6:
 586              		.cfi_def_cfa_offset 44
 587              		.cfi_offset 80, -44
 588              		.cfi_offset 81, -40
 589 0008 87B0     		sub	sp, sp, #28
 590              	.LCFI7:
 591              		.cfi_def_cfa_offset 72
 592 000a 0446     		mov	r4, r0
 593              	.LBB118:
  23:Core/Src/robot/robot.cpp **** 	switch (*state_)
 594              		.loc 1 23 0
 595 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 596 000e 0A2B     		cmp	r3, #10
 597 0010 00F2B683 		bhi	.L30
 598 0014 DFE813F0 		tbh	[pc, r3, lsl #1]
 599              	.L33:
 600 0018 0B00     		.2byte	(.L32-.L33)/2
 601 001a 5201     		.2byte	(.L34-.L33)/2
 602 001c B001     		.2byte	(.L35-.L33)/2
 603 001e EF01     		.2byte	(.L36-.L33)/2
 604 0020 3F02     		.2byte	(.L37-.L33)/2
 605 0022 6902     		.2byte	(.L38-.L33)/2
 606 0024 9302     		.2byte	(.L39-.L33)/2
 607 0026 CC02     		.2byte	(.L40-.L33)/2
 608 0028 2403     		.2byte	(.L41-.L33)/2
 609 002a 8403     		.2byte	(.L42-.L33)/2
 610 002c B903     		.2byte	(.L43-.L33)/2
 611              		.p2align 1
 612              	.L32:
 613              	.LBB119:
 614              	.LBB120:
  37:Core/Src/robot/robot.cpp **** 		printf("\nHOME");
 615              		.loc 1 37 0
 616 002e BA48     		ldr	r0, .L70+8
 617              	.LVL59:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 23


 618 0030 FFF7FEFF 		bl	printf
 619              	.LVL60:
  38:Core/Src/robot/robot.cpp **** 		if (HAL_GPIO_ReadPin(IMU_Detect_GPIO_Port, IMU_Detect_Pin) == GPIO_PIN_RESET)
 620              		.loc 1 38 0
 621 0034 4021     		movs	r1, #64
 622 0036 B948     		ldr	r0, .L70+12
 623 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 624              	.LVL61:
 625 003c 0028     		cmp	r0, #0
 626 003e 40F0A080 		bne	.L44
  40:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = true;
 627              		.loc 1 40 0
 628 0042 B74B     		ldr	r3, .L70+16
 629 0044 0122     		movs	r2, #1
 630 0046 1A70     		strb	r2, [r3]
 631              	.L45:
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 632              		.loc 1 49 0
 633 0048 B64B     		ldr	r3, .L70+20
 634 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 004c 23B9     		cbnz	r3, .L46
  49:Core/Src/robot/robot.cpp **** 		if (!ROBOT_START_FLAG && INITIAL_ANGLE_FLAG)
 636              		.loc 1 49 0 is_stmt 0 discriminator 1
 637 004e B64A     		ldr	r2, .L70+24
 638 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 639 0052 002A     		cmp	r2, #0
 640 0054 40F09C80 		bne	.L64
 641              	.L46:
  55:Core/Src/robot/robot.cpp **** 		else if (ROBOT_START_FLAG)
 642              		.loc 1 55 0 is_stmt 1
 643 0058 002B     		cmp	r3, #0
 644 005a 40F0B880 		bne	.L65
 645              	.LVL62:
 646              	.L47:
 647              	.LBB121:
 648              	.LBB122:
  47:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
 649              		.loc 2 47 0
 650 005e B34E     		ldr	r6, .L70+28
 651 0060 3046     		mov	r0, r6
 652 0062 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 653              	.LVL63:
 654              	.LBE122:
 655              	.LBE121:
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 656              		.loc 1 60 0
 657 0066 9FEDB28A 		vldr.32	s16, .L70+32
 658 006a 60EE087A 		vmul.f32	s15, s0, s16
 659 006e 17EE900A 		vmov	r0, s15
 660 0072 FFF7FEFF 		bl	__aeabi_f2d
 661              	.LVL64:
 662 0076 A6A3     		adr	r3, .L70
 663 0078 D3E90023 		ldrd	r2, [r3]
 664 007c FFF7FEFF 		bl	__aeabi_ddiv
 665              	.LVL65:
 666 0080 0446     		mov	r4, r0
 667 0082 0D46     		mov	r5, r1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 24


 668              	.LVL66:
 669              	.LBB123:
 670              	.LBB124:
 671              		.loc 2 48 0
 672 0084 06F15800 		add	r0, r6, #88
 673 0088 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 674              	.LVL67:
 675              	.LBE124:
 676              	.LBE123:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 677              		.loc 1 61 0
 678 008c 60EE087A 		vmul.f32	s15, s0, s16
 679 0090 17EE900A 		vmov	r0, s15
 680 0094 FFF7FEFF 		bl	__aeabi_f2d
 681              	.LVL68:
 682 0098 9DA3     		adr	r3, .L70
 683 009a D3E90023 		ldrd	r2, [r3]
 684 009e FFF7FEFF 		bl	__aeabi_ddiv
 685              	.LVL69:
 686 00a2 0646     		mov	r6, r0
 687 00a4 0F46     		mov	r7, r1
 688              	.LVL70:
 689              	.LBB125:
 690              	.LBB126:
 691              		.loc 3 112 0
 692 00a6 A348     		ldr	r0, .L70+36
 693 00a8 FFF7FEFF 		bl	_ZN7encoder9get_angleEv
 694              	.LVL71:
 695              	.LBE126:
 696              	.LBE125:
  61:Core/Src/robot/robot.cpp **** 		       (int)(leg[1].get_actual_angle() * 180 / PI), (int)(steering.get_angle() * 180 / PI), (int)
 697              		.loc 1 61 0
 698 00ac 60EE087A 		vmul.f32	s15, s0, s16
 699 00b0 17EE900A 		vmov	r0, s15
 700 00b4 FFF7FEFF 		bl	__aeabi_f2d
 701              	.LVL72:
 702 00b8 95A3     		adr	r3, .L70
 703 00ba D3E90023 		ldrd	r2, [r3]
 704 00be FFF7FEFF 		bl	__aeabi_ddiv
 705              	.LVL73:
 706 00c2 8046     		mov	r8, r0
 707 00c4 8946     		mov	r9, r1
 708 00c6 9C4B     		ldr	r3, .L70+40
 709 00c8 D3ED007A 		vldr.32	s15, [r3]
 710 00cc 67EE887A 		vmul.f32	s15, s15, s16
 711 00d0 17EE900A 		vmov	r0, s15
 712 00d4 FFF7FEFF 		bl	__aeabi_f2d
 713              	.LVL74:
 714 00d8 8DA3     		adr	r3, .L70
 715 00da D3E90023 		ldrd	r2, [r3]
 716 00de FFF7FEFF 		bl	__aeabi_ddiv
 717              	.LVL75:
 718 00e2 8246     		mov	r10, r0
 719 00e4 8B46     		mov	fp, r1
  60:Core/Src/robot/robot.cpp **** 		printf("leg0_angle = %d\tleg1_angle = %d\tsteering_angle = %d\trobot_angle = %d\t", (int)(leg[0].
 720              		.loc 1 60 0
 721 00e6 4046     		mov	r0, r8
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 25


 722 00e8 4946     		mov	r1, r9
 723 00ea FFF7FEFF 		bl	__aeabi_d2iz
 724              	.LVL76:
 725 00ee 8046     		mov	r8, r0
 726 00f0 3046     		mov	r0, r6
 727 00f2 3946     		mov	r1, r7
 728 00f4 FFF7FEFF 		bl	__aeabi_d2iz
 729              	.LVL77:
 730 00f8 0646     		mov	r6, r0
 731 00fa 2046     		mov	r0, r4
 732 00fc 2946     		mov	r1, r5
 733 00fe FFF7FEFF 		bl	__aeabi_d2iz
 734              	.LVL78:
 735 0102 0446     		mov	r4, r0
 736 0104 5046     		mov	r0, r10
 737 0106 5946     		mov	r1, fp
 738 0108 FFF7FEFF 		bl	__aeabi_d2iz
 739              	.LVL79:
 740 010c 0090     		str	r0, [sp]
 741 010e 4346     		mov	r3, r8
 742 0110 3246     		mov	r2, r6
 743 0112 2146     		mov	r1, r4
 744 0114 8948     		ldr	r0, .L70+44
 745 0116 FFF7FEFF 		bl	printf
 746              	.LVL80:
 747              	.LBB127:
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 748              		.loc 1 62 0
 749 011a 4FF48041 		mov	r1, #16384
 750 011e 8848     		ldr	r0, .L70+48
 751 0120 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 752              	.LVL81:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 753              		.loc 1 64 0
 754 0124 28B1     		cbz	r0, .L48
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 755              		.loc 1 63 0
 756 0126 1021     		movs	r1, #16
 757 0128 8648     		ldr	r0, .L70+52
 758 012a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 759              	.LVL82:
  62:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(ZONE_INIT_GPIO_Port, ZONE_INIT_Pin) == GPIO_PIN_RESET) ||
 760              		.loc 1 62 0
 761 012e 0028     		cmp	r0, #0
 762 0130 56D1     		bne	.L66
 763              	.L48:
  67:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 764              		.loc 1 67 0 discriminator 1
 765 0132 0022     		movs	r2, #0
 766 0134 0421     		movs	r1, #4
 767 0136 8248     		ldr	r0, .L70+48
 768 0138 FFF7FEFF 		bl	HAL_GPIO_WritePin
 769              	.LVL83:
  68:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = true;
 770              		.loc 1 68 0 discriminator 1
 771 013c 794B     		ldr	r3, .L70+20
 772 013e 0122     		movs	r2, #1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 26


 773 0140 1A70     		strb	r2, [r3]
  69:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 774              		.loc 1 69 0 discriminator 1
 775 0142 794B     		ldr	r3, .L70+24
 776 0144 0022     		movs	r2, #0
 777 0146 1A70     		strb	r2, [r3]
 778              	.LVL84:
 779              	.LBB128:
 780              	.LBB129:
 781              	.LBB130:
 782              	.LBB131:
 783              	.LBB132:
  22:Core/Inc/utils/vec3.h **** 
  23:Core/Inc/utils/vec3.h **** template <class T>
  24:Core/Inc/utils/vec3.h **** class Vec3
  25:Core/Inc/utils/vec3.h **** {
  26:Core/Inc/utils/vec3.h **** public:
  27:Core/Inc/utils/vec3.h ****         Vec3() { set_Values(0,0,0); }
  28:Core/Inc/utils/vec3.h ****         Vec3(T x, T y, T z) { set_Values(x,y,z); }
  29:Core/Inc/utils/vec3.h **** 
  30:Core/Inc/utils/vec3.h ****         Vec3(Vec3 &&) = default;
  31:Core/Inc/utils/vec3.h ****         Vec3 &operator=(Vec3 &&) = default;
  32:Core/Inc/utils/vec3.h ****         ~Vec3() { }
  33:Core/Inc/utils/vec3.h **** 
  34:Core/Inc/utils/vec3.h ****         T getX() const { return x_; }
  35:Core/Inc/utils/vec3.h ****         T getY() const { return y_; }
  36:Core/Inc/utils/vec3.h ****         T getZ() const { return z_; }
  37:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
  38:Core/Inc/utils/vec3.h ****         void setY(T y) { y_ = y; }
  39:Core/Inc/utils/vec3.h ****         void setZ(T z) { z_ = z; }
  40:Core/Inc/utils/vec3.h **** 
  41:Core/Inc/utils/vec3.h ****         void set_Values(T x, T y, T z) {
  42:Core/Inc/utils/vec3.h ****                 setX(x);
  43:Core/Inc/utils/vec3.h ****                 setY(y);
  44:Core/Inc/utils/vec3.h ****                 setZ(z);
  45:Core/Inc/utils/vec3.h ****         }
  46:Core/Inc/utils/vec3.h **** 
  47:Core/Inc/utils/vec3.h **** 
  48:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(float num) {
  49:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  50:Core/Inc/utils/vec3.h ****                 temp.x_ *= num;
  51:Core/Inc/utils/vec3.h ****                 temp.y_ *= num;
  52:Core/Inc/utils/vec3.h ****                 temp.z_ *= num;
  53:Core/Inc/utils/vec3.h **** 
  54:Core/Inc/utils/vec3.h ****                 return temp;
  55:Core/Inc/utils/vec3.h ****         }
  56:Core/Inc/utils/vec3.h **** 
  57:Core/Inc/utils/vec3.h ****         template <typename T1>
  58:Core/Inc/utils/vec3.h ****         Vec3 mult_EW(Vec3<T1> v) {
  59:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  60:Core/Inc/utils/vec3.h ****                 temp.x_ *= x_;
  61:Core/Inc/utils/vec3.h ****                 temp.y_ *= y_;
  62:Core/Inc/utils/vec3.h ****                 temp.z_ *= z_;
  63:Core/Inc/utils/vec3.h **** 
  64:Core/Inc/utils/vec3.h ****                 return temp;
  65:Core/Inc/utils/vec3.h ****         }
  66:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 27


  67:Core/Inc/utils/vec3.h **** 
  68:Core/Inc/utils/vec3.h ****         Vec3 add_EW(float num) {
  69:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  70:Core/Inc/utils/vec3.h ****                 temp.x_ += num;
  71:Core/Inc/utils/vec3.h ****                 temp.y_ += num;
  72:Core/Inc/utils/vec3.h ****                 temp.z_ += num;
  73:Core/Inc/utils/vec3.h **** 
  74:Core/Inc/utils/vec3.h ****                 return temp;
  75:Core/Inc/utils/vec3.h ****         }
  76:Core/Inc/utils/vec3.h **** 
  77:Core/Inc/utils/vec3.h ****         template <typename T1>
  78:Core/Inc/utils/vec3.h ****         Vec3 add_EW(Vec3<T1> v) {
  79:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
  80:Core/Inc/utils/vec3.h ****                 temp.x_ += x_;
  81:Core/Inc/utils/vec3.h ****                 temp.y_ += y_;
  82:Core/Inc/utils/vec3.h ****                 temp.z_ += z_;
  83:Core/Inc/utils/vec3.h **** 
  84:Core/Inc/utils/vec3.h ****                 return temp;
  85:Core/Inc/utils/vec3.h ****         }
  86:Core/Inc/utils/vec3.h **** 
  87:Core/Inc/utils/vec3.h **** 
  88:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(float num) {
  89:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
  90:Core/Inc/utils/vec3.h ****                 temp.x_ -= num;
  91:Core/Inc/utils/vec3.h ****                 temp.y_ -= num;
  92:Core/Inc/utils/vec3.h ****                 temp.z_ -= num;
  93:Core/Inc/utils/vec3.h **** 
  94:Core/Inc/utils/vec3.h ****                 return temp;
  95:Core/Inc/utils/vec3.h ****         }
  96:Core/Inc/utils/vec3.h **** 
  97:Core/Inc/utils/vec3.h ****         template <typename T1>
  98:Core/Inc/utils/vec3.h ****         Vec3 sub_EW(Vec3<T1> v) {
  99:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 100:Core/Inc/utils/vec3.h ****                 temp.x_ -= x_;
 101:Core/Inc/utils/vec3.h ****                 temp.y_ -= y_;
 102:Core/Inc/utils/vec3.h ****                 temp.z_ -= z_;
 103:Core/Inc/utils/vec3.h **** 
 104:Core/Inc/utils/vec3.h ****                 return temp;
 105:Core/Inc/utils/vec3.h ****         }
 106:Core/Inc/utils/vec3.h **** 
 107:Core/Inc/utils/vec3.h **** 
 108:Core/Inc/utils/vec3.h ****         Vec3 div_EW(float num) {
 109:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 110:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)num;
 111:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)num;
 112:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)num;
 113:Core/Inc/utils/vec3.h **** 
 114:Core/Inc/utils/vec3.h ****                 return temp;
 115:Core/Inc/utils/vec3.h ****         }
 116:Core/Inc/utils/vec3.h **** 
 117:Core/Inc/utils/vec3.h ****         template <typename T1>
 118:Core/Inc/utils/vec3.h ****         Vec3 div_EW(Vec3<T1> v) {
 119:Core/Inc/utils/vec3.h ****                 Vec3 temp(*this);
 120:Core/Inc/utils/vec3.h ****                 temp.x_ /= (float)v.x_;
 121:Core/Inc/utils/vec3.h ****                 temp.y_ /= (float)v.y_;
 122:Core/Inc/utils/vec3.h ****                 temp.z_ /= (float)v.z_;
 123:Core/Inc/utils/vec3.h **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 28


 124:Core/Inc/utils/vec3.h ****                 return temp;
 125:Core/Inc/utils/vec3.h ****         }
 126:Core/Inc/utils/vec3.h **** 
 127:Core/Inc/utils/vec3.h ****         
 128:Core/Inc/utils/vec3.h ****         Vec3(const Vec3 &v) {
 129:Core/Inc/utils/vec3.h ****                 x_ = v.x_;
 784              		.loc 4 129 0 discriminator 1
 785 0148 7F4B     		ldr	r3, .L70+56
 786 014a 1A68     		ldr	r2, [r3]	@ float
 787 014c 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 788              		.loc 4 130 0 discriminator 1
 789 014e 5A68     		ldr	r2, [r3, #4]	@ float
 790 0150 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 791              		.loc 4 131 0 discriminator 1
 792 0152 9B68     		ldr	r3, [r3, #8]	@ float
 793 0154 0593     		str	r3, [sp, #20]	@ float
 794              	.LVL85:
 795              	.LBE132:
 796              	.LBE131:
 797              	.LBE130:
 798              	.LBB133:
 799              	.LBB134:
 132:Core/Inc/utils/vec3.h ****         }
 133:Core/Inc/utils/vec3.h ****         
 134:Core/Inc/utils/vec3.h ****         Vec3 &operator=(const Vec3 &v) {
 135:Core/Inc/utils/vec3.h ****                 Vec3 temp(v);
 136:Core/Inc/utils/vec3.h ****                 swap(*this, temp);
 137:Core/Inc/utils/vec3.h **** 
 138:Core/Inc/utils/vec3.h ****                 return *this;
 139:Core/Inc/utils/vec3.h ****         }
 140:Core/Inc/utils/vec3.h **** 
 141:Core/Inc/utils/vec3.h ****         Vec3 &operator+=(const Vec3 &rhs) {
 142:Core/Inc/utils/vec3.h ****                 x_ += rhs.x_;
 143:Core/Inc/utils/vec3.h ****                 y_ += rhs.y_;
 144:Core/Inc/utils/vec3.h ****                 z_ += rhs.z_;
 145:Core/Inc/utils/vec3.h **** 
 146:Core/Inc/utils/vec3.h ****                 return *this;
 147:Core/Inc/utils/vec3.h ****         }
 148:Core/Inc/utils/vec3.h ****         
 149:Core/Inc/utils/vec3.h ****         Vec3 &operator-=(const Vec3 &rhs) {
 150:Core/Inc/utils/vec3.h ****                 x_ -= rhs.x_;
 151:Core/Inc/utils/vec3.h ****                 y_ -= rhs.y_;
 152:Core/Inc/utils/vec3.h ****                 z_ -= rhs.z_;
 153:Core/Inc/utils/vec3.h **** 
 154:Core/Inc/utils/vec3.h ****                 return *this;
 155:Core/Inc/utils/vec3.h ****         }
 156:Core/Inc/utils/vec3.h **** 
 157:Core/Inc/utils/vec3.h ****         friend Vec3 operator+(Vec3 lhs, const Vec3 &rhs) {
 158:Core/Inc/utils/vec3.h ****                 lhs += rhs;
 159:Core/Inc/utils/vec3.h ****                 return lhs;
 160:Core/Inc/utils/vec3.h ****         }
 161:Core/Inc/utils/vec3.h **** 
 162:Core/Inc/utils/vec3.h ****         friend Vec3 operator-(Vec3 lhs, const Vec3 &rhs) {
 163:Core/Inc/utils/vec3.h ****                 lhs -= rhs;
 164:Core/Inc/utils/vec3.h ****                 return lhs;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 29


 165:Core/Inc/utils/vec3.h ****         }
 166:Core/Inc/utils/vec3.h **** 
 167:Core/Inc/utils/vec3.h ****         void print() const {
 168:Core/Inc/utils/vec3.h ****                 printf("%ld, %ld, %ld", (int32_t)x_, (int32_t)y_, (int32_t)z_);
 169:Core/Inc/utils/vec3.h ****         }
 170:Core/Inc/utils/vec3.h **** 
 171:Core/Inc/utils/vec3.h **** private:
 172:Core/Inc/utils/vec3.h ****         T x_,y_,z_;
 173:Core/Inc/utils/vec3.h **** 
 174:Core/Inc/utils/vec3.h ****         friend void swap(Vec3 &first, Vec3 &second) {
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.x_, second.x_);
 800              		.loc 4 175 0 discriminator 1
 801 0156 7D4C     		ldr	r4, .L70+60
 802 0158 03A9     		add	r1, sp, #12
 803              	.LVL86:
 804 015a 2046     		mov	r0, r4
 805 015c FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 806              	.LVL87:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 807              		.loc 4 176 0 discriminator 1
 808 0160 04A9     		add	r1, sp, #16
 809 0162 201D     		adds	r0, r4, #4
 810 0164 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 811              	.LVL88:
 177:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 812              		.loc 4 177 0 discriminator 1
 813 0168 05A9     		add	r1, sp, #20
 814 016a 04F10800 		add	r0, r4, #8
 815 016e FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 816              	.LVL89:
 817              	.LBE134:
 818              	.LBE133:
 819              	.LBE129:
 820              	.LBE128:
  71:Core/Src/robot/robot.cpp **** 			if (getup_n_run() == true)
 821              		.loc 1 71 0 discriminator 1
 822 0172 FFF7FEFF 		bl	_Z11getup_n_runv
 823              	.LVL90:
 824 0176 0028     		cmp	r0, #0
 825 0178 00F00283 		beq	.L30
  73:Core/Src/robot/robot.cpp **** 				zone_select();
 826              		.loc 1 73 0
 827 017c FFF7FEFF 		bl	_Z11zone_selectv
 828              	.LVL91:
 829 0180 FEE2     		b	.L30
 830              	.LVL92:
 831              	.L44:
 832              	.LBE127:
  44:Core/Src/robot/robot.cpp **** 			USE_IMU_FLAG = false;
 833              		.loc 1 44 0
 834 0182 674B     		ldr	r3, .L70+16
 835 0184 0022     		movs	r2, #0
 836 0186 1A70     		strb	r2, [r3]
  45:Core/Src/robot/robot.cpp **** 			robot_angle = 0;
 837              		.loc 1 45 0
 838 0188 6B4B     		ldr	r3, .L70+40
 839 018a 0022     		movs	r2, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 30


 840 018c 1A60     		str	r2, [r3]	@ float
 841 018e 5BE7     		b	.L45
 842              	.L64:
 843              	.LVL93:
 844              	.LBB137:
 845              	.LBB138:
 846              	.LBB139:
 847              	.LBB140:
 848              	.LBB141:
 129:Core/Inc/utils/vec3.h ****                 y_ = v.y_;
 849              		.loc 4 129 0
 850 0190 6D4B     		ldr	r3, .L70+56
 851 0192 1A68     		ldr	r2, [r3]	@ float
 852 0194 0392     		str	r2, [sp, #12]	@ float
 130:Core/Inc/utils/vec3.h ****                 z_ = v.z_;
 853              		.loc 4 130 0
 854 0196 5A68     		ldr	r2, [r3, #4]	@ float
 855 0198 0492     		str	r2, [sp, #16]	@ float
 131:Core/Inc/utils/vec3.h ****         }
 856              		.loc 4 131 0
 857 019a 9B68     		ldr	r3, [r3, #8]	@ float
 858 019c 0593     		str	r3, [sp, #20]	@ float
 859              	.LVL94:
 860              	.LBE141:
 861              	.LBE140:
 862              	.LBE139:
 863              	.LBB142:
 864              	.LBB143:
 175:Core/Inc/utils/vec3.h ****                 swap_Element(first.y_, second.y_);
 865              		.loc 4 175 0
 866 019e 6B4C     		ldr	r4, .L70+60
 867              	.LVL95:
 868 01a0 03A9     		add	r1, sp, #12
 869              	.LVL96:
 870 01a2 2046     		mov	r0, r4
 871 01a4 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 872              	.LVL97:
 176:Core/Inc/utils/vec3.h ****                 swap_Element(first.z_, second.z_);
 873              		.loc 4 176 0
 874 01a8 04A9     		add	r1, sp, #16
 875 01aa 201D     		adds	r0, r4, #4
 876 01ac FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 877              	.LVL98:
 878              		.loc 4 177 0
 879 01b0 05A9     		add	r1, sp, #20
 880 01b2 04F10800 		add	r0, r4, #8
 881 01b6 FFF7FEFF 		bl	_Z12swap_ElementIfEvRT_S1_
 882              	.LVL99:
 883              	.LBE143:
 884              	.LBE142:
 885              	.LBE138:
 886              	.LBE137:
 887              	.LBB144:
 888              	.LBB145:
  36:Core/Inc/utils/vec3.h ****         void setX(T x) { x_ = x; }
 889              		.loc 4 36 0
 890 01ba D4ED027A 		vldr.32	s15, [r4, #8]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 31


 891              	.LVL100:
 892              	.LBE145:
 893              	.LBE144:
  53:Core/Src/robot/robot.cpp **** 			printf("\t%d\t", (int)initial_angle.getZ());
 894              		.loc 1 53 0
 895 01be FDEEE77A 		vcvt.s32.f32	s15, s15
 896 01c2 17EE901A 		vmov	r1, s15	@ int
 897 01c6 6248     		ldr	r0, .L70+64
 898 01c8 FFF7FEFF 		bl	printf
 899              	.LVL101:
 900 01cc 47E7     		b	.L47
 901              	.LVL102:
 902              	.L65:
  57:Core/Src/robot/robot.cpp **** 			INITIAL_ANGLE_FLAG = false;
 903              		.loc 1 57 0
 904 01ce 564B     		ldr	r3, .L70+24
 905 01d0 0022     		movs	r2, #0
 906 01d2 1A70     		strb	r2, [r3]
  58:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_SET);
 907              		.loc 1 58 0
 908 01d4 0122     		movs	r2, #1
 909 01d6 0421     		movs	r1, #4
 910 01d8 5948     		ldr	r0, .L70+48
 911 01da FFF7FEFF 		bl	HAL_GPIO_WritePin
 912              	.LVL103:
 913 01de 3EE7     		b	.L47
 914              	.LVL104:
 915              	.L66:
 916              	.LBB146:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 917              		.loc 1 64 0
 918 01e0 4FF48051 		mov	r1, #4096
 919 01e4 5648     		ldr	r0, .L70+48
 920 01e6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 921              	.LVL105:
  63:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_45_GPIO_Port, ZONE_45_Pin) == GPIO_PIN_RESET) ||
 922              		.loc 1 63 0
 923 01ea 0028     		cmp	r0, #0
 924 01ec A1D0     		beq	.L48
  65:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_MOUNTAIN_GPIO_Port, ZONE_MOUNTAIN_Pin) == GPIO_PIN_RESET))
 925              		.loc 1 65 0 discriminator 2
 926 01ee 0221     		movs	r1, #2
 927 01f0 5848     		ldr	r0, .L70+68
 928 01f2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 929              	.LVL106:
  64:Core/Src/robot/robot.cpp **** 		    (HAL_GPIO_ReadPin(ZONE_SAND_GPIO_Port, ZONE_SAND_Pin) == GPIO_PIN_RESET) ||
 930              		.loc 1 64 0 discriminator 2
 931 01f6 0028     		cmp	r0, #0
 932 01f8 9BD0     		beq	.L48
 933              	.LBB135:
  76:Core/Src/robot/robot.cpp **** 		else if ((HAL_GPIO_ReadPin(GEREGE_SWITCH_GPIO_Port, GEREGE_SWITCH_Pin) == GPIO_PIN_RESET))
 934              		.loc 1 76 0
 935 01fa 4FF40071 		mov	r1, #512
 936 01fe 5548     		ldr	r0, .L70+68
 937 0200 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 938              	.LVL107:
 939 0204 0028     		cmp	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 32


 940 0206 45D1     		bne	.L67
 941              	.LBB136:
  79:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(GreenLED_GPIO_Port, GreenLED_Pin, GPIO_PIN_RESET);
 942              		.loc 1 79 0
 943 0208 524C     		ldr	r4, .L70+68
 944 020a 0022     		movs	r2, #0
 945 020c 4FF48051 		mov	r1, #4096
 946 0210 2046     		mov	r0, r4
 947 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 948              	.LVL108:
  80:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(OrangeLED_GPIO_Port, OrangeLED_Pin, GPIO_PIN_RESET);
 949              		.loc 1 80 0
 950 0216 0022     		movs	r2, #0
 951 0218 4FF40051 		mov	r1, #8192
 952 021c 2046     		mov	r0, r4
 953 021e FFF7FEFF 		bl	HAL_GPIO_WritePin
 954              	.LVL109:
  81:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(RedLED_GPIO_Port, RedLED_Pin, GPIO_PIN_RESET);
 955              		.loc 1 81 0
 956 0222 0022     		movs	r2, #0
 957 0224 4FF48041 		mov	r1, #16384
 958 0228 2046     		mov	r0, r4
 959 022a FFF7FEFF 		bl	HAL_GPIO_WritePin
 960              	.LVL110:
  82:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(BlueLED_GPIO_Port, BlueLED_Pin, GPIO_PIN_RESET);
 961              		.loc 1 82 0
 962 022e 0022     		movs	r2, #0
 963 0230 4FF40041 		mov	r1, #32768
 964 0234 2046     		mov	r0, r4
 965 0236 FFF7FEFF 		bl	HAL_GPIO_WritePin
 966              	.LVL111:
  83:Core/Src/robot/robot.cpp **** 			HAL_GPIO_WritePin(Grip_Pneumatic_GPIO_Port, Grip_Pneumatic_Pin, GPIO_PIN_RESET);
 967              		.loc 1 83 0
 968 023a 0022     		movs	r2, #0
 969 023c 0421     		movs	r1, #4
 970 023e 4048     		ldr	r0, .L70+48
 971 0240 FFF7FEFF 		bl	HAL_GPIO_WritePin
 972              	.LVL112:
  84:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 973              		.loc 1 84 0
 974 0244 374B     		ldr	r3, .L70+20
 975 0246 0022     		movs	r2, #0
 976 0248 1A70     		strb	r2, [r3]
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 977              		.loc 1 86 0
 978 024a 434B     		ldr	r3, .L70+72
 979 024c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 024e BFF35B8F 		dmb	ish
 981 0252 13F0010F 		tst	r3, #1
 982 0256 10D0     		beq	.L68
 983              	.L53:
  87:Core/Src/robot/robot.cpp **** 			if ((HAL_GetTick() - init_time) >= (uint32_t)(500))
 984              		.loc 1 87 0
 985 0258 FFF7FEFF 		bl	HAL_GetTick
 986              	.LVL113:
 987 025c 3F4B     		ldr	r3, .L70+76
 988 025e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 33


 989 0260 C31A     		subs	r3, r0, r3
 990 0262 B3F5FA7F 		cmp	r3, #500
 991 0266 C0F08B82 		bcc	.L30
  89:Core/Src/robot/robot.cpp **** 				if (getup_n_run() == true)
 992              		.loc 1 89 0
 993 026a FFF7FEFF 		bl	_Z11getup_n_runv
 994              	.LVL114:
 995 026e 0028     		cmp	r0, #0
 996 0270 00F08682 		beq	.L30
  91:Core/Src/robot/robot.cpp **** 					zone_select();
 997              		.loc 1 91 0
 998 0274 FFF7FEFF 		bl	_Z11zone_selectv
 999              	.LVL115:
 1000 0278 82E2     		b	.L30
 1001              	.L68:
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1002              		.loc 1 86 0 discriminator 1
 1003 027a 3748     		ldr	r0, .L70+72
 1004 027c FFF7FEFF 		bl	__cxa_guard_acquire
 1005              	.LVL116:
 1006 0280 0028     		cmp	r0, #0
 1007 0282 E9D0     		beq	.L53
  86:Core/Src/robot/robot.cpp **** 			static uint32_t init_time = HAL_GetTick();
 1008              		.loc 1 86 0 is_stmt 0 discriminator 2
 1009 0284 FFF7FEFF 		bl	HAL_GetTick
 1010              	.LVL117:
 1011 0288 344B     		ldr	r3, .L70+76
 1012 028a 1860     		str	r0, [r3]
 1013 028c 3248     		ldr	r0, .L70+72
 1014 028e FFF7FEFF 		bl	__cxa_guard_release
 1015              	.LVL118:
 1016 0292 E1E7     		b	.L53
 1017              	.L67:
 1018              	.LBE136:
  98:Core/Src/robot/robot.cpp **** 			leg[0].set_omega(0);
 1019              		.loc 1 98 0 is_stmt 1
 1020 0294 9FED328A 		vldr.32	s16, .L70+80
 1021 0298 324C     		ldr	r4, .L70+84
 1022 029a B0EE480A 		vmov.f32	s0, s16
 1023 029e 2046     		mov	r0, r4
 1024 02a0 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1025              	.LVL119:
  99:Core/Src/robot/robot.cpp **** 			leg[1].set_omega(0);
 1026              		.loc 1 99 0
 1027 02a4 B0EE480A 		vmov.f32	s0, s16
 1028 02a8 04F15800 		add	r0, r4, #88
 1029 02ac FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1030              	.LVL120:
 100:Core/Src/robot/robot.cpp **** 			steering.set_angle(0);
 1031              		.loc 1 100 0
 1032 02b0 B0EE480A 		vmov.f32	s0, s16
 1033 02b4 2C48     		ldr	r0, .L70+88
 1034 02b6 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1035              	.LVL121:
 1036 02ba 61E2     		b	.L30
 1037              	.LVL122:
 1038              	.L34:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 34


 1039              	.LBE135:
 1040              	.LBE146:
 1041              	.LBE120:
 112:Core/Src/robot/robot.cpp **** 		printf("\nMarch");
 1042              		.loc 1 112 0
 1043 02bc 2B48     		ldr	r0, .L70+92
 1044              	.LVL123:
 1045 02be FFF7FEFF 		bl	printf
 1046              	.LVL124:
 113:Core/Src/robot/robot.cpp **** 		if (go(steps[0], angles[0]) == true)
 1047              		.loc 1 113 0
 1048 02c2 2B4B     		ldr	r3, .L70+96
 1049 02c4 D3ED007A 		vldr.32	s15, [r3]
 1050 02c8 2A4B     		ldr	r3, .L70+100
 1051 02ca 93ED000A 		vldr.32	s0, [r3]
 1052 02ce FDEEE77A 		vcvt.s32.f32	s15, s15
 1053 02d2 17EE900A 		vmov	r0, s15	@ int
 1054 02d6 FFF7FEFF 		bl	_Z2goif
 1055              	.LVL125:
 1056 02da 0028     		cmp	r0, #0
 1057 02dc 00F05082 		beq	.L30
 115:Core/Src/robot/robot.cpp **** 			*state_ = TURN_45;
 1058              		.loc 1 115 0
 1059 02e0 0223     		movs	r3, #2
 1060 02e2 2370     		strb	r3, [r4]
 116:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1061              		.loc 1 116 0
 1062 02e4 1B4C     		ldr	r4, .L70+68
 1063              	.LVL126:
 1064 02e6 4FF48051 		mov	r1, #4096
 1065 02ea 2046     		mov	r0, r4
 1066 02ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1067              	.LVL127:
 117:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1068              		.loc 1 117 0
 1069 02f0 4FF40051 		mov	r1, #8192
 1070 02f4 2046     		mov	r0, r4
 1071 02f6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1072              	.LVL128:
 118:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1073              		.loc 1 118 0
 1074 02fa 4FF48041 		mov	r1, #16384
 1075 02fe 2046     		mov	r0, r4
 1076 0300 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1077              	.LVL129:
 119:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1078              		.loc 1 119 0
 1079 0304 4FF40041 		mov	r1, #32768
 1080 0308 2046     		mov	r0, r4
 1081 030a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1082              	.LVL130:
 1083 030e 37E2     		b	.L30
 1084              	.L71:
 1085              		.align	3
 1086              	.L70:
 1087 0310 182D4454 		.word	1413754136
 1088 0314 FB210940 		.word	1074340347
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 35


 1089 0318 00000000 		.word	.LC12
 1090 031c 00100240 		.word	1073876992
 1091 0320 00000000 		.word	.LANCHOR4
 1092 0324 00000000 		.word	.LANCHOR1
 1093 0328 00000000 		.word	.LANCHOR5
 1094 032c 3C000000 		.word	leg+60
 1095 0330 00003443 		.word	1127481344
 1096 0334 0C000000 		.word	steering+12
 1097 0338 00000000 		.word	robot_angle
 1098 033c 10000000 		.word	.LC14
 1099 0340 00080240 		.word	1073874944
 1100 0344 00000240 		.word	1073872896
 1101 0348 00000000 		.word	curr_angle
 1102 034c 00000000 		.word	initial_angle
 1103 0350 08000000 		.word	.LC13
 1104 0354 000C0240 		.word	1073875968
 1105 0358 00000000 		.word	.LANCHOR6
 1106 035c 00000000 		.word	.LANCHOR7
 1107 0360 00000000 		.word	0
 1108 0364 00000000 		.word	leg
 1109 0368 00000000 		.word	steering
 1110 036c 58000000 		.word	.LC15
 1111 0370 00000000 		.word	.LANCHOR2
 1112 0374 00000000 		.word	.LANCHOR3
 1113              	.LVL131:
 1114              	.L35:
 133:Core/Src/robot/robot.cpp **** 		printf("\nTurn 45");
 1115              		.loc 1 133 0
 1116 0378 C948     		ldr	r0, .L72+8
 1117              	.LVL132:
 1118 037a FFF7FEFF 		bl	printf
 1119              	.LVL133:
 135:Core/Src/robot/robot.cpp **** 		go(99, angles[1]);
 1120              		.loc 1 135 0
 1121 037e C94B     		ldr	r3, .L72+12
 1122 0380 93ED010A 		vldr.32	s0, [r3, #4]
 1123 0384 6320     		movs	r0, #99
 1124 0386 FFF7FEFF 		bl	_Z2goif
 1125              	.LVL134:
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
 1126              		.loc 1 136 0
 1127 038a 4FF40061 		mov	r1, #2048
 1128 038e C648     		ldr	r0, .L72+16
 1129 0390 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1130              	.LVL135:
 1131 0394 68B1     		cbz	r0, .L54
 1132              	.LVL136:
 1133              	.LBB147:
 1134              	.LBB148:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1135              		.loc 2 45 0
 1136 0396 C54B     		ldr	r3, .L72+20
 1137 0398 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1138              	.LVL137:
 1139              	.LBE148:
 1140              	.LBE147:
 136:Core/Src/robot/robot.cpp **** 		if ((HAL_GPIO_ReadPin(Proximity_Front_GPIO_Port, Proximity_Front_Pin) == GPIO_PIN_RESET) || leg[0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 36


 1141              		.loc 1 136 0
 1142 039c F8EEE77A 		vcvt.f32.s32	s15, s15
 1143 03a0 C34B     		ldr	r3, .L72+24
 1144 03a2 93ED017A 		vldr.32	s14, [r3, #4]
 1145 03a6 F4EEC77A 		vcmpe.f32	s15, s14
 1146 03aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1147 03ae 40F3E781 		ble	.L30
 1148              	.L54:
 139:Core/Src/robot/robot.cpp **** 			*state_ = SAND_DUNE;
 1149              		.loc 1 139 0 discriminator 3
 1150 03b2 0323     		movs	r3, #3
 1151 03b4 2370     		strb	r3, [r4]
 140:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[1];
 1152              		.loc 1 140 0 discriminator 3
 1153 03b6 BE4B     		ldr	r3, .L72+24
 1154 03b8 D3ED017A 		vldr.32	s15, [r3, #4]
 1155 03bc FDEEE77A 		vcvt.s32.f32	s15, s15
 1156 03c0 BA4A     		ldr	r2, .L72+20
 1157 03c2 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 141:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[1];
 1158              		.loc 1 141 0 discriminator 3
 1159 03c6 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 143:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1160              		.loc 1 143 0 discriminator 3
 1161 03ca B74C     		ldr	r4, .L72+16
 1162              	.LVL138:
 1163 03cc 4FF48051 		mov	r1, #4096
 1164 03d0 2046     		mov	r0, r4
 1165 03d2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1166              	.LVL139:
 144:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1167              		.loc 1 144 0 discriminator 3
 1168 03d6 4FF40051 		mov	r1, #8192
 1169 03da 2046     		mov	r0, r4
 1170 03dc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1171              	.LVL140:
 145:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1172              		.loc 1 145 0 discriminator 3
 1173 03e0 4FF48041 		mov	r1, #16384
 1174 03e4 2046     		mov	r0, r4
 1175 03e6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1176              	.LVL141:
 146:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1177              		.loc 1 146 0 discriminator 3
 1178 03ea 4FF40041 		mov	r1, #32768
 1179 03ee 2046     		mov	r0, r4
 1180 03f0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1181              	.LVL142:
 1182 03f4 C4E1     		b	.L30
 1183              	.LVL143:
 1184              	.L36:
 157:Core/Src/robot/robot.cpp **** 		printf("\nSand dune");
 1185              		.loc 1 157 0
 1186 03f6 AF48     		ldr	r0, .L72+28
 1187              	.LVL144:
 1188 03f8 FFF7FEFF 		bl	printf
 1189              	.LVL145:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 37


 159:Core/Src/robot/robot.cpp **** 		go(100, angles[2]);
 1190              		.loc 1 159 0
 1191 03fc A94B     		ldr	r3, .L72+12
 1192 03fe 93ED020A 		vldr.32	s0, [r3, #8]
 1193 0402 6420     		movs	r0, #100
 1194 0404 FFF7FEFF 		bl	_Z2goif
 1195              	.LVL146:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1196              		.loc 1 160 0
 1197 0408 4FF48071 		mov	r1, #256
 1198 040c A648     		ldr	r0, .L72+16
 1199 040e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1200              	.LVL147:
 1201 0412 80B9     		cbnz	r0, .L56
 1202              	.LVL148:
 1203              	.LBB149:
 1204              	.LBB150:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1205              		.loc 2 45 0
 1206 0414 A54B     		ldr	r3, .L72+20
 1207 0416 93ED047A 		vldr.32	s14, [r3, #16]	@ int
 1208              	.LVL149:
 1209              	.LBE150:
 1210              	.LBE149:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1211              		.loc 1 160 0
 1212 041a B8EEC77A 		vcvt.f32.s32	s14, s14
 1213 041e A44B     		ldr	r3, .L72+24
 1214 0420 D3ED027A 		vldr.32	s15, [r3, #8]
 1215 0424 F7EE006A 		vmov.f32	s13, #1.0e+0
 1216 0428 77EEE67A 		vsub.f32	s15, s15, s13
 1217 042c B4EEE77A 		vcmpe.f32	s14, s15
 1218 0430 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1219 0434 0DDC     		bgt	.L57
 1220              	.L56:
 1221              	.LVL150:
 1222              	.LBB151:
 1223              	.LBB152:
  45:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
 1224              		.loc 2 45 0 discriminator 4
 1225 0436 9D4B     		ldr	r3, .L72+20
 1226 0438 D3ED047A 		vldr.32	s15, [r3, #16]	@ int
 1227              	.LVL151:
 1228              	.LBE152:
 1229              	.LBE151:
 160:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) && (leg[0
 1230              		.loc 1 160 0 discriminator 4
 1231 043c F8EEE77A 		vcvt.f32.s32	s15, s15
 1232 0440 9B4B     		ldr	r3, .L72+24
 1233 0442 93ED027A 		vldr.32	s14, [r3, #8]
 1234 0446 F4EEC77A 		vcmpe.f32	s15, s14
 1235 044a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1236 044e 40F39781 		ble	.L30
 1237              	.L57:
 163:Core/Src/robot/robot.cpp **** 			*state_ = STATE_D;
 1238              		.loc 1 163 0 discriminator 5
 1239 0452 0423     		movs	r3, #4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 38


 1240 0454 2370     		strb	r3, [r4]
 164:Core/Src/robot/robot.cpp **** 			leg[0].steps = steps[2];
 1241              		.loc 1 164 0 discriminator 5
 1242 0456 964B     		ldr	r3, .L72+24
 1243 0458 D3ED027A 		vldr.32	s15, [r3, #8]
 1244 045c FDEEE77A 		vcvt.s32.f32	s15, s15
 1245 0460 924A     		ldr	r2, .L72+20
 1246 0462 C2ED047A 		vstr.32	s15, [r2, #16]	@ int
 165:Core/Src/robot/robot.cpp **** 			leg[1].steps = steps[2];
 1247              		.loc 1 165 0 discriminator 5
 1248 0466 C2ED1A7A 		vstr.32	s15, [r2, #104]	@ int
 167:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1249              		.loc 1 167 0 discriminator 5
 1250 046a 8F4C     		ldr	r4, .L72+16
 1251              	.LVL152:
 1252 046c 4FF48051 		mov	r1, #4096
 1253 0470 2046     		mov	r0, r4
 1254 0472 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1255              	.LVL153:
 168:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1256              		.loc 1 168 0 discriminator 5
 1257 0476 4FF40051 		mov	r1, #8192
 1258 047a 2046     		mov	r0, r4
 1259 047c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1260              	.LVL154:
 169:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1261              		.loc 1 169 0 discriminator 5
 1262 0480 4FF48041 		mov	r1, #16384
 1263 0484 2046     		mov	r0, r4
 1264 0486 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1265              	.LVL155:
 170:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1266              		.loc 1 170 0 discriminator 5
 1267 048a 4FF40041 		mov	r1, #32768
 1268 048e 2046     		mov	r0, r4
 1269 0490 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1270              	.LVL156:
 1271 0494 74E1     		b	.L30
 1272              	.LVL157:
 1273              	.L37:
 181:Core/Src/robot/robot.cpp **** 		printf("\nState D");
 1274              		.loc 1 181 0
 1275 0496 8848     		ldr	r0, .L72+32
 1276              	.LVL158:
 1277 0498 FFF7FEFF 		bl	printf
 1278              	.LVL159:
 182:Core/Src/robot/robot.cpp **** 		if (go(steps[3], angles[3]) == true)
 1279              		.loc 1 182 0
 1280 049c 844B     		ldr	r3, .L72+24
 1281 049e D3ED037A 		vldr.32	s15, [r3, #12]
 1282 04a2 804B     		ldr	r3, .L72+12
 1283 04a4 93ED030A 		vldr.32	s0, [r3, #12]
 1284 04a8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1285 04ac 17EE900A 		vmov	r0, s15	@ int
 1286 04b0 FFF7FEFF 		bl	_Z2goif
 1287              	.LVL160:
 1288 04b4 0028     		cmp	r0, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 39


 1289 04b6 00F06381 		beq	.L30
 184:Core/Src/robot/robot.cpp **** 			*state_ = TURN_90;
 1290              		.loc 1 184 0
 1291 04ba 0523     		movs	r3, #5
 1292 04bc 2370     		strb	r3, [r4]
 186:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1293              		.loc 1 186 0
 1294 04be 7A4C     		ldr	r4, .L72+16
 1295              	.LVL161:
 1296 04c0 4FF48051 		mov	r1, #4096
 1297 04c4 2046     		mov	r0, r4
 1298 04c6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1299              	.LVL162:
 187:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1300              		.loc 1 187 0
 1301 04ca 4FF40051 		mov	r1, #8192
 1302 04ce 2046     		mov	r0, r4
 1303 04d0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1304              	.LVL163:
 188:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1305              		.loc 1 188 0
 1306 04d4 4FF48041 		mov	r1, #16384
 1307 04d8 2046     		mov	r0, r4
 1308 04da FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1309              	.LVL164:
 189:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1310              		.loc 1 189 0
 1311 04de 4FF40041 		mov	r1, #32768
 1312 04e2 2046     		mov	r0, r4
 1313 04e4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1314              	.LVL165:
 1315 04e8 4AE1     		b	.L30
 1316              	.LVL166:
 1317              	.L38:
 200:Core/Src/robot/robot.cpp **** 		printf("\nTurn 90");
 1318              		.loc 1 200 0
 1319 04ea 7448     		ldr	r0, .L72+36
 1320              	.LVL167:
 1321 04ec FFF7FEFF 		bl	printf
 1322              	.LVL168:
 201:Core/Src/robot/robot.cpp **** 		if (go(steps[4], angles[4]) == true)
 1323              		.loc 1 201 0
 1324 04f0 6F4B     		ldr	r3, .L72+24
 1325 04f2 D3ED047A 		vldr.32	s15, [r3, #16]
 1326 04f6 6B4B     		ldr	r3, .L72+12
 1327 04f8 93ED040A 		vldr.32	s0, [r3, #16]
 1328 04fc FDEEE77A 		vcvt.s32.f32	s15, s15
 1329 0500 17EE900A 		vmov	r0, s15	@ int
 1330 0504 FFF7FEFF 		bl	_Z2goif
 1331              	.LVL169:
 1332 0508 0028     		cmp	r0, #0
 1333 050a 00F03981 		beq	.L30
 203:Core/Src/robot/robot.cpp **** 			*state_ = TUSSOCK;
 1334              		.loc 1 203 0
 1335 050e 0623     		movs	r3, #6
 1336 0510 2370     		strb	r3, [r4]
 205:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 40


 1337              		.loc 1 205 0
 1338 0512 654C     		ldr	r4, .L72+16
 1339              	.LVL170:
 1340 0514 4FF48051 		mov	r1, #4096
 1341 0518 2046     		mov	r0, r4
 1342 051a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1343              	.LVL171:
 206:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1344              		.loc 1 206 0
 1345 051e 4FF40051 		mov	r1, #8192
 1346 0522 2046     		mov	r0, r4
 1347 0524 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1348              	.LVL172:
 207:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1349              		.loc 1 207 0
 1350 0528 4FF48041 		mov	r1, #16384
 1351 052c 2046     		mov	r0, r4
 1352 052e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1353              	.LVL173:
 208:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1354              		.loc 1 208 0
 1355 0532 4FF40041 		mov	r1, #32768
 1356 0536 2046     		mov	r0, r4
 1357 0538 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1358              	.LVL174:
 1359 053c 20E1     		b	.L30
 1360              	.LVL175:
 1361              	.L39:
 1362              	.LBB153:
 220:Core/Src/robot/robot.cpp **** 		printf("\nTussock");
 1363              		.loc 1 220 0
 1364 053e 6048     		ldr	r0, .L72+40
 1365              	.LVL176:
 1366 0540 FFF7FEFF 		bl	printf
 1367              	.LVL177:
 221:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG)
 1368              		.loc 1 221 0
 1369 0544 5F4B     		ldr	r3, .L72+44
 1370 0546 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 0548 93B9     		cbnz	r3, .L59
 223:Core/Src/robot/robot.cpp **** 			if (go(steps[5], angles[5]) == true)
 1372              		.loc 1 223 0
 1373 054a 594B     		ldr	r3, .L72+24
 1374 054c D3ED057A 		vldr.32	s15, [r3, #20]
 1375 0550 544B     		ldr	r3, .L72+12
 1376 0552 93ED050A 		vldr.32	s0, [r3, #20]
 1377 0556 FDEEE77A 		vcvt.s32.f32	s15, s15
 1378 055a 17EE900A 		vmov	r0, s15	@ int
 1379 055e FFF7FEFF 		bl	_Z2goif
 1380              	.LVL178:
 1381 0562 0028     		cmp	r0, #0
 1382 0564 00F00C81 		beq	.L30
 225:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG = true;
 1383              		.loc 1 225 0
 1384 0568 564B     		ldr	r3, .L72+44
 1385 056a 0122     		movs	r2, #1
 1386 056c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 41


 1387 056e 07E1     		b	.L30
 1388              	.L59:
 230:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1389              		.loc 1 230 0
 1390 0570 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1391              	.LVL179:
 1392 0574 0028     		cmp	r0, #0
 1393 0576 00F00381 		beq	.L30
 232:Core/Src/robot/robot.cpp **** 				*state_ = BASE_CAMP;
 1394              		.loc 1 232 0
 1395 057a 0723     		movs	r3, #7
 1396 057c 2370     		strb	r3, [r4]
 233:Core/Src/robot/robot.cpp **** 				ROBOT_START_FLAG = false;
 1397              		.loc 1 233 0
 1398 057e 524B     		ldr	r3, .L72+48
 1399 0580 0022     		movs	r2, #0
 1400 0582 1A70     		strb	r2, [r3]
 234:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1401              		.loc 1 234 0
 1402 0584 484C     		ldr	r4, .L72+16
 1403              	.LVL180:
 1404 0586 4FF48051 		mov	r1, #4096
 1405 058a 2046     		mov	r0, r4
 1406 058c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1407              	.LVL181:
 235:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1408              		.loc 1 235 0
 1409 0590 4FF40051 		mov	r1, #8192
 1410 0594 2046     		mov	r0, r4
 1411 0596 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1412              	.LVL182:
 236:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1413              		.loc 1 236 0
 1414 059a 4FF48041 		mov	r1, #16384
 1415 059e 2046     		mov	r0, r4
 1416 05a0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1417              	.LVL183:
 237:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1418              		.loc 1 237 0
 1419 05a4 4FF40041 		mov	r1, #32768
 1420 05a8 2046     		mov	r0, r4
 1421 05aa FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1422              	.LVL184:
 1423 05ae E7E0     		b	.L30
 1424              	.LVL185:
 1425              	.L40:
 1426              	.LBE153:
 248:Core/Src/robot/robot.cpp **** 		printf("\nBase camp");
 1427              		.loc 1 248 0
 1428 05b0 4648     		ldr	r0, .L72+52
 1429              	.LVL186:
 1430 05b2 FFF7FEFF 		bl	printf
 1431              	.LVL187:
 249:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1432              		.loc 1 249 0
 1433 05b6 9FED468A 		vldr.32	s16, .L72+56
 1434 05ba 3C4D     		ldr	r5, .L72+20
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 42


 1435 05bc B0EE480A 		vmov.f32	s0, s16
 1436 05c0 2846     		mov	r0, r5
 1437 05c2 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1438              	.LVL188:
 250:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1439              		.loc 1 250 0
 1440 05c6 B0EE480A 		vmov.f32	s0, s16
 1441 05ca 05F15800 		add	r0, r5, #88
 1442 05ce FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1443              	.LVL189:
 251:Core/Src/robot/robot.cpp **** 		steering.set_angle(0);
 1444              		.loc 1 251 0
 1445 05d2 B0EE480A 		vmov.f32	s0, s16
 1446 05d6 3F48     		ldr	r0, .L72+60
 1447 05d8 FFF7FEFF 		bl	_ZN8steering9set_angleEf
 1448              	.LVL190:
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1449              		.loc 1 252 0
 1450 05dc 4FF48071 		mov	r1, #256
 1451 05e0 3148     		ldr	r0, .L72+16
 1452 05e2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1453              	.LVL191:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1454              		.loc 1 253 0
 1455 05e6 98BB     		cbnz	r0, .L69
 1456              	.L60:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1457              		.loc 1 253 0 is_stmt 0 discriminator 1
 1458 05e8 374B     		ldr	r3, .L72+48
 1459 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1460 05ec 002B     		cmp	r3, #0
 1461 05ee 00F0C780 		beq	.L30
 256:Core/Src/robot/robot.cpp **** 			*state_ = MOUNTAIN;
 1462              		.loc 1 256 0 is_stmt 1
 1463 05f2 0823     		movs	r3, #8
 1464 05f4 2370     		strb	r3, [r4]
 257:Core/Src/robot/robot.cpp **** 			angles[6] = robot_angle * 180 / PI;
 1465              		.loc 1 257 0
 1466 05f6 384B     		ldr	r3, .L72+64
 1467 05f8 93ED007A 		vldr.32	s14, [r3]
 1468 05fc DFED377A 		vldr.32	s15, .L72+68
 1469 0600 67EE277A 		vmul.f32	s15, s14, s15
 1470 0604 17EE900A 		vmov	r0, s15
 1471 0608 FFF7FEFF 		bl	__aeabi_f2d
 1472              	.LVL192:
 1473 060c 22A3     		adr	r3, .L72
 1474 060e D3E90023 		ldrd	r2, [r3]
 1475 0612 FFF7FEFF 		bl	__aeabi_ddiv
 1476              	.LVL193:
 1477 0616 FFF7FEFF 		bl	__aeabi_d2f
 1478              	.LVL194:
 1479 061a 224B     		ldr	r3, .L72+12
 1480 061c 9861     		str	r0, [r3, #24]	@ float
 258:Core/Src/robot/robot.cpp **** 			ROBOT_START_FLAG = false;
 1481              		.loc 1 258 0
 1482 061e 2A4B     		ldr	r3, .L72+48
 1483 0620 0022     		movs	r2, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 43


 1484 0622 1A70     		strb	r2, [r3]
 260:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1485              		.loc 1 260 0
 1486 0624 204C     		ldr	r4, .L72+16
 1487              	.LVL195:
 1488 0626 4FF48051 		mov	r1, #4096
 1489 062a 2046     		mov	r0, r4
 1490 062c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1491              	.LVL196:
 261:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1492              		.loc 1 261 0
 1493 0630 4FF40051 		mov	r1, #8192
 1494 0634 2046     		mov	r0, r4
 1495 0636 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1496              	.LVL197:
 262:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1497              		.loc 1 262 0
 1498 063a 4FF48041 		mov	r1, #16384
 1499 063e 2046     		mov	r0, r4
 1500 0640 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1501              	.LVL198:
 263:Core/Src/robot/robot.cpp **** 			HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1502              		.loc 1 263 0
 1503 0644 4FF40041 		mov	r1, #32768
 1504 0648 2046     		mov	r0, r4
 1505 064a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1506              	.LVL199:
 1507 064e 97E0     		b	.L30
 1508              	.LVL200:
 1509              	.L69:
 253:Core/Src/robot/robot.cpp **** 		     (HAL_GPIO_ReadPin(Proximity_Up_GPIO_Port, Proximity_Up_Pin) == GPIO_PIN_RESET)) &&
 1510              		.loc 1 253 0 discriminator 2
 1511 0650 4FF48061 		mov	r1, #1024
 1512 0654 1448     		ldr	r0, .L72+16
 1513 0656 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1514              	.LVL201:
 252:Core/Src/robot/robot.cpp **** 		if (((HAL_GPIO_ReadPin(Proximity_Back_GPIO_Port, Proximity_Back_Pin) == GPIO_PIN_RESET) ||
 1515              		.loc 1 252 0 discriminator 2
 1516 065a 0028     		cmp	r0, #0
 1517 065c C4D0     		beq	.L60
 1518 065e 8FE0     		b	.L30
 1519              	.LVL202:
 1520              	.L41:
 1521              	.LBB154:
 274:Core/Src/robot/robot.cpp **** 		printf("\nMOUNTAIN");
 1522              		.loc 1 274 0
 1523 0660 1F48     		ldr	r0, .L72+72
 1524              	.LVL203:
 1525 0662 FFF7FEFF 		bl	printf
 1526              	.LVL204:
 275:Core/Src/robot/robot.cpp **** 		if (!INITIALIZATION_FLAG_2)
 1527              		.loc 1 275 0
 1528 0666 1F4B     		ldr	r3, .L72+76
 1529 0668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1530 066a 002B     		cmp	r3, #0
 1531 066c 3CD1     		bne	.L61
 277:Core/Src/robot/robot.cpp **** 			if (go(steps[6], angles[6]) == true)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 44


 1532              		.loc 1 277 0
 1533 066e 104B     		ldr	r3, .L72+24
 1534 0670 D3ED067A 		vldr.32	s15, [r3, #24]
 1535 0674 0B4B     		ldr	r3, .L72+12
 1536 0676 93ED060A 		vldr.32	s0, [r3, #24]
 1537 067a FDEEE77A 		vcvt.s32.f32	s15, s15
 1538 067e 17EE900A 		vmov	r0, s15	@ int
 1539 0682 FFF7FEFF 		bl	_Z2goif
 1540              	.LVL205:
 1541 0686 0028     		cmp	r0, #0
 1542 0688 7AD0     		beq	.L30
 279:Core/Src/robot/robot.cpp **** 				INITIALIZATION_FLAG_2 = true;
 1543              		.loc 1 279 0
 1544 068a 164B     		ldr	r3, .L72+76
 1545 068c 0122     		movs	r2, #1
 1546 068e 1A70     		strb	r2, [r3]
 1547 0690 76E0     		b	.L30
 1548              	.L73:
 1549 0692 00BFAFF3 		.align	3
 1549      0080
 1550              	.L72:
 1551 0698 182D4454 		.word	1413754136
 1552 069c FB210940 		.word	1074340347
 1553 06a0 60000000 		.word	.LC16
 1554 06a4 00000000 		.word	.LANCHOR3
 1555 06a8 000C0240 		.word	1073875968
 1556 06ac 00000000 		.word	leg
 1557 06b0 00000000 		.word	.LANCHOR2
 1558 06b4 6C000000 		.word	.LC17
 1559 06b8 78000000 		.word	.LC18
 1560 06bc 84000000 		.word	.LC19
 1561 06c0 90000000 		.word	.LC20
 1562 06c4 00000000 		.word	.LANCHOR8
 1563 06c8 00000000 		.word	.LANCHOR1
 1564 06cc 9C000000 		.word	.LC21
 1565 06d0 00000000 		.word	0
 1566 06d4 00000000 		.word	steering
 1567 06d8 00000000 		.word	robot_angle
 1568 06dc 00003443 		.word	1127481344
 1569 06e0 A8000000 		.word	.LC22
 1570 06e4 00000000 		.word	.LANCHOR9
 1571              	.L61:
 284:Core/Src/robot/robot.cpp **** 			if (initialize_leg_position() == true)
 1572              		.loc 1 284 0
 1573 06e8 FFF7FEFF 		bl	_Z23initialize_leg_positionv
 1574              	.LVL206:
 1575 06ec 0028     		cmp	r0, #0
 1576 06ee 47D0     		beq	.L30
 286:Core/Src/robot/robot.cpp **** 				*state_ = UUKHAI;
 1577              		.loc 1 286 0
 1578 06f0 0923     		movs	r3, #9
 1579 06f2 2370     		strb	r3, [r4]
 287:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1580              		.loc 1 287 0
 1581 06f4 2E4C     		ldr	r4, .L74
 1582              	.LVL207:
 1583 06f6 4FF48051 		mov	r1, #4096
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 45


 1584 06fa 2046     		mov	r0, r4
 1585 06fc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1586              	.LVL208:
 288:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1587              		.loc 1 288 0
 1588 0700 4FF40051 		mov	r1, #8192
 1589 0704 2046     		mov	r0, r4
 1590 0706 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1591              	.LVL209:
 289:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1592              		.loc 1 289 0
 1593 070a 4FF48041 		mov	r1, #16384
 1594 070e 2046     		mov	r0, r4
 1595 0710 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1596              	.LVL210:
 290:Core/Src/robot/robot.cpp **** 				HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1597              		.loc 1 290 0
 1598 0714 4FF40041 		mov	r1, #32768
 1599 0718 2046     		mov	r0, r4
 1600 071a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1601              	.LVL211:
 1602 071e 2FE0     		b	.L30
 1603              	.LVL212:
 1604              	.L42:
 1605              	.LBE154:
 301:Core/Src/robot/robot.cpp **** 		printf("\nUUKHAI\n");
 1606              		.loc 1 301 0
 1607 0720 2448     		ldr	r0, .L74+4
 1608              	.LVL213:
 1609 0722 FFF7FEFF 		bl	puts
 1610              	.LVL214:
 302:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(0);
 1611              		.loc 1 302 0
 1612 0726 9FED248A 		vldr.32	s16, .L74+8
 1613 072a 244C     		ldr	r4, .L74+12
 1614              	.LVL215:
 1615 072c B0EE480A 		vmov.f32	s0, s16
 1616 0730 2046     		mov	r0, r4
 1617 0732 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1618              	.LVL216:
 303:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(0);
 1619              		.loc 1 303 0
 1620 0736 B0EE480A 		vmov.f32	s0, s16
 1621 073a 04F15800 		add	r0, r4, #88
 1622 073e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1623              	.LVL217:
 304:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1624              		.loc 1 304 0
 1625 0742 B0EE480A 		vmov.f32	s0, s16
 1626 0746 1E48     		ldr	r0, .L74+16
 1627 0748 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1628              	.LVL218:
 306:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(GreenLED_GPIO_Port, GreenLED_Pin);
 1629              		.loc 1 306 0
 1630 074c 184C     		ldr	r4, .L74
 1631 074e 4FF48051 		mov	r1, #4096
 1632 0752 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 46


 1633 0754 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1634              	.LVL219:
 307:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(OrangeLED_GPIO_Port, OrangeLED_Pin);
 1635              		.loc 1 307 0
 1636 0758 4FF40051 		mov	r1, #8192
 1637 075c 2046     		mov	r0, r4
 1638 075e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1639              	.LVL220:
 308:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(RedLED_GPIO_Port, RedLED_Pin);
 1640              		.loc 1 308 0
 1641 0762 4FF48041 		mov	r1, #16384
 1642 0766 2046     		mov	r0, r4
 1643 0768 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1644              	.LVL221:
 309:Core/Src/robot/robot.cpp **** 		HAL_GPIO_TogglePin(BlueLED_GPIO_Port, BlueLED_Pin);
 1645              		.loc 1 309 0
 1646 076c 4FF40041 		mov	r1, #32768
 1647 0770 2046     		mov	r0, r4
 1648 0772 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1649              	.LVL222:
 310:Core/Src/robot/robot.cpp **** 		HAL_GPIO_WritePin(Hand_Pneumatic_GPIO_Port, Hand_Pneumatic_Pin, GPIO_PIN_SET);
 1650              		.loc 1 310 0
 1651 0776 0122     		movs	r2, #1
 1652 0778 0421     		movs	r1, #4
 1653 077a 1248     		ldr	r0, .L74+20
 1654 077c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1655              	.LVL223:
 1656              	.L30:
 1657              	.LBE119:
 1658              	.LBE118:
 320:Core/Src/robot/robot.cpp **** }
 1659              		.loc 1 320 0
 1660 0780 07B0     		add	sp, sp, #28
 1661              	.LCFI8:
 1662              		.cfi_remember_state
 1663              		.cfi_def_cfa_offset 44
 1664              		@ sp needed
 1665 0782 BDEC028B 		vldm	sp!, {d8}
 1666              	.LCFI9:
 1667              		.cfi_restore 80
 1668              		.cfi_restore 81
 1669              		.cfi_def_cfa_offset 36
 1670 0786 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1671              	.LVL224:
 1672              	.L43:
 1673              	.LCFI10:
 1674              		.cfi_restore_state
 1675              	.LBB156:
 1676              	.LBB155:
 315:Core/Src/robot/robot.cpp **** 		leg[0].set_omega(10);
 1677              		.loc 1 315 0
 1678 078a 0C4C     		ldr	r4, .L74+12
 1679 078c B2EE040A 		vmov.f32	s0, #1.0e+1
 1680 0790 2046     		mov	r0, r4
 1681              	.LVL225:
 1682 0792 FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1683              	.LVL226:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 47


 316:Core/Src/robot/robot.cpp **** 		leg[1].set_omega(10);
 1684              		.loc 1 316 0
 1685 0796 B2EE040A 		vmov.f32	s0, #1.0e+1
 1686 079a 04F15800 		add	r0, r4, #88
 1687 079e FFF7FEFF 		bl	_ZN3leg9set_omegaEf
 1688              	.LVL227:
 317:Core/Src/robot/robot.cpp **** 		steering.set_omega(0);
 1689              		.loc 1 317 0
 1690 07a2 9FED050A 		vldr.32	s0, .L74+8
 1691 07a6 0648     		ldr	r0, .L74+16
 1692 07a8 FFF7FEFF 		bl	_ZN8steering9set_omegaEf
 1693              	.LVL228:
 1694              	.LBE155:
 1695              	.LBE156:
 320:Core/Src/robot/robot.cpp **** }
 1696              		.loc 1 320 0
 1697 07ac E8E7     		b	.L30
 1698              	.L75:
 1699 07ae 00BF     		.align	2
 1700              	.L74:
 1701 07b0 000C0240 		.word	1073875968
 1702 07b4 B4000000 		.word	.LC23
 1703 07b8 00000000 		.word	0
 1704 07bc 00000000 		.word	leg
 1705 07c0 00000000 		.word	steering
 1706 07c4 00000240 		.word	1073872896
 1707              		.cfi_endproc
 1708              	.LFE497:
 1710              		.section	.text._Z4playv,"ax",%progbits
 1711              		.align	1
 1712              		.global	_Z4playv
 1713              		.syntax unified
 1714              		.thumb
 1715              		.thumb_func
 1716              		.fpu fpv4-sp-d16
 1718              	_Z4playv:
 1719              	.LFB498:
 323:Core/Src/robot/robot.cpp **** {
 1720              		.loc 1 323 0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 0
 1723              		@ frame_needed = 0, uses_anonymous_args = 0
 1724 0000 10B5     		push	{r4, lr}
 1725              	.LCFI11:
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 324:Core/Src/robot/robot.cpp **** 	start_Robot(&robo_state);
 1729              		.loc 1 324 0
 1730 0002 0948     		ldr	r0, .L78
 1731 0004 FFF7FEFF 		bl	_Z11start_RobotP12Robot_States
 1732              	.LVL229:
 1733              	.LBB157:
 1734              	.LBB158:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1735              		.loc 2 46 0
 1736 0008 084C     		ldr	r4, .L78+4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 48


 1737 000a 2046     		mov	r0, r4
 1738 000c FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1739              	.LVL230:
 1740              	.LBE158:
 1741              	.LBE157:
 325:Core/Src/robot/robot.cpp **** 	omega0 = leg[0].get_omega();
 1742              		.loc 1 325 0
 1743 0010 074B     		ldr	r3, .L78+8
 1744 0012 83ED000A 		vstr.32	s0, [r3]
 1745              	.LVL231:
 1746              	.LBB159:
 1747              	.LBB160:
  46:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
 1748              		.loc 2 46 0
 1749 0016 04F15800 		add	r0, r4, #88
 1750 001a FFF7FEFF 		bl	_ZN7encoder9get_omegaEv
 1751              	.LVL232:
 1752              	.LBE160:
 1753              	.LBE159:
 326:Core/Src/robot/robot.cpp **** 	omega1 = leg[1].get_omega();
 1754              		.loc 1 326 0
 1755 001e 054B     		ldr	r3, .L78+12
 1756 0020 83ED000A 		vstr.32	s0, [r3]
 328:Core/Src/robot/robot.cpp **** }
 1757              		.loc 1 328 0
 1758 0024 0120     		movs	r0, #1
 1759 0026 10BD     		pop	{r4, pc}
 1760              	.L79:
 1761              		.align	2
 1762              	.L78:
 1763 0028 00000000 		.word	.LANCHOR0
 1764 002c 3C000000 		.word	leg+60
 1765 0030 00000000 		.word	.LANCHOR10
 1766 0034 00000000 		.word	.LANCHOR11
 1767              		.cfi_endproc
 1768              	.LFE498:
 1770              		.global	angles
 1771              		.global	steps
 1772              		.global	omega1
 1773              		.global	omega0
 1774              		.global	USE_IMU_FLAG
 1775              		.global	GEREGE_FLAG
 1776              		.global	ROBOT_START_FLAG
 1777              		.global	robo_state
 1778              		.section	.bss.GEREGE_FLAG,"aw",%nobits
 1781              	GEREGE_FLAG:
 1782 0000 00       		.space	1
 1783              		.section	.bss.ROBOT_START_FLAG,"aw",%nobits
 1784              		.set	.LANCHOR1,. + 0
 1787              	ROBOT_START_FLAG:
 1788 0000 00       		.space	1
 1789              		.section	.bss._ZGVZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1790              		.align	2
 1791              		.set	.LANCHOR6,. + 0
 1794              	_ZGVZ11start_RobotP12Robot_StatesE9init_time:
 1795 0000 00000000 		.space	4
 1796              		.section	.bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG,"aw",%nobits
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 49


 1797              		.set	.LANCHOR8,. + 0
 1800              	_ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:
 1801 0000 00       		.space	1
 1802              		.section	.bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2,"aw",%nobits
 1803              		.set	.LANCHOR9,. + 0
 1806              	_ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:
 1807 0000 00       		.space	1
 1808              		.section	.bss._ZZ11start_RobotP12Robot_StatesE9init_time,"aw",%nobits
 1809              		.align	2
 1810              		.set	.LANCHOR7,. + 0
 1813              	_ZZ11start_RobotP12Robot_StatesE9init_time:
 1814 0000 00000000 		.space	4
 1815              		.section	.bss.omega0,"aw",%nobits
 1816              		.align	2
 1817              		.set	.LANCHOR10,. + 0
 1820              	omega0:
 1821 0000 00000000 		.space	4
 1822              		.section	.bss.omega1,"aw",%nobits
 1823              		.align	2
 1824              		.set	.LANCHOR11,. + 0
 1827              	omega1:
 1828 0000 00000000 		.space	4
 1829              		.section	.bss.robo_state,"aw",%nobits
 1830              		.set	.LANCHOR0,. + 0
 1833              	robo_state:
 1834 0000 00       		.space	1
 1835              		.section	.data.USE_IMU_FLAG,"aw",%progbits
 1836              		.set	.LANCHOR4,. + 0
 1839              	USE_IMU_FLAG:
 1840 0000 01       		.byte	1
 1841              		.section	.data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG,"aw",%progbits
 1842              		.set	.LANCHOR5,. + 0
 1845              	_ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:
 1846 0000 01       		.byte	1
 1847              		.section	.data.angles,"aw",%progbits
 1848              		.align	2
 1849              		.set	.LANCHOR3,. + 0
 1852              	angles:
 1853 0000 00000000 		.word	0
 1854 0004 00003442 		.word	1110704128
 1855 0008 00003442 		.word	1110704128
 1856 000c 00007042 		.word	1114636288
 1857 0010 000020C1 		.word	-1054867456
 1858 0014 00000000 		.word	0
 1859 0018 0000B4C2 		.word	-1028390912
 1860              		.section	.data.steps,"aw",%progbits
 1861              		.align	2
 1862              		.set	.LANCHOR2,. + 0
 1865              	steps:
 1866 0000 0000C040 		.word	1086324736
 1867 0004 00002041 		.word	1092616192
 1868 0008 00006041 		.word	1096810496
 1869 000c 00008041 		.word	1098907648
 1870 0010 0000A841 		.word	1101529088
 1871 0014 0000C041 		.word	1103101952
 1872 0018 0000F841 		.word	1106771968
 1873              		.section	.rodata._Z11start_RobotP12Robot_States.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 50


 1874              		.align	2
 1875              	.LC12:
 1876 0000 0A484F4D 		.ascii	"\012HOME\000"
 1876      4500
 1877 0006 0000     		.space	2
 1878              	.LC13:
 1879 0008 09256409 		.ascii	"\011%d\011\000"
 1879      00
 1880 000d 000000   		.space	3
 1881              	.LC14:
 1882 0010 6C656730 		.ascii	"leg0_angle = %d\011leg1_angle = %d\011steering_angl"
 1882      5F616E67 
 1882      6C65203D 
 1882      20256409 
 1882      6C656731 
 1883 003d 65203D20 		.ascii	"e = %d\011robot_angle = %d\011\000"
 1883      25640972 
 1883      6F626F74 
 1883      5F616E67 
 1883      6C65203D 
 1884 0056 0000     		.space	2
 1885              	.LC15:
 1886 0058 0A4D6172 		.ascii	"\012March\000"
 1886      636800
 1887 005f 00       		.space	1
 1888              	.LC16:
 1889 0060 0A547572 		.ascii	"\012Turn 45\000"
 1889      6E203435 
 1889      00
 1890 0069 000000   		.space	3
 1891              	.LC17:
 1892 006c 0A53616E 		.ascii	"\012Sand dune\000"
 1892      64206475 
 1892      6E6500
 1893 0077 00       		.space	1
 1894              	.LC18:
 1895 0078 0A537461 		.ascii	"\012State D\000"
 1895      74652044 
 1895      00
 1896 0081 000000   		.space	3
 1897              	.LC19:
 1898 0084 0A547572 		.ascii	"\012Turn 90\000"
 1898      6E203930 
 1898      00
 1899 008d 000000   		.space	3
 1900              	.LC20:
 1901 0090 0A547573 		.ascii	"\012Tussock\000"
 1901      736F636B 
 1901      00
 1902 0099 000000   		.space	3
 1903              	.LC21:
 1904 009c 0A426173 		.ascii	"\012Base camp\000"
 1904      65206361 
 1904      6D7000
 1905 00a7 00       		.space	1
 1906              	.LC22:
 1907 00a8 0A4D4F55 		.ascii	"\012MOUNTAIN\000"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 51


 1907      4E544149 
 1907      4E00
 1908 00b2 0000     		.space	2
 1909              	.LC23:
 1910 00b4 0A55554B 		.ascii	"\012UUKHAI\000"
 1910      48414900 
 1911              		.section	.rodata._Z11zone_selectv.str1.4,"aMS",%progbits,1
 1912              		.align	2
 1913              	.LC0:
 1914 0000 0A0A095A 		.ascii	"\012\012\011Zone MARCH\000"
 1914      6F6E6520 
 1914      4D415243 
 1914      4800
 1915 000e 0000     		.space	2
 1916              	.LC1:
 1917 0010 0A0A095A 		.ascii	"\012\012\011Zone 45\000"
 1917      6F6E6520 
 1917      343500
 1918 001b 00       		.space	1
 1919              	.LC2:
 1920 001c 0A0A095A 		.ascii	"\012\012\011Zone SAND_DUNE\000"
 1920      6F6E6520 
 1920      53414E44 
 1920      5F44554E 
 1920      4500
 1921 002e 0000     		.space	2
 1922              	.LC3:
 1923 0030 0A0A095A 		.ascii	"\012\012\011Zone MOUNTAIN\000"
 1923      6F6E6520 
 1923      4D4F554E 
 1923      5441494E 
 1923      00
 1924 0041 000000   		.space	3
 1925              	.LC4:
 1926 0044 0A0A095A 		.ascii	"\012\012\011Zone Default\000"
 1926      6F6E6520 
 1926      44656661 
 1926      756C7400 
 1927              	.LC5:
 1928 0054 0A0A095A 		.ascii	"\012\012\011Zone RED\000"
 1928      6F6E6520 
 1928      52454400 
 1929              	.LC6:
 1930 0060 0A0A095A 		.ascii	"\012\012\011Zone BLUE\000"
 1930      6F6E6520 
 1930      424C5545 
 1930      00
 1931 006d 000000   		.space	3
 1932              	.LC7:
 1933 0070 0A0A095A 		.ascii	"\012\012\011Zone Default_RED\000"
 1933      6F6E6520 
 1933      44656661 
 1933      756C745F 
 1933      52454400 
 1934              		.section	.rodata._Z4testv.str1.4,"aMS",%progbits,1
 1935              		.align	2
 1936              	.LC8:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 52


 1937 0000 0A204652 		.ascii	"\012 FRONT\000"
 1937      4F4E5400 
 1938              	.LC9:
 1939 0008 0A204241 		.ascii	"\012 BACK\000"
 1939      434B00
 1940 000f 00       		.space	1
 1941              	.LC10:
 1942 0010 0A205550 		.ascii	"\012 UP\000"
 1942      00
 1943 0015 000000   		.space	3
 1944              	.LC11:
 1945 0018 0A6C6567 		.ascii	"\012leg0_angle = %d\011leg1_angle = %d\011steering_"
 1945      305F616E 
 1945      676C6520 
 1945      3D202564 
 1945      096C6567 
 1946 0042 616E676C 		.ascii	"angle = %d\000"
 1946      65203D20 
 1946      256400
 1947              		.text
 1948              	.Letext0:
 1949              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1950              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1951              		.file 7 "Core/Inc/sys/FreeRTOSConfig.h"
 1952              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1953              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1954              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1955              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1956              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1957              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1958              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1959              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1960              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1961              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1962              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1963              		.file 19 "Core/Inc/periphs/tim.h"
 1964              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1965              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1966              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1967              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1968              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1969              		.file 25 "Core/Inc/devs/motor.h"
 1970              		.file 26 "Core/Inc/devs/encoder.h"
 1971              		.file 27 "Core/Inc/utils/pid_algorithms.h"
 1972              		.file 28 "Core/Inc/devs/limit_switch.h"
 1973              		.file 29 "Core/Inc/robot/robot.h"
 1974              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1975              		.file 31 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1976              		.file 32 "Core/Inc/robot/robot_functions.h"
 1977              		.file 33 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 robot.cpp
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:18     .text._Z11zone_selectv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:25     .text._Z11zone_selectv:00000000 _Z11zone_selectv
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:307    .text._Z11zone_selectv:00000184 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:331    .text._Z4testv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:338    .text._Z4testv:00000000 _Z4testv
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:512    .text._Z4testv:00000108 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:527    .text._Z12swap_ElementIfEvRT_S1_:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:534    .text._Z12swap_ElementIfEvRT_S1_:00000000 _Z12swap_ElementIfEvRT_S1_
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:558    .text._Z11start_RobotP12Robot_States:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:565    .text._Z11start_RobotP12Robot_States:00000000 _Z11start_RobotP12Robot_States
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:600    .text._Z11start_RobotP12Robot_States:00000018 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:611    .text._Z11start_RobotP12Robot_States:0000002e $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1087   .text._Z11start_RobotP12Robot_States:00000310 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1116   .text._Z11start_RobotP12Robot_States:00000378 $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1551   .text._Z11start_RobotP12Robot_States:00000698 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1573   .text._Z11start_RobotP12Robot_States:000006e8 $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1701   .text._Z11start_RobotP12Robot_States:000007b0 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1711   .text._Z4playv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1718   .text._Z4playv:00000000 _Z4playv
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1763   .text._Z4playv:00000028 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1852   .data.angles:00000000 angles
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1865   .data.steps:00000000 steps
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1827   .bss.omega1:00000000 omega1
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1820   .bss.omega0:00000000 omega0
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1839   .data.USE_IMU_FLAG:00000000 USE_IMU_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1781   .bss.GEREGE_FLAG:00000000 GEREGE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1787   .bss.ROBOT_START_FLAG:00000000 ROBOT_START_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1833   .bss.robo_state:00000000 robo_state
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1782   .bss.GEREGE_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1788   .bss.ROBOT_START_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1790   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1794   .bss._ZGVZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZGVZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1800   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1801   .bss._ZZ11start_RobotP12Robot_StatesE19INITIALIZATION_FLAG:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1806   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 _ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1807   .bss._ZZ11start_RobotP12Robot_StatesE21INITIALIZATION_FLAG_2:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1809   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1813   .bss._ZZ11start_RobotP12Robot_StatesE9init_time:00000000 _ZZ11start_RobotP12Robot_StatesE9init_time
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1816   .bss.omega0:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1823   .bss.omega1:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1834   .bss.robo_state:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1845   .data._ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG:00000000 _ZZ11start_RobotP12Robot_StatesE18INITIAL_ANGLE_FLAG
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1848   .data.angles:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1861   .data.steps:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1874   .rodata._Z11start_RobotP12Robot_States.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1912   .rodata._Z11zone_selectv.str1.4:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s:1935   .rodata._Z4testv.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
printf
leg
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccdujgyV.s 			page 54


_ZN3leg9set_omegaEf
_ZN8steering9set_angleEf
_ZN7encoder16get_actual_angleEv
_ZN7encoder9get_angleEv
steering
__aeabi_d2f
HAL_GPIO_WritePin
_Z11getup_n_runv
HAL_GetTick
__cxa_guard_acquire
__cxa_guard_release
_Z2goif
HAL_GPIO_TogglePin
robot_angle
curr_angle
initial_angle
_Z23initialize_leg_positionv
puts
_ZN8steering9set_omegaEf
_ZN7encoder9get_omegaEv
