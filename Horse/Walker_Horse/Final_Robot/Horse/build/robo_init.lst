ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"robo_init.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN12Discrete_PIDD2Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
  18              		.align	1
  19              		.weak	_ZN12Discrete_PIDD2Ev
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZN12Discrete_PIDD2Ev:
  26              	.LFB396:
  27              		.file 1 "Core/Inc/utils/pid_algorithms.h"
   1:Core/Inc/utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc/utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc/utils/pid_algorithms.h **** 
   4:Core/Inc/utils/pid_algorithms.h **** class PID_Algorithm
   5:Core/Inc/utils/pid_algorithms.h **** {
   6:Core/Inc/utils/pid_algorithms.h ****       public:
   7:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0, 0, 0); }
   8:Core/Inc/utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p, i, d); }
   9:Core/Inc/utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  10:Core/Inc/utils/pid_algorithms.h **** 
  11:Core/Inc/utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  12:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  13:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  14:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
  15:Core/Inc/utils/pid_algorithms.h ****         {
  16:Core/Inc/utils/pid_algorithms.h ****                 set_P(p);
  17:Core/Inc/utils/pid_algorithms.h ****                 set_I(i);
  18:Core/Inc/utils/pid_algorithms.h ****                 set_D(d);
  19:Core/Inc/utils/pid_algorithms.h ****         }
  20:Core/Inc/utils/pid_algorithms.h ****         float get_P() { return p_; }
  21:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  22:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  23:Core/Inc/utils/pid_algorithms.h **** 
  24:Core/Inc/utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out)
  25:Core/Inc/utils/pid_algorithms.h ****         {
  26:Core/Inc/utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc/utils/pid_algorithms.h ****         }
  29:Core/Inc/utils/pid_algorithms.h **** 
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Upper() { return max_; }
  31:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 2


  32:Core/Inc/utils/pid_algorithms.h **** 
  33:Core/Inc/utils/pid_algorithms.h ****         virtual ~PID_Algorithm() {}
  34:Core/Inc/utils/pid_algorithms.h **** 
  35:Core/Inc/utils/pid_algorithms.h ****       protected:
  36:Core/Inc/utils/pid_algorithms.h ****         float p_, i_, d_;
  37:Core/Inc/utils/pid_algorithms.h ****         float max_, min_;
  38:Core/Inc/utils/pid_algorithms.h **** };
  39:Core/Inc/utils/pid_algorithms.h **** 
  40:Core/Inc/utils/pid_algorithms.h **** class Discrete_PID : public PID_Algorithm
  41:Core/Inc/utils/pid_algorithms.h **** {
  42:Core/Inc/utils/pid_algorithms.h ****       public:
  43:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
  44:Core/Inc/utils/pid_algorithms.h ****         {
  45:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  46:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  47:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  48:Core/Inc/utils/pid_algorithms.h ****         }
  49:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID()
  50:Core/Inc/utils/pid_algorithms.h ****         {
  51:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
  52:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
  53:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
  54:Core/Inc/utils/pid_algorithms.h ****         }
  55:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(Discrete_PID &&) = default;
  56:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID(const Discrete_PID &) = default;
  57:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(Discrete_PID &&) = default;
  58:Core/Inc/utils/pid_algorithms.h ****         Discrete_PID &operator=(const Discrete_PID &) = default;
  59:Core/Inc/utils/pid_algorithms.h ****         ~Discrete_PID() {}
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 59 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE396:
  39              		.weak	_ZN12Discrete_PIDD1Ev
  40              		.thumb_set _ZN12Discrete_PIDD1Ev,_ZN12Discrete_PIDD2Ev
  41              		.section	.text._ZN12Discrete_PID7computeEfm,"axG",%progbits,_ZN12Discrete_PID7computeEfm,comdat
  42              		.align	1
  43              		.weak	_ZN12Discrete_PID7computeEfm
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_ZN12Discrete_PID7computeEfm:
  50              	.LFB399:
  60:Core/Inc/utils/pid_algorithms.h **** 
  61:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
  62:Core/Inc/utils/pid_algorithms.h ****          * 1) Discrete PID control Algorithm
  63:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
  64:Core/Inc/utils/pid_algorithms.h ****          * 3) //! Filtered Derivative not used
  65:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
  66:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
  67:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*(z-1)/(Ts*z)
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 3


  68:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
  69:Core/Inc/utils/pid_algorithms.h ****          *      y(t) - y(t-1) = a*x(t) + b*x(t-1) + c*x(t-2)
  70:Core/Inc/utils/pid_algorithms.h ****          *      where,
  71:Core/Inc/utils/pid_algorithms.h ****          *              a = P + D/Ts
  72:Core/Inc/utils/pid_algorithms.h ****          *              b = -P + I*Ts - 2*D/Ts
  73:Core/Inc/utils/pid_algorithms.h ****          *              c = D/Ts
  74:Core/Inc/utils/pid_algorithms.h ****          */
  75:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
  51              		.loc 1 75 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL1:
  76:Core/Inc/utils/pid_algorithms.h ****         {
  77:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
  57              		.loc 1 77 0
  58 0000 07EE901A 		vmov	s15, r1	@ int
  59 0004 F8EE676A 		vcvt.f32.u32	s13, s15
  60 0008 DFED217A 		vldr.32	s15, .L11
  61 000c 86EEA77A 		vdiv.f32	s14, s13, s15
  62              	.LVL2:
  63              	.LBB322:
  64              	.LBB323:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
  65              		.loc 1 20 0
  66 0010 90ED016A 		vldr.32	s12, [r0, #4]
  67              	.LVL3:
  68              	.LBE323:
  69              	.LBE322:
  70              	.LBB324:
  71              	.LBB325:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
  72              		.loc 1 21 0
  73 0014 D0ED025A 		vldr.32	s11, [r0, #8]
  74              	.LVL4:
  75              	.LBE325:
  76              	.LBE324:
  77              	.LBB326:
  78              	.LBB327:
  22:Core/Inc/utils/pid_algorithms.h **** 
  79              		.loc 1 22 0
  80 0018 D0ED037A 		vldr.32	s15, [r0, #12]
  81              	.LVL5:
  82              	.LBE327:
  83              	.LBE326:
  78:Core/Inc/utils/pid_algorithms.h **** 
  79:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
  80:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
  81:Core/Inc/utils/pid_algorithms.h ****                 float D_by_Ts = get_D() / Ts;
  84              		.loc 1 81 0
  85 001c C7EE876A 		vdiv.f32	s13, s15, s14
  86              	.LVL6:
  82:Core/Inc/utils/pid_algorithms.h **** 
  83:Core/Inc/utils/pid_algorithms.h ****                 float a = P + D_by_Ts;
  87              		.loc 1 83 0
  88 0020 76EE867A 		vadd.f32	s15, s13, s12
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 4


  89              	.LVL7:
  84:Core/Inc/utils/pid_algorithms.h ****                 float b = -P + I * Ts - 2 * D_by_Ts;
  90              		.loc 1 84 0
  91 0024 27EE257A 		vmul.f32	s14, s14, s11
  92              	.LVL8:
  93 0028 37EE467A 		vsub.f32	s14, s14, s12
  94 002c 36EEA66A 		vadd.f32	s12, s13, s13
  95 0030 37EE467A 		vsub.f32	s14, s14, s12
  96              	.LVL9:
  85:Core/Inc/utils/pid_algorithms.h ****                 float c = D_by_Ts;
  86:Core/Inc/utils/pid_algorithms.h **** 
  87:Core/Inc/utils/pid_algorithms.h ****                 l_output_ += a * error + b * l_err_ + c * ll_err_;
  97              		.loc 1 87 0
  98 0034 67EE807A 		vmul.f32	s15, s15, s0
  99              	.LVL10:
 100 0038 90ED076A 		vldr.32	s12, [r0, #28]
 101 003c 26EE077A 		vmul.f32	s14, s12, s14
 102              	.LVL11:
 103 0040 77EE877A 		vadd.f32	s15, s15, s14
 104 0044 90ED087A 		vldr.32	s14, [r0, #32]
 105 0048 67EE266A 		vmul.f32	s13, s14, s13
 106              	.LVL12:
 107 004c 77EEA67A 		vadd.f32	s15, s15, s13
 108 0050 90ED067A 		vldr.32	s14, [r0, #24]
 109 0054 77EE877A 		vadd.f32	s15, s15, s14
 110 0058 C0ED067A 		vstr.32	s15, [r0, #24]
 111              	.LVL13:
 112              	.LBB328:
 113              	.LBB329:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 114              		.loc 1 30 0
 115 005c 90ED047A 		vldr.32	s14, [r0, #16]
 116              	.LVL14:
 117              	.LBE329:
 118              	.LBE328:
  88:Core/Inc/utils/pid_algorithms.h **** 
  89:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 119              		.loc 1 89 0
 120 0060 F4EEC77A 		vcmpe.f32	s15, s14
 121 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 122 0068 09DC     		bgt	.L10
 123              	.LVL15:
 124              	.LBB330:
 125              	.LBB331:
  31:Core/Inc/utils/pid_algorithms.h **** 
 126              		.loc 1 31 0
 127 006a 90ED057A 		vldr.32	s14, [r0, #20]
 128              	.LVL16:
 129              	.LBE331:
 130              	.LBE330:
  90:Core/Inc/utils/pid_algorithms.h ****                 {
  91:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
  92:Core/Inc/utils/pid_algorithms.h ****                 }
  93:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 131              		.loc 1 93 0
 132 006e F4EEC77A 		vcmpe.f32	s15, s14
 133 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 5


 134 0076 04D5     		bpl	.L5
  94:Core/Inc/utils/pid_algorithms.h ****                 {
  95:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 135              		.loc 1 95 0
 136 0078 80ED067A 		vstr.32	s14, [r0, #24]
 137 007c 01E0     		b	.L5
 138              	.L10:
  91:Core/Inc/utils/pid_algorithms.h ****                 }
 139              		.loc 1 91 0
 140 007e 80ED067A 		vstr.32	s14, [r0, #24]
 141              	.L5:
  96:Core/Inc/utils/pid_algorithms.h ****                 }
  97:Core/Inc/utils/pid_algorithms.h **** 
  98:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 142              		.loc 1 98 0
 143 0082 80ED086A 		vstr.32	s12, [r0, #32]
  99:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 144              		.loc 1 99 0
 145 0086 80ED070A 		vstr.32	s0, [r0, #28]
 100:Core/Inc/utils/pid_algorithms.h **** 		
 101:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 102:Core/Inc/utils/pid_algorithms.h ****         }
 146              		.loc 1 102 0
 147 008a 90ED060A 		vldr.32	s0, [r0, #24]
 148              	.LVL17:
 149 008e 7047     		bx	lr
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 0090 00007A44 		.word	1148846080
 154              		.cfi_endproc
 155              	.LFE399:
 157              		.section	.text._ZN9Angle_PIDD2Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 158              		.align	1
 159              		.weak	_ZN9Angle_PIDD2Ev
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	_ZN9Angle_PIDD2Ev:
 166              	.LFB419:
 103:Core/Inc/utils/pid_algorithms.h **** 
 104:Core/Inc/utils/pid_algorithms.h ****       private:
 105:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 106:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 107:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 108:Core/Inc/utils/pid_algorithms.h **** };
 109:Core/Inc/utils/pid_algorithms.h **** 
 110:Core/Inc/utils/pid_algorithms.h **** class FilteredDiscrete_PID : public PID_Algorithm
 111:Core/Inc/utils/pid_algorithms.h **** {
 112:Core/Inc/utils/pid_algorithms.h ****       public:
 113:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(float p, float i, float d, float N = 0) : PID_Algorithm(p, i, d)
 114:Core/Inc/utils/pid_algorithms.h ****         {
 115:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 116:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 117:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 118:Core/Inc/utils/pid_algorithms.h ****                 set_N(N);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 6


 119:Core/Inc/utils/pid_algorithms.h ****         }
 120:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID()
 121:Core/Inc/utils/pid_algorithms.h ****         {
 122:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 123:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 124:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 125:Core/Inc/utils/pid_algorithms.h ****                 set_N(0);
 126:Core/Inc/utils/pid_algorithms.h ****         }
 127:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(FilteredDiscrete_PID &&) = default;
 128:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID(const FilteredDiscrete_PID &) = default;
 129:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(FilteredDiscrete_PID &&) = default;
 130:Core/Inc/utils/pid_algorithms.h ****         FilteredDiscrete_PID &operator=(const FilteredDiscrete_PID &) = default;
 131:Core/Inc/utils/pid_algorithms.h ****         ~FilteredDiscrete_PID() {}
 132:Core/Inc/utils/pid_algorithms.h **** 
 133:Core/Inc/utils/pid_algorithms.h ****         void set_N(float N) { N_ = N; }
 134:Core/Inc/utils/pid_algorithms.h **** 
 135:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 136:Core/Inc/utils/pid_algorithms.h ****          * 1) Filtered Discrete PID control Algorithm
 137:Core/Inc/utils/pid_algorithms.h ****          * 2) Integrator Method : Forward Euler
 138:Core/Inc/utils/pid_algorithms.h ****          * 3) Filtered Derivative used
 139:Core/Inc/utils/pid_algorithms.h ****          * 4) Output Limited
 140:Core/Inc/utils/pid_algorithms.h ****          * 5) Form : Parallel
 141:Core/Inc/utils/pid_algorithms.h ****          * 6) Compensator Formula : Dz = P + I*Ts/(z-1) + D*N*(z-1)/{(z -1) + N*Ts}
 142:Core/Inc/utils/pid_algorithms.h ****          * 7) In Time Domain :
 143:Core/Inc/utils/pid_algorithms.h ****          *      y(t) = (1 + a)*y(t-1) - a*y(t-2) + alpha*x(t) + beta*x(t-1) + gamma*x(t-2)
 144:Core/Inc/utils/pid_algorithms.h ****          *      where,
 145:Core/Inc/utils/pid_algorithms.h ****          *              a = 1 - N_*Ts
 146:Core/Inc/utils/pid_algorithms.h ****          *              alpha = P + D*N
 147:Core/Inc/utils/pid_algorithms.h ****          *              beta = -(1 + a)*P + I*Ts - 2*D*N
 148:Core/Inc/utils/pid_algorithms.h ****          *              gamma = a*P - a*I*Ts + D*N
 149:Core/Inc/utils/pid_algorithms.h ****          */
 150:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 151:Core/Inc/utils/pid_algorithms.h ****         {
 152:Core/Inc/utils/pid_algorithms.h ****                 float Ts = (float)dt_millis / 1000.0;
 153:Core/Inc/utils/pid_algorithms.h **** 
 154:Core/Inc/utils/pid_algorithms.h ****                 float a, alpha, beta, gamma;
 155:Core/Inc/utils/pid_algorithms.h ****                 float output;
 156:Core/Inc/utils/pid_algorithms.h **** 
 157:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 158:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 159:Core/Inc/utils/pid_algorithms.h ****                 float D = get_D();
 160:Core/Inc/utils/pid_algorithms.h **** 
 161:Core/Inc/utils/pid_algorithms.h ****                 a = 1 - N_ * Ts;
 162:Core/Inc/utils/pid_algorithms.h ****                 alpha = P + D * N_;
 163:Core/Inc/utils/pid_algorithms.h ****                 beta = -(1 + a) * P + I * Ts - 2 * D * N_;
 164:Core/Inc/utils/pid_algorithms.h ****                 gamma = a * P - a * I * Ts + D * N_;
 165:Core/Inc/utils/pid_algorithms.h **** 
 166:Core/Inc/utils/pid_algorithms.h ****                 output = (1 + a) * l_output_ - a * ll_output_ + alpha * error + beta * l_err_ + gam
 167:Core/Inc/utils/pid_algorithms.h **** 
 168:Core/Inc/utils/pid_algorithms.h ****                 ll_output_ = l_output_;
 169:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = output;
 170:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = l_err_;
 171:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = error;
 172:Core/Inc/utils/pid_algorithms.h **** 
 173:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 174:Core/Inc/utils/pid_algorithms.h ****                 {
 175:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 7


 176:Core/Inc/utils/pid_algorithms.h ****                 }
 177:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 178:Core/Inc/utils/pid_algorithms.h ****                 {
 179:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 180:Core/Inc/utils/pid_algorithms.h ****                 }
 181:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 182:Core/Inc/utils/pid_algorithms.h ****         }
 183:Core/Inc/utils/pid_algorithms.h **** 
 184:Core/Inc/utils/pid_algorithms.h ****       private:
 185:Core/Inc/utils/pid_algorithms.h ****         float N_;
 186:Core/Inc/utils/pid_algorithms.h **** 
 187:Core/Inc/utils/pid_algorithms.h ****         float l_output_;
 188:Core/Inc/utils/pid_algorithms.h ****         float ll_output_;
 189:Core/Inc/utils/pid_algorithms.h ****         float l_err_;
 190:Core/Inc/utils/pid_algorithms.h ****         float ll_err_;
 191:Core/Inc/utils/pid_algorithms.h **** };
 192:Core/Inc/utils/pid_algorithms.h **** 
 193:Core/Inc/utils/pid_algorithms.h **** class Angle_PID : public PID_Algorithm
 194:Core/Inc/utils/pid_algorithms.h **** {
 195:Core/Inc/utils/pid_algorithms.h ****       public:
 196:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(float p, float i, float d) : PID_Algorithm(p, i, d)
 197:Core/Inc/utils/pid_algorithms.h ****         {
 198:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 199:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 200:Core/Inc/utils/pid_algorithms.h ****         }
 201:Core/Inc/utils/pid_algorithms.h **** 
 202:Core/Inc/utils/pid_algorithms.h ****         Angle_PID()
 203:Core/Inc/utils/pid_algorithms.h ****         {
 204:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 205:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 206:Core/Inc/utils/pid_algorithms.h ****         }
 207:Core/Inc/utils/pid_algorithms.h **** 
 208:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(Angle_PID &&) = default;
 209:Core/Inc/utils/pid_algorithms.h ****         Angle_PID(const Angle_PID &) = default;
 210:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(Angle_PID &&) = default;
 211:Core/Inc/utils/pid_algorithms.h ****         Angle_PID &operator=(const Angle_PID &) = default;
 212:Core/Inc/utils/pid_algorithms.h ****         ~Angle_PID() { }
 167              		.loc 1 212 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL18:
 173              		.loc 1 212 0
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE419:
 178              		.weak	_ZN9Angle_PIDD1Ev
 179              		.thumb_set _ZN9Angle_PIDD1Ev,_ZN9Angle_PIDD2Ev
 180              		.section	.text._ZN9Angle_PID7computeEfm,"axG",%progbits,_ZN9Angle_PID7computeEfm,comdat
 181              		.align	1
 182              		.weak	_ZN9Angle_PID7computeEfm
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	_ZN9Angle_PID7computeEfm:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 8


 189              	.LFB422:
 213:Core/Inc/utils/pid_algorithms.h **** 
 214:Core/Inc/utils/pid_algorithms.h ****         /* *** PID Algorithm Description ***
 215:Core/Inc/utils/pid_algorithms.h ****                 * 1) Angle PID control Algorithm
 216:Core/Inc/utils/pid_algorithms.h ****                 * 2) Use of Proportional Controller Only 
 217:Core/Inc/utils/pid_algorithms.h ****                 * 3) Output Limited
 218:Core/Inc/utils/pid_algorithms.h ****                 * 4) Compensator formula in Time Domain: 
 219:Core/Inc/utils/pid_algorithms.h ****                 *              y(t) = P * {(x(t) - x(t-1))/Ts}
 220:Core/Inc/utils/pid_algorithms.h ****                 */
 221:Core/Inc/utils/pid_algorithms.h **** 
 222:Core/Inc/utils/pid_algorithms.h ****         float compute(float error, uint32_t dt_millis)
 190              		.loc 1 222 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LVL19:
 196              	.LBB332:
 197              	.LBB333:
  20:Core/Inc/utils/pid_algorithms.h ****         float get_I() { return i_; }
 198              		.loc 1 20 0
 199 0000 D0ED016A 		vldr.32	s13, [r0, #4]
 200              	.LVL20:
 201              	.LBE333:
 202              	.LBE332:
 203              	.LBB334:
 204              	.LBB335:
  21:Core/Inc/utils/pid_algorithms.h ****         float get_D() { return d_; }
 205              		.loc 1 21 0
 206 0004 90ED027A 		vldr.32	s14, [r0, #8]
 207              	.LVL21:
 208              	.LBE335:
 209              	.LBE334:
 223:Core/Inc/utils/pid_algorithms.h ****         {
 224:Core/Inc/utils/pid_algorithms.h ****                 // float Ts = (float)dt_millis / 1000.0;
 225:Core/Inc/utils/pid_algorithms.h **** 
 226:Core/Inc/utils/pid_algorithms.h ****                 float P = get_P();
 227:Core/Inc/utils/pid_algorithms.h ****                 float I = get_I();
 228:Core/Inc/utils/pid_algorithms.h **** 
 229:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ += error;
 210              		.loc 1 229 0
 211 0008 D0ED077A 		vldr.32	s15, [r0, #28]
 212 000c 70EE277A 		vadd.f32	s15, s0, s15
 213 0010 C0ED077A 		vstr.32	s15, [r0, #28]
 230:Core/Inc/utils/pid_algorithms.h ****                 float i_term = I * err_sum_;
 214              		.loc 1 230 0
 215 0014 67EE877A 		vmul.f32	s15, s15, s14
 216              	.LVL22:
 217              	.LBB336:
 218              	.LBB337:
  30:Core/Inc/utils/pid_algorithms.h ****         float get_Lower() { return min_; }
 219              		.loc 1 30 0
 220 0018 90ED047A 		vldr.32	s14, [r0, #16]
 221              	.LVL23:
 222              	.LBE337:
 223              	.LBE336:
 231:Core/Inc/utils/pid_algorithms.h ****                 // Clamping Integral Term
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 9


 232:Core/Inc/utils/pid_algorithms.h ****                 if (i_term > get_Upper()) {
 224              		.loc 1 232 0
 225 001c F4EEC77A 		vcmpe.f32	s15, s14
 226 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 227 0024 18DD     		ble	.L27
 228              	.LVL24:
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 234:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 229              		.loc 1 234 0
 230 0026 0023     		movs	r3, #0
 231 0028 C361     		str	r3, [r0, #28]	@ float
 233:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Upper();
 232              		.loc 1 233 0
 233 002a F0EE477A 		vmov.f32	s15, s14
 234              	.L17:
 235              	.LVL25:
 235:Core/Inc/utils/pid_algorithms.h ****                 }
 236:Core/Inc/utils/pid_algorithms.h ****                 else if (i_term < get_Lower()) {
 237:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 238:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 239:Core/Inc/utils/pid_algorithms.h ****                 }
 240:Core/Inc/utils/pid_algorithms.h **** 
 241:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = P * error + i_term;
 236              		.loc 1 241 0
 237 002e 20EE260A 		vmul.f32	s0, s0, s13
 238              	.LVL26:
 239 0032 70EE277A 		vadd.f32	s15, s0, s15
 240              	.LVL27:
 241 0036 C0ED067A 		vstr.32	s15, [r0, #24]
 242:Core/Inc/utils/pid_algorithms.h **** 
 243:Core/Inc/utils/pid_algorithms.h ****                 if (l_output_ > get_Upper())
 242              		.loc 1 243 0
 243 003a F4EEC77A 		vcmpe.f32	s15, s14
 244 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 245 0042 15DC     		bgt	.L29
 246              	.LVL28:
 247              	.LBB338:
 248              	.LBB339:
  31:Core/Inc/utils/pid_algorithms.h **** 
 249              		.loc 1 31 0
 250 0044 90ED057A 		vldr.32	s14, [r0, #20]
 251              	.LVL29:
 252              	.LBE339:
 253              	.LBE338:
 244:Core/Inc/utils/pid_algorithms.h ****                 {
 245:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Upper();
 246:Core/Inc/utils/pid_algorithms.h ****                 }
 247:Core/Inc/utils/pid_algorithms.h **** 
 248:Core/Inc/utils/pid_algorithms.h ****                 else if (l_output_ < get_Lower())
 254              		.loc 1 248 0
 255 0048 F4EEC77A 		vcmpe.f32	s15, s14
 256 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 257 0050 10D5     		bpl	.L21
 249:Core/Inc/utils/pid_algorithms.h ****                 {
 250:Core/Inc/utils/pid_algorithms.h ****                         l_output_ = get_Lower();
 258              		.loc 1 250 0
 259 0052 80ED067A 		vstr.32	s14, [r0, #24]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 10


 260 0056 0DE0     		b	.L21
 261              	.LVL30:
 262              	.L27:
 263              	.LBB340:
 264              	.LBB341:
  31:Core/Inc/utils/pid_algorithms.h **** 
 265              		.loc 1 31 0
 266 0058 90ED056A 		vldr.32	s12, [r0, #20]
 267              	.LVL31:
 268              	.LBE341:
 269              	.LBE340:
 236:Core/Inc/utils/pid_algorithms.h ****                         i_term = get_Lower();
 270              		.loc 1 236 0
 271 005c F4EEC67A 		vcmpe.f32	s15, s12
 272 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 273 0064 E3D5     		bpl	.L17
 274              	.LVL32:
 238:Core/Inc/utils/pid_algorithms.h ****                 }
 275              		.loc 1 238 0
 276 0066 0023     		movs	r3, #0
 277 0068 C361     		str	r3, [r0, #28]	@ float
 237:Core/Inc/utils/pid_algorithms.h ****                         err_sum_ = 0;
 278              		.loc 1 237 0
 279 006a F0EE467A 		vmov.f32	s15, s12
 280 006e DEE7     		b	.L17
 281              	.LVL33:
 282              	.L29:
 245:Core/Inc/utils/pid_algorithms.h ****                 }
 283              		.loc 1 245 0
 284 0070 80ED067A 		vstr.32	s14, [r0, #24]
 285              	.L21:
 251:Core/Inc/utils/pid_algorithms.h ****                 }
 252:Core/Inc/utils/pid_algorithms.h **** 
 253:Core/Inc/utils/pid_algorithms.h ****                 return l_output_;
 254:Core/Inc/utils/pid_algorithms.h ****         }
 286              		.loc 1 254 0
 287 0074 90ED060A 		vldr.32	s0, [r0, #24]
 288 0078 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE422:
 292              		.section	.text._ZN8steeringD2Ev,"axG",%progbits,_ZN8steeringD5Ev,comdat
 293              		.align	1
 294              		.weak	_ZN8steeringD2Ev
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	_ZN8steeringD2Ev:
 301              	.LFB455:
 302              		.file 2 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 11


   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
 303              		.loc 2 33 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL34:
 309              		.loc 2 33 0
 310 0000 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE455:
 314              		.weak	_ZN8steeringD1Ev
 315              		.thumb_set _ZN8steeringD1Ev,_ZN8steeringD2Ev
 316              		.section	.text._ZL8leg_initv,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	_ZL8leg_initv:
 324              	.LFB493:
 325              		.file 3 "Core/Src/robot/robo_init.cpp"
   1:Core/Src/robot/robo_init.cpp **** #include "robo_init.h"
   2:Core/Src/robot/robo_init.cpp **** 
   3:Core/Src/robot/robo_init.cpp **** leg leg[2];
   4:Core/Src/robot/robo_init.cpp **** steering steering;
   5:Core/Src/robot/robo_init.cpp **** 
   6:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
   7:Core/Src/robot/robo_init.cpp **** static  encoder_config encoder_configurations[3];
   8:Core/Src/robot/robo_init.cpp **** 
   9:Core/Src/robot/robo_init.cpp **** 
  10:Core/Src/robot/robo_init.cpp **** static void motor_init();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 12


  11:Core/Src/robot/robo_init.cpp **** static void encoder_init();
  12:Core/Src/robot/robo_init.cpp **** static void pid_init();
  13:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(); 
  14:Core/Src/robot/robo_init.cpp **** static void leg_init();
  15:Core/Src/robot/robo_init.cpp **** static void steering_init();
  16:Core/Src/robot/robo_init.cpp **** 
  17:Core/Src/robot/robo_init.cpp **** void robo_init(){ 
  18:Core/Src/robot/robo_init.cpp **** 	motor_init();
  19:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
  20:Core/Src/robot/robo_init.cpp **** 	pid_init();
  21:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
  22:Core/Src/robot/robo_init.cpp **** 	leg_init();
  23:Core/Src/robot/robo_init.cpp **** 	steering_init();
  24:Core/Src/robot/robo_init.cpp **** }
  25:Core/Src/robot/robo_init.cpp **** 
  26:Core/Src/robot/robo_init.cpp **** void leg_init(){
 326              		.loc 3 26 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331              	.LVL35:
 332              	.LBB342:
 333              	.LBB343:
 334              	.LBB344:
 335              		.file 4 "Core/Inc/devs/motor.h"
   1:Core/Inc/devs/motor.h **** #ifndef _MOTOR_H_
   2:Core/Inc/devs/motor.h **** #define _MOTOR_H_
   3:Core/Inc/devs/motor.h **** 
   4:Core/Inc/devs/motor.h **** #include "stm32f4xx_hal.h"
   5:Core/Inc/devs/motor.h **** #include "tim.h"
   6:Core/Inc/devs/motor.h **** #include <math.h>
   7:Core/Inc/devs/motor.h **** 
   8:Core/Inc/devs/motor.h **** enum Direction{
   9:Core/Inc/devs/motor.h **** 	CLOCKWISE,
  10:Core/Inc/devs/motor.h **** 	ANTICLOCKWISE,
  11:Core/Inc/devs/motor.h **** 	STOP
  12:Core/Inc/devs/motor.h **** };
  13:Core/Inc/devs/motor.h **** 
  14:Core/Inc/devs/motor.h **** struct motor_config{
  15:Core/Inc/devs/motor.h **** 	float max_omega;
  16:Core/Inc/devs/motor.h **** 	float tolerance;
  17:Core/Inc/devs/motor.h **** 
  18:Core/Inc/devs/motor.h **** 	GPIO_TypeDef *in1_port;	
  19:Core/Inc/devs/motor.h ****         uint16_t in1_pin;
  20:Core/Inc/devs/motor.h ****         GPIO_TypeDef *in2_port;
  21:Core/Inc/devs/motor.h ****         uint16_t in2_pin;
  22:Core/Inc/devs/motor.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  23:Core/Inc/devs/motor.h ****         uint32_t channel;               // PWM Channel
  24:Core/Inc/devs/motor.h **** };
  25:Core/Inc/devs/motor.h **** 
  26:Core/Inc/devs/motor.h **** class motor
  27:Core/Inc/devs/motor.h **** {
  28:Core/Inc/devs/motor.h **** public:
  29:Core/Inc/devs/motor.h **** 	motor(){motor_ = 0;}
  30:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
  31:Core/Inc/devs/motor.h **** 	motor(motor &&) = default;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 13


  32:Core/Inc/devs/motor.h **** 	motor(const motor &) = default;
  33:Core/Inc/devs/motor.h **** 	motor &operator=(motor &&) = default;
  34:Core/Inc/devs/motor.h **** 	motor &operator=(const motor &) = default;
  35:Core/Inc/devs/motor.h **** 	~motor(){}
  36:Core/Inc/devs/motor.h ****         void set_config(motor_config *motor) { motor_ = motor;}
 336              		.loc 4 36 0
 337 0000 074B     		ldr	r3, .L32
 338 0002 0849     		ldr	r1, .L32+4
 339 0004 9963     		str	r1, [r3, #56]
 340              	.LVL36:
 341              	.LBE344:
 342              	.LBE343:
 343              	.LBB345:
 344              	.LBB346:
 345              		.file 5 "Core/Inc/devs/encoder.h"
   1:Core/Inc/devs/encoder.h **** #ifndef _ENCODER_H_
   2:Core/Inc/devs/encoder.h **** #define _ENCODER_H_
   3:Core/Inc/devs/encoder.h **** 
   4:Core/Inc/devs/encoder.h **** #include "defines.h"
   5:Core/Inc/devs/encoder.h **** #include "stm32f4xx_hal.h"
   6:Core/Inc/devs/encoder.h **** #include "tim.h"
   7:Core/Inc/devs/encoder.h **** #include "math.h"
   8:Core/Inc/devs/encoder.h **** 
   9:Core/Inc/devs/encoder.h **** 
  10:Core/Inc/devs/encoder.h **** struct encoder_config{
  11:Core/Inc/devs/encoder.h **** 	uint8_t id;
  12:Core/Inc/devs/encoder.h **** 	TIM_HandleTypeDef *henc;
  13:Core/Inc/devs/encoder.h **** 	uint16_t ppr;
  14:Core/Inc/devs/encoder.h **** };
  15:Core/Inc/devs/encoder.h **** 
  16:Core/Inc/devs/encoder.h **** class encoder
  17:Core/Inc/devs/encoder.h **** {
  18:Core/Inc/devs/encoder.h **** public:
  19:Core/Inc/devs/encoder.h **** 	encoder(){encoder_ = 0;}
  20:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
  21:Core/Inc/devs/encoder.h **** 	encoder(encoder &&) = default;
  22:Core/Inc/devs/encoder.h **** 	encoder(const encoder &) = default;
  23:Core/Inc/devs/encoder.h **** 	encoder &operator=(encoder &&) = default;
  24:Core/Inc/devs/encoder.h **** 	encoder &operator=(const encoder &) = default;
  25:Core/Inc/devs/encoder.h **** 	~encoder(){}
  26:Core/Inc/devs/encoder.h ****         void set_config(encoder_config *encoder) { encoder_ = encoder; }
 346              		.loc 5 26 0
 347 0006 084A     		ldr	r2, .L32+8
 348 0008 DA63     		str	r2, [r3, #60]
 349              	.LVL37:
 350              	.LBE346:
 351              	.LBE345:
 352              	.LBE342:
 353              	.LBB347:
 354              	.LBB348:
 355              	.LBB349:
 356              		.loc 4 36 0
 357 000a 2031     		adds	r1, r1, #32
 358 000c C3F89010 		str	r1, [r3, #144]
 359              	.LVL38:
 360              	.LBE349:
 361              	.LBE348:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 14


 362              	.LBB350:
 363              	.LBB351:
 364              		.loc 5 26 0
 365 0010 0C32     		adds	r2, r2, #12
 366 0012 C3F89420 		str	r2, [r3, #148]
 367              	.LVL39:
 368              	.LBE351:
 369              	.LBE350:
 370              	.LBE347:
 371              	.LBB352:
 372              	.LBB353:
 373              		.file 6 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
 374              		.loc 6 38 0
 375 0016 054A     		ldr	r2, .L32+12
 376 0018 5A65     		str	r2, [r3, #84]	@ float
 377              	.LVL40:
 378              	.LBE353:
 379              	.LBE352:
 380              	.LBB354:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 15


 381              	.LBB355:
 382 001a C3F8AC20 		str	r2, [r3, #172]	@ float
 383              	.LVL41:
 384              	.LBE355:
 385              	.LBE354:
  27:Core/Src/robot/robo_init.cpp **** 	leg[0].set_config(&motor_configurations[0], &encoder_configurations[0]);
  28:Core/Src/robot/robo_init.cpp **** 	leg[1].set_config(&motor_configurations[1], &encoder_configurations[1]);
  29:Core/Src/robot/robo_init.cpp **** 	leg[0].set_gravity_compensator_constant(0.49);
  30:Core/Src/robot/robo_init.cpp **** 	leg[1].set_gravity_compensator_constant(0.49);
  31:Core/Src/robot/robo_init.cpp **** }	
 386              		.loc 3 31 0
 387 001e 7047     		bx	lr
 388              	.L33:
 389              		.align	2
 390              	.L32:
 391 0020 00000000 		.word	.LANCHOR0
 392 0024 00000000 		.word	.LANCHOR1
 393 0028 00000000 		.word	.LANCHOR2
 394 002c 48E1FA3E 		.word	1056629064
 395              		.cfi_endproc
 396              	.LFE493:
 398              		.section	.text._ZL13steering_initv,"ax",%progbits
 399              		.align	1
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	_ZL13steering_initv:
 406              	.LFB494:
  32:Core/Src/robot/robo_init.cpp **** 
  33:Core/Src/robot/robo_init.cpp **** void steering_init(){
 407              		.loc 3 33 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL42:
 413              	.LBB356:
 414              	.LBB357:
 415              	.LBB358:
 416              		.loc 4 36 0
 417 0000 024B     		ldr	r3, .L35
 418 0002 034A     		ldr	r2, .L35+4
 419 0004 9A60     		str	r2, [r3, #8]
 420              	.LVL43:
 421              	.LBE358:
 422              	.LBE357:
 423              	.LBB359:
 424              	.LBB360:
 425              		.loc 5 26 0
 426 0006 034A     		ldr	r2, .L35+8
 427 0008 DA60     		str	r2, [r3, #12]
 428              	.LVL44:
 429              	.LBE360:
 430              	.LBE359:
 431              	.LBE356:
  34:Core/Src/robot/robo_init.cpp **** 	steering.set_config(&motor_configurations[2], &encoder_configurations[2]);
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 16


  35:Core/Src/robot/robo_init.cpp **** }
 432              		.loc 3 35 0
 433 000a 7047     		bx	lr
 434              	.L36:
 435              		.align	2
 436              	.L35:
 437 000c 00000000 		.word	.LANCHOR3
 438 0010 40000000 		.word	.LANCHOR1+64
 439 0014 18000000 		.word	.LANCHOR2+24
 440              		.cfi_endproc
 441              	.LFE494:
 443              		.section	.text._ZL8pid_initv,"ax",%progbits
 444              		.align	1
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	_ZL8pid_initv:
 451              	.LFB495:
  36:Core/Src/robot/robo_init.cpp **** 
  37:Core/Src/robot/robo_init.cpp **** static void pid_init(){
 452              		.loc 3 37 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 0000 30B4     		push	{r4, r5}
 458              	.LCFI0:
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 5, -4
 462              	.LVL45:
 463              	.LBB361:
 464              	.LBB362:
 465              	.LBB363:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 466              		.loc 1 11 0
 467 0002 134B     		ldr	r3, .L39
 468 0004 134D     		ldr	r5, .L39+4
 469 0006 9D61     		str	r5, [r3, #24]	@ float
 470              	.LVL46:
 471              	.LBE363:
 472              	.LBE362:
 473              	.LBB364:
 474              	.LBB365:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 475              		.loc 1 12 0
 476 0008 134C     		ldr	r4, .L39+8
 477 000a DC61     		str	r4, [r3, #28]	@ float
 478              	.LVL47:
 479              	.LBE365:
 480              	.LBE364:
 481              	.LBB366:
 482              	.LBB367:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 483              		.loc 1 13 0
 484 000c 0022     		movs	r2, #0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 17


 485 000e 1A62     		str	r2, [r3, #32]	@ float
 486              	.LVL48:
 487              	.LBE367:
 488              	.LBE366:
 489              	.LBB368:
 490              	.LBB369:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 491              		.loc 1 26 0
 492 0010 1248     		ldr	r0, .L39+12
 493 0012 5862     		str	r0, [r3, #36]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 494              		.loc 1 27 0
 495 0014 1249     		ldr	r1, .L39+16
 496 0016 9962     		str	r1, [r3, #40]	@ float
 497              	.LVL49:
 498              	.LBE369:
 499              	.LBE368:
 500              	.LBE361:
 501              	.LBB370:
 502              	.LBB371:
 503              	.LBB372:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 504              		.loc 1 11 0
 505 0018 1D67     		str	r5, [r3, #112]	@ float
 506              	.LVL50:
 507              	.LBE372:
 508              	.LBE371:
 509              	.LBB373:
 510              	.LBB374:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 511              		.loc 1 12 0
 512 001a 5C67     		str	r4, [r3, #116]	@ float
 513              	.LVL51:
 514              	.LBE374:
 515              	.LBE373:
 516              	.LBB375:
 517              	.LBB376:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 518              		.loc 1 13 0
 519 001c 9A67     		str	r2, [r3, #120]	@ float
 520              	.LVL52:
 521              	.LBE376:
 522              	.LBE375:
 523              	.LBB377:
 524              	.LBB378:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 525              		.loc 1 26 0
 526 001e D867     		str	r0, [r3, #124]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 527              		.loc 1 27 0
 528 0020 C3F88010 		str	r1, [r3, #128]	@ float
 529              	.LVL53:
 530              	.LBE378:
 531              	.LBE377:
 532              	.LBE370:
 533              	.LBB379:
 534              	.LBB380:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 18


 535              	.LBB381:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 536              		.loc 1 11 0
 537 0024 0F4B     		ldr	r3, .L39+20
 538 0026 1049     		ldr	r1, .L39+24
 539 0028 9962     		str	r1, [r3, #40]	@ float
 540              	.LVL54:
 541              	.LBE381:
 542              	.LBE380:
 543              	.LBB382:
 544              	.LBB383:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 545              		.loc 1 12 0
 546 002a 1049     		ldr	r1, .L39+28
 547 002c D962     		str	r1, [r3, #44]	@ float
 548              	.LVL55:
 549              	.LBE383:
 550              	.LBE382:
 551              	.LBB384:
 552              	.LBB385:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 553              		.loc 1 13 0
 554 002e 1A63     		str	r2, [r3, #48]	@ float
 555              	.LVL56:
 556              	.LBE385:
 557              	.LBE384:
 558              	.LBB386:
 559              	.LBB387:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 560              		.loc 1 26 0
 561 0030 0F49     		ldr	r1, .L39+32
 562 0032 5963     		str	r1, [r3, #52]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 563              		.loc 1 27 0
 564 0034 0F49     		ldr	r1, .L39+36
 565 0036 9963     		str	r1, [r3, #56]	@ float
 566              	.LVL57:
 567              	.LBE387:
 568              	.LBE386:
 569              	.LBE379:
 570              	.LBB388:
 571              	.LBB389:
 572              	.LBB390:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 573              		.loc 1 11 0
 574 0038 0F49     		ldr	r1, .L39+40
 575 003a D964     		str	r1, [r3, #76]	@ float
 576              	.LVL58:
 577              	.LBE390:
 578              	.LBE389:
 579              	.LBB391:
 580              	.LBB392:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 581              		.loc 1 12 0
 582 003c 0F49     		ldr	r1, .L39+44
 583 003e 1965     		str	r1, [r3, #80]	@ float
 584              	.LVL59:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 19


 585              	.LBE392:
 586              	.LBE391:
 587              	.LBB393:
 588              	.LBB394:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 589              		.loc 1 13 0
 590 0040 5A65     		str	r2, [r3, #84]	@ float
 591              	.LVL60:
 592              	.LBE394:
 593              	.LBE393:
 594              	.LBB395:
 595              	.LBB396:
  26:Core/Inc/utils/pid_algorithms.h ****                 min_ = min_out;
 596              		.loc 1 26 0
 597 0042 4FF07F52 		mov	r2, #1069547520
 598 0046 9A65     		str	r2, [r3, #88]	@ float
  27:Core/Inc/utils/pid_algorithms.h ****         }
 599              		.loc 1 27 0
 600 0048 0D4A     		ldr	r2, .L39+48
 601 004a DA65     		str	r2, [r3, #92]	@ float
 602              	.LVL61:
 603              	.LBE396:
 604              	.LBE395:
 605              	.LBE388:
  38:Core/Src/robot/robo_init.cpp **** 
  39:Core/Src/robot/robo_init.cpp **** 	leg[0].set_PID_constants( 1.8, 30, 0, -17.5, 17.5);
  40:Core/Src/robot/robo_init.cpp **** 	leg[1].set_PID_constants( 1.8, 30, 0, -17.5, 17.5);
  41:Core/Src/robot/robo_init.cpp **** 	steering.set_PID_constants( 2.3, 50, 0, -8.75, 8.75);		//	1.0, 100
  42:Core/Src/robot/robo_init.cpp **** 	steering.set_angle_PID_constants( 0.3, 0.0002, 0, -1.5, 1.5);
  43:Core/Src/robot/robo_init.cpp **** }
 606              		.loc 3 43 0
 607 004c 30BC     		pop	{r4, r5}
 608              	.LCFI1:
 609              		.cfi_restore 5
 610              		.cfi_restore 4
 611              		.cfi_def_cfa_offset 0
 612 004e 7047     		bx	lr
 613              	.L40:
 614              		.align	2
 615              	.L39:
 616 0050 00000000 		.word	.LANCHOR0
 617 0054 6666E63F 		.word	1072064102
 618 0058 0000F041 		.word	1106247680
 619 005c 00008C41 		.word	1099694080
 620 0060 00008CC1 		.word	-1047789568
 621 0064 00000000 		.word	.LANCHOR3
 622 0068 33331340 		.word	1075000115
 623 006c 00004842 		.word	1112014848
 624 0070 00000C41 		.word	1091305472
 625 0074 00000CC1 		.word	-1056178176
 626 0078 9A99993E 		.word	1050253722
 627 007c 17B75139 		.word	961656599
 628 0080 0000C0BF 		.word	-1077936128
 629              		.cfi_endproc
 630              	.LFE495:
 632              		.section	.text._ZL17limit_switch_initv,"ax",%progbits
 633              		.align	1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 20


 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv4-sp-d16
 639              	_ZL17limit_switch_initv:
 640              	.LFB496:
  44:Core/Src/robot/robo_init.cpp **** 
  45:Core/Src/robot/robo_init.cpp **** static void limit_switch_init(){
 641              		.loc 3 45 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
  46:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_port = GPIOC;
 646              		.loc 3 46 0
 647 0000 044B     		ldr	r3, .L42
 648 0002 054A     		ldr	r2, .L42+4
 649 0004 1A60     		str	r2, [r3]
  47:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[0].int_pin = GPIO_PIN_0;
 650              		.loc 3 47 0
 651 0006 0122     		movs	r2, #1
 652 0008 9A80     		strh	r2, [r3, #4]	@ movhi
  48:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_port = GPIOA;
 653              		.loc 3 48 0
 654 000a 044A     		ldr	r2, .L42+8
 655 000c 9A60     		str	r2, [r3, #8]
  49:Core/Src/robot/robo_init.cpp **** 	leg[0].limit_switch__[1].int_pin = GPIO_PIN_2;
 656              		.loc 3 49 0
 657 000e 0422     		movs	r2, #4
 658 0010 9A81     		strh	r2, [r3, #12]	@ movhi
  50:Core/Src/robot/robo_init.cpp **** }
 659              		.loc 3 50 0
 660 0012 7047     		bx	lr
 661              	.L43:
 662              		.align	2
 663              	.L42:
 664 0014 00000000 		.word	.LANCHOR0
 665 0018 00080240 		.word	1073874944
 666 001c 00000240 		.word	1073872896
 667              		.cfi_endproc
 668              	.LFE496:
 670              		.section	.text.__tcf_0,"ax",%progbits
 671              		.align	1
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 677              	__tcf_0:
 678              	.LFB500:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 679              		.loc 3 3 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 684              		.loc 3 3 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 21


 685 0000 034B     		ldr	r3, .L47
 686              	.L46:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 687              		.loc 3 3 0 is_stmt 0 discriminator 5
 688 0002 044A     		ldr	r2, .L47+4
 689 0004 9342     		cmp	r3, r2
 690 0006 01D0     		beq	.L44
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 691              		.loc 3 3 0 discriminator 4
 692 0008 583B     		subs	r3, r3, #88
 693              	.LVL62:
 694 000a FAE7     		b	.L46
 695              	.LVL63:
 696              	.L44:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 697              		.loc 3 3 0
 698 000c 7047     		bx	lr
 699              	.L48:
 700 000e 00BF     		.align	2
 701              	.L47:
 702 0010 B0000000 		.word	.LANCHOR0+176
 703 0014 00000000 		.word	.LANCHOR0
 704              		.cfi_endproc
 705              	.LFE500:
 707              		.section	.text._ZL10motor_initv,"ax",%progbits
 708              		.align	1
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv4-sp-d16
 714              	_ZL10motor_initv:
 715              	.LFB497:
  51:Core/Src/robot/robo_init.cpp **** 
  52:Core/Src/robot/robo_init.cpp **** void motor_init(){
 716              		.loc 3 52 0 is_stmt 1
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 721              	.LCFI2:
 722              		.cfi_def_cfa_offset 24
 723              		.cfi_offset 3, -24
 724              		.cfi_offset 4, -20
 725              		.cfi_offset 5, -16
 726              		.cfi_offset 6, -12
 727              		.cfi_offset 7, -8
 728              		.cfi_offset 14, -4
  53:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].htim = &htim8;
 729              		.loc 3 53 0
 730 0002 1E4C     		ldr	r4, .L51
 731 0004 1E48     		ldr	r0, .L51+4
 732 0006 A061     		str	r0, [r4, #24]
  54:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_port = GPIOA;
 733              		.loc 3 54 0
 734 0008 1E4A     		ldr	r2, .L51+8
 735 000a A260     		str	r2, [r4, #8]
  55:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in1_pin = GPIO_PIN_10; 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 22


 736              		.loc 3 55 0
 737 000c 4FF48063 		mov	r3, #1024
 738 0010 A381     		strh	r3, [r4, #12]	@ movhi
  56:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_port = GPIOA;
 739              		.loc 3 56 0
 740 0012 2261     		str	r2, [r4, #16]
  57:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].in2_pin = GPIO_PIN_8;
 741              		.loc 3 57 0
 742 0014 4FF48073 		mov	r3, #256
 743 0018 A382     		strh	r3, [r4, #20]	@ movhi
  58:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].channel = TIM_CHANNEL_4;
 744              		.loc 3 58 0
 745 001a 0C27     		movs	r7, #12
 746 001c E761     		str	r7, [r4, #28]
  59:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].max_omega = 17.5;
 747              		.loc 3 59 0
 748 001e 1A49     		ldr	r1, .L51+12
 749 0020 2160     		str	r1, [r4]	@ float
  60:Core/Src/robot/robo_init.cpp ****         motor_configurations[0].tolerance = 0.1;
 750              		.loc 3 60 0
 751 0022 1A4B     		ldr	r3, .L51+16
 752 0024 6360     		str	r3, [r4, #4]	@ float
  61:Core/Src/robot/robo_init.cpp **** 
  62:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].htim = &htim8;
 753              		.loc 3 62 0
 754 0026 A063     		str	r0, [r4, #56]
  63:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_port = GPIOC;
 755              		.loc 3 63 0
 756 0028 194D     		ldr	r5, .L51+20
 757 002a A562     		str	r5, [r4, #40]
  64:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in1_pin = GPIO_PIN_11;
 758              		.loc 3 64 0
 759 002c 4FF40065 		mov	r5, #2048
 760 0030 A585     		strh	r5, [r4, #44]	@ movhi
  65:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_port = GPIOA;
 761              		.loc 3 65 0
 762 0032 2263     		str	r2, [r4, #48]
  66:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].in2_pin = GPIO_PIN_15;
 763              		.loc 3 66 0
 764 0034 4FF40042 		mov	r2, #32768
 765 0038 A286     		strh	r2, [r4, #52]	@ movhi
  67:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].channel = TIM_CHANNEL_2;
 766              		.loc 3 67 0
 767 003a 0425     		movs	r5, #4
 768 003c E563     		str	r5, [r4, #60]
  68:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].max_omega = 17.5;
 769              		.loc 3 68 0
 770 003e 2162     		str	r1, [r4, #32]	@ float
  69:Core/Src/robot/robo_init.cpp ****         motor_configurations[1].tolerance = 0.1;
 771              		.loc 3 69 0
 772 0040 6362     		str	r3, [r4, #36]	@ float
  70:Core/Src/robot/robo_init.cpp ****         
  71:Core/Src/robot/robo_init.cpp **** 
  72:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].htim = &htim8;
 773              		.loc 3 72 0
 774 0042 A065     		str	r0, [r4, #88]
  73:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_port = GPIOD;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 23


 775              		.loc 3 73 0
 776 0044 134A     		ldr	r2, .L51+24
 777 0046 A264     		str	r2, [r4, #72]
  74:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in1_pin = GPIO_PIN_0;
 778              		.loc 3 74 0
 779 0048 0121     		movs	r1, #1
 780 004a A4F84C10 		strh	r1, [r4, #76]	@ movhi
  75:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_port = GPIOD;
 781              		.loc 3 75 0
 782 004e 2265     		str	r2, [r4, #80]
  76:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].in2_pin = GPIO_PIN_2;
 783              		.loc 3 76 0
 784 0050 A4F85450 		strh	r5, [r4, #84]	@ movhi
  77:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].channel = TIM_CHANNEL_3;
 785              		.loc 3 77 0
 786 0054 0826     		movs	r6, #8
 787 0056 E665     		str	r6, [r4, #92]
  78:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].max_omega = 8.86;
 788              		.loc 3 78 0
 789 0058 0F4A     		ldr	r2, .L51+28
 790 005a 2264     		str	r2, [r4, #64]	@ float
  79:Core/Src/robot/robo_init.cpp **** 	motor_configurations[2].tolerance = 0.1;
 791              		.loc 3 79 0
 792 005c 6364     		str	r3, [r4, #68]	@ float
  80:Core/Src/robot/robo_init.cpp **** 
  81:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Base_Start(&htim8);
 793              		.loc 3 81 0
 794 005e FFF7FEFF 		bl	HAL_TIM_Base_Start
 795              	.LVL64:
  82:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_PWM_Start(motor_configurations[0].htim, TIM_CHANNEL_2);
 796              		.loc 3 82 0
 797 0062 2946     		mov	r1, r5
 798 0064 A069     		ldr	r0, [r4, #24]
 799 0066 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 800              	.LVL65:
  83:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[1].htim, TIM_CHANNEL_4);
 801              		.loc 3 83 0
 802 006a 3946     		mov	r1, r7
 803 006c A06B     		ldr	r0, [r4, #56]
 804 006e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 805              	.LVL66:
  84:Core/Src/robot/robo_init.cpp ****         HAL_TIM_PWM_Start(motor_configurations[2].htim, TIM_CHANNEL_3);
 806              		.loc 3 84 0
 807 0072 3146     		mov	r1, r6
 808 0074 A06D     		ldr	r0, [r4, #88]
 809 0076 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 810              	.LVL67:
  85:Core/Src/robot/robo_init.cpp **** }
 811              		.loc 3 85 0
 812 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 813              	.L52:
 814              		.align	2
 815              	.L51:
 816 007c 00000000 		.word	.LANCHOR1
 817 0080 00000000 		.word	htim8
 818 0084 00000240 		.word	1073872896
 819 0088 00008C41 		.word	1099694080
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 24


 820 008c CDCCCC3D 		.word	1036831949
 821 0090 00080240 		.word	1073874944
 822 0094 000C0240 		.word	1073875968
 823 0098 8FC20D41 		.word	1091420815
 824              		.cfi_endproc
 825              	.LFE497:
 827              		.section	.text._ZL12encoder_initv,"ax",%progbits
 828              		.align	1
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv4-sp-d16
 834              	_ZL12encoder_initv:
 835              	.LFB498:
  86:Core/Src/robot/robo_init.cpp **** 
  87:Core/Src/robot/robo_init.cpp **** void encoder_init(){
 836              		.loc 3 87 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840 0000 38B5     		push	{r3, r4, r5, lr}
 841              	.LCFI3:
 842              		.cfi_def_cfa_offset 16
 843              		.cfi_offset 3, -16
 844              		.cfi_offset 4, -12
 845              		.cfi_offset 5, -8
 846              		.cfi_offset 14, -4
  88:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].id = 0;
 847              		.loc 3 88 0
 848 0002 0F4C     		ldr	r4, .L55
 849 0004 0023     		movs	r3, #0
 850 0006 2370     		strb	r3, [r4]
  89:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 851              		.loc 3 89 0
 852 0008 4FF47A65 		mov	r5, #4000
 853 000c 2581     		strh	r5, [r4, #8]	@ movhi
  90:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[0].henc = &htim1;
 854              		.loc 3 90 0
 855 000e 0D48     		ldr	r0, .L55+4
 856 0010 6060     		str	r0, [r4, #4]
  91:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[0].henc, TIM_CHANNEL_ALL);
 857              		.loc 3 91 0
 858 0012 1821     		movs	r1, #24
 859 0014 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 860              	.LVL68:
  92:Core/Src/robot/robo_init.cpp **** 
  93:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].id = 1;
 861              		.loc 3 93 0
 862 0018 0123     		movs	r3, #1
 863 001a 2373     		strb	r3, [r4, #12]
  94:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].ppr = 250*LEG_TO_ENCODER_RATIO*4;
 864              		.loc 3 94 0
 865 001c A582     		strh	r5, [r4, #20]	@ movhi
  95:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[1].henc = &htim2;
 866              		.loc 3 95 0
 867 001e 0A48     		ldr	r0, .L55+8
 868 0020 2061     		str	r0, [r4, #16]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 25


  96:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[1].henc, TIM_CHANNEL_ALL);
 869              		.loc 3 96 0
 870 0022 1821     		movs	r1, #24
 871 0024 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 872              	.LVL69:
  97:Core/Src/robot/robo_init.cpp **** 	
  98:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].id = 2;
 873              		.loc 3 98 0
 874 0028 0223     		movs	r3, #2
 875 002a 2376     		strb	r3, [r4, #24]
  99:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].ppr = 250 *BEARING_TO_STEERING_RATIO*4;
 876              		.loc 3 99 0
 877 002c 41F60E73 		movw	r3, #7950
 878 0030 2384     		strh	r3, [r4, #32]	@ movhi
 100:Core/Src/robot/robo_init.cpp **** 	encoder_configurations[2].henc = &htim3;
 879              		.loc 3 100 0
 880 0032 0648     		ldr	r0, .L55+12
 881 0034 E061     		str	r0, [r4, #28]
 101:Core/Src/robot/robo_init.cpp **** 	HAL_TIM_Encoder_Start(encoder_configurations[2].henc, TIM_CHANNEL_ALL);
 882              		.loc 3 101 0
 883 0036 1821     		movs	r1, #24
 884 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 885              	.LVL70:
 102:Core/Src/robot/robo_init.cpp **** }
 886              		.loc 3 102 0
 887 003c 38BD     		pop	{r3, r4, r5, pc}
 888              	.L56:
 889 003e 00BF     		.align	2
 890              	.L55:
 891 0040 00000000 		.word	.LANCHOR2
 892 0044 00000000 		.word	htim1
 893 0048 00000000 		.word	htim2
 894 004c 00000000 		.word	htim3
 895              		.cfi_endproc
 896              	.LFE498:
 898              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	_Z41__static_initialization_and_destruction_0ii:
 906              	.LFB499:
 907              		.loc 3 102 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              	.LVL71:
 912 0000 0128     		cmp	r0, #1
 913 0002 00D0     		beq	.L65
 914              	.L62:
 915 0004 7047     		bx	lr
 916              	.L65:
 917              		.loc 3 102 0 is_stmt 0 discriminator 1
 918 0006 4FF6FF73 		movw	r3, #65535
 919 000a 9942     		cmp	r1, r3
 920 000c FAD1     		bne	.L62
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 26


 921              		.loc 3 102 0
 922 000e 10B5     		push	{r4, lr}
 923              	.LCFI4:
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 4, -8
 926              		.cfi_offset 14, -4
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 927              		.loc 3 3 0 is_stmt 1
 928 0010 1E4B     		ldr	r3, .L66
 929              	.LVL72:
 930              	.L60:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 931              		.loc 3 3 0 is_stmt 0 discriminator 4
 932 0012 0028     		cmp	r0, #0
 933 0014 15DB     		blt	.L59
 934              	.LVL73:
 935              	.LBB397:
 936              	.LBB398:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 937              		.loc 6 18 0 is_stmt 1
 938 0016 0021     		movs	r1, #0
 939 0018 1961     		str	r1, [r3, #16]
 940              	.LVL74:
 941              	.LBB399:
 942              	.LBB400:
 943              	.LBB401:
 944              	.LBB402:
 945              	.LBB403:
 946              	.LBB404:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 947              		.loc 1 11 0
 948 001a 0022     		movs	r2, #0
 949 001c 9A61     		str	r2, [r3, #24]	@ float
 950              	.LVL75:
 951              	.LBE404:
 952              	.LBE403:
 953              	.LBB405:
 954              	.LBB406:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 955              		.loc 1 12 0
 956 001e DA61     		str	r2, [r3, #28]	@ float
 957              	.LVL76:
 958              	.LBE406:
 959              	.LBE405:
 960              	.LBB407:
 961              	.LBB408:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 962              		.loc 1 13 0
 963 0020 1A62     		str	r2, [r3, #32]	@ float
 964              	.LVL77:
 965              	.LBE408:
 966              	.LBE407:
 967              	.LBE402:
 968              	.LBE401:
  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 969              		.loc 1 50 0
 970 0022 1B4C     		ldr	r4, .L66+4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 27


 971 0024 5C61     		str	r4, [r3, #20]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 972              		.loc 1 51 0
 973 0026 DA62     		str	r2, [r3, #44]	@ float
  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 974              		.loc 1 52 0
 975 0028 1A63     		str	r2, [r3, #48]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 976              		.loc 1 53 0
 977 002a 5A63     		str	r2, [r3, #52]	@ float
 978              	.LVL78:
 979              	.LBE400:
 980              	.LBE399:
 981              	.LBB409:
 982              	.LBB410:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
 983              		.loc 4 29 0
 984 002c 9963     		str	r1, [r3, #56]
 985              	.LVL79:
 986              	.LBE410:
 987              	.LBE409:
 988              	.LBB411:
 989              	.LBB412:
  19:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 990              		.loc 5 19 0
 991 002e 1964     		str	r1, [r3, #64]
 992 0030 5A64     		str	r2, [r3, #68]	@ float
 993 0032 9A64     		str	r2, [r3, #72]	@ float
 994 0034 DA64     		str	r2, [r3, #76]	@ float
 995 0036 1965     		str	r1, [r3, #80]
 996 0038 D963     		str	r1, [r3, #60]
 997              	.LVL80:
 998              	.LBE412:
 999              	.LBE411:
  18:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
 1000              		.loc 6 18 0
 1001 003a 5A65     		str	r2, [r3, #84]	@ float
 1002              	.LVL81:
 1003              	.LBE398:
 1004              	.LBE397:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 1005              		.loc 3 3 0
 1006 003c 5833     		adds	r3, r3, #88
 1007 003e 0138     		subs	r0, r0, #1
 1008 0040 E7E7     		b	.L60
 1009              	.L59:
   3:Core/Src/robot/robo_init.cpp **** static motor_config motor_configurations[3];
 1010              		.loc 3 3 0 is_stmt 0 discriminator 2
 1011 0042 144C     		ldr	r4, .L66+8
 1012 0044 2246     		mov	r2, r4
 1013 0046 1449     		ldr	r1, .L66+12
 1014 0048 0020     		movs	r0, #0
 1015 004a FFF7FEFF 		bl	__aeabi_atexit
 1016              	.LVL82:
 1017              	.LBB413:
 1018              	.LBB414:
 1019              	.LBB415:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 28


 1020              	.LBB416:
 1021              	.LBB417:
  29:Core/Inc/devs/motor.h ****         motor(motor_config *motor) { motor_ = motor; }
 1022              		.loc 4 29 0 is_stmt 1 discriminator 2
 1023 004e 1348     		ldr	r0, .L66+16
 1024 0050 0022     		movs	r2, #0
 1025 0052 8260     		str	r2, [r0, #8]
 1026              	.LVL83:
 1027              	.LBE417:
 1028              	.LBE416:
 1029              	.LBE415:
 1030              	.LBB418:
 1031              	.LBB419:
 1032              	.LBB420:
  19:Core/Inc/devs/encoder.h **** 	encoder(encoder_config *encoder){encoder_ = encoder;}
 1033              		.loc 5 19 0 discriminator 2
 1034 0054 0261     		str	r2, [r0, #16]
 1035 0056 0023     		movs	r3, #0
 1036 0058 4361     		str	r3, [r0, #20]	@ float
 1037 005a 8361     		str	r3, [r0, #24]	@ float
 1038 005c C361     		str	r3, [r0, #28]	@ float
 1039 005e 0262     		str	r2, [r0, #32]
 1040 0060 C260     		str	r2, [r0, #12]
 1041              	.LVL84:
 1042              	.LBE420:
 1043              	.LBE419:
 1044              	.LBE418:
 1045              	.LBB421:
 1046              	.LBB422:
 1047              	.LBB423:
 1048              	.LBB424:
 1049              	.LBB425:
 1050              	.LBB426:
 1051              	.LBB427:
 1052              	.LBB428:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1053              		.loc 1 11 0 discriminator 2
 1054 0062 8362     		str	r3, [r0, #40]	@ float
 1055              	.LVL85:
 1056              	.LBE428:
 1057              	.LBE427:
 1058              	.LBB429:
 1059              	.LBB430:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1060              		.loc 1 12 0 discriminator 2
 1061 0064 C362     		str	r3, [r0, #44]	@ float
 1062              	.LVL86:
 1063              	.LBE430:
 1064              	.LBE429:
 1065              	.LBB431:
 1066              	.LBB432:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1067              		.loc 1 13 0 discriminator 2
 1068 0066 0363     		str	r3, [r0, #48]	@ float
 1069              	.LVL87:
 1070              	.LBE432:
 1071              	.LBE431:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 29


 1072              	.LBE426:
 1073              	.LBE425:
 1074              	.LBE424:
  50:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1075              		.loc 1 50 0 discriminator 2
 1076 0068 094A     		ldr	r2, .L66+4
 1077 006a 4262     		str	r2, [r0, #36]
  51:Core/Inc/utils/pid_algorithms.h ****                 l_err_ = 0;
 1078              		.loc 1 51 0 discriminator 2
 1079 006c C363     		str	r3, [r0, #60]	@ float
  52:Core/Inc/utils/pid_algorithms.h ****                 ll_err_ = 0;
 1080              		.loc 1 52 0 discriminator 2
 1081 006e 0364     		str	r3, [r0, #64]	@ float
  53:Core/Inc/utils/pid_algorithms.h ****         }
 1082              		.loc 1 53 0 discriminator 2
 1083 0070 4364     		str	r3, [r0, #68]	@ float
 1084              	.LVL88:
 1085              	.LBE423:
 1086              	.LBE422:
 1087              	.LBE421:
 1088              	.LBB433:
 1089              	.LBB434:
 1090              	.LBB435:
 1091              	.LBB436:
 1092              	.LBB437:
 1093              	.LBB438:
 1094              	.LBB439:
 1095              	.LBB440:
  11:Core/Inc/utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
 1096              		.loc 1 11 0 discriminator 2
 1097 0072 C364     		str	r3, [r0, #76]	@ float
 1098              	.LVL89:
 1099              	.LBE440:
 1100              	.LBE439:
 1101              	.LBB441:
 1102              	.LBB442:
  12:Core/Inc/utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
 1103              		.loc 1 12 0 discriminator 2
 1104 0074 0365     		str	r3, [r0, #80]	@ float
 1105              	.LVL90:
 1106              	.LBE442:
 1107              	.LBE441:
 1108              	.LBB443:
 1109              	.LBB444:
  13:Core/Inc/utils/pid_algorithms.h ****         void set_PID(float p, float i, float d)
 1110              		.loc 1 13 0 discriminator 2
 1111 0076 4365     		str	r3, [r0, #84]	@ float
 1112              	.LVL91:
 1113              	.LBE444:
 1114              	.LBE443:
 1115              	.LBE438:
 1116              	.LBE437:
 1117              	.LBE436:
 203:Core/Inc/utils/pid_algorithms.h ****                 l_output_ = 0;
 1118              		.loc 1 203 0 discriminator 2
 1119 0078 094A     		ldr	r2, .L66+20
 1120 007a 8264     		str	r2, [r0, #72]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 30


 204:Core/Inc/utils/pid_algorithms.h ****                 err_sum_ = 0;
 1121              		.loc 1 204 0 discriminator 2
 1122 007c 0366     		str	r3, [r0, #96]	@ float
 205:Core/Inc/utils/pid_algorithms.h ****         }
 1123              		.loc 1 205 0 discriminator 2
 1124 007e 4366     		str	r3, [r0, #100]	@ float
 1125              	.LVL92:
 1126              	.LBE435:
 1127              	.LBE434:
 1128              	.LBE433:
 1129              	.LBE414:
 1130              	.LBE413:
   4:Core/Src/robot/robo_init.cpp **** 
 1131              		.loc 3 4 0 discriminator 2
 1132 0080 2246     		mov	r2, r4
 1133 0082 0849     		ldr	r1, .L66+24
 1134 0084 FFF7FEFF 		bl	__aeabi_atexit
 1135              	.LVL93:
 1136              		.loc 3 102 0 discriminator 2
 1137 0088 10BD     		pop	{r4, pc}
 1138              	.L67:
 1139 008a 00BF     		.align	2
 1140              	.L66:
 1141 008c 00000000 		.word	.LANCHOR0
 1142 0090 08000000 		.word	_ZTV12Discrete_PID+8
 1143 0094 00000000 		.word	__dso_handle
 1144 0098 00000000 		.word	__tcf_0
 1145 009c 00000000 		.word	.LANCHOR3
 1146 00a0 08000000 		.word	_ZTV9Angle_PID+8
 1147 00a4 00000000 		.word	_ZN8steeringD1Ev
 1148              		.cfi_endproc
 1149              	.LFE499:
 1151              		.section	.text._ZN9Angle_PIDD0Ev,"axG",%progbits,_ZN9Angle_PIDD5Ev,comdat
 1152              		.align	1
 1153              		.weak	_ZN9Angle_PIDD0Ev
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1157              		.fpu fpv4-sp-d16
 1159              	_ZN9Angle_PIDD0Ev:
 1160              	.LFB421:
 212:Core/Inc/utils/pid_algorithms.h **** 
 1161              		.loc 1 212 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              	.LVL94:
 1166 0000 10B5     		push	{r4, lr}
 1167              	.LCFI5:
 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 4, -8
 1170              		.cfi_offset 14, -4
 1171 0002 0446     		mov	r4, r0
 212:Core/Inc/utils/pid_algorithms.h **** 
 1172              		.loc 1 212 0
 1173 0004 2021     		movs	r1, #32
 1174 0006 FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 31


 1175              	.LVL95:
 1176 000a 2046     		mov	r0, r4
 1177 000c 10BD     		pop	{r4, pc}
 1178              		.cfi_endproc
 1179              	.LFE421:
 1181              		.section	.text._ZN12Discrete_PIDD0Ev,"axG",%progbits,_ZN12Discrete_PIDD5Ev,comdat
 1182              		.align	1
 1183              		.weak	_ZN12Discrete_PIDD0Ev
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1187              		.fpu fpv4-sp-d16
 1189              	_ZN12Discrete_PIDD0Ev:
 1190              	.LFB398:
  59:Core/Inc/utils/pid_algorithms.h **** 
 1191              		.loc 1 59 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              	.LVL96:
 1196 0000 10B5     		push	{r4, lr}
 1197              	.LCFI6:
 1198              		.cfi_def_cfa_offset 8
 1199              		.cfi_offset 4, -8
 1200              		.cfi_offset 14, -4
 1201 0002 0446     		mov	r4, r0
  59:Core/Inc/utils/pid_algorithms.h **** 
 1202              		.loc 1 59 0
 1203 0004 2421     		movs	r1, #36
 1204 0006 FFF7FEFF 		bl	_ZdlPvj
 1205              	.LVL97:
 1206 000a 2046     		mov	r0, r4
 1207 000c 10BD     		pop	{r4, pc}
 1208              		.cfi_endproc
 1209              	.LFE398:
 1211              		.section	.text._Z9robo_initv,"ax",%progbits
 1212              		.align	1
 1213              		.global	_Z9robo_initv
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv4-sp-d16
 1219              	_Z9robo_initv:
 1220              	.LFB492:
  17:Core/Src/robot/robo_init.cpp **** 	motor_init();
 1221              		.loc 3 17 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225 0000 08B5     		push	{r3, lr}
 1226              	.LCFI7:
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 3, -8
 1229              		.cfi_offset 14, -4
  18:Core/Src/robot/robo_init.cpp **** 	encoder_init();	
 1230              		.loc 3 18 0
 1231 0002 FFF7FEFF 		bl	_ZL10motor_initv
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 32


 1232              	.LVL98:
  19:Core/Src/robot/robo_init.cpp **** 	pid_init();
 1233              		.loc 3 19 0
 1234 0006 FFF7FEFF 		bl	_ZL12encoder_initv
 1235              	.LVL99:
  20:Core/Src/robot/robo_init.cpp **** 	limit_switch_init();
 1236              		.loc 3 20 0
 1237 000a FFF7FEFF 		bl	_ZL8pid_initv
 1238              	.LVL100:
  21:Core/Src/robot/robo_init.cpp **** 	leg_init();
 1239              		.loc 3 21 0
 1240 000e FFF7FEFF 		bl	_ZL17limit_switch_initv
 1241              	.LVL101:
  22:Core/Src/robot/robo_init.cpp **** 	steering_init();
 1242              		.loc 3 22 0
 1243 0012 FFF7FEFF 		bl	_ZL8leg_initv
 1244              	.LVL102:
  23:Core/Src/robot/robo_init.cpp **** }
 1245              		.loc 3 23 0
 1246 0016 FFF7FEFF 		bl	_ZL13steering_initv
 1247              	.LVL103:
  24:Core/Src/robot/robo_init.cpp **** 
 1248              		.loc 3 24 0
 1249 001a 08BD     		pop	{r3, pc}
 1250              		.cfi_endproc
 1251              	.LFE492:
 1253              		.section	.text._GLOBAL__sub_I_leg,"ax",%progbits
 1254              		.align	1
 1255              		.syntax unified
 1256              		.thumb
 1257              		.thumb_func
 1258              		.fpu fpv4-sp-d16
 1260              	_GLOBAL__sub_I_leg:
 1261              	.LFB501:
 1262              		.loc 3 102 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266 0000 08B5     		push	{r3, lr}
 1267              	.LCFI8:
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 3, -8
 1270              		.cfi_offset 14, -4
 1271              		.loc 3 102 0
 1272 0002 4FF6FF71 		movw	r1, #65535
 1273 0006 0120     		movs	r0, #1
 1274 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1275              	.LVL104:
 1276 000c 08BD     		pop	{r3, pc}
 1277              		.cfi_endproc
 1278              	.LFE501:
 1280              		.section	.init_array,"aw",%init_array
 1281              		.align	2
 1282 0000 00000000 		.word	_GLOBAL__sub_I_leg(target1)
 1283              		.weak	_ZTS13PID_Algorithm
 1284              		.section	.rodata._ZTS13PID_Algorithm,"aG",%progbits,_ZTS13PID_Algorithm,comdat
 1285              		.align	2
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 33


 1288              	_ZTS13PID_Algorithm:
 1289 0000 31335049 		.ascii	"13PID_Algorithm\000"
 1289      445F416C 
 1289      676F7269 
 1289      74686D00 
 1290              		.weak	_ZTI13PID_Algorithm
 1291              		.section	.rodata._ZTI13PID_Algorithm,"aG",%progbits,_ZTI13PID_Algorithm,comdat
 1292              		.align	2
 1295              	_ZTI13PID_Algorithm:
 1296 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 1297 0004 00000000 		.word	_ZTS13PID_Algorithm
 1298              		.weak	_ZTS12Discrete_PID
 1299              		.section	.rodata._ZTS12Discrete_PID,"aG",%progbits,_ZTS12Discrete_PID,comdat
 1300              		.align	2
 1303              	_ZTS12Discrete_PID:
 1304 0000 31324469 		.ascii	"12Discrete_PID\000"
 1304      73637265 
 1304      74655F50 
 1304      494400
 1305              		.weak	_ZTI12Discrete_PID
 1306              		.section	.rodata._ZTI12Discrete_PID,"aG",%progbits,_ZTI12Discrete_PID,comdat
 1307              		.align	2
 1310              	_ZTI12Discrete_PID:
 1311 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1312 0004 00000000 		.word	_ZTS12Discrete_PID
 1313 0008 00000000 		.word	_ZTI13PID_Algorithm
 1314              		.weak	_ZTS9Angle_PID
 1315              		.section	.rodata._ZTS9Angle_PID,"aG",%progbits,_ZTS9Angle_PID,comdat
 1316              		.align	2
 1319              	_ZTS9Angle_PID:
 1320 0000 39416E67 		.ascii	"9Angle_PID\000"
 1320      6C655F50 
 1320      494400
 1321              		.weak	_ZTI9Angle_PID
 1322              		.section	.rodata._ZTI9Angle_PID,"aG",%progbits,_ZTI9Angle_PID,comdat
 1323              		.align	2
 1326              	_ZTI9Angle_PID:
 1327 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 1328 0004 00000000 		.word	_ZTS9Angle_PID
 1329 0008 00000000 		.word	_ZTI13PID_Algorithm
 1330              		.weak	_ZTV12Discrete_PID
 1331              		.section	.rodata._ZTV12Discrete_PID,"aG",%progbits,_ZTV12Discrete_PID,comdat
 1332              		.align	2
 1335              	_ZTV12Discrete_PID:
 1336 0000 00000000 		.word	0
 1337 0004 00000000 		.word	_ZTI12Discrete_PID
 1338 0008 00000000 		.word	_ZN12Discrete_PID7computeEfm
 1339 000c 00000000 		.word	_ZN12Discrete_PIDD1Ev
 1340 0010 00000000 		.word	_ZN12Discrete_PIDD0Ev
 1341              		.weak	_ZTV9Angle_PID
 1342              		.section	.rodata._ZTV9Angle_PID,"aG",%progbits,_ZTV9Angle_PID,comdat
 1343              		.align	2
 1346              	_ZTV9Angle_PID:
 1347 0000 00000000 		.word	0
 1348 0004 00000000 		.word	_ZTI9Angle_PID
 1349 0008 00000000 		.word	_ZN9Angle_PID7computeEfm
 1350 000c 00000000 		.word	_ZN9Angle_PIDD1Ev
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 34


 1351 0010 00000000 		.word	_ZN9Angle_PIDD0Ev
 1352              		.global	steering
 1353              		.global	leg
 1354              		.section	.bss._ZL20motor_configurations,"aw",%nobits
 1355              		.align	2
 1356              		.set	.LANCHOR1,. + 0
 1359              	_ZL20motor_configurations:
 1360 0000 00000000 		.space	96
 1360      00000000 
 1360      00000000 
 1360      00000000 
 1360      00000000 
 1361              		.section	.bss._ZL22encoder_configurations,"aw",%nobits
 1362              		.align	2
 1363              		.set	.LANCHOR2,. + 0
 1366              	_ZL22encoder_configurations:
 1367 0000 00000000 		.space	36
 1367      00000000 
 1367      00000000 
 1367      00000000 
 1367      00000000 
 1368              		.section	.bss.leg,"aw",%nobits
 1369              		.align	2
 1370              		.set	.LANCHOR0,. + 0
 1373              	leg:
 1374 0000 00000000 		.space	176
 1374      00000000 
 1374      00000000 
 1374      00000000 
 1374      00000000 
 1375              		.section	.bss.steering,"aw",%nobits
 1376              		.align	2
 1377              		.set	.LANCHOR3,. + 0
 1380              	steering:
 1381 0000 00000000 		.space	104
 1381      00000000 
 1381      00000000 
 1381      00000000 
 1381      00000000 
 1382              		.text
 1383              	.Letext0:
 1384              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1385              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1386              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1387              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1388              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1389              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1390              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1391              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1392              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1393              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1394              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1395              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1396              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1397              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1398              		.file 21 "Core/Inc/periphs/tim.h"
 1399              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 35


 1400              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1401              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1402              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1403              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1404              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1405              		.file 28 "Core/Inc/devs/limit_switch.h"
 1406              		.file 29 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 robo_init.cpp
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:18     .text._ZN12Discrete_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:25     .text._ZN12Discrete_PIDD2Ev:00000000 _ZN12Discrete_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:42     .text._ZN12Discrete_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:49     .text._ZN12Discrete_PID7computeEfm:00000000 _ZN12Discrete_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:153    .text._ZN12Discrete_PID7computeEfm:00000090 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:158    .text._ZN9Angle_PIDD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:165    .text._ZN9Angle_PIDD2Ev:00000000 _ZN9Angle_PIDD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:181    .text._ZN9Angle_PID7computeEfm:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:188    .text._ZN9Angle_PID7computeEfm:00000000 _ZN9Angle_PID7computeEfm
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:293    .text._ZN8steeringD2Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD2Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:300    .text._ZN8steeringD2Ev:00000000 _ZN8steeringD1Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:317    .text._ZL8leg_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:323    .text._ZL8leg_initv:00000000 _ZL8leg_initv
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:391    .text._ZL8leg_initv:00000020 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:399    .text._ZL13steering_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:405    .text._ZL13steering_initv:00000000 _ZL13steering_initv
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:437    .text._ZL13steering_initv:0000000c $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:444    .text._ZL8pid_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:450    .text._ZL8pid_initv:00000000 _ZL8pid_initv
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:616    .text._ZL8pid_initv:00000050 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:633    .text._ZL17limit_switch_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:639    .text._ZL17limit_switch_initv:00000000 _ZL17limit_switch_initv
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:664    .text._ZL17limit_switch_initv:00000014 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:671    .text.__tcf_0:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:677    .text.__tcf_0:00000000 __tcf_0
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:702    .text.__tcf_0:00000010 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:708    .text._ZL10motor_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:714    .text._ZL10motor_initv:00000000 _ZL10motor_initv
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:816    .text._ZL10motor_initv:0000007c $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:828    .text._ZL12encoder_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:834    .text._ZL12encoder_initv:00000000 _ZL12encoder_initv
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:891    .text._ZL12encoder_initv:00000040 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:899    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:905    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1141   .text._Z41__static_initialization_and_destruction_0ii:0000008c $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1335   .rodata._ZTV12Discrete_PID:00000000 _ZTV12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1346   .rodata._ZTV9Angle_PID:00000000 _ZTV9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1152   .text._ZN9Angle_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1159   .text._ZN9Angle_PIDD0Ev:00000000 _ZN9Angle_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1182   .text._ZN12Discrete_PIDD0Ev:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1189   .text._ZN12Discrete_PIDD0Ev:00000000 _ZN12Discrete_PIDD0Ev
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1212   .text._Z9robo_initv:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1219   .text._Z9robo_initv:00000000 _Z9robo_initv
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1254   .text._GLOBAL__sub_I_leg:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1260   .text._GLOBAL__sub_I_leg:00000000 _GLOBAL__sub_I_leg
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1281   .init_array:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1288   .rodata._ZTS13PID_Algorithm:00000000 _ZTS13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1285   .rodata._ZTS13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1295   .rodata._ZTI13PID_Algorithm:00000000 _ZTI13PID_Algorithm
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1292   .rodata._ZTI13PID_Algorithm:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1303   .rodata._ZTS12Discrete_PID:00000000 _ZTS12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1300   .rodata._ZTS12Discrete_PID:00000000 $d
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s 			page 37


C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1310   .rodata._ZTI12Discrete_PID:00000000 _ZTI12Discrete_PID
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1307   .rodata._ZTI12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1319   .rodata._ZTS9Angle_PID:00000000 _ZTS9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1316   .rodata._ZTS9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1326   .rodata._ZTI9Angle_PID:00000000 _ZTI9Angle_PID
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1323   .rodata._ZTI9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1332   .rodata._ZTV12Discrete_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1343   .rodata._ZTV9Angle_PID:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1380   .bss.steering:00000000 steering
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1373   .bss.leg:00000000 leg
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1355   .bss._ZL20motor_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1359   .bss._ZL20motor_configurations:00000000 _ZL20motor_configurations
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1362   .bss._ZL22encoder_configurations:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1366   .bss._ZL22encoder_configurations:00000000 _ZL22encoder_configurations
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1369   .bss.leg:00000000 $d
C:\Users\Prashant\AppData\Local\Temp\ccEYVU5S.s:1376   .bss.steering:00000000 $d
                           .group:00000000 _ZN12Discrete_PIDD5Ev
                           .group:00000000 _ZN9Angle_PIDD5Ev
                           .group:00000000 _ZN8steeringD5Ev

UNDEFINED SYMBOLS
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
htim8
HAL_TIM_Encoder_Start
htim1
htim2
htim3
__aeabi_atexit
__dso_handle
_ZdlPvj
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
