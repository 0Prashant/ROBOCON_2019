ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interrupt.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_d2iz
  20              		.global	__aeabi_i2d
  21              		.global	__aeabi_dmul
  22              		.global	__aeabi_dadd
  23              		.global	__aeabi_d2f
  24              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_GPIO_EXTI_Callback
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	HAL_GPIO_EXTI_Callback:
  33              	.LFB492:
  34              		.file 1 "Core/Src/devs/interrupt.cpp"
   1:Core/Src/devs/interrupt.cpp **** 
   2:Core/Src/devs/interrupt.cpp **** #include "robo_init.h"
   3:Core/Src/devs/interrupt.cpp **** 
   4:Core/Src/devs/interrupt.cpp **** extern leg leg[2];
   5:Core/Src/devs/interrupt.cpp **** extern steering steering;
   6:Core/Src/devs/interrupt.cpp **** 
   7:Core/Src/devs/interrupt.cpp **** extern bool ROBOT_START_FLAG;
   8:Core/Src/devs/interrupt.cpp **** extern bool STEERING_FLAG;
   9:Core/Src/devs/interrupt.cpp **** extern bool FRONT_PROXIMITY_FLAG;
  10:Core/Src/devs/interrupt.cpp **** extern bool BACK_PROXIMITY_FLAG;
  11:Core/Src/devs/interrupt.cpp **** extern bool GEREGE_FLAG;
  12:Core/Src/devs/interrupt.cpp **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  13:Core/Src/devs/interrupt.cpp **** {
  35              		.loc 1 13 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              	.LVL0:
  40 0000 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45              	.LBB16:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 2


  14:Core/Src/devs/interrupt.cpp ****         switch (GPIO_Pin) {
  46              		.loc 1 14 0
  47 0002 B0F5005F 		cmp	r0, #8192
  48 0006 6CD0     		beq	.L3
  49 0008 35D9     		bls	.L9
  50 000a B0F5804F 		cmp	r0, #16384
  51 000e 38D0     		beq	.L6
  52 0010 B0F5004F 		cmp	r0, #32768
  53 0014 34D1     		bne	.L1
  54              	.LVL1:
  55              	.LBB17:
  56              	.LBB18:
  15:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
  16:Core/Src/devs/interrupt.cpp **** 			ROBOT_START_FLAG = true;
  17:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\t !!start_pressed!!\n\n");
  18:Core/Src/devs/interrupt.cpp **** 		}break;
  19:Core/Src/devs/interrupt.cpp **** 
  20:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_15 : {
  21:Core/Src/devs/interrupt.cpp **** 			float leg0_reset_angle = 90*PI/180;
  22:Core/Src/devs/interrupt.cpp ****                         leg[0].reset_angle(leg0_reset_angle);
  57              		.loc 1 22 0
  58 0016 3E4C     		ldr	r4, .L10+24
  59 0018 9FED3E0A 		vldr.32	s0, .L10+28
  60 001c 2046     		mov	r0, r4
  61              	.LVL2:
  62 001e FFF7FEFF 		bl	_ZN3leg11reset_angleEf
  63              	.LVL3:
  64              	.LBB19:
  65              	.LBB20:
  66              		.file 2 "Core/Inc/devs/leg.h"
   1:Core/Inc/devs/leg.h **** #ifndef _LEG_H_
   2:Core/Inc/devs/leg.h **** #define _LEG_H_
   3:Core/Inc/devs/leg.h **** 
   4:Core/Inc/devs/leg.h **** #include "motor.h"
   5:Core/Inc/devs/leg.h **** #include "encoder.h"
   6:Core/Inc/devs/leg.h **** #include "pid.h"
   7:Core/Inc/devs/leg.h **** #include "limit_switch.h"
   8:Core/Inc/devs/leg.h **** #include "defines.h"
   9:Core/Inc/devs/leg.h **** #include "pid_algorithms.h"
  10:Core/Inc/devs/leg.h **** 
  11:Core/Inc/devs/leg.h **** enum Leg_condition{	RAISED, 
  12:Core/Inc/devs/leg.h **** 			FALLEN, 
  13:Core/Inc/devs/leg.h **** 			UNDEFINED};
  14:Core/Inc/devs/leg.h **** 
  15:Core/Inc/devs/leg.h **** class leg
  16:Core/Inc/devs/leg.h **** {
  17:Core/Inc/devs/leg.h **** public:
  18:Core/Inc/devs/leg.h **** 	leg() {}
  19:Core/Inc/devs/leg.h **** 	leg(leg &&) = default;
  20:Core/Inc/devs/leg.h **** 	leg(const leg &) = default;
  21:Core/Inc/devs/leg.h **** 	leg &operator=(leg &&) = default;
  22:Core/Inc/devs/leg.h **** 	leg &operator=(const leg &) = default;
  23:Core/Inc/devs/leg.h **** 	~leg(){}
  24:Core/Inc/devs/leg.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  25:Core/Inc/devs/leg.h **** 		motor__.set_config(motor);
  26:Core/Inc/devs/leg.h **** 		encoder__.set_config(encoder);
  27:Core/Inc/devs/leg.h **** 	}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 3


  28:Core/Inc/devs/leg.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  29:Core/Inc/devs/leg.h **** 		dpid_.set_P(kp);
  30:Core/Inc/devs/leg.h **** 		dpid_.set_I(ki);
  31:Core/Inc/devs/leg.h **** 		dpid_.set_D(kd);
  32:Core/Inc/devs/leg.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  33:Core/Inc/devs/leg.h **** 	}
  34:Core/Inc/devs/leg.h **** 
  35:Core/Inc/devs/leg.h **** 	
  36:Core/Inc/devs/leg.h **** 	void set_omega(float omega);
  37:Core/Inc/devs/leg.h **** 	float ramp(float omega);
  38:Core/Inc/devs/leg.h **** 	void set_gravity_compensator_constant(float kgravity){kg_ = kgravity;}
  39:Core/Inc/devs/leg.h **** 	void reset_angle(float angle_in_radians);
  40:Core/Inc/devs/leg.h **** 	void reset_actual_angle(float angle_in_radians){encoder__.reset_actual_angle(angle_in_radians);}
  41:Core/Inc/devs/leg.h **** 	void calculate_omega();
  42:Core/Inc/devs/leg.h **** 	Leg_condition is_raised();
  43:Core/Inc/devs/leg.h **** 	bool is_raised_without_deadzone();
  44:Core/Inc/devs/leg.h **** 
  45:Core/Inc/devs/leg.h **** 	int get_steps(){return steps;}
  46:Core/Inc/devs/leg.h **** 	float get_omega(void){return encoder__.get_omega();}
  47:Core/Inc/devs/leg.h **** 	float get_angle(void){return encoder__.get_angle();}
  48:Core/Inc/devs/leg.h **** 	float get_actual_angle(void){return encoder__.get_actual_angle();}
  67              		.loc 2 48 0
  68 0022 3C34     		adds	r4, r4, #60
  69 0024 2046     		mov	r0, r4
  70 0026 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
  71              	.LVL4:
  72              	.LBE20:
  73              	.LBE19:
  23:Core/Src/devs/interrupt.cpp **** 			int temp = round(leg[0].get_actual_angle()/ (360*PI/180));
  74              		.loc 1 23 0
  75 002a 10EE100A 		vmov	r0, s0
  76 002e FFF7FEFF 		bl	__aeabi_f2d
  77              	.LVL5:
  78 0032 31A3     		adr	r3, .L10
  79 0034 D3E90023 		ldrd	r2, [r3]
  80 0038 FFF7FEFF 		bl	__aeabi_ddiv
  81              	.LVL6:
  82 003c 41EC100B 		vmov	d0, r0, r1
  83 0040 FFF7FEFF 		bl	round
  84              	.LVL7:
  85 0044 51EC100B 		vmov	r0, r1, d0
  86 0048 FFF7FEFF 		bl	__aeabi_d2iz
  87              	.LVL8:
  24:Core/Src/devs/interrupt.cpp **** 			leg[0].reset_actual_angle((int)(temp)*2*PI + leg0_reset_angle);
  88              		.loc 1 24 0
  89 004c 4000     		lsls	r0, r0, #1
  90              	.LVL9:
  91 004e FFF7FEFF 		bl	__aeabi_i2d
  92              	.LVL10:
  93 0052 2BA3     		adr	r3, .L10+8
  94 0054 D3E90023 		ldrd	r2, [r3]
  95 0058 FFF7FEFF 		bl	__aeabi_dmul
  96              	.LVL11:
  97 005c 2AA3     		adr	r3, .L10+16
  98 005e D3E90023 		ldrd	r2, [r3]
  99 0062 FFF7FEFF 		bl	__aeabi_dadd
 100              	.LVL12:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 4


 101 0066 FFF7FEFF 		bl	__aeabi_d2f
 102              	.LVL13:
 103              	.LBB21:
 104              	.LBB22:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 105              		.loc 2 40 0
 106 006a 00EE100A 		vmov	s0, r0
 107 006e 2046     		mov	r0, r4
 108              	.LVL14:
 109 0070 FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 110              	.LVL15:
 111              	.LBE22:
 112              	.LBE21:
 113              	.LBE18:
  25:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tRobot interrupt0\t %d \t %d\n", leg[0].steps, temp);
  26:Core/Src/devs/interrupt.cpp ****                 } break;
 114              		.loc 1 26 0
 115 0074 04E0     		b	.L1
 116              	.LVL16:
 117              	.L9:
 118              	.LBE17:
  14:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_0 : {
 119              		.loc 1 14 0
 120 0076 0128     		cmp	r0, #1
 121 0078 02D1     		bne	.L1
 122              	.LBB30:
  16:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\t !!start_pressed!!\n\n");
 123              		.loc 1 16 0
 124 007a 274B     		ldr	r3, .L10+32
 125 007c 0122     		movs	r2, #1
 126 007e 1A70     		strb	r2, [r3]
 127              	.LVL17:
 128              	.L1:
 129              	.LBE30:
 130              	.LBE16:
  27:Core/Src/devs/interrupt.cpp **** 
  28:Core/Src/devs/interrupt.cpp ****                 case GPIO_PIN_14: {
  29:Core/Src/devs/interrupt.cpp **** 			float leg1_reset_angle = 90*PI/180;
  30:Core/Src/devs/interrupt.cpp ****                         leg[1].reset_angle(leg1_reset_angle);
  31:Core/Src/devs/interrupt.cpp **** 			int temp = round(leg[1].get_actual_angle() / (360*PI/180));
  32:Core/Src/devs/interrupt.cpp **** 			leg[1].reset_actual_angle((int)(temp)*2*PI + leg1_reset_angle);
  33:Core/Src/devs/interrupt.cpp **** 			// printf("\n\n\t\t\tRobot interrupt1\t %d\n", leg[1].steps);
  34:Core/Src/devs/interrupt.cpp ****                 } break;
  35:Core/Src/devs/interrupt.cpp **** 
  36:Core/Src/devs/interrupt.cpp **** 		case GPIO_PIN_13: {
  37:Core/Src/devs/interrupt.cpp **** 			STEERING_FLAG = true;
  38:Core/Src/devs/interrupt.cpp **** 			steering.reset_angle(0*PI/180);
  39:Core/Src/devs/interrupt.cpp **** 			//  printf("\n\n\t\t\tsteering interrupt \t\n");
  40:Core/Src/devs/interrupt.cpp ****                 } break;
  41:Core/Src/devs/interrupt.cpp **** 	
  42:Core/Src/devs/interrupt.cpp ****         }
  43:Core/Src/devs/interrupt.cpp **** }...
 131              		.loc 1 43 0
 132 0080 10BD     		pop	{r4, pc}
 133              	.LVL18:
 134              	.L6:
 135              	.LBB32:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 5


 136              	.LBB31:
 137              	.LBB23:
  30:Core/Src/devs/interrupt.cpp ****                         leg[1].reset_angle(leg1_reset_angle);
 138              		.loc 1 30 0
 139 0082 264C     		ldr	r4, .L10+36
 140 0084 9FED230A 		vldr.32	s0, .L10+28
 141 0088 2046     		mov	r0, r4
 142              	.LVL19:
 143 008a FFF7FEFF 		bl	_ZN3leg11reset_angleEf
 144              	.LVL20:
 145              	.LBB24:
 146              	.LBB25:
 147              		.loc 2 48 0
 148 008e 3C34     		adds	r4, r4, #60
 149              	.LVL21:
 150 0090 2046     		mov	r0, r4
 151 0092 FFF7FEFF 		bl	_ZN7encoder16get_actual_angleEv
 152              	.LVL22:
 153              	.LBE25:
 154              	.LBE24:
  31:Core/Src/devs/interrupt.cpp **** 			int temp = round(leg[1].get_actual_angle() / (360*PI/180));
 155              		.loc 1 31 0
 156 0096 10EE100A 		vmov	r0, s0
 157 009a FFF7FEFF 		bl	__aeabi_f2d
 158              	.LVL23:
 159 009e 16A3     		adr	r3, .L10
 160 00a0 D3E90023 		ldrd	r2, [r3]
 161 00a4 FFF7FEFF 		bl	__aeabi_ddiv
 162              	.LVL24:
 163 00a8 41EC100B 		vmov	d0, r0, r1
 164 00ac FFF7FEFF 		bl	round
 165              	.LVL25:
 166 00b0 51EC100B 		vmov	r0, r1, d0
 167 00b4 FFF7FEFF 		bl	__aeabi_d2iz
 168              	.LVL26:
  32:Core/Src/devs/interrupt.cpp **** 			leg[1].reset_actual_angle((int)(temp)*2*PI + leg1_reset_angle);
 169              		.loc 1 32 0
 170 00b8 4000     		lsls	r0, r0, #1
 171              	.LVL27:
 172 00ba FFF7FEFF 		bl	__aeabi_i2d
 173              	.LVL28:
 174 00be 10A3     		adr	r3, .L10+8
 175 00c0 D3E90023 		ldrd	r2, [r3]
 176 00c4 FFF7FEFF 		bl	__aeabi_dmul
 177              	.LVL29:
 178 00c8 0FA3     		adr	r3, .L10+16
 179 00ca D3E90023 		ldrd	r2, [r3]
 180 00ce FFF7FEFF 		bl	__aeabi_dadd
 181              	.LVL30:
 182 00d2 FFF7FEFF 		bl	__aeabi_d2f
 183              	.LVL31:
 184              	.LBB26:
 185              	.LBB27:
  40:Core/Inc/devs/leg.h **** 	void calculate_omega();
 186              		.loc 2 40 0
 187 00d6 00EE100A 		vmov	s0, r0
 188 00da 2046     		mov	r0, r4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 6


 189              	.LVL32:
 190 00dc FFF7FEFF 		bl	_ZN7encoder18reset_actual_angleEf
 191              	.LVL33:
 192              	.LBE27:
 193              	.LBE26:
 194              	.LBE23:
  34:Core/Src/devs/interrupt.cpp ****                 } break;
 195              		.loc 1 34 0
 196 00e0 CEE7     		b	.L1
 197              	.LVL34:
 198              	.L3:
  37:Core/Src/devs/interrupt.cpp **** 			STEERING_FLAG = true;
 199              		.loc 1 37 0
 200 00e2 0F4B     		ldr	r3, .L10+40
 201 00e4 0122     		movs	r2, #1
 202 00e6 1A70     		strb	r2, [r3]
 203              	.LVL35:
 204              	.LBB28:
 205              	.LBB29:
 206              		.file 3 "Core/Inc/devs/steering.h"
   1:Core/Inc/devs/steering.h **** /**
   2:Core/Inc/devs/steering.h ****  * steering.h
   3:Core/Inc/devs/steering.h ****  *
   4:Core/Inc/devs/steering.h ****  * \brief Provide control over steering of the horse
   5:Core/Inc/devs/steering.h ****  *
   6:Core/Inc/devs/steering.h ****  * This file is meant as an wrapper to the elements in the encoder. 
   7:Core/Inc/devs/steering.h ****  * It uses the functions of other headers (ie motor.h, encoder.h, 
   8:Core/Inc/devs/steering.h ****  * limit_switch.h and pid.h tocontrol all the functions available 
   9:Core/Inc/devs/steering.h ****  * in the steering.
  10:Core/Inc/devs/steering.h ****  *
  11:Core/Inc/devs/steering.h ****  * \author 	$Author 	: Prashant_Bhatta
  12:Core/Inc/devs/steering.h ****  * \date 	$Date		: 2005/04/14 14:16:20 $
  13:Core/Inc/devs/steering.h ****  * \contact	$Contact	: 073bex425.prashant@pcampus.edu.np
  14:Core/Inc/devs/steering.h ****  *
  15:Core/Inc/devs/steering.h ****  */
  16:Core/Inc/devs/steering.h **** #ifndef _STEERING_H_
  17:Core/Inc/devs/steering.h **** #define _STEERING_H_
  18:Core/Inc/devs/steering.h **** 
  19:Core/Inc/devs/steering.h **** #include "motor.h"
  20:Core/Inc/devs/steering.h **** #include "encoder.h"
  21:Core/Inc/devs/steering.h **** #include "pid.h"
  22:Core/Inc/devs/steering.h **** #include "limit_switch.h"
  23:Core/Inc/devs/steering.h **** 
  24:Core/Inc/devs/steering.h **** class steering
  25:Core/Inc/devs/steering.h **** {
  26:Core/Inc/devs/steering.h **** public:
  27:Core/Inc/devs/steering.h **** 	/// These lines of codes are just for protection of random defination of the objects.
  28:Core/Inc/devs/steering.h **** 	steering(){}
  29:Core/Inc/devs/steering.h **** 	steering(steering &&) = default;
  30:Core/Inc/devs/steering.h **** 	steering(const steering &) = default;
  31:Core/Inc/devs/steering.h **** 	steering &operator=(steering &&) = default;
  32:Core/Inc/devs/steering.h **** 	steering &operator=(const steering &) = default;
  33:Core/Inc/devs/steering.h **** 	~steering(){}
  34:Core/Inc/devs/steering.h **** 
  35:Core/Inc/devs/steering.h **** 	/**
  36:Core/Inc/devs/steering.h **** 	 * \brief This function setups the configurations for the steering
  37:Core/Inc/devs/steering.h **** 	 * \param motor: pointer to motor_config which contains all the 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 7


  38:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor
  39:Core/Inc/devs/steering.h **** 	 * \param encoder: pointer to encoder_config which contains all the 
  40:Core/Inc/devs/steering.h **** 	 * 		configurations for a motor  
  41:Core/Inc/devs/steering.h **** 	 * \return void
  42:Core/Inc/devs/steering.h **** 	 */
  43:Core/Inc/devs/steering.h ****         void set_config(motor_config *motor, encoder_config *encoder) { 
  44:Core/Inc/devs/steering.h **** 		motor__.set_config(motor);
  45:Core/Inc/devs/steering.h **** 		encoder__.set_config(encoder);
  46:Core/Inc/devs/steering.h **** 	}
  47:Core/Inc/devs/steering.h **** 
  48:Core/Inc/devs/steering.h **** 	/**
  49:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for PID algorithm
  50:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for PID
  51:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  52:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  53:Core/Inc/devs/steering.h **** 	 * \return void
  54:Core/Inc/devs/steering.h **** 	 */
  55:Core/Inc/devs/steering.h **** 	void set_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  56:Core/Inc/devs/steering.h **** 		dpid_.set_P(kp);
  57:Core/Inc/devs/steering.h **** 		dpid_.set_I(ki);
  58:Core/Inc/devs/steering.h **** 		dpid_.set_D(kd);
  59:Core/Inc/devs/steering.h **** 		dpid_.set_Limits(upper_limit, lower_limit);
  60:Core/Inc/devs/steering.h **** 	}
  61:Core/Inc/devs/steering.h **** 
  62:Core/Inc/devs/steering.h **** 	/**
  63:Core/Inc/devs/steering.h **** 	 * \brief Sets constants for Angle_PID algorithm
  64:Core/Inc/devs/steering.h **** 	 * \param kp,ki,kd: constants for Anggle_PID
  65:Core/Inc/devs/steering.h **** 	 * \param lower_limit, upper_limit: These are the maximum output a motor 
  66:Core/Inc/devs/steering.h **** 	 * 	   can give with gear reduction(in omegas)
  67:Core/Inc/devs/steering.h **** 	 * \return void
  68:Core/Inc/devs/steering.h **** 	 */
  69:Core/Inc/devs/steering.h **** 	void set_angle_PID_constants(float kp, float ki, float kd, float lower_limit, float upper_limit) {
  70:Core/Inc/devs/steering.h **** 		apid_.set_P(kp);
  71:Core/Inc/devs/steering.h **** 		apid_.set_I(ki);
  72:Core/Inc/devs/steering.h **** 		apid_.set_D(kd);
  73:Core/Inc/devs/steering.h **** 		apid_.set_Limits(upper_limit, lower_limit);
  74:Core/Inc/devs/steering.h **** 	}
  75:Core/Inc/devs/steering.h **** 
  76:Core/Inc/devs/steering.h **** 
  77:Core/Inc/devs/steering.h **** 	/** 
  78:Core/Inc/devs/steering.h **** 	 * \brief sets omega for the steering
  79:Core/Inc/devs/steering.h **** 	 * 
  80:Core/Inc/devs/steering.h **** 	 */
  81:Core/Inc/devs/steering.h **** 	void set_omega(float omega);
  82:Core/Inc/devs/steering.h **** 
  83:Core/Inc/devs/steering.h **** 	/** 
  84:Core/Inc/devs/steering.h **** 	 * \brief sets angle for the steering
  85:Core/Inc/devs/steering.h **** 	 * 
  86:Core/Inc/devs/steering.h **** 	 */
  87:Core/Inc/devs/steering.h **** 	void set_angle(float angle);
  88:Core/Inc/devs/steering.h **** 
  89:Core/Inc/devs/steering.h **** 	/**
  90:Core/Inc/devs/steering.h **** 	 * \brief resets the angle provided by the encoder
  91:Core/Inc/devs/steering.h **** 	 * \param angle_in_radian at which it is to be reset
  92:Core/Inc/devs/steering.h **** 	 * \return void
  93:Core/Inc/devs/steering.h **** 	 */
  94:Core/Inc/devs/steering.h **** 	void reset_angle(float angle_in_radians) {encoder__.reset_angle(angle_in_radians);}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 8


 207              		.loc 3 94 0
 208 00e8 9FED0E0A 		vldr.32	s0, .L10+44
 209 00ec 0E48     		ldr	r0, .L10+48
 210              	.LVL36:
 211 00ee FFF7FEFF 		bl	_ZN7encoder11reset_angleEf
 212              	.LVL37:
 213              	.LBE29:
 214              	.LBE28:
 215              	.LBE31:
 216              	.LBE32:
 217              		.loc 1 43 0
 218 00f2 C5E7     		b	.L1
 219              	.L11:
 220 00f4 AFF30080 		.align	3
 221              	.L10:
 222 00f8 182D4454 		.word	1413754136
 223 00fc FB211940 		.word	1075388923
 224 0100 182D4454 		.word	1413754136
 225 0104 FB210940 		.word	1074340347
 226 0108 00000060 		.word	1610612736
 227 010c FB21F93F 		.word	1073291771
 228 0110 00000000 		.word	leg
 229 0114 DB0FC93F 		.word	1070141403
 230 0118 00000000 		.word	ROBOT_START_FLAG
 231 011c 58000000 		.word	leg+88
 232 0120 00000000 		.word	STEERING_FLAG
 233 0124 00000000 		.word	0
 234 0128 0C000000 		.word	steering+12
 235              		.cfi_endproc
 236              	.LFE492:
 238              		.text
 239              	.Letext0:
 240              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 241              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 242              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 243              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 244              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 245              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 246              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 247              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 248              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 249              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 250              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 251              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 252              		.file 16 "Core/Inc/periphs/tim.h"
 253              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 254              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 255              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 256              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 257              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 258              		.file 22 "Core/Inc/devs/motor.h"
 259              		.file 23 "Core/Inc/devs/encoder.h"
 260              		.file 24 "Core/Inc/utils/pid_algorithms.h"
 261              		.file 25 "Core/Inc/devs/limit_switch.h"
 262              		.file 26 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.cpp
C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s:32     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Prashant\AppData\Local\Temp\ccIt25ja.s:222    .text.HAL_GPIO_EXTI_Callback:000000f8 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
_ZN3leg11reset_angleEf
_ZN7encoder16get_actual_angleEv
round
_ZN7encoder18reset_actual_angleEf
_ZN7encoder11reset_angleEf
leg
ROBOT_START_FLAG
STEERING_FLAG
steering
