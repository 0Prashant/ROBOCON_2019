ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interrupt.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_GPIO_EXTI_Callback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LFB126:
  27              		.file 1 "Core/Src/interrupt.c"
   1:Core/Src/interrupt.c **** /*1-27-2019*/
   2:Core/Src/interrupt.c **** 
   3:Core/Src/interrupt.c **** #include "interrupt.h"
   4:Core/Src/interrupt.c **** #include "robo_init.h"
   5:Core/Src/interrupt.c **** 
   6:Core/Src/interrupt.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_PIN)
   7:Core/Src/interrupt.c **** {
  28              		.loc 1 7 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
   8:Core/Src/interrupt.c ****         if(GPIO_PIN == blnc_motor_chAPin)
  33              		.loc 1 8 0
  34 0000 B0F5007F 		cmp	r0, #512
  35 0004 00D0     		beq	.L8
  36 0006 7047     		bx	lr
  37              	.L8:
   7:Core/Src/interrupt.c ****         if(GPIO_PIN == blnc_motor_chAPin)
  38              		.loc 1 7 0
  39 0008 08B5     		push	{r3, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 3, -8
  43              		.cfi_offset 14, -4
   9:Core/Src/interrupt.c ****         {
  10:Core/Src/interrupt.c ****                 if(HAL_GPIO_ReadPin(blnc_motor_chBPort, blnc_motor_chBPin) == 0)
  44              		.loc 1 10 0
  45 000a 4FF40071 		mov	r1, #512
  46 000e 0948     		ldr	r0, .L10
  47              	.LVL1:
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s 			page 2


  48 0010 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  49              	.LVL2:
  50 0014 30B1     		cbz	r0, .L9
  11:Core/Src/interrupt.c ****                 {
  12:Core/Src/interrupt.c ****                         balance_motor.encoder->count--;
  13:Core/Src/interrupt.c ****                 }
  14:Core/Src/interrupt.c ****                 else
  15:Core/Src/interrupt.c ****                 {
  16:Core/Src/interrupt.c ****                         balance_motor.encoder->count++;
  51              		.loc 1 16 0
  52 0016 084B     		ldr	r3, .L10+4
  53 0018 1A6B     		ldr	r2, [r3, #48]
  54 001a B2F90630 		ldrsh	r3, [r2, #6]
  55 001e 0133     		adds	r3, r3, #1
  56 0020 D380     		strh	r3, [r2, #6]	@ movhi
  57              	.L1:
  17:Core/Src/interrupt.c ****                 }
  18:Core/Src/interrupt.c ****         }
  19:Core/Src/interrupt.c **** //         if (GPIO_PIN == int_arr[0].int_pin)
  20:Core/Src/interrupt.c **** //         {
  21:Core/Src/interrupt.c **** //                 printf("Motor_1 \n");
  22:Core/Src/interrupt.c **** //                 if (int_arr[0].intState == STATE_B)
  23:Core/Src/interrupt.c **** //                 {
  24:Core/Src/interrupt.c **** //                         int_arr[0].intState = STATE_A;
  25:Core/Src/interrupt.c **** //                 }
  26:Core/Src/interrupt.c **** //                 else if (int_arr[0].intState == STATE_HOME) {
  27:Core/Src/interrupt.c **** //                         int_arr[0].fhome_pos = 1;
  28:Core/Src/interrupt.c **** //                 }
  29:Core/Src/interrupt.c **** //         }
  30:Core/Src/interrupt.c **** 
  31:Core/Src/interrupt.c **** //         if (GPIO_PIN == int_arr[1].int_pin)
  32:Core/Src/interrupt.c **** //         {
  33:Core/Src/interrupt.c **** //                 printf("Motor_2 \n");
  34:Core/Src/interrupt.c **** //                 if (int_arr[1].intState == STATE_B)
  35:Core/Src/interrupt.c **** //                 {
  36:Core/Src/interrupt.c **** //                         int_arr[1].intState = STATE_A;
  37:Core/Src/interrupt.c **** //                 }
  38:Core/Src/interrupt.c **** //                 else if (int_arr[1].intState == STATE_HOME) {
  39:Core/Src/interrupt.c **** //                         int_arr[1].fhome_pos = 1;
  40:Core/Src/interrupt.c **** //                 }
  41:Core/Src/interrupt.c **** //         }
  42:Core/Src/interrupt.c **** 
  43:Core/Src/interrupt.c **** //         if (GPIO_PIN == int_arr[2].int_pin)
  44:Core/Src/interrupt.c **** //         {
  45:Core/Src/interrupt.c **** //                 printf("Motor_3 \n");
  46:Core/Src/interrupt.c **** //                 if (int_arr[2].intState == STATE_B)
  47:Core/Src/interrupt.c **** //                 {
  48:Core/Src/interrupt.c **** //                         int_arr[2].intState = STATE_A;
  49:Core/Src/interrupt.c **** //                 }
  50:Core/Src/interrupt.c **** //                 else if (int_arr[2].intState == STATE_HOME) {
  51:Core/Src/interrupt.c **** //                         int_arr[2].fhome_pos = 1;
  52:Core/Src/interrupt.c **** //                 }
  53:Core/Src/interrupt.c **** //         }
  54:Core/Src/interrupt.c **** 
  55:Core/Src/interrupt.c **** //         if (GPIO_PIN == int_arr[3].int_pin)
  56:Core/Src/interrupt.c **** //         {
  57:Core/Src/interrupt.c **** //                 printf("Motor_4 \n");
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s 			page 3


  58:Core/Src/interrupt.c **** //                 if (int_arr[3].intState == STATE_B)
  59:Core/Src/interrupt.c **** //                 {
  60:Core/Src/interrupt.c **** //                         int_arr[3].intState = STATE_A;
  61:Core/Src/interrupt.c **** //                 }
  62:Core/Src/interrupt.c **** //                 else if (int_arr[3].intState == STATE_HOME) {
  63:Core/Src/interrupt.c **** //                         int_arr[3].fhome_pos = 1;
  64:Core/Src/interrupt.c **** //                 }
  65:Core/Src/interrupt.c **** //         }
  66:Core/Src/interrupt.c **** 
  67:Core/Src/interrupt.c **** //     if (GPIO_PIN == blnc_int_arr[0].int_pin)
  68:Core/Src/interrupt.c **** //     {
  69:Core/Src/interrupt.c **** //         if (blnc_int_arr[0].intState == STATE_B)
  70:Core/Src/interrupt.c **** //         {
  71:Core/Src/interrupt.c **** //                 int_arr[0].intState = STATE_A;
  72:Core/Src/interrupt.c **** //         }    
  73:Core/Src/interrupt.c **** //         printf("A\n"); 
  74:Core/Src/interrupt.c **** //     }
  75:Core/Src/interrupt.c ****     
  76:Core/Src/interrupt.c **** //     if (GPIO_PIN == blnc_int_arr[1].int_pin)
  77:Core/Src/interrupt.c **** //     {   
  78:Core/Src/interrupt.c **** //         if (blnc_int_arr[1].intState == STATE_B)
  79:Core/Src/interrupt.c **** //         {
  80:Core/Src/interrupt.c **** //                 int_arr[1].intState = STATE_A;
  81:Core/Src/interrupt.c **** //         }
  82:Core/Src/interrupt.c **** //         printf("B\n");
  83:Core/Src/interrupt.c **** //     }
  84:Core/Src/interrupt.c ****     
  85:Core/Src/interrupt.c **** //     if (GPIO_PIN == blnc_int_arr[2].int_pin)
  86:Core/Src/interrupt.c **** //     {   
  87:Core/Src/interrupt.c **** //         if (blnc_int_arr[2].intState == STATE_B)
  88:Core/Src/interrupt.c **** //         {
  89:Core/Src/interrupt.c **** //                 int_arr[2].intState = STATE_A;
  90:Core/Src/interrupt.c **** //         }    
  91:Core/Src/interrupt.c **** //         blnc_int_arr[2].fhome_pos = 1;
  92:Core/Src/interrupt.c **** //         printf("C\n");
  93:Core/Src/interrupt.c **** //     }
  94:Core/Src/interrupt.c ****     
  95:Core/Src/interrupt.c **** //     if (GPIO_PIN == blnc_int_arr[3].int_pin)
  96:Core/Src/interrupt.c **** //     {
  97:Core/Src/interrupt.c **** //         if (blnc_int_arr[3].intState == STATE_B)
  98:Core/Src/interrupt.c **** //         {
  99:Core/Src/interrupt.c **** //                 int_arr[3].intState = STATE_A;
 100:Core/Src/interrupt.c **** //         }    
 101:Core/Src/interrupt.c **** //         //printf("D\n");
 102:Core/Src/interrupt.c **** //     }
 103:Core/Src/interrupt.c ****      
 104:Core/Src/interrupt.c **** }
  58              		.loc 1 104 0
  59 0022 08BD     		pop	{r3, pc}
  60              	.L9:
  12:Core/Src/interrupt.c ****                 }
  61              		.loc 1 12 0
  62 0024 044B     		ldr	r3, .L10+4
  63 0026 1A6B     		ldr	r2, [r3, #48]
  64 0028 B2F90630 		ldrsh	r3, [r2, #6]
  65 002c 013B     		subs	r3, r3, #1
  66 002e D380     		strh	r3, [r2, #6]	@ movhi
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s 			page 4


  67 0030 F7E7     		b	.L1
  68              	.L11:
  69 0032 00BF     		.align	2
  70              	.L10:
  71 0034 000C0240 		.word	1073875968
  72 0038 00000000 		.word	balance_motor
  73              		.cfi_endproc
  74              	.LFE126:
  76              		.text
  77              	.Letext0:
  78              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
  79              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
  80              		.file 4 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core_cm4.h"
  81              		.file 5 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/STM32F4xx/Inclu
  82              		.file 6 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/STM32F4xx/Inclu
  83              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
  84              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
  85              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
  86              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
  87              		.file 11 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/Inc/stm32
  88              		.file 12 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/Inc/stm32
  89              		.file 13 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/Inc/stm32
  90              		.file 14 "Core/Inc/interrupt.h"
  91              		.file 15 "Core/Inc\\periphs/tim.h"
  92              		.file 16 "Core/Inc/feed_forward.h"
  93              		.file 17 "Core/Inc/pneumatic.h"
  94              		.file 18 "Core/Inc/encoder.h"
  95              		.file 19 "Core/Inc/motor.h"
  96              		.file 20 "Core/Inc/pid.h"
  97              		.file 21 "Core/Inc/fsm.h"
  98              		.file 22 "Core/Inc/robo_init.h"
  99              		.file 23 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/Inc/stm32
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.c
C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s:18     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Rishav\AppData\Local\Temp\ccYO19cQ.s:71     .text.HAL_GPIO_EXTI_Callback:00000034 $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
balance_motor
