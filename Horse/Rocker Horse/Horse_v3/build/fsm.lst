ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fsm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.startFSM,"ax",%progbits
  18              		.align	1
  19              		.global	startFSM
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	startFSM:
  26              	.LFB126:
  27              		.file 1 "Core/Src/fsm.c"
   1:Core/Src/fsm.c **** /*27-1-2019*/
   2:Core/Src/fsm.c **** // 238.34
   3:Core/Src/fsm.c **** 
   4:Core/Src/fsm.c **** #include "fsm.h"
   5:Core/Src/fsm.c **** #include "fsm_tasks.h"
   6:Core/Src/fsm.c **** 
   7:Core/Src/fsm.c **** void startFSM(struct fsmStr *sfsm, enum FSM_States *phase)
   8:Core/Src/fsm.c **** {
  28              		.loc 1 8 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 0546     		mov	r5, r0
  41 0004 0C46     		mov	r4, r1
   9:Core/Src/fsm.c ****         switch (*phase)
  42              		.loc 1 9 0
  43 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  44 0008 042B     		cmp	r3, #4
  45 000a 09D8     		bhi	.L1
  46 000c DFE803F0 		tbb	[pc, r3]
  47              	.L4:
  48 0010 03       		.byte	(.L3-.L4)/2
  49 0011 11       		.byte	(.L5-.L4)/2
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 2


  50 0012 32       		.byte	(.L6-.L4)/2
  51 0013 53       		.byte	(.L7-.L4)/2
  52 0014 75       		.byte	(.L8-.L4)/2
  53 0015 00       		.p2align 1
  54              	.L3:
  10:Core/Src/fsm.c ****         {
  11:Core/Src/fsm.c ****         case HOME_POSITION:
  12:Core/Src/fsm.c ****                 homePositionChores(sfsm);
  55              		.loc 1 12 0
  56 0016 FFF7FEFF 		bl	homePositionChores
  57              	.LVL1:
  13:Core/Src/fsm.c ****                 if (checkHomePosition())
  58              		.loc 1 13 0
  59 001a FFF7FEFF 		bl	checkHomePosition
  60              	.LVL2:
  61 001e 00B9     		cbnz	r0, .L10
  62              	.L1:
  14:Core/Src/fsm.c ****                 {
  15:Core/Src/fsm.c ****                         printf("PHASE_1\n");
  16:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
  17:Core/Src/fsm.c **** 
  18:Core/Src/fsm.c ****                         // *phase = PHASE_1;
  19:Core/Src/fsm.c ****                 }
  20:Core/Src/fsm.c ****                 break;
  21:Core/Src/fsm.c **** 
  22:Core/Src/fsm.c ****         case PHASE_1:
  23:Core/Src/fsm.c **** 
  24:Core/Src/fsm.c ****                 phaseOneChores(sfsm);
  25:Core/Src/fsm.c ****                 if (checkAngle(0))
  26:Core/Src/fsm.c ****                 {
  27:Core/Src/fsm.c ****                         printf("PHASE_2\n");
  28:Core/Src/fsm.c **** 
  29:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[0], RESET_PNEU);
  30:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[1], SET_PNEU);
  31:Core/Src/fsm.c ****                         *phase = PHASE_2;
  32:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
  33:Core/Src/fsm.c ****                         motor_arr[0].encoder->last_count = motor_arr[0].encoder->htim->Instance->CN
  34:Core/Src/fsm.c ****                 }
  35:Core/Src/fsm.c ****                 break;
  36:Core/Src/fsm.c **** 
  37:Core/Src/fsm.c ****         case PHASE_2:
  38:Core/Src/fsm.c **** 
  39:Core/Src/fsm.c ****                 phaseTwoChores(sfsm);
  40:Core/Src/fsm.c ****                 if (checkAngle(1))
  41:Core/Src/fsm.c ****                 {
  42:Core/Src/fsm.c ****                         printf("PHASE_3\n");
  43:Core/Src/fsm.c **** 
  44:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[1], RESET_PNEU);
  45:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[2], SET_PNEU);
  46:Core/Src/fsm.c ****                         
  47:Core/Src/fsm.c ****                         *phase = PHASE_3;
  48:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
  49:Core/Src/fsm.c ****                         motor_arr[1].encoder->last_count = motor_arr[1].encoder->htim->Instance->CN
  50:Core/Src/fsm.c ****                 }
  51:Core/Src/fsm.c ****                 break;
  52:Core/Src/fsm.c **** 
  53:Core/Src/fsm.c ****         case PHASE_3:
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 3


  54:Core/Src/fsm.c **** 
  55:Core/Src/fsm.c ****                 phaseThreeChores(sfsm);
  56:Core/Src/fsm.c ****                 if (checkAngle(2))
  57:Core/Src/fsm.c ****                 {
  58:Core/Src/fsm.c ****                         printf("PHASE_4\n");
  59:Core/Src/fsm.c **** 
  60:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[2], RESET_PNEU);
  61:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[3], SET_PNEU);
  62:Core/Src/fsm.c ****                         *phase = PHASE_4;
  63:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
  64:Core/Src/fsm.c ****                         motor_arr[2].encoder->last_count = motor_arr[2].encoder->htim->Instance->CN
  65:Core/Src/fsm.c ****                 }
  66:Core/Src/fsm.c ****                 break;
  67:Core/Src/fsm.c **** 
  68:Core/Src/fsm.c ****         case PHASE_4:
  69:Core/Src/fsm.c **** 
  70:Core/Src/fsm.c ****                 phaseFourChores(sfsm);
  71:Core/Src/fsm.c ****                 if (checkAngle(3))
  72:Core/Src/fsm.c ****                 {
  73:Core/Src/fsm.c ****                         printf("PHASE_1\n");
  74:Core/Src/fsm.c **** 
  75:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[3], RESET_PNEU);
  76:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[0], SET_PNEU);
  77:Core/Src/fsm.c ****                         *phase = PHASE_1;
  78:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
  79:Core/Src/fsm.c ****                         
  80:Core/Src/fsm.c ****                         motor_arr[3].encoder->last_count = motor_arr[3].encoder->htim->Instance->CN
  81:Core/Src/fsm.c ****                 }
  82:Core/Src/fsm.c ****                 break;
  83:Core/Src/fsm.c ****         }
  84:Core/Src/fsm.c **** }
  63              		.loc 1 84 0
  64 0020 70BD     		pop	{r4, r5, r6, pc}
  65              	.LVL3:
  66              	.L10:
  15:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
  67              		.loc 1 15 0
  68 0022 4748     		ldr	r0, .L11
  69 0024 FFF7FEFF 		bl	puts
  70              	.LVL4:
  16:Core/Src/fsm.c **** 
  71              		.loc 1 16 0
  72 0028 2146     		mov	r1, r4
  73 002a 2846     		mov	r0, r5
  74 002c FFF7FEFF 		bl	stateReset
  75              	.LVL5:
  76 0030 F6E7     		b	.L1
  77              	.LVL6:
  78              	.L5:
  24:Core/Src/fsm.c ****                 if (checkAngle(0))
  79              		.loc 1 24 0
  80 0032 FFF7FEFF 		bl	phaseOneChores
  81              	.LVL7:
  25:Core/Src/fsm.c ****                 {
  82              		.loc 1 25 0
  83 0036 0020     		movs	r0, #0
  84 0038 FFF7FEFF 		bl	checkAngle
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 4


  85              	.LVL8:
  86 003c 0028     		cmp	r0, #0
  87 003e EFD0     		beq	.L1
  27:Core/Src/fsm.c **** 
  88              		.loc 1 27 0
  89 0040 4048     		ldr	r0, .L11+4
  90 0042 FFF7FEFF 		bl	puts
  91              	.LVL9:
  29:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[1], SET_PNEU);
  92              		.loc 1 29 0
  93 0046 404E     		ldr	r6, .L11+8
  94 0048 0121     		movs	r1, #1
  95 004a 3046     		mov	r0, r6
  96 004c FFF7FEFF 		bl	setPneumatic
  97              	.LVL10:
  30:Core/Src/fsm.c ****                         *phase = PHASE_2;
  98              		.loc 1 30 0
  99 0050 0021     		movs	r1, #0
 100 0052 06F10800 		add	r0, r6, #8
 101 0056 FFF7FEFF 		bl	setPneumatic
 102              	.LVL11:
  31:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
 103              		.loc 1 31 0
 104 005a 0223     		movs	r3, #2
 105 005c 2370     		strb	r3, [r4]
  32:Core/Src/fsm.c ****                         motor_arr[0].encoder->last_count = motor_arr[0].encoder->htim->Instance->CN
 106              		.loc 1 32 0
 107 005e 2146     		mov	r1, r4
 108 0060 2846     		mov	r0, r5
 109 0062 FFF7FEFF 		bl	stateReset
 110              	.LVL12:
  33:Core/Src/fsm.c ****                 }
 111              		.loc 1 33 0
 112 0066 394B     		ldr	r3, .L11+12
 113 0068 1B6B     		ldr	r3, [r3, #48]
 114 006a 9A68     		ldr	r2, [r3, #8]
 115 006c 1268     		ldr	r2, [r2]
 116 006e 526A     		ldr	r2, [r2, #36]
 117 0070 9A80     		strh	r2, [r3, #4]	@ movhi
 118 0072 D5E7     		b	.L1
 119              	.LVL13:
 120              	.L6:
  39:Core/Src/fsm.c ****                 if (checkAngle(1))
 121              		.loc 1 39 0
 122 0074 FFF7FEFF 		bl	phaseTwoChores
 123              	.LVL14:
  40:Core/Src/fsm.c ****                 {
 124              		.loc 1 40 0
 125 0078 0120     		movs	r0, #1
 126 007a FFF7FEFF 		bl	checkAngle
 127              	.LVL15:
 128 007e 0028     		cmp	r0, #0
 129 0080 CED0     		beq	.L1
  42:Core/Src/fsm.c **** 
 130              		.loc 1 42 0
 131 0082 3348     		ldr	r0, .L11+16
 132 0084 FFF7FEFF 		bl	puts
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 5


 133              	.LVL16:
  44:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[2], SET_PNEU);
 134              		.loc 1 44 0
 135 0088 324E     		ldr	r6, .L11+20
 136 008a 0121     		movs	r1, #1
 137 008c 3046     		mov	r0, r6
 138 008e FFF7FEFF 		bl	setPneumatic
 139              	.LVL17:
  45:Core/Src/fsm.c ****                         
 140              		.loc 1 45 0
 141 0092 0021     		movs	r1, #0
 142 0094 06F10800 		add	r0, r6, #8
 143 0098 FFF7FEFF 		bl	setPneumatic
 144              	.LVL18:
  47:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
 145              		.loc 1 47 0
 146 009c 0323     		movs	r3, #3
 147 009e 2370     		strb	r3, [r4]
  48:Core/Src/fsm.c ****                         motor_arr[1].encoder->last_count = motor_arr[1].encoder->htim->Instance->CN
 148              		.loc 1 48 0
 149 00a0 2146     		mov	r1, r4
 150 00a2 2846     		mov	r0, r5
 151 00a4 FFF7FEFF 		bl	stateReset
 152              	.LVL19:
  49:Core/Src/fsm.c ****                 }
 153              		.loc 1 49 0
 154 00a8 284B     		ldr	r3, .L11+12
 155 00aa 5B6E     		ldr	r3, [r3, #100]
 156 00ac 9A68     		ldr	r2, [r3, #8]
 157 00ae 1268     		ldr	r2, [r2]
 158 00b0 526A     		ldr	r2, [r2, #36]
 159 00b2 9A80     		strh	r2, [r3, #4]	@ movhi
 160 00b4 B4E7     		b	.L1
 161              	.LVL20:
 162              	.L7:
  55:Core/Src/fsm.c ****                 if (checkAngle(2))
 163              		.loc 1 55 0
 164 00b6 FFF7FEFF 		bl	phaseThreeChores
 165              	.LVL21:
  56:Core/Src/fsm.c ****                 {
 166              		.loc 1 56 0
 167 00ba 0220     		movs	r0, #2
 168 00bc FFF7FEFF 		bl	checkAngle
 169              	.LVL22:
 170 00c0 0028     		cmp	r0, #0
 171 00c2 ADD0     		beq	.L1
  58:Core/Src/fsm.c **** 
 172              		.loc 1 58 0
 173 00c4 2448     		ldr	r0, .L11+24
 174 00c6 FFF7FEFF 		bl	puts
 175              	.LVL23:
  60:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[3], SET_PNEU);
 176              		.loc 1 60 0
 177 00ca 244E     		ldr	r6, .L11+28
 178 00cc 0121     		movs	r1, #1
 179 00ce 3046     		mov	r0, r6
 180 00d0 FFF7FEFF 		bl	setPneumatic
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 6


 181              	.LVL24:
  61:Core/Src/fsm.c ****                         *phase = PHASE_4;
 182              		.loc 1 61 0
 183 00d4 0021     		movs	r1, #0
 184 00d6 06F10800 		add	r0, r6, #8
 185 00da FFF7FEFF 		bl	setPneumatic
 186              	.LVL25:
  62:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
 187              		.loc 1 62 0
 188 00de 0423     		movs	r3, #4
 189 00e0 2370     		strb	r3, [r4]
  63:Core/Src/fsm.c ****                         motor_arr[2].encoder->last_count = motor_arr[2].encoder->htim->Instance->CN
 190              		.loc 1 63 0
 191 00e2 2146     		mov	r1, r4
 192 00e4 2846     		mov	r0, r5
 193 00e6 FFF7FEFF 		bl	stateReset
 194              	.LVL26:
  64:Core/Src/fsm.c ****                 }
 195              		.loc 1 64 0
 196 00ea 184B     		ldr	r3, .L11+12
 197 00ec D3F89830 		ldr	r3, [r3, #152]
 198 00f0 9A68     		ldr	r2, [r3, #8]
 199 00f2 1268     		ldr	r2, [r2]
 200 00f4 526A     		ldr	r2, [r2, #36]
 201 00f6 9A80     		strh	r2, [r3, #4]	@ movhi
 202 00f8 92E7     		b	.L1
 203              	.LVL27:
 204              	.L8:
  70:Core/Src/fsm.c ****                 if (checkAngle(3))
 205              		.loc 1 70 0
 206 00fa FFF7FEFF 		bl	phaseFourChores
 207              	.LVL28:
  71:Core/Src/fsm.c ****                 {
 208              		.loc 1 71 0
 209 00fe 0320     		movs	r0, #3
 210 0100 FFF7FEFF 		bl	checkAngle
 211              	.LVL29:
 212 0104 0028     		cmp	r0, #0
 213 0106 8BD0     		beq	.L1
  73:Core/Src/fsm.c **** 
 214              		.loc 1 73 0
 215 0108 0D48     		ldr	r0, .L11
 216 010a FFF7FEFF 		bl	puts
 217              	.LVL30:
  75:Core/Src/fsm.c ****                         setPneumatic(&pneu_arr[0], SET_PNEU);
 218              		.loc 1 75 0
 219 010e 144E     		ldr	r6, .L11+32
 220 0110 0121     		movs	r1, #1
 221 0112 3046     		mov	r0, r6
 222 0114 FFF7FEFF 		bl	setPneumatic
 223              	.LVL31:
  76:Core/Src/fsm.c ****                         *phase = PHASE_1;
 224              		.loc 1 76 0
 225 0118 0021     		movs	r1, #0
 226 011a A6F11800 		sub	r0, r6, #24
 227 011e FFF7FEFF 		bl	setPneumatic
 228              	.LVL32:
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 7


  77:Core/Src/fsm.c ****                         stateReset(sfsm, phase);
 229              		.loc 1 77 0
 230 0122 0123     		movs	r3, #1
 231 0124 2370     		strb	r3, [r4]
  78:Core/Src/fsm.c ****                         
 232              		.loc 1 78 0
 233 0126 2146     		mov	r1, r4
 234 0128 2846     		mov	r0, r5
 235 012a FFF7FEFF 		bl	stateReset
 236              	.LVL33:
  80:Core/Src/fsm.c ****                 }
 237              		.loc 1 80 0
 238 012e 074B     		ldr	r3, .L11+12
 239 0130 D3F8CC30 		ldr	r3, [r3, #204]
 240 0134 9A68     		ldr	r2, [r3, #8]
 241 0136 1268     		ldr	r2, [r2]
 242 0138 526A     		ldr	r2, [r2, #36]
 243 013a 9A80     		strh	r2, [r3, #4]	@ movhi
 244              		.loc 1 84 0
 245 013c 70E7     		b	.L1
 246              	.L12:
 247 013e 00BF     		.align	2
 248              	.L11:
 249 0140 00000000 		.word	.LC0
 250 0144 08000000 		.word	.LC1
 251 0148 00000000 		.word	pneu_arr
 252 014c 00000000 		.word	motor_arr
 253 0150 10000000 		.word	.LC2
 254 0154 08000000 		.word	pneu_arr+8
 255 0158 18000000 		.word	.LC3
 256 015c 10000000 		.word	pneu_arr+16
 257 0160 18000000 		.word	pneu_arr+24
 258              		.cfi_endproc
 259              	.LFE126:
 261              		.section	.rodata.startFSM.str1.4,"aMS",%progbits,1
 262              		.align	2
 263              	.LC0:
 264 0000 50484153 		.ascii	"PHASE_1\000"
 264      455F3100 
 265              	.LC1:
 266 0008 50484153 		.ascii	"PHASE_2\000"
 266      455F3200 
 267              	.LC2:
 268 0010 50484153 		.ascii	"PHASE_3\000"
 268      455F3300 
 269              	.LC3:
 270 0018 50484153 		.ascii	"PHASE_4\000"
 270      455F3400 
 271              		.text
 272              	.Letext0:
 273              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 274              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 275              		.file 4 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core_cm4.h"
 276              		.file 5 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/STM32F4xx/Inclu
 277              		.file 6 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/STM32F4xx/Inclu
 278              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 279              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 8


 280              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 281              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 282              		.file 11 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/Inc/stm32
 283              		.file 12 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/Inc/stm32
 284              		.file 13 "C:/Users/Rishav/Documents/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Driver/Inc/stm32
 285              		.file 14 "Core/Inc\\periphs/tim.h"
 286              		.file 15 "Core/Inc/feed_forward.h"
 287              		.file 16 "Core/Inc/pneumatic.h"
 288              		.file 17 "Core/Inc/interrupt.h"
 289              		.file 18 "Core/Inc/encoder.h"
 290              		.file 19 "Core/Inc/motor.h"
 291              		.file 20 "Core/Inc/pid.h"
 292              		.file 21 "Core/Inc/robo_init.h"
 293              		.file 22 "Core/Inc/fsm.h"
 294              		.file 23 "Core/Inc/fsm_tasks.h"
 295              		.file 24 "Core/Inc/check.h"
 296              		.file 25 "<built-in>"
ARM GAS  C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 fsm.c
C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s:18     .text.startFSM:00000000 $t
C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s:25     .text.startFSM:00000000 startFSM
C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s:48     .text.startFSM:00000010 $d
C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s:249    .text.startFSM:00000140 $d
C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s:262    .rodata.startFSM.str1.4:00000000 $d
C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s:53     .text.startFSM:00000015 $d
C:\Users\Rishav\AppData\Local\Temp\ccTTm72h.s:53     .text.startFSM:00000016 $t

UNDEFINED SYMBOLS
homePositionChores
checkHomePosition
puts
stateReset
phaseOneChores
checkAngle
setPneumatic
phaseTwoChores
phaseThreeChores
phaseFourChores
pneu_arr
motor_arr
