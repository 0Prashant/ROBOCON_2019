<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_mat">
<title>Mat Class Reference</title>
<indexterm><primary>Mat</primary></indexterm>
<para>
<computeroutput>#include &lt;mat.h&gt;</computeroutput>
</para>
Collaboration diagram for Mat:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_mat_1a7205342eec3270c1aa954f35d8af27c7">Mat</link> ()</para>
</listitem>
            <listitem><para>template&lt;size_t M, size_t N&gt; </para><para><link linkend="_class_mat_1af844a885aedf39d90ad27b2f34333791">Mat</link> (const float(&amp;mat)[M][N])</para>
</listitem>
            <listitem><para><link linkend="_class_mat_1a591f4755584ae81e04f14e8f780a05f8">Mat</link> (uint8_t <link linkend="_class_mat_1a5b965c2e37939da2aea0af686209655c">rows</link>, uint8_t columns)</para>
</listitem>
            <listitem><para><link linkend="_class_mat_1a560a2b152f0b4c7389058c23668da819">Mat</link> (<link linkend="_class_mat">Mat</link> &amp;&amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> &amp; <link linkend="_class_mat_1aa0e4a30b4d5a71e6c3cc780fabeca136">operator=</link> (<link linkend="_class_mat">Mat</link> &amp;&amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_class_mat_1a87836525bb8e60bda57d246b7370b97e">~Mat</link> ()</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_mat_1a5b965c2e37939da2aea0af686209655c">rows</link> () const</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_mat_1a88332d9cd088208e24bea1f10651d1e7">cols</link> () const</para>
</listitem>
            <listitem><para>float &amp; <link linkend="_class_mat_1a5f4b8f7e3c55a1caf7161c11ec2a2465">at</link> (uint8_t i, uint8_t j)</para>
</listitem>
            <listitem><para><link linkend="_class_mat_1a1e30e252a1e556ac5e131edac7b08a23">Mat</link> (const <link linkend="_class_mat">Mat</link> &amp;m)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> &amp; <link linkend="_class_mat_1ae66f73e282cd9134c4677b33f964c575">operator=</link> (const <link linkend="_class_mat">Mat</link> &amp;m)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> &amp; <link linkend="_class_mat_1a649fa81760478538ff4db14b9572fd81">operator+=</link> (const <link linkend="_class_mat">Mat</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> &amp; <link linkend="_class_mat_1a2bb1e2bbfba19148a87b67288ed7fc91">operator-=</link> (const <link linkend="_class_mat">Mat</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> &amp; <link linkend="_class_mat_1aaf9946bb579ab98e5f1b3c554da11cc9">operator *=</link> (const <link linkend="_class_mat">Mat</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> &amp; <link linkend="_class_mat_1a8f508e70094f29bf8bd428e3d41013e8">operator *=</link> (const <link linkend="_class_vec3">Vec3</link>&lt; float &gt; &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1a03d3322fef7fcc6d52fe141171c5fa04">mult</link> (const <link linkend="_class_mat">Mat</link> &amp;m)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1a1de36bf60c84341c1f94494a4d42e5aa">mult_EW</link> (float num)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1a55e6cc33fc65042a4cff351fe59ae476">transpose</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1aa2864c30e68caf29f400bb98295aa6a3">trans</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_mat_1abadfedd9dc62cb060771a03ac40c7340">fill</link> (float num)</para>
</listitem>
            <listitem><para>template&lt;size_t M, size_t N&gt; </para><para>void <link linkend="_class_mat_1af95f54284a8d4937918dadb347e76a13">fill</link> (const float(&amp;mat)[M][N])</para>
</listitem>
            <listitem><para>void <link linkend="_class_mat_1ae5b6c8fc154b2ac9707c5312a94215f9">add_Rows</link> (uint8_t r)</para>
</listitem>
            <listitem><para>void <link linkend="_class_mat_1a3fc332affd01fd294aa98550b88c819d">add_Cols</link> (uint8_t c)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_mat_1a1faaf46898f55a59d5e27baf7c4a028b">is_Zero</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_mat_1a410c3755a4d91c1ef2bbe3fed93fbb00">swap_Rows</link> (uint8_t a, uint8_t b)</para>
</listitem>
            <listitem><para>void <link linkend="_class_mat_1af942681667806bc48eecd8f793e35c3b">swap_Cols</link> (size_t a, size_t b)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_mat_1a22ba19e51a04cbf9211b070b696ae399">inv</link> (<link linkend="_class_mat">Mat</link> &amp;inv) const</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1a8655dfdd2bcf36aeb250f71b746632c3">inv</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_mat_1af08e1d54e7ec9d23663a65591634be0d">print</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1ab02af947644cba411f97e1459485b67d">eye</link> (uint8_t n)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1a6eec07eb288b59dcb2a27a63453ddad0">operator+</link> (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_mat">Mat</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1a012d3be03352b7233247364175489564">operator-</link> (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_mat">Mat</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1a13b58290a73861162c573130417e5e00">operator *</link> (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_mat">Mat</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_mat">Mat</link> <link linkend="_class_mat_1aa3444bb36ff3148a88cae1dd8867a72a">operator *</link> (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_vec3">Vec3</link>&lt; float &gt; &amp;rhs)</para>
</listitem>
            <listitem><para>void <link linkend="_class_mat_1a67468cb8d132dc0a2d02af527103d82e">swap</link> (<link linkend="_class_mat">Mat</link> &amp;first, <link linkend="_class_mat">Mat</link> &amp;second)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 18 of file mat.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_mat_1a7205342eec3270c1aa954f35d8af27c7"/>    <section>
    <title>Mat()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<para><computeroutput>Mat::Mat ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 21 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1af844a885aedf39d90ad27b2f34333791"/>    <section>
    <title>Mat()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<computeroutput>template&lt;size_t M, size_t N&gt; </computeroutput><para><computeroutput>Mat::Mat (const float(&amp;) mat[M][N])<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 24 of file mat.h.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_af844a885aedf39d90ad27b2f34333791_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a591f4755584ae81e04f14e8f780a05f8"/>    <section>
    <title>Mat()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<para><computeroutput>Mat::Mat (uint8_t rows, uint8_t columns)</computeroutput></para><para>
Definition at line 12 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a591f4755584ae81e04f14e8f780a05f8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a560a2b152f0b4c7389058c23668da819"/>    <section>
    <title>Mat()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<para><computeroutput>Mat::Mat (<link linkend="_class_mat">Mat</link> &amp;&amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_mat_1a87836525bb8e60bda57d246b7370b97e"/>    <section>
    <title>~Mat()</title>
<indexterm><primary>~Mat</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>~Mat</secondary></indexterm>
<para><computeroutput>Mat::~Mat ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 31 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1a1e30e252a1e556ac5e131edac7b08a23"/>    <section>
    <title>Mat()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>Mat</secondary></indexterm>
<para><computeroutput>Mat::Mat (const <link linkend="_class_mat">Mat</link> &amp; m)</computeroutput></para><para>
Definition at line 27 of file mat.cpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_mat_1a3fc332affd01fd294aa98550b88c819d"/>    <section>
    <title>add_Cols()</title>
<indexterm><primary>add_Cols</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>add_Cols</secondary></indexterm>
<para><computeroutput>void Mat::add_Cols (uint8_t c)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 111 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1ae5b6c8fc154b2ac9707c5312a94215f9"/>    <section>
    <title>add_Rows()</title>
<indexterm><primary>add_Rows</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>add_Rows</secondary></indexterm>
<para><computeroutput>void Mat::add_Rows (uint8_t r)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 105 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1a5f4b8f7e3c55a1caf7161c11ec2a2465"/>    <section>
    <title>at()</title>
<indexterm><primary>at</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>at</secondary></indexterm>
<para><computeroutput>float&amp; Mat::at (uint8_t i, uint8_t j)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 36 of file mat.h.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a5f4b8f7e3c55a1caf7161c11ec2a2465_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a5f4b8f7e3c55a1caf7161c11ec2a2465_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a88332d9cd088208e24bea1f10651d1e7"/>    <section>
    <title>cols()</title>
<indexterm><primary>cols</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>cols</secondary></indexterm>
<para><computeroutput>uint8_t Mat::cols ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 34 of file mat.h.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a88332d9cd088208e24bea1f10651d1e7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1ab02af947644cba411f97e1459485b67d"/>    <section>
    <title>eye()</title>
<indexterm><primary>eye</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>eye</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> Mat::eye (uint8_t n)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line 140 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_ab02af947644cba411f97e1459485b67d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_ab02af947644cba411f97e1459485b67d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1abadfedd9dc62cb060771a03ac40c7340"/>    <section>
    <title>fill()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>fill</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>fill</secondary></indexterm>
<para><computeroutput>void Mat::fill (float num)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 85 of file mat.h.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_abadfedd9dc62cb060771a03ac40c7340_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1af95f54284a8d4937918dadb347e76a13"/>    <section>
    <title>fill()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>fill</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>fill</secondary></indexterm>
<computeroutput>template&lt;size_t M, size_t N&gt; </computeroutput><para><computeroutput>void Mat::fill (const float(&amp;) mat[M][N])<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 94 of file mat.h.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_af95f54284a8d4937918dadb347e76a13_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a22ba19e51a04cbf9211b070b696ae399"/>    <section>
    <title>inv()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>inv</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>inv</secondary></indexterm>
<para><computeroutput>bool Mat::inv (<link linkend="_class_mat">Mat</link> &amp; inv) const</computeroutput></para>
<para>inverse based on LU factorization with partial pivotting </para>
<para>
Definition at line 197 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a22ba19e51a04cbf9211b070b696ae399_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a8655dfdd2bcf36aeb250f71b746632c3"/>    <section>
    <title>inv()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>inv</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>inv</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> Mat::inv ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 124 of file mat.h.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a8655dfdd2bcf36aeb250f71b746632c3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a8655dfdd2bcf36aeb250f71b746632c3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a1faaf46898f55a59d5e27baf7c4a028b"/>    <section>
    <title>is_Zero()</title>
<indexterm><primary>is_Zero</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>is_Zero</secondary></indexterm>
<para><computeroutput>bool Mat::is_Zero ( ) const</computeroutput></para><para>
Definition at line 150 of file mat.cpp.</para>
    </section><anchor xml:id="_class_mat_1a03d3322fef7fcc6d52fe141171c5fa04"/>    <section>
    <title>mult()</title>
<indexterm><primary>mult</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>mult</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> Mat::mult (const <link linkend="_class_mat">Mat</link> &amp; m)</computeroutput></para><para>
Definition at line 96 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a03d3322fef7fcc6d52fe141171c5fa04_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a03d3322fef7fcc6d52fe141171c5fa04_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a1de36bf60c84341c1f94494a4d42e5aa"/>    <section>
    <title>mult_EW()</title>
<indexterm><primary>mult_EW</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>mult_EW</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> Mat::mult_EW (float num)</computeroutput></para><para>
Definition at line 117 of file mat.cpp.</para>
    </section><anchor xml:id="_class_mat_1aaf9946bb579ab98e5f1b3c554da11cc9"/>    <section>
    <title>operator *=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator *=</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator *=</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> &amp; Mat::operator *= (const <link linkend="_class_mat">Mat</link> &amp; rhs)</computeroutput></para><para>
Definition at line 79 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_aaf9946bb579ab98e5f1b3c554da11cc9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a8f508e70094f29bf8bd428e3d41013e8"/>    <section>
    <title>operator *=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator *=</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator *=</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> &amp; Mat::operator *= (const <link linkend="_class_vec3">Vec3</link>&lt; float &gt; &amp; rhs)</computeroutput></para><para>
Definition at line 85 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a8f508e70094f29bf8bd428e3d41013e8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a649fa81760478538ff4db14b9572fd81"/>    <section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator+=</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> &amp; Mat::operator+= (const <link linkend="_class_mat">Mat</link> &amp; rhs)</computeroutput></para><para>
Definition at line 49 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a649fa81760478538ff4db14b9572fd81_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a2bb1e2bbfba19148a87b67288ed7fc91"/>    <section>
    <title>operator-=()</title>
<indexterm><primary>operator-=</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator-=</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> &amp; Mat::operator-= (const <link linkend="_class_mat">Mat</link> &amp; rhs)</computeroutput></para><para>
Definition at line 64 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a2bb1e2bbfba19148a87b67288ed7fc91_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1aa0e4a30b4d5a71e6c3cc780fabeca136"/>    <section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link>&amp; Mat::operator= (<link linkend="_class_mat">Mat</link> &amp;&amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_mat_1ae66f73e282cd9134c4677b33f964c575"/>    <section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link>&amp; Mat::operator= (const <link linkend="_class_mat">Mat</link> &amp; m)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 46 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1af08e1d54e7ec9d23663a65591634be0d"/>    <section>
    <title>print()</title>
<indexterm><primary>print</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>print</secondary></indexterm>
<para><computeroutput>void Mat::print ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 135 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1a5b965c2e37939da2aea0af686209655c"/>    <section>
    <title>rows()</title>
<indexterm><primary>rows</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>rows</secondary></indexterm>
<para><computeroutput>uint8_t Mat::rows ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 33 of file mat.h.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a5b965c2e37939da2aea0af686209655c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1af942681667806bc48eecd8f793e35c3b"/>    <section>
    <title>swap_Cols()</title>
<indexterm><primary>swap_Cols</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>swap_Cols</secondary></indexterm>
<para><computeroutput>void Mat::swap_Cols (size_t a, size_t b)</computeroutput></para><para>
Definition at line 178 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_af942681667806bc48eecd8f793e35c3b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_af942681667806bc48eecd8f793e35c3b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a410c3755a4d91c1ef2bbe3fed93fbb00"/>    <section>
    <title>swap_Rows()</title>
<indexterm><primary>swap_Rows</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>swap_Rows</secondary></indexterm>
<para><computeroutput>void Mat::swap_Rows (uint8_t a, uint8_t b)</computeroutput></para><para>
Definition at line 162 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a410c3755a4d91c1ef2bbe3fed93fbb00_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a410c3755a4d91c1ef2bbe3fed93fbb00_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1aa2864c30e68caf29f400bb98295aa6a3"/>    <section>
    <title>trans()</title>
<indexterm><primary>trans</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>trans</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> Mat::trans ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 83 of file mat.h.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_aa2864c30e68caf29f400bb98295aa6a3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_aa2864c30e68caf29f400bb98295aa6a3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_mat_1a55e6cc33fc65042a4cff351fe59ae476"/>    <section>
    <title>transpose()</title>
<indexterm><primary>transpose</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>transpose</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> Mat::transpose ( )</computeroutput></para><para>
Definition at line 129 of file mat.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a55e6cc33fc65042a4cff351fe59ae476_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_mat_a55e6cc33fc65042a4cff351fe59ae476_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_class_mat_1a13b58290a73861162c573130417e5e00"/>    <section>
    <title>operator *<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator *</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator *</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> operator * (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_mat">Mat</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>
Definition at line 68 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1aa3444bb36ff3148a88cae1dd8867a72a"/>    <section>
    <title>operator *<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator *</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator *</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> operator * (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_vec3">Vec3</link>&lt; float &gt; &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>
Definition at line 73 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1a6eec07eb288b59dcb2a27a63453ddad0"/>    <section>
    <title>operator+</title>
<indexterm><primary>operator+</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> operator+ (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_mat">Mat</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>
Definition at line 58 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1a012d3be03352b7233247364175489564"/>    <section>
    <title>operator-</title>
<indexterm><primary>operator-</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>operator-</secondary></indexterm>
<para><computeroutput><link linkend="_class_mat">Mat</link> operator- (<link linkend="_class_mat">Mat</link> lhs, const <link linkend="_class_mat">Mat</link> &amp; rhs)<computeroutput>[friend]</computeroutput></computeroutput></para><para>
Definition at line 63 of file mat.h.</para>
    </section><anchor xml:id="_class_mat_1a67468cb8d132dc0a2d02af527103d82e"/>    <section>
    <title>swap</title>
<indexterm><primary>swap</primary><secondary>Mat</secondary></indexterm>
<indexterm><primary>Mat</primary><secondary>swap</secondary></indexterm>
<para><computeroutput>void swap (<link linkend="_class_mat">Mat</link> &amp; first, <link linkend="_class_mat">Mat</link> &amp; second)<computeroutput>[friend]</computeroutput></computeroutput></para><para>
Definition at line 38 of file mat.cpp.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
Inc/utils/math/<link linkend="_mat_8h">mat.h</link>Src/utils/math/<link linkend="_mat_8cpp">mat.cpp</link></section>
</section>
