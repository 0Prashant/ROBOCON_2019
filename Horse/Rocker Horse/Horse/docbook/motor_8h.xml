<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_motor_8h">
<title>Inc/devs/motor.h File Reference</title>
<indexterm><primary>Inc/devs/motor.h</primary></indexterm>
<programlisting>#include &quot;stm32f4xx_hal.h&quot;
#include &quot;tim.h&quot;
#include &quot;encoder.h&quot;
</programlisting>Include dependency graph for motor.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="motor_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="motor_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structmotor_str">motorStr</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_motor_8h_1a1247dff3a0e5735e04673ff4054b5393">MAX_OMEGA</link>   17</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915d">motorDirection</link> { <link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915da0bf1811c11f36a54bf64550dea7b3a3c">DIR_CLOCKWISE</link>, 
<link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915dadd0955173c56cd250430819509a40b5f">DIR_ANTICLOCKWISE</link>, 
<link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915da5dc5d531712b33166ab1e1e551e93a7f">DIR_HALT</link>, 
<link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915da2e350a3398c902982567b5a661b41c84">DIR_BRAKE</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_motor_8h_1a4c86bb6df9dcabd3a988533402bbf5b3">setDirection</link> (struct <link linkend="_structmotor_str">motorStr</link> *motor, enum <link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915d">motorDirection</link> d)</para>
</listitem>
            <listitem><para>void <link linkend="_motor_8h_1a7b35d0bd88a69d09f5342ab5a54afdb7">setDutyCycle</link> (struct <link linkend="_structmotor_str">motorStr</link> *motor, uint16_t dutyCycle)</para>
</listitem>
            <listitem><para>void <link linkend="_motor_8h_1a33d021021afc7d72da9988cff84c2c00">setOmega</link> (struct <link linkend="_structmotor_str">motorStr</link> *motor, float omega)</para>
</listitem>
            <listitem><para>void <link linkend="_motor_8h_1a0b5daf1bf67bcd15f926a121f6aeb17f">setbOmega</link> (struct <link linkend="_structmotor_str">motorStr</link> *motor, float omega)</para>
</listitem>
            <listitem><para>void <link linkend="_motor_8h_1a8032ecaad8cd4f894a21239aa0fd3655">resetAngle</link> (struct <link linkend="_structmotor_str">motorStr</link> *motor)</para>
</listitem>
            <listitem><para>void <link linkend="_motor_8h_1ad61e65ca99053e8c0529d5bc0841e077">getAngle</link> (struct <link linkend="_structmotor_str">motorStr</link> *motor)</para>
</listitem>
            <listitem><para>void <link linkend="_motor_8h_1a0ab61b12ba059c5a3a387019db70a1cd">getOmega</link> (struct <link linkend="_structmotor_str">motorStr</link> *motor)</para>
</listitem>
            <listitem><para>uint16_t <link linkend="_motor_8h_1a99cc6e96793836eb5ed0b06a8c16d52f">time_period</link> (uint16_t PWM_frequency)</para>
</listitem>
            <listitem><para>float <link linkend="_motor_8h_1a5f28e02e9042fac10566ccd33055107b">float_abs</link> (float x)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_motor_8h_1a1247dff3a0e5735e04673ff4054b5393"/>    <section>
    <title>MAX_OMEGA</title>
<indexterm><primary>MAX_OMEGA</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>MAX_OMEGA</secondary></indexterm>
<para><computeroutput>#define MAX_OMEGA   17</computeroutput></para><para>
Definition at line 6 of file motor.h.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915d"/>    <section>
    <title>motorDirection</title>
<indexterm><primary>motorDirection</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>motorDirection</secondary></indexterm>
<para><computeroutput>enum <link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915d">motorDirection</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>DIR_CLOCKWISE</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>DIR_CLOCKWISE</secondary></indexterm>
<anchor xml:id="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915da0bf1811c11f36a54bf64550dea7b3a3c"/>DIR_CLOCKWISE</entry><entry></entry></row><row><entry><indexterm><primary>DIR_ANTICLOCKWISE</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>DIR_ANTICLOCKWISE</secondary></indexterm>
<anchor xml:id="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915dadd0955173c56cd250430819509a40b5f"/>DIR_ANTICLOCKWISE</entry><entry></entry></row><row><entry><indexterm><primary>DIR_HALT</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>DIR_HALT</secondary></indexterm>
<anchor xml:id="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915da5dc5d531712b33166ab1e1e551e93a7f"/>DIR_HALT</entry><entry></entry></row><row><entry><indexterm><primary>DIR_BRAKE</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>DIR_BRAKE</secondary></indexterm>
<anchor xml:id="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915da2e350a3398c902982567b5a661b41c84"/>DIR_BRAKE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 11 of file motor.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_motor_8h_1a5f28e02e9042fac10566ccd33055107b"/>    <section>
    <title>float_abs()</title>
<indexterm><primary>float_abs</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>float_abs</secondary></indexterm>
<para><computeroutput>float float_abs (float x)</computeroutput></para>    </section><anchor xml:id="_motor_8h_1ad61e65ca99053e8c0529d5bc0841e077"/>    <section>
    <title>getAngle()</title>
<indexterm><primary>getAngle</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>getAngle</secondary></indexterm>
<para><computeroutput>void getAngle (struct <link linkend="_structmotor_str">motorStr</link> * motor)</computeroutput></para><para>
Definition at line 100 of file motor.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="motor_8h_ad61e65ca99053e8c0529d5bc0841e077_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_motor_8h_1a0ab61b12ba059c5a3a387019db70a1cd"/>    <section>
    <title>getOmega()</title>
<indexterm><primary>getOmega</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>getOmega</secondary></indexterm>
<para><computeroutput>void getOmega (struct <link linkend="_structmotor_str">motorStr</link> * motor)</computeroutput></para><para>
Definition at line 105 of file motor.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="motor_8h_a0ab61b12ba059c5a3a387019db70a1cd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_motor_8h_1a8032ecaad8cd4f894a21239aa0fd3655"/>    <section>
    <title>resetAngle()</title>
<indexterm><primary>resetAngle</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>resetAngle</secondary></indexterm>
<para><computeroutput>void resetAngle (struct <link linkend="_structmotor_str">motorStr</link> * motor)</computeroutput></para><para>
Definition at line 110 of file motor.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="motor_8h_a8032ecaad8cd4f894a21239aa0fd3655_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_motor_8h_1a0b5daf1bf67bcd15f926a121f6aeb17f"/>    <section>
    <title>setbOmega()</title>
<indexterm><primary>setbOmega</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>setbOmega</secondary></indexterm>
<para><computeroutput>void setbOmega (struct <link linkend="_structmotor_str">motorStr</link> * motor, float omega)</computeroutput></para><para>
Definition at line 77 of file motor.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="motor_8h_a0b5daf1bf67bcd15f926a121f6aeb17f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_motor_8h_1a4c86bb6df9dcabd3a988533402bbf5b3"/>    <section>
    <title>setDirection()</title>
<indexterm><primary>setDirection</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>setDirection</secondary></indexterm>
<para><computeroutput>void setDirection (struct <link linkend="_structmotor_str">motorStr</link> * motor, enum <link linkend="_motor_8h_1a93b858fd8505b539fe9e73b0dbca915d">motorDirection</link> d)</computeroutput></para><para>
Definition at line 19 of file motor.cpp.</para>
    </section><anchor xml:id="_motor_8h_1a7b35d0bd88a69d09f5342ab5a54afdb7"/>    <section>
    <title>setDutyCycle()</title>
<indexterm><primary>setDutyCycle</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>setDutyCycle</secondary></indexterm>
<para><computeroutput>void setDutyCycle (struct <link linkend="_structmotor_str">motorStr</link> * motor, uint16_t dutyCycle)</computeroutput></para><para>
Definition at line 48 of file motor.cpp.</para>
    </section><anchor xml:id="_motor_8h_1a33d021021afc7d72da9988cff84c2c00"/>    <section>
    <title>setOmega()</title>
<indexterm><primary>setOmega</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>setOmega</secondary></indexterm>
<para><computeroutput>void setOmega (struct <link linkend="_structmotor_str">motorStr</link> * motor, float omega)</computeroutput></para><para>
Definition at line 56 of file motor.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="motor_8h_a33d021021afc7d72da9988cff84c2c00_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_motor_8h_1a99cc6e96793836eb5ed0b06a8c16d52f"/>    <section>
    <title>time_period()</title>
<indexterm><primary>time_period</primary><secondary>motor.h</secondary></indexterm>
<indexterm><primary>motor.h</primary><secondary>time_period</secondary></indexterm>
<para><computeroutput>uint16_t time_period (uint16_t PWM_frequency)</computeroutput></para></section>
</section>
</section>
