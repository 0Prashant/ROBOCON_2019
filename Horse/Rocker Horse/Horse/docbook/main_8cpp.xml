<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main_8cpp">
<title>Src/main.cpp File Reference</title>
<indexterm><primary>Src/main.cpp</primary></indexterm>
<programlisting>#include &quot;main.h&quot;
#include &quot;cmsis_os.h&quot;
#include &quot;tim.h&quot;
#include &quot;usart.h&quot;
#include &quot;gpio.h&quot;
</programlisting>Include dependency graph for main.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_main_8cpp_1a70af21c671abfcc773614a9a4f63d920">SystemClock_Config</link> (void)</para>

<para>System Clock Configuration. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1abade755e13d07c10889ae83143656158">MX_FREERTOS_Init</link> (void)</para>

<para>FreeRTOS initialization. </para>
</listitem>
            <listitem><para>int <link linkend="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (void)</para>

<para>The application entry point. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a8a3b0ad512a6e6c6157440b68d395eac">HAL_TIM_PeriodElapsedCallback</link> (TIM_HandleTypeDef *htim)</para>

<para>Period elapsed callback in non blocking mode. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a1730ffe1e560465665eb47d9264826f9">Error_Handler</link> (void)</para>

<para>This function is executed in case of error occurrence. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a425dc7e549f2b17a4f48496d9561d248">_Error_Handler</link> (const char *file, size_t line)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_main_8cpp_1a425dc7e549f2b17a4f48496d9561d248"/>    <section>
    <title>_Error_Handler()</title>
<indexterm><primary>_Error_Handler</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>_Error_Handler</secondary></indexterm>
<para><computeroutput>void _Error_Handler (const char * file, size_t line)</computeroutput></para><para>
Definition at line 232 of file main.cpp.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a425dc7e549f2b17a4f48496d9561d248_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_main_8cpp_1a1730ffe1e560465665eb47d9264826f9"/>    <section>
    <title>Error_Handler()</title>
<indexterm><primary>Error_Handler</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>Error_Handler</secondary></indexterm>
<para><computeroutput>void Error_Handler (void )</computeroutput></para><para>

<para>This function is executed in case of error occurrence. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 225 of file main.cpp.</para>
    </section><anchor xml:id="_main_8cpp_1a8a3b0ad512a6e6c6157440b68d395eac"/>    <section>
    <title>HAL_TIM_PeriodElapsedCallback()</title>
<indexterm><primary>HAL_TIM_PeriodElapsedCallback</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>HAL_TIM_PeriodElapsedCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim)</computeroutput></para><para>

<para>Period elapsed callback in non blocking mode. </para>
</para>

<para><note><title>Note: </title>

<para>This function is called when TIM14 interrupt took place, inside HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment a global variable &quot;uwTick&quot; used as application time base. </para>
</note>

                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>htim</entry>
                                <entry>
<para>: TIM handle </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 207 of file main.cpp.</para>
    </section><anchor xml:id="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para><para>

<para>The application entry point. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>int</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 100 of file main.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a840291bc02cba5474a4cb46a9b9566fe_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_main_8cpp_1abade755e13d07c10889ae83143656158"/>    <section>
    <title>MX_FREERTOS_Init()</title>
<indexterm><primary>MX_FREERTOS_Init</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>MX_FREERTOS_Init</secondary></indexterm>
<para><computeroutput>void MX_FREERTOS_Init (void )</computeroutput></para><para>

<para>FreeRTOS initialization. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 127 of file freertos.c.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_abade755e13d07c10889ae83143656158_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_main_8cpp_1a70af21c671abfcc773614a9a4f63d920"/>    <section>
    <title>SystemClock_Config()</title>
<indexterm><primary>SystemClock_Config</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>SystemClock_Config</secondary></indexterm>
<para><computeroutput>void SystemClock_Config (void )</computeroutput></para><para>

<para>System Clock Configuration. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>

<para>Configure the main internal regulator output voltage</para>

<para>Initializes the CPU, AHB and APB busses clocks</para>

<para>Initializes the CPU, AHB and APB busses clocks</para>
<para>
Definition at line 158 of file main.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a70af21c671abfcc773614a9a4f63d920_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a70af21c671abfcc773614a9a4f63d920_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
