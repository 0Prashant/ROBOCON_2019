<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_freertos_8c">
<title>Src/freertos.c File Reference</title>
<indexterm><primary>Src/freertos.c</primary></indexterm>
<programlisting>#include &quot;FreeRTOS.h&quot;
#include &quot;task.h&quot;
#include &quot;main.h&quot;
#include &quot;cmsis_os.h&quot;
</programlisting>Include dependency graph for freertos.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="freertos_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_freertos_8c_1a016544463b4842ced7191baf8f449cea">StartDefaultTask</link> (void const *argument)</para>

<para>Function implementing the defaultTask thread. </para>
</listitem>
            <listitem><para>void <link linkend="_freertos_8c_1a002008655210c48a6b7414c925b5f4ac">MotorThread</link> (void const *argument)</para>

<para>Function implementing the Motor thread. </para>
</listitem>
            <listitem><para>void <link linkend="_freertos_8c_1a4719f96fed782e105c167d88a04f907c">PneumaticThread</link> (void const *argument)</para>

<para>Function implementing the Pnematic thread. </para>
</listitem>
            <listitem><para>void <link linkend="_freertos_8c_1a7b9e8e09304997d21a42ecc5c5324f00">MovingMassThread</link> (void const *argument)</para>

<para>Function implementing the MovingMass thread. </para>
</listitem>
            <listitem><para>void <link linkend="_freertos_8c_1abade755e13d07c10889ae83143656158">MX_FREERTOS_Init</link> (void)</para>

<para>FreeRTOS initialization. </para>
</listitem>
            <listitem><para>void <link linkend="_freertos_8c_1a1988aa923b19fa6f31c93afa7773f793">vApplicationGetIdleTaskMemory</link> (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>osThreadId <link linkend="_freertos_8c_1aa658fe134a5d1309d7a15c8116fa142c">defaultTaskHandle</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_freertos_8c_1a0ef1a80eb9a31084b335d4b71c24e001">defaultTaskBuffer</link> [128]</para>
</listitem>
            <listitem><para>osStaticThreadDef_t <link linkend="_freertos_8c_1aca18732f09ae696fd34b94d393dc9a42">defaultTaskControlBlock</link></para>
</listitem>
            <listitem><para>osThreadId <link linkend="_freertos_8c_1a9797f8f7b6dbf5e0f35268b8baa29aa7">MotorHandle</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_freertos_8c_1ac72441d4d89e0521c92de528d5058d8f">MotorThreadBuffer</link> [2048]</para>
</listitem>
            <listitem><para>osStaticThreadDef_t <link linkend="_freertos_8c_1a508e8354dcea8329d3897bf452a173ef">MotorThreadControlBlock</link></para>
</listitem>
            <listitem><para>osThreadId <link linkend="_freertos_8c_1aee9d614f87416838db9f549f8518869a">PnematicHandle</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_freertos_8c_1afae9f67bfaf05cd8e04f0a6ee08f2b3b">PneumaticThreadBuffer</link> [2048]</para>
</listitem>
            <listitem><para>osStaticThreadDef_t <link linkend="_freertos_8c_1aed5c8edcb8005e946889d6475057c9ba">PneumaticThreadControlBlock</link></para>
</listitem>
            <listitem><para>osThreadId <link linkend="_freertos_8c_1a4d5352644c2e765432f9e175a3c17ada">MovingMassHandle</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_freertos_8c_1a67ed566ec8f2d811c9cca573404ee9a1">MovingMassThreadBuffer</link> [2048]</para>
</listitem>
            <listitem><para>osStaticThreadDef_t <link linkend="_freertos_8c_1a8eee1d5301105d92fe21f1f59df74dbf">MovingMassThreadControlBlock</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_freertos_8c_1a002008655210c48a6b7414c925b5f4ac"/>    <section>
    <title>MotorThread()</title>
<indexterm><primary>MotorThread</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MotorThread</secondary></indexterm>
<para><computeroutput>void MotorThread (void const * argument)</computeroutput></para><para>

<para>Function implementing the Motor thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>argument</entry>
                                <entry>
<para>Not used </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 53 of file robo_tasks.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="freertos_8c_a002008655210c48a6b7414c925b5f4ac_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_freertos_8c_1a7b9e8e09304997d21a42ecc5c5324f00"/>    <section>
    <title>MovingMassThread()</title>
<indexterm><primary>MovingMassThread</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MovingMassThread</secondary></indexterm>
<para><computeroutput>void MovingMassThread (void const * argument)</computeroutput></para><para>

<para>Function implementing the MovingMass thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>argument</entry>
                                <entry>
<para>Not used </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 161 of file robo_tasks.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="freertos_8c_a7b9e8e09304997d21a42ecc5c5324f00_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_freertos_8c_1abade755e13d07c10889ae83143656158"/>    <section>
    <title>MX_FREERTOS_Init()</title>
<indexterm><primary>MX_FREERTOS_Init</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MX_FREERTOS_Init</secondary></indexterm>
<para><computeroutput>void MX_FREERTOS_Init (void )</computeroutput></para><para>

<para>FreeRTOS initialization. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 127 of file freertos.c.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="freertos_8c_abade755e13d07c10889ae83143656158_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_freertos_8c_1a4719f96fed782e105c167d88a04f907c"/>    <section>
    <title>PneumaticThread()</title>
<indexterm><primary>PneumaticThread</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>PneumaticThread</secondary></indexterm>
<para><computeroutput>void PneumaticThread (void const * argument)</computeroutput></para><para>

<para>Function implementing the Pnematic thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>argument</entry>
                                <entry>
<para>Not used </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 113 of file robo_tasks.cpp.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="freertos_8c_a4719f96fed782e105c167d88a04f907c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_freertos_8c_1a016544463b4842ced7191baf8f449cea"/>    <section>
    <title>StartDefaultTask()</title>
<indexterm><primary>StartDefaultTask</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>StartDefaultTask</secondary></indexterm>
<para><computeroutput>void StartDefaultTask (void const * argument)</computeroutput></para><para>

<para>Function implementing the defaultTask thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>argument</entry>
                                <entry>
<para>Not used </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 33 of file robo_tasks.cpp.</para>
    </section><anchor xml:id="_freertos_8c_1a1988aa923b19fa6f31c93afa7773f793"/>    <section>
    <title>vApplicationGetIdleTaskMemory()</title>
<indexterm><primary>vApplicationGetIdleTaskMemory</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>vApplicationGetIdleTaskMemory</secondary></indexterm>
<para><computeroutput>void vApplicationGetIdleTaskMemory (StaticTask_t ** ppxIdleTaskTCBBuffer, StackType_t ** ppxIdleTaskStackBuffer, uint32_t * pulIdleTaskStackSize)</computeroutput></para><para>
Definition at line 113 of file freertos.c.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_freertos_8c_1a0ef1a80eb9a31084b335d4b71c24e001"/>    <section>
    <title>defaultTaskBuffer</title>
<indexterm><primary>defaultTaskBuffer</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>defaultTaskBuffer</secondary></indexterm>
<para><computeroutput>uint32_t defaultTaskBuffer[128]</computeroutput></para><para>
Definition at line 82 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1aca18732f09ae696fd34b94d393dc9a42"/>    <section>
    <title>defaultTaskControlBlock</title>
<indexterm><primary>defaultTaskControlBlock</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>defaultTaskControlBlock</secondary></indexterm>
<para><computeroutput>osStaticThreadDef_t defaultTaskControlBlock</computeroutput></para><para>
Definition at line 83 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1aa658fe134a5d1309d7a15c8116fa142c"/>    <section>
    <title>defaultTaskHandle</title>
<indexterm><primary>defaultTaskHandle</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>defaultTaskHandle</secondary></indexterm>
<para><computeroutput>osThreadId defaultTaskHandle</computeroutput></para>
<para>File Name : <link linkend="_freertos_8c">freertos.c</link> Description : Code for freertos applications</para>

<para>This notice applies to any and all portions of this file that are not between comment pairs USER CODE BEGIN and USER CODE END. Other portions of this file, whether inserted by the user or by software development tools are owned by their respective copyright owners.</para>

<para>Copyright (c) 2019 STMicroelectronics International N.V. All rights reserved.</para>

<para>Redistribution and use in source and binary forms, with or without modification, are permitted, provided that the following conditions are met:</para>

<para><orderedlist>
<listitem>
<para>Redistribution of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem>
<para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem>
<para>Neither the name of STMicroelectronics nor the names of other contributors to this software may be used to endorse or promote products derived from this software without specific written permission.</para>
</listitem><listitem>
<para>This software, including modifications and/or derivative works of this software, must execute solely and exclusively on microcontroller or microprocessor devices manufactured by or for STMicroelectronics.</para>
</listitem><listitem>
<para>Redistribution and use of this software other than as permitted under this license is void and will automatically terminate your rights under this license.</para>
</listitem></orderedlist>
</para>

<para>THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </para>
<para>
Definition at line 81 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1a9797f8f7b6dbf5e0f35268b8baa29aa7"/>    <section>
    <title>MotorHandle</title>
<indexterm><primary>MotorHandle</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MotorHandle</secondary></indexterm>
<para><computeroutput>osThreadId MotorHandle</computeroutput></para><para>
Definition at line 84 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1ac72441d4d89e0521c92de528d5058d8f"/>    <section>
    <title>MotorThreadBuffer</title>
<indexterm><primary>MotorThreadBuffer</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MotorThreadBuffer</secondary></indexterm>
<para><computeroutput>uint32_t MotorThreadBuffer[2048]</computeroutput></para><para>
Definition at line 85 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1a508e8354dcea8329d3897bf452a173ef"/>    <section>
    <title>MotorThreadControlBlock</title>
<indexterm><primary>MotorThreadControlBlock</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MotorThreadControlBlock</secondary></indexterm>
<para><computeroutput>osStaticThreadDef_t MotorThreadControlBlock</computeroutput></para><para>
Definition at line 86 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1a4d5352644c2e765432f9e175a3c17ada"/>    <section>
    <title>MovingMassHandle</title>
<indexterm><primary>MovingMassHandle</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MovingMassHandle</secondary></indexterm>
<para><computeroutput>osThreadId MovingMassHandle</computeroutput></para><para>
Definition at line 90 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1a67ed566ec8f2d811c9cca573404ee9a1"/>    <section>
    <title>MovingMassThreadBuffer</title>
<indexterm><primary>MovingMassThreadBuffer</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MovingMassThreadBuffer</secondary></indexterm>
<para><computeroutput>uint32_t MovingMassThreadBuffer[2048]</computeroutput></para><para>
Definition at line 91 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1a8eee1d5301105d92fe21f1f59df74dbf"/>    <section>
    <title>MovingMassThreadControlBlock</title>
<indexterm><primary>MovingMassThreadControlBlock</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>MovingMassThreadControlBlock</secondary></indexterm>
<para><computeroutput>osStaticThreadDef_t MovingMassThreadControlBlock</computeroutput></para><para>
Definition at line 92 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1aee9d614f87416838db9f549f8518869a"/>    <section>
    <title>PnematicHandle</title>
<indexterm><primary>PnematicHandle</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>PnematicHandle</secondary></indexterm>
<para><computeroutput>osThreadId PnematicHandle</computeroutput></para><para>
Definition at line 87 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1afae9f67bfaf05cd8e04f0a6ee08f2b3b"/>    <section>
    <title>PneumaticThreadBuffer</title>
<indexterm><primary>PneumaticThreadBuffer</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>PneumaticThreadBuffer</secondary></indexterm>
<para><computeroutput>uint32_t PneumaticThreadBuffer[2048]</computeroutput></para><para>
Definition at line 88 of file freertos.c.</para>
    </section><anchor xml:id="_freertos_8c_1aed5c8edcb8005e946889d6475057c9ba"/>    <section>
    <title>PneumaticThreadControlBlock</title>
<indexterm><primary>PneumaticThreadControlBlock</primary><secondary>freertos.c</secondary></indexterm>
<indexterm><primary>freertos.c</primary><secondary>PneumaticThreadControlBlock</secondary></indexterm>
<para><computeroutput>osStaticThreadDef_t PneumaticThreadControlBlock</computeroutput></para><para>
Definition at line 89 of file freertos.c.</para>
</section>
</section>
</section>
