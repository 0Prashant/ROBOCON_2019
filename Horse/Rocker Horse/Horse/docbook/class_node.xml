<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_node">
<title>Node&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Node&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;node.h&gt;</computeroutput>
</para>
Inheritance diagram for Node&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_node__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Node&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_node__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_node_1a0fc2b7ab91a27f8fd1af50b2a915e5dd">Node</link> (T elem, <link linkend="_class_node">Node</link> *next=nullptr)</para>
</listitem>
            <listitem><para><link linkend="_class_node_1aa5a965b880b822510aa63460303a934b">Node</link> (<link linkend="_class_node">Node</link> &amp;&amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_class_node_1aa5bd21a70de937787f180a3daee9d326">Node</link> (const <link linkend="_class_node">Node</link> &amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_class_node">Node</link> &amp; <link linkend="_class_node_1a31b1611764c42fc45a1fe6171cd4c69d">operator=</link> (<link linkend="_class_node">Node</link> &amp;&amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_class_node">Node</link> &amp; <link linkend="_class_node_1a2f5358a0ea0136eb591e756ab02b5784">operator=</link> (const <link linkend="_class_node">Node</link> &amp;)=default</para>
</listitem>
            <listitem><para><link linkend="_class_node_1ae923d0417581dd19784d55b901f0f7f0">~Node</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_node_1acf6467148de62b06e6b0012405ca9678">set_Next</link> (<link linkend="_class_node">Node</link> *next)</para>
</listitem>
            <listitem><para><link linkend="_class_node">Node</link> * <link linkend="_class_node_1a6145a7e4cefa2149d957245155e9c5b3">get_Next</link> ()</para>
</listitem>
            <listitem><para>T <link linkend="_class_node_1a313d582ccee069999fdf6b9db84c4735">get_Element</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_node_1a06554d85f7622d7264be391a4348a4d1">set_Element</link> (T elem)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T&gt;
class Node&lt; T &gt;</title></simplesect>

<para>
Definition at line 13 of file node.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_node_1a0fc2b7ab91a27f8fd1af50b2a915e5dd"/>    <section>
    <title>Node()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Node</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>Node</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_class_node">Node</link>&lt; T &gt;::<link linkend="_class_node">Node</link> (T elem, <link linkend="_class_node">Node</link>&lt; T &gt; * next = <computeroutput>nullptr</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 16 of file node.h.</para>
    </section><anchor xml:id="_class_node_1aa5a965b880b822510aa63460303a934b"/>    <section>
    <title>Node()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Node</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>Node</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_class_node">Node</link>&lt; T &gt;::<link linkend="_class_node">Node</link> (<link linkend="_class_node">Node</link>&lt; T &gt; &amp;&amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_node_1aa5bd21a70de937787f180a3daee9d326"/>    <section>
    <title>Node()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Node</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>Node</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_class_node">Node</link>&lt; T &gt;::<link linkend="_class_node">Node</link> (const <link linkend="_class_node">Node</link>&lt; T &gt; &amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_node_1ae923d0417581dd19784d55b901f0f7f0"/>    <section>
    <title>~Node()</title>
<indexterm><primary>~Node</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>~Node</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_class_node">Node</link>&lt; T &gt;::~<link linkend="_class_node">Node</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 25 of file node.h.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_node_1a313d582ccee069999fdf6b9db84c4735"/>    <section>
    <title>get_Element()</title>
<indexterm><primary>get_Element</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>get_Element</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>T <link linkend="_class_node">Node</link>&lt; T &gt;::get_Element ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 29 of file node.h.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_node_a313d582ccee069999fdf6b9db84c4735_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_node_1a6145a7e4cefa2149d957245155e9c5b3"/>    <section>
    <title>get_Next()</title>
<indexterm><primary>get_Next</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>get_Next</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_class_node">Node</link>* <link linkend="_class_node">Node</link>&lt; T &gt;::get_Next ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 28 of file node.h.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_node_a6145a7e4cefa2149d957245155e9c5b3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_node_1a31b1611764c42fc45a1fe6171cd4c69d"/>    <section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_class_node">Node</link>&amp; <link linkend="_class_node">Node</link>&lt; T &gt;::operator= (<link linkend="_class_node">Node</link>&lt; T &gt; &amp;&amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_node_1a2f5358a0ea0136eb591e756ab02b5784"/>    <section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_class_node">Node</link>&amp; <link linkend="_class_node">Node</link>&lt; T &gt;::operator= (const <link linkend="_class_node">Node</link>&lt; T &gt; &amp; )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_node_1a06554d85f7622d7264be391a4348a4d1"/>    <section>
    <title>set_Element()</title>
<indexterm><primary>set_Element</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>set_Element</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>void <link linkend="_class_node">Node</link>&lt; T &gt;::set_Element (T elem)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 30 of file node.h.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_node_a06554d85f7622d7264be391a4348a4d1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_node_1acf6467148de62b06e6b0012405ca9678"/>    <section>
    <title>set_Next()</title>
<indexterm><primary>set_Next</primary><secondary>Node&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Node&lt; T &gt;</primary><secondary>set_Next</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>void <link linkend="_class_node">Node</link>&lt; T &gt;::set_Next (<link linkend="_class_node">Node</link>&lt; T &gt; * next)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 27 of file node.h.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_node_acf6467148de62b06e6b0012405ca9678_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Inc/utils/container/<link linkend="_node_8h">node.h</link></section>
</section>
