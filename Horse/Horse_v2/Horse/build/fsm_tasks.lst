ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fsm_tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.phaseOneChores,"ax",%progbits
  18              		.align	1
  19              		.global	phaseOneChores
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	phaseOneChores:
  26              	.LFB127:
  27              		.file 1 "Core/Src/fsm_tasks.c"
   1:Core/Src/fsm_tasks.c **** /*28-1-2019*/
   2:Core/Src/fsm_tasks.c **** 
   3:Core/Src/fsm_tasks.c **** #include "fsm_tasks.h"
   4:Core/Src/fsm_tasks.c **** 
   5:Core/Src/fsm_tasks.c **** void homePositionChores(struct fsmStr *fsm)
   6:Core/Src/fsm_tasks.c **** {
   7:Core/Src/fsm_tasks.c ****         setHomePosition();
   8:Core/Src/fsm_tasks.c ****         check_N_Stop();
   9:Core/Src/fsm_tasks.c **** 	
  10:Core/Src/fsm_tasks.c **** }
  11:Core/Src/fsm_tasks.c **** 
  12:Core/Src/fsm_tasks.c **** static uint8_t gIs_First = 1;
  13:Core/Src/fsm_tasks.c **** void phaseOneChores(struct fsmStr *fsm)
  14:Core/Src/fsm_tasks.c **** {
  28              		.loc 1 14 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  41              	.LBB2:
  15:Core/Src/fsm_tasks.c ****         uint8_t motor_index = 0;
  16:Core/Src/fsm_tasks.c ****         float set_point = 0;
  17:Core/Src/fsm_tasks.c **** 
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 2


  18:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
  42              		.loc 1 18 0
  43 0002 0024     		movs	r4, #0
  44 0004 14E0     		b	.L2
  45              	.LVL2:
  46              	.L3:
  19:Core/Src/fsm_tasks.c ****         {
  20:Core/Src/fsm_tasks.c ****                 if (i != motor_index)
  21:Core/Src/fsm_tasks.c ****                 {
  22:Core/Src/fsm_tasks.c ****                         ffSetAngle(&ff_arr[i], 60);
  23:Core/Src/fsm_tasks.c ****                         getAngle(&motor_arr[i]);
  24:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
  25:Core/Src/fsm_tasks.c **** 
  26:Core/Src/fsm_tasks.c ****                         set_point = ffGenerate(&ff_arr[i], motor_arr[i].angle);
  27:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
  28:Core/Src/fsm_tasks.c ****                                                                 set_point,
  29:Core/Src/fsm_tasks.c ****                                                                 motor_arr[i].omega,
  30:Core/Src/fsm_tasks.c ****                                                                 dt_ms);
  31:Core/Src/fsm_tasks.c ****                 }
  32:Core/Src/fsm_tasks.c ****                 else if (i == motor_index)
  33:Core/Src/fsm_tasks.c ****                 {
  34:Core/Src/fsm_tasks.c ****                         if (gIs_First) {
  47              		.loc 1 34 0
  48 0006 234B     		ldr	r3, .L9
  49 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 000a 002B     		cmp	r3, #0
  51 000c 3AD0     		beq	.L5
  35:Core/Src/fsm_tasks.c ****                                 motor_arr[i].update_omega = 0;
  52              		.loc 1 35 0
  53 000e 224A     		ldr	r2, .L9+4
  54 0010 3423     		movs	r3, #52
  55 0012 03FB0423 		mla	r3, r3, r4, r2
  56 0016 0022     		movs	r2, #0
  57 0018 1A61     		str	r2, [r3, #16]	@ float
  36:Core/Src/fsm_tasks.c ****                                 int_arr[i].intState = STATE_A;
  58              		.loc 1 36 0
  59 001a 04EB4403 		add	r3, r4, r4, lsl #1
  60 001e 9A00     		lsls	r2, r3, #2
  61 0020 1E4B     		ldr	r3, .L9+8
  62 0022 1344     		add	r3, r3, r2
  63 0024 0022     		movs	r2, #0
  64 0026 9A72     		strb	r2, [r3, #10]
  37:Core/Src/fsm_tasks.c ****                                 gIs_First = 0;
  65              		.loc 1 37 0
  66 0028 1A4B     		ldr	r3, .L9
  67 002a 1A70     		strb	r2, [r3]
  68              	.L4:
  18:Core/Src/fsm_tasks.c ****         {
  69              		.loc 1 18 0 discriminator 2
  70 002c 0134     		adds	r4, r4, #1
  71              	.LVL3:
  72 002e E4B2     		uxtb	r4, r4
  73              	.LVL4:
  74              	.L2:
  18:Core/Src/fsm_tasks.c ****         {
  75              		.loc 1 18 0 is_stmt 0 discriminator 1
  76 0030 032C     		cmp	r4, #3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 3


  77 0032 2ED8     		bhi	.L8
  20:Core/Src/fsm_tasks.c ****                 {
  78              		.loc 1 20 0 is_stmt 1
  79 0034 002C     		cmp	r4, #0
  80 0036 E6D0     		beq	.L3
  22:Core/Src/fsm_tasks.c ****                         getAngle(&motor_arr[i]);
  81              		.loc 1 22 0
  82 0038 C4EB0413 		rsb	r3, r4, r4, lsl #4
  83 003c 9E00     		lsls	r6, r3, #2
  84 003e 184B     		ldr	r3, .L9+12
  85 0040 1E44     		add	r6, r6, r3
  86 0042 9FED180A 		vldr.32	s0, .L9+16
  87 0046 3046     		mov	r0, r6
  88 0048 FFF7FEFF 		bl	ffSetAngle
  89              	.LVL5:
  23:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
  90              		.loc 1 23 0
  91 004c 3425     		movs	r5, #52
  92 004e 124B     		ldr	r3, .L9+4
  93 0050 05FB0435 		mla	r5, r5, r4, r3
  94 0054 2846     		mov	r0, r5
  95 0056 FFF7FEFF 		bl	getAngle
  96              	.LVL6:
  24:Core/Src/fsm_tasks.c **** 
  97              		.loc 1 24 0
  98 005a 2846     		mov	r0, r5
  99 005c FFF7FEFF 		bl	getOmega
 100              	.LVL7:
  26:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
 101              		.loc 1 26 0
 102 0060 95ED010A 		vldr.32	s0, [r5, #4]
 103 0064 3046     		mov	r0, r6
 104 0066 FFF7FEFF 		bl	ffGenerate
 105              	.LVL8:
  27:Core/Src/fsm_tasks.c ****                                                                 set_point,
 106              		.loc 1 27 0
 107 006a C4EBC402 		rsb	r2, r4, r4, lsl #3
 108 006e D300     		lsls	r3, r2, #3
 109 0070 0A21     		movs	r1, #10
 110 0072 D5ED000A 		vldr.32	s1, [r5]
 111 0076 0C48     		ldr	r0, .L9+20
 112 0078 1844     		add	r0, r0, r3
 113 007a FFF7FEFF 		bl	PID_Compute
 114              	.LVL9:
 115 007e 85ED040A 		vstr.32	s0, [r5, #16]
 116 0082 D3E7     		b	.L4
 117              	.L5:
  38:Core/Src/fsm_tasks.c ****                         }
  39:Core/Src/fsm_tasks.c ****                         else {
  40:Core/Src/fsm_tasks.c ****                                 motor_arr[i].update_omega = HOME_POSITION_OMEGA;
 118              		.loc 1 40 0
 119 0084 044A     		ldr	r2, .L9+4
 120 0086 3423     		movs	r3, #52
 121 0088 03FB0423 		mla	r3, r3, r4, r2
 122 008c 074A     		ldr	r2, .L9+24
 123 008e 1A61     		str	r2, [r3, #16]	@ float
 124 0090 CCE7     		b	.L4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 4


 125              	.L8:
 126              	.LBE2:
  41:Core/Src/fsm_tasks.c ****                         }
  42:Core/Src/fsm_tasks.c ****                 }
  43:Core/Src/fsm_tasks.c ****         }
  44:Core/Src/fsm_tasks.c **** }
 127              		.loc 1 44 0
 128 0092 70BD     		pop	{r4, r5, r6, pc}
 129              	.LVL10:
 130              	.L10:
 131              		.align	2
 132              	.L9:
 133 0094 00000000 		.word	.LANCHOR0
 134 0098 00000000 		.word	motor_arr
 135 009c 00000000 		.word	int_arr
 136 00a0 00000000 		.word	ff_arr
 137 00a4 00007042 		.word	1114636288
 138 00a8 00000000 		.word	pid_arr
 139 00ac 000080C0 		.word	-1065353216
 140              		.cfi_endproc
 141              	.LFE127:
 143              		.section	.text.phaseTwoChores,"ax",%progbits
 144              		.align	1
 145              		.global	phaseTwoChores
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	phaseTwoChores:
 152              	.LFB128:
  45:Core/Src/fsm_tasks.c **** 
  46:Core/Src/fsm_tasks.c **** void phaseTwoChores(struct fsmStr *fsm)
  47:Core/Src/fsm_tasks.c **** {
 153              		.loc 1 47 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              	.LVL11:
 158 0000 70B5     		push	{r4, r5, r6, lr}
 159              	.LCFI1:
 160              		.cfi_def_cfa_offset 16
 161              		.cfi_offset 4, -16
 162              		.cfi_offset 5, -12
 163              		.cfi_offset 6, -8
 164              		.cfi_offset 14, -4
 165              	.LVL12:
 166              	.LBB3:
  48:Core/Src/fsm_tasks.c ****         uint8_t motor_index = 1;
  49:Core/Src/fsm_tasks.c ****         float set_point = 0;
  50:Core/Src/fsm_tasks.c **** 
  51:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 167              		.loc 1 51 0
 168 0002 0024     		movs	r4, #0
 169 0004 07E0     		b	.L12
 170              	.LVL13:
 171              	.L13:
  52:Core/Src/fsm_tasks.c ****         {
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 5


  53:Core/Src/fsm_tasks.c ****                 if (i != motor_index)
  54:Core/Src/fsm_tasks.c ****                 {
  55:Core/Src/fsm_tasks.c ****                         ffSetAngle(&ff_arr[i], 60);
  56:Core/Src/fsm_tasks.c **** 
  57:Core/Src/fsm_tasks.c ****                         getAngle(&motor_arr[i]);
  58:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
  59:Core/Src/fsm_tasks.c **** 
  60:Core/Src/fsm_tasks.c ****                         set_point = ffGenerate(&ff_arr[i], motor_arr[i].angle);
  61:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
  62:Core/Src/fsm_tasks.c ****                                                                 set_point,
  63:Core/Src/fsm_tasks.c ****                                                                 motor_arr[i].omega,
  64:Core/Src/fsm_tasks.c ****                                                                 dt_ms);
  65:Core/Src/fsm_tasks.c ****                 }
  66:Core/Src/fsm_tasks.c ****                 else {
  67:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = HOME_POSITION_OMEGA;
 172              		.loc 1 67 0
 173 0006 194A     		ldr	r2, .L18
 174 0008 3423     		movs	r3, #52
 175 000a 03FB0423 		mla	r3, r3, r4, r2
 176 000e 184A     		ldr	r2, .L18+4
 177 0010 1A61     		str	r2, [r3, #16]	@ float
 178              	.L14:
  51:Core/Src/fsm_tasks.c ****         {
 179              		.loc 1 51 0 discriminator 2
 180 0012 0134     		adds	r4, r4, #1
 181              	.LVL14:
 182 0014 E4B2     		uxtb	r4, r4
 183              	.LVL15:
 184              	.L12:
  51:Core/Src/fsm_tasks.c ****         {
 185              		.loc 1 51 0 is_stmt 0 discriminator 1
 186 0016 032C     		cmp	r4, #3
 187 0018 27D8     		bhi	.L17
  53:Core/Src/fsm_tasks.c ****                 {
 188              		.loc 1 53 0 is_stmt 1
 189 001a 012C     		cmp	r4, #1
 190 001c F3D0     		beq	.L13
  55:Core/Src/fsm_tasks.c **** 
 191              		.loc 1 55 0
 192 001e C4EB0413 		rsb	r3, r4, r4, lsl #4
 193 0022 9E00     		lsls	r6, r3, #2
 194 0024 134B     		ldr	r3, .L18+8
 195 0026 1E44     		add	r6, r6, r3
 196 0028 9FED130A 		vldr.32	s0, .L18+12
 197 002c 3046     		mov	r0, r6
 198 002e FFF7FEFF 		bl	ffSetAngle
 199              	.LVL16:
  57:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
 200              		.loc 1 57 0
 201 0032 3425     		movs	r5, #52
 202 0034 0D4B     		ldr	r3, .L18
 203 0036 05FB0435 		mla	r5, r5, r4, r3
 204 003a 2846     		mov	r0, r5
 205 003c FFF7FEFF 		bl	getAngle
 206              	.LVL17:
  58:Core/Src/fsm_tasks.c **** 
 207              		.loc 1 58 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 6


 208 0040 2846     		mov	r0, r5
 209 0042 FFF7FEFF 		bl	getOmega
 210              	.LVL18:
  60:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
 211              		.loc 1 60 0
 212 0046 95ED010A 		vldr.32	s0, [r5, #4]
 213 004a 3046     		mov	r0, r6
 214 004c FFF7FEFF 		bl	ffGenerate
 215              	.LVL19:
  61:Core/Src/fsm_tasks.c ****                                                                 set_point,
 216              		.loc 1 61 0
 217 0050 C4EBC402 		rsb	r2, r4, r4, lsl #3
 218 0054 D300     		lsls	r3, r2, #3
 219 0056 0A21     		movs	r1, #10
 220 0058 D5ED000A 		vldr.32	s1, [r5]
 221 005c 0748     		ldr	r0, .L18+16
 222 005e 1844     		add	r0, r0, r3
 223 0060 FFF7FEFF 		bl	PID_Compute
 224              	.LVL20:
 225 0064 85ED040A 		vstr.32	s0, [r5, #16]
 226 0068 D3E7     		b	.L14
 227              	.L17:
 228              	.LBE3:
  68:Core/Src/fsm_tasks.c ****                 }
  69:Core/Src/fsm_tasks.c ****         }
  70:Core/Src/fsm_tasks.c **** }
 229              		.loc 1 70 0
 230 006a 70BD     		pop	{r4, r5, r6, pc}
 231              	.LVL21:
 232              	.L19:
 233              		.align	2
 234              	.L18:
 235 006c 00000000 		.word	motor_arr
 236 0070 000080C0 		.word	-1065353216
 237 0074 00000000 		.word	ff_arr
 238 0078 00007042 		.word	1114636288
 239 007c 00000000 		.word	pid_arr
 240              		.cfi_endproc
 241              	.LFE128:
 243              		.section	.text.phaseThreeChores,"ax",%progbits
 244              		.align	1
 245              		.global	phaseThreeChores
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv4-sp-d16
 251              	phaseThreeChores:
 252              	.LFB129:
  71:Core/Src/fsm_tasks.c **** 
  72:Core/Src/fsm_tasks.c **** void phaseThreeChores(struct fsmStr *fsm)
  73:Core/Src/fsm_tasks.c **** {
 253              		.loc 1 73 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL22:
 258 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 7


 259              	.LCFI2:
 260              		.cfi_def_cfa_offset 16
 261              		.cfi_offset 4, -16
 262              		.cfi_offset 5, -12
 263              		.cfi_offset 6, -8
 264              		.cfi_offset 14, -4
 265              	.LVL23:
 266              	.LBB4:
  74:Core/Src/fsm_tasks.c ****         uint8_t motor_index = 2;
  75:Core/Src/fsm_tasks.c ****         float set_point;
  76:Core/Src/fsm_tasks.c **** 
  77:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 267              		.loc 1 77 0
 268 0002 0024     		movs	r4, #0
 269 0004 07E0     		b	.L21
 270              	.LVL24:
 271              	.L22:
  78:Core/Src/fsm_tasks.c ****         {
  79:Core/Src/fsm_tasks.c ****                 if (i != motor_index)
  80:Core/Src/fsm_tasks.c ****                 {
  81:Core/Src/fsm_tasks.c ****                         ffSetAngle(&ff_arr[i], 60);
  82:Core/Src/fsm_tasks.c **** 
  83:Core/Src/fsm_tasks.c ****                         getAngle(&motor_arr[i]);
  84:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
  85:Core/Src/fsm_tasks.c **** 
  86:Core/Src/fsm_tasks.c ****                         set_point = ffGenerate(&ff_arr[i], motor_arr[i].angle);
  87:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
  88:Core/Src/fsm_tasks.c ****                                                                 set_point,
  89:Core/Src/fsm_tasks.c ****                                                                 motor_arr[i].omega,
  90:Core/Src/fsm_tasks.c ****                                                                 dt_ms);
  91:Core/Src/fsm_tasks.c ****                 }
  92:Core/Src/fsm_tasks.c ****                 else {
  93:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = HOME_POSITION_OMEGA;
 272              		.loc 1 93 0
 273 0006 194A     		ldr	r2, .L27
 274 0008 3423     		movs	r3, #52
 275 000a 03FB0423 		mla	r3, r3, r4, r2
 276 000e 184A     		ldr	r2, .L27+4
 277 0010 1A61     		str	r2, [r3, #16]	@ float
 278              	.L23:
  77:Core/Src/fsm_tasks.c ****         {
 279              		.loc 1 77 0 discriminator 2
 280 0012 0134     		adds	r4, r4, #1
 281              	.LVL25:
 282 0014 E4B2     		uxtb	r4, r4
 283              	.LVL26:
 284              	.L21:
  77:Core/Src/fsm_tasks.c ****         {
 285              		.loc 1 77 0 is_stmt 0 discriminator 1
 286 0016 032C     		cmp	r4, #3
 287 0018 27D8     		bhi	.L26
  79:Core/Src/fsm_tasks.c ****                 {
 288              		.loc 1 79 0 is_stmt 1
 289 001a 022C     		cmp	r4, #2
 290 001c F3D0     		beq	.L22
  81:Core/Src/fsm_tasks.c **** 
 291              		.loc 1 81 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 8


 292 001e C4EB0413 		rsb	r3, r4, r4, lsl #4
 293 0022 9E00     		lsls	r6, r3, #2
 294 0024 134B     		ldr	r3, .L27+8
 295 0026 1E44     		add	r6, r6, r3
 296 0028 9FED130A 		vldr.32	s0, .L27+12
 297 002c 3046     		mov	r0, r6
 298 002e FFF7FEFF 		bl	ffSetAngle
 299              	.LVL27:
  83:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
 300              		.loc 1 83 0
 301 0032 3425     		movs	r5, #52
 302 0034 0D4B     		ldr	r3, .L27
 303 0036 05FB0435 		mla	r5, r5, r4, r3
 304 003a 2846     		mov	r0, r5
 305 003c FFF7FEFF 		bl	getAngle
 306              	.LVL28:
  84:Core/Src/fsm_tasks.c **** 
 307              		.loc 1 84 0
 308 0040 2846     		mov	r0, r5
 309 0042 FFF7FEFF 		bl	getOmega
 310              	.LVL29:
  86:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
 311              		.loc 1 86 0
 312 0046 95ED010A 		vldr.32	s0, [r5, #4]
 313 004a 3046     		mov	r0, r6
 314 004c FFF7FEFF 		bl	ffGenerate
 315              	.LVL30:
  87:Core/Src/fsm_tasks.c ****                                                                 set_point,
 316              		.loc 1 87 0
 317 0050 C4EBC402 		rsb	r2, r4, r4, lsl #3
 318 0054 D300     		lsls	r3, r2, #3
 319 0056 0A21     		movs	r1, #10
 320 0058 D5ED000A 		vldr.32	s1, [r5]
 321 005c 0748     		ldr	r0, .L27+16
 322 005e 1844     		add	r0, r0, r3
 323 0060 FFF7FEFF 		bl	PID_Compute
 324              	.LVL31:
 325 0064 85ED040A 		vstr.32	s0, [r5, #16]
 326 0068 D3E7     		b	.L23
 327              	.L26:
 328              	.LBE4:
  94:Core/Src/fsm_tasks.c ****                 }
  95:Core/Src/fsm_tasks.c ****         }
  96:Core/Src/fsm_tasks.c **** }
 329              		.loc 1 96 0
 330 006a 70BD     		pop	{r4, r5, r6, pc}
 331              	.LVL32:
 332              	.L28:
 333              		.align	2
 334              	.L27:
 335 006c 00000000 		.word	motor_arr
 336 0070 000080C0 		.word	-1065353216
 337 0074 00000000 		.word	ff_arr
 338 0078 00007042 		.word	1114636288
 339 007c 00000000 		.word	pid_arr
 340              		.cfi_endproc
 341              	.LFE129:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 9


 343              		.section	.text.phaseFourChores,"ax",%progbits
 344              		.align	1
 345              		.global	phaseFourChores
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	phaseFourChores:
 352              	.LFB130:
  97:Core/Src/fsm_tasks.c **** 
  98:Core/Src/fsm_tasks.c **** void phaseFourChores(struct fsmStr *fsm)
  99:Core/Src/fsm_tasks.c **** {
 353              		.loc 1 99 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              	.LVL33:
 358 0000 70B5     		push	{r4, r5, r6, lr}
 359              	.LCFI3:
 360              		.cfi_def_cfa_offset 16
 361              		.cfi_offset 4, -16
 362              		.cfi_offset 5, -12
 363              		.cfi_offset 6, -8
 364              		.cfi_offset 14, -4
 365              	.LVL34:
 366              	.LBB5:
 100:Core/Src/fsm_tasks.c ****         uint8_t motor_index = 3;
 101:Core/Src/fsm_tasks.c ****         float set_point;
 102:Core/Src/fsm_tasks.c **** 
 103:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 367              		.loc 1 103 0
 368 0002 0024     		movs	r4, #0
 369 0004 07E0     		b	.L30
 370              	.LVL35:
 371              	.L31:
 104:Core/Src/fsm_tasks.c ****         {
 105:Core/Src/fsm_tasks.c ****                 if (i != motor_index)
 106:Core/Src/fsm_tasks.c ****                 {
 107:Core/Src/fsm_tasks.c **** 
 108:Core/Src/fsm_tasks.c ****                         ffSetAngle(&ff_arr[i], 60);
 109:Core/Src/fsm_tasks.c **** 
 110:Core/Src/fsm_tasks.c ****                         getAngle(&motor_arr[i]);
 111:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
 112:Core/Src/fsm_tasks.c **** 
 113:Core/Src/fsm_tasks.c ****                         set_point = ffGenerate(&ff_arr[i], motor_arr[i].angle);
 114:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
 115:Core/Src/fsm_tasks.c ****                                                                 set_point,
 116:Core/Src/fsm_tasks.c ****                                                                 motor_arr[i].omega,
 117:Core/Src/fsm_tasks.c ****                                                                 dt_ms);
 118:Core/Src/fsm_tasks.c ****                 }
 119:Core/Src/fsm_tasks.c ****                 else {
 120:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = HOME_POSITION_OMEGA;
 372              		.loc 1 120 0
 373 0006 194A     		ldr	r2, .L36
 374 0008 3423     		movs	r3, #52
 375 000a 03FB0423 		mla	r3, r3, r4, r2
 376 000e 184A     		ldr	r2, .L36+4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 10


 377 0010 1A61     		str	r2, [r3, #16]	@ float
 378              	.L32:
 103:Core/Src/fsm_tasks.c ****         {
 379              		.loc 1 103 0 discriminator 2
 380 0012 0134     		adds	r4, r4, #1
 381              	.LVL36:
 382 0014 E4B2     		uxtb	r4, r4
 383              	.LVL37:
 384              	.L30:
 103:Core/Src/fsm_tasks.c ****         {
 385              		.loc 1 103 0 is_stmt 0 discriminator 1
 386 0016 032C     		cmp	r4, #3
 387 0018 27D8     		bhi	.L35
 105:Core/Src/fsm_tasks.c ****                 {
 388              		.loc 1 105 0 is_stmt 1
 389 001a 032C     		cmp	r4, #3
 390 001c F3D0     		beq	.L31
 108:Core/Src/fsm_tasks.c **** 
 391              		.loc 1 108 0
 392 001e C4EB0413 		rsb	r3, r4, r4, lsl #4
 393 0022 9E00     		lsls	r6, r3, #2
 394 0024 134B     		ldr	r3, .L36+8
 395 0026 1E44     		add	r6, r6, r3
 396 0028 9FED130A 		vldr.32	s0, .L36+12
 397 002c 3046     		mov	r0, r6
 398 002e FFF7FEFF 		bl	ffSetAngle
 399              	.LVL38:
 110:Core/Src/fsm_tasks.c ****                         getOmega(&motor_arr[i]);
 400              		.loc 1 110 0
 401 0032 3425     		movs	r5, #52
 402 0034 0D4B     		ldr	r3, .L36
 403 0036 05FB0435 		mla	r5, r5, r4, r3
 404 003a 2846     		mov	r0, r5
 405 003c FFF7FEFF 		bl	getAngle
 406              	.LVL39:
 111:Core/Src/fsm_tasks.c **** 
 407              		.loc 1 111 0
 408 0040 2846     		mov	r0, r5
 409 0042 FFF7FEFF 		bl	getOmega
 410              	.LVL40:
 113:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = PID_Compute(&pid_arr[i],
 411              		.loc 1 113 0
 412 0046 95ED010A 		vldr.32	s0, [r5, #4]
 413 004a 3046     		mov	r0, r6
 414 004c FFF7FEFF 		bl	ffGenerate
 415              	.LVL41:
 114:Core/Src/fsm_tasks.c ****                                                                 set_point,
 416              		.loc 1 114 0
 417 0050 C4EBC402 		rsb	r2, r4, r4, lsl #3
 418 0054 D300     		lsls	r3, r2, #3
 419 0056 0A21     		movs	r1, #10
 420 0058 D5ED000A 		vldr.32	s1, [r5]
 421 005c 0748     		ldr	r0, .L36+16
 422 005e 1844     		add	r0, r0, r3
 423 0060 FFF7FEFF 		bl	PID_Compute
 424              	.LVL42:
 425 0064 85ED040A 		vstr.32	s0, [r5, #16]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 11


 426 0068 D3E7     		b	.L32
 427              	.L35:
 428              	.LBE5:
 121:Core/Src/fsm_tasks.c ****                 }
 122:Core/Src/fsm_tasks.c ****         }
 123:Core/Src/fsm_tasks.c **** }
 429              		.loc 1 123 0
 430 006a 70BD     		pop	{r4, r5, r6, pc}
 431              	.LVL43:
 432              	.L37:
 433              		.align	2
 434              	.L36:
 435 006c 00000000 		.word	motor_arr
 436 0070 000080C0 		.word	-1065353216
 437 0074 00000000 		.word	ff_arr
 438 0078 00007042 		.word	1114636288
 439 007c 00000000 		.word	pid_arr
 440              		.cfi_endproc
 441              	.LFE130:
 443              		.section	.text.setHomePosition,"ax",%progbits
 444              		.align	1
 445              		.global	setHomePosition
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	setHomePosition:
 452              	.LFB131:
 124:Core/Src/fsm_tasks.c **** 
 125:Core/Src/fsm_tasks.c **** void setHomePosition(void)
 126:Core/Src/fsm_tasks.c **** {
 453              		.loc 1 126 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457 0000 10B5     		push	{r4, lr}
 458              	.LCFI4:
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 14, -4
 127:Core/Src/fsm_tasks.c ****         setDutyCycle(&balance_motor, 65535);
 462              		.loc 1 127 0
 463 0002 0B4C     		ldr	r4, .L42
 464 0004 4FF6FF71 		movw	r1, #65535
 465 0008 2046     		mov	r0, r4
 466 000a FFF7FEFF 		bl	setDutyCycle
 467              	.LVL44:
 128:Core/Src/fsm_tasks.c ****         setDirection(&balance_motor, DIR_CLOCKWISE);
 468              		.loc 1 128 0
 469 000e 0021     		movs	r1, #0
 470 0010 2046     		mov	r0, r4
 471 0012 FFF7FEFF 		bl	setDirection
 472              	.LVL45:
 473              	.LBB6:
 129:Core/Src/fsm_tasks.c **** 
 130:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 474              		.loc 1 130 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 12


 475 0016 0023     		movs	r3, #0
 476 0018 07E0     		b	.L39
 477              	.LVL46:
 478              	.L40:
 131:Core/Src/fsm_tasks.c ****         {
 132:Core/Src/fsm_tasks.c ****                 motor_arr[i].update_omega = HOME_POSITION_OMEGA;
 479              		.loc 1 132 0 discriminator 3
 480 001a 0649     		ldr	r1, .L42+4
 481 001c 3422     		movs	r2, #52
 482 001e 02FB0312 		mla	r2, r2, r3, r1
 483 0022 0549     		ldr	r1, .L42+8
 484 0024 1161     		str	r1, [r2, #16]	@ float
 130:Core/Src/fsm_tasks.c ****         {
 485              		.loc 1 130 0 discriminator 3
 486 0026 0133     		adds	r3, r3, #1
 487              	.LVL47:
 488 0028 DBB2     		uxtb	r3, r3
 489              	.LVL48:
 490              	.L39:
 130:Core/Src/fsm_tasks.c ****         {
 491              		.loc 1 130 0 is_stmt 0 discriminator 1
 492 002a 032B     		cmp	r3, #3
 493 002c F5D9     		bls	.L40
 494              	.LBE6:
 133:Core/Src/fsm_tasks.c ****         }
 134:Core/Src/fsm_tasks.c **** }
 495              		.loc 1 134 0 is_stmt 1
 496 002e 10BD     		pop	{r4, pc}
 497              	.L43:
 498              		.align	2
 499              	.L42:
 500 0030 00000000 		.word	balance_motor
 501 0034 00000000 		.word	motor_arr
 502 0038 000080C0 		.word	-1065353216
 503              		.cfi_endproc
 504              	.LFE131:
 506              		.section	.text.check_N_Stop,"ax",%progbits
 507              		.align	1
 508              		.global	check_N_Stop
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	check_N_Stop:
 515              	.LFB132:
 135:Core/Src/fsm_tasks.c **** 
 136:Core/Src/fsm_tasks.c **** void check_N_Stop(void)
 137:Core/Src/fsm_tasks.c **** {
 516              		.loc 1 137 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 10B5     		push	{r4, lr}
 521              	.LCFI5:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 4, -8
 524              		.cfi_offset 14, -4
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 13


 525              	.LVL49:
 526              	.LBB7:
 138:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 527              		.loc 1 138 0
 528 0002 0024     		movs	r4, #0
 529 0004 01E0     		b	.L45
 530              	.LVL50:
 531              	.L46:
 532              		.loc 1 138 0 is_stmt 0 discriminator 2
 533 0006 0134     		adds	r4, r4, #1
 534              	.LVL51:
 535 0008 E4B2     		uxtb	r4, r4
 536              	.LVL52:
 537              	.L45:
 538              		.loc 1 138 0 discriminator 1
 539 000a 032C     		cmp	r4, #3
 540 000c 18D8     		bhi	.L50
 139:Core/Src/fsm_tasks.c ****         {
 140:Core/Src/fsm_tasks.c ****                 if (int_arr[i].fhome_pos)
 541              		.loc 1 140 0 is_stmt 1
 542 000e 04EB4403 		add	r3, r4, r4, lsl #1
 543 0012 9A00     		lsls	r2, r3, #2
 544 0014 0F4B     		ldr	r3, .L52
 545 0016 1344     		add	r3, r3, r2
 546 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 547 001a 002B     		cmp	r3, #0
 548 001c F3D0     		beq	.L46
 141:Core/Src/fsm_tasks.c ****                 {
 142:Core/Src/fsm_tasks.c ****                         motor_arr[i].update_omega = 0;
 549              		.loc 1 142 0
 550 001e 0E4A     		ldr	r2, .L52+4
 551 0020 3423     		movs	r3, #52
 552 0022 03FB0423 		mla	r3, r3, r4, r2
 553 0026 0022     		movs	r2, #0
 554 0028 1A61     		str	r2, [r3, #16]	@ float
 143:Core/Src/fsm_tasks.c ****                         // resetAngle(&motor_arr[i]);
 144:Core/Src/fsm_tasks.c ****                         motor_arr[i].encoder->htim->Instance->CNT = 0;
 555              		.loc 1 144 0
 556 002a 1B6B     		ldr	r3, [r3, #48]
 557 002c 9B68     		ldr	r3, [r3, #8]
 558 002e 1B68     		ldr	r3, [r3]
 559 0030 0022     		movs	r2, #0
 560 0032 5A62     		str	r2, [r3, #36]
 145:Core/Src/fsm_tasks.c ****                         if (i == 0) {
 561              		.loc 1 145 0
 562 0034 002C     		cmp	r4, #0
 563 0036 E6D1     		bne	.L46
 146:Core/Src/fsm_tasks.c ****                                 printf("\n\n\n\n\n\n\nHere!!\n\n\n\n\n");
 564              		.loc 1 146 0
 565 0038 0848     		ldr	r0, .L52+8
 566 003a FFF7FEFF 		bl	puts
 567              	.LVL53:
 568 003e E2E7     		b	.L46
 569              	.L50:
 570              	.LBE7:
 147:Core/Src/fsm_tasks.c ****                         }
 148:Core/Src/fsm_tasks.c ****                 }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 14


 149:Core/Src/fsm_tasks.c ****         }
 150:Core/Src/fsm_tasks.c ****         if (blnc_int_arr[2].fhome_pos == 1)
 571              		.loc 1 150 0
 572 0040 074B     		ldr	r3, .L52+12
 573 0042 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 574 0044 012B     		cmp	r3, #1
 575 0046 00D0     		beq	.L51
 576              	.L44:
 151:Core/Src/fsm_tasks.c ****         {
 152:Core/Src/fsm_tasks.c ****                 setDutyCycle(&balance_motor, 0);
 153:Core/Src/fsm_tasks.c ****         }
 154:Core/Src/fsm_tasks.c **** }
 577              		.loc 1 154 0
 578 0048 10BD     		pop	{r4, pc}
 579              	.LVL54:
 580              	.L51:
 152:Core/Src/fsm_tasks.c ****         }
 581              		.loc 1 152 0
 582 004a 0021     		movs	r1, #0
 583 004c 0548     		ldr	r0, .L52+16
 584 004e FFF7FEFF 		bl	setDutyCycle
 585              	.LVL55:
 586              		.loc 1 154 0
 587 0052 F9E7     		b	.L44
 588              	.L53:
 589              		.align	2
 590              	.L52:
 591 0054 00000000 		.word	int_arr
 592 0058 00000000 		.word	motor_arr
 593 005c 00000000 		.word	.LC0
 594 0060 00000000 		.word	blnc_int_arr
 595 0064 00000000 		.word	balance_motor
 596              		.cfi_endproc
 597              	.LFE132:
 599              		.section	.text.homePositionChores,"ax",%progbits
 600              		.align	1
 601              		.global	homePositionChores
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu fpv4-sp-d16
 607              	homePositionChores:
 608              	.LFB126:
   6:Core/Src/fsm_tasks.c ****         setHomePosition();
 609              		.loc 1 6 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL56:
 614 0000 08B5     		push	{r3, lr}
 615              	.LCFI6:
 616              		.cfi_def_cfa_offset 8
 617              		.cfi_offset 3, -8
 618              		.cfi_offset 14, -4
   7:Core/Src/fsm_tasks.c ****         check_N_Stop();
 619              		.loc 1 7 0
 620 0002 FFF7FEFF 		bl	setHomePosition
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 15


 621              	.LVL57:
   8:Core/Src/fsm_tasks.c **** 	
 622              		.loc 1 8 0
 623 0006 FFF7FEFF 		bl	check_N_Stop
 624              	.LVL58:
  10:Core/Src/fsm_tasks.c **** 
 625              		.loc 1 10 0
 626 000a 08BD     		pop	{r3, pc}
 627              		.cfi_endproc
 628              	.LFE126:
 630              		.section	.text.updateOmegas,"ax",%progbits
 631              		.align	1
 632              		.global	updateOmegas
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv4-sp-d16
 638              	updateOmegas:
 639              	.LFB133:
 155:Core/Src/fsm_tasks.c **** 
 156:Core/Src/fsm_tasks.c **** void updateOmegas(void)
 157:Core/Src/fsm_tasks.c **** {
 640              		.loc 1 157 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644 0000 10B5     		push	{r4, lr}
 645              	.LCFI7:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 4, -8
 648              		.cfi_offset 14, -4
 649              	.LVL59:
 650              	.LBB8:
 158:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 651              		.loc 1 158 0
 652 0002 0024     		movs	r4, #0
 653 0004 09E0     		b	.L57
 654              	.LVL60:
 655              	.L58:
 159:Core/Src/fsm_tasks.c ****         {
 160:Core/Src/fsm_tasks.c ****                 setOmega(&motor_arr[i], motor_arr[i].update_omega);
 656              		.loc 1 160 0 discriminator 3
 657 0006 064B     		ldr	r3, .L60
 658 0008 3420     		movs	r0, #52
 659 000a 00FB0430 		mla	r0, r0, r4, r3
 660 000e 90ED040A 		vldr.32	s0, [r0, #16]
 661 0012 FFF7FEFF 		bl	setOmega
 662              	.LVL61:
 158:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 663              		.loc 1 158 0 discriminator 3
 664 0016 0134     		adds	r4, r4, #1
 665              	.LVL62:
 666 0018 E4B2     		uxtb	r4, r4
 667              	.LVL63:
 668              	.L57:
 158:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 669              		.loc 1 158 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 16


 670 001a 032C     		cmp	r4, #3
 671 001c F3D9     		bls	.L58
 672              	.LBE8:
 161:Core/Src/fsm_tasks.c ****         }
 162:Core/Src/fsm_tasks.c **** }
 673              		.loc 1 162 0 is_stmt 1
 674 001e 10BD     		pop	{r4, pc}
 675              	.LVL64:
 676              	.L61:
 677              		.align	2
 678              	.L60:
 679 0020 00000000 		.word	motor_arr
 680              		.cfi_endproc
 681              	.LFE133:
 683              		.section	.text.resetAngles,"ax",%progbits
 684              		.align	1
 685              		.global	resetAngles
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu fpv4-sp-d16
 691              	resetAngles:
 692              	.LFB134:
 163:Core/Src/fsm_tasks.c **** 
 164:Core/Src/fsm_tasks.c **** void resetAngles(void)
 165:Core/Src/fsm_tasks.c **** {
 693              		.loc 1 165 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697 0000 10B5     		push	{r4, lr}
 698              	.LCFI8:
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 4, -8
 701              		.cfi_offset 14, -4
 702              	.LVL65:
 703              	.LBB9:
 166:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 704              		.loc 1 166 0
 705 0002 0024     		movs	r4, #0
 706 0004 07E0     		b	.L63
 707              	.LVL66:
 708              	.L64:
 167:Core/Src/fsm_tasks.c ****         {
 168:Core/Src/fsm_tasks.c ****                 resetAngle(&motor_arr[i]);
 709              		.loc 1 168 0 discriminator 3
 710 0006 3420     		movs	r0, #52
 711 0008 044B     		ldr	r3, .L66
 712 000a 00FB0430 		mla	r0, r0, r4, r3
 713 000e FFF7FEFF 		bl	resetAngle
 714              	.LVL67:
 166:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 715              		.loc 1 166 0 discriminator 3
 716 0012 0134     		adds	r4, r4, #1
 717              	.LVL68:
 718 0014 E4B2     		uxtb	r4, r4
 719              	.LVL69:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 17


 720              	.L63:
 166:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 721              		.loc 1 166 0 is_stmt 0 discriminator 1
 722 0016 032C     		cmp	r4, #3
 723 0018 F5D9     		bls	.L64
 724              	.LBE9:
 169:Core/Src/fsm_tasks.c ****         }
 170:Core/Src/fsm_tasks.c **** }
 725              		.loc 1 170 0 is_stmt 1
 726 001a 10BD     		pop	{r4, pc}
 727              	.LVL70:
 728              	.L67:
 729              		.align	2
 730              	.L66:
 731 001c 00000000 		.word	motor_arr
 732              		.cfi_endproc
 733              	.LFE134:
 735              		.section	.text.resetPID,"ax",%progbits
 736              		.align	1
 737              		.global	resetPID
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 741              		.fpu fpv4-sp-d16
 743              	resetPID:
 744              	.LFB135:
 171:Core/Src/fsm_tasks.c **** 
 172:Core/Src/fsm_tasks.c **** void resetPID(void)
 173:Core/Src/fsm_tasks.c **** {
 745              		.loc 1 173 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749 0000 10B5     		push	{r4, lr}
 750              	.LCFI9:
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 4, -8
 753              		.cfi_offset 14, -4
 754              	.LVL71:
 755              	.LBB10:
 174:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 756              		.loc 1 174 0
 757 0002 0024     		movs	r4, #0
 758 0004 08E0     		b	.L69
 759              	.LVL72:
 760              	.L70:
 175:Core/Src/fsm_tasks.c ****         {
 176:Core/Src/fsm_tasks.c ****                 PID_resetParams(&pid_arr[i]);
 761              		.loc 1 176 0 discriminator 3
 762 0006 C4EBC402 		rsb	r2, r4, r4, lsl #3
 763 000a D300     		lsls	r3, r2, #3
 764 000c 0448     		ldr	r0, .L72
 765 000e 1844     		add	r0, r0, r3
 766 0010 FFF7FEFF 		bl	PID_resetParams
 767              	.LVL73:
 174:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 768              		.loc 1 174 0 discriminator 3
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 18


 769 0014 0134     		adds	r4, r4, #1
 770              	.LVL74:
 771 0016 E4B2     		uxtb	r4, r4
 772              	.LVL75:
 773              	.L69:
 174:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 774              		.loc 1 174 0 is_stmt 0 discriminator 1
 775 0018 032C     		cmp	r4, #3
 776 001a F4D9     		bls	.L70
 777              	.LBE10:
 177:Core/Src/fsm_tasks.c ****         }
 178:Core/Src/fsm_tasks.c **** }
 778              		.loc 1 178 0 is_stmt 1
 779 001c 10BD     		pop	{r4, pc}
 780              	.LVL76:
 781              	.L73:
 782 001e 00BF     		.align	2
 783              	.L72:
 784 0020 00000000 		.word	pid_arr
 785              		.cfi_endproc
 786              	.LFE135:
 788              		.section	.text.omegaReset,"ax",%progbits
 789              		.align	1
 790              		.global	omegaReset
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv4-sp-d16
 796              	omegaReset:
 797              	.LFB137:
 179:Core/Src/fsm_tasks.c **** 
 180:Core/Src/fsm_tasks.c **** void stateReset(struct fsmStr *fsm, const enum FSM_States *state)
 181:Core/Src/fsm_tasks.c **** {
 182:Core/Src/fsm_tasks.c ****         resetPID();
 183:Core/Src/fsm_tasks.c ****         resetAngles();
 184:Core/Src/fsm_tasks.c ****         omegaReset();
 185:Core/Src/fsm_tasks.c ****         resetIntState(fsm, state);
 186:Core/Src/fsm_tasks.c ****         feedForwardRestart();
 187:Core/Src/fsm_tasks.c **** }
 188:Core/Src/fsm_tasks.c **** 
 189:Core/Src/fsm_tasks.c **** void omegaReset(void)
 190:Core/Src/fsm_tasks.c **** {
 798              		.loc 1 190 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 803              	.LVL77:
 804              	.LBB11:
 191:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 805              		.loc 1 191 0
 806 0000 0023     		movs	r3, #0
 807 0002 07E0     		b	.L75
 808              	.LVL78:
 809              	.L76:
 192:Core/Src/fsm_tasks.c ****         {
 193:Core/Src/fsm_tasks.c ****                 motor_arr[i].update_omega = 0;
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 19


 810              		.loc 1 193 0 discriminator 3
 811 0004 0549     		ldr	r1, .L77
 812 0006 3422     		movs	r2, #52
 813 0008 02FB0312 		mla	r2, r2, r3, r1
 814 000c 0021     		movs	r1, #0
 815 000e 1161     		str	r1, [r2, #16]	@ float
 191:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 816              		.loc 1 191 0 discriminator 3
 817 0010 0133     		adds	r3, r3, #1
 818              	.LVL79:
 819 0012 DBB2     		uxtb	r3, r3
 820              	.LVL80:
 821              	.L75:
 191:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 822              		.loc 1 191 0 is_stmt 0 discriminator 1
 823 0014 032B     		cmp	r3, #3
 824 0016 F5D9     		bls	.L76
 825              	.LBE11:
 194:Core/Src/fsm_tasks.c ****         }
 195:Core/Src/fsm_tasks.c **** }
 826              		.loc 1 195 0 is_stmt 1
 827 0018 7047     		bx	lr
 828              	.L78:
 829 001a 00BF     		.align	2
 830              	.L77:
 831 001c 00000000 		.word	motor_arr
 832              		.cfi_endproc
 833              	.LFE137:
 835              		.section	.text.feedForwardRestart,"ax",%progbits
 836              		.align	1
 837              		.global	feedForwardRestart
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 841              		.fpu fpv4-sp-d16
 843              	feedForwardRestart:
 844              	.LFB138:
 196:Core/Src/fsm_tasks.c **** 
 197:Core/Src/fsm_tasks.c **** void feedForwardRestart(void)
 198:Core/Src/fsm_tasks.c **** {
 845              		.loc 1 198 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849 0000 10B5     		push	{r4, lr}
 850              	.LCFI10:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 854              	.LVL81:
 855              	.LBB12:
 199:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 856              		.loc 1 199 0
 857 0002 0024     		movs	r4, #0
 858 0004 08E0     		b	.L80
 859              	.LVL82:
 860              	.L81:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 20


 200:Core/Src/fsm_tasks.c ****         {
 201:Core/Src/fsm_tasks.c ****                 ffRestart(&ff_arr[i]);
 861              		.loc 1 201 0 discriminator 3
 862 0006 C4EB0412 		rsb	r2, r4, r4, lsl #4
 863 000a 9300     		lsls	r3, r2, #2
 864 000c 0448     		ldr	r0, .L83
 865 000e 1844     		add	r0, r0, r3
 866 0010 FFF7FEFF 		bl	ffRestart
 867              	.LVL83:
 199:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 868              		.loc 1 199 0 discriminator 3
 869 0014 0134     		adds	r4, r4, #1
 870              	.LVL84:
 871 0016 E4B2     		uxtb	r4, r4
 872              	.LVL85:
 873              	.L80:
 199:Core/Src/fsm_tasks.c ****         for (uint8_t i = 0; i < 4; i++)
 874              		.loc 1 199 0 is_stmt 0 discriminator 1
 875 0018 032C     		cmp	r4, #3
 876 001a F4D9     		bls	.L81
 877              	.LBE12:
 202:Core/Src/fsm_tasks.c ****         }
 203:Core/Src/fsm_tasks.c **** }
 878              		.loc 1 203 0 is_stmt 1
 879 001c 10BD     		pop	{r4, pc}
 880              	.LVL86:
 881              	.L84:
 882 001e 00BF     		.align	2
 883              	.L83:
 884 0020 00000000 		.word	ff_arr
 885              		.cfi_endproc
 886              	.LFE138:
 888              		.section	.text.resetIntState,"ax",%progbits
 889              		.align	1
 890              		.global	resetIntState
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 894              		.fpu fpv4-sp-d16
 896              	resetIntState:
 897              	.LFB139:
 204:Core/Src/fsm_tasks.c **** 
 205:Core/Src/fsm_tasks.c **** void resetIntState(struct fsmStr *fsm,const enum FSM_States *state)
 206:Core/Src/fsm_tasks.c **** {
 898              		.loc 1 206 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903              	.LVL87:
 207:Core/Src/fsm_tasks.c ****         switch(*state)
 904              		.loc 1 207 0
 905 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 906 0002 013B     		subs	r3, r3, #1
 907 0004 032B     		cmp	r3, #3
 908 0006 2AD8     		bhi	.L85
 909 0008 DFE803F0 		tbb	[pc, r3]
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 21


 910              	.L88:
 911 000c 02       		.byte	(.L87-.L88)/2
 912 000d 0C       		.byte	(.L89-.L88)/2
 913 000e 16       		.byte	(.L90-.L88)/2
 914 000f 20       		.byte	(.L91-.L88)/2
 915              		.p2align 1
 916              	.L87:
 208:Core/Src/fsm_tasks.c ****         {
 209:Core/Src/fsm_tasks.c ****                 case HOME_POSITION:
 210:Core/Src/fsm_tasks.c ****                         break;
 211:Core/Src/fsm_tasks.c **** 
 212:Core/Src/fsm_tasks.c **** 
 213:Core/Src/fsm_tasks.c ****                 case PHASE_1:
 214:Core/Src/fsm_tasks.c ****                         int_arr[0].intState = STATE_B;
 917              		.loc 1 214 0
 918 0010 134B     		ldr	r3, .L92
 919 0012 0122     		movs	r2, #1
 920 0014 9A72     		strb	r2, [r3, #10]
 215:Core/Src/fsm_tasks.c ****                         int_arr[1].intState = STATE_A;
 921              		.loc 1 215 0
 922 0016 0022     		movs	r2, #0
 923 0018 9A75     		strb	r2, [r3, #22]
 216:Core/Src/fsm_tasks.c ****                         int_arr[2].intState = STATE_A;
 924              		.loc 1 216 0
 925 001a 83F82220 		strb	r2, [r3, #34]
 217:Core/Src/fsm_tasks.c ****                         int_arr[3].intState = STATE_A;
 926              		.loc 1 217 0
 927 001e 83F82E20 		strb	r2, [r3, #46]
 218:Core/Src/fsm_tasks.c ****                         break;
 928              		.loc 1 218 0
 929 0022 7047     		bx	lr
 930              	.L89:
 219:Core/Src/fsm_tasks.c **** 
 220:Core/Src/fsm_tasks.c ****                 case PHASE_2:
 221:Core/Src/fsm_tasks.c ****                         int_arr[0].intState = STATE_A;
 931              		.loc 1 221 0
 932 0024 0E4B     		ldr	r3, .L92
 933 0026 0022     		movs	r2, #0
 934 0028 9A72     		strb	r2, [r3, #10]
 222:Core/Src/fsm_tasks.c ****                         int_arr[1].intState = STATE_B;
 935              		.loc 1 222 0
 936 002a 0121     		movs	r1, #1
 937              	.LVL88:
 938 002c 9975     		strb	r1, [r3, #22]
 223:Core/Src/fsm_tasks.c ****                         int_arr[2].intState = STATE_A;
 939              		.loc 1 223 0
 940 002e 83F82220 		strb	r2, [r3, #34]
 224:Core/Src/fsm_tasks.c ****                         int_arr[3].intState = STATE_A;
 941              		.loc 1 224 0
 942 0032 83F82E20 		strb	r2, [r3, #46]
 225:Core/Src/fsm_tasks.c ****                         break;
 943              		.loc 1 225 0
 944 0036 7047     		bx	lr
 945              	.LVL89:
 946              	.L90:
 226:Core/Src/fsm_tasks.c **** 
 227:Core/Src/fsm_tasks.c ****                 case PHASE_3:
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 22


 228:Core/Src/fsm_tasks.c ****                         int_arr[0].intState = STATE_A;
 947              		.loc 1 228 0
 948 0038 094B     		ldr	r3, .L92
 949 003a 0022     		movs	r2, #0
 950 003c 9A72     		strb	r2, [r3, #10]
 229:Core/Src/fsm_tasks.c ****                         int_arr[1].intState = STATE_A;
 951              		.loc 1 229 0
 952 003e 9A75     		strb	r2, [r3, #22]
 230:Core/Src/fsm_tasks.c ****                         int_arr[2].intState = STATE_B;
 953              		.loc 1 230 0
 954 0040 0121     		movs	r1, #1
 955              	.LVL90:
 956 0042 83F82210 		strb	r1, [r3, #34]
 231:Core/Src/fsm_tasks.c ****                         int_arr[3].intState = STATE_A;
 957              		.loc 1 231 0
 958 0046 83F82E20 		strb	r2, [r3, #46]
 232:Core/Src/fsm_tasks.c ****                         break;
 959              		.loc 1 232 0
 960 004a 7047     		bx	lr
 961              	.LVL91:
 962              	.L91:
 233:Core/Src/fsm_tasks.c **** 
 234:Core/Src/fsm_tasks.c ****                 case PHASE_4:
 235:Core/Src/fsm_tasks.c ****                         int_arr[0].intState = STATE_A;
 963              		.loc 1 235 0
 964 004c 044B     		ldr	r3, .L92
 965 004e 0022     		movs	r2, #0
 966 0050 9A72     		strb	r2, [r3, #10]
 236:Core/Src/fsm_tasks.c ****                         int_arr[1].intState = STATE_A;
 967              		.loc 1 236 0
 968 0052 9A75     		strb	r2, [r3, #22]
 237:Core/Src/fsm_tasks.c ****                         int_arr[2].intState = STATE_A;
 969              		.loc 1 237 0
 970 0054 83F82220 		strb	r2, [r3, #34]
 238:Core/Src/fsm_tasks.c ****                         int_arr[3].intState = STATE_B;
 971              		.loc 1 238 0
 972 0058 0122     		movs	r2, #1
 973 005a 83F82E20 		strb	r2, [r3, #46]
 974              	.L85:
 239:Core/Src/fsm_tasks.c ****                         break;
 240:Core/Src/fsm_tasks.c ****         }
 241:Core/Src/fsm_tasks.c **** }
 975              		.loc 1 241 0
 976 005e 7047     		bx	lr
 977              	.L93:
 978              		.align	2
 979              	.L92:
 980 0060 00000000 		.word	int_arr
 981              		.cfi_endproc
 982              	.LFE139:
 984              		.section	.text.stateReset,"ax",%progbits
 985              		.align	1
 986              		.global	stateReset
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 23


 992              	stateReset:
 993              	.LFB136:
 181:Core/Src/fsm_tasks.c ****         resetPID();
 994              		.loc 1 181 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              	.LVL92:
 999 0000 38B5     		push	{r3, r4, r5, lr}
 1000              	.LCFI11:
 1001              		.cfi_def_cfa_offset 16
 1002              		.cfi_offset 3, -16
 1003              		.cfi_offset 4, -12
 1004              		.cfi_offset 5, -8
 1005              		.cfi_offset 14, -4
 1006 0002 0446     		mov	r4, r0
 1007 0004 0D46     		mov	r5, r1
 182:Core/Src/fsm_tasks.c ****         resetAngles();
 1008              		.loc 1 182 0
 1009 0006 FFF7FEFF 		bl	resetPID
 1010              	.LVL93:
 183:Core/Src/fsm_tasks.c ****         omegaReset();
 1011              		.loc 1 183 0
 1012 000a FFF7FEFF 		bl	resetAngles
 1013              	.LVL94:
 184:Core/Src/fsm_tasks.c ****         resetIntState(fsm, state);
 1014              		.loc 1 184 0
 1015 000e FFF7FEFF 		bl	omegaReset
 1016              	.LVL95:
 185:Core/Src/fsm_tasks.c ****         feedForwardRestart();
 1017              		.loc 1 185 0
 1018 0012 2946     		mov	r1, r5
 1019 0014 2046     		mov	r0, r4
 1020 0016 FFF7FEFF 		bl	resetIntState
 1021              	.LVL96:
 186:Core/Src/fsm_tasks.c **** }
 1022              		.loc 1 186 0
 1023 001a FFF7FEFF 		bl	feedForwardRestart
 1024              	.LVL97:
 187:Core/Src/fsm_tasks.c **** 
 1025              		.loc 1 187 0
 1026 001e 38BD     		pop	{r3, r4, r5, pc}
 1027              		.cfi_endproc
 1028              	.LFE136:
 1030              		.section	.data.gIs_First,"aw",%progbits
 1031              		.set	.LANCHOR0,. + 0
 1034              	gIs_First:
 1035 0000 01       		.byte	1
 1036              		.section	.rodata.check_N_Stop.str1.4,"aMS",%progbits,1
 1037              		.align	2
 1038              	.LC0:
 1039 0000 0A0A0A0A 		.ascii	"\012\012\012\012\012\012\012Here!!\012\012\012\012\000"
 1039      0A0A0A48 
 1039      65726521 
 1039      210A0A0A 
 1039      0A00
 1040              		.text
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 24


 1041              	.Letext0:
 1042              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1043              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1044              		.file 4 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core
 1045              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 1046              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 1047              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1048              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1049              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1050              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1051              		.file 11 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 1052              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 1053              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 1054              		.file 14 "Core/Inc/feed_forward.h"
 1055              		.file 15 "Core/Inc\\periphs/tim.h"
 1056              		.file 16 "Core/Inc/pneumatic.h"
 1057              		.file 17 "Core/Inc/interrupt.h"
 1058              		.file 18 "Core/Inc/encoder.h"
 1059              		.file 19 "Core/Inc/motor.h"
 1060              		.file 20 "Core/Inc/pid.h"
 1061              		.file 21 "Core/Inc/fsm.h"
 1062              		.file 22 "Core/Inc/robo_init.h"
 1063              		.file 23 "<built-in>"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 fsm_tasks.c
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:18     .text.phaseOneChores:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:25     .text.phaseOneChores:00000000 phaseOneChores
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:133    .text.phaseOneChores:00000094 $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:144    .text.phaseTwoChores:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:151    .text.phaseTwoChores:00000000 phaseTwoChores
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:235    .text.phaseTwoChores:0000006c $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:244    .text.phaseThreeChores:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:251    .text.phaseThreeChores:00000000 phaseThreeChores
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:335    .text.phaseThreeChores:0000006c $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:344    .text.phaseFourChores:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:351    .text.phaseFourChores:00000000 phaseFourChores
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:435    .text.phaseFourChores:0000006c $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:444    .text.setHomePosition:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:451    .text.setHomePosition:00000000 setHomePosition
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:500    .text.setHomePosition:00000030 $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:507    .text.check_N_Stop:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:514    .text.check_N_Stop:00000000 check_N_Stop
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:591    .text.check_N_Stop:00000054 $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:600    .text.homePositionChores:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:607    .text.homePositionChores:00000000 homePositionChores
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:631    .text.updateOmegas:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:638    .text.updateOmegas:00000000 updateOmegas
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:679    .text.updateOmegas:00000020 $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:684    .text.resetAngles:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:691    .text.resetAngles:00000000 resetAngles
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:731    .text.resetAngles:0000001c $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:736    .text.resetPID:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:743    .text.resetPID:00000000 resetPID
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:784    .text.resetPID:00000020 $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:789    .text.omegaReset:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:796    .text.omegaReset:00000000 omegaReset
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:831    .text.omegaReset:0000001c $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:836    .text.feedForwardRestart:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:843    .text.feedForwardRestart:00000000 feedForwardRestart
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:884    .text.feedForwardRestart:00000020 $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:889    .text.resetIntState:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:896    .text.resetIntState:00000000 resetIntState
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:911    .text.resetIntState:0000000c $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:915    .text.resetIntState:00000010 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:980    .text.resetIntState:00000060 $d
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:985    .text.stateReset:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:992    .text.stateReset:00000000 stateReset
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:1034   .data.gIs_First:00000000 gIs_First
C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s:1037   .rodata.check_N_Stop.str1.4:00000000 $d

UNDEFINED SYMBOLS
ffSetAngle
getAngle
getOmega
ffGenerate
PID_Compute
motor_arr
int_arr
ff_arr
pid_arr
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccf3BCNC.s 			page 26


setDutyCycle
setDirection
balance_motor
puts
blnc_int_arr
setOmega
resetAngle
PID_resetParams
ffRestart
