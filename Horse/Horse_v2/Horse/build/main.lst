ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB127:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.c ****   * inserted by the user or by software development tools
  11:Core/Src/main.c ****   * are owned by their respective copyright owners.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.c ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.c ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.c ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.c ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.c ****   *      without specific prior written permission.
  25:Core/Src/main.c ****   *
  26:Core/Src/main.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 2


  32:Core/Src/main.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.c ****   *
  37:Core/Src/main.c ****   ******************************************************************************
  38:Core/Src/main.c ****   */
  39:Core/Src/main.c **** /* USER CODE END Header */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  42:Core/Src/main.c **** #include "main.h"
  43:Core/Src/main.c **** #include "tim.h"
  44:Core/Src/main.c **** #include "usart.h"
  45:Core/Src/main.c **** #include "gpio.h"
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  49:Core/Src/main.c **** #include "robo_init.h"
  50:Core/Src/main.c **** #include "fsm_tasks.h"
  51:Core/Src/main.c **** /* USER CODE END Includes */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PTD */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN PD */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PD */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN PM */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PM */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PV */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  81:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  82:Core/Src/main.c **** extern struct pneumaticStr pneu_arr[4];
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 3


  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
  91:Core/Src/main.c ****         /* USER CODE BEGIN 1 */
  92:Core/Src/main.c ****         
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****         uint32_t update_tick = HAL_GetTick();  
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****         /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****         /* MCU Configuration----------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****         HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****         /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****         /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****         /* Configure the system clock */
 108:Core/Src/main.c ****         SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****         /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****         /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****         /* Initialize all configured peripherals */
 115:Core/Src/main.c ****         MX_GPIO_Init();
 116:Core/Src/main.c ****         MX_TIM8_Init();
 117:Core/Src/main.c ****         MX_TIM1_Init();
 118:Core/Src/main.c ****         MX_TIM3_Init();
 119:Core/Src/main.c ****         MX_TIM4_Init();
 120:Core/Src/main.c ****         MX_TIM2_Init();
 121:Core/Src/main.c ****         MX_USART3_UART_Init();
 122:Core/Src/main.c ****         MX_TIM5_Init();
 123:Core/Src/main.c ****         /* USER CODE BEGIN 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****         roboInit();
 126:Core/Src/main.c ****         enum FSM_States phase = HOME_POSITION;
 127:Core/Src/main.c ****         printf("WELCOME \n");
 128:Core/Src/main.c ****         
 129:Core/Src/main.c ****         // encoderInit();
 130:Core/Src/main.c ****         /* USER CODE END 2 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****         /* Infinite loop */
 133:Core/Src/main.c ****         /* USER CODE BEGIN WHILE */
 134:Core/Src/main.c ****         uint8_t switch_pressed = 0;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****         while (1)
 137:Core/Src/main.c ****         {
 138:Core/Src/main.c **** 		
 139:Core/Src/main.c **** 		if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) && !switch_pressed)
 140:Core/Src/main.c ****                 {
 141:Core/Src/main.c ****                         switch_pressed = 1;
 142:Core/Src/main.c ****                         for (uint8_t i = 0; i < 0; i++)
 143:Core/Src/main.c ****                         {
 144:Core/Src/main.c ****                                 int_arr[i].intState = STATE_B;
 145:Core/Src/main.c ****                         }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 4


 146:Core/Src/main.c ****                         phase = PHASE_1;
 147:Core/Src/main.c ****                 }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****                 else if ((HAL_GetTick() - update_tick) > 10)
 150:Core/Src/main.c ****                 {
 151:Core/Src/main.c ****                         update_tick = HAL_GetTick();
 152:Core/Src/main.c ****                         startFSM(&fsm, &phase);
 153:Core/Src/main.c ****                         updateOmegas();
 154:Core/Src/main.c ****                 }
 155:Core/Src/main.c ****                 /* USER CODE END WHILE */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****                 /* USER CODE BEGIN 3 */
 158:Core/Src/main.c ****         }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****         /* USER CODE END 3 */
 161:Core/Src/main.c **** }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief System Clock Configuration
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void SystemClock_Config(void)
 168:Core/Src/main.c **** {
  28              		.loc 1 168 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 95B0     		sub	sp, sp, #84
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 96
 169:Core/Src/main.c ****         RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 169 0
  42 0004 3022     		movs	r2, #48
  43 0006 0021     		movs	r1, #0
  44 0008 08A8     		add	r0, sp, #32
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 170:Core/Src/main.c ****         RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 170 0
  48 000e 0024     		movs	r4, #0
  49 0010 0394     		str	r4, [sp, #12]
  50 0012 0494     		str	r4, [sp, #16]
  51 0014 0594     		str	r4, [sp, #20]
  52 0016 0694     		str	r4, [sp, #24]
  53 0018 0794     		str	r4, [sp, #28]
  54              	.LBB2:
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****         /**Configure the main internal regulator output voltage 
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****         __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 174 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 5


  56 001a 0194     		str	r4, [sp, #4]
  57 001c 1B4B     		ldr	r3, .L3
  58 001e 1A6C     		ldr	r2, [r3, #64]
  59 0020 42F08052 		orr	r2, r2, #268435456
  60 0024 1A64     		str	r2, [r3, #64]
  61 0026 1B6C     		ldr	r3, [r3, #64]
  62 0028 03F08053 		and	r3, r3, #268435456
  63 002c 0193     		str	r3, [sp, #4]
  64 002e 019B     		ldr	r3, [sp, #4]
  65              	.LBE2:
  66              	.LBB3:
 175:Core/Src/main.c ****         __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  67              		.loc 1 175 0
  68 0030 0294     		str	r4, [sp, #8]
  69 0032 174B     		ldr	r3, .L3+4
  70 0034 1A68     		ldr	r2, [r3]
  71 0036 42F48042 		orr	r2, r2, #16384
  72 003a 1A60     		str	r2, [r3]
  73 003c 1B68     		ldr	r3, [r3]
  74 003e 03F48043 		and	r3, r3, #16384
  75 0042 0293     		str	r3, [sp, #8]
  76 0044 029B     		ldr	r3, [sp, #8]
  77              	.LBE3:
 176:Core/Src/main.c ****         /**Initializes the CPU, AHB and APB busses clocks 
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  78              		.loc 1 178 0
  79 0046 0123     		movs	r3, #1
  80 0048 0893     		str	r3, [sp, #32]
 179:Core/Src/main.c ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  81              		.loc 1 179 0
  82 004a 4FF48033 		mov	r3, #65536
  83 004e 0993     		str	r3, [sp, #36]
 180:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  84              		.loc 1 180 0
  85 0050 0225     		movs	r5, #2
  86 0052 0E95     		str	r5, [sp, #56]
 181:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  87              		.loc 1 181 0
  88 0054 4FF48003 		mov	r3, #4194304
  89 0058 0F93     		str	r3, [sp, #60]
 182:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLM = 4;
  90              		.loc 1 182 0
  91 005a 0423     		movs	r3, #4
  92 005c 1093     		str	r3, [sp, #64]
 183:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLN = 168;
  93              		.loc 1 183 0
  94 005e A822     		movs	r2, #168
  95 0060 1192     		str	r2, [sp, #68]
 184:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  96              		.loc 1 184 0
  97 0062 1295     		str	r5, [sp, #72]
 185:Core/Src/main.c ****         RCC_OscInitStruct.PLL.PLLQ = 4;
  98              		.loc 1 185 0
  99 0064 1393     		str	r3, [sp, #76]
 186:Core/Src/main.c ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 100              		.loc 1 186 0
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 6


 101 0066 08A8     		add	r0, sp, #32
 102 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 103              	.LVL1:
 187:Core/Src/main.c ****         {
 188:Core/Src/main.c ****                 Error_Handler();
 189:Core/Src/main.c ****         }
 190:Core/Src/main.c ****         /**Initializes the CPU, AHB and APB busses clocks 
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCL
 104              		.loc 1 192 0
 105 006c 0F23     		movs	r3, #15
 106 006e 0393     		str	r3, [sp, #12]
 193:Core/Src/main.c ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 107              		.loc 1 193 0
 108 0070 0495     		str	r5, [sp, #16]
 194:Core/Src/main.c ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 109              		.loc 1 194 0
 110 0072 0594     		str	r4, [sp, #20]
 195:Core/Src/main.c ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 111              		.loc 1 195 0
 112 0074 4FF4A053 		mov	r3, #5120
 113 0078 0693     		str	r3, [sp, #24]
 196:Core/Src/main.c ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 114              		.loc 1 196 0
 115 007a 4FF48053 		mov	r3, #4096
 116 007e 0793     		str	r3, [sp, #28]
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 117              		.loc 1 198 0
 118 0080 0521     		movs	r1, #5
 119 0082 03A8     		add	r0, sp, #12
 120 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 121              	.LVL2:
 199:Core/Src/main.c ****         {
 200:Core/Src/main.c ****                 Error_Handler();
 201:Core/Src/main.c ****         }
 202:Core/Src/main.c **** }
 122              		.loc 1 202 0
 123 0088 15B0     		add	sp, sp, #84
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 12
 126              		@ sp needed
 127 008a 30BD     		pop	{r4, r5, pc}
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 008c 00380240 		.word	1073887232
 132 0090 00700040 		.word	1073770496
 133              		.cfi_endproc
 134              	.LFE127:
 136              		.section	.text.main,"ax",%progbits
 137              		.align	1
 138              		.global	main
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 7


 144              	main:
 145              	.LFB126:
  90:Core/Src/main.c ****         /* USER CODE BEGIN 1 */
 146              		.loc 1 90 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150 0000 30B5     		push	{r4, r5, lr}
 151              	.LCFI3:
 152              		.cfi_def_cfa_offset 12
 153              		.cfi_offset 4, -12
 154              		.cfi_offset 5, -8
 155              		.cfi_offset 14, -4
 156 0002 83B0     		sub	sp, sp, #12
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 24
  94:Core/Src/main.c **** 
 159              		.loc 1 94 0
 160 0004 FFF7FEFF 		bl	HAL_GetTick
 161              	.LVL3:
 162 0008 0546     		mov	r5, r0
 163              	.LVL4:
 101:Core/Src/main.c **** 
 164              		.loc 1 101 0
 165 000a FFF7FEFF 		bl	HAL_Init
 166              	.LVL5:
 108:Core/Src/main.c **** 
 167              		.loc 1 108 0
 168 000e FFF7FEFF 		bl	SystemClock_Config
 169              	.LVL6:
 115:Core/Src/main.c ****         MX_TIM8_Init();
 170              		.loc 1 115 0
 171 0012 FFF7FEFF 		bl	MX_GPIO_Init
 172              	.LVL7:
 116:Core/Src/main.c ****         MX_TIM1_Init();
 173              		.loc 1 116 0
 174 0016 FFF7FEFF 		bl	MX_TIM8_Init
 175              	.LVL8:
 117:Core/Src/main.c ****         MX_TIM3_Init();
 176              		.loc 1 117 0
 177 001a FFF7FEFF 		bl	MX_TIM1_Init
 178              	.LVL9:
 118:Core/Src/main.c ****         MX_TIM4_Init();
 179              		.loc 1 118 0
 180 001e FFF7FEFF 		bl	MX_TIM3_Init
 181              	.LVL10:
 119:Core/Src/main.c ****         MX_TIM2_Init();
 182              		.loc 1 119 0
 183 0022 FFF7FEFF 		bl	MX_TIM4_Init
 184              	.LVL11:
 120:Core/Src/main.c ****         MX_USART3_UART_Init();
 185              		.loc 1 120 0
 186 0026 FFF7FEFF 		bl	MX_TIM2_Init
 187              	.LVL12:
 121:Core/Src/main.c ****         MX_TIM5_Init();
 188              		.loc 1 121 0
 189 002a FFF7FEFF 		bl	MX_USART3_UART_Init
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 8


 190              	.LVL13:
 122:Core/Src/main.c ****         /* USER CODE BEGIN 2 */
 191              		.loc 1 122 0
 192 002e FFF7FEFF 		bl	MX_TIM5_Init
 193              	.LVL14:
 125:Core/Src/main.c ****         enum FSM_States phase = HOME_POSITION;
 194              		.loc 1 125 0
 195 0032 FFF7FEFF 		bl	roboInit
 196              	.LVL15:
 126:Core/Src/main.c ****         printf("WELCOME \n");
 197              		.loc 1 126 0
 198 0036 0024     		movs	r4, #0
 199 0038 8DF80740 		strb	r4, [sp, #7]
 127:Core/Src/main.c ****         
 200              		.loc 1 127 0
 201 003c 0F48     		ldr	r0, .L11
 202 003e FFF7FEFF 		bl	puts
 203              	.LVL16:
 204 0042 04E0     		b	.L6
 205              	.LVL17:
 206              	.L7:
 149:Core/Src/main.c ****                 {
 207              		.loc 1 149 0
 208 0044 FFF7FEFF 		bl	HAL_GetTick
 209              	.LVL18:
 210 0048 401B     		subs	r0, r0, r5
 211 004a 0A28     		cmp	r0, #10
 212 004c 0BD8     		bhi	.L10
 213              	.LVL19:
 214              	.L6:
 139:Core/Src/main.c ****                 {
 215              		.loc 1 139 0
 216 004e 0121     		movs	r1, #1
 217 0050 0B48     		ldr	r0, .L11+4
 218 0052 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 219              	.LVL20:
 220 0056 0028     		cmp	r0, #0
 221 0058 F4D0     		beq	.L7
 139:Core/Src/main.c ****                 {
 222              		.loc 1 139 0 is_stmt 0 discriminator 1
 223 005a 002C     		cmp	r4, #0
 224 005c F2D1     		bne	.L7
 225              	.LVL21:
 146:Core/Src/main.c ****                 }
 226              		.loc 1 146 0 is_stmt 1
 227 005e 0124     		movs	r4, #1
 228 0060 8DF80740 		strb	r4, [sp, #7]
 229 0064 F3E7     		b	.L6
 230              	.LVL22:
 231              	.L10:
 151:Core/Src/main.c ****                         startFSM(&fsm, &phase);
 232              		.loc 1 151 0
 233 0066 FFF7FEFF 		bl	HAL_GetTick
 234              	.LVL23:
 235 006a 0546     		mov	r5, r0
 236              	.LVL24:
 152:Core/Src/main.c ****                         updateOmegas();
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 9


 237              		.loc 1 152 0
 238 006c 0DF10701 		add	r1, sp, #7
 239 0070 0448     		ldr	r0, .L11+8
 240              	.LVL25:
 241 0072 FFF7FEFF 		bl	startFSM
 242              	.LVL26:
 153:Core/Src/main.c ****                 }
 243              		.loc 1 153 0
 244 0076 FFF7FEFF 		bl	updateOmegas
 245              	.LVL27:
 246 007a E8E7     		b	.L6
 247              	.L12:
 248              		.align	2
 249              	.L11:
 250 007c 00000000 		.word	.LC0
 251 0080 00000240 		.word	1073872896
 252 0084 00000000 		.word	fsm
 253              		.cfi_endproc
 254              	.LFE126:
 256              		.section	.text.Error_Handler,"ax",%progbits
 257              		.align	1
 258              		.global	Error_Handler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv4-sp-d16
 264              	Error_Handler:
 265              	.LFB128:
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE END 4 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /**
 209:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 210:Core/Src/main.c ****   * @retval None
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c **** void Error_Handler(void)
 213:Core/Src/main.c **** {
 266              		.loc 1 213 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 214:Core/Src/main.c ****         /* USER CODE BEGIN Error_Handler_Debug */
 215:Core/Src/main.c ****         /* User can add his own implementation to report the HAL error return state */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****         /* USER CODE END Error_Handler_Debug */
 218:Core/Src/main.c **** }
 271              		.loc 1 218 0
 272 0000 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE128:
 276              		.section	.text._Error_Handler,"ax",%progbits
 277              		.align	1
 278              		.global	_Error_Handler
 279              		.syntax unified
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 10


 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv4-sp-d16
 284              	_Error_Handler:
 285              	.LFB129:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** void _Error_Handler(const char *file, size_t line)
 221:Core/Src/main.c **** {
 286              		.loc 1 221 0
 287              		.cfi_startproc
 288              		@ Volatile: function does not return.
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292              	.LVL28:
 293              	.L15:
 294 0000 FEE7     		b	.L15
 295              		.cfi_endproc
 296              	.LFE129:
 298              		.section	.text.assert_failed,"ax",%progbits
 299              		.align	1
 300              		.global	assert_failed
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	assert_failed:
 307              	.LFB130:
 222:Core/Src/main.c ****         /* USER CODE BEGIN Error_Handler_Debug */
 223:Core/Src/main.c ****         /* User can add his own implementation to report the HAL error return state */
 224:Core/Src/main.c ****         while (1)
 225:Core/Src/main.c ****         {
 226:Core/Src/main.c ****         }
 227:Core/Src/main.c ****         /* USER CODE END Error_Handler_Debug */
 228:Core/Src/main.c **** }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** #ifdef USE_FULL_ASSERT
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 233:Core/Src/main.c ****   *         where the assert_param error has occurred.
 234:Core/Src/main.c ****   * @param  file: pointer to the source file name
 235:Core/Src/main.c ****   * @param  line: assert_param error line source number
 236:Core/Src/main.c ****   * @retval None
 237:Core/Src/main.c ****   * */
 238:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 239:Core/Src/main.c **** {
 308              		.loc 1 239 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313              	.LVL29:
 240:Core/Src/main.c ****         /* USER CODE BEGIN 6 */
 241:Core/Src/main.c ****         /* User can add his own implementation to report the file name and line number,
 242:Core/Src/main.c ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 243:Core/Src/main.c ****         /* USER CODE END 6 */
 244:Core/Src/main.c **** }
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 11


 314              		.loc 1 244 0
 315 0000 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE130:
 319              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 320              		.align	2
 321              	.LC0:
 322 0000 57454C43 		.ascii	"WELCOME \000"
 322      4F4D4520 
 322      00
 323              		.text
 324              	.Letext0:
 325              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 326              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 327              		.file 4 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Include/core
 328              		.file 5 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 329              		.file 6 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/CMSIS/Device/ST/ST
 330              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 331              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 332              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 333              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 334              		.file 11 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 335              		.file 12 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 336              		.file 13 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 337              		.file 14 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 338              		.file 15 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 339              		.file 16 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 340              		.file 17 "Core/Inc\\periphs/tim.h"
 341              		.file 18 "Core/Inc\\periphs/usart.h"
 342              		.file 19 "Core/Inc/feed_forward.h"
 343              		.file 20 "Core/Inc/pneumatic.h"
 344              		.file 21 "Core/Inc/interrupt.h"
 345              		.file 22 "Core/Inc/encoder.h"
 346              		.file 23 "Core/Inc/motor.h"
 347              		.file 24 "Core/Inc/pid.h"
 348              		.file 25 "Core/Inc/fsm.h"
 349              		.file 26 "Core/Inc/robo_init.h"
 350              		.file 27 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 351              		.file 28 "Core/Inc\\periphs/gpio.h"
 352              		.file 29 "<built-in>"
 353              		.file 30 "C:/Users/Prashant/STM32Cube/Repository/STM32Cube_FW_F4_V1.21.0/Drivers/STM32F4xx_HAL_Dri
 354              		.file 31 "Core/Inc/fsm_tasks.h"
ARM GAS  C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:18     .text.SystemClock_Config:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:131    .text.SystemClock_Config:0000008c $d
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:137    .text.main:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:144    .text.main:00000000 main
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:250    .text.main:0000007c $d
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:257    .text.Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:264    .text.Error_Handler:00000000 Error_Handler
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:277    .text._Error_Handler:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:284    .text._Error_Handler:00000000 _Error_Handler
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:299    .text.assert_failed:00000000 $t
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:306    .text.assert_failed:00000000 assert_failed
C:\Users\Prashant\AppData\Local\Temp\ccnFysDF.s:320    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GetTick
HAL_Init
MX_GPIO_Init
MX_TIM8_Init
MX_TIM1_Init
MX_TIM3_Init
MX_TIM4_Init
MX_TIM2_Init
MX_USART3_UART_Init
MX_TIM5_Init
roboInit
puts
HAL_GPIO_ReadPin
startFSM
updateOmegas
fsm
